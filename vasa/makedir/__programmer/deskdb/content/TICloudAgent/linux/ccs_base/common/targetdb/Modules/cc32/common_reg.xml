<?xml version="1.0" encoding="UTF-8"?>
<module id="common_reg" HW_revision="">
    <register id="I2C_PROPERTIES_REGISTER" width="32" offset="0x0" description="">
        <bitfield id="COMMON_REG_I2C_Properties_Register_I2C_Properties_Register" description="Each semaphore register is of 2 bit.  When this register is set to 2b01  Apps have access and when set to 2b10  NW have access.  Ideally both the master can modify any of this 2 bit, but assumption apps will write only 2b01 or 2b00 to this register and nw will write only 2b10 or 2b00.  Implementation is when any of the bit of this register is set, only next write allowedvis 2b00  Again assumption is one master will not write 2b00 if other is already holding the semaphore." begin="1" end="0" width="2" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="SPI_PROPERTIES_REGISTER" width="32" offset="0x4" description="">
        <bitfield id="COMMON_REG_SPI_Properties_Register_SPI_Properties_Register" description="Each semaphore register is of 2 bit.  When this register is set to 2b01  Apps have access and when set to 2b10  NW have access.  Ideally both the master can modify any of this 2 bit, but assumption apps will write only 2b01 or 2b00 to this register and nw will write only 2b10 or 2b00.  Implementation is when any of the bit of this register is set, only next write allowedvis 2b00  Again assumption is one master will not write 2b00 if other is already holding the semaphore." begin="1" end="0" width="2" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="APPS_SH_RESOURCE_INTERRUPT_ENABLE" width="32" offset="0xC" description="">
        <bitfield id="COMMON_REG_APPS_sh_resource_Interrupt_enable_APPS_sh_resource_Interrupt_enable" description="Interrupt enable APPS bit 0 -&gt; when '1' enable I2C interrupt bit 1 -&gt; when '1' enable SPI interrupt bit 3 -&gt; when '1' enable GPIO interrupt" begin="3" end="0" width="4" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="APPS_SH_RESOURCE_INTERRUPT_STATUS" width="32" offset="0x10" description="">
        <bitfield id="COMMON_REG_APPS_sh_resource_Interrupt_status_APPS_sh_resource_Interrupt_status" description="Interrupt enable APPS bit 0 -&gt; when '1' enable I2C interrupt bit 1 -&gt; when '1' enable SPI interrupt bit 3 -&gt; when '1' enable GPIO interrupt" begin="3" end="0" width="4" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="NWP_SH_RESOURCE_INTERRUPT_ENABLE" width="32" offset="0x14" description="">
        <bitfield id="COMMON_REG_NWP_sh_resource_Interrupt_enable_NWP_sh_resource_Interrupt_enable" description="Interrupt enable NWP bit 0 -&gt; when '1' enable I2C interrupt bit 1 -&gt; when '1' enable SPI interrupt bit 3 -&gt; when '1' enable GPIO interrupt" begin="3" end="0" width="4" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="NWP_SH_RESOURCE_INTERRUPT_STATUS" width="32" offset="0x18" description="">
        <bitfield id="COMMON_REG_NWP_sh_resource_Interrupt_status_NWP_sh_resource_Interrupt_status" description="Interrupt enable NWP bit 0 -&gt; when '1' enable I2C interrupt bit 1 -&gt; when '1' enable SPI interrupt bit 3 -&gt; when '1' enable GPIO interrupt" begin="3" end="0" width="4" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="FLASH_CTRL_REG" width="32" offset="0x1C" description="">
        <bitfield id="COMMON_REG_Flash_ctrl_reg_Flash_ctrl_reg" description="Each semaphore register is of 2 bit.  When this register is set to 2b01  Apps have access and when set to 2b10  NW have access.  Ideally both the master can modify any of this 2 bit, but assumption apps will write only 2b01 or 2b00 to this register and nw will write only 2b10 or 2b00.  Implementation is when any of the bit of this register is set, only next write allowedvis 2b00  Again assumption is one master will not write 2b00 if other is already holding the semaphore." begin="1" end="0" width="2" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="BUS_MATRIX_M0_SEGMENT_ACCESS_CONFIG" width="32" offset="0x24" description="">
        <bitfield id="COMMON_REG_Bus_matrix_M0_segment_access_config_Bus_matrix_M0_segment_access_config" description="Master 0 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable." begin="17" end="0" width="18" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="BUS_MATRIX_M1_SEGMENT_ACCESS_CONFIG" width="32" offset="0x28" description="">
        <bitfield id="COMMON_REG_Bus_matrix_M1_segment_access_config_Bus_matrix_M1_segment_access_config" description="Master 1 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable." begin="17" end="0" width="18" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="BUS_MATRIX_M2_SEGMENT_ACCESS_CONFIG" width="32" offset="0x2C" description="">
        <bitfield id="COMMON_REG_Bus_matrix_M2_segment_access_config_Bus_matrix_M2_segment_access_config" description="Master 2 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable." begin="17" end="0" width="18" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="BUS_MATRIX_M3_SEGMENT_ACCESS_CONFIG" width="32" offset="0x30" description="">
        <bitfield id="COMMON_REG_Bus_matrix_M3_segment_access_config_Bus_matrix_M3_segment_access_config" description="Master 3 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable." begin="17" end="0" width="18" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="BUS_MATRIX_M4_SEGMENT_ACCESS_CONFIG" width="32" offset="0x34" description="">
        <bitfield id="COMMON_REG_Bus_matrix_M4_segment_access_config_Bus_matrix_M4_segment_access_config" description="Master 4 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable." begin="17" end="0" width="18" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="BUS_MATRIX_M5_SEGMENT_ACCESS_CONFIG" width="32" offset="0x38" description="">
        <bitfield id="COMMON_REG_Bus_matrix_M5_segment_access_config_Bus_matrix_M5_segment_access_config" description="Master 5 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable." begin="17" end="0" width="18" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="GPIO_PROPERTIES_REGISTER" width="32" offset="0x3C" description="">
        <bitfield id="COMMON_REG_GPIO_properties_register_GPIO_properties_register" description="Shared GPIO configuration register. Bit [1:0] to configure GPIO0 Bit [3:2] to configure GPIO1 Bit [5:4] to configure GPIO2 Bit [7:6] to configure GPIO3 Bit [9:8] to configure GPIO4 each GPIO can be individully selected. When 00? GPIO is free resource. When 01? GPIO is APPS resource. When 10? GPIO is NWP resource. Writing 11 doesnt have any affect, i.e. If one write only relevant gpio semaphore and other bits are 1s, it'll not disturb the other semaphore bits. For example : Say If NW wants to take control of gpio-1, one should write 10'b11_1111_1011 and if one wants to release it write 10'b11_1111_0011." begin="9" end="0" width="10" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="APPS_NW_SEMAPHORE1" width="32" offset="0x40" description="">
    </register>
    <register id="APPS_NW_SEMAPHORE2" width="32" offset="0x44" description="">
    </register>
    <register id="APPS_NW_SEMAPHORE3" width="32" offset="0x48" description="">
    </register>
    <register id="APPS_NW_SEMAPHORE4" width="32" offset="0x4C" description="">
    </register>
    <register id="APPS_NW_SEMAPHORE5" width="32" offset="0x50" description="">
    </register>
    <register id="APPS_NW_SEMAPHORE6" width="32" offset="0x54" description="">
    </register>
    <register id="APPS_NW_SEMAPHORE7" width="32" offset="0x58" description="">
    </register>
    <register id="APPS_NW_SEMAPHORE8" width="32" offset="0x5C" description="">
    </register>
    <register id="APPS_NW_SEMAPHORE9" width="32" offset="0x60" description="">
    </register>
    <register id="APPS_NW_SEMAPHORE10" width="32" offset="0x64" description="">
    </register>
    <register id="APPS_NW_SEMAPHORE11" width="32" offset="0x68" description="">
    </register>
    <register id="APPS_NW_SEMAPHORE12" width="32" offset="0x6C" description="">
    </register>
    <register id="APPS_SEMAPPHORE_PEND" width="32" offset="0x70" description="">
    </register>
    <register id="NW_SEMAPPHORE_PEND" width="32" offset="0x74" description="">
    </register>
    <register id="SEMAPHORE_STATUS" width="32" offset="0x78" description="">
    </register>
    <register id="IDMEM_TIM_UPDATE" width="32" offset="0x7C" description="">
    </register>
    <register id="FPGA_ROM_WR_EN" width="32" offset="0x80" description="">
    </register>
    <register id="NW_INT_MASK" width="32" offset="0x84" description="">
    </register>
    <register id="NW_INT_MASK_SET" width="32" offset="0x88" description="">
    </register>
    <register id="NW_INT_MASK_CLR" width="32" offset="0x8C" description="">
    </register>
    <register id="NW_INT_STS_CLR" width="32" offset="0x90" description="">
    </register>
    <register id="NW_INT_ACK" width="32" offset="0x94" description="">
    </register>
    <register id="NW_INT_TRIG" width="32" offset="0x98" description="">
    </register>
    <register id="NW_INT_STS_MASKED" width="32" offset="0x9C" description="">
    </register>
    <register id="NW_INT_STS_RAW" width="32" offset="0xA0" description="">
    </register>
    <register id="APPS_INT_MASK" width="32" offset="0xA4" description="">
    </register>
    <register id="APPS_INT_MASK_SET" width="32" offset="0xA8" description="">
    </register>
    <register id="APPS_INT_MASK_CLR" width="32" offset="0xAC" description="">
    </register>
    <register id="APPS_INT_STS_CLR" width="32" offset="0xB0" description="">
    </register>
    <register id="APPS_INT_ACK" width="32" offset="0xB4" description="">
    </register>
    <register id="APPS_INT_TRIG" width="32" offset="0xB8" description="">
    </register>
    <register id="APPS_INT_STS_MASKED" width="32" offset="0xBC" description="">
    </register>
    <register id="APPS_INT_STS_RAW" width="32" offset="0xC0" description="">
    </register>
    <register id="IDMEM_TIM_UPDATED" width="32" offset="0xC4" description="">
    </register>
    <register id="APPS_GPIO_TRIG_EN" width="32" offset="0xC8" description="">
        <bitfield id="APPS_GPIO_TRIG_EN" description="APPS GPIO Trigger EN control. Bit 0: when '1' enable GPIO 0 trigger. This bit enables trigger for all GPIO 0 pins (GPIO 0 to GPIO7). Bit 1: when '1' enable GPIO 1 trigger. This bit enables trigger for all GPIO 1 pins ( GPIO8 to GPIO15). Bit 2: when '1' enable GPIO 2 trigger. This bit enables trigger for all GPIO 2 pins (GPIO16 to GPIO23). Bit 3: when '1' enable GPIO 3 trigger. This bit enables trigger for all GPIO 3 pins (GPIO24 to GPIO31). Bit 4: when '1' enable GPIO 4 trigger. This bit enables trigger for all GPIO 4 pins.(GPIO32 to GPIO39)" begin="4" end="0" width="5" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="EMU_DEBUG_REG" width="32" offset="0xCC" description="">
    </register>
    <register id="SEMAPHORE_STATUS2" width="32" offset="0xD0" description="">
        <bitfield id="SEMPAPHORE_STATUS2" description="SEMAPHORE STATUS 23:22 :semaphore status of apps_nw_semaphore11 21:20 :semaphore status of apps_nw_semaphore11 19:18 :semaphore status of apps_nw_semaphore10 17:16 :semaphore status of apps_nw_semaphore9 15:14 :semaphore status of apps_nw_semaphore8 13:12 :semaphore status of apps_nw_semaphore7 11:10 :semaphore status of apps_nw_semaphore6 9:8 :semaphore status of apps_nw_semaphore5 7:6 :semaphore status of apps_nw_semaphore4 5:4 :semaphore status of apps_nw_semaphore3 3:2 :semaphore status of apps_nw_semaphore2 1:0 :semaphore status of apps_nw_semaphore1" begin="23" end="0" width="24" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="SEMAPHORE_PREV_OWNER1" width="32" offset="0xD4" description="">
        <bitfield id="SEMAPHORE_PREV_OWNER1" description="1:0 : prvious owner of i2c_properties_reg[1:0] 3:2 : prvious owner of spi_properties_reg[1:0] 5:4 : prvious owner of gpio_properties_reg[1:0] 9:8 : prvious owner of gpio_properties_reg[3:2] 11:10 : prvious owner of gpio_properties_reg[5:4] 13:12 : prvious owner of gpio_properties_reg[7:6] 15:14 : prvious owner of gpio_properties_reg[9:8] 17:16 : prvious owner of flash_control_reg[1:0]" begin="17" end="0" width="18" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="SEMAPHORE_PREV_OWNER2" width="32" offset="0xD8" description="">
        <bitfield id="SEMAPHORE_PREV_OWNER2" description="1:0 : previous owner of apps_nw_semaphore1_reg[1:0] 3:2 : previous owner of apps_nw_semaphore2_reg[1:0] 5:4 : previous owner of apps_nw_semaphore3_reg[1:0] 7:6 : previous owner of apps_nw_semaphore4_reg[1:0] 9:8 : previous owner of apps_nw_semaphore5_reg[1:0] 11:10 : previous owner of apps_nw_semaphore6_reg[1:0] 13:12 : previous owner of apps_nw_semaphore7_reg[1:0] 15:14 : previous owner of apps_nw_semaphore8_reg[1:0] 17:16 : previous owner of apps_nw_semaphore9_reg[1:0] 19:18 : previous owner of apps_nw_semaphore10_reg[1:0] 21:20 : previous owner of apps_nw_semaphore11_reg[1:0] 23:22 : previous owner of apps_nw_semaphore12_reg[1:0]" begin="23" end="0" width="24" rwaccess="R/W">
        </bitfield>
    </register>
</module>
