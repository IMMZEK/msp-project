<module name="MMU1 (Camera MMU)" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="MMU_REVISION" acronym="MMU_REVISION" offset="0x0" width="32" description="This register contains the IP revision code.">
    <bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="REV" width="8" begin="7" end="0" resetval="See" description="IP revision[7:4]: Major revision [3:0]: Minor revision Examples: 0x10 for 1.0, 0x21 for 2.1" range="" rwaccess="R"/>
  </register>
  <register id="MMU_SYSCONFIG" acronym="MMU_SYSCONFIG" offset="0x10" width="32" description="This register contains the various parameters of the interconnect interface.">
    <bitfield id="Reserved" width="22" begin="31" end="10" resetval="0x000000" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
    <bitfield id="CLOCKACTIVITY" width="2" begin="9" end="8" resetval="0x0" description="Clock activity during wake-up modeRead 0x0: Functional and interconnect clocks can be switched off. Read 0x1, 0x2, 0x3: never happens. Write 0s for future compatibility." range="" rwaccess="R"/>
    <bitfield id="Reserved" width="3" begin="7" end="5" resetval="0x0" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
    <bitfield id="IDLEMODE" width="2" begin="4" end="3" resetval="0x0" description="Idle mode" range="" rwaccess="RW">
      <bitenum value="0" token="IDLEMODE_0" description="Force idle. Idle request is acknowledged unconditionally."/>
      <bitenum value="1" token="IDLEMODE_1" description="No idle. Idle request is never acknowledged."/>
      <bitenum value="2" token="IDLEMODE_2" description="Smart idle. Acknowledgement to an idle request is given based on the internal activity of the module."/>
      <bitenum value="3" token="IDLEMODE_3" description="Reserved - Do not use"/>
    </bitfield>
    <bitfield id="Reserved" width="1" begin="2" end="2" resetval="0" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
    <bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0" description="Software reset. This bit is automatically reset by the hardware. During reads, it always returns 0." range="" rwaccess="RW">
      <bitenum value="0" token="SOFTRESET_0_r" description="Always returns 0"/>
      <bitenum value="0" token="SOFTRESET_0_w" description="No functional effect"/>
      <bitenum value="1" token="SOFTRESET_1_r" description="Never happens"/>
      <bitenum value="1" token="SOFTRESET_1_w" description="The module is reset."/>
    </bitfield>
    <bitfield id="AUTOIDLE" width="1" begin="0" end="0" resetval="0" description="Internal interconnect clock gating strategy" range="" rwaccess="RW">
      <bitenum value="0" token="AUTOIDLE_0" description="Interconnect clock is free-running."/>
      <bitenum value="1" token="AUTOIDLE_1" description="Automatic interconnect clock gating strategy is applied, based on the interconnect interface activity."/>
    </bitfield>
  </register>
  <register id="MMU_SYSSTATUS" acronym="MMU_SYSSTATUS" offset="0x14" width="32" description="This register provides status information about the module, excluding the interrupt status information.">
    <bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="Reserved" width="7" begin="7" end="1" resetval="0x00" description="Reads return 0.Reserved for interconnect-socket status information" range="" rwaccess="R"/>
    <bitfield id="RESETDONE" width="1" begin="0" end="0" resetval="-" description="Internal reset monitoring" range="" rwaccess="R">
      <bitenum value="0" token="RESETDONE_0" description="Internal module reset in ongoing."/>
      <bitenum value="1" token="RESETDONE_1" description="Reset completed"/>
    </bitfield>
  </register>
  <register id="MMU_IRQSTATUS" acronym="MMU_IRQSTATUS" offset="0x18" width="32" description="This interrupt status register regroups all the status of the module internal events that can generate an interrupt.">
    <bitfield id="Reserved" width="27" begin="31" end="5" resetval="0x0000000" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
    <bitfield id="MULTIHITFAULT" width="1" begin="4" end="4" resetval="0" description="Error due to multiple matches in the TLB" range="" rwaccess="RW">
      <bitenum value="0" token="MULTIHITFAULT_0_r" description="MultiHitFault false"/>
      <bitenum value="0" token="MULTIHITFAULT_0_w" description="MultiHitFault status bit unchanged"/>
      <bitenum value="1" token="MULTIHITFAULT_1_r" description="MultiHitFault is true (pending)"/>
      <bitenum value="1" token="MULTIHITFAULT_1_w" description="TableWalkFault status bit is reset"/>
    </bitfield>
    <bitfield id="TABLEWALKFAULT" width="1" begin="3" end="3" resetval="0" description="Error response received during a table walk" range="" rwaccess="RW">
      <bitenum value="0" token="TABLEWALKFAULT_0_r" description="TableWalkFault false"/>
      <bitenum value="0" token="TABLEWALKFAULT_0_w" description="TableWalkFault status bit unchanged"/>
      <bitenum value="1" token="TABLEWALKFAULT_1_r" description="TableWalkFault is true (pending)"/>
      <bitenum value="1" token="TABLEWALKFAULT_1_w" description="TableWalkFault status bit is reset"/>
    </bitfield>
    <bitfield id="EMUMISS" width="1" begin="2" end="2" resetval="0" description="Unrecoverable TLB miss during debug (hardware TWL disabled)" range="" rwaccess="RW">
      <bitenum value="0" token="EMUMISS_0_r" description="EMUMiss false"/>
      <bitenum value="0" token="EMUMISS_0_w" description="EMUMiss status bit unchanged"/>
      <bitenum value="1" token="EMUMISS_1_r" description="EMUMiss is true (pending)"/>
      <bitenum value="1" token="EMUMISS_1_w" description="EMUMiss status bit is reset"/>
    </bitfield>
    <bitfield id="TRANSLATIONFAULT" width="1" begin="1" end="1" resetval="0" description="Invalid descriptor in translation tables (translation fault)" range="" rwaccess="RW">
      <bitenum value="0" token="TRANSLATIONFAULT_0_r" description="TranslationFault false"/>
      <bitenum value="0" token="TRANSLATIONFAULT_0_w" description="TranslationFault status bit unchanged"/>
      <bitenum value="1" token="TRANSLATIONFAULT_1_r" description="TranslationFault is true (pending)"/>
      <bitenum value="1" token="TRANSLATIONFAULT_1_w" description="TranslationFault status bit is reset"/>
    </bitfield>
    <bitfield id="TLBMISS" width="1" begin="0" end="0" resetval="0" description="Unrecoverable TLB miss (hardware TWL disabled)" range="" rwaccess="RW">
      <bitenum value="0" token="TLBMISS_0_r" description="TLBMiss false"/>
      <bitenum value="0" token="TLBMISS_0_w" description="TLBMiss status bit unchanged"/>
      <bitenum value="1" token="TLBMISS_1_r" description="TLBMiss is true (pending)"/>
      <bitenum value="1" token="TLBMISS_1_w" description="TLBMiss status bit is reset"/>
    </bitfield>
  </register>
  <register id="MMU_IRQENABLE" acronym="MMU_IRQENABLE" offset="0x1C" width="32" description="The interrupt enable register allows the module's internal sources of interrupt to be masked and unmasked on an event-by-event basis..">
    <bitfield id="Reserved" width="27" begin="31" end="5" resetval="0x0000000" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
    <bitfield id="MULTIHITFAULT" width="1" begin="4" end="4" resetval="0" description="Error due to multiple matches in the TLB" range="" rwaccess="RW">
      <bitenum value="0" token="MULTIHITFAULT_0" description="MultiHitFault interrupt is masked"/>
      <bitenum value="1" token="MULTIHITFAULT_1" description="MultiHitFault event generates an interrupt if occurs"/>
    </bitfield>
    <bitfield id="TABLEWALKFAULT" width="1" begin="3" end="3" resetval="0" description="Error response received during a table walk" range="" rwaccess="RW">
      <bitenum value="0" token="TABLEWALKFAULT_0" description="TableWalkFault interrupt is masked"/>
      <bitenum value="0" token="TABLEWALKFAULT_0" description="TableWalkFault event generates an interrupt if occurs"/>
    </bitfield>
    <bitfield id="EMUMISS" width="1" begin="2" end="2" resetval="0" description="Unrecoverable TLB miss during debug (hardware TWL disabled)" range="" rwaccess="RW">
      <bitenum value="0" token="EMUMISS_0" description="EMUMiss interrupt is masked"/>
      <bitenum value="1" token="EMUMISS_1" description="EMUMiss event generates an interrupt if occurs"/>
    </bitfield>
    <bitfield id="TRANSLATIONFAULT" width="1" begin="1" end="1" resetval="0" description="Invalid descriptor in translation tables (translation fault)" range="" rwaccess="RW">
      <bitenum value="0" token="TRANSLATIONFAULT_0" description="TranslationFault interrupt is masked"/>
      <bitenum value="1" token="TRANSLATIONFAULT_1" description="TranslationFault generates an interrupt if occurs"/>
    </bitfield>
    <bitfield id="TLBMISS" width="1" begin="0" end="0" resetval="0" description="Unrecoverable TLB miss (hardware TWL disabled)" range="" rwaccess="RW">
      <bitenum value="0" token="TLBMISS_0" description="TLBMiss interrupt is masked"/>
      <bitenum value="1" token="TLBMISS_1" description="TLBMiss event generates an interrupt if occurs"/>
    </bitfield>
  </register>
  <register id="MMU_WALKING_ST" acronym="MMU_WALKING_ST" offset="0x40" width="32" description="This register provides status information about the table walking logic.">
    <bitfield id="Reserved" width="31" begin="31" end="1" resetval="0x00000000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="TWLRUNNING" width="1" begin="0" end="0" resetval="0" description="Table walking logic is running." range="" rwaccess="R">
      <bitenum value="0" token="TWLRUNNING_0" description="TWL completed"/>
      <bitenum value="1" token="TWLRUNNING_1" description="TWL running"/>
    </bitfield>
  </register>
  <register id="MMU_CNTL" acronym="MMU_CNTL" offset="0x44" width="32" description="This register programs the MMU features.">
    <bitfield id="Reserved" width="28" begin="31" end="4" resetval="0x0000000" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
    <bitfield id="EMUTLBUPDATE" width="1" begin="3" end="3" resetval="0" description="Enable TLB update on emulator table walk" range="" rwaccess="RW">
      <bitenum value="0" token="EMUTLBUPDATE_0" description="Emulator TLB update disabled"/>
      <bitenum value="1" token="EMUTLBUPDATE_1" description="Emulator TLB update enabled"/>
    </bitfield>
    <bitfield id="TWLENABLE" width="1" begin="2" end="2" resetval="0" description="Table walking logic enable" range="" rwaccess="RW">
      <bitenum value="0" token="TWLENABLE_0" description="TWL disabled"/>
      <bitenum value="0" token="TWLENABLE_0" description="TWL enabled"/>
    </bitfield>
    <bitfield id="MMUENABLE" width="1" begin="1" end="1" resetval="0" description="MMU enable" range="" rwaccess="RW">
      <bitenum value="0" token="MMUENABLE_0" description="MMU disabled"/>
      <bitenum value="1" token="MMUENABLE_1" description="MMU enabled"/>
    </bitfield>
    <bitfield id="Reserved" width="1" begin="0" end="0" resetval="0" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
  </register>
  <register id="MMU_FAULT_AD" acronym="MMU_FAULT_AD" offset="0x48" width="32" description="This register contains the virtual address that generated the interrupt.">
    <bitfield id="FAULTADDRESS" width="32" begin="31" end="0" resetval="0x00000000" description="Virtual address of the access that generated a fault" range="" rwaccess="R"/>
  </register>
  <register id="MMU_TTB" acronym="MMU_TTB" offset="0x4C" width="32" description="This register contains the resolution table base address.">
    <bitfield id="TTBADDRESS" width="25" begin="31" end="7" resetval="0x0000000" description="Translation table base address" range="" rwaccess="RW"/>
    <bitfield id="Reserved" width="7" begin="6" end="0" resetval="0x00" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
  </register>
  <register id="MMU_LOCK" acronym="MMU_LOCK" offset="0x50" width="32" description="This register locks some of the TLB entries or specifies the TLB entry to be read.">
    <bitfield id="Reserved" width="17" begin="31" end="15" resetval="0x00000" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
    <bitfield id="BASEVALUE" width="5" begin="14" end="10" resetval="0x00" description="Locked entries base valueNote: In the Camera MMU instance, BASEVALUE is a 3-bit field, ie. bits 13 and 14 are reserved." range="" rwaccess="RW"/>
    <bitfield id="Reserved" width="1" begin="9" end="9" resetval="0" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
    <bitfield id="CURRENTVICTIM" width="5" begin="8" end="4" resetval="0x00" description="Current entry to be updated either by the TWL or by the software or TLB entry to be readNote: In the Camera MMU instance, CURRENTVICTIM is a 3-bit field, ie. bits 7 and 8 are reserved.Write value: TLB entry to be updated by software or TLB entry to be readRead value: TLB entry to be updated by table walk logic" range="" rwaccess="RW"/>
    <bitfield id="Reserved" width="4" begin="3" end="0" resetval="0x0" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
  </register>
  <register id="MMU_LD_TLB" acronym="MMU_LD_TLB" offset="0x54" width="32" description="This register loads a TLB entry (CAM+RAM).">
    <bitfield id="Reserved" width="31" begin="31" end="1" resetval="0x00000000" description="Reads return 0. Write 0s for future compatibility" range="" rwaccess="R"/>
    <bitfield id="LDTLBITEM" width="1" begin="0" end="0" resetval="0" description="Write (load) data in the TLB" range="" rwaccess="RW">
      <bitenum value="0" token="LDTLBITEM_0_r" description="Always returns 0"/>
      <bitenum value="0" token="LDTLBITEM_0_w" description="No functional effect"/>
      <bitenum value="1" token="LDTLBITEM_1_r" description="Never happens"/>
      <bitenum value="1" token="LDTLBITEM_1_w" description="Load TLB data"/>
    </bitfield>
  </register>
  <register id="MMU_CAM" acronym="MMU_CAM" offset="0x58" width="32" description="This register holds a CAM entry.">
    <bitfield id="VATAG" width="20" begin="31" end="12" resetval="0x00000" description="Virtual address tag" range="" rwaccess="RW"/>
    <bitfield id="Reserved" width="8" begin="11" end="4" resetval="0x00" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
    <bitfield id="P" width="1" begin="3" end="3" resetval="0" description="Preserved bit" range="" rwaccess="RW">
      <bitenum value="0" token="P_0" description="TLB entry can be flushed"/>
      <bitenum value="1" token="P_1" description="TLB entry is protected against flush"/>
    </bitfield>
    <bitfield id="V" width="1" begin="2" end="2" resetval="0" description="Valid bit" range="" rwaccess="RW">
      <bitenum value="0" token="V_0" description="TLB entry is invalid"/>
      <bitenum value="1" token="V_1" description="TLB entry is valid"/>
    </bitfield>
    <bitfield id="PAGESIZE" width="2" begin="1" end="0" resetval="0x0" description="Page size" range="" rwaccess="RW">
      <bitenum value="0" token="PAGESIZE_0" description="Section (1MB)"/>
      <bitenum value="1" token="PAGESIZE_1" description="Large page (64KB)"/>
      <bitenum value="2" token="PAGESIZE_2" description="Small page (4KB)"/>
      <bitenum value="3" token="PAGESIZE_3" description="Supersection (16MB)"/>
    </bitfield>
  </register>
  <register id="MMU_RAM" acronym="MMU_RAM" offset="0x5C" width="32" description="This register holds a RAM entry.">
    <bitfield id="PHYSICALADDRESS" width="20" begin="31" end="12" resetval="0x00000" description="Physical address of the page" range="" rwaccess="RW"/>
    <bitfield id="Reserved" width="2" begin="11" end="10" resetval="0x0" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
    <bitfield id="ENDIANNESS" width="1" begin="9" end="9" resetval="0" description="Endianness of the page" range="" rwaccess="RW">
      <bitenum value="0" token="ENDIANNESS_0" description="Little endian"/>
      <bitenum value="1" token="ENDIANNESS_1" description="Big endian -must not be used (locked on little endian)"/>
    </bitfield>
    <bitfield id="ELEMENTSIZE" width="2" begin="8" end="7" resetval="0x0" description="Element size of the page (8, 16, 32, no translation)" range="" rwaccess="RW">
      <bitenum value="0" token="ELEMENTSIZE_0" description="8 bits"/>
      <bitenum value="1" token="ELEMENTSIZE_1" description="16 bits"/>
      <bitenum value="2" token="ELEMENTSIZE_2" description="32 bits"/>
      <bitenum value="3" token="ELEMENTSIZE_3" description="No translation"/>
    </bitfield>
    <bitfield id="MIXED" width="1" begin="6" end="6" resetval="0" description="Mixed page attribute (use CPU element size)" range="" rwaccess="RW">
      <bitenum value="0" token="MIXED_0" description="Use TLB element size"/>
      <bitenum value="1" token="MIXED_1" description="Use CPU element size"/>
    </bitfield>
    <bitfield id="Reserved" width="6" begin="5" end="0" resetval="0x00" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
  </register>
  <register id="MMU_GFLUSH" acronym="MMU_GFLUSH" offset="0x60" width="32" description="This register flushes all the non-protected TLB entries.">
    <bitfield id="Reserved" width="31" begin="31" end="1" resetval="0x00000000" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="RW"/>
    <bitfield id="GLOBALFLUSH" width="1" begin="0" end="0" resetval="0" description="Flush all the non-protected TLB entries when set" range="" rwaccess="RW">
      <bitenum value="0" token="GLOBALFLUSH_0_r" description="Always returns 0"/>
      <bitenum value="0" token="GLOBALFLUSH_0_w" description="No functional effect"/>
      <bitenum value="1" token="GLOBALFLUSH_1_r" description="Never happens"/>
      <bitenum value="1" token="GLOBALFLUSH_1_w" description="Flush all the non-protected TLB entries"/>
    </bitfield>
  </register>
  <register id="MMU_FLUSH_ENTRY" acronym="MMU_FLUSH_ENTRY" offset="0x64" width="32" description="This register flushes the entry pointed to by the CAM virtual address.">
    <bitfield id="Reserved" width="31" begin="31" end="1" resetval="0x00000000" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="RW"/>
    <bitfield id="FLUSHENTRY" width="1" begin="0" end="0" resetval="0" description="Flush the TLB entry pointed by the virtual address (VATag) inMMU_CAM register, even if this entry is set protected" range="" rwaccess="RW">
      <bitenum value="0" token="FLUSHENTRY_0_r" description="Always returns 0"/>
      <bitenum value="0" token="FLUSHENTRY_0_w" description="No functional effect"/>
      <bitenum value="1" token="FLUSHENTRY_1_r" description="Never happens"/>
      <bitenum value="1" token="FLUSHENTRY_1_w" description="Flush all the TLB entries specified by the CAM register"/>
    </bitfield>
  </register>
  <register id="MMU_READ_CAM" acronym="MMU_READ_CAM" offset="0x68" width="32" description="This register reads CAM data from a CAM entry.">
    <bitfield id="VATAG" width="20" begin="31" end="12" resetval="0x00000" description="Virtual address tag" range="" rwaccess="R"/>
    <bitfield id="Reserved" width="8" begin="11" end="4" resetval="0x00" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="P" width="1" begin="3" end="3" resetval="0" description="Preserved bit" range="" rwaccess="R">
      <bitenum value="0" token="P_0" description="TLB entry can be flushed"/>
      <bitenum value="1" token="P_1" description="TLB entry is protected against flush"/>
    </bitfield>
    <bitfield id="V" width="1" begin="2" end="2" resetval="0" description="Valid bit" range="" rwaccess="R">
      <bitenum value="0" token="V_0" description="TLB entry is invalid"/>
      <bitenum value="1" token="V_1" description="TLB entry is valid"/>
    </bitfield>
    <bitfield id="PAGESIZE" width="2" begin="1" end="0" resetval="0x0" description="Page size" range="" rwaccess="R">
      <bitenum value="0" token="PAGESIZE_0" description="Section (1MB)"/>
      <bitenum value="1" token="PAGESIZE_1" description="Large page (64KB)"/>
      <bitenum value="2" token="PAGESIZE_2" description="Small page (4KB)"/>
      <bitenum value="3" token="PAGESIZE_3" description="Supersection (16MB)"/>
    </bitfield>
  </register>
  <register id="MMU_READ_RAM" acronym="MMU_READ_RAM" offset="0x6C" width="32" description="This register reads RAM data from a RAM entry.">
    <bitfield id="PHYSICALADDRESS" width="20" begin="31" end="12" resetval="0x00000" description="Physical address of the page" range="" rwaccess="R"/>
    <bitfield id="Reserved" width="2" begin="11" end="10" resetval="0x0" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="ENDIANNESS" width="1" begin="9" end="9" resetval="0" description="Endianness of the page" range="" rwaccess="R">
      <bitenum value="0" token="ENDIANNESS_0" description="Little endian"/>
      <bitenum value="1" token="ENDIANNESS_1" description="Big endian -must not be used (locked on little endian)"/>
    </bitfield>
    <bitfield id="ELEMENTSIZE" width="2" begin="8" end="7" resetval="0x0" description="Element size of the page (8, 16, 32 bits or no translation)" range="" rwaccess="R">
      <bitenum value="0" token="ELEMENTSIZE_0" description="8 bits"/>
      <bitenum value="1" token="ELEMENTSIZE_1" description="16 bits"/>
      <bitenum value="2" token="ELEMENTSIZE_2" description="32 bits"/>
      <bitenum value="3" token="ELEMENTSIZE_3" description="No translation"/>
    </bitfield>
    <bitfield id="MIXED" width="1" begin="6" end="6" resetval="0" description="Mixed page attribute (use CPU element size)" range="" rwaccess="R">
      <bitenum value="0" token="MIXED_0" description="Use TLB element size"/>
      <bitenum value="1" token="MIXED_1" description="Use CPU element size"/>
    </bitfield>
    <bitfield id="Reserved" width="6" begin="5" end="0" resetval="0x00" description="Reads return 0. Write 0s for future compatibility." range="" rwaccess="R"/>
  </register>
  <register id="MMU_EMU_FAULT_AD" acronym="MMU_EMU_FAULT_AD" offset="0x70" width="32" description="This register contains the last virtual address of a fault caused by the debugger.">
    <bitfield id="EMUFAULTADDRESS" width="32" begin="31" end="0" resetval="0x00000000" description="Virtual address of the last emulator access that generated a fault" range="" rwaccess="R"/>
  </register>
</module>
