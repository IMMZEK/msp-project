<module name="UART_0" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="UART_RBR" acronym="UART_RBR" offset="0x0" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DATA" width="8" begin="7" end="0" resetval="0x0" description="Received data" range="" rwaccess="R"/>
  </register>
  <register id="UART_THR" acronym="UART_THR" offset="0x0" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DATA" width="8" begin="7" end="0" resetval="0x0" description="Data to transmit" range="" rwaccess="R"/>
  </register>
  <register id="UART_IER" acronym="UART_IER" offset="0x4" width="32" description="">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="EDSSI" width="1" begin="3" end="3" resetval="0x0" description="Modem status interrupt enable. 0 = Modem status interrupt is disabled. 1 = Modem status interrupt is enabled." range="" rwaccess="RW"/>
    <bitfield id="ELSI" width="1" begin="2" end="2" resetval="0x0" description="Receiver line status interrupt enable. 0 = Receiver line status interrupt is disabled. 1 = Receiver line status interrupt is enabled." range="" rwaccess="RW"/>
    <bitfield id="ETBEI" width="1" begin="1" end="1" resetval="0x0" description="Transmitter holding register empty interrupt enable. 0 = Transmitter holding register empty interrupt is disabled. 1 = Transmitter holding register empty interrupt is enabled." range="" rwaccess="RW"/>
    <bitfield id="ERBI" width="1" begin="0" end="0" resetval="0x0" description="Receiver data available interrupt and character timeout indication interrupt enable. 0 = Receiver data available interrupt and character timeout indication interrupt is disabled. 1 = Receiver data available interrupt and character timeout indication interrupt is enabled." range="" rwaccess="RW"/>
  </register>
  <register id="UART_FCR" acronym="UART_FCR" offset="0x8" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RXFIFTL" width="2" begin="7" end="6" resetval="0x0" description="Receiver FIFO trigger level. RXFIFTL sets the trigger level for the receiver FIFO. When the trigger level is reached, a receiver data-ready interrupt is generated (if the interrupt request is enabled). When the FIFO drops below the trigger level, the interrupt is cleared. 0h = 1 byte. 1h = 4 bytes. 2h = 8 bytes. 3h = 14 bytes." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="5" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DMAMODE1" width="1" begin="3" end="3" resetval="0x0" description="DMA MODE1 enable if FIFOs are enabled. 0 = DMA MODE1 is disabled. 1 = DMA MODE1 is enabled." range="" rwaccess="W"/>
    <bitfield id="TXCLR" width="1" begin="2" end="2" resetval="0x0" description="Transmitter FIFO clear. Write a 1 to TXCLR to clear the bit. 0 = No effect. 1 = Clears transmitter FIFO and resets the transmitter FIFO counter. The shift register is not cleared." range="" rwaccess="W1toCl"/>
    <bitfield id="RXCLR" width="1" begin="1" end="1" resetval="0x0" description="Receiver FIFO clear. Write a 1 to RXCLR to clear the bit. 0 = No effect. 1 = Clears receiver FIFO and resets the receiver FIFO counter. The shift register is not cleared." range="" rwaccess="W1toCl"/>
    <bitfield id="FIFOEN" width="1" begin="0" end="0" resetval="0x0" description="Transmitter and receiver FIFOs mode enable. FIFOEN must be set before other FCR bits are written to or the FCR bits are not programmed. Clearing this bit clears the FIFO counters. 0 = Non-FIFO mode. The transmitter and receiver FIFOs are disabled, and the FIFO pointers are cleared. 1 = FIFO mode. The transmitter and receiver FIFOs are enabled." range="" rwaccess="W"/>
  </register>
  <register id="UART_IIR" acronym="UART_IIR" offset="0x8" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="FIFOEN" width="2" begin="7" end="6" resetval="0x0" description="FIFOs enabled. 0h = Non-FIFO mode. 1h = Reserved. 2h = Reserved. 3h = FIFOs are enabled." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="5" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTID" width="3" begin="3" end="1" resetval="0x0" description="Interrupt type. See 0h = Modem status (priority 4, lowest). 1h = Transmitter holding register empty (priority 3). 2h = Receiver data available (priority 2). 3h = Receiver line status (priority 1, highest). 4h = Reserved. 5h = Reserved. 6h = Character timeout indication (priority 2). 7h = Reserved." range="" rwaccess="R"/>
    <bitfield id="IPEND" width="1" begin="0" end="0" resetval="0x1" description="Interrupt pending. When any UART interrupt is generated and is enabled in 0 = Interrupts pending. 1 = No interrupts pending." range="" rwaccess="R"/>
  </register>
  <register id="UART_LCR" acronym="UART_LCR" offset="0xC" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved." range="" rwaccess="R"/>
    <bitfield id="DLAB" width="1" begin="7" end="7" resetval="0x0" description="Divisor latch access bit. The divisor latch registers ( 0 = Allows access to the receiver buffer register ( 1 = Allows access to the divisor latches of the baud generator during a read or write operation (" range="" rwaccess="RW"/>
    <bitfield id="BC" width="1" begin="6" end="6" resetval="0x0" description="Break control. 0 = Break condition is disabled. 1 = Break condition is transmitted to the receiving UART. A break condition is a condition in which the TX signal is forced to the spacing (cleared) state." range="" rwaccess="RW"/>
    <bitfield id="SP" width="1" begin="5" end="5" resetval="0x0" description="Stick parity. The SP bit works in conjunction with the EPS and PEN bits. The relationship between the SP, EPS, and PEN bits is summarized in 0 = Stick parity is disabled. 1 = Stick parity is enabled. When odd parity is selected (EPS = 0), the PARITY bit is transmitted and checked as set. When even parity is selected (EPS = 1), the PARITY bit is transmitted and checked as cleared." range="" rwaccess="RW"/>
    <bitfield id="EPS" width="1" begin="4" end="4" resetval="0x0" description="Even parity select. Selects the parity when parity is enabled (PEN = 1). The EPS bit works in conjunction with the SP and PEN bits. The relationship between the SP, EPS, and PEN bits is summarized in 0 = Odd parity is selected (an odd number of logic 1s is transmitted or checked in the data and PARITY bits). 1 = Even parity is selected (an even number of logic 1s is transmitted or checked in the data and PARITY bits)." range="" rwaccess="RW"/>
    <bitfield id="PEN" width="1" begin="3" end="3" resetval="0x0" description="Parity enable. The PEN bit works in conjunction with the SP and EPS bits. The relationship between the SP, EPS, and PEN bits is summarized in 0 = No PARITY bit is transmitted or checked. 1 = Parity bit is generated in transmitted data and is checked in received data between the last data word bit and the first STOP bit." range="" rwaccess="RW"/>
    <bitfield id="STB" width="1" begin="2" end="2" resetval="0x0" description="Number of STOP bits generated. STB specifies 1, 1.5, or 2 STOP bits in each transmitted character. When STB = 1, the WLS bit determines the number of STOP bits. The receiver clocks only the first STOP bit, regardless of the number of STOP bits selected. The number of STOP bits generated is summarized in 0 = One STOP bit is generated. 1 = WLS bit determines the number of STOP bits:" range="" rwaccess="RW"/>
    <bitfield id="WLS" width="2" begin="1" end="0" resetval="0x0" description="Word length select. Number of bits in each transmitted or received serial character. When STB = 1, the WLS bit determines the number of STOP bits. 0h = 5 bits 1h = 6 bits 2h = 7 bits 3h = 8 bits" range="" rwaccess="RW"/>
  </register>
  <register id="UART_MCR" acronym="UART_MCR" offset="0x10" width="32" description="">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="AFE" width="1" begin="5" end="5" resetval="0x0" description="Autoflow control enable. Autoflow control allows the RTS and CTS signals to provide handshaking between UARTs during data transfer. When AFE = 1, the RTS bit determines the autoflow control enabled. 0 = Autoflow control is disabled. 1 = Autoflow control is enabled:" range="" rwaccess="RW"/>
    <bitfield id="LOOP" width="1" begin="4" end="4" resetval="0x0" description="Loopback mode enable. LOOP is used for the diagnostic testing using the loopback feature. 0 = Loopback mode is disabled. 1 = Loopback mode is enabled. When LOOP is set, the following occur:" range="" rwaccess="RW"/>
    <bitfield id="OUT2" width="1" begin="3" end="3" resetval="0x0" description="OUT2 Control Bit." range="" rwaccess="RW"/>
    <bitfield id="OUT1" width="1" begin="2" end="2" resetval="0x0" description="OUT1 Control Bit." range="" rwaccess="RW"/>
    <bitfield id="RTS" width="1" begin="1" end="1" resetval="0x0" description="RTS control. When AFE = 1, the RTS bit determines the autoflow control enabled. 0 = RTS is disabled, only CTS is enabled. 1 = RTS and CTS are enabled." range="" rwaccess="RW"/>
    <bitfield id="DTR" width="1" begin="0" end="0" resetval="0x0" description="Data terminal ready control bit." range="" rwaccess="RW"/>
  </register>
  <register id="UART_LSR" acronym="UART_LSR" offset="0x14" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RXFIFOE" width="1" begin="7" end="7" resetval="0x0" description="Receiver FIFO error. 0 = There has been no error, or RXFIFOE was cleared because the CPU read the erroneous character from the receiver buffer register ( 1 = There is a parity error, framing error, or break indicator in the receiver buffer register ( 0 = There has been no error, or RXFIFOE was cleared because the CPU read the erroneous character from the receiver FIFO and there are no more errors in the receiver FIFO. 1 = At least one parity error, framing error, or break indicator in the receiver FIFO." range="" rwaccess="R"/>
    <bitfield id="TEMT" width="1" begin="6" end="6" resetval="0x1" description="Transmitter empty (TEMT) indicator. 0 = Either the transmitter holding register ( 1 = Both the transmitter holding register ( 0 = Either the transmitter FIFO or the transmitter shift register (UART_TSR) contains a data character. 1 = Both the transmitter FIFO and the transmitter shift register (UART_TSR) are empty." range="" rwaccess="R"/>
    <bitfield id="THRE" width="1" begin="5" end="5" resetval="0x1" description="Transmitter holding register empty (THRE) indicator. If the THRE bit is set and the corresponding interrupt enable bit is set (ETBEI = 1 in 0 = Transmitter holding register ( 1 = Transmitter holding register ( 0 = Transmitter FIFO is not empty. At least one character has been written to the transmitter FIFO. The transmitter FIFO may be written to if it is not full. 1 = Transmitter FIFO is empty. The last character in the FIFO has been transferred to the transmitter shift register (UART_TSR)." range="" rwaccess="R"/>
    <bitfield id="BI" width="1" begin="4" end="4" resetval="0x0" description="Break indicator. The BI bit is set whenever the receive data input (RX) was held low for longer than a fullword transmission time. A full-word transmission time is defined as the total time to transmit the START, data, PARITY, and STOP bits. If the BI bit is set and the corresponding interrupt enable bit is set (ELSI = 1 in 0 = No break has been detected, or the BI bit was cleared because the CPU read the erroneous character from the receiver buffer register ( 1 = A break has been detected with the character in the receiver buffer register ( 0 = No break has been detected, or the BI bit was cleared because the CPU read the erroneous character from the receiver FIFO and the next character to be read from the FIFO has no break indicator. 1 = A break has been detected with the character at the top of the receiver FIFO." range="" rwaccess="R"/>
    <bitfield id="FE" width="1" begin="3" end="3" resetval="0x0" description="Framing error (FE) indicator. A framing error occurs when the received character does not have a valid STOP bit. In response to a framing error, the UART sets the FE bit and waits until the signal on the RX pin goes high. When the RX signal goes high, the receiver is ready to detect a new START bit and receive new data. If the FE bit is set and the corresponding interrupt enable bit is set (ELSI = 1 in 0 = No framing error has been detected, or the FE bit was cleared because the CPU read the erroneous data from the receiver buffer register ( 1 = A framing error has been detected with the character in the receiver buffer register ( 0 = No framing error has been detected, or the FE bit was cleared because the CPU read the erroneous data from the receiver FIFO and the next character to be read from the FIFO has no framing error. 1 = A framing error has been detected with the character at the top of the receiver FIFO." range="" rwaccess="R"/>
    <bitfield id="PE" width="1" begin="2" end="2" resetval="0x0" description="Parity error (PE) indicator. A parity error occurs when the parity of the received character does not match the parity selected with the EPS bit in the line control register ( 0 = No parity error has been detected, or the PE bit was cleared because the CPU read the erroneous data from the receiver buffer register ( 1 = A parity error has been detected with the character in the receiver buffer register ( 0 = No parity error has been detected, or the PE bit was cleared because the CPU read the erroneous data from the receiver FIFO and the next character to be read from the FIFO has no parity error. 1 = A parity error has been detected with the character at the top of the receiver FIFO." range="" rwaccess="R"/>
    <bitfield id="OE" width="1" begin="1" end="1" resetval="0x0" description="Overrun error (OE) indicator. An overrun error in the non-FIFO mode is different from an overrun error in the FIFO mode. If the OE bit is set and the corresponding interrupt enable bit is set (ELSI = 1 in 0 = No overrun error has been detected, or the OE bit was cleared because the CPU read the content of the line status register ( 1 = Overrun error has been detected. Before the character in the receiver buffer register ( 0 = No overrun error has been detected, or the OE bit was cleared because the CPU read the content of the line status register ( 1 = Overrun error has been detected. If data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. An overrun error is indicated to the CPU as soon as it happens. The new character overwrites the character in the shift register, but it is not transferred to the FIFO." range="" rwaccess="R"/>
    <bitfield id="DR" width="1" begin="0" end="0" resetval="0x0" description="Data-ready (DR) indicator for the receiver. If the DR bit is set and the corresponding interrupt enable bit is set (ERBI = 1 in 0 = Data is not ready, or the DR bit was cleared because the character was read from the receiver buffer register ( 1 = Data is ready. A complete incoming character has been received and transferred into the receiver buffer register ( 0 = Data is not ready, or the DR bit was cleared because all of the characters in the receiver FIFO have been read.. 1 = Data is ready. There is at least one unread character in the receiver FIFO. If the FIFO is empty, the DR bit is set as soon as a complete incoming character has been received and transferred into the FIFO. The DR bit remains set until the FIFO is empty again." range="" rwaccess="R"/>
  </register>
  <register id="UART_MSR" acronym="UART_MSR" offset="0x18" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CD" width="1" begin="7" end="7" resetval="0x-" description="Complement of the Carrier Detect input. When the UART is in the diagnostic test mode (loopback mode" range="" rwaccess="R"/>
    <bitfield id="RI" width="1" begin="6" end="6" resetval="0x-" description="Complement of the Ring Indicator input. When the UART is in the diagnostic test mode (loopback mode" range="" rwaccess="R"/>
    <bitfield id="DSR" width="1" begin="5" end="5" resetval="0x-" description="Complement of the Data Set Ready input. When the UART is in the diagnostic test mode (loopback mode" range="" rwaccess="R"/>
    <bitfield id="CTS" width="1" begin="4" end="4" resetval="0x-" description="Complement of the Clear To Send input. When the UART is in the diagnostic test mode (loopback mode" range="" rwaccess="R"/>
    <bitfield id="DCD" width="1" begin="3" end="3" resetval="0x0" description="Change in DCD indicator bit. DCD indicates that the DCD input has changed state since the last time it was read by the CPU. When DCD is set and the modem status interrupt is enabled, a modem status interrupt is generated." range="" rwaccess="R"/>
    <bitfield id="TERI" width="1" begin="2" end="2" resetval="0x0" description="Trailing edge of RI (TERI) indicator bit. TERI indicates that the RI input has changed from a low to a high. When TERI is set and the modem status interrupt is enabled, a modem status interrupt is generated." range="" rwaccess="R"/>
    <bitfield id="DDSR" width="1" begin="1" end="1" resetval="0x0" description="Change in DSR indicator bit. DDSR indicates that the DSR input has changed state since the last time it was read by the CPU. When DDSR is set and the modem status interrupt is enabled, a modem status interrupt is generated." range="" rwaccess="R"/>
    <bitfield id="DCTS" width="1" begin="0" end="0" resetval="0x0" description="Change in CTS indicator bit. DCTS indicates that the CTS input has changed state since the last time it was read by the CPU. When DCTS is set (autoflow control is not enabled and the modem status interrupt is enabled), a modem status interrupt is generated. When autoflow control is enabled, no interrupt is generated." range="" rwaccess="R"/>
  </register>
  <register id="UART_SCR" acronym="UART_SCR" offset="0x1C" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="SCR" width="8" begin="7" end="0" resetval="0x0" description="These bits are intended for the programmer's use as a scratch pad in the sense that it temporarily holds the programmer's data without affecting any other UART operation." range="" rwaccess="R"/>
  </register>
  <register id="UART_DLL" acronym="UART_DLL" offset="0x20" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DLL" width="8" begin="7" end="0" resetval="0x0" description="The 8 least-significant bits (LSBs) of the 16-bit divisor for generation of the baud clock in the baud rate generator." range="" rwaccess="RW"/>
  </register>
  <register id="UART_DLH" acronym="UART_DLH" offset="0x24" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DLH" width="8" begin="7" end="0" resetval="0x0" description="The 8 most-significant bits (MSBs) of the 16-bit divisor for generation of the baud clock in the baud rate generator." range="" rwaccess="RW"/>
  </register>
  <register id="UART_PID" acronym="UART_PID" offset="0x28" width="32" description="">
    <bitfield id="REV" width="32" begin="31" end="0" resetval="0x44141102" description="TI internal data. Identifies revision of peripheral." range="" rwaccess="R"/>
  </register>
  <register id="UART_PWREMU_MGMT" acronym="UART_PWREMU_MGMT" offset="0x30" width="32" description="">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="URST" width="1" begin="15" end="15" resetval="0x0" description="This bit resets and enables both the receiver and transmitter. If this bit is set, the UTRST and URRST are set automatically. 0 = The receiver and transmitter are disabled and in reset state. 1 = The receiver and transmitter are enabled." range="" rwaccess="RW"/>
    <bitfield id="UTRST" width="1" begin="14" end="14" resetval="0x0" description="UART transmitter reset. Resets and enables the transmitter. 0 = Transmitter is disabled and in reset state. 1 = Transmitter is enabled." range="" rwaccess="RW"/>
    <bitfield id="URRST" width="1" begin="13" end="13" resetval="0x0" description="UART receiver reset. Resets and enables the receiver. 0 = Receiver is disabled and in reset state. 1 = Receiver is enabled." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="12" begin="12" end="1" resetval="0x1" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="FREE" width="1" begin="0" end="0" resetval="0x0" description="Free-running enable mode bit. This bit determines the emulation mode functionality of the UART. When halted, the UART can handle register read/write requests, but does not generate any transmission/reception, interrupts or events. 0 = If a transmission is not in progress, the UART halts immediately. If a transmission is in progress, the UART halts after completion of the one-word transmission. 1 = Free-running mode is enabled. UART continues to run normally." range="" rwaccess="RW"/>
  </register>
  <register id="UART_MDR" acronym="UART_MDR" offset="0x34" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="OSM_SEL" width="1" begin="0" end="0" resetval="0x0" description="Over-Sampling Mode Select. 0 = 16&#215; oversampling. 1 = 13&#215; oversampling." range="" rwaccess="RW"/>
  </register>
</module>
