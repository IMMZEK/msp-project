<module name="VPAC_VPAC_REGS_VPAC_REGS_CFG_IP_MMRS" acronym="" XML_version="1.0" HW_revision="n/a" description="">
	<register id="VPAC_REGS__VPAC_REGS_CFG__IP_MMRS_PID" acronym="VPAC_REGS__VPAC_REGS_CFG__IP_MMRS_PID" offset="0x0" width="32" description="">
		<bitfield id="SCHEME" width="2" begin="31" end="30" resetval="0x1" description="Used to  distinguish between old scheme and new scheme. Spare bit to encode future schemes" range="31 - 30" rwaccess="R"/> 
		<bitfield id="BU" width="2" begin="29" end="28" resetval="0x2" description="BU indicator DSPS ==> 0x0  WTBU ==> 0x1  Processors ==> 0x2" range="29 - 28" rwaccess="R"/> 
		<bitfield id="FUNC" width="12" begin="27" end="16" resetval="0x1216" description="Function indicates a software compatible module family. If there is no level of software compatibility a new FUNC number, and hence PID, should be assigned." range="27 - 16" rwaccess="R"/> 
		<bitfield id="RTL" width="5" begin="15" end="11" resetval="0x0" description="RTL Version.  R as described in PDR with additional clarifications and definitions below.  Must be easily ECO-able or controlled during fabrication.  Ideally through a top level metal mask or e-fuse. This number is maintained/owned by IP design owner.   RTL follows a numbering such as X.Y.R.Z which are explained in this table.   R changes ONLY when:  (1) PDS uploads occur which may have been due to spec changes  (2) Bug fixes occur  (3) Resets to '0' when X or Y changes.   Design team has an internal 'Z' (customer invisible) number which increments on every drop that happens due to DV and RTL updates. Z resets to 0 when R increments. " range="15 - 11" rwaccess="R"/> 
		<bitfield id="MAJOR" width="3" begin="10" end="8" resetval="0x3" description="Major Revision.   X as described in PDR with additional clarifications/definitions below. This number is owned/maintained by IP specification owner. X is part of IP numbering X.Y.R.Z.  X changes ONLY when:  (1) There is a major feature addition. An example would be adding Master Mode to Utopia Level2. The Func field (or Class/Type in old PID format) will remain the same.   X does NOT change due to:  (1) Bug fixes  (2) Change in feature parameters. " range="10 - 8" rwaccess="R"/> 
		<bitfield id="CUSTOM" width="2" begin="7" end="6" resetval="0x0" description="Indicates a special version for a particular device.  Consequence of use may avoid use of standard Chip Support Library (CSL) / Drivers.   0 if non-custom. " range="7 - 6" rwaccess="R"/> 
		<bitfield id="MINOR" width="6" begin="5" end="0" resetval="0x0" description="Minor Revision.   Y as described in PDR with additional clarifications/definitions below.  This number is owned/maintained by IP specification owner.   Y changes ONLY when:  (1) Features are scaled (up or down). Flexibility exists in that this feature scalability may either be represented in the Y change or a specific register in the IP that indicates which features are exactly available.  (2) When feature creeps from Is-Not list to Is list. But this may not be the case once it sees silicon - in which case X will change.   Y does NOT change due to:  (1) Bug fixes  (2) Typos or clarifications  (3) major functional/feature change/addition/deletion. Instead these changes may be reflected via R, S, X as applicable.   Spec owner maintains a customer-invisible number 'S' which changes due to:  (1) Typos/clarifications  (2) Bug documentation. Note that this bug is not due to a spec change but due to implementation. Nevertheless, the spec tracks the IP bugs. An RTL release (say for silicon PG1.1) that occurs due to bug fix should document the corresponding spec number (X.Y.S) in its release notes. " range="5 - 0" rwaccess="R"/>
	</register>
	<register id="VPAC_REGS__VPAC_REGS_CFG__IP_MMRS_ENABLE" acronym="VPAC_REGS__VPAC_REGS_CFG__IP_MMRS_ENABLE" offset="0x4" width="32" description="">
		<bitfield id="NF_ENABLE" width="1" begin="5" end="5" resetval="0x0" description="'1' --> nf is enabled , '0' --> nf is disabled" range="5" rwaccess="R/W"/> 
		<bitfield id="MSC_ENABLE" width="1" begin="4" end="4" resetval="0x0" description="'1' --> msc is enabled , '0' --> msc is disabled" range="4" rwaccess="R/W"/> 
		<bitfield id="LDC0_ENABLE" width="1" begin="2" end="2" resetval="0x0" description="'1' --> ldc0 is enabled , '0' --> ldc0 is disabled" range="2" rwaccess="R/W"/> 
		<bitfield id="VISS0_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="'1' --> viss0 is enabled , '0' --> viss0 is disabled" range="0" rwaccess="R/W"/>
	</register>
	<register id="VPAC_REGS__VPAC_REGS_CFG__IP_MMRS_CG_ENABLE_OVERRIDE" acronym="VPAC_REGS__VPAC_REGS_CFG__IP_MMRS_CG_ENABLE_OVERRIDE" offset="0x8" width="32" description="">
		<bitfield id="VPAC_ASYNC_DATAMST1M2M_CG_NOGATE" width="1" begin="28" end="28" resetval="0x0" description="'1' --> No clock gating in data_mst1 async m2m, '0' --> clock gating enabled" range="28" rwaccess="R/W"/> 
		<bitfield id="VPAC_ASYNC_DATAMST0M2M_CG_NOGATE" width="1" begin="27" end="27" resetval="0x0" description="'1' --> No clock gating in data_mst0 async m2m, '0' --> clock gating enabled" range="27" rwaccess="R/W"/> 
		<bitfield id="VPAC_ASYNC_MEMSLVM2M_CG_NOGATE" width="1" begin="26" end="26" resetval="0x0" description="'1' --> No clock gating in mem_slv async m2m, '0' --> clock gating enabled" range="26" rwaccess="R/W"/> 
		<bitfield id="VPAC_ASYNC_LDCM2M_CG_NOGATE" width="1" begin="25" end="25" resetval="0x0" description="'1' --> No clock gating in  ldc_mst async m2m, '0' --> clock gating enabled" range="25" rwaccess="R/W"/> 
		<bitfield id="VPAC_ASYNC_FWMCBASS_CG_NOGATE" width="1" begin="24" end="24" resetval="0x0" description="'1' --> No clock gating in vpac fw vbusm async cbass, '0' --> clock gating enabled" range="24" rwaccess="R/W"/> 
		<bitfield id="VPAC_ASYNC_FWPCBASS_CG_NOGATE" width="1" begin="23" end="23" resetval="0x0" description="'1' --> No clock gating in vpac fw vbusp async cbass, '0' --> clock gating enabled" range="23" rwaccess="R/W"/> 
		<bitfield id="VPAC_ASYNC_CFGCBASS_CG_NOGATE" width="1" begin="22" end="22" resetval="0x0" description="'1' --> No clock gating in vpac config async cbass, '0' --> clock gating enabled" range="22" rwaccess="R/W"/> 
		<bitfield id="VPAC_MEMSLVM2M_CG_NOGATE" width="1" begin="21" end="21" resetval="0x0" description="'1' --> No clock gating in memslv rd reassembly m2m, '0' --> clock gating enabled" range="21" rwaccess="R/W"/> 
		<bitfield id="VPAC_UTC1RDM2M_CG_NOGATE" width="1" begin="20" end="20" resetval="0x0" description="'1' --> No clock gating in utc1 rd reassembly m2m , '0' --> clock gating enabled" range="20" rwaccess="R/W"/> 
		<bitfield id="VPAC_UTC0RDM2M_CG_NOGATE" width="1" begin="19" end="19" resetval="0x0" description="'1' --> No clock gating in utc0 rd reassembly m2m , '0' --> clock gating enabled" range="19" rwaccess="R/W"/> 
		<bitfield id="VPAC_CFGCBASS_CG_NOGATE" width="1" begin="18" end="18" resetval="0x0" description="'1' --> No clock gating in vpac config cbass, '0' --> clock gating enabled" range="18" rwaccess="R/W"/> 
		<bitfield id="VISS0_CBASS_CG_NOGATE" width="1" begin="17" end="17" resetval="0x0" description="'1' --> No clock gating in viss cbass, '0' --> clock gating enabled" range="17" rwaccess="R/W"/> 
		<bitfield id="HTS_CG_OVERRIDE" width="1" begin="16" end="16" resetval="0x0" description="'1' --> clock gating override, '0' --> No clock gating override" range="16" rwaccess="R/W"/> 
		<bitfield id="MSC_CG_OVERRIDE" width="1" begin="4" end="4" resetval="0x0" description="'1' --> clock gating override, '0' --> No clock gating override" range="4" rwaccess="R/W"/> 
		<bitfield id="LDC0_CG_OVERRIDE" width="1" begin="2" end="2" resetval="0x0" description="'1' --> clock gating override, '0' --> No clock gating override" range="2" rwaccess="R/W"/> 
		<bitfield id="VISS0_CG_OVERRIDE" width="1" begin="0" end="0" resetval="0x0" description="'1' --> clock gating override, '0' --> No clock gating override" range="0" rwaccess="R/W"/>
	</register>
	<register id="VPAC_REGS__VPAC_REGS_CFG__IP_MMRS_VPAC_CTRL" acronym="VPAC_REGS__VPAC_REGS_CFG__IP_MMRS_VPAC_CTRL" offset="0xC" width="32" description="">
		<bitfield id="CTSET_DMA_SOC_DBG" width="1" begin="4" end="4" resetval="0x0" description="select config for CTSET[206:175] '0' --> select UTC1 (NRT) utc1_ctset_intr[31:0] , '1' --> Select ldc0_rd,utc1_ext,utc0_ext master ports (sreq,rreq,creq stall,valid creq)" range="4" rwaccess="R/W"/> 
		<bitfield id="CTSET_UTC_SL2_DBG" width="1" begin="3" end="3" resetval="0x0" description="select config for CTSET[254:239] '0' --> select ext_ctset_event[15:0] , '1' --> Select utc1_wr,utc1_rd,utc0_wr,utc0_rd master ports (sreq,rreq,creq stall,valid creq)" range="3" rwaccess="R/W"/> 
		<bitfield id="CTSET_HWA_SL2_DBG" width="1" begin="2" end="2" resetval="0x0" description="select config for CTSET[142:111] '0' --> Select UTC1 (NRT) utc1_channel_start[31:0] , '1' --> Select nf,msc,ldc0,viss0 master ports (sreq,rreq,creq stall,valid creq)" range="2" rwaccess="R/W"/> 
		<bitfield id="CTSET_RT_UTC_OUT" width="1" begin="1" end="1" resetval="0x0" description="select config for CTSET[238:207] '0' --> Select UTC1 (NRT) utc1_ctset_intr[63:32]  , '1' --> Select UTC0 (RT) utc0_ctset_intr[31:0]" range="1" rwaccess="R/W"/> 
		<bitfield id="CTSET_RT_UTC_IN" width="1" begin="0" end="0" resetval="0x0" description="select config for CTSET[174:143] '0' --> Select UTC1 (NRT) utc1_channel_start[63:32] , '1' --> Select UTC0 (RT) utc0_channel_start[31:0]" range="0" rwaccess="R/W"/>
	</register>
	<register id="VPAC_REGS__VPAC_REGS_CFG__IP_MMRS_VPAC_TEST_CTRL" acronym="VPAC_REGS__VPAC_REGS_CFG__IP_MMRS_VPAC_TEST_CTRL" offset="0x10" width="32" description="">
		<bitfield id="UTC1_CFG_PBIST_OVERRIDE" width="1" begin="1" end="1" resetval="0x0" description="'1' --> Config pbist mode: forces UTC1 interface to allow free running clock to RAM during config PBIST , '0' --> FUNC mode" range="1" rwaccess="R/W"/> 
		<bitfield id="UTC0_CFG_PBIST_OVERRIDE" width="1" begin="0" end="0" resetval="0x0" description="'1' --> Config pbist mode: forces UTC0 interface to allow free running clock to RAM during config PBIST , '0' --> FUNC mode" range="0" rwaccess="R/W"/>
	</register>
</module>