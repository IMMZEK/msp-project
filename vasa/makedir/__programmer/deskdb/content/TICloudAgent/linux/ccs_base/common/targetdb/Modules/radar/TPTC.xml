<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="TPTC" id="TPTC">
  
  
  <register acronym="PID" description="         Peripheral ID Register    " id="PID" offset="0x0" width="32">
    
  <bitfield begin="31" description="         PID Scheme:  Used to distinguish between old ID scheme and  current. Spare bit to encode future schemes EDMA uses 'new  scheme' indicated with value of 0x1.    " end="30" id="SCHEME" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="          RESERVE FIELD" end="28" id="RES1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="27" description="         Function indicates a software compatible module family.    " end="16" id="FUNC" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="15" description="         RTL Version     " end="11" id="RTL" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="         Major Revision     " end="8" id="MAJOR" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="         Custom revision field:  Not used on this version of EDMA.    " end="6" id="CUSTOM" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="         Minor Revision     " end="0" id="MINOR" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="TCCFG" description="         TC Configuration Register    " id="TCCFG" offset="0x4" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="10" id="RES2" rwaccess="R" width="22"></bitfield>
    
  <bitfield begin="9" description="         Dst Register FIFO Depth Parameterization     " end="8" id="DREGDEPTH" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="7" description="          RESERVE FIELD" end="6" id="RES3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="         Bus Width Parameterization     " end="4" id="BUSWIDTH" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="3" description="          RESERVE FIELD" end="3" id="RES4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="         Fifo Size Parameterization     " end="0" id="FIFOSIZE" rwaccess="R" width="3"></bitfield>
  </register>
  
  
  <register acronym="TCSTAT" description="         TC Status Register    " id="TCSTAT" offset="0x100" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="14" id="RES5" rwaccess="R" width="18"></bitfield>
    
  <bitfield begin="13" description="         Dst FIFO Start Pointer Represents the offset to the head  entry of Dst Register FIFO in units of entries. Legal  values = 0x0 to 0x3    " end="12" id="DFSTRTPTR" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="11" description="          RESERVE FIELD" end="9" id="RES6" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="8" description="         Channel Active Channel Active is a logical-OR of each of the  BUSY/ACTV signals. The ACTV bit must remain high through  the life of a TR.  ACTV = 0 : Channel is idle. ACTV = 1 :  Channel is busy.    " end="8" id="ACTV" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="          RESERVE FIELD" end="7" id="RES7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="         Destination Active State Specifies the number of TRs that  are resident in the Dst Register FIFO at a given instant.  Legal values are constrained by the DSTREGDEPTH parameter.    " end="4" id="DSTACTV" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="3" description="          RESERVE FIELD" end="3" id="RES8" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="         Write Status Active WSACTV = 0 : Write status is not  pending. Write status has been received for all previously  issued write commands. WSACTV = 1 : Write Status is pending.  Write status has not been received for all previously issued  write commands.    " end="2" id="WSACTV" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="         Source Active State SRCACTV = 0 : Source Active set is idle.  Any TR written to Prog Set will immediately transition to  Source Active set as long as the Dst FIFO Set is not full  (DSTFULL == 1). SRCACTV = 1 : Source Active set is busy  either performing read transfers or waiting to perform read  transfers for current Transfer Request.    " end="1" id="SRCACTV" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="         Program Register Set Busy PROGBUSY = 0 : Prog set idle and  is available for programming. PROGBUSY = 1 : Prog set busy.  User should poll for PROGBUSY equal to '0' prior to  re-programming the Program Register set.    " end="0" id="PROGBUSY" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="INTSTAT" description="         Interrupt Status Register    " id="INTSTAT" offset="0x104" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="2" id="RES9" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="         TR Done Event Status: TRDONE = 0 : Condition not detected.  TRDONE = 1 : Set when TC has completed a Transfer Request.  TRDONE should be set when the write status is returned for  the final write of a TR. Cleared when user writes '1' to  INTCLR.TRDONE register bit.    " end="1" id="TRDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="         Program Set Empty Event Status: PROGEMPTY = 0 : Condition  not detected. PROGEMPTY = 1 : Set when Program Register set  transitions to empty state. Cleared when user writes '1' to  INTCLR.PROGEMPTY register bit.    " end="0" id="PROGEMPTY" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="INTEN" description="         Interrupt Enable Register    " id="INTEN" offset="0x108" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="2" id="RES10" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="         TR Done Event Enable: INTEN.TRDONE = 0 : TRDONE Event is  disabled. INTEN.TRDONE = 1 : TRDONE Event is enabled and  contributes to interrupt generation    " end="1" id="TRDONE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="         Program Set Empty Event Enable: INTEN.PROGEMPTY = 0 :  PROGEMPTY Event is disabled. INTEN.PROGEMPTY = 1 : PROGEMPTY  Event is enabled and contributes to interrupt generation    " end="0" id="PROGEMPTY" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="INTCLR" description="         Interrupt Clear Register    " id="INTCLR" offset="0x10C" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="2" id="RES11" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="         TR Done Event Clear: INTCLR.TRDONE = 0 : Writes of '0' have  no effect.. INTCLR.TRDONE = 1 : Write of '1' clears  INTSTAT.TRDONE bit    " end="1" id="TRDONE" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="0" description="         Program Set Empty Event Clear: INTCLR.PROGEMPTY = 0 : Writes  of '0' have no effect.. INTCLR.PROGEMPTY = 1 : Write of '1'  clears INTSTAT.PROGEMPTY bit    " end="0" id="PROGEMPTY" rwaccess="W" width="1"></bitfield>
  </register>
  
  
  <register acronym="INTCMD" description="         Interrupt Command Register    " id="INTCMD" offset="0x110" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="2" id="RES12" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="         Set TPTC interrupt: Write of '1' to SET causes TPTC  interrupt to be pulsed unconditionally.  Writes of '0' have  no affect.    " end="1" id="SET" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="0" description="         Evaluate state of TPTC interrupt Write of '1' to EVAL causes  TPTC interrupt to be pulsed if any of the INTSTAT bits are  set to '1'.  Writes of '0' have no affect.    " end="0" id="EVAL" rwaccess="W" width="1"></bitfield>
  </register>
  
  
  <register acronym="ERRSTAT" description="         Error Status Register    " id="ERRSTAT" offset="0x120" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="4" id="RES13" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="         MMR Address Error: MMRAERR = 0 : Condition not detected.  MMRAERR = 1 : User attempted to read or write to invalid  address configuration memory map. (Is only be set for  non-emulation accesses). No additional error information is  recorded.    " end="3" id="MMRAERR" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="         TR Error: TR detected that violates FIFO Mode transfer (SAM  or DAM is '1') alignment rules or has ACNT or BCNT == 0. No  additional error information is recorded.    " end="2" id="TRERR" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="          RESERVE FIELD" end="1" id="RES14" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="         Bus Error Event: BUSERR = 0: Condition not detected. BUSERR  = 1: TC has detected an error code on the write response bus  or read response bus. Error information is stored in Error  Details Register (ERRDET).    " end="0" id="BUSERR" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="ERREN" description="         Error Enable Register    " id="ERREN" offset="0x124" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="4" id="RES15" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="         Interrupt enable for ERRSTAT.MMRAERR: ERREN.MMRAERR = 0 :  BUSERR is disabled. ERREN.MMRAERR = 1 : MMRAERR is enabled  and contributes to the TPTC error interrupt generation.    " end="3" id="MMRAERR" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="         Interrupt enable for ERRSTAT.TRERR: ERREN.TRERR = 0 : BUSERR  is disabled. ERREN.TRERR = 1 : TRERR is enabled and  contributes to the TPTC error interrupt generation.    " end="2" id="TRERR" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="          RESERVE FIELD" end="1" id="RES16" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="         Interrupt enable for ERRSTAT.BUSERR: ERREN.BUSERR = 0 :  BUSERR is disabled. ERREN.BUSERR = 1 : BUSERR is enabled  and contributes to the TPTC error interrupt generation.    " end="0" id="BUSERR" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ERRCLR" description="         Error Clear Register    " id="ERRCLR" offset="0x128" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="4" id="RES17" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="         Interrupt clear for ERRSTAT.MMRAERR: ERRCLR.MMRAERR = 0 :  Writes of '0' have no effect.. ERRCLR.MMRAERR = 1 : Write of  '1' clears ERRSTAT.MMRAERR bit.  Write of '1' to  ERRCLR.MMRAERR does not clear the ERRDET register.    " end="3" id="MMRAERR" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="2" description="         Interrupt clear for ERRSTAT.TRERR: ERRCLR.TRERR = 0 : Writes  of '0' have no effect.. ERRCLR.TRERR = 1 : Write of '1'  clears ERRSTAT.TRERR bit.  Write of '1' to ERRCLR.TRERR does  not clear the ERRDET register.    " end="2" id="TRERR" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="1" description="          RESERVE FIELD" end="1" id="RES18" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="         Interrupt clear for ERRSTAT.BUSERR: ERRCLR.BUSERR = 0 :  Writes of '0' have no effect.. ERRCLR.BUSERR = 1 : Write of  '1' clears ERRSTAT.BUSERR bit.  Write of '1' to  ERRCLR.BUSERR clears the ERRDET register.    " end="0" id="BUSERR" rwaccess="W" width="1"></bitfield>
  </register>
  
  
  <register acronym="ERRDET" description="         Error Details Register    " id="ERRDET" offset="0x12C" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="18" id="RES19" rwaccess="R" width="14"></bitfield>
    
  <bitfield begin="17" description="         Contains the OPT.TCCHEN value programmed by the user for the  Read or Write transaction that resulted in an error.    " end="17" id="TCCHEN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="16" description="         Contains the OPT.TCINTEN value programmed by the user for  the Read or Write transaction that resulted in an error.    " end="16" id="TCINTEN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="15" description="          RESERVE FIELD" end="14" id="RES20" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="         Transfer Complete Code: Contains the OPT.TCC value  programmed by the user for the Read or Write transaction  that resulted in an error.    " end="8" id="TCC" rwaccess="R" width="6"></bitfield>
    
  <bitfield begin="7" description="          RESERVE FIELD" end="4" id="RES21" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="3" description="         Transaction Status: Stores the non-zero status/error code  that was detected on the read status or write status bus.  MS-bit effectively serves as the read vs. write error code.  If read status and write status are returned on the same  cycle then the TC chooses non-zero version. If both are  non-zero then write status is treated as higher priority.  Encoding of errors matches the CBA spec and is summarized  here:  0xF =    " end="0" id="STAT" rwaccess="R" width="4"></bitfield>
  </register>
  
  
  <register acronym="ERRCMD" description="         Error Command Register    " id="ERRCMD" offset="0x130" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="2" id="RES22" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="         Set TPTC error interrupt: Write of '1' to SET causes TPTC  error interrupt to be pulsed unconditionally.  Writes of '0'  have no affect.    " end="1" id="SET" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="0" description="         Evaluate state of TPTC error interrupt Write of '1' to EVAL  causes TPTC error interrupt to be pulsed if any of the  ERRSTAT bits are set to '1'.  Writes of '0' have no affect.     " end="0" id="EVAL" rwaccess="W" width="1"></bitfield>
  </register>
  
  
  <register acronym="RDRATE" description="         Read Rate Register    " id="RDRATE" offset="0x140" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="3" id="RES23" rwaccess="R" width="29"></bitfield>
    
  <bitfield begin="2" description="         Read Rate Control: Controls the number of cycles between  read commands. This is a global setting that applies to all  TRs for this TC.    " end="0" id="RDRATE" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="POPT" description="         Prog Set Options    " id="POPT" offset="0x200" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="23" id="RES24" rwaccess="R" width="9"></bitfield>
    
  <bitfield begin="22" description="         Transfer complete chaining enable: 0: Transfer complete  chaining is disabled. 1: Transfer complete chaining is  enabled.    " end="22" id="TCCHEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="          RESERVE FIELD" end="21" id="RES25" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="20" description="         Transfer complete interrupt enable: 0: Transfer complete  interrupt is disabled. 1: Transfer complete interrupt is  enabled.    " end="20" id="TCINTEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="          RESERVE FIELD" end="18" id="RES26" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="17" description="         Transfer Complete Code: The 6-bit code is used to set the  relevant bit in CER or IPR of the TPCC module.    " end="12" id="TCC" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="11" description="          RESERVE FIELD" end="11" id="RES27" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="         FIFO width control: Applies if either SAM or DAM is set to  FIFO mode.    " end="8" id="FWID" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description="          RESERVE FIELD" end="7" id="RES28" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="         Transfer Priority: 0: Priority 0 - Highest priority 1:  Priority 1 ... 7: Priority 7 - Lowest priority    " end="4" id="PRI" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="3" description="          RESERVE FIELD" end="2" id="RES29" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="1" description="         Destination Address Mode within an array: 0: INCR Dst  addressing within an array increments. 1: FIFO Dst  addressing within an array wraps around upon reaching FIFO  width.    " end="1" id="DAM" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="         Source Address Mode within an array: 0: INCR Src addressing  within an array increments. 1: FIFO Src addressing within  an array wraps around upon reaching FIFO width.    " end="0" id="SAM" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PSRC" description="         Prog Set Src Address    " id="PSRC" offset="0x204" width="32">
    
  <bitfield begin="31" description="         Source address for Program Register Set     " end="0" id="SADDR" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PCNT" description="         Prog Set Count    " id="PCNT" offset="0x208" width="32">
    
  <bitfield begin="31" description="         B-Dimension count. Number of arrays to be transferred where  each array is ACNT in length.    " end="16" id="BCNT" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="         A-Dimension count. Number of bytes to be transferred in  first dimension.    " end="0" id="ACNT" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="PDST" description="         Prog Set Dst Address    " id="PDST" offset="0x20C" width="32">
    
  <bitfield begin="31" description="         Destination address for Program Register Set     " end="0" id="DADDR" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PBIDX" description="         Prog Set B-Dim Idx    " id="PBIDX" offset="0x210" width="32">
    
  <bitfield begin="31" description="         Dest B-Idx for Program Register Set:  B-Idx offset between  Destination arrays:  Represents the offset in bytes between  the starting address of each destination array (recall that  there are BCNT arrays of ACNT elements). DBIDX is always  used regardless of whether DAM is Increment or FIFO mode.    " end="16" id="DBIDX" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="         Source B-Idx for Program Register Set:  B-Idx offset between  Source arrays:  Represents the offset in bytes between the  starting address of each source array (recall that there are  BCNT arrays of ACNT elements). SBIDX is always used  regardless of whether SAM is Increment or FIFO mode.    " end="0" id="SBIDX" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="PMPPRXY" description="         Prog Set Mem Protect Proxy    " id="PMPPRXY" offset="0x214" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="10" id="RES30" rwaccess="R" width="22"></bitfield>
    
  <bitfield begin="9" description="         Secure Level: SECURE = 0 : Non-secure access SECURE = 1 :  Secure access  PMPPRXY.SECURE is always updated with the  value from the configuration bus secure field on any/every  write to Program Set BIDX Register (trigger register). The  SECURE value for the SA Set and DF Set are copied from the  value in the Program set along with the remainder of the  parameter values. The secure attribute is issued on the  VBusM read and write command bus such that the target  endpoints can perform memory protection and security checks  based on the SECURE level of the external host that sets up  the DMA transaction.    " end="9" id="SECURE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="         Privilege Level: PRIV = 0 : User level privilege PRIV = 1 :  Supervisor level privilege  PMPPRXY.PRIV is always updated  with the value from the configuration bus privilege field on  any/every write to Program Set BIDX Register (trigger  register). The PRIV value for the SA Set and DF Set are  copied from the value in the Program set along with the  remainder of the parameter values. The privilege ID is  issued on the VBusM read and write command bus such that the  target endpoints can perform memory protection checks based  on the PRIV of the external host that sets up the DMA  transaction.    " end="8" id="PRIV" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="          RESERVE FIELD" end="4" id="RES31" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="3" description="         Privilege ID:  PMPPRXY.PRIVID is always updated with the  value from configuration bus privilege ID field on any/every  write to Program Set BIDX Register (trigger register). The  PRIVID value for the SA Set and DF Set are copied from the  value in the Program set along with the remainder of the  parameter values. The privilege ID is issued on the VBusM  read and write command bus such that the target endpoints  can perform memory protection checks based on the privid of  the external host that sets up the DMA transaction.    " end="0" id="PRIVID" rwaccess="R" width="4"></bitfield>
  </register>
  
  
  <register acronym="SAOPT" description="         Src Actv Set Options    " id="SAOPT" offset="0x240" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="23" id="RES32" rwaccess="R" width="9"></bitfield>
    
  <bitfield begin="22" description="         Transfer complete chaining enable: 0: Transfer complete  chaining is disabled. 1: Transfer complete chaining is  enabled.    " end="22" id="TCCHEN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="21" description="          RESERVE FIELD" end="21" id="RES33" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="20" description="         Transfer complete interrupt enable: 0: Transfer complete  interrupt is disabled. 1: Transfer complete interrupt is  enabled.    " end="20" id="TCINTEN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="19" description="          RESERVE FIELD" end="18" id="RES34" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="17" description="         Transfer Complete Code: The 6-bit code is used to set the  relevant bit in CER or IPR of the TPCC module.    " end="12" id="TCC" rwaccess="R" width="6"></bitfield>
    
  <bitfield begin="11" description="          RESERVE FIELD" end="11" id="RES35" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="         FIFO width control: Applies if either SAM or DAM is set to  FIFO mode.    " end="8" id="FWID" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="          RESERVE FIELD" end="7" id="RES36" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="         Transfer Priority: 0: Priority 0 - Highest priority 1:  Priority 1 ... 7: Priority 7 - Lowest priority    " end="4" id="PRI" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="3" description="          RESERVE FIELD" end="2" id="RES37" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="1" description="         Destination Address Mode within an array: 0: INCR Dst  addressing within an array increments. 1: FIFO Dst  addressing within an array wraps around upon reaching FIFO  width.    " end="1" id="DAM" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="         Source Address Mode within an array: 0: INCR Src addressing  within an array increments. 1: FIFO Src addressing within  an array wraps around upon reaching FIFO width.    " end="0" id="SAM" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="SASRC" description="         Src Actv Set Src Address    " id="SASRC" offset="0x244" width="32">
    
  <bitfield begin="31" description="         Source address for Source Active Register Set: Initial value  is copied from PSRC.SADDR. TC updates value according to  source addressing mode (OPT.SAM) and/or source index value  (BIDX.SBIDX) after each read command is issued. When a TR is  complete the final value should be the address of the last  read command issued.    " end="0" id="SADDR" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="SACNT" description="         Src Actv Set Count    " id="SACNT" offset="0x248" width="32">
    
  <bitfield begin="31" description="         B-Dimension count: Number of arrays to be transferred where  each array is ACNT in length. Count Remaining for Src Active  Register Set. Represents the amount of data remaining to be  read. Initial value is copied from PCNT. TC decrements ACNT  and BCNT as necessary after each read command is issued.  Final value should be 0 when TR is complete.    " end="16" id="BCNT" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="         A-Dimension count: Number of bytes to be transferred in  first dimension. Count Remaining for Src Active Register  Set. Represents the amount of data remaining to be read.  Initial value is copied from PCNT. TC decrements ACNT and  BCNT as necessary after each read command is issued. Final  value should be 0 when TR is complete.    " end="0" id="ACNT" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="SABIDX" description="         Src Actv Set B-Dim Idx    " id="SABIDX" offset="0x250" width="32">
    
  <bitfield begin="31" description="         Dest B-Idx for Source Active Register Set. Value copied from  PBIDX:  B-Idx offset between Destination arrays:  Represents  the offset in bytes between the starting address of each  destination array (recall that there are BCNT arrays of ACNT  elements). DBIDX is always used regardless of whether DAM  is Increment or FIFO mode.    " end="16" id="DBIDX" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="         Source B-Idx for Source Active Register Set. Value copied  from PBIDX:  B-Idx offset between Source arrays:  Represents  the offset in bytes between the starting address of each  source array (recall that there are BCNT arrays of ACNT  elements). SBIDX is always used regardless of whether SAM  is Increment or FIFO mode.    " end="0" id="SBIDX" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="SAMPPRXY" description="         Src Actv Set Mem Protect Proxy    " id="SAMPPRXY" offset="0x254" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="10" id="RES38" rwaccess="R" width="22"></bitfield>
    
  <bitfield begin="9" description="         Secure Level: SECURE = 0 : Non-secure access SECURE = 1 :  Secure access  SAMPPRXY.SECURE is always updated with the  value from the configuration bus secure field on any/every  write to Program Set BIDX Register (trigger register). The  SECURE value for the SA Set and DF Set are copied from the  value in the Program set along with the remainder of the  parameter values. The secure attribute is issued on the  VBusM read and write command bus such that the target  endpoints can perform memory protection and security checks  based on the SECURE level of the external host that sets up  the DMA transaction.    " end="9" id="SECURE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="         Privilege Level: PRIV = 0 : User level privilege PRIV = 1 :  Supervisor level privilege  SAMPPRXY.PRIV is always updated  with the value from the configuration bus privilege field on  any/every write to Program Set BIDX Register (trigger  register). The PRIV value for the SA Set and DF Set are  copied from the value in the Program set along with the  remainder of the parameter values. The privilege ID is  issued on the VBusM read and write command bus such that the  target endpoints can perform memory protection checks based  on the PRIV of the external host that sets up the DMA  transaction.    " end="8" id="PRIV" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="          RESERVE FIELD" end="4" id="RES39" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="3" description="         Privilege ID:  SAMPPRXY.PRIVID is always updated with the  value from configuration bus privilege ID field on any/every  write to Program Set BIDX Register (trigger register). The  PRIVID value for the SA Set and DF Set are copied from the  value in the Program set along with the remainder of the  parameter values. The privilege ID is issued on the VBusM  read and write command bus such that the target endpoints  can perform memory protection checks based on the privid of  the external host that sets up the DMA transaction.    " end="0" id="PRIVID" rwaccess="R" width="4"></bitfield>
  </register>
  
  
  <register acronym="SACNTRLD" description="         Src Actv Set Cnt Reload    " id="SACNTRLD" offset="0x258" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="16" id="RES40" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="         A-Cnt Reload value for Source Active Register set. Value  copied from PCNT.ACNT:  Represents the originally programmed  value of ACNT. The Reload value is used to reinitialize ACNT  after each array is serviced (i.e. ACNT decrements to 0).  by the Src offset in bytes between the starting address of  each source array (recall that there are BCNT arrays of ACNT  bytes)    " end="0" id="ACNTRLD" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="SASRCBREF" description="         Src Actv Set Src Addr A-Reference    " id="SASRCBREF" offset="0x25C" width="32">
    
  <bitfield begin="31" description="         Source address reference for Source Active Register Set:   Represents the starting address for the array currently  being read. The next array's starting address is calculated  as the 'reference address' plus the 'source b-idx' value.    " end="0" id="SADDRBREF" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="SADSTBREF" description="         rsvd return 0x0 w/o AERROR    " id="SADSTBREF" offset="0x260" width="32">
    
  <bitfield begin="31" description="         Dst address reference is not applicable for Src Active  Register Set.  Reads return 0x0.    " end="0" id="DADDRBREF" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DFCNTRLD" description="         Dst FIFO Set Cnt Reload    " id="DFCNTRLD" offset="0x280" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="16" id="RES41" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="         A-Cnt Reload value for Destination FIFO Register set. Value  copied from PCNT.ACNT:  Represents the originally programmed  value of ACNT. The Reload value is used to reinitialize ACNT  after each array is serviced (i.e. ACNT decrements to 0).  by the Src offset in bytes between the starting address of  each source array (recall that there are BCNT arrays of ACNT  bytes)    " end="0" id="ACNTRLD" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="DFSRCBREF" description="         rsvd return 0x0 w/o AERROR    " id="DFSRCBREF" offset="0x284" width="32">
    
  <bitfield begin="31" description="         Source address reference is not applicable for Dst FIFO  Register Set.  Reads return 0x0.    " end="0" id="SADDRBREF" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DFOPT" description="         Dst FIFO Set Options    " id="DFOPT" offset="0x300" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="23" id="RES42" rwaccess="R" width="9"></bitfield>
    
  <bitfield begin="22" description="         Transfer complete chaining enable: 0: Transfer complete  chaining is disabled. 1: Transfer complete chaining is  enabled.    " end="22" id="TCCHEN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="21" description="          RESERVE FIELD" end="21" id="RES43" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="20" description="         Transfer complete interrupt enable: 0: Transfer complete  interrupt is disabled. 1: Transfer complete interrupt is  enabled.    " end="20" id="TCINTEN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="19" description="          RESERVE FIELD" end="18" id="RES44" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="17" description="         Transfer Complete Code: The 6-bit code is used to set the  relevant bit in CER or IPR of the TPCC module.    " end="12" id="TCC" rwaccess="R" width="6"></bitfield>
    
  <bitfield begin="11" description="          RESERVE FIELD" end="11" id="RES45" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="         FIFO width control: Applies if either SAM or DAM is set to  FIFO mode.    " end="8" id="FWID" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="          RESERVE FIELD" end="7" id="RES46" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="         Transfer Priority: 0: Priority 0 - Highest priority 1:  Priority 1 ... 7: Priority 7 - Lowest priority    " end="4" id="PRI" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="3" description="          RESERVE FIELD" end="2" id="RES47" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="1" description="         Destination Address Mode within an array: 0: INCR Dst  addressing within an array increments. 1: FIFO Dst  addressing within an array wraps around upon reaching FIFO  width.    " end="1" id="DAM" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="         Source Address Mode within an array: 0: INCR Src addressing  within an array increments. 1: FIFO Src addressing within  an array wraps around upon reaching FIFO width.    " end="0" id="SAM" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DFSRC" description="         rsvd return 0x0 w/o AERROR    " id="DFSRC" offset="0x304" width="32">
    
  <bitfield begin="31" description="         Source address is not applicable for Dst FIFO Register Set:   Reads return 0x0.    " end="0" id="SADDR" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DFCNT" description="         Dst FIFO Set Count    " id="DFCNT" offset="0x308" width="32">
    
  <bitfield begin="31" description="         B-Count Remaining for Dst Register Set:  Number of arrays to  be transferred where each array is ACNT in length.  Represents the amount of data remaining to be written.  Initial value is copied from PCNT. TC decrements ACNT and  BCNT as necessary after each write dataphase is issued.  Final value should be 0 when TR is complete.    " end="16" id="BCNT" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="         A-Count Remaining for Dst Register Set:  Number of bytes to  be transferred in first dimension. Represents the amount of  data remaining to be written. Initial value is copied from  PCNT. TC decrements ACNT and BCNT as necessary after each  write dataphase is issued. Final value should be 0 when TR  is complete.    " end="0" id="ACNT" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="DFDST" description="         Dst FIFO Set Dst Address    " id="DFDST" offset="0x30C" width="32">
    
  <bitfield begin="31" description="         Destination address for Dst FIFO Register Set:  Initial  value is copied from PDST.DADDR. TC updates value according  to destination addressing mode (OPT.SAM) and/or dest index  value (BIDX.DBIDX) after each write command is issued. When  a TR is complete the final value should be the address of  the last write command issued.    " end="0" id="DADDR" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DFBIDX" description="         Dst FIFO Set B-Dim Idx    " id="DFBIDX" offset="0x310" width="32">
    
  <bitfield begin="31" description="         Dest B-Idx for Dest FIFO Register Set. Value copied from  PBIDX:  B-Idx offset between Destination arrays:  Represents  the offset in bytes between the starting address of each  destination array (recall that there are BCNT arrays of ACNT  elements). DBIDX is always used regardless of whether DAM  is Increment or FIFO mode.    " end="16" id="DBIDX" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="         Dest B-Idx for Dest FIFO Register Set. Value copied from  PBIDX:  B-Idx offset between Source arrays:  Represents the  offset in bytes between the starting address of each source  array (recall that there are BCNT arrays of ACNT elements).  SBIDX is always used regardless of whether SAM is Increment  or FIFO mode.    " end="0" id="SBIDX" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="DFMPPRXY" description="         Dst FIFO Mem Protect Proxy    " id="DFMPPRXY" offset="0x314" width="32">
    
  <bitfield begin="31" description="          RESERVE FIELD" end="10" id="RES48" rwaccess="R" width="22"></bitfield>
    
  <bitfield begin="9" description="         Secure Level: SECURE = 0 : Non-secure access SECURE = 1 :  Secure access  DFMPPRXY0.SECURE is always updated with the  value from the configuration bus secure field on any/every  write to Program Set BIDX Register (trigger register). The  SECURE value for the SA Set and DF Set are copied from the  value in the Program set along with the remainder of the  parameter values. The secure attribute is issued on the  VBusM read and write command bus such that the target  endpoints can perform memory protection and security checks  based on the SECURE level of the external host that sets up  the DMA transaction.    " end="9" id="SECURE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="         Privilege Level: PRIV = 0 : User level privilege PRIV = 1 :  Supervisor level privilege  DFMPPRXY0.PRIV is always updated  with the value from the configuration bus privilege field on  any/every write to Program Set BIDX Register (trigger  register). The PRIV value for the SA Set and DF Set are  copied from the value in the Program set along with the  remainder of the parameter values. The privilege ID is  issued on the VBusM read and write command bus such that the  target endpoints can perform memory protection checks based  on the PRIV of the external host that sets up the DMA  transaction.    " end="8" id="PRIV" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="          RESERVE FIELD" end="4" id="RES49" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="3" description="         Privilege ID:  DFMPPRXY0.PRIVID is always updated with the  value from configuration bus privilege ID field on any/every  write to Program Set BIDX Register (trigger register). The  PRIVID value for the SA Set and DF Set are copied from the  value in the Program set along with the remainder of the  parameter values. The privilege ID is issued on the VBusM  read and write command bus such that the target endpoints  can perform memory protection checks based on the privid of  the external host that sets up the DMA transaction.    " end="0" id="PRIVID" rwaccess="R" width="4"></bitfield>
  </register>
</module>
