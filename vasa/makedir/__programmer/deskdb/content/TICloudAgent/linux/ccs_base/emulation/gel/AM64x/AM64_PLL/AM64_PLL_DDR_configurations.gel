/**
 * \file  AM64_PLL_DDR_configurations.gel
 *
 * \brief GEL File to configure the DDR PLL on AM64
 */

/* Copyright (c) 2021, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */

/*****************************************************************************/
/* PLL functions for DDR. */


menuitem "PLL Configuration/DDR PLL"

hotmenu Set_MAIN_PLL12_HSDIV0_CLKOUT_75MHz(){
    int debug_info = DEBUG;
    int gel_trace_on  = GEL_TRACE;
    address_offset = AddrOffset();
    //for debugging only: 
    if(debug_info){
        GEL_TextOut("Debugging enabled\n");
    }
    if(gel_trace_on){
        GEL_Trace(1);
        GEL_TextOut("GEL_trace enabled\n");
    }
    else{
        GEL_Trace(0);
    }
    //Main SoC DDR PLL
    GEL_TextOut("Setting MAIN_PLL12_HSDIV0_CLKOUT_75MHz\n");
    Write_MMR_Field((CSL_PLL0_CFG_BASE + address_offset + (DDR_PLL_INDEX * 0x1000) + FREQ_CONTROL_0), 75, 12, 0);
    Program_HSDIV(CSL_PLL0_CFG_BASE, address_offset, DDR_PLL_INDEX, 0, 24);
    GEL_TextOut("MAIN_PLL12_HSDIV0_CLKOUT set.\n");
}

hotmenu Set_MAIN_PLL12_HSDIV0_CLKOUT_100MHz(){
    int debug_info = DEBUG;
    int gel_trace_on  = GEL_TRACE;
    address_offset = AddrOffset();
    //for debugging only: 
    if(debug_info){
        GEL_TextOut("Debugging enabled\n");
    }
    if(gel_trace_on){
        GEL_Trace(1);
        GEL_TextOut("GEL_trace enabled\n");
    }
    else{
        GEL_Trace(0);
    }
    //Main SoC DDR PLL
    GEL_TextOut("Setting MAIN_PLL12_HSDIV0_CLKOUT_100MHz\n");
    Write_MMR_Field((CSL_PLL0_CFG_BASE + address_offset + (DDR_PLL_INDEX * 0x1000) + FREQ_CONTROL_0), 72, 12, 0);
    Program_HSDIV(CSL_PLL0_CFG_BASE, address_offset, DDR_PLL_INDEX, 0, 17);
    GEL_TextOut("MAIN_PLL12_HSDIV0_CLKOUT set.\n");
}

hotmenu Set_MAIN_PLL12_HSDIV0_CLKOUT_150MHz(){
    int debug_info = DEBUG;
    int gel_trace_on  = GEL_TRACE;
    address_offset = AddrOffset();
    //for debugging only: 
    if(debug_info){
        GEL_TextOut("Debugging enabled\n");
    }
    if(gel_trace_on){
        GEL_Trace(1);
        GEL_TextOut("GEL_trace enabled\n");
    }
    else{
        GEL_Trace(0);
    }
    //Main SoC DDR PLL
    GEL_TextOut("Setting MAIN_PLL12_HSDIV0_CLKOUT_150MHz\n");
    Write_MMR_Field((CSL_PLL0_CFG_BASE + address_offset + (DDR_PLL_INDEX * 0x1000) + FREQ_CONTROL_0), 72, 12, 0);
    Program_HSDIV(CSL_PLL0_CFG_BASE, address_offset, DDR_PLL_INDEX, 0, 11);
    GEL_TextOut("MAIN_PLL12_HSDIV0_CLKOUT set.\n");
}

hotmenu Set_MAIN_PLL12_HSDIV0_CLKOUT_200MHz(){
	int debug_info = DEBUG;
	int gel_trace_on  = GEL_TRACE;
    address_offset = AddrOffset();
	//for debugging only: 
	if(debug_info){
		GEL_TextOut("Debugging enabled\n");
	}
	if(gel_trace_on){
		GEL_Trace(1);
		GEL_TextOut("GEL_trace enabled\n");
	}
	else{
		GEL_Trace(0);
	}
	//Main SoC DDR PLL
	GEL_TextOut("Setting MAIN_PLL12_HSDIV0_CLKOUT_200MHz\n");
	Write_MMR_Field((CSL_PLL0_CFG_BASE + address_offset + (DDR_PLL_INDEX * 0x1000) + FREQ_CONTROL_0), 64, 12, 0);
	Program_HSDIV(CSL_PLL0_CFG_BASE, address_offset, DDR_PLL_INDEX, 0, 7);
	GEL_TextOut("MAIN_PLL12_HSDIV0_CLKOUT set.\n");
}

hotmenu Set_MAIN_PLL12_HSDIV0_CLKOUT_400MHz(){
	int debug_info = DEBUG;
	int gel_trace_on  = GEL_TRACE;
    address_offset = AddrOffset();
	//for debugging only: 
	if(debug_info){
		GEL_TextOut("Debugging enabled\n");
	}
	if(gel_trace_on){
		GEL_Trace(1);
		GEL_TextOut("GEL_trace enabled\n");
	}
	else{
		GEL_Trace(0);
	}
	//Main SoC DDR PLL
	GEL_TextOut("Setting MAIN_PLL12_HSDIV0_CLKOUT_400MHz\n");
	Write_MMR_Field((CSL_PLL0_CFG_BASE + address_offset + (DDR_PLL_INDEX * 0x1000) + FREQ_CONTROL_0), 64, 12, 0);
	Program_HSDIV(CSL_PLL0_CFG_BASE, address_offset, DDR_PLL_INDEX, 0, 3);
	GEL_TextOut("MAIN_PLL12_HSDIV0_CLKOUT set.\n");
}

hotmenu Set_MAIN_PLL12_HSDIV0_CLKOUT_425MHz(){
	int debug_info = DEBUG;
	int gel_trace_on  = GEL_TRACE;
    address_offset = AddrOffset();
	//for debugging only: 
	if(debug_info){
		GEL_TextOut("Debugging enabled\n");
	}
	if(gel_trace_on){
		GEL_Trace(1);
		GEL_TextOut("GEL_trace enabled\n");
	}
	else{
		GEL_Trace(0);
	}
	//Main SoC DDR PLL
	GEL_TextOut("Setting MAIN_PLL12_HSDIV0_CLKOUT_425MHz\n");
	Write_MMR_Field((CSL_PLL0_CFG_BASE + address_offset + (DDR_PLL_INDEX * 0x1000) + FREQ_CONTROL_0), 68, 12, 0);
	Program_HSDIV(CSL_PLL0_CFG_BASE, address_offset, DDR_PLL_INDEX, 0, 3);
	GEL_TextOut("MAIN_PLL12_HSDIV0_CLKOUT set.\n");
}
hotmenu Set_MAIN_PLL12_HSDIV0_CLKOUT_267MHz(){
	int debug_info = DEBUG;
	int gel_trace_on  = GEL_TRACE;
    address_offset = AddrOffset();
	//for debugging only: 
	if(debug_info){
		GEL_TextOut("Debugging enabled\n");
	}
	if(gel_trace_on){
		GEL_Trace(1);
		GEL_TextOut("GEL_trace enabled\n");
	}
	else{
		GEL_Trace(0);
	}
	//Main SoC DDR PLL
	GEL_TextOut("Setting MAIN_PLL12_HSDIV0_CLKOUT_267MHz\n");
	Write_MMR_Field((CSL_PLL0_CFG_BASE + address_offset + (DDR_PLL_INDEX * 0x1000) + FREQ_CONTROL_0), 64, 12, 0);
	Program_HSDIV(CSL_PLL0_CFG_BASE, address_offset, DDR_PLL_INDEX, 0, 5);
	GEL_TextOut("MAIN_PLL12_HSDIV0_CLKOUT set.\n");
}

hotmenu Set_MAIN_PLL12_HSDIV0_CLKOUT_25MHz(){
	int debug_info = DEBUG;
	int gel_trace_on  = GEL_TRACE;
    address_offset = AddrOffset();
	//for debugging only: 
	if(debug_info){
		GEL_TextOut("Debugging enabled\n");
	}
	if(gel_trace_on){
		GEL_Trace(1);
		GEL_TextOut("GEL_trace enabled\n");
	}
	else{
		GEL_Trace(0);
	}
	//Main SoC DDR PLL
	GEL_TextOut("Setting MAIN_PLL12_HSDIV0_CLKOUT_25MHz\n");
	Write_MMR_Field((CSL_PLL0_CFG_BASE + address_offset + (DDR_PLL_INDEX * 0x1000) + FREQ_CONTROL_0), 64, 12, 0);
	Program_HSDIV(CSL_PLL0_CFG_BASE, address_offset, DDR_PLL_INDEX, 0, 63);
	GEL_TextOut("MAIN_PLL12_HSDIV0_CLKOUT set.\n");
}

hotmenu Set_MAIN_PLL12_HSDIV0_CLKOUT_333MHz(){
	int debug_info = DEBUG;
	int gel_trace_on  = GEL_TRACE;
    address_offset = AddrOffset();
	//for debugging only: 
	if(debug_info){
		GEL_TextOut("Debugging enabled\n");
	}
	if(gel_trace_on){
		GEL_Trace(1);
		GEL_TextOut("GEL_trace enabled\n");
	}
	else{
		GEL_Trace(0);
	}
	//Main SoC DDR PLL
	GEL_TextOut("Setting MAIN_PLL12_HSDIV0_CLKOUT_333MHz\n");
	Write_MMR_Field((CSL_PLL0_CFG_BASE + address_offset + (DDR_PLL_INDEX * 0x1000) + FREQ_CONTROL_0), 40, 12, 0);
	Program_HSDIV(CSL_PLL0_CFG_BASE, address_offset, DDR_PLL_INDEX, 0, 2);
	GEL_TextOut("MAIN_PLL12_HSDIV0_CLKOUT set.\n");
}
