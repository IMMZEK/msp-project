<?xml version="1.0" encoding="UTF-8"?>
<module id="I2S" HW_revision="" XML_version="1.0" description="I2S Audio DMA module supporting formats I2S, LJF, RJF and DSP

" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="setup_parser.xsd">
   <register acronym="WCLKSRC" width="32" description="This register configures the WCLK Source" id="WCLKSRC" offset="0x0">
      <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED3" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="This field Inverts WCLK source (pad or internal)." id="WCLKINV" resetval="0x0">
         <bitenum id="INVERTED" value="1" token="Source is inverted" description="Source is inverted"/>
         <bitenum id="NOT_INTVERTED" value="0" token="Source is not intverted" description="Source is not intverted"/>
      </bitfield>
      <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="This field selects WCLK/BCLK source for I2S." id="WBCLKSRC" resetval="0x0">
         <bitenum id="RESERVED" value="3" token="Not supported. Will give same WCLK as &#39;NONE&#39; (&#39;00&#39;)" description="Not supported. Will give same WCLK as &#39;NONE&#39; (&#39;00&#39;)"/>
         <bitenum id="INT" value="2" token="Internal WCLK generator, from module PRCM" description="Internal WCLK generator, from module PRCM"/>
         <bitenum id="EXT" value="1" token="External WCLK generator, from pad" description="External WCLK generator, from pad"/>
         <bitenum id="NONE" value="0" token="None (&#39;0&#39;)" description="None (&#39;0&#39;)"/>
      </bitfield>
   </register>
   <register acronym="DMACFG" width="32" description="This register configures DMA buffer size" id="DMACFG" offset="0x4">
      <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED8" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="This field defines the length of the DMA buffer. Writing a non-zero value to this register field enables and initializes I2S. 
Note that before doing so, all other configuration must have been done, and INPTRNXT/OUTPTRNXT must have been loaded. " id="ENDFRMIDX" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="DIRCFG" width="32" description="This register configures the direction of data pins(AD0/AD1)" id="DIRCFG" offset="0x8">
      <bitfield range="" begin="31" width="26" end="6" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED6" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="5" width="2" end="4" rwaccess="RW" description="The field configures the AD1 data pin direction" id="AD1" resetval="0x0">
         <bitenum id="RESERVED" value="3" token="Reserved" description="Reserved"/>
         <bitenum id="OUT" value="2" token="Output" description="Output"/>
         <bitenum id="IN" value="1" token="Input" description="Input"/>
         <bitenum id="DIS" value="0" token="Not in use (disabled)" description="Not in use (disabled)"/>
      </bitfield>
      <bitfield range="" begin="3" width="2" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="The field configures the AD0 data pin direction" id="AD0" resetval="0x0">
         <bitenum id="RESERVED" value="3" token="Reserved" description="Reserved"/>
         <bitenum id="OUT" value="2" token="Output" description="Output"/>
         <bitenum id="IN" value="1" token="Input" description="Input"/>
         <bitenum id="DIS" value="0" token="Not in use (disabled)" description="Not in use (disabled)"/>
      </bitfield>
   </register>
   <register acronym="FMTCFG" width="32" description="This register configures the serial interface format " id="FMTCFG" offset="0xc">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="8" end="8" rwaccess="RW" description="This field configures the number of BCLK periods between a WCLK edge and MSB of the first word in a phase

Note: When 0, MSB of the next word will be output in the idle period between LSB of the previous word and the start of the next word. Otherwise logical 0 will be output until the data delay has expired." id="DATADLY" resetval="0x1">
         <bitenum id="MAX" value="255" token="Max(255) BCLK periods - RJF format" description="Max(255) BCLK periods - RJF format"/>
         <bitenum id="TWO" value="2" token="Two(Min) BCLK periods - RJF format" description="Two(Min) BCLK periods - RJF format"/>
         <bitenum id="ONE" value="1" token="One BCLK periods - I2S and DSP formats" description="One BCLK periods - I2S and DSP formats"/>
         <bitenum id="ZERO" value="0" token="Zero BCLK periods - LJF and DSP formats" description="Zero BCLK periods - LJF and DSP formats"/>
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RW" description="This register configures the size of each word stored to or loaded from memory " id="MEMLEN32" resetval="0x0">
         <bitenum id="EN" value="1" token="32-bit(one 32-bit access per sample)" description="32-bit(one 32-bit access per sample)"/>
         <bitenum id="DIS" value="0" token="16-bit (one 16 bit access per sample)" description="16-bit (one 16 bit access per sample)"/>
      </bitfield>
      <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="This field configures the sample edge/ transfer edge of data (and WCLK) on BCLK " id="SMPLEDGE" resetval="0x1">
         <bitenum id="POSEDGE" value="1" token="Data is sampled on the positive edge and clocked out on the negative edge." description="Data is sampled on the positive edge and clocked out on the negative edge."/>
         <bitenum id="NEGEDGE" value="0" token="Data is sampled on the negative edge and clocked out on the positive edge. " description="Data is sampled on the negative edge and clocked out on the positive edge. "/>
      </bitfield>
      <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="This field selects between dual-phase or single-phase format" id="DUALPHASE" resetval="0x1">
         <bitenum id="DUALPHASE" value="1" token="Dual-phase: I2S, LJF and RJF formats" description="Dual-phase: I2S, LJF and RJF formats"/>
         <bitenum id="SINGLEPHASE" value="0" token="Single-phase: DSP format" description="Single-phase: DSP format"/>
      </bitfield>
      <bitfield range="" begin="4" width="5" end="0" rwaccess="RW" description="Number of bits per word (8-24):
In single-phase format, this is the exact number of bits per word. 
In dual-phase format, this is the maximum number of bits per word.

Values below 8 and above 24 give undefined behavior. Data written to memory is always aligned to 16 or 24 bits as defined by MEMLEN24. Bit widths that differ from this alignment will either be truncated or zero padded.
" id="WORDLEN" resetval="0x10">
      </bitfield>
   </register>
   <register acronym="WMASK0" width="32" description="This register configures the word selection dit mask for data pin 0(AD0)" id="WMASK0" offset="0x10">
      <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED8" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Bit-mask indicating valid channels in a frame on AD0.

In single-phase mode, each bit represents one channel, starting with LSB for the first word in the frame. A frame can contain up to 8 channels.  Channels that are not included in the mask will not be sampled and stored in memory, and clocked out as &#39;0&#39;.

In dual-phase mode, only the two LSBs are considered. For a stereo configuration, set both bits. For a mono configuration, set bit 0 only. In mono mode, only channel 0 will be sampled and stored to memory, and channel 0 will be repeated when clocked out.

In mono mode, only channel 0 will be sampled and stored to memory, and channel 0 will be repeated in the second phase when clocked out.

If all bits are zero, no input words will be stored to memory, and the output data lines will be constant &#39;0&#39;. This can be utilized when PWM debug output is desired without any actively used output pins.
" id="MASK" resetval="0x3">
      </bitfield>
   </register>
   <register acronym="WMASK1" width="32" description="This register configures the word selection dit mask for data pin 1(AD1)" id="WMASK1" offset="0x14">
      <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED8" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Bit-mask indicating valid channels in a frame on AD1.

In single-phase mode, each bit represents one channel, starting with LSB for the first word in the frame. A frame can contain up to 8 channels.  Channels that are not included in the mask will not be sampled and stored in memory, and clocked out as &#39;0&#39;.

In dual-phase mode, only the two LSBs are considered. For a stereo configuration, set both bits. For a mono configuration, set bit 0 only. In mono mode, only channel 0 will be sampled and stored to memory, and channel 0 will be repeated when clocked out.

In mono mode, only channel 0 will be sampled and stored to memory, and channel 0 will be repeated in the second phase when clocked out.

If all bits are zero, no input words will be stored to memory, and the output data lines will be constant &#39;0&#39;. This can be utilized when PWM debug output is desired without any actively used output pins." id="MASK" resetval="0x3">
      </bitfield>
   </register>
   <register acronym="INPTRNXT" width="32" description="This register configures DMA input buffer next pointer" id="INPTRNXT" offset="0x20">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="Pointer to the first byte in the next DMA input buffer.

The read value equals the last written value until the currently used DMA input buffer is completed, and then becomes null when the last written value is transferred to the DMA controller to start on the next buffer. This event is signalized by IRQFLAGS.DMAIN. 

At startup, the value must be written once before and once after configuring the DMA buffer size in DMACFG.

The next pointer must be written to this register while the DMA function uses the previously written pointer. If not written in time, IRQFLAGS.PTRERR will be raised and all input pins will be disabled." id="PTR" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="INPTR" width="32" description="This register configures the DMA input buffer current pointer" id="INPTR" offset="0x24">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RO" description="Value of the DMA input buffer pointer currently used by the DMA controller. Incremented by 1 (byte) or 2 (word) for each AHB access." id="PTR" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="OUTPTRNXT" width="32" description="This register configures DMA output buffer next pointer" id="OUTPTRNXT" offset="0x28">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="Pointer to the first byte in the next DMA output buffer.

The read value equals the last written value until the currently used DMA output buffer is completed, and then becomes null when the last written value is transferred to the DMA controller to start on the next buffer. This event is signalized by IRQFLAGS.DMAOUT. 

At startup, the value must be written once before and once after configuring the DMA buffer size in DMACFG. At this time, the first two samples will be fetched from memory.

The next pointer must be written to this register while the DMA function uses the previously written pointer. If not written in time, IRQFLAGS.PTRERR will be raised and all output pins will be disabled." id="PTR" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="OUTPTR" width="32" description="This register configures DMA output buffer current pointer" id="OUTPTR" offset="0x2c">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RO" description="Value of the DMA output buffer pointer currently used by the DMA controller Incremented by 1 (byte) or 2 (word) for each AHB access." id="PTR" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="STMPCTL" width="32" description="This register controls the samplestamp generator." id="STMPCTL" offset="0x34">
      <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED3" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="This field is low until the output pins are ready to be started by the samplestamp generator. When started (that is STMPOUTTRIG equals the WCLK counter) the bit goes back low." id="OUTRDY" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="This field is low until the input pins are ready to be started by the samplestamp generator. When started (that is STMPINTRIG equals the WCLK counter) the bit goes back low." id="INRDY" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="This field configures the samplestamp generator. The samplestamp generator must only be enabled after it has been properly configured.
When cleared, all samplestamp generator counters and capture values are cleared.
" id="STMPEN" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable the samplestamp generator" description="Enable the samplestamp generator"/>
         <bitenum id="DIS" value="0" token="Disable the samplestamp generator" description="Disable the samplestamp generator"/>
      </bitfield>
   </register>
   <register acronym="STMPXCNTCAPT0" width="32" description="This register gives the captured XOSC counter value, capture channel 0" id="STMPXCNTCAPT0" offset="0x38">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RO" description="The value of the samplestamp XOSC counter (STMPXCNT.CURRVALUE) last time an event was pulsed (event source selected in [EVENT.I2SSTMPSEL0.EV] for channel 0). This number corresponds to the number of 24 MHz clock cycles since the last positive edge of the selected WCLK.
The value is cleared when STMPCTL.STMPEN = 0.
Note: Due to buffering and synchronization, WCLK is delayed by a small number of BCLK periods and clk periods.
Note: When calculating the fractional part of the sample stamp, STMPXPER may be less than this bit field.
" id="CAPTVALUE" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="STMPXPER" width="32" description="The register gives the XOSC period value" id="STMPXPER" offset="0x3c">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RO" description="The number of 24 MHz clock cycles in the previous WCLK period (that is -  the next value of the XOSC counter at the positive WCLK edge, had it not been reset to 0).
The value is cleared when STMPCTL.STMPEN = 0.
" id="VALUE" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="STMPWCNTCAPT0" width="32" description="This register gives the captured WCLK counter value, capture channel 0" id="STMPWCNTCAPT0" offset="0x40">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RO" description="The value of the samplestamp WCLK counter (STMPWCNT.CURRVALUE) last time an event was pulsed (event source selected in EVENT:I2SSTMPSEL0.EV for channel 0). This number corresponds to the number of positive WCLK edges since the samplestamp generator was enabled (not taking modification through STMPWADD/STMPWSET into account).
The value is cleared when STMPCTL.STMPEN = 0.
" id="CAPT_VALUE" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="STMPWPER" width="32" description="This register configures WCLK counter period value" id="STMPWPER" offset="0x44">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RW" description="This field defines when STMPWCNT is to be reset so number of WCLK edges are found for the size of the sample buffer. This is thus a modulo value for the WCLK counter. This number must correspond to the size of the sample buffer used by the system (that is the index of the last sample plus 1)." id="VALUE" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="STMPINTRIG" width="32" description="This register configures WCLK counter trigger value for input pins" id="STMPINTRIG" offset="0x48">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RW" description="This field configures the compare value used to start the incoming audio streams.
This bit field shall equal the WCLK counter value during the WCLK period in which the first input word(s) are sampled and stored to memory (that is the sample at the start of the very first DMA input buffer).

The value of this register takes effect when the following conditions are met:
- One or more pins are configured as inputs in DIRCFG.
- DMACFG has been configured for the correct buffer size, and at least 32 BCLK cycle ticks have happened.

Note: To avoid false triggers, this bit field should be set higher than STMPWPER.VALUE.
" id="INSTARTWCNT" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="STMPOUTTRIG" width="32" description="This register configures WCLK counter trigger value for output pins" id="STMPOUTTRIG" offset="0x4c">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RW" description="This field cofnigures the compare value used to start the outgoing audio streams.

This bit field must equal the WCLK counter value during the WCLK period in which the first output word(s) read from memory are clocked out (that is the sample at the start of the very first DMA output buffer).

The value of this register takes effect when the following conditions are met:
- One or more pins are configured as outputs in DIRCFG.
- DMACFG has been configured for the correct buffer size, and 32 BCLK cycle ticks have happened.
- 2 samples have been preloaded from memory (examine the OUTPTR register if necessary). 
Note: The memory read access is only performed when required, that is channels 0/1 must be selected in WMASK0/WMASK1.

Note: To avoid false triggers, this bit field should be set higher than STMPWPER.VALUE.
" id="OUTSTARTWCNT" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="STMPWSET" width="32" description="This register confiures WCLK counter set operation" id="STMPWSET" offset="0x50">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="WO" description="Sets the running WCLK counter equal to the written value. " id="VALUE" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="STMPWADD" width="32" description="This register configures WCLK counter add operation" id="STMPWADD" offset="0x54">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="WO" description="Adds the written value to the running WCLK counter. If a positive edge of WCLK occurs at the same time as the operation, this will be taken into account.
To add a negative value, write &#34;STMPWPER.VALUE - value&#34;.
 " id="VALUEINC" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="STMPXPERMIN" width="32" description="This register configures XOSC minimum period value
Minimum Value of STMPXPER" id="STMPXPERMIN" offset="0x58">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RW" description="Each time STMPXPER is updated, the value is also loaded into this register, provided that the value is smaller than the current value in this register.
When written, the register is reset to 0xFFFF (65535), regardless of the value written.
The minimum value can be used to detect extra WCLK pulses (this registers value will be significantly smaller than STMPXPER.VALUE).
" id="VALUE" resetval="0xffff">
      </bitfield>
   </register>
   <register acronym="STMPWCNT" width="32" description="This register gives the current value of WLCK counter" id="STMPWCNT" offset="0x5c">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RO" description="Current value of the WCLK counter" id="CURRVALUE" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="STMPXCNT" width="32" description="This register gives the current value XOSC counter" id="STMPXCNT" offset="0x60">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RO" description="Current value of the XOSC counter, latched when reading STMPWCNT." id="CURRVALUE" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="IRQMASK" width="32" description="Interrupt Mask Register

Selects mask states of the flags in IRQFLAGS that contribute to the I2S_IRQ event." id="IRQMASK" offset="0x70">
      <bitfield range="" begin="31" width="25" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="IRQFLAGS.XCNTCAPT interrupt mask" id="XCNTCAPT" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable the interrupt mask" description="Enable the interrupt mask"/>
         <bitenum id="DIS" value="0" token="Disable the interrupt mask" description="Disable the interrupt mask"/>
      </bitfield>
      <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="IRQFLAGS.DMAIN interrupt mask" id="DMAIN" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable the interrupt mask" description="Enable the interrupt mask"/>
         <bitenum id="DIS" value="0" token="Disable the interrupt mask" description="Disable the interrupt mask"/>
      </bitfield>
      <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="IRQFLAGS.DMAOUT interrupt mask" id="DMAOUT" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable the interrupt mask" description="Enable the interrupt mask"/>
         <bitenum id="DIS" value="0" token="Disable the interrupt mask" description="Disable the interrupt mask"/>
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="IRQFLAGS.WCLKTIMEOUT interrupt mask" id="WCLKTIMEOUT" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable the interrupt mask" description="Enable the interrupt mask"/>
         <bitenum id="DIS" value="0" token="Disable the interrupt mask" description="Disable the interrupt mask"/>
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="IRQFLAGS.BUSERR interrupt mask" id="BUSERR" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable the interrupt mask" description="Enable the interrupt mask"/>
         <bitenum id="DIS" value="0" token="Disable the interrupt mask" description="Disable the interrupt mask"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="IRQFLAGS.WCLKERR interrupt mask
" id="WCLKERR" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable the interrupt mask" description="Enable the interrupt mask"/>
         <bitenum id="DIS" value="0" token="Disable the interrupt mask" description="Disable the interrupt mask"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="IRQFLAGS.PTRERR interrupt mask.
" id="PTRERR" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable the interrupt mask" description="Enable the interrupt mask"/>
         <bitenum id="DIS" value="0" token="Disable the interrupt mask" description="Disable the interrupt mask"/>
      </bitfield>
   </register>
   <register acronym="IRQFLAGS" width="32" description="This registers gives the raw interrupt status" id="IRQFLAGS" offset="0x74">
      <bitfield range="" begin="31" width="25" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="1" end="6" rwaccess="RO" description="This interrupt is set when xcnt counter is captured either by events or software. 
Needs to be cleared by software." id="XCNTCAPT" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="5" width="1" end="5" rwaccess="RO" description="This interrupt is set when condition for this bit field event occurs (auto cleared when input pointer is updated - AIFINPTRNEXT), see description of AIFINPTRNEXT register for details." id="DMAIN" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="4" width="1" end="4" rwaccess="RO" description="This interrupt is set when condition for this bit field event occurs (auto cleared when output pointer is updated - OUTPTRNXT), see description of OUTPTRNXT register for details" id="DMAOUT" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="RO" description="Set when the sample stamp generator does not detect a positive WCLK edge for  65535 clk periods. This signalizes that the internal or external BCLK and WCLK generator source has been disabled.

The bit is sticky and may only be cleared by software (by writing &#39;1&#39; to IRQCLR.WCLKTIMEOUT)." id="WCLKTIMEOUT" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="This interrupt set when a DMA operation is not completed in time (that is audio output buffer underflow, or audio input buffer overflow). 
This error requires a complete restart since word synchronization has been lost. The bit is sticky and may only be cleared by software (by writing &#39;1&#39; to IRQCLR.BUSERR).

Note that DMA initiated transactions to illegal addresses will not trigger an interrupt. The response to such transactions is undefined." id="BUSERR" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="This interrupt is set when: 
- An unexpected WCLK edge occurs during the data delay period of a phase.  Note unexpected WCLK edges during the word and idle periods of the phase are not detected.
-  In dual-phase mode, when two WCLK edges are less than 4 BCLK cycles apart.
-  In single-phase mode, when a WCLK pulse occurs before the last channel.
This error requires a complete restart since word synchronization has been lost. The bit is sticky and may only be cleared by software (by writing &#39;1&#39; to IRQCLR.WCLKERR)." id="WCLKERR" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="This interrupt set when INPTRNXT or OUTPTRNXT has not been loaded with the next block address in time. 
This error requires a complete restart since word synchronization has been lost. The bit is sticky and may only be cleared by software (by writing &#39;1&#39; to IRQCLR.PTRERR).
" id="PTRERR" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
   </register>
   <register acronym="IRQSET" width="32" description="Interrupt Set Register. This register can be used by software for diagnostics and safety checking purposes." id="IRQSET" offset="0x78">
      <bitfield range="" begin="31" width="25" end="7" rwaccess="WO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="1" end="6" rwaccess="WO" description="This field sets the interrupt IRQFLAGS.XCNTCAPT (unless a auto clear criteria was given at the same time, in which the set will be ignored)" id="XCNTCAPT" resetval="0x0">
         <bitenum id="SET" value="1" token="Set interrupt" description="Set interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="5" width="1" end="5" rwaccess="WO" description="This field sets the interrupt IRQFLAGS.DMAIN (unless a auto clear criteria was given at the same time, in which the set will be ignored)" id="DMAIN" resetval="0x0">
         <bitenum id="SET" value="1" token="Set interrupt" description="Set interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="4" width="1" end="4" rwaccess="WO" description="This field sets the interrupt IRQFLAGS.DMAOUT (unless a auto clear criteria was given at the same time, in which the set will be ignored)" id="DMAOUT" resetval="0x0">
         <bitenum id="SET" value="1" token="Set interrupt" description="Set interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="WO" description="This field sets the interrupt IRQFLAGS.WCLKTIMEOUT(unless a auto clear criteria was given at the same time, in which the set will be ignored)" id="WCLKTIMEOUT" resetval="0x0">
         <bitenum id="SET" value="1" token="Set interrupt" description="Set interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="WO" description="1: Sets the interrupt of IRQFLAGS.BUSERR(unless a auto clear criteria was given at the same time, in which the set will be ignored)" id="BUSERR" resetval="0x0">
         <bitenum id="SET" value="1" token="Set interrupt" description="Set interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="WO" description="This field sets the interrupt IRQFLAGS.WCLKERR(unless a auto clear criteria was given at the same time, in which the set will be ignored)" id="WCLKERR" resetval="0x0">
         <bitenum id="SET" value="1" token="Set interrupt" description="Set interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="This field sets the interrupt IRQFLAGS.PTRERR(unless a auto clear criteria was given at the same time, in which the set will be ignored)" id="PTRERR" resetval="0x0">
         <bitenum id="SET" value="1" token="Set interrupt" description="Set interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
   </register>
   <register acronym="IRQCLR" width="32" description="Interrupt clear register. This register allows software to clear interrupts." id="IRQCLR" offset="0x7c">
      <bitfield range="" begin="31" width="25" end="7" rwaccess="WO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="1" end="6" rwaccess="WO" description="Ths field clears the interrupt IRQFLAGS.XCNTCAPT (unless a set criteria was given at the same time in which the clear will be ignored)" id="XCNTCAPT" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear interrupt" description="Clear interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="5" width="1" end="5" rwaccess="WO" description="This field clears the interrupt of IRQFLAGS.DMAIN (unless a set criteria was given at the same time in which the clear will be ignored)" id="DMAIN" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear interrupt" description="Clear interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="4" width="1" end="4" rwaccess="WO" description="This field clears the interrupt IRQFLAGS.DMAOUT (unless a set criteria was given at the same time in which the clear will be ignored)" id="DMAOUT" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear interrupt" description="Clear interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="WO" description="1: Clears the interrupt of IRQFLAGS.WCLKTIMEOUT (unless a set criteria was given at the same time in which the clear will be ignored)" id="WCLKTIMEOUT" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear interrupt" description="Clear interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="WO" description="This field clears the interrupt IRQFLAGS.BUSERR (unless a set criteria was given at the same time in which the clear will be ignored)" id="BUSERR" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear interrupt" description="Clear interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="WO" description="This field clears the interrupt IRQFLAGS.WCLKERR (unless a set criteria was given at the same time in which the clear will be ignored)" id="WCLKERR" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear interrupt" description="Clear interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="This field clears the interrupt IRQFLAGS.PTRERR (unless a set criteria was given at the same time in which the clear will be ignored)" id="PTRERR" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear interrupt" description="Clear interrupt"/>
         <bitenum id="NOEFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
   </register>
   <register acronym="MCLKDIV" width="32" description="This field configures MCLK division ratio" id="MCLKDIV" offset="0x80">
      <bitfield range="" begin="31" width="22" end="10" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED10" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="9" width="10" end="0" rwaccess="RW" description="    An unsigned factor of the division ratio used to generate MCLK [2-1024]:
                                            MCLK = MCUCLK/MDIV[Hz] MCUCLK is upto 96MHz. 
                                            A value of 0 is interpreted as 1024.
                                            A value of 1 is invalid. 
                                            If MDIV is odd the low phase of the clock is one MCUCLK period longer than the high phase." id="MDIV" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="BCLKDIV" width="32" description="This field configures BCLK division ratio" id="BCLKDIV" offset="0x84">
      <bitfield range="" begin="31" width="22" end="10" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED10" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="9" width="10" end="0" rwaccess="RW" description="    An unsigned factor of the division ratio used to generate BCLK [2-1024]:
                                            BCLK = MCUCLK/BDIV[Hz] MCUCLK can be upto 96MHz. 
                                            A value of 0 is interpreted as 1024.
                                            A value of 1 is invalid. 
                                            If BDIV is odd and [CLKCTL.SMPLONPOSEDGE.*] = 0, the low phase of the clock is one MCUCLK period longer than the high phase. 
                                            If BDIV is odd and [AIFCLKCTL.SMPL_ON_POSEDGE.*] = 1 , the high phase of the clock is one MCUCLK period longer than the low phase." id="BDIV" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="WCLKDIV" width="32" description="This field configures WCLK division ratio" id="WCLKDIV" offset="0x88">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RW" description="   If [CLKCTL.WCLKPHASE.*] = 0, Single phase. WCLK is high one BCLK period and low WDIV[9:0] (unsigned, [1-1023]) BCLK periods. 
                                           WCLK = MCUCLK / BDIV*(WDIV[9:0] + 1) [Hz] MCUCLK upto 96MHz. 
                                           If [CLKCTL.WCLKPHASE.*] = 1, Dual phase. Each phase on WCLK (50% duty cycle) is WDIV[9:0] (unsigned, [1-1023]) BCLK periods. 
                                           **WCLK **= **MCUCLK **/ BDIV*(2*WDIV[9:0]) [Hz] 
                                           If [CLKCTL.WCLKPHASE.*] = 2, User defined. WCLK is high WDIV[7:0] (unsigned, [1-255]) BCLK periods and low WDIV[15:8] (unsigned, [1-255]) BCLK periods.
                                           WCLK = **MCUCLK **/ (BDIV*(WDIV[7:0] + WDIV[15:8]) [Hz]" id="WDIV" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="CLKCTL" width="32" description="This register controls internal audio clock" id="CLKCTL" offset="0x8c">
      <bitfield range="" begin="31" width="28" end="4" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED4" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="This field configures the MCLK generation" id="MEN" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable the generation" description="Enable the generation"/>
         <bitenum id="DIS" value="0" token="Disable the generation" description="Disable the generation"/>
      </bitfield>
      <bitfield range="" begin="2" width="2" end="1" rwaccess="RW" description="The field configures how the WCLK division ratio is calculated and used to generate different duty cycles (See [WCLKDIV.WDIV.*])" id="WCLKPHASE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="This field configures WCLK/BCLK generation " id="WBEN" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable the generation" description="Enable the generation"/>
         <bitenum id="DIS" value="0" token="Disables the generation" description="Disables the generation"/>
      </bitfield>
   </register>
   <register acronym="DTB" width="32" description="Digital test bus control" id="DTB" offset="0x90">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="The field controls the select of DTB " id="SEL" resetval="0x0">
         <bitenum id="SEL_3" value="3" token="{12{1&#39;b0},aif_words_sampled, aif_word_loaded, aif_output_en, aif_input_en}" description="{12{1&#39;b0},aif_words_sampled, aif_word_loaded, aif_output_en, aif_input_en}"/>
         <bitenum id="SEL_2" value="2" token="Samplestamp XCNT(16 bits)" description="Samplestamp XCNT(16 bits)"/>
         <bitenum id="SEL_1" value="1" token="Samplestamp WCNT(16 bits)" description="Samplestamp WCNT(16 bits)"/>
         <bitenum id="SEL_0" value="0" token="None is selected" description="None is selected"/>
      </bitfield>
   </register>
</module>
