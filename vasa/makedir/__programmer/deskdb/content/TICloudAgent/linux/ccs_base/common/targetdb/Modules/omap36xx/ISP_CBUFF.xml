<module name="ISP_CBUFF" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="CBUFF_REVISION" acronym="CBUFF_REVISION" offset="0x0" width="32" description="This register contains the IP revision code">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="REV" width="8" begin="7" end="0" resetval="TI internal data" description="IP revision[7:4] Major revision . [3:0] Minor revision ." range="" rwaccess="R"/>
  </register>
  <register id="CBUFF_SYSCONFIG" acronym="CBUFF_SYSCONFIG" offset="0x10" width="32" description="This register allows controlling various parameters of the Interconnect interface.">
    <bitfield id="RESERVED" width="32" begin="31" end="0" resetval="0x00000000" description="Write 0s for future compatibility. Reads return zero." range="" rwaccess="RW"/>
  </register>
  <register id="CBUFF_SYSSTATUS" acronym="CBUFF_SYSSTATUS" offset="0x14" width="32" description="The register provides status information about the module, excluding the interrupt status information">
    <bitfield id="RESERVED" width="32" begin="31" end="0" resetval="0x00000000" description="Reserved for module-specific status information. Reads return 0" range="" rwaccess="R"/>
  </register>
  <register id="CBUFF_IRQSTATUS" acronym="CBUFF_IRQSTATUS" offset="0x18" width="32" description="The interrupt status register regroups all the status of the module internal events that can generate an interrupt.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0000000" description="Write 0s for future compatibility. Reads return zero." range="" rwaccess="RW"/>
    <bitfield id="IRQ_CBUFF1_OVR" width="1" begin="5" end="5" resetval="0x0" description="Buffer overflow event." range="" rwaccess="R/W/1toClr">
      <bitenum value="0" token="IRQ_CBUFF1_OVR_0" description="No done interrupt pending (r); Status unchanged (w)."/>
      <bitenum value="1" token="IRQ_CBUFF1_OVR_1" description="Done interrupt pending (r); Status bit cleared (w)."/>
    </bitfield>
    <bitfield id="IRQ_CBUFF1_INVALID" width="1" begin="4" end="4" resetval="0x0" description="Invalid access." range="" rwaccess="R/W/1toClr">
      <bitenum value="0" token="IRQ_CBUFF1_INVALID_0" description="No done interrupt pending (r); Status unchanged (w)."/>
      <bitenum value="1" token="IRQ_CBUFF1_INVALID_1" description="Done interrupt pending (r); Status bit cleared (w)."/>
    </bitfield>
    <bitfield id="IRQ_CBUFF1_READY" width="1" begin="3" end="3" resetval="0x0" description="The CPUW1 physical buffer is ready to be accessed by the CPU." range="" rwaccess="R/W/1toClr">
      <bitenum value="0" token="IRQ_CBUFF1_READY_0" description="No done interrupt pending (r); Status unchanged (w)."/>
      <bitenum value="1" token="IRQ_CBUFF1_READY_1" description="Done interrupt pending (r); Status bit cleared (w)."/>
    </bitfield>
    <bitfield id="IRQ_CBUFF0_OVR" width="1" begin="2" end="2" resetval="0x0" description="Buffer overflow event." range="" rwaccess="R/W/1toClr">
      <bitenum value="0" token="IRQ_CBUFF0_OVR_0" description="No done interrupt pending (r); Status unchanged (w)."/>
      <bitenum value="1" token="IRQ_CBUFF0_OVR_1" description="Done interrupt pending (r); Status bit cleared (w)."/>
    </bitfield>
    <bitfield id="IRQ_CBUFF0_INVALID" width="1" begin="1" end="1" resetval="0x0" description="Invalid access." range="" rwaccess="R/W/1toClr">
      <bitenum value="0" token="IRQ_CBUFF0_INVALID_0" description="No YUV buffer done interrupt pending (r); Status unchanged (w)."/>
      <bitenum value="1" token="IRQ_CBUFF0_INVALID_1" description="YUV buffer done interrupt pending (r); Status bit cleared (w)."/>
    </bitfield>
    <bitfield id="IRQ_CBUFF0_READY" width="1" begin="0" end="0" resetval="0x0" description="The CPUW0 physical buffer is ready to be accessed by the CPU." range="" rwaccess="R/W/1toClr">
      <bitenum value="0" token="IRQ_CBUFF0_READY_0" description="No done interrupt pending (r); Status unchanged (w)."/>
      <bitenum value="1" token="IRQ_CBUFF0_READY_1" description="Done interrupt pending (r); Status bit cleared (w)."/>
    </bitfield>
  </register>
  <register id="CBUFF_IRQENABLE" acronym="CBUFF_IRQENABLE" offset="0x1C" width="32" description="The interrupt enable register allows to enable/disable the module internal sources of interrupt, on an event-by-event basis.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0000000" description="Write 0s for future compatibility. Reads return zero." range="" rwaccess="RW"/>
    <bitfield id="IRQ_CBUFF1_OVR" width="1" begin="5" end="5" resetval="0x0" description="Buffer overflow event." range="" rwaccess="RW">
      <bitenum value="0" token="IRQ_CBUFF1_OVR_0" description="interrupt is masked"/>
      <bitenum value="1" token="IRQ_CBUFF1_OVR_1" description="Interrupt is enabled"/>
    </bitfield>
    <bitfield id="IRQ_CBUFF1_INVALID" width="1" begin="4" end="4" resetval="0x0" description="Invalid access." range="" rwaccess="RW">
      <bitenum value="0" token="IRQ_CBUFF1_INVALID_0" description="interrupt is masked"/>
      <bitenum value="1" token="IRQ_CBUFF1_INVALID_1" description="Interrupt is enabled"/>
    </bitfield>
    <bitfield id="IRQ_CBUFF1_READY" width="1" begin="3" end="3" resetval="0x0" description="The CPUW1 physical buffer is ready to be accessed by the CPU." range="" rwaccess="RW">
      <bitenum value="0" token="IRQ_CBUFF1_READY_0" description="interrupt is masked"/>
      <bitenum value="1" token="IRQ_CBUFF1_READY_1" description="Interrupt is enabled"/>
    </bitfield>
    <bitfield id="IRQ_CBUFF0_OVR" width="1" begin="2" end="2" resetval="0x0" description="Buffer overflow event." range="" rwaccess="RW">
      <bitenum value="0" token="IRQ_CBUFF0_OVR_0" description="interrupt is masked"/>
      <bitenum value="1" token="IRQ_CBUFF0_OVR_1" description="Interrupt is enabled"/>
    </bitfield>
    <bitfield id="IRQ_CBUFF0_INVALID" width="1" begin="1" end="1" resetval="0x0" description="Invalid access." range="" rwaccess="RW">
      <bitenum value="0" token="IRQ_CBUFF0_INVALID_0" description="interrupt is masked"/>
      <bitenum value="1" token="IRQ_CBUFF0_INVALID_1" description="Interrupt is enabled"/>
    </bitfield>
    <bitfield id="IRQ_CBUFF0_READY" width="1" begin="0" end="0" resetval="0x0" description="The CPUW0 physical buffer is ready to be accessed by the CPU." range="" rwaccess="RW">
      <bitenum value="0" token="IRQ_CBUFF0_READY_0" description="interrupt is masked"/>
      <bitenum value="1" token="IRQ_CBUFF0_READY_1" description="Interrupt is enabled"/>
    </bitfield>
  </register>
  <register id="CBUFFx_CTRL_0" acronym="CBUFFx_CTRL_0" offset="0x20" width="32" description="Circular buffer x control register">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
    <bitfield id="WCOUNT" width="2" begin="9" end="8" resetval="0x0" description="Window count" range="" rwaccess="RW">
      <bitenum value="0" token="WCOUNT_0" description="2 windows"/>
      <bitenum value="1" token="WCOUNT_1" description="4 windows"/>
      <bitenum value="2" token="WCOUNT_2" description="8 windows"/>
      <bitenum value="3" token="WCOUNT_3" description="16 windows"/>
    </bitfield>
    <bitfield id="BCF" width="4" begin="7" end="4" resetval="0x0" description="This register controls the bandwidth control feedback loop output.Functionality depends on subsystem integration.0: Control loop disabled. Data read from memory is free running.1-15: The control feedback loop signal is asserted when the window count available for ISP is below () the threshold.In other words at least (=) BCF windows are available for ISP access when this signal is released." range="" rwaccess="RW"/>
    <bitfield id="ALLOW_NW_EQ_CPUW" width="1" begin="3" end="3" resetval="0x0" description="Allow NW=CPUW. Better buffer utilization when ISP does not use the next write window." range="" rwaccess="RW">
      <bitenum value="0" token="ALLOW_NW_EQ_CPUW_0" description="When the CPUW and the NW pointers designate the same window and accesses are effectively performed to those windows an overflow event occurs.This happens when - the CPU has received an READY IRQ for that window indicating that it can be accessed and - the ISP performs an access to that window. ISP accesses are tracked based on OCPI activity."/>
      <bitenum value="1" token="ALLOW_NW_EQ_CPUW_1" description="When the CPUW and the CW pointers designate the same window and accesses are effectively performed to those windows an overflow event occurs.This happens when - the CPU has received an READY IRQ for that window indicating that it can be accessed and - the ISP performs an access to that window. ISP accesses are tracked based on OCPI activity."/>
    </bitfield>
    <bitfield id="DONE" width="1" begin="2" end="2" resetval="0x0" description="Write this bit to 1 to indicate the CPU has finished processing its physical buffer.This bit is automatically cleared by hardware, reads always return 0." range="" rwaccess="W">
      <bitenum value="0" token="DONE_0" description="No effect."/>
      <bitenum value="1" token="DONE_1" description="The CPU has completely processed the CPUW physical buffer."/>
    </bitfield>
    <bitfield id="RWMODE" width="1" begin="1" end="1" resetval="0x0" description="Selects read or write mode" range="" rwaccess="RW">
      <bitenum value="0" token="RWMODE_0" description="Write mode. HW writes and CPU reads the physical space. CPU accesses are out of CBUFF module's scope, therefore only writes are permitted between CBUFF0_START and CBUFF0_END."/>
      <bitenum value="1" token="RWMODE_1" description="Read mode. HW reads and CPU writes the physical space. CPU accesses are out of CBUFF module's scope; therefore only reads are permitted between CBUFF0_START and CBUFF0_END."/>
    </bitfield>
    <bitfield id="ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enable/disable" range="" rwaccess="RW">
      <bitenum value="0" token="ENABLE_0" description="Disables the circular buffer 0; this resets the internal state of circular buffer 0. All accesses received on OCPI are transmitted to OCPO without modification. Disabling the module takes effect immediately. It is SW responsibility to ensure that no more accesses to CBUFF0 are outstanding before disabling the module. Otherwise memory corruption may occur."/>
      <bitenum value="1" token="ENABLE_1" description="Enable the circular buffer 0. All accesses between CBUFF0_START and CBUFF0_END are processed by the module."/>
    </bitfield>
  </register>
  <register id="CBUFFx_CTRL_1" acronym="CBUFFx_CTRL_1" offset="0x24" width="32" description="Circular buffer x control register">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
    <bitfield id="WCOUNT" width="2" begin="9" end="8" resetval="0x0" description="Window count" range="" rwaccess="RW">
      <bitenum value="0" token="WCOUNT_0" description="2 windows"/>
      <bitenum value="1" token="WCOUNT_1" description="4 windows"/>
      <bitenum value="2" token="WCOUNT_2" description="8 windows"/>
      <bitenum value="3" token="WCOUNT_3" description="16 windows"/>
    </bitfield>
    <bitfield id="BCF" width="4" begin="7" end="4" resetval="0x0" description="This register controls the bandwidth control feedback loop output.Functionality depends on subsystem integration.0: Control loop disabled. Data read from memory is free running.1-15: The control feedback loop signal is asserted when the window count available for ISP is below () the threshold.In other words at least (=) BCF windows are available for ISP access when this signal is released." range="" rwaccess="RW"/>
    <bitfield id="ALLOW_NW_EQ_CPUW" width="1" begin="3" end="3" resetval="0x0" description="Allow NW=CPUW. Better buffer utilization when ISP does not use the next write window." range="" rwaccess="RW">
      <bitenum value="0" token="ALLOW_NW_EQ_CPUW_0" description="When the CPUW and the NW pointers designate the same window and accesses are effectively performed to those windows an overflow event occurs.This happens when - the CPU has received an READY IRQ for that window indicating that it can be accessed and - the ISP performs an access to that window. ISP accesses are tracked based on OCPI activity."/>
      <bitenum value="1" token="ALLOW_NW_EQ_CPUW_1" description="When the CPUW and the CW pointers designate the same window and accesses are effectively performed to those windows an overflow event occurs.This happens when - the CPU has received an READY IRQ for that window indicating that it can be accessed and - the ISP performs an access to that window. ISP accesses are tracked based on OCPI activity."/>
    </bitfield>
    <bitfield id="DONE" width="1" begin="2" end="2" resetval="0x0" description="Write this bit to 1 to indicate the CPU has finished processing its physical buffer.This bit is automatically cleared by hardware, reads always return 0." range="" rwaccess="W">
      <bitenum value="0" token="DONE_0" description="No effect."/>
      <bitenum value="1" token="DONE_1" description="The CPU has completely processed the CPUW physical buffer."/>
    </bitfield>
    <bitfield id="RWMODE" width="1" begin="1" end="1" resetval="0x0" description="Selects read or write mode" range="" rwaccess="RW">
      <bitenum value="0" token="RWMODE_0" description="Write mode. HW writes and CPU reads the physical space. CPU accesses are out of CBUFF module's scope, therefore only writes are permitted between CBUFF0_START and CBUFF0_END."/>
      <bitenum value="1" token="RWMODE_1" description="Read mode. HW reads and CPU writes the physical space. CPU accesses are out of CBUFF module's scope; therefore only reads are permitted between CBUFF0_START and CBUFF0_END."/>
    </bitfield>
    <bitfield id="ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enable/disable" range="" rwaccess="RW">
      <bitenum value="0" token="ENABLE_0" description="Disables the circular buffer 0; this resets the internal state of circular buffer 0. All accesses received on OCPI are transmitted to OCPO without modification. Disabling the module takes effect immediately. It is SW responsibility to ensure that no more accesses to CBUFF0 are outstanding before disabling the module. Otherwise memory corruption may occur."/>
      <bitenum value="1" token="ENABLE_1" description="Enable the circular buffer 0. All accesses between CBUFF0_START and CBUFF0_END are processed by the module."/>
    </bitfield>
  </register>
  <register id="CBUFFx_STATUS_0" acronym="CBUFFx_STATUS_0" offset="0x30" width="32" description="Threshold value used to check if the CW or NW windows are full.">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="NW" width="4" begin="19" end="16" resetval="0x1" description="Next window number.Valid values depend on the CBUFF_CTRL.WCOUNT register." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="CW" width="4" begin="11" end="8" resetval="0x0" description="Current window number.Valid values depend on the CBUFF_CTRL.WCOUNT register." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="CPUW" width="4" begin="3" end="0" resetval="0x0" description="Current CPU window number.Valid values depend on the CBUFF_CTRL.WCOUNT register." range="" rwaccess="R"/>
  </register>
  <register id="CBUFFx_STATUS_1" acronym="CBUFFx_STATUS_1" offset="0x34" width="32" description="Threshold value used to check if the CW or NW windows are full.">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="NW" width="4" begin="19" end="16" resetval="0x1" description="Next window number.Valid values depend on the CBUFF_CTRL.WCOUNT register." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="CW" width="4" begin="11" end="8" resetval="0x0" description="Current window number.Valid values depend on the CBUFF_CTRL.WCOUNT register." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="CPUW" width="4" begin="3" end="0" resetval="0x0" description="Current CPU window number.Valid values depend on the CBUFF_CTRL.WCOUNT register." range="" rwaccess="R"/>
  </register>
  <register id="CBUFFx_START_0" acronym="CBUFFx_START_0" offset="0x40" width="32" description="Start address of the virtual space managed by circular buffer x. Start address of the 1st physical buffer managed by circular buffer x.">
    <bitfield id="ADDR" width="29" begin="31" end="3" resetval="0x00000000" description="Address, in 64 bit words." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="2" end="0" resetval="0x0" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CBUFFx_START_1" acronym="CBUFFx_START_1" offset="0x44" width="32" description="Start address of the virtual space managed by circular buffer x. Start address of the 1st physical buffer managed by circular buffer x.">
    <bitfield id="ADDR" width="29" begin="31" end="3" resetval="0x00000000" description="Address, in 64 bit words." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="2" end="0" resetval="0x0" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CBUFFx_END_0" acronym="CBUFFx_END_0" offset="0x50" width="32" description="End address of the virtual space managed by circular buffer x.">
    <bitfield id="ADDR" width="29" begin="31" end="3" resetval="0x00000000" description="Address, in 64 bit words." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="2" end="0" resetval="0x0" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CBUFFx_END_1" acronym="CBUFFx_END_1" offset="0x54" width="32" description="End address of the virtual space managed by circular buffer x.">
    <bitfield id="ADDR" width="29" begin="31" end="3" resetval="0x00000000" description="Address, in 64 bit words." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="2" end="0" resetval="0x0" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CBUFFx_WINDOWSIZE_0" acronym="CBUFFx_WINDOWSIZE_0" offset="0x60" width="32" description="Defines the window size.">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
    <bitfield id="SIZE" width="21" begin="23" end="3" resetval="0x000000" description="Size, in 64 bit words." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="2" end="0" resetval="0x0" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CBUFFx_WINDOWSIZE_1" acronym="CBUFFx_WINDOWSIZE_1" offset="0x64" width="32" description="Defines the window size.">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
    <bitfield id="SIZE" width="21" begin="23" end="3" resetval="0x000000" description="Size, in 64 bit words." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="2" end="0" resetval="0x0" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CBUFFx_THRESHOLD_0" acronym="CBUFFx_THRESHOLD_0" offset="0x70" width="32" description="Threshold value used to check if a write window is full.">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
    <bitfield id="THRESHOLD" width="24" begin="23" end="0" resetval="0x000000" description="Threshold value, in bytes." range="" rwaccess="RW"/>
  </register>
  <register id="CBUFFx_THRESHOLD_1" acronym="CBUFFx_THRESHOLD_1" offset="0x74" width="32" description="Threshold value used to check if a write window is full.">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0s for future compatibility.Reads returns 0." range="" rwaccess="RW"/>
    <bitfield id="THRESHOLD" width="24" begin="23" end="0" resetval="0x000000" description="Threshold value, in bytes." range="" rwaccess="RW"/>
  </register>
  <register id="CBUFFx_ADDRy_0" acronym="CBUFFx_ADDRy_0" offset="0x80" width="32" description="Start address of the physical buffer of the circular buffer context 0. This register only exists as RW for CBUFF 0. Fragmentation support is enabled for inly CBUFF0_ADDR0 through CBUFF0_ADDR15.">
    <bitfield id="ADDR" width="28" begin="31" end="4" resetval="0x0000000" description="Address, in 128 bit words." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
  </register>
  <register id="CBUFFx_ADDRy_1" acronym="CBUFFx_ADDRy_1" offset="0x84" width="32" description="Start address of the physical buffer of the circular buffer context 0. This register only exists as RW for CBUFF 0. Fragmentation support is enabled for inly CBUFF0_ADDR0 through CBUFF0_ADDR15.">
    <bitfield id="ADDR" width="28" begin="31" end="4" resetval="0x0000000" description="Address, in 128 bit words." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
  </register>
  <register id="CBUFF_VRFB_CTRL" acronym="CBUFF_VRFB_CTRL" offset="0xC0" width="32" description="VRFB context grouping control register">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="ORIENTATION2" width="2" begin="28" end="27" resetval="0x0" description="Orientation" range="" rwaccess="RW">
      <bitenum value="0" token="ORIENTATION2_0" description="0 degrees"/>
      <bitenum value="1" token="ORIENTATION2_1" description="90 degrees"/>
      <bitenum value="2" token="ORIENTATION2_2" description="180 degrees"/>
      <bitenum value="3" token="ORIENTATION2_3" description="270 degrees"/>
    </bitfield>
    <bitfield id="WIDTH2" width="2" begin="26" end="25" resetval="0x0" description="Data width" range="" rwaccess="RW">
      <bitenum value="0" token="WIDTH2_0" description="8 bits"/>
      <bitenum value="1" token="WIDTH2_1" description="16 bits"/>
      <bitenum value="2" token="WIDTH2_2" description="32 bits"/>
      <bitenum value="3" token="WIDTH2_3" description="Reserved"/>
    </bitfield>
    <bitfield id="BASE2" width="4" begin="24" end="21" resetval="0x0" description="Region being translated when translation is enabled. CBUFF_VRFB_CTRL.BASEx*256 Mega Bytes to CBUFF_VRFB_CTRL.BASEx+1)*256 Mega Bytes" range="" rwaccess="RW"/>
    <bitfield id="ENABLE2" width="1" begin="20" end="20" resetval="0" description="Enable / disable VRFB context grouping.Sw shall not change this register when there's active traffic to the translated region" range="" rwaccess="RW">
      <bitenum value="0" token="ENABLE2_0" description="Disabled"/>
      <bitenum value="1" token="ENABLE2_1" description="Enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="19" end="19" resetval="0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="ORIENTATION1" width="2" begin="18" end="17" resetval="0x0" description="Orientation" range="" rwaccess="RW">
      <bitenum value="0" token="ORIENTATION1_0" description="0 degrees"/>
      <bitenum value="1" token="ORIENTATION1_1" description="90 degrees"/>
      <bitenum value="2" token="ORIENTATION1_2" description="180 degrees"/>
      <bitenum value="3" token="ORIENTATION1_3" description="270 degrees"/>
    </bitfield>
    <bitfield id="WIDTH1" width="2" begin="16" end="15" resetval="0x0" description="Data width" range="" rwaccess="RW">
      <bitenum value="0" token="WIDTH1_0" description="8 bits"/>
      <bitenum value="1" token="WIDTH1_1" description="16 bits"/>
      <bitenum value="2" token="WIDTH1_2" description="32 bits"/>
      <bitenum value="3" token="WIDTH1_3" description="Reserved"/>
    </bitfield>
    <bitfield id="BASE1" width="4" begin="14" end="11" resetval="0x0" description="Region being translated when translation is enabled. CBUFF_VRFB_CTRL.BASEx*256 Mega Bytes to CBUFF_VRFB_CTRL.BASEx+1)*256 Mega Bytes" range="" rwaccess="RW"/>
    <bitfield id="ENABLE1" width="1" begin="10" end="10" resetval="0" description="Enable / disable VRFB context grouping.Sw shall not change this register when there's active traffic to the translated region" range="" rwaccess="RW">
      <bitenum value="0" token="ENABLE1_0" description="Disabled"/>
      <bitenum value="1" token="ENABLE1_1" description="Enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="9" end="9" resetval="0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="ORIENTATION0" width="2" begin="8" end="7" resetval="0x0" description="Orientation" range="" rwaccess="RW">
      <bitenum value="0" token="ORIENTATION0_0" description="0 degrees"/>
      <bitenum value="1" token="ORIENTATION0_1" description="90 degrees"/>
      <bitenum value="2" token="ORIENTATION0_2" description="180 degrees"/>
      <bitenum value="3" token="ORIENTATION0_3" description="270 degrees"/>
    </bitfield>
    <bitfield id="WIDTH0" width="2" begin="6" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" token="WIDTH0_0" description="8 bits"/>
      <bitenum value="1" token="WIDTH0_1" description="16 bits"/>
      <bitenum value="2" token="WIDTH0_2" description="32 bits"/>
      <bitenum value="3" token="WIDTH0_3" description="Reserved"/>
    </bitfield>
    <bitfield id="BASE0" width="4" begin="4" end="1" resetval="0x0" description="Region being translated when translation is enabled. CBUFF_VRFB_CTRL.BASEx*256 Mega Bytes to CBUFF_VRFB_CTRL.BASEx+1)*256 Mega Bytes" range="" rwaccess="RW"/>
    <bitfield id="ENABLE0" width="1" begin="0" end="0" resetval="0" description="Enable / disable VRFB context grouping.Sw shall not change this register when there's active traffic to the translated region" range="" rwaccess="RW">
      <bitenum value="0" token="ENABLE0_0" description="Disabled"/>
      <bitenum value="1" token="ENABLE0_1" description="Enabled"/>
    </bitfield>
  </register>
</module>
