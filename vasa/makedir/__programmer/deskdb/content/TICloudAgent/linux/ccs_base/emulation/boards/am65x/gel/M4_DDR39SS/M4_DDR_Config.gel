/*
 * Copyright (C) 2018 Texas Instruments Incorporated - http://www.ti.com/
 * This file was generated by AM65x_DRA80xM_EMIF_Tool_2.02.xlsm
 * http://www.ti.com/lit/pdf/spracj0
 * Configuration Parameters
 * Memory Type:DDR4
 * Data Rate:1600MT/s
 * ECC Enabled:No
 * Data Width:32bits
 * Date Generated:January 29,2020
 */


hotmenu DDR_Controller_PHY_Config()
{
        unsigned int i;

//-----------------------------------------------------------------------------
//Perform DDR subsystem configuration
//-----------------------------------------------------------------------------

Write_MMR(DDRSS_V2H_CTL_REG,0x000073FF); /* VBUSMC2HIF Control Register*/ 

//-----------------------------------------------------------------------------
//Perform DDR controller configuration
//-----------------------------------------------------------------------------
Write_MMR(DDRSS_DDRCTL_MSTR,0x41040010); /* Master Register 0 */ 
Write_MMR(DDRSS_DDRCTL_RFSHCTL0,0x00210070); /* Refresh Control Register 0 */ 

Write_MMR(DDRSS_DDRCTL_ECCCFG0,0x00000000); /* ECC Configuration Register*/ 

Write_MMR(DDRSS_DDRCTL_RFSHTMG,0x0061008C); /* Refresh Timing Register */ 
Write_MMR(DDRSS_DDRCTL_CRCPARCTL0,0x00008000); /* CRC Parity Control Register0 */ 
Write_MMR(DDRSS_DDRCTL_CRCPARCTL1,0x1A000000); /* CRC Parity Control Register1 */ 
Write_MMR(DDRSS_DDRCTL_CRCPARCTL2,0x0048051E); /* CRC Parity Control Register2 */ 
Write_MMR(DDRSS_DDRCTL_INIT0,0x400100C4); /* SDRAM Initialization Register 0 */ 
Write_MMR(DDRSS_DDRCTL_INIT1,0x004F0000); /* SDRAM Initialization Register 1 */ 
Write_MMR(DDRSS_DDRCTL_INIT3,0x02140501); /* SDRAM Initialization Register 3 */ 
Write_MMR(DDRSS_DDRCTL_INIT4,0x00000020); /* SDRAM Initialization Register 4 */ 
Write_MMR(DDRSS_DDRCTL_INIT5,0x00100000); /* SDRAM Initialization Register 5 */ 
Write_MMR(DDRSS_DDRCTL_INIT6,0x00000480); /* SDRAM Initialization Register 6 */ 
Write_MMR(DDRSS_DDRCTL_INIT7,0x00000497); /* SDRAM Initialization Register 7 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG0,0x0C0A1B0D); /* SDRAM Timing Register 0 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG1,0x00030313); /* SDRAM Timing Register 1 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG2,0x0506050A); /* SDRAM Timing Register 2 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG3,0x0000400C); /* SDRAM Timing Register 3 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG4,0x06020206); /* SDRAM Timing Register 4 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG5,0x04040302); /* SDRAM Timing Register 5 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG6,0x00000004); /* SDRAM Timing Register 6 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG7,0x00000404); /* SDRAM Timing Register 7 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG8,0x03030C05); /* SDRAM Timing Register 8 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG9,0x00020208); /* SDRAM Timing Register 9 */ 
//Write_MMR(DDRSS_DDRCTL_DRAMTMG10,0x001C180A); /* SDRAM Timing Register 10 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG11,0x1106010E); /* SDRAM Timing Register 11 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG12,0x00020008); /* SDRAM Timing Register 12 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG13,0x0B100002); /* SDRAM Timing Register 13 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG14,0x00000000); /* SDRAM Timing Register 14 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG15,0x0000003F); /* SDRAM Timing Register 15 */ 
Write_MMR(DDRSS_DDRCTL_DRAMTMG17,0x00500028); /* SDRAM Timing Register 17 */ 
Write_MMR(DDRSS_DDRCTL_ZQCTL0,0x21000040); /* ZQ Control Register 0 */   
Write_MMR(DDRSS_DDRCTL_ZQCTL1,0x0202FAF0); /* ZQ Control Register 1 */   
Write_MMR(DDRSS_DDRCTL_DFITMG0,0x04888206); /* DFI Timing Register 0 */ 
Write_MMR(DDRSS_DDRCTL_DFITMG1,0x000A0606); /* DFI Timing Register 1 */ 
Write_MMR(DDRSS_DDRCTL_DFITMG2,0x00000604); /* DFI Timing Register 2 */ 
Write_MMR(DDRSS_DDRCTL_DFIMISC,0x00000001); /* switch polarity of CS signals for LPDDR4*/           
Write_MMR(DDRSS_DDRCTL_ADDRMAP0,0x0000001F); /* Address Map Register 0 */           
Write_MMR(DDRSS_DDRCTL_ADDRMAP1,0x003F0808); /* Address Map Register 1 */ 
Write_MMR(DDRSS_DDRCTL_ADDRMAP2,0x00000000); /* Address Map Register 2 */ 
Write_MMR(DDRSS_DDRCTL_ADDRMAP3,0x00000000); /* Address Map Register 3 */ 
Write_MMR(DDRSS_DDRCTL_ADDRMAP4,0x00001F1F); /* Address Map Register 4 */ 
Write_MMR(DDRSS_DDRCTL_ADDRMAP5,0x08080808); /* Address Map Register 5 */ 
Write_MMR(DDRSS_DDRCTL_ADDRMAP6,0x08080808); /* Address Map Register 6 */ 
Write_MMR(DDRSS_DDRCTL_ADDRMAP7,0x00000F0F); /* Address Map Register 7 */ 
Write_MMR(DDRSS_DDRCTL_ADDRMAP8,0x00000A0A); /* Address Map Register 8 */      
Write_MMR(DDRSS_DDRCTL_ADDRMAP9,0x00000000); /* Address Map Register 9 */      
Write_MMR(DDRSS_DDRCTL_ADDRMAP10,0x00000000); /* Address Map Register 10 */      
Write_MMR(DDRSS_DDRCTL_ADDRMAP11,0x001F1F00); /* Address Map Register 11 */      

Write_MMR(DDRSS_DDRCTL_DQMAP0,0x00000000); /* DQ Map Register 0 */      
Write_MMR(DDRSS_DDRCTL_DQMAP1,0x00000000); /* DQ Map Register 1 */      
Write_MMR(DDRSS_DDRCTL_DQMAP4,0x00000000); /* DQ Map Register 4 */      
Write_MMR(DDRSS_DDRCTL_DQMAP5,0x00000000); /* DQ Map Register 5 */      

//Write_MMR(DDRSS_DDRCTL_PWRCTL,0x00000000); /* Power Control Register */      
//Write_MMR(DDRSS_DDRCTL_RANKCTL,0x00000000); /* Rank Control Register */      

Write_MMR(DDRSS_DDRCTL_ODTCFG,0x0600060C); /* ODT Configuration Register */      
Write_MMR(DDRSS_DDRCTL_ODTMAP,0x00000001); /* ODT Rank Map */      

//disable refeshes to get ready for PHY initialization and training
Write_MMR(DDRSS_DDRCTL_RFSHCTL3,Read_MMR(DDRSS_DDRCTL_RFSHCTL3) | 0x1); /* Refresh Control Register 3 */ 

//-----------------------------------------------------------------------------                        
//Deassert core reset, also setup LPDDR4 with ECC if needed                                                                                 
//-----------------------------------------------------------------------------                        
if( ((Read_MMR(DDRSS_DDRCTL_ECCCFG0) & 0x7) == 0x4) && ((Read_MMR(DDRSS_DDRCTL_MSTR) & 0x20) == 0x20))
    Write_MMR(DDRSS_SS_CTL_REG,0x00010000); /* Subsystem Control Register */ 
else
    Write_MMR(DDRSS_SS_CTL_REG,0x00000000); /* Subsystem Control Register */ 

//Write_MMR(DDRSS_DDRCTL_PWRCTL,Read_MMR(DDRSS_DDRCTL_PWRCTL) & ~0x2); /* Low Power Control Register */ 
//Write_MMR(DDRSS_DDRCTL_SWCTL,0x0); /* Sofware Register Programming Control Enable */ 
//Write_MMR(DDRSS_DDRCTL_DFIMISC,Read_MMR(DDRSS_DDRCTL_DFIMISC) & ~0x1); /* DFI Miscellaneous Control Register */ 
//Write_MMR(DDRSS_DDRCTL_SWCTL,0x1); /* Sofware Register Programming Control Enable */ 

//-----------------------------------------------------------------------------
//Configure PHY Initialization Registers
//-----------------------------------------------------------------------------

Write_MMR(DDRSS_DDRPHY_PGCR0,0x07001E00);/* PHY General Configuration Register 0*/ 
Write_MMR(DDRSS_DDRPHY_PGCR1,0x020046C0);/* PHY General Configuration Register 1*/   
Write_MMR( DDRSS_DDRPHY_PGCR2,0x00F0BFE0);/* PHY General Configuration Register 2*/  
Write_MMR(DDRSS_DDRPHY_PGCR3,0x55AA0080);/* PHY General Configuration Register 3*/  
Write_MMR(DDRSS_DDRPHY_PGCR6,0x00013001);/* PHY General Configuration Register 6*/  

Write_MMR( DDRSS_DDRPHY_PTR2,0x00083DEF);/* PHY Timing Register 2 */
Write_MMR(DDRSS_DDRPHY_PTR3,0x00061A80);/* PHY Timing Register 3 */ 
Write_MMR(DDRSS_DDRPHY_PTR4,0x00000120);/* PHY Timing Register 4 */ 
Write_MMR(DDRSS_DDRPHY_PTR5,0x00027100);/* PHY Timing Register 5 */ 
Write_MMR(DDRSS_DDRPHY_PTR6,0x04000320);/* PHY Timing Register 6 */ 

Write_MMR( DDRSS_DDRPHY_PLLCR0,0x021c4000);/* PLL Control Register 0 (Type B PLL Only) */   

Write_MMR(DDRSS_DDRPHY_DXCCR,0x00000038);/* DATX8 Common Configuration Register */ 
Write_MMR(DDRSS_DDRPHY_DSGCR,0x02A0C129);/* DDR System General Configuration Register */ 

Write_MMR(DDRSS_DDRPHY_DCR,0x0000040C); /* DRAM Configuration Register */ 

Write_MMR(DDRSS_DDRPHY_DTPR0,0x041A0B06); /* DRAM Timing Parameters Register 0 */ 
Write_MMR(DDRSS_DDRPHY_DTPR1,0x28140000); /* DRAM Timing Parameters Register 1 */ 
Write_MMR(DDRSS_DDRPHY_DTPR2,0x0034E300); /* DRAM Timing Parameters Register 2 */ 
Write_MMR(DDRSS_DDRPHY_DTPR3,0x02800800); /* DRAM Timing Parameters Register 3 */ 
Write_MMR(DDRSS_DDRPHY_DTPR4,0x31180805); /* DRAM Timing Parameters Register 4 */ 
Write_MMR(DDRSS_DDRPHY_DTPR5,0x00250B06); /* DRAM Timing Parameters Register 5 */ 
Write_MMR(DDRSS_DDRPHY_DTPR6,0x00000505); /* DRAM Timing Parameters Register 6 */ 

Write_MMR(DDRSS_DDRPHY_ZQCR,0x008A2A58);  /* Impedance Control Register   */ 

//AM65x ODT =60ohm
//AM65x AC Driver Output Impedance = 34.3ohm
Write_MMR(DDRSS_DDRPHY_ZQ0PR0,0x000077DD); /* Impedance Controller Program Register 0 for Calibration Segment 0 */   
//AM65x DQ Driver Output Impedance = 48ohm
Write_MMR(DDRSS_DDRPHY_ZQ1PR0,0x00007799); /* Impedance Controller Program Register 0 for Calibration Segment 1 */   
//ZQnPR1 default is ZQ VREF= 50% VDDQ for ZQ calibration*/

//-----------------------------------------------------------------------------                        
//Configure DRAM Initialization registers                                                                            
//-----------------------------------------------------------------------------                        

Write_MMR(DDRSS_DDRPHY_MR0,0x00000214); /* DDR Mode Register */ 
Write_MMR(DDRSS_DDRPHY_MR1,0x00000501); /* DDR Mode Register */ 
Write_MMR(DDRSS_DDRPHY_MR2,0x00000000); /* DDR Mode Register */ 
Write_MMR(DDRSS_DDRPHY_MR3,0x00000020); /* DDR Mode Register */ 
Write_MMR(DDRSS_DDRPHY_MR4,0x00000000); /* DDR Mode Register */ 
Write_MMR(DDRSS_DDRPHY_MR5,0x00000480); /* DDR Mode Register */ 
Write_MMR(DDRSS_DDRPHY_MR6,0x00000497); /* DDR Mode Register */ 
Write_MMR(DDRSS_DDRPHY_MR11,0x00000000); /* DDR Mode Register */ 
Write_MMR(DDRSS_DDRPHY_MR12,0x00000000); /* DDR Mode Register */ 
Write_MMR(DDRSS_DDRPHY_MR13,0x00000000); /* DDR Mode Register */ 
Write_MMR(DDRSS_DDRPHY_MR14,0x00000000); /* DDR Mode Register */ 
Write_MMR(DDRSS_DDRPHY_MR22,0x00000000); /* DDR Mode Register */ 

Write_MMR(DDRSS_DDRPHY_VTCR0,0xF3C32017); /* Data Training Configuration Register 0 */

Write_MMR(DDRSS_DDRPHY_DX8SL0PLLCR0,0x021c4000); /* DAXT8 bytes 0-1 PLL Control Register 0 ctl_clk or REF_CLK = 400MHz */
Write_MMR(DDRSS_DDRPHY_DX8SL1PLLCR0,0x021c4000); /* DAXT8 byte 2-3 PLL Control Register 0 ctl_clk or REF_CLK = 400MHz*/
Write_MMR(DDRSS_DDRPHY_DX8SL2PLLCR0,0x021c4000); /* DAXT8 byte 4 PLL Control Register 0 ctl_clk or REF_CLK = 400MHz*/

Write_MMR(DDRSS_DDRPHY_DTCR0,0x8000B1C7); /* Data Training Configuration Register 0 */
Write_MMR(DDRSS_DDRPHY_DTCR1,0x00010236); /* Data Training Configuration Register 1 */   

Write_MMR(DDRSS_DDRPHY_ACIOCR0,0xF0070000); /* AC I/O Configuration Register 0 */ 
Write_MMR(DDRSS_DDRPHY_ACIOCR3,0x00000001); /* AC I/O Configuration Register 3 */ 
Write_MMR(DDRSS_DDRPHY_ACIOCR5,0x04800000); /* AC I/O Configuration Register 5 */ 

Write_MMR(DDRSS_DDRPHY_IOVCR0,0x0F0C0C0C); /*  */   

//these registers values will change depending on data bus width and ECC enable

//Write_MMR(DDRSS_DDRPHY_DX0GCR0,0x00000000); /* DATX8 n General Configuration Register 0 */  
 //Write_MMR(DDRSS_DDRPHY_DX0GCR1,0x00000000); /* DATX8 n General Configuration Register 1 */ 
 //Write_MMR(DDRSS_DDRPHY_DX0GCR2,0x00000000); /* DATX8 n General Configuration Register 2 */  
//Write_MMR(DDRSS_DDRPHY_DX0GCR3 ,0x00000000); /* DATX8 n General Configuration Register 3 */   
//Write_MMR(DDRSS_DDRPHY_DX1GCR0,0x00000000); /* DATX8 n General Configuration Register 0 */  
//Write_MMR(DDRSS_DDRPHY_DX1GCR1,0x00000000); /* DATX8 n General Configuration Register 1 */ 
//Write_MMR(DDRSS_DDRPHY_DX1GCR2,0x00000000); /* DATX8 n General Configuration Register 2 */  
//Write_MMR(DDRSS_DDRPHY_DX1GCR3,0x00000000); /* DATX8 n General Configuration Register 2 */  
Write_MMR(DDRSS_DDRPHY_DX2GCR0,0x40700204); /* DATX8 n General Configuration Register 0 */  
 Write_MMR(DDRSS_DDRPHY_DX2GCR1,0x00007FFF); /* DATX8 n General Configuration Register 1 */ 
 Write_MMR(DDRSS_DDRPHY_DX2GCR2,0x00000000); /* DATX8 n General Configuration Register 2 */  
Write_MMR(DDRSS_DDRPHY_DX2GCR3 ,0xFFC0010B); /* DATX8 n General Configuration Register 3 */   
Write_MMR(DDRSS_DDRPHY_DX3GCR0,0x40700204); /* DATX8 n General Configuration Register 0 */  
Write_MMR(DDRSS_DDRPHY_DX3GCR1,0x00007FFF); /* DATX8 n General Configuration Register 1 */ 
Write_MMR(DDRSS_DDRPHY_DX3GCR2,0x00000000); /* DATX8 n General Configuration Register 2 */  
Write_MMR(DDRSS_DDRPHY_DX3GCR3 ,0xFFC0010B); /* DATX8 n General Configuration Register 3 */   
Write_MMR(DDRSS_DDRPHY_DX4GCR0,0x40703220); /* DATX8 n General Configuration Register 0 */  
Write_MMR(DDRSS_DDRPHY_DX4GCR1,0x55556000); /* DATX8 n General Configuration Register 1 */ 
Write_MMR(DDRSS_DDRPHY_DX4GCR2,0xAAAA0000); /* DATX8 n General Configuration Register 2 */  
Write_MMR(DDRSS_DDRPHY_DX4GCR3 ,0xFFE18587); /* DATX8 n General Configuration Register 3 */   


//VREF RD DQS gate = 25%
Write_MMR(DDRSS_DDRPHY_DX0GCR4,0x0E00B03C); /* DATX8 n General Configuration Register 4 */ 
Write_MMR(DDRSS_DDRPHY_DX1GCR4,0x0E00B03C); /* DATX8 n General Configuration Register 4 */  
Write_MMR(DDRSS_DDRPHY_DX2GCR4,0x0E00B03C); /* DATX8 n General Configuration Register 4 */  
Write_MMR(DDRSS_DDRPHY_DX3GCR4,0x0E00B03C); /* DATX8 n General Configuration Register 4 */ 
Write_MMR(DDRSS_DDRPHY_DX4GCR4,0x0E00B03C); /* DATX8 n General Configuration Register 4 */ 

//VREF DQS and DQ =34.19%
Write_MMR(DDRSS_DDRPHY_PGCR5,0x01010004); /* PHY General Configuration Register 5*/ 
Write_MMR(DDRSS_DDRPHY_DX0GCR5,0x00000049); /* DATX8 n General Configuration Register 5 */ 
Write_MMR(DDRSS_DDRPHY_DX1GCR5,0x00000049); /* DATX8 n General Configuration Register 5 */  
Write_MMR(DDRSS_DDRPHY_DX2GCR5,0x00000049); /* DATX8 n General Configuration Register 5 */  
Write_MMR(DDRSS_DDRPHY_DX3GCR5,0x00000049); /* DATX8 n General Configuration Register 5 */ 
Write_MMR(DDRSS_DDRPHY_DX4GCR5,0x00000049); /* DATX8 n General Configuration Register 5 */ 

Write_MMR(DDRSS_DDRPHY_RANKIDR,0x00000000); /* Rank ID Register */ 
Write_MMR(DDRSS_DDRPHY_DX0GTR0,0x00020002); /* DATX8 n General Timing Register 0 */ 
Write_MMR(DDRSS_DDRPHY_DX1GTR0,0x00020002); /* DATX8 n General Timing Register 0 */ 
Write_MMR(DDRSS_DDRPHY_DX2GTR0,0x00020002); /* DATX8 n General Timing Register 0 */ 
Write_MMR(DDRSS_DDRPHY_DX3GTR0,0x00020002); /* DATX8 n General Timing Register 0 */ 
Write_MMR(DDRSS_DDRPHY_DX4GTR0,0x00020002); /* DATX8 n General Timing Register 0 */ 
Write_MMR(DDRSS_DDRPHY_ODTCR,0x00010000);/* ODT Configuration Register for rank 0 */ 

Write_MMR(DDRSS_DDRPHY_RANKIDR,0x00010001 ); /* Rank ID Register */ 
Write_MMR(DDRSS_DDRPHY_DX0GTR0,0x00020002); /* DATX8 n General Timing Register 0 */ 
Write_MMR(DDRSS_DDRPHY_DX1GTR0,0x00020002); /* DATX8 n General Timing Register 0 */ 
Write_MMR(DDRSS_DDRPHY_DX2GTR0,0x00020002); /* DATX8 n General Timing Register 0 */ 
Write_MMR(DDRSS_DDRPHY_DX3GTR0,0x00020002); /* DATX8 n General Timing Register 0 */ 
Write_MMR(DDRSS_DDRPHY_DX4GTR0,0x00020002); /* DATX8 n General Timing Register 0 */ 
Write_MMR(DDRSS_DDRPHY_ODTCR,0x00010000);/* ODT Configuration Register for rank 1 */ 

Write_MMR(DDRSS_DDRPHY_DX8SL0IOCR,0x74800000); /* DATX8 0 I/O Configuration Register */ 
Write_MMR(DDRSS_DDRPHY_DX8SL1IOCR,0x74800000); /* DATX8 1 I/O Configuration Register */ 
Write_MMR(DDRSS_DDRPHY_DX8SL2IOCR,0x74800000); /* DATX8 2 I/O Configuration Register */ 

//For DDR4, Disable Basic Gate Training (BSTEN=0) in DTCR1, and set PREOEX = 1.5 dram clocks and Static Read Mode
Write_MMR(DDRSS_DDRPHY_DX8SL0DXCTL2,0x00141830); /* DATX8 0 Data Control Register */ 
Write_MMR(DDRSS_DDRPHY_DX8SL1DXCTL2,0x00141830); /* DATX8 1 Data Control Register */ 
Write_MMR(DDRSS_DDRPHY_DX8SL2DXCTL2,0x00141830); /* DATX8 2 Data Control Register */ 

Write_MMR(DDRSS_DDRPHY_DX8SL0DQSCTL,0x01264300); /* DATX8 0 DQS Control Register */ 
Write_MMR(DDRSS_DDRPHY_DX8SL1DQSCTL,0x01264300); /* DATX8 1 DQS Control Register */ 
Write_MMR(DDRSS_DDRPHY_DX8SL2DQSCTL,0x01264300); /* DATX8 2 DQS Control Register */ 
}


