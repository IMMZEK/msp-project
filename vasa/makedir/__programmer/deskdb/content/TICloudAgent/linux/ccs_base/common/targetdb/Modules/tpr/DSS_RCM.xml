

<module description="" id="DSS_RCM">
  
  
  <register acronym="PID" description=" PID register " id="PID" offset="0x0" width="32">
    
  <bitfield begin="31" description="" end="16" id="" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="" end="11" id="" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="" end="8" id="" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="" end="6" id="" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="HW_REG0" description="" id="HW_REG0" offset="0x4" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG1" description="" id="HW_REG1" offset="0x8" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PREVIOUS_NAME" description="" id="PREVIOUS_NAME" offset="0xC" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG3" description="" id="HW_REG3" offset="0x10" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_CTRL" description="" id="DSP_PD_CTRL" offset="0x14" width="32">
    
  <bitfield begin="4" description="Controls the unhalting on the processor during the power-up sequence Write 1 :  The DSP is kept in halt state at the end of the power up sequence. The L2 memories can now be initialised and loaded before setting this bit to 0, unhalting the processor and begin execution Write 0 : The processor is unhalted at the end of the power up sequence. Here the assumption is the code is already downloaded in L2 and the processor can immediatey being execution on power up." end="4" id="proc_halt" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Masks interrupts to the DSP.  Write 1 : Mask interrupts to the DSP before powering off the DSP.  When masked, any interrupts are now stored in the Missed event register. Write 0 : Send the interrupts to the DSP after power on." end="0" id="interrupt_mask" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_TRIGGER_WAKUP" description="" id="DSP_PD_TRIGGER_WAKUP" offset="0x18" width="32">
    
  <bitfield begin="0" description="Write pulse bit field: Trigger Power Up of the DSP. Write 1 : Triggers DSP power up sequence" end="0" id="wakeup_trigger" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_TRIGGER_SLEEP" description="" id="DSP_PD_TRIGGER_SLEEP" offset="0x1C" width="32">
    
  <bitfield begin="0" description="Write pulse bit field: Trigger Power Down of the DSP. Write 1 : Triggers DSP power down sequence" end="0" id="sleep_trigger" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_STATUS" description="" id="DSP_PD_STATUS" offset="0x20" width="32">
    
  <bitfield begin="8" description="Status bit indicating if there is an override for the DSP from Debug SubSystem. 0 : No override from DebugSS 1 : Override from DebugSS" end="8" id="pwrsm_dbg_ovrd" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Power Mode status of DSP 00 : Powered OFF 01 : Transitioning from OFF to ON state 10 : Transitioning from ON to OFF state 11 : Powered ON" end="4" id="pd_status" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="0" description="Processor is halted" end="0" id="proc_halted" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_CTRL_MISC0" description="" id="DSP_PD_CTRL_MISC0" offset="0x24" width="32">
    
  <bitfield begin="29" description="TI Internal Feature No of cycles to wait after de-assertion of GRSTN during DSP Power-up sequence. Max allowed value is 31." end="24" id="pwrsm_grst_deassertcnt" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="23" description="TI Internal Feature No of cycles to wait after de-assertion of POR during DSP Power-up sequence. Max allowed value is 31." end="18" id="pwrsm_porrst_deassertcnt" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="17" description="TI Internal Feature No of cycles to wait after assertion of LRSTN during DSP Power-up sequence. Max allowed value is 31." end="12" id="pwrsm_lrst_assertcnt" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="11" description="TI Internal Feature No of cycles to wait after assertion of GRSTN during DSP Power-up sequence. Max allowed value is 31." end="6" id="pwrsm_grst_assertcnt" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="5" description="TI Internal Feature No of cycles to wait after assertion of POR during DSP Power-up sequence. Max allowed value is 31." end="0" id="pwrsm_porrst_assertcnt" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_CTRL_MISC1" description="" id="DSP_PD_CTRL_MISC1" offset="0x28" width="32">
    
  <bitfield begin="26" description="HW RnD reserved. Do not Touch - Only for debug purpose" end="24" id="iso_sync_bypass" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="HW RnD reserved. Do not Touch - Only for debug purpose" end="20" id="rst_sync_bypass" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="TI Internal Feature 1:mask lresetout from DSPin FSM" end="18" id="pwrsm_lresetout_mask" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="TI Internal Feature No of cycles to wait after assertion of ISO_ENABLE during GEM power-down sequence. Max allowed value is 31." end="12" id="pwrsm_isoen_assertcnt" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="11" description="TI Internal Feature No of cycles to wait after de-assertion of GEM_CLK_STOP_REQ during GEM Power-up sequence. Max allowed value is 31." end="6" id="pwrsm_clkstop_deassertcnt" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="5" description="TI Internal Feature No of cycles to wait after de-assertion of LRSTN during DSP Power-up sequence. Max allowed value is 31." end="0" id="pwrsm_lrst_deassertcnt" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_STATUS_MISC0" description="" id="DSP_PD_STATUS_MISC0" offset="0x2C" width="32">
    
  <bitfield begin="17" description="TI Internal Feature Lreset output indication from GEM" end="17" id="pwrsm_lrstout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="16" description="TI Internal Feature Clock stop request ack from GEM" end="16" id="pwrsm_c66_clkstop_ack" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="15" description="TI Internal Feature SDMA slave disable Done from clock stop ack from the master port of the async bridge present in the SDMA port." end="15" id="pwrsm_sdma_async2scr_clkstop_ack" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="TI Internal Feature SDMA Slave disable Ack from Interconnect. This is from the clock stop req signal coming from the slave port of the async bridge in SDMA." end="14" id="pwrsm_sdma_async2rcm_clkstop_req" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="13" description="TI Internal Feature Clock Stop request from SCR to SDMA Async Bridge" end="13" id="pwrsm_sdma_scr2async_clkstop_req" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="12" description="TI Internal Feature Memory AGOOD Output from GEM (synchronized to Bus clock)" end="12" id="pwrsm_mem_agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="11" description="TI Internal Feature Memory AON Output from GEM (synchronized to Bus clock)" end="11" id="pwrsm_mem_aonout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="TI Internal Feature Memory PGOOD Output from DSP (synchronized to Bus clock)" end="10" id="pwrsm_mem_pgoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="9" description="TI Internal Feature Memory PON Output from DSP (synchronized to Bus clock)" end="9" id="pwrsm_mem_ponout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="TI Internal Feature Logic PGOOD Output from DSP (synchronized to Bus clock)" end="8" id="pwrsm_pgoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="TI Internal Feature Logic PON Output from DSP (synchronized to Bus clock)" end="7" id="pwrsm_ponout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="This is the internal state of the DSP power State machine. Curretnly value of 13 needs to be polled to confirm we we can now download code to the L2 memory before unhalting the processor. Plan to change this in TPR and provide a single bit to poll on and move this to debug register since all the other states are irrelevant for SW" end="0" id="state" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_WAKEUP_MASK0" description="" id="DSP_PD_WAKEUP_MASK0" offset="0x30" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the wakeup source bits [31:0] 1 : Masked 0 : Unmasked" end="0" id="wakeup_mask0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_WAKEUP_MASK1" description="" id="DSP_PD_WAKEUP_MASK1" offset="0x34" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the wakeup source bits [63:32] 1 : Masked 0 : Unmasked." end="0" id="wakeup_mask1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_WAKEUP_MASK2" description="" id="DSP_PD_WAKEUP_MASK2" offset="0x38" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the wakeup source bits [95:64] 1 : Masked  0 : Unmasked." end="0" id="wakeup_mask2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_WAKEUP_STATUS0" description="" id="DSP_PD_WAKEUP_STATUS0" offset="0x3C" width="32">
    
  <bitfield begin="31" description="Wakeup source status bits [31:0]" end="0" id="wakeup_status0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_WAKEUP_STATUS1" description="" id="DSP_PD_WAKEUP_STATUS1" offset="0x40" width="32">
    
  <bitfield begin="31" description="Wakeup source status bits [63:32]" end="0" id="wakeup_status1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_WAKEUP_STATUS2" description="" id="DSP_PD_WAKEUP_STATUS2" offset="0x44" width="32">
    
  <bitfield begin="31" description="Wakeup source status bits [95:64]" end="0" id="wakeup_status2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_WAKEUP_STATUS0_CLR" description="" id="DSP_PD_WAKEUP_STATUS0_CLR" offset="0x48" width="32">
    
  <bitfield begin="31" description="Write pulse bit field: Clear bit for wakeup source status bits [31:0]. Write 0x1 to clear the corrsponding status bit : Its a wspecial access type, write to this field will generate a pulse" end="0" id="wakeup_status0_clr" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_WAKEUP_STATUS1_CLR" description="" id="DSP_PD_WAKEUP_STATUS1_CLR" offset="0x4C" width="32">
    
  <bitfield begin="31" description="Write pulse bit field: Clear bit for wakeup source status bits [63:32]. Write 0x1 to clear the corrsponding status bit : Its a wspecial access type, write to this field will generate a pulse" end="0" id="wakeup_status1_clr" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_WAKEUP_STATUS2_CLR" description="" id="DSP_PD_WAKEUP_STATUS2_CLR" offset="0x50" width="32">
    
  <bitfield begin="31" description="Write pulse bit field: Clear bit for wakeup source status bits [95:64]. Write 0x1 to clear the corrsponding status bit : Its a wspecial access type, write to this field will generate a pulse" end="0" id="wakeup_status2_clr" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_MISSED_EVENT_MASK0" description="" id="DSP_PD_MISSED_EVENT_MASK0" offset="0x54" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the missed events before getting pushed into DSP. Corresponds to Event lines[31:0] 1 : Masked 0 : Unmasked." end="0" id="missed_event_mask0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_MISSED_EVENT_MASK1" description="" id="DSP_PD_MISSED_EVENT_MASK1" offset="0x58" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the missed events before getting pushed into DSP. Corresponds to Event lines[63:32] 1 : Masked 0 : Unmasked." end="0" id="missed_event_mask1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_MISSED_EVENT_MASK2" description="" id="DSP_PD_MISSED_EVENT_MASK2" offset="0x5C" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the missed events before getting pushed into DSP. Corresponds to Event lines[95:64] 1 : Masked  0 : Unmasked." end="0" id="missed_event_mask2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_MISSED_EVENT_STATUS0" description="" id="DSP_PD_MISSED_EVENT_STATUS0" offset="0x60" width="32">
    
  <bitfield begin="31" description="Missed events monitor status for interrupts [31:0].  Interrupts  to DSP that are masked by INTERRUPT_MASK register field are captured in this register" end="0" id="missed_event_status0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_MISSED_EVENT_STATUS1" description="" id="DSP_PD_MISSED_EVENT_STATUS1" offset="0x64" width="32">
    
  <bitfield begin="31" description="Missed events monitor status for interrupts [63:32] Interrupts  to DSP that are masked by INTERRUPT_MASK register field are captured in this register" end="0" id="missed_event_status1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_MISSED_EVENT_STATUS2" description="" id="DSP_PD_MISSED_EVENT_STATUS2" offset="0x68" width="32">
    
  <bitfield begin="31" description="Missed events monitor status for interrupts [95:64] Interrupts  to DSP that are masked by INTERRUPT_MASK register field are captured in this register" end="0" id="missed_event_status2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSP_RST_CAUSE" description="" id="DSP_RST_CAUSE" offset="0x6C" width="32">
    
  <bitfield begin="23" description="DSP POR reset Bitwise Indication : Bit 0 : Por Reset Bit 1 : Sub system Reset from TOPRCM Bit 2 : Reset from DSS_RCM::DSS_DSP_RST_CTRL Bit 3 : Reset from Power FSM Bit 4 : Reset from STC FSM" end="16" id="por_cause" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="DSP Greset Bitwise Indication : Bit 0 : Por Reset Bit 1 : Sub system Reset from TOPRCM Bit 2 : Reset from DSS_RCM::DSS_DSP_RST_CTRL Bit 3 : Reset from Power FSM Bit 4 : Reset from STC FSM" end="8" id="grst_cause" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="DSP Lreset Bitwise Indication : Bit 0 : Por Reset Bit 1 : Sub system Reset from TOPRCM Bit 2 : Reset from DSS_RCM::DSS_DSP_RST_CTRL Bit 3 : Reset from Debugss Bit 4 : Reset from Power FSM Bit 5 : Reset from STC FSM" end="0" id="lrst_cause" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="DSP_RST_CAUSE_CLR" description="" id="DSP_RST_CAUSE_CLR" offset="0x70" width="32">
    
  <bitfield begin="0" description="Write pulse bit field: Write 0x1 to clear the reset cause register for any previous resets : Its a wspecial access type, write to this field will generate a pulse" end="0" id="clear" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSP_STC_PBIST_CTRL" description="" id="DSP_STC_PBIST_CTRL" offset="0x74" width="32">
    
  <bitfield begin="21" description="No of clocks (in terms of 200 MHz DSPSS Bus clock) after asserting GEM TMODE VLCT signal before proceeding to the next state. Max allowed value is 31." end="16" id="pbist_tmode_vlct_assertcnt" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="15" description="No of clocks (in terms of 200 MHz DSPSS Bus clock) after De-asserting GEM TMODE VLCT signal before proceeding to the next state. Max allowed value is 31." end="10" id="pbist_tmode_vlct_deassertcnt" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="9" description="[4:1] DSP PBIST SELFTEST KEY = 4'b1010" end="6" id="pbist_selftest_key" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="5" description="Enables back to Back STC.Needs to be set to 1 for self test" end="5" id="stc_b2b_en" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Mask bit for ignoring the clock stop ack from GEM. This will be used for ignoring clock stop ack during boot-up. 1 --> Ignore clock stop ack from GEM. 0 --> Wait for clock stop ack from GEM after giving clock stop request." end="4" id="stc_clk_stp_ack_mask" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Configuration to halt the state machine before the final de-assertion of LRST to enable program download. 1 --> Halt, 0 --> Proceed." end="3" id="proc_halt" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Enable GEM STC during GEM power UP" end="2" id="stc_boot_en" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Enable for PBIST and STC.  00 - Reserved,  01 --> STC only 10 --> PBIST only 11 --> PBIST followed by STC" end="0" id="mode_enable" rwaccess="RW" width="2"></bitfield>
  </register>
  
  
  <register acronym="DSP_STC_PBIST_STATUS" description="" id="DSP_STC_PBIST_STATUS" offset="0x78" width="32">
    
  <bitfield begin="7" description="PBIST status from GEM. undefined - Fail Indication undefined - Done indication" end="2" id="stc_pbist_sm_status" rwaccess="R" width="6"></bitfield>
    
  <bitfield begin="1" description="Current state of STC PBIST state machine" end="0" id="pbist_status" rwaccess="R" width="2"></bitfield>
  </register>
  
  
  <register acronym="DSP_STC_PBIST_CTRL_MISC0" description="" id="DSP_STC_PBIST_CTRL_MISC0" offset="0x7C" width="32">
    
  <bitfield begin="31" description="DSP PBIST STC misc Control" end="16" id="byp_value" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="DSP PBIST STC misc Control" end="0" id="byp_en" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="DSP_STC_PBIST_CTRL_MISC1" description="" id="DSP_STC_PBIST_CTRL_MISC1" offset="0x80" width="32">
    
  <bitfield begin="9" description="TI Internal Register.Reserved for HW RnD" end="4" id="sm_ovr_val" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="3" description="TI Internal Register.Reserved for HW RnD" end="3" id="sm_ovr_en" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSP_STC_PBIST_START" description="" id="DSP_STC_PBIST_START" offset="0x84" width="32">
    
  <bitfield begin="0" description="Write pulse bit field: Trigger pulse for the STC PBIST state machine. This is a self-clearing pulse. : Its a wspecial access type, write to this field will generate a pulse" end="0" id="sm_trig" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSP_STC_PBIST_STATUS_CLR" description="" id="DSP_STC_PBIST_STATUS_CLR" offset="0x88" width="32">
    
  <bitfield begin="0" description="Write pulse bit field: Clear bit for PBIST Status : Its a wspecial access type, write to this field will generate a pulse" end="0" id="clear" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_CLK_SRC_SEL" description="" id="DSS_DSP_CLK_SRC_SEL" offset="0x8C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for DSS DSP. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_CLK_SRC_SEL" description="" id="DSS_HWA_CLK_SRC_SEL" offset="0x90" width="32">
    
  <bitfield begin="2" description="Select line for selecting source clock for DSS HWA.   Data should be loaded as multibit.  Write 3'b000 :  TOPRCM_CR5_CLK  Write 3'b111 : TOPRCM_SYS_CLK" end="0" id="clksrcsel" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_RTIA_CLK_SRC_SEL" description="" id="DSS_RTIA_CLK_SRC_SEL" offset="0x94" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for DSS_RTIA. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="DSS_RTIB_CLK_SRC_SEL" description="" id="DSS_RTIB_CLK_SRC_SEL" offset="0x98" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for DSS RTIB. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="DSS_WDT_CLK_SRC_SEL" description="" id="DSS_WDT_CLK_SRC_SEL" offset="0x9C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for DSS Watchdog. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="DSS_SCIA_CLK_SRC_SEL" description="" id="DSS_SCIA_CLK_SRC_SEL" offset="0xA0" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for DSS SCIA. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_CLK_DIV_VAL" description="" id="DSS_DSP_CLK_DIV_VAL" offset="0xA4" width="32">
    
  <bitfield begin="11" description="Divider value for DSS DSP selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="DSS_RTIA_CLK_DIV_VAL" description="" id="DSS_RTIA_CLK_DIV_VAL" offset="0xA8" width="32">
    
  <bitfield begin="11" description="Divider value for DSS RTIA selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="DSS_RTIB_CLK_DIV_VAL" description="" id="DSS_RTIB_CLK_DIV_VAL" offset="0xAC" width="32">
    
  <bitfield begin="11" description="Divider value for DSS RTIB selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="DSS_WDT_CLK_DIV_VAL" description="" id="DSS_WDT_CLK_DIV_VAL" offset="0xB0" width="32">
    
  <bitfield begin="11" description="Divider value for DSS Watchdog selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="DSS_SCIA_CLK_DIV_VAL" description="" id="DSS_SCIA_CLK_DIV_VAL" offset="0xB4" width="32">
    
  <bitfield begin="11" description="Divider value for DSS SCIA selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_CLK_GATE" description="" id="DSS_DSP_CLK_GATE" offset="0xB8" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  DSS DSP. Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_CLK_GATE" description="" id="DSS_HWA_CLK_GATE" offset="0xBC" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  DSS HWA  Data should be loaded as multibit.   Write 3'b000 : Clock is ungated   Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_RTIA_CLK_GATE" description="" id="DSS_RTIA_CLK_GATE" offset="0xC0" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  DSS RTA Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_RTIB_CLK_GATE" description="" id="DSS_RTIB_CLK_GATE" offset="0xC4" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  DSS RTIB Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_WDT_CLK_GATE" description="" id="DSS_WDT_CLK_GATE" offset="0xC8" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  DSS Watchdog Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_SCIA_CLK_GATE" description="" id="DSS_SCIA_CLK_GATE" offset="0xCC" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  DSS SCIA Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_CBUFF_CLK_GATE" description="" id="DSS_CBUFF_CLK_GATE" offset="0xD0" width="32">
    
  <bitfield begin="2" description="Not Supported" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_CLK_STATUS" description="" id="DSS_DSP_CLK_STATUS" offset="0xD4" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for DSS DSP Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for DSS DSP Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_CLK_STATUS" description="" id="DSS_HWA_CLK_STATUS" offset="0xD8" width="32">
    
  <bitfield begin="1" description="Status shows the source clock slected for DSS HWA Clock" end="0" id="clkinuse" rwaccess="R" width="2"></bitfield>
  </register>
  
  
  <register acronym="DSS_RTIA_CLK_STATUS" description="" id="DSS_RTIA_CLK_STATUS" offset="0xDC" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for DSS RTIA Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for DSS RTIA Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="DSS_RTIB_CLK_STATUS" description="" id="DSS_RTIB_CLK_STATUS" offset="0xE0" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for DSS RTIB Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for DSS RTIB Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="DSS_WDT_CLK_STATUS" description="" id="DSS_WDT_CLK_STATUS" offset="0xE4" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for DSS Watchdog Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for DSS Watchdog Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="DSS_SCIA_CLK_STATUS" description="" id="DSS_SCIA_CLK_STATUS" offset="0xE8" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for DSS SCIA Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for DSS SCIA Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_RST_CTRL" description="" id="DSS_DSP_RST_CTRL" offset="0xEC" width="32">
    
  <bitfield begin="10" description="Local Reset control for DSS DSP  Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="8" id="assert_local" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="Global Reset control forDSS  DSP  Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="4" id="assert_global" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Power on Reset control for DSS DSP  Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert_por" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_ESM_RST_CTRL" description="" id="DSS_ESM_RST_CTRL" offset="0xF0" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of Device/IP before configuring. Writing 3'b11 will assert reset for DSS ESM" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_SCIA_RST_CTRL" description="" id="DSS_SCIA_RST_CTRL" offset="0xF4" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of Device/IP before configuring. Writing 3'b11 will assert reset for DSS SCIA" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_RTIA_RST_CTRL" description="" id="DSS_RTIA_RST_CTRL" offset="0xF8" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of Device/IP before configuring. Writing 3'b11 will assert reset for DSS RTIA" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_RTIB_RST_CTRL" description="" id="DSS_RTIB_RST_CTRL" offset="0xFC" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of Device/IP before configuring. Writing 3'b11 will assert reset for DSS RTIB" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_WDT_RST_CTRL" description="" id="DSS_WDT_RST_CTRL" offset="0x100" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of Device/IP before configuring. Writing 3'b11 will assert reset for DSS Watchdog" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_DCCA_RST_CTRL" description="" id="DSS_DCCA_RST_CTRL" offset="0x104" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of Device/IP before configuring. Writing 3'b11 will assert reset for DSS DCCA" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_DCCB_RST_CTRL" description="" id="DSS_DCCB_RST_CTRL" offset="0x108" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of Device/IP before configuring. Writing 3'b11 will assert reset for DSS DCCB" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_MCRC_RST_CTRL" description="" id="DSS_MCRC_RST_CTRL" offset="0x10C" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of Device/IP before configuring. Writing 3'b11 will assert reset for DSS MCRC" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSP_DFT_DIV_CTRL" description="" id="DSP_DFT_DIV_CTRL" offset="0x110" width="32">
    
  <bitfield begin="6" description="DSP DFT Control for clock_disable. Multibit implementation. Write 0x0 to enable Write 0x7 to diable" end="4" id="clk_disable" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="3" description="DSP DFT Control for div factor" end="0" id="div_factor" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_L2_PD_CTRL" description="" id="DSS_DSP_L2_PD_CTRL" offset="0x114" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA0_PD_CTRL" description="" id="DSS_L3_BANKA0_PD_CTRL" offset="0x118" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA1_PD_CTRL" description="" id="DSS_L3_BANKA1_PD_CTRL" offset="0x11C" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array  Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA2_PD_CTRL" description="" id="DSS_L3_BANKA2_PD_CTRL" offset="0x120" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA3_PD_CTRL" description="" id="DSS_L3_BANKA3_PD_CTRL" offset="0x124" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB0_PD_CTRL" description="" id="DSS_L3_BANKB0_PD_CTRL" offset="0x128" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB1_PD_CTRL" description="" id="DSS_L3_BANKB1_PD_CTRL" offset="0x12C" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB2_PD_CTRL" description="" id="DSS_L3_BANKB2_PD_CTRL" offset="0x130" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB3_PD_CTRL" description="" id="DSS_L3_BANKB3_PD_CTRL" offset="0x134" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKC0_PD_CTRL" description="" id="DSS_L3_BANKC0_PD_CTRL" offset="0x138" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKC1_PD_CTRL" description="" id="DSS_L3_BANKC1_PD_CTRL" offset="0x13C" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKC2_PD_CTRL" description="" id="DSS_L3_BANKC2_PD_CTRL" offset="0x140" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKC3_PD_CTRL" description="" id="DSS_L3_BANKC3_PD_CTRL" offset="0x144" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKD0_PD_CTRL" description="" id="DSS_L3_BANKD0_PD_CTRL" offset="0x148" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKD1_PD_CTRL" description="" id="DSS_L3_BANKD1_PD_CTRL" offset="0x14C" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKD2_PD_CTRL" description="" id="DSS_L3_BANKD2_PD_CTRL" offset="0x150" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_PD_CTRL" description="" id="DSS_HWA_PD_CTRL" offset="0x158" width="32">
    
  <bitfield begin="18" description="SW Control for &lt;IP>_PD_CTRL Power up CRTL1" end="16" id="pgoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="14" description="SW Control for &lt;IP>_PD_CTRL Power up CRTL0" end="12" id="ponin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_L2_PD_STATUS" description="" id="DSS_DSP_L2_PD_STATUS" offset="0x15C" width="32">
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA0_PD_STATUS" description="" id="DSS_L3_BANKA0_PD_STATUS" offset="0x160" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA1_PD_STATUS" description="" id="DSS_L3_BANKA1_PD_STATUS" offset="0x164" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA2_PD_STATUS" description="" id="DSS_L3_BANKA2_PD_STATUS" offset="0x168" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA3_PD_STATUS" description="" id="DSS_L3_BANKA3_PD_STATUS" offset="0x16C" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB0_PD_STATUS" description="" id="DSS_L3_BANKB0_PD_STATUS" offset="0x170" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB1_PD_STATUS" description="" id="DSS_L3_BANKB1_PD_STATUS" offset="0x174" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB2_PD_STATUS" description="" id="DSS_L3_BANKB2_PD_STATUS" offset="0x178" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB3_PD_STATUS" description="" id="DSS_L3_BANKB3_PD_STATUS" offset="0x17C" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKC0_PD_STATUS" description="" id="DSS_L3_BANKC0_PD_STATUS" offset="0x180" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKC1_PD_STATUS" description="" id="DSS_L3_BANKC1_PD_STATUS" offset="0x184" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKC2_PD_STATUS" description="" id="DSS_L3_BANKC2_PD_STATUS" offset="0x188" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKC3_PD_STATUS" description="" id="DSS_L3_BANKC3_PD_STATUS" offset="0x18C" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKD0_PD_STATUS" description="" id="DSS_L3_BANKD0_PD_STATUS" offset="0x190" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKD1_PD_STATUS" description="" id="DSS_L3_BANKD1_PD_STATUS" offset="0x194" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKD2_PD_STATUS" description="" id="DSS_L3_BANKD2_PD_STATUS" offset="0x198" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_PD_STATUS" description="" id="DSS_HWA_PD_STATUS" offset="0x1A0" width="32">
    
  <bitfield begin="3" description="Status for &lt;IP>_PD_CTRL Power up CRTL1" end="3" id="pgoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for &lt;IP>_PD_CTRL Power up CRTL0" end="2" id="ponout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_TRCCLK_DIVRATIO" description="" id="DSS_DSP_TRCCLK_DIVRATIO" offset="0x1A4" width="32">
    
  <bitfield begin="3" description="DSP Trace Clock Divide Ratio" end="0" id="divratio" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_TCLK_DIVRATIO" description="" id="DSS_DSP_TCLK_DIVRATIO" offset="0x1A8" width="32">
    
  <bitfield begin="3" description="DSP TCLK Divide Ratio" end="0" id="divratio" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_DITHERED_CLK_CTRL" description="" id="DSS_DSP_DITHERED_CLK_CTRL" offset="0x1AC" width="32">
    
  <bitfield begin="31" description="Write pulse bit field: DSP Dithered Clock LFSR Load" end="31" id="load" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="DSP Dithered Clock Enable. Write 3'b000 : Disabled Write 3'b111 : Enabled" end="28" id="enable" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="27" description="DSP Dithered Clock LFSR Seed" end="0" id="seed" rwaccess="RW" width="28"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_PD_CTRL_STICKYBIT" description="" id="DSS_L3_PD_CTRL_STICKYBIT" offset="0x1B0" width="32">
    
  <bitfield begin="2" description="Sticky bit for DSS L3 PD CTRL.  Write 3'b111 to lock the configuration of DSS_L3_BANK*_PD_CTRL.  Once this field is writen, there is no impact of changing the value of aonin and agoodin fields in DSS_L3_BANK*_PD_CTRL registers" end="0" id="set" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_CTRL_MISC2" description="" id="DSP_PD_CTRL_MISC2" offset="0x1B4" width="32">
    
  <bitfield begin="31" description="Value of agood asertion delay" end="16" id="pwrsm_agood_assertcnt" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Value of pgood asertion delay" end="0" id="pwrsm_pgood_assertcnt" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_CTRL_MISC3" description="" id="DSP_PD_CTRL_MISC3" offset="0x1B8" width="32">
    
  <bitfield begin="16" description="Gate the lreset request from GEM. For debug purpose." end="16" id="lreset_req_gate" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Value of power down wait delay" end="0" id="pwrs_pd_waitcnt" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_CTRL_OVERRIDE0" description="" id="DSP_PD_CTRL_OVERRIDE0" offset="0x1BC" width="32">
    
  <bitfield begin="29" description="DSS DSP power FSM state  bypass control. For debug pupose." end="24" id="state_bypass_val" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="23" description="DSS DSP power FSM bypass control. For debug pupose." end="0" id="bypass_val" rwaccess="RW" width="24"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_CTRL_OVERRIDE1" description="" id="DSP_PD_CTRL_OVERRIDE1" offset="0x1C0" width="32">
    
  <bitfield begin="24" description="DSS DSP power FSM state bypass control enable.For debug pupose." end="24" id="state_bypass_en" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="DSS DSP power FSM bypass control enable.For debug pupose." end="0" id="bypass_en" rwaccess="RW" width="24"></bitfield>
  </register>
  
  
  <register acronym="DSP_PD_CTRL_OVERRIDE2" description="" id="DSP_PD_CTRL_OVERRIDE2" offset="0x1C4" width="32">
    
  <bitfield begin="2" description="DSS DSP power FSM override enable .For debug pupose." end="0" id="override_enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_RST_CTRL" description="" id="DSS_HWA_RST_CTRL" offset="0x1C8" width="32">
    
  <bitfield begin="2" description="This register is for Debug Purposes only. Reset control for DSS HWA Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_RST_CTRL" description="" id="DSS_HWA_RST_CTRL" offset="0x1CC" width="32">
    
  <bitfield begin="2" description="This register is for Debug Purposes only. Reset control for DSS TPCCA Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_EDMA_RST_CTRL" description="" id="DSS_EDMA_RST_CTRL" offset="0x1D0" width="32">
    
  <bitfield begin="2" description="This register is for Debug Purposes only. Reset control for DSS TPCCB Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_EDMA_RST_CTRL" description="" id="DSS_EDMA_RST_CTRL" offset="0x1D4" width="32">
    
  <bitfield begin="2" description="This register is for Debug Purposes only. Reset control for DSS TPCCC Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_EDMA_RST_CTRL" description="" id="DSS_EDMA_RST_CTRL" offset="0x1D8" width="32">
    
  <bitfield begin="6" description="This register is for Debug Purposes only. Reset control for DSS TPTCA1 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="4" id="assert_tc1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="This register is for Debug Purposes only. Reset control for DSS TPTCA0 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert_tc0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_EDMA_RST_CTRL" description="" id="DSS_EDMA_RST_CTRL" offset="0x1DC" width="32">
    
  <bitfield begin="6" description="This register is for Debug Purposes only. Reset control for DSS TPTCB1 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="4" id="assert_tc1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="This register is for Debug Purposes only. Reset control for DSS TPTCB0 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert_tc0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPTCC_RST_CTRL" description="" id="DSS_TPTCC_RST_CTRL" offset="0x1E0" width="32">
    
  <bitfield begin="22" description="This register is for Debug Purposes only. Reset control for DSS TPTCC1 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="20" id="assert_tc5" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="This register is for Debug Purposes only. Reset control for DSS TPTCC0 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="16" id="assert_tc4" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="14" description="This register is for Debug Purposes only. Reset control for DSS TPTCC1 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="12" id="assert_tc3" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="This register is for Debug Purposes only. Reset control for DSS TPTCC0 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="8" id="assert_tc2" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="This register is for Debug Purposes only. Reset control for DSS TPTCC1 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="4" id="assert_tc1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="This register is for Debug Purposes only. Reset control for DSS TPTCC0 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert_tc0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW0" description="" id="HW_SPARE_RW0" offset="0xFD0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW1" description="" id="HW_SPARE_RW1" offset="0xFD4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW2" description="" id="HW_SPARE_RW2" offset="0xFD8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW3" description="" id="HW_SPARE_RW3" offset="0xFDC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO0" description="" id="HW_SPARE_RO0" offset="0xFE0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO1" description="" id="HW_SPARE_RO1" offset="0xFE4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO2" description="" id="HW_SPARE_RO2" offset="0xFE8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO3" description="" id="HW_SPARE_RO3" offset="0xFEC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro3" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_WPH" description="" id="HW_SPARE_WPH" offset="0xFF0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_wph" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_REC" description="" id="HW_SPARE_REC" offset="0xFF4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="31" id="hw_spare_rec31" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved for HW R&amp;D" end="30" id="hw_spare_rec30" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Reserved for HW R&amp;D" end="29" id="hw_spare_rec29" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Reserved for HW R&amp;D" end="28" id="hw_spare_rec28" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="Reserved for HW R&amp;D" end="27" id="hw_spare_rec27" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="Reserved for HW R&amp;D" end="26" id="hw_spare_rec26" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Reserved for HW R&amp;D" end="25" id="hw_spare_rec25" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Reserved for HW R&amp;D" end="24" id="hw_spare_rec24" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved for HW R&amp;D" end="23" id="hw_spare_rec23" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Reserved for HW R&amp;D" end="22" id="hw_spare_rec22" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Reserved for HW R&amp;D" end="21" id="hw_spare_rec21" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Reserved for HW R&amp;D" end="20" id="hw_spare_rec20" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Reserved for HW R&amp;D" end="19" id="hw_spare_rec19" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Reserved for HW R&amp;D" end="18" id="hw_spare_rec18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Reserved for HW R&amp;D" end="17" id="hw_spare_rec17" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Reserved for HW R&amp;D" end="16" id="hw_spare_rec16" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved for HW R&amp;D" end="15" id="hw_spare_rec15" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Reserved for HW R&amp;D" end="14" id="hw_spare_rec14" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Reserved for HW R&amp;D" end="13" id="hw_spare_rec13" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Reserved for HW R&amp;D" end="12" id="hw_spare_rec12" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Reserved for HW R&amp;D" end="11" id="hw_spare_rec11" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Reserved for HW R&amp;D" end="10" id="hw_spare_rec10" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Reserved for HW R&amp;D" end="9" id="hw_spare_rec9" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Reserved for HW R&amp;D" end="8" id="hw_spare_rec8" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved for HW R&amp;D" end="7" id="hw_spare_rec7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Reserved for HW R&amp;D" end="6" id="hw_spare_rec6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Reserved for HW R&amp;D" end="5" id="hw_spare_rec5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Reserved for HW R&amp;D" end="4" id="hw_spare_rec4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Reserved for HW R&amp;D" end="3" id="hw_spare_rec3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Reserved for HW R&amp;D" end="2" id="hw_spare_rec2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved for HW R&amp;D" end="1" id="hw_spare_rec1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rec0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK0" description="  - KICK0 component " id="LOCK0_KICK0" offset="0x1008" width="32">
    
  <bitfield begin="31" description=" - KICK0 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK1" description="  - KICK1 component " id="LOCK0_KICK1" offset="0x100C" width="32">
    
  <bitfield begin="31" description=" - KICK1 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="intr_raw_status" description=" Interrupt Raw Status/Set Register " id="intr_raw_status" offset="0x1010" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enabled_status_clear" description=" Interrupt Enabled Status/Clear register " id="intr_enabled_status_clear" offset="0x1014" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable" description=" Interrupt Enable register " id="intr_enable" offset="0x1018" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable_clear" description=" Interrupt Enable Clear register " id="intr_enable_clear" offset="0x101C" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="eoi" description=" EOI register " id="eoi" offset="0x1020" width="32">
    
  <bitfield begin="7" description="EOI vector value. Write this with interrupt distribution value in the chip." end="0" id="" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_address" description=" Fault Address register " id="fault_address" offset="0x1024" width="32">
    
  <bitfield begin="31" description="Fault Address." end="0" id="" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="fault_type_status" description=" Fault Type Status register " id="fault_type_status" offset="0x1028" width="32">
    
  <bitfield begin="6" description="Non-secure access." end="6" id="" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="fault_attr_status" description=" Fault Attribute Status register " id="fault_attr_status" offset="0x102C" width="32">
    
  <bitfield begin="31" description="XID." end="20" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Route ID." end="8" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="7" description="Privilege ID." end="0" id="" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_clear" description=" Fault Clear register " id="fault_clear" offset="0x1030" width="32">
    
  <bitfield begin="0" description="Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect." end="0" id="" rwaccess="W" width="1"></bitfield>
  </register>
</module>
