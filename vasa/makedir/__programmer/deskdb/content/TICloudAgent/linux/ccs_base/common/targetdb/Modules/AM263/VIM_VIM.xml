<module name="VIM_VIM" acronym="" XML_version="1.0" HW_revision="n/a" description="">
	<register id="VIM_PID" acronym="VIM_PID" offset="0x0" width="32" description="">
		<bitfield id="SCHEME" width="2" begin="31" end="30" resetval="0x1" description="PID register scheme" range="31 - 30" rwaccess="RO"/> 
		<bitfield id="BU" width="2" begin="29" end="28" resetval="0x2" description="Business Unit: 10 = Processors" range="29 - 28" rwaccess="RO"/> 
		<bitfield id="FUNC" width="12" begin="27" end="16" resetval="0x144" description="Module ID" range="27 - 16" rwaccess="RO"/> 
		<bitfield id="RTL" width="5" begin="15" end="11" resetval="0x0" description="RTL revision. Will vary depending on release." range="15 - 11" rwaccess="RO"/> 
		<bitfield id="MAJOR" width="3" begin="10" end="8" resetval="0x0" description="Major revision" range="10 - 8" rwaccess="RO"/> 
		<bitfield id="CUSTOM" width="2" begin="7" end="6" resetval="0x0" description="Custom" range="7 - 6" rwaccess="RO"/> 
		<bitfield id="MINOR" width="6" begin="5" end="0" resetval="0x1" description="Minor revision" range="5 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INFO" acronym="VIM_INFO" offset="0x4" width="32" description="">
		<bitfield id="RES1" width="21" begin="31" end="11" resetval="0x0" description="RESERVE FIELD" range="31 - 11" rwaccess="RO"/> 
		<bitfield id="INTERRUPTS" width="11" begin="10" end="0" resetval="0x256" description="Total number of Interrupts" range="10 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_PRIIRQ" acronym="VIM_PRIIRQ" offset="0x8" width="32" description="">
		<bitfield id="VALID" width="1" begin="31" end="31" resetval="0x0" description="Indicates that the num field is valid." range="31" rwaccess="RO"/> 
		<bitfield id="RES2" width="11" begin="30" end="20" resetval="0x0" description="RESERVE FIELD" range="30 - 20" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="19" end="16" resetval="0x0" description="Priority of the highest priority pending IRQ.  valid only if  the valid flag is set." range="19 - 16" rwaccess="RO"/> 
		<bitfield id="RES3" width="6" begin="15" end="10" resetval="0x0" description="RESERVE FIELD" range="15 - 10" rwaccess="RO"/> 
		<bitfield id="NUM" width="10" begin="9" end="0" resetval="0x0" description="Number of the highest priority pending IRQ.  valid only if  the valid flag is set." range="9 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_PRIFIQ" acronym="VIM_PRIFIQ" offset="0xC" width="32" description="">
		<bitfield id="VALID" width="1" begin="31" end="31" resetval="0x0" description="Indicates that the num field is valid." range="31" rwaccess="RO"/> 
		<bitfield id="RES4" width="11" begin="30" end="20" resetval="0x0" description="RESERVE FIELD" range="30 - 20" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="19" end="16" resetval="0x0" description="Priority of the highest priority pending FIQ.  valid only if  the valid flag is set." range="19 - 16" rwaccess="RO"/> 
		<bitfield id="RES5" width="6" begin="15" end="10" resetval="0x0" description="RESERVE FIELD" range="15 - 10" rwaccess="RO"/> 
		<bitfield id="NUM" width="10" begin="9" end="0" resetval="0x0" description="Number of the highest priority pending FIQ.  valid only if  the valid flag is set." range="9 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_IRQGSTS" acronym="VIM_IRQGSTS" offset="0x10" width="32" description="">
		<bitfield id="STS" width="32" begin="31" end="0" resetval="0x0" description="Indicates that the num field is valid." range="31 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_FIQGSTS" acronym="VIM_FIQGSTS" offset="0x14" width="32" description="">
		<bitfield id="STS" width="32" begin="31" end="0" resetval="0x0" description="Indicates that the num field is valid." range="31 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_IRQVEC" acronym="VIM_IRQVEC" offset="0x18" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="Upper 30 bits of the 32-bit vector address.  Only valid if  the Prioritized IRQ Register valid flag is true." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES21" width="2" begin="1" end="0" resetval="0x0" description="RESERVE FIELD" range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_FIQVEC" acronym="VIM_FIQVEC" offset="0x1C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="Upper 30 bits of the 32-bit vector address.  Only valid if  the Prioritized FIQ Register valid flag is true." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES22" width="2" begin="1" end="0" resetval="0x0" description="RESERVE FIELD" range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_ACTIRQ" acronym="VIM_ACTIRQ" offset="0x20" width="32" description="">
		<bitfield id="VALID" width="1" begin="31" end="31" resetval="0x0" description="Indicates that the num field is valid. Set when the IRQ  Vector Address Register is read and cleared whenever the IRQ  Vector Address Register is written." range="31" rwaccess="RO"/> 
		<bitfield id="RES6" width="11" begin="30" end="20" resetval="0x0" description="RESERVE FIELD" range="30 - 20" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="19" end="16" resetval="0x0" description="Priority of the highest priority pending IRQ.  valid only if  the valid flag is set." range="19 - 16" rwaccess="RO"/> 
		<bitfield id="RES7" width="6" begin="15" end="10" resetval="0x0" description="RESERVE FIELD" range="15 - 10" rwaccess="RO"/> 
		<bitfield id="NUM" width="10" begin="9" end="0" resetval="0x0" description="Number of the currently active IRQ. Loaded from teh  Prioritized IRQ Register whenever the IRQ Vector Address is  read. Valid only if the valid flag is set." range="9 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_ACTFIQ" acronym="VIM_ACTFIQ" offset="0x24" width="32" description="">
		<bitfield id="VALID" width="1" begin="31" end="31" resetval="0x0" description="Indicates that the num field is valid. Set when the FIQ  Vector Address Register is read and cleared whenever the FIQ  Vector Address Register is written." range="31" rwaccess="RO"/> 
		<bitfield id="RES8" width="11" begin="30" end="20" resetval="0x0" description="RESERVE FIELD" range="30 - 20" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="19" end="16" resetval="0x0" description="Priority of the highest priority pending IRQ.  valid only if  the valid flag is set." range="19 - 16" rwaccess="RO"/> 
		<bitfield id="RES9" width="6" begin="15" end="10" resetval="0x0" description="RESERVE FIELD" range="15 - 10" rwaccess="RO"/> 
		<bitfield id="NUM" width="10" begin="9" end="0" resetval="0x0" description="Number of the currently active FIQ. Loaded from teh  Prioritized FIQ Register whenever the FIQ Vector Address is  read. Valid only if the valid flag is set." range="9 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_IRQPRIMSK" acronym="VIM_IRQPRIMSK" offset="0x28" width="32" description="">
		<bitfield id="RES24" width="16" begin="31" end="16" resetval="0x0" description="RESERVE FIELD" range="31 - 16" rwaccess="RO"/> 
		<bitfield id="MSK" width="16" begin="15" end="0" resetval="0x65535" description="Each bit corresponds to the given priority.  1 - IRQs of this priority are enabled. 0 - IRQs of this priority are disabled." range="15 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_FIQPRIMSK" acronym="VIM_FIQPRIMSK" offset="0x2C" width="32" description="">
		<bitfield id="RES24" width="16" begin="31" end="16" resetval="0x0" description="RESERVE FIELD" range="31 - 16" rwaccess="RO"/> 
		<bitfield id="MSK" width="16" begin="15" end="0" resetval="0x65535" description="Each bit corresponds to the given priority.  1 - FIQs of this priority are enabled. 0 - FIQs of this priority are disabled." range="15 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_DEDVEC" acronym="VIM_DEDVEC" offset="0x30" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="Upper 30 bits of the 32-bit vector address." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES23" width="2" begin="1" end="0" resetval="0x0" description="RESERVE FIELD" range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_RAW" acronym="VIM_RAW" offset="0x400" width="32" description="">
		<bitfield id="STS" width="32" begin="31" end="0" resetval="0x0" description="This is the raw status of the events in Group M Each bit corresponds to event Q where Q = Mx32+Bit Read 0  InactiveRead 1  Active/PendingWrite 0  No effectWrite 1  Set to Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_STS" acronym="VIM_STS" offset="0x404" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in Group M  Each bit corresponds to event Q where Q = Mx32+Bit Read 0  Inactive or DisabledRead 1  Active/Pending and EnabledWrite  0 No effectWrite 1 Clear Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTR_EN_SET" acronym="VIM_INTR_EN_SET" offset="0x408" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to enable the mask of events in Group M  Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite  0 No effectWrite  1 Set Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTER_EN_CLR" acronym="VIM_INTER_EN_CLR" offset="0x40C" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to disable the mask of events in Group M Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite 0 No effectWrite 1 Clear Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_IRQSTS" acronym="VIM_IRQSTS" offset="0x410" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to IRQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an IRQRead 1 Active/Pending, Enabled, and IRQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if IRQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_FIQSTS" acronym="VIM_FIQSTS" offset="0x414" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to FIQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an FIQRead 1 Active/Pending, Enabled, and FIQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if FIQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTMAP" acronym="VIM_INTMAP" offset="0x418" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate which interrupt the corresponding event influences (if enabled) for event group M.  Each bit corresponds to event Q where Q = Mx32+Bit   0 IRQ Interrupt (default)1 FIQ Interrupt" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTTYPE" acronym="VIM_INTTYPE" offset="0x41C" width="32" description="">
		<bitfield id="VAL" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate whether the source of an interrupt is a level (default) or a pulse for event group M.  This is informational so that an ISR may query this register and know whether it has to clear a pulse event or a level event (see 3.4 Interrupt Handling).  The value has no effect on how the VIM hardware functions.  The input interrupts are agnostic as to whether they are pulse or level.  Each bit corresponds to event Q where Q = Mx32+Bit0  Level (default)1  Pulse" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_RAW_1" acronym="VIM_RAW_1" offset="0x420" width="32" description="">
		<bitfield id="STS" width="32" begin="31" end="0" resetval="0x0" description="This is the raw status of the events in Group M Each bit corresponds to event Q where Q = Mx32+Bit Read 0  InactiveRead 1  Active/PendingWrite 0  No effectWrite 1  Set to Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_STS_1" acronym="VIM_STS_1" offset="0x424" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in Group M  Each bit corresponds to event Q where Q = Mx32+Bit Read 0  Inactive or DisabledRead 1  Active/Pending and EnabledWrite  0 No effectWrite 1 Clear Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTR_EN_SET_1" acronym="VIM_INTR_EN_SET_1" offset="0x428" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to enable the mask of events in Group M  Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite  0 No effectWrite  1 Set Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTER_EN_CLR_1" acronym="VIM_INTER_EN_CLR_1" offset="0x42C" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to disable the mask of events in Group M Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite 0 No effectWrite 1 Clear Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_IRQSTS_1" acronym="VIM_IRQSTS_1" offset="0x430" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to IRQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an IRQRead 1 Active/Pending, Enabled, and IRQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if IRQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_FIQSTS_1" acronym="VIM_FIQSTS_1" offset="0x434" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to FIQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an FIQRead 1 Active/Pending, Enabled, and FIQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if FIQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTMAP_1" acronym="VIM_INTMAP_1" offset="0x438" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate which interrupt the corresponding event influences (if enabled) for event group M.  Each bit corresponds to event Q where Q = Mx32+Bit   0 IRQ Interrupt (default)1 FIQ Interrupt" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTTYPE_1" acronym="VIM_INTTYPE_1" offset="0x43C" width="32" description="">
		<bitfield id="VAL" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate whether the source of an interrupt is a level (default) or a pulse for event group M.  This is informational so that an ISR may query this register and know whether it has to clear a pulse event or a level event (see 3.4 Interrupt Handling).  The value has no effect on how the VIM hardware functions.  The input interrupts are agnostic as to whether they are pulse or level.  Each bit corresponds to event Q where Q = Mx32+Bit0  Level (default)1  Pulse" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_RAW_2" acronym="VIM_RAW_2" offset="0x440" width="32" description="">
		<bitfield id="STS" width="32" begin="31" end="0" resetval="0x0" description="This is the raw status of the events in Group M Each bit corresponds to event Q where Q = Mx32+Bit Read 0  InactiveRead 1  Active/PendingWrite 0  No effectWrite 1  Set to Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_STS_2" acronym="VIM_STS_2" offset="0x444" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in Group M  Each bit corresponds to event Q where Q = Mx32+Bit Read 0  Inactive or DisabledRead 1  Active/Pending and EnabledWrite  0 No effectWrite 1 Clear Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTR_EN_SET_2" acronym="VIM_INTR_EN_SET_2" offset="0x448" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to enable the mask of events in Group M  Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite  0 No effectWrite  1 Set Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTER_EN_CLR_2" acronym="VIM_INTER_EN_CLR_2" offset="0x44C" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to disable the mask of events in Group M Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite 0 No effectWrite 1 Clear Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_IRQSTS_2" acronym="VIM_IRQSTS_2" offset="0x450" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to IRQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an IRQRead 1 Active/Pending, Enabled, and IRQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if IRQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_FIQSTS_2" acronym="VIM_FIQSTS_2" offset="0x454" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to FIQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an FIQRead 1 Active/Pending, Enabled, and FIQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if FIQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTMAP_2" acronym="VIM_INTMAP_2" offset="0x458" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate which interrupt the corresponding event influences (if enabled) for event group M.  Each bit corresponds to event Q where Q = Mx32+Bit   0 IRQ Interrupt (default)1 FIQ Interrupt" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTTYPE_2" acronym="VIM_INTTYPE_2" offset="0x45C" width="32" description="">
		<bitfield id="VAL" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate whether the source of an interrupt is a level (default) or a pulse for event group M.  This is informational so that an ISR may query this register and know whether it has to clear a pulse event or a level event (see 3.4 Interrupt Handling).  The value has no effect on how the VIM hardware functions.  The input interrupts are agnostic as to whether they are pulse or level.  Each bit corresponds to event Q where Q = Mx32+Bit0  Level (default)1  Pulse" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_RAW_3" acronym="VIM_RAW_3" offset="0x460" width="32" description="">
		<bitfield id="STS" width="32" begin="31" end="0" resetval="0x0" description="This is the raw status of the events in Group M Each bit corresponds to event Q where Q = Mx32+Bit Read 0  InactiveRead 1  Active/PendingWrite 0  No effectWrite 1  Set to Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_STS_3" acronym="VIM_STS_3" offset="0x464" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in Group M  Each bit corresponds to event Q where Q = Mx32+Bit Read 0  Inactive or DisabledRead 1  Active/Pending and EnabledWrite  0 No effectWrite 1 Clear Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTR_EN_SET_3" acronym="VIM_INTR_EN_SET_3" offset="0x468" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to enable the mask of events in Group M  Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite  0 No effectWrite  1 Set Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTER_EN_CLR_3" acronym="VIM_INTER_EN_CLR_3" offset="0x46C" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to disable the mask of events in Group M Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite 0 No effectWrite 1 Clear Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_IRQSTS_3" acronym="VIM_IRQSTS_3" offset="0x470" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to IRQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an IRQRead 1 Active/Pending, Enabled, and IRQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if IRQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_FIQSTS_3" acronym="VIM_FIQSTS_3" offset="0x474" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to FIQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an FIQRead 1 Active/Pending, Enabled, and FIQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if FIQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTMAP_3" acronym="VIM_INTMAP_3" offset="0x478" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate which interrupt the corresponding event influences (if enabled) for event group M.  Each bit corresponds to event Q where Q = Mx32+Bit   0 IRQ Interrupt (default)1 FIQ Interrupt" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTTYPE_3" acronym="VIM_INTTYPE_3" offset="0x47C" width="32" description="">
		<bitfield id="VAL" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate whether the source of an interrupt is a level (default) or a pulse for event group M.  This is informational so that an ISR may query this register and know whether it has to clear a pulse event or a level event (see 3.4 Interrupt Handling).  The value has no effect on how the VIM hardware functions.  The input interrupts are agnostic as to whether they are pulse or level.  Each bit corresponds to event Q where Q = Mx32+Bit0  Level (default)1  Pulse" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_RAW_4" acronym="VIM_RAW_4" offset="0x480" width="32" description="">
		<bitfield id="STS" width="32" begin="31" end="0" resetval="0x0" description="This is the raw status of the events in Group M Each bit corresponds to event Q where Q = Mx32+Bit Read 0  InactiveRead 1  Active/PendingWrite 0  No effectWrite 1  Set to Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_STS_4" acronym="VIM_STS_4" offset="0x484" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in Group M  Each bit corresponds to event Q where Q = Mx32+Bit Read 0  Inactive or DisabledRead 1  Active/Pending and EnabledWrite  0 No effectWrite 1 Clear Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTR_EN_SET_4" acronym="VIM_INTR_EN_SET_4" offset="0x488" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to enable the mask of events in Group M  Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite  0 No effectWrite  1 Set Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTER_EN_CLR_4" acronym="VIM_INTER_EN_CLR_4" offset="0x48C" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to disable the mask of events in Group M Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite 0 No effectWrite 1 Clear Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_IRQSTS_4" acronym="VIM_IRQSTS_4" offset="0x490" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to IRQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an IRQRead 1 Active/Pending, Enabled, and IRQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if IRQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_FIQSTS_4" acronym="VIM_FIQSTS_4" offset="0x494" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to FIQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an FIQRead 1 Active/Pending, Enabled, and FIQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if FIQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTMAP_4" acronym="VIM_INTMAP_4" offset="0x498" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate which interrupt the corresponding event influences (if enabled) for event group M.  Each bit corresponds to event Q where Q = Mx32+Bit   0 IRQ Interrupt (default)1 FIQ Interrupt" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTTYPE_4" acronym="VIM_INTTYPE_4" offset="0x49C" width="32" description="">
		<bitfield id="VAL" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate whether the source of an interrupt is a level (default) or a pulse for event group M.  This is informational so that an ISR may query this register and know whether it has to clear a pulse event or a level event (see 3.4 Interrupt Handling).  The value has no effect on how the VIM hardware functions.  The input interrupts are agnostic as to whether they are pulse or level.  Each bit corresponds to event Q where Q = Mx32+Bit0  Level (default)1  Pulse" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_RAW_5" acronym="VIM_RAW_5" offset="0x4A0" width="32" description="">
		<bitfield id="STS" width="32" begin="31" end="0" resetval="0x0" description="This is the raw status of the events in Group M Each bit corresponds to event Q where Q = Mx32+Bit Read 0  InactiveRead 1  Active/PendingWrite 0  No effectWrite 1  Set to Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_STS_5" acronym="VIM_STS_5" offset="0x4A4" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in Group M  Each bit corresponds to event Q where Q = Mx32+Bit Read 0  Inactive or DisabledRead 1  Active/Pending and EnabledWrite  0 No effectWrite 1 Clear Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTR_EN_SET_5" acronym="VIM_INTR_EN_SET_5" offset="0x4A8" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to enable the mask of events in Group M  Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite  0 No effectWrite  1 Set Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTER_EN_CLR_5" acronym="VIM_INTER_EN_CLR_5" offset="0x4AC" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to disable the mask of events in Group M Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite 0 No effectWrite 1 Clear Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_IRQSTS_5" acronym="VIM_IRQSTS_5" offset="0x4B0" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to IRQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an IRQRead 1 Active/Pending, Enabled, and IRQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if IRQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_FIQSTS_5" acronym="VIM_FIQSTS_5" offset="0x4B4" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to FIQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an FIQRead 1 Active/Pending, Enabled, and FIQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if FIQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTMAP_5" acronym="VIM_INTMAP_5" offset="0x4B8" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate which interrupt the corresponding event influences (if enabled) for event group M.  Each bit corresponds to event Q where Q = Mx32+Bit   0 IRQ Interrupt (default)1 FIQ Interrupt" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTTYPE_5" acronym="VIM_INTTYPE_5" offset="0x4BC" width="32" description="">
		<bitfield id="VAL" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate whether the source of an interrupt is a level (default) or a pulse for event group M.  This is informational so that an ISR may query this register and know whether it has to clear a pulse event or a level event (see 3.4 Interrupt Handling).  The value has no effect on how the VIM hardware functions.  The input interrupts are agnostic as to whether they are pulse or level.  Each bit corresponds to event Q where Q = Mx32+Bit0  Level (default)1  Pulse" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_RAW_6" acronym="VIM_RAW_6" offset="0x4C0" width="32" description="">
		<bitfield id="STS" width="32" begin="31" end="0" resetval="0x0" description="This is the raw status of the events in Group M Each bit corresponds to event Q where Q = Mx32+Bit Read 0  InactiveRead 1  Active/PendingWrite 0  No effectWrite 1  Set to Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_STS_6" acronym="VIM_STS_6" offset="0x4C4" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in Group M  Each bit corresponds to event Q where Q = Mx32+Bit Read 0  Inactive or DisabledRead 1  Active/Pending and EnabledWrite  0 No effectWrite 1 Clear Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTR_EN_SET_6" acronym="VIM_INTR_EN_SET_6" offset="0x4C8" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to enable the mask of events in Group M  Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite  0 No effectWrite  1 Set Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTER_EN_CLR_6" acronym="VIM_INTER_EN_CLR_6" offset="0x4CC" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to disable the mask of events in Group M Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite 0 No effectWrite 1 Clear Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_IRQSTS_6" acronym="VIM_IRQSTS_6" offset="0x4D0" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to IRQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an IRQRead 1 Active/Pending, Enabled, and IRQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if IRQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_FIQSTS_6" acronym="VIM_FIQSTS_6" offset="0x4D4" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to FIQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an FIQRead 1 Active/Pending, Enabled, and FIQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if FIQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTMAP_6" acronym="VIM_INTMAP_6" offset="0x4D8" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate which interrupt the corresponding event influences (if enabled) for event group M.  Each bit corresponds to event Q where Q = Mx32+Bit   0 IRQ Interrupt (default)1 FIQ Interrupt" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTTYPE_6" acronym="VIM_INTTYPE_6" offset="0x4DC" width="32" description="">
		<bitfield id="VAL" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate whether the source of an interrupt is a level (default) or a pulse for event group M.  This is informational so that an ISR may query this register and know whether it has to clear a pulse event or a level event (see 3.4 Interrupt Handling).  The value has no effect on how the VIM hardware functions.  The input interrupts are agnostic as to whether they are pulse or level.  Each bit corresponds to event Q where Q = Mx32+Bit0  Level (default)1  Pulse" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_RAW_7" acronym="VIM_RAW_7" offset="0x4E0" width="32" description="">
		<bitfield id="STS" width="32" begin="31" end="0" resetval="0x0" description="This is the raw status of the events in Group M Each bit corresponds to event Q where Q = Mx32+Bit Read 0  InactiveRead 1  Active/PendingWrite 0  No effectWrite 1  Set to Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_STS_7" acronym="VIM_STS_7" offset="0x4E4" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in Group M  Each bit corresponds to event Q where Q = Mx32+Bit Read 0  Inactive or DisabledRead 1  Active/Pending and EnabledWrite  0 No effectWrite 1 Clear Interrupt Raw Status" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTR_EN_SET_7" acronym="VIM_INTR_EN_SET_7" offset="0x4E8" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to enable the mask of events in Group M  Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite  0 No effectWrite  1 Set Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTER_EN_CLR_7" acronym="VIM_INTER_EN_CLR_7" offset="0x4EC" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to disable the mask of events in Group M Each bit corresponds to event Q where Q = Mx32+BitRead 0 DisabledRead 1 EnabledWrite 0 No effectWrite 1 Clear Enable" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_IRQSTS_7" acronym="VIM_IRQSTS_7" offset="0x4F0" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to IRQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an IRQRead 1 Active/Pending, Enabled, and IRQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if IRQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_FIQSTS_7" acronym="VIM_FIQSTS_7" offset="0x4F4" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This is the masked status of the events in group M that are mapped to FIQ  Each bit corresponds to event Q where Q = Mx32+BitRead 0 Inactive, Disabled, or not an FIQRead 1 Active/Pending, Enabled, and FIQWrite  0 No effectWrite  1 Clear Interrupt Raw Status (if FIQ)" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTMAP_7" acronym="VIM_INTMAP_7" offset="0x4F8" width="32" description="">
		<bitfield id="MASK" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate which interrupt the corresponding event influences (if enabled) for event group M.  Each bit corresponds to event Q where Q = Mx32+Bit   0 IRQ Interrupt (default)1 FIQ Interrupt" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTTYPE_7" acronym="VIM_INTTYPE_7" offset="0x4FC" width="32" description="">
		<bitfield id="VAL" width="32" begin="31" end="0" resetval="0x0" description="This field is used to indicate whether the source of an interrupt is a level (default) or a pulse for event group M.  This is informational so that an ISR may query this register and know whether it has to clear a pulse event or a level event (see 3.4 Interrupt Handling).  The value has no effect on how the VIM hardware functions.  The input interrupts are agnostic as to whether they are pulse or level.  Each bit corresponds to event Q where Q = Mx32+Bit0  Level (default)1  Pulse" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY" acronym="VIM_INTPRIORITY" offset="0x1000" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_1" acronym="VIM_INTPRIORITY_1" offset="0x1004" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_2" acronym="VIM_INTPRIORITY_2" offset="0x1008" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_3" acronym="VIM_INTPRIORITY_3" offset="0x100C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_4" acronym="VIM_INTPRIORITY_4" offset="0x1010" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_5" acronym="VIM_INTPRIORITY_5" offset="0x1014" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_6" acronym="VIM_INTPRIORITY_6" offset="0x1018" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_7" acronym="VIM_INTPRIORITY_7" offset="0x101C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_8" acronym="VIM_INTPRIORITY_8" offset="0x1020" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_9" acronym="VIM_INTPRIORITY_9" offset="0x1024" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_10" acronym="VIM_INTPRIORITY_10" offset="0x1028" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_11" acronym="VIM_INTPRIORITY_11" offset="0x102C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_12" acronym="VIM_INTPRIORITY_12" offset="0x1030" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_13" acronym="VIM_INTPRIORITY_13" offset="0x1034" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_14" acronym="VIM_INTPRIORITY_14" offset="0x1038" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_15" acronym="VIM_INTPRIORITY_15" offset="0x103C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_16" acronym="VIM_INTPRIORITY_16" offset="0x1040" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_17" acronym="VIM_INTPRIORITY_17" offset="0x1044" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_18" acronym="VIM_INTPRIORITY_18" offset="0x1048" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_19" acronym="VIM_INTPRIORITY_19" offset="0x104C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_20" acronym="VIM_INTPRIORITY_20" offset="0x1050" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_21" acronym="VIM_INTPRIORITY_21" offset="0x1054" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_22" acronym="VIM_INTPRIORITY_22" offset="0x1058" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_23" acronym="VIM_INTPRIORITY_23" offset="0x105C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_24" acronym="VIM_INTPRIORITY_24" offset="0x1060" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_25" acronym="VIM_INTPRIORITY_25" offset="0x1064" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_26" acronym="VIM_INTPRIORITY_26" offset="0x1068" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_27" acronym="VIM_INTPRIORITY_27" offset="0x106C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_28" acronym="VIM_INTPRIORITY_28" offset="0x1070" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_29" acronym="VIM_INTPRIORITY_29" offset="0x1074" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_30" acronym="VIM_INTPRIORITY_30" offset="0x1078" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_31" acronym="VIM_INTPRIORITY_31" offset="0x107C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_32" acronym="VIM_INTPRIORITY_32" offset="0x1080" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_33" acronym="VIM_INTPRIORITY_33" offset="0x1084" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_34" acronym="VIM_INTPRIORITY_34" offset="0x1088" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_35" acronym="VIM_INTPRIORITY_35" offset="0x108C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_36" acronym="VIM_INTPRIORITY_36" offset="0x1090" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_37" acronym="VIM_INTPRIORITY_37" offset="0x1094" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_38" acronym="VIM_INTPRIORITY_38" offset="0x1098" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_39" acronym="VIM_INTPRIORITY_39" offset="0x109C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_40" acronym="VIM_INTPRIORITY_40" offset="0x10A0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_41" acronym="VIM_INTPRIORITY_41" offset="0x10A4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_42" acronym="VIM_INTPRIORITY_42" offset="0x10A8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_43" acronym="VIM_INTPRIORITY_43" offset="0x10AC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_44" acronym="VIM_INTPRIORITY_44" offset="0x10B0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_45" acronym="VIM_INTPRIORITY_45" offset="0x10B4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_46" acronym="VIM_INTPRIORITY_46" offset="0x10B8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_47" acronym="VIM_INTPRIORITY_47" offset="0x10BC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_48" acronym="VIM_INTPRIORITY_48" offset="0x10C0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_49" acronym="VIM_INTPRIORITY_49" offset="0x10C4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_50" acronym="VIM_INTPRIORITY_50" offset="0x10C8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_51" acronym="VIM_INTPRIORITY_51" offset="0x10CC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_52" acronym="VIM_INTPRIORITY_52" offset="0x10D0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_53" acronym="VIM_INTPRIORITY_53" offset="0x10D4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_54" acronym="VIM_INTPRIORITY_54" offset="0x10D8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_55" acronym="VIM_INTPRIORITY_55" offset="0x10DC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_56" acronym="VIM_INTPRIORITY_56" offset="0x10E0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_57" acronym="VIM_INTPRIORITY_57" offset="0x10E4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_58" acronym="VIM_INTPRIORITY_58" offset="0x10E8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_59" acronym="VIM_INTPRIORITY_59" offset="0x10EC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_60" acronym="VIM_INTPRIORITY_60" offset="0x10F0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_61" acronym="VIM_INTPRIORITY_61" offset="0x10F4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_62" acronym="VIM_INTPRIORITY_62" offset="0x10F8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_63" acronym="VIM_INTPRIORITY_63" offset="0x10FC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_64" acronym="VIM_INTPRIORITY_64" offset="0x1100" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_65" acronym="VIM_INTPRIORITY_65" offset="0x1104" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_66" acronym="VIM_INTPRIORITY_66" offset="0x1108" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_67" acronym="VIM_INTPRIORITY_67" offset="0x110C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_68" acronym="VIM_INTPRIORITY_68" offset="0x1110" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_69" acronym="VIM_INTPRIORITY_69" offset="0x1114" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_70" acronym="VIM_INTPRIORITY_70" offset="0x1118" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_71" acronym="VIM_INTPRIORITY_71" offset="0x111C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_72" acronym="VIM_INTPRIORITY_72" offset="0x1120" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_73" acronym="VIM_INTPRIORITY_73" offset="0x1124" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_74" acronym="VIM_INTPRIORITY_74" offset="0x1128" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_75" acronym="VIM_INTPRIORITY_75" offset="0x112C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_76" acronym="VIM_INTPRIORITY_76" offset="0x1130" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_77" acronym="VIM_INTPRIORITY_77" offset="0x1134" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_78" acronym="VIM_INTPRIORITY_78" offset="0x1138" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_79" acronym="VIM_INTPRIORITY_79" offset="0x113C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_80" acronym="VIM_INTPRIORITY_80" offset="0x1140" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_81" acronym="VIM_INTPRIORITY_81" offset="0x1144" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_82" acronym="VIM_INTPRIORITY_82" offset="0x1148" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_83" acronym="VIM_INTPRIORITY_83" offset="0x114C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_84" acronym="VIM_INTPRIORITY_84" offset="0x1150" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_85" acronym="VIM_INTPRIORITY_85" offset="0x1154" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_86" acronym="VIM_INTPRIORITY_86" offset="0x1158" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_87" acronym="VIM_INTPRIORITY_87" offset="0x115C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_88" acronym="VIM_INTPRIORITY_88" offset="0x1160" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_89" acronym="VIM_INTPRIORITY_89" offset="0x1164" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_90" acronym="VIM_INTPRIORITY_90" offset="0x1168" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_91" acronym="VIM_INTPRIORITY_91" offset="0x116C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_92" acronym="VIM_INTPRIORITY_92" offset="0x1170" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_93" acronym="VIM_INTPRIORITY_93" offset="0x1174" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_94" acronym="VIM_INTPRIORITY_94" offset="0x1178" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_95" acronym="VIM_INTPRIORITY_95" offset="0x117C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_96" acronym="VIM_INTPRIORITY_96" offset="0x1180" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_97" acronym="VIM_INTPRIORITY_97" offset="0x1184" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_98" acronym="VIM_INTPRIORITY_98" offset="0x1188" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_99" acronym="VIM_INTPRIORITY_99" offset="0x118C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_100" acronym="VIM_INTPRIORITY_100" offset="0x1190" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_101" acronym="VIM_INTPRIORITY_101" offset="0x1194" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_102" acronym="VIM_INTPRIORITY_102" offset="0x1198" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_103" acronym="VIM_INTPRIORITY_103" offset="0x119C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_104" acronym="VIM_INTPRIORITY_104" offset="0x11A0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_105" acronym="VIM_INTPRIORITY_105" offset="0x11A4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_106" acronym="VIM_INTPRIORITY_106" offset="0x11A8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_107" acronym="VIM_INTPRIORITY_107" offset="0x11AC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_108" acronym="VIM_INTPRIORITY_108" offset="0x11B0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_109" acronym="VIM_INTPRIORITY_109" offset="0x11B4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_110" acronym="VIM_INTPRIORITY_110" offset="0x11B8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_111" acronym="VIM_INTPRIORITY_111" offset="0x11BC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_112" acronym="VIM_INTPRIORITY_112" offset="0x11C0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_113" acronym="VIM_INTPRIORITY_113" offset="0x11C4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_114" acronym="VIM_INTPRIORITY_114" offset="0x11C8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_115" acronym="VIM_INTPRIORITY_115" offset="0x11CC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_116" acronym="VIM_INTPRIORITY_116" offset="0x11D0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_117" acronym="VIM_INTPRIORITY_117" offset="0x11D4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_118" acronym="VIM_INTPRIORITY_118" offset="0x11D8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_119" acronym="VIM_INTPRIORITY_119" offset="0x11DC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_120" acronym="VIM_INTPRIORITY_120" offset="0x11E0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_121" acronym="VIM_INTPRIORITY_121" offset="0x11E4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_122" acronym="VIM_INTPRIORITY_122" offset="0x11E8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_123" acronym="VIM_INTPRIORITY_123" offset="0x11EC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_124" acronym="VIM_INTPRIORITY_124" offset="0x11F0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_125" acronym="VIM_INTPRIORITY_125" offset="0x11F4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_126" acronym="VIM_INTPRIORITY_126" offset="0x11F8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_127" acronym="VIM_INTPRIORITY_127" offset="0x11FC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_128" acronym="VIM_INTPRIORITY_128" offset="0x1200" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_129" acronym="VIM_INTPRIORITY_129" offset="0x1204" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_130" acronym="VIM_INTPRIORITY_130" offset="0x1208" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_131" acronym="VIM_INTPRIORITY_131" offset="0x120C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_132" acronym="VIM_INTPRIORITY_132" offset="0x1210" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_133" acronym="VIM_INTPRIORITY_133" offset="0x1214" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_134" acronym="VIM_INTPRIORITY_134" offset="0x1218" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_135" acronym="VIM_INTPRIORITY_135" offset="0x121C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_136" acronym="VIM_INTPRIORITY_136" offset="0x1220" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_137" acronym="VIM_INTPRIORITY_137" offset="0x1224" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_138" acronym="VIM_INTPRIORITY_138" offset="0x1228" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_139" acronym="VIM_INTPRIORITY_139" offset="0x122C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_140" acronym="VIM_INTPRIORITY_140" offset="0x1230" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_141" acronym="VIM_INTPRIORITY_141" offset="0x1234" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_142" acronym="VIM_INTPRIORITY_142" offset="0x1238" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_143" acronym="VIM_INTPRIORITY_143" offset="0x123C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_144" acronym="VIM_INTPRIORITY_144" offset="0x1240" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_145" acronym="VIM_INTPRIORITY_145" offset="0x1244" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_146" acronym="VIM_INTPRIORITY_146" offset="0x1248" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_147" acronym="VIM_INTPRIORITY_147" offset="0x124C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_148" acronym="VIM_INTPRIORITY_148" offset="0x1250" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_149" acronym="VIM_INTPRIORITY_149" offset="0x1254" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_150" acronym="VIM_INTPRIORITY_150" offset="0x1258" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_151" acronym="VIM_INTPRIORITY_151" offset="0x125C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_152" acronym="VIM_INTPRIORITY_152" offset="0x1260" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_153" acronym="VIM_INTPRIORITY_153" offset="0x1264" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_154" acronym="VIM_INTPRIORITY_154" offset="0x1268" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_155" acronym="VIM_INTPRIORITY_155" offset="0x126C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_156" acronym="VIM_INTPRIORITY_156" offset="0x1270" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_157" acronym="VIM_INTPRIORITY_157" offset="0x1274" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_158" acronym="VIM_INTPRIORITY_158" offset="0x1278" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_159" acronym="VIM_INTPRIORITY_159" offset="0x127C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_160" acronym="VIM_INTPRIORITY_160" offset="0x1280" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_161" acronym="VIM_INTPRIORITY_161" offset="0x1284" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_162" acronym="VIM_INTPRIORITY_162" offset="0x1288" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_163" acronym="VIM_INTPRIORITY_163" offset="0x128C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_164" acronym="VIM_INTPRIORITY_164" offset="0x1290" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_165" acronym="VIM_INTPRIORITY_165" offset="0x1294" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_166" acronym="VIM_INTPRIORITY_166" offset="0x1298" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_167" acronym="VIM_INTPRIORITY_167" offset="0x129C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_168" acronym="VIM_INTPRIORITY_168" offset="0x12A0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_169" acronym="VIM_INTPRIORITY_169" offset="0x12A4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_170" acronym="VIM_INTPRIORITY_170" offset="0x12A8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_171" acronym="VIM_INTPRIORITY_171" offset="0x12AC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_172" acronym="VIM_INTPRIORITY_172" offset="0x12B0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_173" acronym="VIM_INTPRIORITY_173" offset="0x12B4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_174" acronym="VIM_INTPRIORITY_174" offset="0x12B8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_175" acronym="VIM_INTPRIORITY_175" offset="0x12BC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_176" acronym="VIM_INTPRIORITY_176" offset="0x12C0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_177" acronym="VIM_INTPRIORITY_177" offset="0x12C4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_178" acronym="VIM_INTPRIORITY_178" offset="0x12C8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_179" acronym="VIM_INTPRIORITY_179" offset="0x12CC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_180" acronym="VIM_INTPRIORITY_180" offset="0x12D0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_181" acronym="VIM_INTPRIORITY_181" offset="0x12D4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_182" acronym="VIM_INTPRIORITY_182" offset="0x12D8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_183" acronym="VIM_INTPRIORITY_183" offset="0x12DC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_184" acronym="VIM_INTPRIORITY_184" offset="0x12E0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_185" acronym="VIM_INTPRIORITY_185" offset="0x12E4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_186" acronym="VIM_INTPRIORITY_186" offset="0x12E8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_187" acronym="VIM_INTPRIORITY_187" offset="0x12EC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_188" acronym="VIM_INTPRIORITY_188" offset="0x12F0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_189" acronym="VIM_INTPRIORITY_189" offset="0x12F4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_190" acronym="VIM_INTPRIORITY_190" offset="0x12F8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_191" acronym="VIM_INTPRIORITY_191" offset="0x12FC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_192" acronym="VIM_INTPRIORITY_192" offset="0x1300" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_193" acronym="VIM_INTPRIORITY_193" offset="0x1304" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_194" acronym="VIM_INTPRIORITY_194" offset="0x1308" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_195" acronym="VIM_INTPRIORITY_195" offset="0x130C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_196" acronym="VIM_INTPRIORITY_196" offset="0x1310" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_197" acronym="VIM_INTPRIORITY_197" offset="0x1314" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_198" acronym="VIM_INTPRIORITY_198" offset="0x1318" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_199" acronym="VIM_INTPRIORITY_199" offset="0x131C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_200" acronym="VIM_INTPRIORITY_200" offset="0x1320" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_201" acronym="VIM_INTPRIORITY_201" offset="0x1324" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_202" acronym="VIM_INTPRIORITY_202" offset="0x1328" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_203" acronym="VIM_INTPRIORITY_203" offset="0x132C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_204" acronym="VIM_INTPRIORITY_204" offset="0x1330" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_205" acronym="VIM_INTPRIORITY_205" offset="0x1334" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_206" acronym="VIM_INTPRIORITY_206" offset="0x1338" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_207" acronym="VIM_INTPRIORITY_207" offset="0x133C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_208" acronym="VIM_INTPRIORITY_208" offset="0x1340" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_209" acronym="VIM_INTPRIORITY_209" offset="0x1344" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_210" acronym="VIM_INTPRIORITY_210" offset="0x1348" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_211" acronym="VIM_INTPRIORITY_211" offset="0x134C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_212" acronym="VIM_INTPRIORITY_212" offset="0x1350" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_213" acronym="VIM_INTPRIORITY_213" offset="0x1354" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_214" acronym="VIM_INTPRIORITY_214" offset="0x1358" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_215" acronym="VIM_INTPRIORITY_215" offset="0x135C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_216" acronym="VIM_INTPRIORITY_216" offset="0x1360" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_217" acronym="VIM_INTPRIORITY_217" offset="0x1364" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_218" acronym="VIM_INTPRIORITY_218" offset="0x1368" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_219" acronym="VIM_INTPRIORITY_219" offset="0x136C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_220" acronym="VIM_INTPRIORITY_220" offset="0x1370" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_221" acronym="VIM_INTPRIORITY_221" offset="0x1374" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_222" acronym="VIM_INTPRIORITY_222" offset="0x1378" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_223" acronym="VIM_INTPRIORITY_223" offset="0x137C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_224" acronym="VIM_INTPRIORITY_224" offset="0x1380" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_225" acronym="VIM_INTPRIORITY_225" offset="0x1384" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_226" acronym="VIM_INTPRIORITY_226" offset="0x1388" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_227" acronym="VIM_INTPRIORITY_227" offset="0x138C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_228" acronym="VIM_INTPRIORITY_228" offset="0x1390" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_229" acronym="VIM_INTPRIORITY_229" offset="0x1394" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_230" acronym="VIM_INTPRIORITY_230" offset="0x1398" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_231" acronym="VIM_INTPRIORITY_231" offset="0x139C" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_232" acronym="VIM_INTPRIORITY_232" offset="0x13A0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_233" acronym="VIM_INTPRIORITY_233" offset="0x13A4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_234" acronym="VIM_INTPRIORITY_234" offset="0x13A8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_235" acronym="VIM_INTPRIORITY_235" offset="0x13AC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_236" acronym="VIM_INTPRIORITY_236" offset="0x13B0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_237" acronym="VIM_INTPRIORITY_237" offset="0x13B4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_238" acronym="VIM_INTPRIORITY_238" offset="0x13B8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_239" acronym="VIM_INTPRIORITY_239" offset="0x13BC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_240" acronym="VIM_INTPRIORITY_240" offset="0x13C0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_241" acronym="VIM_INTPRIORITY_241" offset="0x13C4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_242" acronym="VIM_INTPRIORITY_242" offset="0x13C8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_243" acronym="VIM_INTPRIORITY_243" offset="0x13CC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_244" acronym="VIM_INTPRIORITY_244" offset="0x13D0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_245" acronym="VIM_INTPRIORITY_245" offset="0x13D4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_246" acronym="VIM_INTPRIORITY_246" offset="0x13D8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_247" acronym="VIM_INTPRIORITY_247" offset="0x13DC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_248" acronym="VIM_INTPRIORITY_248" offset="0x13E0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_249" acronym="VIM_INTPRIORITY_249" offset="0x13E4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_250" acronym="VIM_INTPRIORITY_250" offset="0x13E8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_251" acronym="VIM_INTPRIORITY_251" offset="0x13EC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_252" acronym="VIM_INTPRIORITY_252" offset="0x13F0" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_253" acronym="VIM_INTPRIORITY_253" offset="0x13F4" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_254" acronym="VIM_INTPRIORITY_254" offset="0x13F8" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTPRIORITY_255" acronym="VIM_INTPRIORITY_255" offset="0x13FC" width="32" description="">
		<bitfield id="RES19" width="28" begin="31" end="4" resetval="0x0" description="RESERVE FIELD" range="31 - 4" rwaccess="RO"/> 
		<bitfield id="PRI" width="4" begin="3" end="0" resetval="0x15" description="This is the priority for interrupt Q.  If two interrupts have the same priority, then whichever interrupt has the lower number Q wins arbitration  0  Highest Priority  15  Lowest Priority (Default)" range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="VIM_INTVECTOR" acronym="VIM_INTVECTOR" offset="0x2000" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_1" acronym="VIM_INTVECTOR_1" offset="0x2004" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_2" acronym="VIM_INTVECTOR_2" offset="0x2008" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_3" acronym="VIM_INTVECTOR_3" offset="0x200C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_4" acronym="VIM_INTVECTOR_4" offset="0x2010" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_5" acronym="VIM_INTVECTOR_5" offset="0x2014" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_6" acronym="VIM_INTVECTOR_6" offset="0x2018" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_7" acronym="VIM_INTVECTOR_7" offset="0x201C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_8" acronym="VIM_INTVECTOR_8" offset="0x2020" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_9" acronym="VIM_INTVECTOR_9" offset="0x2024" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_10" acronym="VIM_INTVECTOR_10" offset="0x2028" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_11" acronym="VIM_INTVECTOR_11" offset="0x202C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_12" acronym="VIM_INTVECTOR_12" offset="0x2030" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_13" acronym="VIM_INTVECTOR_13" offset="0x2034" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_14" acronym="VIM_INTVECTOR_14" offset="0x2038" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_15" acronym="VIM_INTVECTOR_15" offset="0x203C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_16" acronym="VIM_INTVECTOR_16" offset="0x2040" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_17" acronym="VIM_INTVECTOR_17" offset="0x2044" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_18" acronym="VIM_INTVECTOR_18" offset="0x2048" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_19" acronym="VIM_INTVECTOR_19" offset="0x204C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_20" acronym="VIM_INTVECTOR_20" offset="0x2050" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_21" acronym="VIM_INTVECTOR_21" offset="0x2054" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_22" acronym="VIM_INTVECTOR_22" offset="0x2058" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_23" acronym="VIM_INTVECTOR_23" offset="0x205C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_24" acronym="VIM_INTVECTOR_24" offset="0x2060" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_25" acronym="VIM_INTVECTOR_25" offset="0x2064" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_26" acronym="VIM_INTVECTOR_26" offset="0x2068" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_27" acronym="VIM_INTVECTOR_27" offset="0x206C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_28" acronym="VIM_INTVECTOR_28" offset="0x2070" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_29" acronym="VIM_INTVECTOR_29" offset="0x2074" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_30" acronym="VIM_INTVECTOR_30" offset="0x2078" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_31" acronym="VIM_INTVECTOR_31" offset="0x207C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_32" acronym="VIM_INTVECTOR_32" offset="0x2080" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_33" acronym="VIM_INTVECTOR_33" offset="0x2084" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_34" acronym="VIM_INTVECTOR_34" offset="0x2088" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_35" acronym="VIM_INTVECTOR_35" offset="0x208C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_36" acronym="VIM_INTVECTOR_36" offset="0x2090" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_37" acronym="VIM_INTVECTOR_37" offset="0x2094" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_38" acronym="VIM_INTVECTOR_38" offset="0x2098" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_39" acronym="VIM_INTVECTOR_39" offset="0x209C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_40" acronym="VIM_INTVECTOR_40" offset="0x20A0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_41" acronym="VIM_INTVECTOR_41" offset="0x20A4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_42" acronym="VIM_INTVECTOR_42" offset="0x20A8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_43" acronym="VIM_INTVECTOR_43" offset="0x20AC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_44" acronym="VIM_INTVECTOR_44" offset="0x20B0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_45" acronym="VIM_INTVECTOR_45" offset="0x20B4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_46" acronym="VIM_INTVECTOR_46" offset="0x20B8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_47" acronym="VIM_INTVECTOR_47" offset="0x20BC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_48" acronym="VIM_INTVECTOR_48" offset="0x20C0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_49" acronym="VIM_INTVECTOR_49" offset="0x20C4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_50" acronym="VIM_INTVECTOR_50" offset="0x20C8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_51" acronym="VIM_INTVECTOR_51" offset="0x20CC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_52" acronym="VIM_INTVECTOR_52" offset="0x20D0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_53" acronym="VIM_INTVECTOR_53" offset="0x20D4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_54" acronym="VIM_INTVECTOR_54" offset="0x20D8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_55" acronym="VIM_INTVECTOR_55" offset="0x20DC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_56" acronym="VIM_INTVECTOR_56" offset="0x20E0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_57" acronym="VIM_INTVECTOR_57" offset="0x20E4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_58" acronym="VIM_INTVECTOR_58" offset="0x20E8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_59" acronym="VIM_INTVECTOR_59" offset="0x20EC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_60" acronym="VIM_INTVECTOR_60" offset="0x20F0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_61" acronym="VIM_INTVECTOR_61" offset="0x20F4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_62" acronym="VIM_INTVECTOR_62" offset="0x20F8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_63" acronym="VIM_INTVECTOR_63" offset="0x20FC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_64" acronym="VIM_INTVECTOR_64" offset="0x2100" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_65" acronym="VIM_INTVECTOR_65" offset="0x2104" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_66" acronym="VIM_INTVECTOR_66" offset="0x2108" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_67" acronym="VIM_INTVECTOR_67" offset="0x210C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_68" acronym="VIM_INTVECTOR_68" offset="0x2110" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_69" acronym="VIM_INTVECTOR_69" offset="0x2114" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_70" acronym="VIM_INTVECTOR_70" offset="0x2118" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_71" acronym="VIM_INTVECTOR_71" offset="0x211C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_72" acronym="VIM_INTVECTOR_72" offset="0x2120" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_73" acronym="VIM_INTVECTOR_73" offset="0x2124" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_74" acronym="VIM_INTVECTOR_74" offset="0x2128" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_75" acronym="VIM_INTVECTOR_75" offset="0x212C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_76" acronym="VIM_INTVECTOR_76" offset="0x2130" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_77" acronym="VIM_INTVECTOR_77" offset="0x2134" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_78" acronym="VIM_INTVECTOR_78" offset="0x2138" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_79" acronym="VIM_INTVECTOR_79" offset="0x213C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_80" acronym="VIM_INTVECTOR_80" offset="0x2140" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_81" acronym="VIM_INTVECTOR_81" offset="0x2144" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_82" acronym="VIM_INTVECTOR_82" offset="0x2148" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_83" acronym="VIM_INTVECTOR_83" offset="0x214C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_84" acronym="VIM_INTVECTOR_84" offset="0x2150" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_85" acronym="VIM_INTVECTOR_85" offset="0x2154" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_86" acronym="VIM_INTVECTOR_86" offset="0x2158" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_87" acronym="VIM_INTVECTOR_87" offset="0x215C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_88" acronym="VIM_INTVECTOR_88" offset="0x2160" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_89" acronym="VIM_INTVECTOR_89" offset="0x2164" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_90" acronym="VIM_INTVECTOR_90" offset="0x2168" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_91" acronym="VIM_INTVECTOR_91" offset="0x216C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_92" acronym="VIM_INTVECTOR_92" offset="0x2170" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_93" acronym="VIM_INTVECTOR_93" offset="0x2174" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_94" acronym="VIM_INTVECTOR_94" offset="0x2178" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_95" acronym="VIM_INTVECTOR_95" offset="0x217C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_96" acronym="VIM_INTVECTOR_96" offset="0x2180" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_97" acronym="VIM_INTVECTOR_97" offset="0x2184" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_98" acronym="VIM_INTVECTOR_98" offset="0x2188" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_99" acronym="VIM_INTVECTOR_99" offset="0x218C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_100" acronym="VIM_INTVECTOR_100" offset="0x2190" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_101" acronym="VIM_INTVECTOR_101" offset="0x2194" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_102" acronym="VIM_INTVECTOR_102" offset="0x2198" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_103" acronym="VIM_INTVECTOR_103" offset="0x219C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_104" acronym="VIM_INTVECTOR_104" offset="0x21A0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_105" acronym="VIM_INTVECTOR_105" offset="0x21A4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_106" acronym="VIM_INTVECTOR_106" offset="0x21A8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_107" acronym="VIM_INTVECTOR_107" offset="0x21AC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_108" acronym="VIM_INTVECTOR_108" offset="0x21B0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_109" acronym="VIM_INTVECTOR_109" offset="0x21B4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_110" acronym="VIM_INTVECTOR_110" offset="0x21B8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_111" acronym="VIM_INTVECTOR_111" offset="0x21BC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_112" acronym="VIM_INTVECTOR_112" offset="0x21C0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_113" acronym="VIM_INTVECTOR_113" offset="0x21C4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_114" acronym="VIM_INTVECTOR_114" offset="0x21C8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_115" acronym="VIM_INTVECTOR_115" offset="0x21CC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_116" acronym="VIM_INTVECTOR_116" offset="0x21D0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_117" acronym="VIM_INTVECTOR_117" offset="0x21D4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_118" acronym="VIM_INTVECTOR_118" offset="0x21D8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_119" acronym="VIM_INTVECTOR_119" offset="0x21DC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_120" acronym="VIM_INTVECTOR_120" offset="0x21E0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_121" acronym="VIM_INTVECTOR_121" offset="0x21E4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_122" acronym="VIM_INTVECTOR_122" offset="0x21E8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_123" acronym="VIM_INTVECTOR_123" offset="0x21EC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_124" acronym="VIM_INTVECTOR_124" offset="0x21F0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_125" acronym="VIM_INTVECTOR_125" offset="0x21F4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_126" acronym="VIM_INTVECTOR_126" offset="0x21F8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_127" acronym="VIM_INTVECTOR_127" offset="0x21FC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_128" acronym="VIM_INTVECTOR_128" offset="0x2200" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_129" acronym="VIM_INTVECTOR_129" offset="0x2204" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_130" acronym="VIM_INTVECTOR_130" offset="0x2208" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_131" acronym="VIM_INTVECTOR_131" offset="0x220C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_132" acronym="VIM_INTVECTOR_132" offset="0x2210" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_133" acronym="VIM_INTVECTOR_133" offset="0x2214" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_134" acronym="VIM_INTVECTOR_134" offset="0x2218" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_135" acronym="VIM_INTVECTOR_135" offset="0x221C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_136" acronym="VIM_INTVECTOR_136" offset="0x2220" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_137" acronym="VIM_INTVECTOR_137" offset="0x2224" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_138" acronym="VIM_INTVECTOR_138" offset="0x2228" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_139" acronym="VIM_INTVECTOR_139" offset="0x222C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_140" acronym="VIM_INTVECTOR_140" offset="0x2230" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_141" acronym="VIM_INTVECTOR_141" offset="0x2234" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_142" acronym="VIM_INTVECTOR_142" offset="0x2238" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_143" acronym="VIM_INTVECTOR_143" offset="0x223C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_144" acronym="VIM_INTVECTOR_144" offset="0x2240" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_145" acronym="VIM_INTVECTOR_145" offset="0x2244" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_146" acronym="VIM_INTVECTOR_146" offset="0x2248" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_147" acronym="VIM_INTVECTOR_147" offset="0x224C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_148" acronym="VIM_INTVECTOR_148" offset="0x2250" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_149" acronym="VIM_INTVECTOR_149" offset="0x2254" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_150" acronym="VIM_INTVECTOR_150" offset="0x2258" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_151" acronym="VIM_INTVECTOR_151" offset="0x225C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_152" acronym="VIM_INTVECTOR_152" offset="0x2260" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_153" acronym="VIM_INTVECTOR_153" offset="0x2264" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_154" acronym="VIM_INTVECTOR_154" offset="0x2268" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_155" acronym="VIM_INTVECTOR_155" offset="0x226C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_156" acronym="VIM_INTVECTOR_156" offset="0x2270" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_157" acronym="VIM_INTVECTOR_157" offset="0x2274" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_158" acronym="VIM_INTVECTOR_158" offset="0x2278" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_159" acronym="VIM_INTVECTOR_159" offset="0x227C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_160" acronym="VIM_INTVECTOR_160" offset="0x2280" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_161" acronym="VIM_INTVECTOR_161" offset="0x2284" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_162" acronym="VIM_INTVECTOR_162" offset="0x2288" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_163" acronym="VIM_INTVECTOR_163" offset="0x228C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_164" acronym="VIM_INTVECTOR_164" offset="0x2290" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_165" acronym="VIM_INTVECTOR_165" offset="0x2294" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_166" acronym="VIM_INTVECTOR_166" offset="0x2298" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_167" acronym="VIM_INTVECTOR_167" offset="0x229C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_168" acronym="VIM_INTVECTOR_168" offset="0x22A0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_169" acronym="VIM_INTVECTOR_169" offset="0x22A4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_170" acronym="VIM_INTVECTOR_170" offset="0x22A8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_171" acronym="VIM_INTVECTOR_171" offset="0x22AC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_172" acronym="VIM_INTVECTOR_172" offset="0x22B0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_173" acronym="VIM_INTVECTOR_173" offset="0x22B4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_174" acronym="VIM_INTVECTOR_174" offset="0x22B8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_175" acronym="VIM_INTVECTOR_175" offset="0x22BC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_176" acronym="VIM_INTVECTOR_176" offset="0x22C0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_177" acronym="VIM_INTVECTOR_177" offset="0x22C4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_178" acronym="VIM_INTVECTOR_178" offset="0x22C8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_179" acronym="VIM_INTVECTOR_179" offset="0x22CC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_180" acronym="VIM_INTVECTOR_180" offset="0x22D0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_181" acronym="VIM_INTVECTOR_181" offset="0x22D4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_182" acronym="VIM_INTVECTOR_182" offset="0x22D8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_183" acronym="VIM_INTVECTOR_183" offset="0x22DC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_184" acronym="VIM_INTVECTOR_184" offset="0x22E0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_185" acronym="VIM_INTVECTOR_185" offset="0x22E4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_186" acronym="VIM_INTVECTOR_186" offset="0x22E8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_187" acronym="VIM_INTVECTOR_187" offset="0x22EC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_188" acronym="VIM_INTVECTOR_188" offset="0x22F0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_189" acronym="VIM_INTVECTOR_189" offset="0x22F4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_190" acronym="VIM_INTVECTOR_190" offset="0x22F8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_191" acronym="VIM_INTVECTOR_191" offset="0x22FC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_192" acronym="VIM_INTVECTOR_192" offset="0x2300" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_193" acronym="VIM_INTVECTOR_193" offset="0x2304" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_194" acronym="VIM_INTVECTOR_194" offset="0x2308" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_195" acronym="VIM_INTVECTOR_195" offset="0x230C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_196" acronym="VIM_INTVECTOR_196" offset="0x2310" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_197" acronym="VIM_INTVECTOR_197" offset="0x2314" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_198" acronym="VIM_INTVECTOR_198" offset="0x2318" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_199" acronym="VIM_INTVECTOR_199" offset="0x231C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_200" acronym="VIM_INTVECTOR_200" offset="0x2320" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_201" acronym="VIM_INTVECTOR_201" offset="0x2324" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_202" acronym="VIM_INTVECTOR_202" offset="0x2328" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_203" acronym="VIM_INTVECTOR_203" offset="0x232C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_204" acronym="VIM_INTVECTOR_204" offset="0x2330" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_205" acronym="VIM_INTVECTOR_205" offset="0x2334" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_206" acronym="VIM_INTVECTOR_206" offset="0x2338" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_207" acronym="VIM_INTVECTOR_207" offset="0x233C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_208" acronym="VIM_INTVECTOR_208" offset="0x2340" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_209" acronym="VIM_INTVECTOR_209" offset="0x2344" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_210" acronym="VIM_INTVECTOR_210" offset="0x2348" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_211" acronym="VIM_INTVECTOR_211" offset="0x234C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_212" acronym="VIM_INTVECTOR_212" offset="0x2350" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_213" acronym="VIM_INTVECTOR_213" offset="0x2354" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_214" acronym="VIM_INTVECTOR_214" offset="0x2358" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_215" acronym="VIM_INTVECTOR_215" offset="0x235C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_216" acronym="VIM_INTVECTOR_216" offset="0x2360" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_217" acronym="VIM_INTVECTOR_217" offset="0x2364" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_218" acronym="VIM_INTVECTOR_218" offset="0x2368" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_219" acronym="VIM_INTVECTOR_219" offset="0x236C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_220" acronym="VIM_INTVECTOR_220" offset="0x2370" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_221" acronym="VIM_INTVECTOR_221" offset="0x2374" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_222" acronym="VIM_INTVECTOR_222" offset="0x2378" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_223" acronym="VIM_INTVECTOR_223" offset="0x237C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_224" acronym="VIM_INTVECTOR_224" offset="0x2380" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_225" acronym="VIM_INTVECTOR_225" offset="0x2384" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_226" acronym="VIM_INTVECTOR_226" offset="0x2388" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_227" acronym="VIM_INTVECTOR_227" offset="0x238C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_228" acronym="VIM_INTVECTOR_228" offset="0x2390" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_229" acronym="VIM_INTVECTOR_229" offset="0x2394" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_230" acronym="VIM_INTVECTOR_230" offset="0x2398" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_231" acronym="VIM_INTVECTOR_231" offset="0x239C" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_232" acronym="VIM_INTVECTOR_232" offset="0x23A0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_233" acronym="VIM_INTVECTOR_233" offset="0x23A4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_234" acronym="VIM_INTVECTOR_234" offset="0x23A8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_235" acronym="VIM_INTVECTOR_235" offset="0x23AC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_236" acronym="VIM_INTVECTOR_236" offset="0x23B0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_237" acronym="VIM_INTVECTOR_237" offset="0x23B4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_238" acronym="VIM_INTVECTOR_238" offset="0x23B8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_239" acronym="VIM_INTVECTOR_239" offset="0x23BC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_240" acronym="VIM_INTVECTOR_240" offset="0x23C0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_241" acronym="VIM_INTVECTOR_241" offset="0x23C4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_242" acronym="VIM_INTVECTOR_242" offset="0x23C8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_243" acronym="VIM_INTVECTOR_243" offset="0x23CC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_244" acronym="VIM_INTVECTOR_244" offset="0x23D0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_245" acronym="VIM_INTVECTOR_245" offset="0x23D4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_246" acronym="VIM_INTVECTOR_246" offset="0x23D8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_247" acronym="VIM_INTVECTOR_247" offset="0x23DC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_248" acronym="VIM_INTVECTOR_248" offset="0x23E0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_249" acronym="VIM_INTVECTOR_249" offset="0x23E4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_250" acronym="VIM_INTVECTOR_250" offset="0x23E8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_251" acronym="VIM_INTVECTOR_251" offset="0x23EC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_252" acronym="VIM_INTVECTOR_252" offset="0x23F0" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_253" acronym="VIM_INTVECTOR_253" offset="0x23F4" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_254" acronym="VIM_INTVECTOR_254" offset="0x23F8" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
	<register id="VIM_INTVECTOR_255" acronym="VIM_INTVECTOR_255" offset="0x23FC" width="32" description="">
		<bitfield id="ADDR" width="30" begin="31" end="2" resetval="0x0" description="This is the 32-bit Vector Address associated with interrupt Q.  It is the address that will be reflected in the IRQ Vector Address (Base Address + 0x18) or FIQ Vector Address (Base Address + 0x1C) and the VECADDR pin when interrupt Q is the active interrupt.Internally, these values are kept in a RAM.  The FIQ and IRQ state machines have priority access to this RAM.  Writes to this register will be piped internally, but further writes to the MMR interface may be stalled until this write has a chance to complete in the RAM.  The new Vector Address will not take effect until this write completes to the RAM.  In order to tell if this write has completed, software may read this register back.  That read will not be able to complete unless the write has landed.Reads to this register will stall the MMR interface until the read is able to be completed at the RAM." range="31 - 2" rwaccess="RW"/> 
		<bitfield id="RES20" width="2" begin="1" end="0" resetval="0x0" description="Reserved.  Read as 0.  The lower 2 bits of the 32-bit vector address are always 0.  Vector addresses must be 32-bit aligned." range="1 - 0" rwaccess="RO"/>
	</register>
</module>