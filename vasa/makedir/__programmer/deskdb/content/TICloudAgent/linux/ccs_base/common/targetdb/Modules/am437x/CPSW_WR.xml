<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="CPSW_WR" id="CPSW_WR">
  
  
  <register acronym="CPSW_WR_IDVER" description="SUBSYSTEM ID VERSION REGISTER" id="CPSW_WR_IDVER" offset="0x0" width="32">
    
  <bitfield begin="31" description=" Scheme value" end="30" id="SCHEME" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description=" " end="28" id="RESERVED_1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="27" description=" function value" end="16" id="FUNCTION" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="15" description=" rtl version" end="11" id="RTL" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description=" major version" end="8" id="MAJOR" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description=" custom version" end="6" id="CUSTOM" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description=" minor version" end="0" id="MINOR" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_SOFT_RESET" description="SUBSYSTEM SOFT RESET REGISTER" id="CPSW_WR_SOFT_RESET" offset="0x4" width="32">
    
  <bitfield begin="31" description=" " end="1" id="RESERVED_1" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description=" Software reset - Writing a one to this bit causes the CPGMACSS_R logic to be reset (INT, REGS, CPPI). [[br]]Software reset occurs on the clock following the register bit write. [[br]]" end="0" id="SOFT_RESET" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_CTRL" description="SUBSYSTEM CONTROL REGISTER" id="CPSW_WR_CTRL" offset="0x8" width="32">
    
  <bitfield begin="31" description=" " end="4" id="RESERVED_1" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description=" Configuration of the local initiator state management mode. [[br]]By definition, initiator may generate read/write transaction as long as it is out of STANDBY state. [[br]] " end="2" id="MMR_STDBYMODE" rwaccess="RW" width="2">
    <bitenum description="Reserved : Reserved." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Reserved : Reserved." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="No-standby mode : Local initiator is unconditionally placed out of standby state." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Force-standby mode : Local initiator is unconditionally placed in standbystate." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Configuration of the local initiator state management mode. [[br]]By definition, initiator may generate read/write transaction as long as it is out of IDLE state. [[br]] " end="0" id="MMR_IDLEMODE" rwaccess="RW" width="2">
    <bitenum description="Reserved : Reserved." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Reserved : Reserved." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="No-idle mode : Local initiator is unconditionally placed out of idle state." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Force-idle mode : Local initiator is unconditionally placed in idle state." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_INT_CTRL" description="SUBSYSTEM INTERRUPT CONTROL" id="CPSW_WR_INT_CTRL" offset="0xC" width="32">
    
  <bitfield begin="31" description=" Interrupt Test - Test bit to the interrupt pacing blocks" end="31" id="INT_TEST" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description=" " end="22" id="RESERVED_1" rwaccess="R" width="9"></bitfield>
    
  <bitfield begin="21" description=" ARRAY(0x1b8eec0)" end="16" id="INT_PACE_EN" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="15" description=" " end="12" id="RESERVED_2" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="11" description=" Interrupt Counter Prescaler - The number of MAIN_CLK periods in 4us." end="0" id="INT_PRESCALE" rwaccess="R" width="12"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C0_RX_THRESH_EN" description="SUBSYSTEM CORE 0 RECEIVE THRESHOLD INT ENABLE REGISTER" id="CPSW_WR_C0_RX_THRESH_EN" offset="0x10" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 0 Receive Threshold Enable - Each bit in this register corresponds to the bit in the receive threshold interrupt that is enabled to generate an interrupt on C0_RX_THRESH_PULSE. [[br]]" end="0" id="C0_RX_THRESH_EN" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C0_RX_EN" description="SUBSYSTEM CORE 0 RECEIVE INTERRUPT ENABLE REGISTER" id="CPSW_WR_C0_RX_EN" offset="0x14" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 0 Receive Enable - Each bit in this register corresponds to the bit in the rx interrupt that is enabled to generate an interrupt on C0_RX_PULSE. [[br]]" end="0" id="C0_RX_EN" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C0_TX_EN" description="SUBSYSTEM CORE 0 TRANSMIT INTERRUPT ENABLE REGISTER" id="CPSW_WR_C0_TX_EN" offset="0x18" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 0 Transmit Enable - Each bit in this register corresponds to the bit in the tx interrupt that is enabled to generate an interrupt on C0_TX_PULSE. [[br]]" end="0" id="C0_TX_EN" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C0_MISC_EN" description="SUBSYSTEM CORE 0 MISC INTERRUPT ENABLE REGISTER" id="CPSW_WR_C0_MISC_EN" offset="0x1C" width="32">
    
  <bitfield begin="31" description=" " end="5" id="RESERVED_1" rwaccess="R" width="27"></bitfield>
    
  <bitfield begin="4" description=" Core 0 Misc Enable - Each bit in this register corresponds to the miscellaneous interrupt (evnt_pend, stat_pend, host_pend, mdio_linkint, mdio_userint) that is enabled to generate an interrupt on C0_Misc_PULSE. [[br]]" end="0" id="C0_MISC_EN" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C1_RX_THRESH_EN" description="SUBSYSTEM CORE 1 RECEIVE THRESHOLD INT ENABLE REGISTER" id="CPSW_WR_C1_RX_THRESH_EN" offset="0x20" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 1 Receive Threshold Enable - Each bit in this register corresponds to the bit in the receive threshold interrupt that is enabled to generate an interrupt on C1_RX_THRESH_PULSE. [[br]]" end="0" id="C1_RX_THRESH_EN" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C1_RX_EN" description="SUBSYSTEM CORE 1 RECEIVE INTERRUPT ENABLE REGISTER" id="CPSW_WR_C1_RX_EN" offset="0x24" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 1 Receive Enable - Each bit in this register corresponds to the bit in the rx interrupt that is enabled to generate an interrupt on C1_RX_PULSE. [[br]]" end="0" id="C1_RX_EN" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C1_TX_EN" description="SUBSYSTEM CORE 1 TRANSMIT INTERRUPT ENABLE REGISTER" id="CPSW_WR_C1_TX_EN" offset="0x28" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 1 Transmit Enable - Each bit in this register corresponds to the bit in the tx interrupt that is enabled to generate an interrupt on C1_TX_PULSE. [[br]]" end="0" id="C1_TX_EN" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C1_MISC_EN" description="SUBSYSTEM CORE 1 MISC INTERRUPT ENABLE REGISTER" id="CPSW_WR_C1_MISC_EN" offset="0x2C" width="32">
    
  <bitfield begin="31" description=" " end="5" id="RESERVED_1" rwaccess="R" width="27"></bitfield>
    
  <bitfield begin="4" description=" Core 1 Misc Enable - Each bit in this register corresponds to the miscellaneous interrupt (evnt_pend, stat_pend, host_pend, mdio_linkint, mdio_userint) that is enabled to generate an interrupt on C1_Misc_PULSE. [[br]]" end="0" id="C1_MISC_EN" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C2_RX_THRESH_EN" description="SUBSYSTEM CORE 2 RECEIVE THRESHOLD INT ENABLE REGISTER" id="CPSW_WR_C2_RX_THRESH_EN" offset="0x30" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 2 Receive Threshold Enable - Each bit in this register corresponds to the bit in the receive threshold interrupt that is enabled to generate an interrupt on C2_RX_THRESH_PULSE. [[br]]" end="0" id="C2_RX_THRESH_EN" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C2_RX_EN" description="SUBSYSTEM CORE 2 RECEIVE INTERRUPT ENABLE REGISTER" id="CPSW_WR_C2_RX_EN" offset="0x34" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 2 Receive Enable - Each bit in this register corresponds to the bit in the rx interrupt that is enabled to generate an interrupt on C2_RX_PULSE. [[br]]" end="0" id="C2_RX_EN" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C2_TX_EN" description="SUBSYSTEM CORE 2 TRANSMIT INTERRUPT ENABLE REGISTER" id="CPSW_WR_C2_TX_EN" offset="0x38" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 2 Transmit Enable - Each bit in this register corresponds to the bit in the tx interrupt that is enabled to generate an interrupt on C2_TX_PULSE. [[br]]" end="0" id="C2_TX_EN" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C2_MISC_EN" description="SUBSYSTEM CORE 2 MISC INTERRUPT ENABLE REGISTER" id="CPSW_WR_C2_MISC_EN" offset="0x3C" width="32">
    
  <bitfield begin="31" description=" " end="5" id="RESERVED_1" rwaccess="R" width="27"></bitfield>
    
  <bitfield begin="4" description=" Core 2 Misc Enable - Each bit in this register corresponds to the miscellaneous interrupt (evnt_pend, stat_pend, host_pend, mdio_linkint, mdio_userint) that is enabled to generate an interrupt on C2_Misc_PULSE. [[br]]" end="0" id="C2_MISC_EN" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C0_RX_THRESH_STAT" description="SUBSYSTEM CORE 0 RX THRESHOLD MASKED INT STATUS REGISTER" id="CPSW_WR_C0_RX_THRESH_STAT" offset="0x40" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 0 Receive Threshold Masked Interrupt Status - Each bit in this read only register corresponds to the bit in the receive threshold interrupt that is enabled and generating an interrupt on C0_RX_THRESH_PULSE. [[br]]" end="0" id="C0_RX_THRESH_STAT" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C0_RX_STAT" description="SUBSYSTEM CORE 0 RX INTERRUPT MASKED INT STATUS REGISTER" id="CPSW_WR_C0_RX_STAT" offset="0x44" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 0 Receive Masked Interrupt Status - Each bit in this read only register corresponds to the bit in the Rx interrupt that is enabled and generating an interrupt on C0_RX_PULSE. [[br]]" end="0" id="C0_RX_STAT" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C0_TX_STAT" description="SUBSYSTEM CORE 0 TX INTERRUPT MASKED INT STATUS REGISTER" id="CPSW_WR_C0_TX_STAT" offset="0x48" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 0 Transmit Masked Interrupt Status - Each bit in this read only register corresponds to the bit in the Tx interrupt that is enabled and generating an interrupt on C0_TX_PULSE . [[br]]" end="0" id="C0_TX_STAT" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C0_MISC_STAT" description="SUBSYSTEM CORE 0 MISC INTERRUPT MASKED INT STATUS REGISTER" id="CPSW_WR_C0_MISC_STAT" offset="0x4C" width="32">
    
  <bitfield begin="31" description=" " end="7" id="RESERVED_1" rwaccess="R" width="25"></bitfield>
    
  <bitfield begin="6" description=" Core 0 Misc Masked Interrupt Status - Each bit in this register corresponds to the miscellaneous interrupt (evnt_pend, stat_pend, host_pend, mdio_linkint, mdio_userint) that is enabled and generating an interrupt on C0_MISC_PULSE . [[br]]" end="0" id="C0_MISC_STAT" rwaccess="R" width="7"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C1_RX_THRESH_STAT" description="SUBSYSTEM CORE 1 RX THRESHOLD MASKED INT STATUS REGISTER" id="CPSW_WR_C1_RX_THRESH_STAT" offset="0x50" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 1 Receive Threshold Masked Interrupt Status - Each bit in this register corresponds to the bit in the receive threshold interrupt that is enabled and generating an interrupt on C1_RX_THRESH_PULSE. [[br]]" end="0" id="C1_RX_THRESH_STAT" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C1_RX_STAT" description="SUBSYSTEM CORE 1 RECEIVE MASKED INTERRUPT STATUS REGISTER" id="CPSW_WR_C1_RX_STAT" offset="0x54" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 1 Receive Masked Interrupt Status - Each bit in this register corresponds to the bit in the Rx interrupt that is enabled and generating an interrupt on C1_RX_PULSE. [[br]]" end="0" id="C1_RX_STAT" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C1_TX_STAT" description="SUBSYSTEM CORE 1 TRANSMIT MASKED INTERRUPT STATUS REGISTER" id="CPSW_WR_C1_TX_STAT" offset="0x58" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 1 Transmit Masked Interrupt Status - Each bit in this register corresponds to the bit in the Tx interrupt that is enabled and generating an interrupt on C1_TX_PULSE. [[br]]" end="0" id="C1_TX_STAT" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C1_MISC_STAT" description="SUBSYSTEM CORE 1 MISC MASKED INTERRUPT STATUS REGISTER" id="CPSW_WR_C1_MISC_STAT" offset="0x5C" width="32">
    
  <bitfield begin="31" description=" " end="7" id="RESERVED_1" rwaccess="R" width="25"></bitfield>
    
  <bitfield begin="6" description=" Core 1 Misc Masked Interrupt Status - Each bit in this register corresponds to the miscellaneous interrupt (evnt_pend, stat_pend, host_pend, mdio_linkint, mdio_userint) that is enabled and generating an interrupt on C1_MISC_PULSE . [[br]]" end="0" id="C1_MISC_STAT" rwaccess="R" width="7"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C2_RX_THRESH_STAT" description="SUBSYSTEM CORE 2 RX THRESHOLD MASKED INT STATUS REGISTER" id="CPSW_WR_C2_RX_THRESH_STAT" offset="0x60" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 2 Receive Threshold Masked Interrupt Status - Each bit in this register corresponds to the bit in the receive threshold interrupt that is enabled and generating an interrupt on C2_RX_THRESH_PULSE. [[br]]" end="0" id="C2_RX_THRESH_STAT" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C2_RX_STAT" description="SUBSYSTEM CORE 2 RECEIVE MASKED INTERRUPT STATUS REGISTER" id="CPSW_WR_C2_RX_STAT" offset="0x64" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 2 Receive Masked Interrupt Status - Each bit in this register corresponds to the bit in the Rx interrupt that is enabled and generating an interrupt on C2_RX_PULSE. [[br]]" end="0" id="C2_RX_STAT" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C2_TX_STAT" description="SUBSYSTEM CORE 2 TRANSMIT MASKED INTERRUPT STATUS REGISTER" id="CPSW_WR_C2_TX_STAT" offset="0x68" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Core 2 Transmit Masked Interrupt Status - Each bit in this register corresponds to the bit in the Tx interrupt that is enabled and generating an interrupt on C2_TX_PULSE. [[br]]" end="0" id="C2_TX_STAT" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C2_MISC_STAT" description="SUBSYSTEM CORE 2 MISC MASKED INTERRUPT STATUS REGISTER" id="CPSW_WR_C2_MISC_STAT" offset="0x6C" width="32">
    
  <bitfield begin="31" description=" " end="7" id="RESERVED_1" rwaccess="R" width="25"></bitfield>
    
  <bitfield begin="6" description=" Core 2 Misc Masked Interrupt Status - Each bit in this register corresponds to the miscellaneous interrupt (evnt_pend, stat_pend, host_pend, mdio_linkint, mdio_userint) that is enabled and generating an interrupt on C2_MISC_PULSE . [[br]]" end="0" id="C2_MISC_STAT" rwaccess="R" width="7"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C0_RX_IMAX" description="SUBSYSTEM CORE 0 RECEIVE INTERRUPTS PER MILLISECOND" id="CPSW_WR_C0_RX_IMAX" offset="0x70" width="32">
    
  <bitfield begin="31" description=" " end="6" id="RESERVED_1" rwaccess="R" width="26"></bitfield>
    
  <bitfield begin="5" description=" Core 0 Receive Interrupts per Millisecond - The maximum number of interrupts per millisecond generated on C0_RX_PULSE if pacing is enabled for this interrupt. [[br]]" end="0" id="C0_RX_IMAX" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C0_TX_IMAX" description="SUBSYSTEM CORE 0 TRANSMIT INTERRUPTS PER MILLISECOND" id="CPSW_WR_C0_TX_IMAX" offset="0x74" width="32">
    
  <bitfield begin="31" description=" " end="6" id="RESERVED_1" rwaccess="R" width="26"></bitfield>
    
  <bitfield begin="5" description=" Core 0 Transmit Interrupts per Millisecond - The maximum number of interrupts per millisecond generated on C0_TX_PULSE if pacing is enabled for this interrupt. [[br]]" end="0" id="C0_TX_IMAX" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C1_RX_IMAX" description="SUBSYSTEM CORE 1 RECEIVE INTERRUPTS PER MILLISECOND" id="CPSW_WR_C1_RX_IMAX" offset="0x78" width="32">
    
  <bitfield begin="31" description=" " end="6" id="RESERVED_1" rwaccess="R" width="26"></bitfield>
    
  <bitfield begin="5" description=" Core 1 Receive Interrupts per Millisecond - The maximum number of interrupts per millisecond generated on C1_RX_PULSE if pacing is enabled for this interrupt. [[br]]" end="0" id="C1_RX_IMAX" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C1_TX_IMAX" description="SUBSYSTEM CORE 1 TRANSMIT INTERRUPTS PER MILLISECOND" id="CPSW_WR_C1_TX_IMAX" offset="0x7C" width="32">
    
  <bitfield begin="31" description=" " end="6" id="RESERVED_1" rwaccess="R" width="26"></bitfield>
    
  <bitfield begin="5" description=" Core 1 Transmit Interrupts per Millisecond - The maximum number of interrupts per millisecond generated on C1_TX_PULSE if pacing is enabled for this interrupt. [[br]]" end="0" id="C1_TX_IMAX" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C2_RX_IMAX" description="SUBSYSTEM CORE 2 RECEIVE INTERRUPTS PER MILLISECOND" id="CPSW_WR_C2_RX_IMAX" offset="0x80" width="32">
    
  <bitfield begin="31" description=" " end="6" id="RESERVED_1" rwaccess="R" width="26"></bitfield>
    
  <bitfield begin="5" description=" Core 2 Receive Interrupts per Millisecond - The maximum number of interrupts per millisecond generated on C2_RX_PULSE if pacing is enabled for this interrupt. [[br]]" end="0" id="C2_RX_IMAX" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_C2_TX_IMAX" description="SUBSYSTEM CORE 2 TRANSMIT INTERRUPTS PER MILLISECOND" id="CPSW_WR_C2_TX_IMAX" offset="0x84" width="32">
    
  <bitfield begin="31" description=" " end="6" id="RESERVED_1" rwaccess="R" width="26"></bitfield>
    
  <bitfield begin="5" description=" Core 2 Transmit Interrupts per Millisecond - The maximum number of interrupts per millisecond generated on C2_TX_PULSE if pacing is enabled for this interrupt. [[br]]" end="0" id="C2_TX_IMAX" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="CPSW_WR_RGMII_CTL" description="RGMII CONTROL SIGNAL REGISTER" id="CPSW_WR_RGMII_CTL" offset="0x88" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" RGMII 2 Fullduplex - This is the CPRGMII fullduplex output signal. [[br]] " end="7" id="RGMII2_FULLDUPLEX" rwaccess="R" width="1">
    <bitenum description="Full-duplex mode" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Half-duplex mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" RGMII2 Speed - This is the CPRGMI speed output signal " end="5" id="RGMII2_SPEED" rwaccess="R" width="2">
    <bitenum description="Reserved" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="1000Mbps (gig) mode" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="100Mbps mode" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="10Mbps mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" RGMII2 Link Indicator - This is the CPRGMII link output signal " end="4" id="RGMII2_LINK" rwaccess="R" width="1">
    <bitenum description="RGMII2 link is up" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="RGMII2 link is down" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" RGMII1 Fullduplex - This is the CPRGMII fullduplex output signal." end="3" id="RGMII1_FULLDUPLEX" rwaccess="R" width="1">
    <bitenum description="Full-duplex mode" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Half-duplex mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" RGMII1 Speed - This is the CPRGMII speed output signal" end="1" id="RGMII1_SPEED" rwaccess="R" width="2">
    <bitenum description="Reserved" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="1000Mbps (gig) mode" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="100Mbps mode" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="10Mbps mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" RGMII1 Link Indicator - This is the CPRGMII link output signal " end="0" id="RGMII1_LINK" rwaccess="R" width="1">
    <bitenum description="RGMII1 link is up" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="RGMII1 link is down" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
</module>
