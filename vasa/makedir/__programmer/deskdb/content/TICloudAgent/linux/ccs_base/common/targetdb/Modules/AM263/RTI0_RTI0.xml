<module name="RTI0_RTI0" acronym="" XML_version="1.0" HW_revision="n/a" description="">
	<register id="RTI0_RTIGCTRL" acronym="RTI0_RTIGCTRL" offset="0x0" width="32" description="">
		<bitfield id="RESERVED2" width="12" begin="31" end="20" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 20" rwaccess="RW"/> 
		<bitfield id="NTUSEL" width="4" begin="19" end="16" resetval="0x0" description="NTUSEL: Select NTU signal.These bits determine which NTU input signal is used as external timebase. There are up to four inputs supported with four valid selection combinations. Any invalid selection value written to the NTUSEL bit-field will result in a TIED LOW being used as the NTU signal. The NTU signal will also be TIED LOW in case of a single-bit flip as it will result in an invalid combination of NTUSEL.User and privilege mode (read):0000 = NTU00101 = NTU11010 = NTU21111 = NTU3other = tied to ?0?Privilege mode (write):0000 = NTU00101 = NTU11010 = NTU21111 = NTU3other = tied to ?0?" range="19 - 16" rwaccess="RW"/> 
		<bitfield id="COS" width="1" begin="15" end="15" resetval="0x0" description="COS: Continue On Suspend.This bit determines if both counters are stopped when the device goes into debug mode or if they continue counting.User and privilege mode (read):0 = counters are stopped while in debug mode1 = counters are running while in debug modePrivilege mode (write):0 = stop counters in debug mode1 = continue counting in debug mode" range="15" rwaccess="RW"/> 
		<bitfield id="RESERVED1" width="13" begin="14" end="2" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="14 - 2" rwaccess="RW"/> 
		<bitfield id="CNT1EN" width="1" begin="1" end="1" resetval="0x0" description="CNT1EN: Counter 1 Enable. The CNT1EN bit starts and stops the operation of counter block 1 (UC1 and FRC1).User and privilege mode (read):0 = counters are stopped1 = counters are runningPrivilege mode (write):0 = stop counters1 = start countersGives the absolute 32 bit destination address (physical)." range="1" rwaccess="RW"/> 
		<bitfield id="CNT0EN" width="1" begin="0" end="0" resetval="0x0" description="CNT0EN: Counter 0 Enable.The CNT0EN bit starts and stops the operation of counter block 0 (UC0 and FRC0).User and privilege mode (read):0 = counters are stopped1 = counters are runningPrivilege mode (write):0 = stop counters1 = start countersGives the absolute 32 bits source address (physical)." range="0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTITBCTRL" acronym="RTI0_RTITBCTRL" offset="0x4" width="32" description="">
		<bitfield id="INC" width="1" begin="1" end="1" resetval="0x0" description="INC: Increment Free Running Counter 0.This bit determines wether the Free Running Counter 0 is automatically incremented if a failing clock on the NTUx signal is detected.User and privilege mode (read):0 = FRC0 will not be incremented1 = FRC0 will be incrementedPrivilege mode (write):0 = Do not increment FRC0 on failing external clock1 = Increment FRC0 on failing external clock" range="1" rwaccess="RW"/> 
		<bitfield id="TBEXT" width="1" begin="0" end="0" resetval="0x0" description="TBEXT: Timebase External.The Timebase External bit selects whether the Free Running Counter 0 is clocked by the internal Up Counter 0 or from the external signal NTUx. Since setting the TBEXT bit to 1 resets Up Counter 0, Free Running Counter 0 will not be incremented in this occurence. The only source which is able to increment Free Running Counter 0 is NTUx.When the Timebase Supervisor circuit detects a missing clockedge, then the TBEXT bit is reset.The selection if the external signal should be used, can only be done by software.User and privilege mode (read):0 = UC0 clocks FRC01 = NTUx clocks FRC0Privilege mode (write):0 = MUX is switched to internal UC0 clocking scheme1 = MUX is switched to external NTUx clocking scheme" range="0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICAPCTRL" acronym="RTI0_RTICAPCTRL" offset="0x8" width="32" description="">
		<bitfield id="RESERVED4" width="30" begin="31" end="2" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 2" rwaccess="RW"/> 
		<bitfield id="CAPCNTR1" width="1" begin="1" end="1" resetval="0x0" description="CAPCNTR1: Capture Counter 1.This bit determines, which external interrupt source triggers a capture event of both UC1 and FRC1.User and privilege mode (read):0 = capture event is triggered by Capture Event Source 01 = capture event is triggered by Capture Event Source 1Privilege mode (write):0 = enable capture event triggered by Capture Event Source 01 = enable capture event triggered by Capture Event Source 1" range="1" rwaccess="RW"/> 
		<bitfield id="CAPCNTR0" width="1" begin="0" end="0" resetval="0x0" description="CAPCNTR0: Capture Counter 0.This bit determines, which external interrupt source triggers a capture event of both UC0 and FRC0.User and privilege mode (read):0 = capture event is triggered by Capture Event Source 01 = capture event is triggered by Capture Event Source 1Privilege mode (write):0 = enable capture event triggered by Capture Event Source 01 = enable capture event triggered by Capture Event Source 111 indexed10 reserved01 post-increment00 constant" range="0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICOMPCTRL" acronym="RTI0_RTICOMPCTRL" offset="0xC" width="32" description="">
		<bitfield id="RESERVED8" width="19" begin="31" end="13" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 13" rwaccess="RW"/> 
		<bitfield id="COMP3SEL" width="1" begin="12" end="12" resetval="0x0" description="COMPSEL3: Compare Select 3.This bit determines the counter with which the compare value hold in compare register 3 is compared.User and privilege mode (read):0 = value will be compared with FRC 01 = value will be compared with FRC 1Privilege mode (write):0 = enable compare with FRC 01 = enable compare with FRC 1" range="12" rwaccess="RW"/> 
		<bitfield id="RESERVED7" width="3" begin="11" end="9" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="11 - 9" rwaccess="RW"/> 
		<bitfield id="COMP2SEL" width="1" begin="8" end="8" resetval="0x0" description="COMPSEL2: Compare Select 2.This bit determines the counter with which the compare value hold in compare register 2 is compared.User and privilege mode (read):0 = value will be compared with FRC 01 = value will be compared with FRC 1Privilege mode (write):0 = enable compare with FRC 01 = enable compare with FRC 1" range="8" rwaccess="RW"/> 
		<bitfield id="RESERVED6" width="3" begin="7" end="5" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="7 - 5" rwaccess="RW"/> 
		<bitfield id="COMP1SEL" width="1" begin="4" end="4" resetval="0x0" description="COMPSEL1: Compare Select 1.This bit determines the counter with which the compare value hold in compare register 1 is compared. User and privilege mode (read):0 = value will be compared with FRC 01 = value will be compared with FRC 1Privilege mode (write):0 = enable compare with FRC 01 = enable compare with FRC 1" range="4" rwaccess="RW"/> 
		<bitfield id="RESERVED5" width="3" begin="3" end="1" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="3 - 1" rwaccess="RW"/> 
		<bitfield id="COMP0SEL" width="1" begin="0" end="0" resetval="0x0" description="COMPSEL0: Compare Select 0.This bit determines the counter with which the compare value hold in compare register 0 is compared.User and privilege mode (read):0 = value will be compared with FRC 01 = value will be compared with FRC 1Privilege mode (write):0 = enable compare with FRC 01 = enable compare with FRC 1" range="0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIFRC0" acronym="RTI0_RTIFRC0" offset="0x10" width="32" description="">
		<bitfield id="FRC0" width="32" begin="31" end="0" resetval="0x0" description="FRC0: Free Running Counter 0.This registers holds the current value of the Free Running Counter 0 and will be updated continuously.User and privilege mode (read):current value of the counterPrivilege mode (write):The counter can be preset by writing to this register. The counter increments then from this written value upwards.Note: Presetting countersIf counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC0 and RTIFRC0." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIUC0" acronym="RTI0_RTIUC0" offset="0x14" width="32" description="">
		<bitfield id="UC0" width="32" begin="31" end="0" resetval="0x0" description="UC0: Up Counter 0.This registers holds the current value of the Up Counter 0 and prescales the RTI clock. It will be only updated by a previous read of Free Running Counter 0. This gives effectively a 64 bit read of both counters, without having the problem of a counter being updated between two consecutive reads on Up Counter 0 and Free Running Counter 0.User and privilege mode (read):value of the counter when the Free Running Counter 0 was readPrivilege mode (write):the counter can be preset by writing to this register. The counter increments then from this written value upwards.Note: Presetting countersIf counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC0 and RTIFRC0.Note: Preset value concernIf the preset value is bigger than the compare value stored in register RTICPUC0 then it can take a long time until a compare matches, since RTIUC0 has to count up until it overflows." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICPUC0" acronym="RTI0_RTICPUC0" offset="0x18" width="32" description="">
		<bitfield id="CPUC0" width="32" begin="31" end="0" resetval="0x0" description="This registers holds the compare value, which is compared with the Up Counter 0. When the compare matches, Free Running counter 0 is incremented. The Up Counter is set to zero when the counter value matches the CPUC0 value. The value set in this prescales the RTI clock.If CPUC0 = 0: then, frequency = RTICLK/ (2^32)If CPUC0 ? 0: then , frequency = RTICLK/(CPUC0 + 1)User and privilege mode (read):current compare valuePrivilege mode (write when TBEXT = 0):the compare value is updatedPrivilege mode (write when TBEXT = 1):the compare value is not changed" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICAFRC0" acronym="RTI0_RTICAFRC0" offset="0x20" width="32" description="">
		<bitfield id="CAFRC0" width="32" begin="31" end="0" resetval="0x0" description="CAFRC0: Capture Free Running Counter 0.This registers captures the current value of the Free Running Counter 0 when a event occurs, controlled by the external capture control block.User and privilege mode (read):value of Free Running Counter 0 on a capture event" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICAUC0" acronym="RTI0_RTICAUC0" offset="0x24" width="32" description="">
		<bitfield id="CAUC0" width="32" begin="31" end="0" resetval="0x0" description="CAUC0: Capture Up Counter 0.This registers captures the current value of the Up Counter 0 when a event occurs, controlled by the external capture control block. The read sequence has to be the same as with Up Counter 0 and Free Running Counter 0. So the RTICAFRC0 register has to be read first, before the RTICAUC0 register is read. This sequence ensures that the value of the RTICAUC0 register is the corresponding value to the RTICAFRC0 register, even if another capture event happens in between the two reads.User and privilege mode (read):value of Up Counter 0 on a capture event" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIFRC1" acronym="RTI0_RTIFRC1" offset="0x30" width="32" description="">
		<bitfield id="FRC1" width="32" begin="31" end="0" resetval="0x0" description="FRC1: Free Running Counter 1.This registers holds the current value of the Free Running Counter 1 and will be updated continuously.User and privilege mode (read):current value of the counterPrivilege mode (write):The counter can be preset by writing to this register. The counter increments then from this written value upwards.Note: Presetting countersIf counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC1 and RTIFRC1." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIUC1" acronym="RTI0_RTIUC1" offset="0x34" width="32" description="">
		<bitfield id="UC1" width="32" begin="31" end="0" resetval="0x0" description="UC1: Up Counter 1.This registers holds the current value of the Up Counter 1 and prescales the RTI clock. It will be only updated by a previous read of Free Running Counter 1. This gives effectively a 64 bit read of both counters, without having the problem of a counter being updated between two consecutive reads on Up Counter 1 and Free Running Counter 1.User and privilege mode (read):value of the counter when the Free Running Counter 1 was readPrivilege mode (write):the counter can be preset by writing to this register. The counter increments then from this written value upwards.Note: Presetting countersIf counters have to be preset, they have to be stopped from counting in the RTIGCTRL register in order to ensure consistency between RTIUC1 and RTIFRC1.Note: Preset value concernIf the preset value is bigger than the compare value stored in register RTICPUC1 then it can take a long time until a compare matches, since RTIUC1 has to count up until it overflows." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICPUC1" acronym="RTI0_RTICPUC1" offset="0x38" width="32" description="">
		<bitfield id="CPUC1" width="32" begin="31" end="0" resetval="0x0" description="This registers holds the compare value, which is compared with the Up Counter 1. When the compare matches, Free Running Counter 1 is incremented. The Up Counter is set to zero when the counter value matches the CPUC1 value. The value set in this prescales the RTI clock.If CPUC1 = 0: then, frequency = RTICLK/ (2^32)If CPUC1 ? 0: then , frequency = RTICLK/(CPUC1 + 1)User and privilege mode (read):current compare valuePrivilege mode (write when TBEXT = 0):the compare value is updatedPrivilege mode (write when TBEXT = 1):the compare value is not changed" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICAFRC1" acronym="RTI0_RTICAFRC1" offset="0x40" width="32" description="">
		<bitfield id="CAFRC1" width="32" begin="31" end="0" resetval="0x0" description="CAFRC1: Capture Free Running Counter 1.This registers captures the current value of the Free Running Counter 1 when a event occurs, controlled by the external capture control block.User and privilege mode (read):value of Free Running Counter 1 on a capture event" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICAUC1" acronym="RTI0_RTICAUC1" offset="0x44" width="32" description="">
		<bitfield id="CAUC1" width="32" begin="31" end="0" resetval="0x0" description="CAUC1: Capture Up Counter 1.This registers captures the current value of the Up Counter 1 when a event occurs, controlled by the external capture control block. The read sequence has to be the same as with Up Counter 1 and Free Running Counter 1. So the RTICAFRC1 register has to be read first, before the RTICAUC1 register is read. This sequence ensures that the value of the RTICAUC1 register is the corresponding value to the RTICAFRC1 register, even if another capture event happens in between the two reads.User and privilege mode (read):value of Up Counter 1 on a capture event" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICOMP0" acronym="RTI0_RTICOMP0" offset="0x50" width="32" description="">
		<bitfield id="COMP0" width="32" begin="31" end="0" resetval="0x0" description="COMP0: Compare 0.This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request.User and privilege mode (read):current compare valuePrivilege mode (write):update of the compare register with a new compare valueNote: Reset behaviorA reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIUDCP0" acronym="RTI0_RTIUDCP0" offset="0x54" width="32" description="">
		<bitfield id="UDCP0" width="32" begin="31" end="0" resetval="0x0" description="UDCP0: Update Compare 0 Register.This registers holds a value, which is added to the value in the compare 0 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention.User and privilege mode (read):value to be added to the compare 0 register on the next compare matchPrivilege mode (write):new update value" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICOMP1" acronym="RTI0_RTICOMP1" offset="0x58" width="32" description="">
		<bitfield id="COMP1" width="32" begin="31" end="0" resetval="0x0" description="COMP1: compare1.This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request.User and privilege mode (read):current compare valuePrivilege mode (write):update of the compare register with a new compare valueNote: Reset behaviorA reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIUDCP1" acronym="RTI0_RTIUDCP1" offset="0x5C" width="32" description="">
		<bitfield id="UDCP1" width="32" begin="31" end="0" resetval="0x0" description="UDCP1: Update compare1 Register.This registers holds a value, which is added to the value in the compare1 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention.User and privilege mode (read):value to be added to the compare1 register on the next compare matchPrivilege mode (write):new update value" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICOMP2" acronym="RTI0_RTICOMP2" offset="0x60" width="32" description="">
		<bitfield id="COMP2" width="32" begin="31" end="0" resetval="0x0" description="COMP2: compare 2.This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request.User and privilege mode (read):current compare valuePrivilege mode (write):update of the compare register with a new compare valueNote: Reset behaviorA reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIUDCP2" acronym="RTI0_RTIUDCP2" offset="0x64" width="32" description="">
		<bitfield id="UDCP2" width="32" begin="31" end="0" resetval="0x0" description="UDCP2: Update compare 2 Register.This registers holds a value, which is added to the value in the compare 2 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention.User and privilege mode (read):value to be added to the compare 2 register on the next compare matchPrivilege mode (write):new update value" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICOMP3" acronym="RTI0_RTICOMP3" offset="0x68" width="32" description="">
		<bitfield id="COMP3" width="32" begin="31" end="0" resetval="0x0" description="COMP3: compare 3.This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, an interrupt is flagged. With this register it is also possible to initiate a DMA request.User and privilege mode (read):current compare valuePrivilege mode (write):update of the compare register with a new compare valueNote: Reset behaviorA reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIUDCP3" acronym="RTI0_RTIUDCP3" offset="0x6C" width="32" description="">
		<bitfield id="UDCP3" width="32" begin="31" end="0" resetval="0x0" description="UDCP3: Update compare 3 Register.This registers holds a value, which is added to the value in the compare 3 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention.User and privilege mode (read):value to be added to the compare 3 register on the next compare matchPrivilege mode (write):new update value" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTITBLCOMP" acronym="RTI0_RTITBLCOMP" offset="0x70" width="32" description="">
		<bitfield id="TBLCOMP" width="32" begin="31" end="0" resetval="0x0" description="TBLCOMP: Timebase Low Compare Value.This value determines when the edge detection circuit starts monitoring the NTUx signal. It will be compared with Up Counter 0.User and privilege mode (read):current compare valuePrivilege mode (write when TBEXT = 0):the compare value is updatedPrivilege mode (write when TBEXT = 1):the compare value is not changedNote: Reset behaviorA reset does not generate a compare match." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTITBHCOMP" acronym="RTI0_RTITBHCOMP" offset="0x74" width="32" description="">
		<bitfield id="TBHCOMP" width="32" begin="31" end="0" resetval="0x0" description="TBHCOMP: Timebase High Compare Value.This value determines when the edge detection circuit will stop monitoring the NTUx signal. It will be compared with Up Counter 0.RTITBHCOMP has to be less than RTICPUC0, since RTIUC0 will be reset when RTICPUC0 is reached.Example:The NTUx edge detection circuit should be active +/- 10 RTICLK cycles around RTICPUC0.RTICPUC0 = 0x00000050RTITBLCOMP = 0x000046RTITBHCOMP = 0x00000009User and privilege mode (read):current compare valuePrivilege mode (write when TBEXT = 0):the compare value is updatedPrivilege mode (write when TBEXT = 1):the compare value is not changedNote: Reset behaviorA reset does not generate a compare match." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTISETINT" acronym="RTI0_RTISETINT" offset="0x80" width="32" description="">
		<bitfield id="RESERVED11" width="13" begin="31" end="19" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 19" rwaccess="RW"/> 
		<bitfield id="SETOVL1INT" width="1" begin="18" end="18" resetval="0x0" description="SETOVL1INT: Set Free Running Counter 1 Overflow Interrupt.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = enable interrupt" range="18" rwaccess="RW"/> 
		<bitfield id="SETOVL0INT" width="1" begin="17" end="17" resetval="0x0" description="SETOVL0INT: Set Free Running Counter 0 Overflow Interrupt.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = enable interrupt" range="17" rwaccess="RW"/> 
		<bitfield id="SETTBINT" width="1" begin="16" end="16" resetval="0x0" description="SETTBINT: Set Timebase Interrupt.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = enable interrupt" range="16" rwaccess="RW"/> 
		<bitfield id="RESERVED10" width="4" begin="15" end="12" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="15 - 12" rwaccess="RW"/> 
		<bitfield id="SETDMA3" width="1" begin="11" end="11" resetval="0x0" description="SETDMA3: Set Compare DMA Request 3.User and privilege mode (read):0 = DMA request is disabled1 = DMA request is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = enable DMA request" range="11" rwaccess="RW"/> 
		<bitfield id="SETDMA2" width="1" begin="10" end="10" resetval="0x0" description="SETDMA2: Set Compare DMA Request 2.User and privilege mode (read):0 = DMA request is disabled1 = DMA request is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = enable DMA request" range="10" rwaccess="RW"/> 
		<bitfield id="SETDMA1" width="1" begin="9" end="9" resetval="0x0" description="SETDMA1: Set Compare DMA Request 1.User and privilege mode (read):0 = DMA request is disabled1 = DMA request is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = enable DMA request" range="9" rwaccess="RW"/> 
		<bitfield id="SETDMA0" width="1" begin="8" end="8" resetval="0x0" description="SETDMA0: Set Compare DMA Request 0.User and privilege mode (read):0 = DMA request is disabled1 = DMA request is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = enable DMA request" range="8" rwaccess="RW"/> 
		<bitfield id="RESERVED9" width="4" begin="7" end="4" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="7 - 4" rwaccess="RW"/> 
		<bitfield id="SETINT3" width="1" begin="3" end="3" resetval="0x0" description="SETINT3: Set Compare Interrupt 3.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged" range="3" rwaccess="RW"/> 
		<bitfield id="SETINT2" width="1" begin="2" end="2" resetval="0x0" description="SETINT2: Set Compare Interrupt 2.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = enable interrupt" range="2" rwaccess="RW"/> 
		<bitfield id="SETINT1" width="1" begin="1" end="1" resetval="0x0" description="SETINT1: Set Compare Interrupt 1.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = enable interrupt" range="1" rwaccess="RW"/> 
		<bitfield id="SETINT0" width="1" begin="0" end="0" resetval="0x0" description="SETINT0: Set Compare Interrupt 0.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = enable interrupt" range="0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICLEARINT" acronym="RTI0_RTICLEARINT" offset="0x84" width="32" description="">
		<bitfield id="RESERVED14" width="13" begin="31" end="19" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 19" rwaccess="RW"/> 
		<bitfield id="CLEAROVL1INT" width="1" begin="18" end="18" resetval="0x0" description="CLEAROVL1INT: CLEAR Free Running Counter 1 Overflow Interrupt.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = disable interrupt" range="18" rwaccess="RW"/> 
		<bitfield id="CLEAROVL0INT" width="1" begin="17" end="17" resetval="0x0" description="CLEAROVL0INT: CLEAR Free Running Counter 0 Overflow Interrupt.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = disable interrupt" range="17" rwaccess="RW"/> 
		<bitfield id="CLEARTBINT" width="1" begin="16" end="16" resetval="0x0" description="CLEARTBINT: CLEAR Timebase Interrupt.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = disable interrupt" range="16" rwaccess="RW"/> 
		<bitfield id="RESERVED13" width="4" begin="15" end="12" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="15 - 12" rwaccess="RW"/> 
		<bitfield id="CLEARDMA3" width="1" begin="11" end="11" resetval="0x0" description="CLEARDMA3: CLEAR Compare DMA Request 3.User and privilege mode (read):0 = DMA request is disabled1 = DMA request is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = disable DMA request" range="11" rwaccess="RW"/> 
		<bitfield id="CLEARDMA2" width="1" begin="10" end="10" resetval="0x0" description="CLEARDMA2: CLEAR Compare DMA Request 2.User and privilege mode (read):0 = DMA request is disabled1 = DMA request is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = disable DMA request" range="10" rwaccess="RW"/> 
		<bitfield id="CLEARDMA1" width="1" begin="9" end="9" resetval="0x0" description="CLEARDMA1: CLEAR Compare DMA Request 1.User and privilege mode (read):0 = DMA request is disabled1 = DMA request is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = disable DMA request" range="9" rwaccess="RW"/> 
		<bitfield id="CLEARDMA0" width="1" begin="8" end="8" resetval="0x0" description="CLEARDMA0: CLEAR Compare DMA Request 0.User and privilege mode (read):0 = DMA request is disabled1 = DMA request is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = disable DMA request" range="8" rwaccess="RW"/> 
		<bitfield id="RESERVED12" width="4" begin="7" end="4" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="7 - 4" rwaccess="RW"/> 
		<bitfield id="CLEARINT3" width="1" begin="3" end="3" resetval="0x0" description="CLEARINT3: CLEAR Compare Interrupt 3.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = disable interrupt" range="3" rwaccess="RW"/> 
		<bitfield id="CLEARINT2" width="1" begin="2" end="2" resetval="0x0" description="CLEARINT2: CLEAR Compare Interrupt 2.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = disable interrupt" range="2" rwaccess="RW"/> 
		<bitfield id="CLEARINT1" width="1" begin="1" end="1" resetval="0x0" description="CLEARINT1: CLEAR Compare Interrupt 1.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = disable interrupt" range="1" rwaccess="RW"/> 
		<bitfield id="CLEARINT0" width="1" begin="0" end="0" resetval="0x0" description="CLEARINT0: CLEAR Compare Interrupt 0.User and privilege mode (read):0 = interrupt is disabled1 = interrupt is enabledPrivilege mode (write):0 = leaves the corresponding bit unchanged1 = disable interrupt" range="0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIINTFLAG" acronym="RTI0_RTIINTFLAG" offset="0x88" width="32" description="">
		<bitfield id="RESERVED16" width="13" begin="31" end="19" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 19" rwaccess="RW"/> 
		<bitfield id="OVL1INT" width="1" begin="18" end="18" resetval="0x0" description="OVL1INT: Free Running Counter 1 Overflow Interrupt Flag.User and privilege mode (read):determines if an interrupt is pending0 = no interrupt pending1 = interrupt pendingPrivilege mode (write):0 = leaves the bit unchanged1 = set the bit to 0" range="18" rwaccess="RW"/> 
		<bitfield id="OVL0INT" width="1" begin="17" end="17" resetval="0x0" description="OVL0INT: Free Running Counter 0 Overflow Interrupt Flag.User and privilege mode (read):determines if an interrupt is pending0 = no interrupt pending1 = interrupt pendingPrivilege mode (write):0 = leaves the bit unchanged1 = set the bit to 0" range="17" rwaccess="RW"/> 
		<bitfield id="TBINT" width="1" begin="16" end="16" resetval="0x0" description="User and privilege mode (read):this flag is set when the TBEXT bit is cleared by detection of a missing external clockedge. It will not be set by clearing TBEXT by software.determines if an interrupt is pending0 = no interrupt pending1 = interrupt pendingPrivilege mode (write):0 = leaves the bit unchanged1 = set the bit to 0" range="16" rwaccess="RW"/> 
		<bitfield id="RESERVED15" width="12" begin="15" end="4" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="15 - 4" rwaccess="RW"/> 
		<bitfield id="INT3" width="1" begin="3" end="3" resetval="0x0" description="INT3: Interrupt Flag 3.User and privilege mode (read):determines if a interrupt is pending0 = no interrupt pending1 = interrupt pendingPrivilege mode (write):0 = leaves the bit unchanged1 = set the bit to 0" range="3" rwaccess="RW"/> 
		<bitfield id="INT2" width="1" begin="2" end="2" resetval="0x0" description="INT2: Interrupt Flag 2.User and privilege mode (read):determines if a interrupt is pending0 = no interrupt pending1 = interrupt pendingPrivilege mode (write):0 = leaves the bit unchanged1 = set the bit to 0" range="2" rwaccess="RW"/> 
		<bitfield id="INT1" width="1" begin="1" end="1" resetval="0x0" description="INT1: Interrupt Flag 1.User and privilege mode (read):determines if a interrupt is pending0 = no interrupt pending1 = interrupt pendingPrivilege mode (write):0 = leaves the bit unchanged1 = set the bit to 0" range="1" rwaccess="RW"/> 
		<bitfield id="INT0" width="1" begin="0" end="0" resetval="0x0" description="INT0: Interrupt Flag 0.User and privilege mode (read):determines if a interrupt is pending0 = no interrupt pending1 = interrupt pendingPrivilege mode (write):0 = leaves the bit unchanged1 = set the bit to 0" range="0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIDWDCTRL" acronym="RTI0_RTIDWDCTRL" offset="0x90" width="32" description="">
		<bitfield id="DWDCTRL" width="32" begin="31" end="0" resetval="0x0" description="DWDCTRL: Digital Watchdog Control.User and priviledge mode (read):0x5312ACED = DWD counter is disabled. This is the default value.0xA98559DA = DWD counter is enabledAny other value = DWD counter state is unchanged (enabled or disabled)Priviledge mode (write):0xA98559DA = DWD counter is enabledAny other value = State of DWD counter is unchanged (stays enabled or disabled)Note: One-Write Functionality of DWDCTRL RegisterThe RTIDWDCTRL register implements a one-write functionality, such that the application cannot write to this registermore than once. Writing the default value will not enable the watchdog as described above. Writing the enable value will start the watchdog counters. A write to RTIDWDCTRL will only be enabled after a system reset again." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIDWDPRLD" acronym="RTI0_RTIDWDPRLD" offset="0x94" width="32" description="">
		<bitfield id="RESERVED17" width="20" begin="31" end="12" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 12" rwaccess="RW"/> 
		<bitfield id="DWDPRLD" width="12" begin="11" end="0" resetval="0x0" description="DWDPRLD: Digital Watchdog Preload Value.User and priviledge mode (read):A read from this register in any CPU mode returns the current preload value.Priviledge mode (write):If the DWD is always enabled after reset is released:The DWD starts counting down from the reset value of the counter, that is, 0x002DFFFF. The application can configure the DWD preload register any time before this down counter expires.When the application services the DWD, the preload register contents are copied left-justified into the DWD down counter and it starts counting down from that value.If the DWD is implemented such that the down counter is enabled by software:The DWD preload register can be configured only when the DWD is disabled. Therefore, the application can only configure the DWD preload register before it enables the DWD down counter.The expiration time of the DWD Down Counter can be determined with following equation:texp = (RTIDWDPRLD+1) x 2 ^ 13 / RTICLK1where: RTIDWDPRLD = 0...4095" range="11 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIWDSTATUS" acronym="RTI0_RTIWDSTATUS" offset="0x98" width="32" description="">
		<bitfield id="RESERVED18" width="26" begin="31" end="6" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 6" rwaccess="RW"/> 
		<bitfield id="DWWD_ST" width="1" begin="5" end="5" resetval="0x0" description="DWWD ST: Windowed Watchdog Status.This bit denotes whether the time-window defined by the windowed watchdog configuration has been violated, or if a wrong key or key sequence was written to service the watchdog.User and priviledge mode (read):0 = no time-window violation has occurred.1 = a time-window violation has occurred. The watchdog will generate either a system reset or a non-maskable interrupt to the CPU in this case.Priviledge mode (write):0 = leaves the current value unchanged.1 = clears the bit to 0. This will also clear all other status flags in the RTIWDSTATUS register except for the AWD ST flag. Clearing of the status flags will deassert the non-maskable interrupt generated due to violation of the DWWD." range="5" rwaccess="RW"/> 
		<bitfield id="ENDTIMEVIOL" width="1" begin="4" end="4" resetval="0x0" description="END TIME VIOL: Windowed Watchdog End Time Violation Status.This bit denotes whether the end-time defined by the windowed watchdog configuration has been violated. This bit is effectively a copy of the DWD ST status flag.User and priviledge mode (read):0 = no end-time window violation has occurred.1 = the end-time defined by the windowed watchdog configuration has been violated.Priviledge mode (write):0 = leaves the current value unchanged.1 = clears the bit to 0." range="4" rwaccess="RW"/> 
		<bitfield id="STARTTIMEVIOL" width="1" begin="3" end="3" resetval="0x0" description="START TIME VIOL: Windowed Watchdog Start Time Violation Status. This bit denotes whether the start-time defined by the windowed watchdog configuration has been violated. This indicates that the WWD was serviced before the service window was opened.User and priviledge mode (read):0 = no start-time window violation has occurred.1 = the start-time defined by the windowed watchdog configuration has been violated.Priviledge mode (write):0 = leaves the current value unchanged.1 = clears the bit to 0." range="3" rwaccess="RW"/> 
		<bitfield id="KEYST" width="1" begin="2" end="2" resetval="0x0" description="KEYST: Watchdog KeyStatus.This bit denotes a reset generated by a wrong key or a wrong key-sequence written to the RTIWDKEY register.User and priviledge mode (read):0 = no wrong key or key-sequence written1 = wrong key or key-sequence written to RTIWDKEY registerPriviledge mode (write):0 = leaves the current value unchanged1 = clears the bit to 0" range="2" rwaccess="RW"/> 
		<bitfield id="DWDST" width="1" begin="1" end="1" resetval="0x0" description="DWDST: Digital Watchdog Status.This bit is effectively a copy of the END TIME VIOL status flag and is maintained for compatibility reasons.User and priviledge mode (read):0 = DWD timeout period not expired1 = DWD timeout period has expiredPriviledge mode (write):0 = leaves the current value unchanged1 = clears the bit to 0" range="1" rwaccess="RW"/> 
		<bitfield id="AWDST" width="1" begin="0" end="0" resetval="0x0" description="AWDST: Analog Watchdog Status.User and priviledge mode (read):0 = AWD pin 0 ?> 1 threshold not exceeded1 = AWD pin 0 ?> 1 threshold exceededPriviledge mode (write):0 = leaves the current value unchanged1 = clears the bit to 0" range="0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIWDKEY" acronym="RTI0_RTIWDKEY" offset="0x9C" width="32" description="">
		<bitfield id="RESERVED19" width="16" begin="31" end="16" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 16" rwaccess="RW"/> 
		<bitfield id="WDKEY" width="16" begin="15" end="0" resetval="0x0" description="WDKEY: Watchdog Key.User and privilege mode reads are indeterminate.Privilege mode (write):A write of 0xE51A followed by 0xA35C in two separate write operations defines the Key Sequence and discharges the watchdog capacitor. This also causes the upper 12 bits of the DWD down counter to be reloaded with the contents of the DWD preload register and the lower 13 bits to become all 1?s. Writing any other value causes a digital watchdog reset, as shown in Table 1-3.Note: Register write access time precautionThe user has to take into account that the write to the register takes 3 VCLK cycle. This needs to be considered for the AWD/DWD expiration calculation." range="15 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIDWDCNTR" acronym="RTI0_RTIDWDCNTR" offset="0xA0" width="32" description="">
		<bitfield id="RESERVED20" width="7" begin="31" end="25" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 25" rwaccess="RW"/> 
		<bitfield id="DWDCNTR" width="25" begin="24" end="0" resetval="0x0" description="DWDCNTR: Digital Watchdog Down Counter.The value of the DWDCNTR after a system reset is 0x002D_FFFF. When the DWD is enabled and the DWD counter starts counting down from this value with an RTICLK1 time base of 3MHz, a watchdog reset will be generated in 1 second.User and privilege mode (read):Reads return the current counter value.Privilege mode (write):Writes don?t have an effect." range="24 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIWWDRXNCTRL" acronym="RTI0_RTIWWDRXNCTRL" offset="0xA4" width="32" description="">
		<bitfield id="RESERVED21" width="28" begin="31" end="4" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 4" rwaccess="RW"/> 
		<bitfield id="WWDRXN" width="4" begin="3" end="0" resetval="0x0" description="WWDRXN: Digital Windowed Watchdog Reaction.User and privilege mode (read), privileged mode (write):0x5 = This is the default value. The windowed watchdog will cause a reset if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all.0xA = The windowed watchdog will generate a non-maskable interrupt to the CPU if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all.Writing any other value will cause a system reset if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all.Note: Configuration of DWWD ReactionThe DWWD reaction can be selected by the application even when the DWWD counter is already enabled.If a change to the WWDRXN is made before the watchdog service window is opened, then the change in the configuration takes effect immediately.If a change to the WWDRXN is made when the watchdog service window is already open, then the change in configuration takes effect only after the watchdog is serviced." range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIWWDSIZECTRL" acronym="RTI0_RTIWWDSIZECTRL" offset="0xA8" width="32" description="">
		<bitfield id="WWDSIZE" width="32" begin="31" end="0" resetval="0x0" description="WWDSIZE: Digital Windowed Watchdog Window Size.User and privilege mode (read), privileged mode (write):Value written to WWDSIZE    Window Size0x00000005                                   100% (Functionality same as the time-out digital watchdog.)0x00000050                                   50%0x00000500                                   25%0x00005000                                  12.5%0x00050000                                  6.25%0x00500000                                  3.125%Any other value                          3.125%Note: Incorrect value being written to watchdog window size control registerIf an incorerct value is written to the WWDSIZE field, or if a system disturbance causes the WWDSIZE field to have a value other than 0x5, 0x50, 0x500, 0x5000, 0x50000, or 0x500000, then the window size will be configured to be 3.125%. This increases the chances of getting a reset due to the windowed watchdog, which enables the system to handle the cause for the incorrect configuration.Note: Configuration of DWWD Window SizeThe DWWD window size can be selected by the application even when the DWWD counter is already enabled.If a change to the WWDSIZE is made before the watchdog service window is opened, then the change in the configuration takes effect immediately.If a change to the WWDSIZE is made when the watchdog service window is already open, then" range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTIINTCLRENABLE" acronym="RTI0_RTIINTCLRENABLE" offset="0xAC" width="32" description="">
		<bitfield id="RESERVED25" width="4" begin="31" end="28" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="31 - 28" rwaccess="RW"/> 
		<bitfield id="INTCLRENABLE3" width="4" begin="27" end="24" resetval="0x0" description="INTCLRENABLE3.Enables the auto-clear functionality on the compare 3 interrupt.User and Privileged mode (read):0x5 = Auto-clear for compare 3 interrupt is disabled.Any other value = Auto-clear for compare 3 interrupt is enabled.Privileged mode (write):0x5 = Disables the auto-clear functionality on the compare 3 interrupt.Any other value = Enables the auto-clear functionality on the compare 3 interrupt." range="27 - 24" rwaccess="RW"/> 
		<bitfield id="RESERVED24" width="4" begin="23" end="20" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="23 - 20" rwaccess="RW"/> 
		<bitfield id="INTCLRENABLE2" width="4" begin="19" end="16" resetval="0x0" description="INTCLRENABLE2.Enables the auto-clear functionality on the compare 2 interrupt.User and Privileged mode (read):0x5 = Auto-clear for compare 2 interrupt is disabled.Any other value = Auto-clear for compare 2 interrupt is enabled.Privileged mode (write):0x5 = Disables the auto-clear functionality on the compare 2 interrupt.Any other value = Enables the auto-clear functionality on the compare 2 interrupt." range="19 - 16" rwaccess="RW"/> 
		<bitfield id="RESERVED23" width="4" begin="15" end="12" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="15 - 12" rwaccess="RW"/> 
		<bitfield id="INTCLRENABLE1" width="4" begin="11" end="8" resetval="0x0" description="INTCLRENABLE1.Enables the auto-clear functionality on the compare 1 interrupt.User and Privileged mode (read):0x5 = Auto-clear for compare 1 interrupt is disabled.Any other value = Auto-clear for compare 1 interrupt is enabled.Privileged mode (write):0x5 = Disables the auto-clear functionality on the compare 1 interrupt.Any other value = Enables the auto-clear functionality on the compare 1 interrupt." range="11 - 8" rwaccess="RW"/> 
		<bitfield id="RESERVED22" width="4" begin="7" end="4" resetval="0x0" description="Reserved.Reads return 0 and writes have no effect" range="7 - 4" rwaccess="RW"/> 
		<bitfield id="INTCLRENABLE0" width="4" begin="3" end="0" resetval="0x0" description="INTCLRENABLE0.Enables the auto-clear functionality on the compare 0 interrupt.User and Privileged mode (read):0x5 = Auto-clear for compare 0 interrupt is disabled.Any other value = Auto-clear for compare 0 interrupt is enabled.Privileged mode (write):0x5 = Disables the auto-clear functionality on the compare 0 interrupt.Any other value = Enables the auto-clear functionality on the compare 0 interrupt." range="3 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICOMP0CLR" acronym="RTI0_RTICOMP0CLR" offset="0xB0" width="32" description="">
		<bitfield id="COMP0CLR" width="32" begin="31" end="0" resetval="0x0" description="COMP0CLR: Compare 0 Clear.This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the compare 0 interrupt or DMA request line is cleared.User and privilege mode (read):current compare valuePrivilege mode (write):update of the compare register with a new compare valueNote: Reset behaviorA reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICOMP1CLR" acronym="RTI0_RTICOMP1CLR" offset="0xB4" width="32" description="">
		<bitfield id="COMP1CLR" width="32" begin="31" end="0" resetval="0x0" description="COMP1CLR: Compare 1 Clear.This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the Compare 1 interrupt or DMA request line is cleared.User and privilege mode (read):current compare valuePrivilege mode (write):update of the compare register with a new compare valueNote: Reset behaviorA reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICOMP2CLR" acronym="RTI0_RTICOMP2CLR" offset="0xB8" width="32" description="">
		<bitfield id="COMP2CLR" width="32" begin="31" end="0" resetval="0x0" description="COMP2CLR: Compare 2 Clear.This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the Compare 2 interrupt or DMA request line is cleared.User and privilege mode (read):current compare valuePrivilege mode (write):update of the compare register with a new compare valueNote: Reset behaviorA reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="31 - 0" rwaccess="RW"/>
	</register>
	<register id="RTI0_RTICOMP3CLR" acronym="RTI0_RTICOMP3CLR" offset="0xBC" width="32" description="">
		<bitfield id="COMP3CLR" width="32" begin="31" end="0" resetval="0x0" description="COMP3CLR: Compare 3 Clear.This registers holds a compare value, which is compared with the counter selected in the compare control logic. If the Free Running Counter matches the compare value, the Compare 3 interrupt or DMA request line is cleared.User and privilege mode (read):current compare valuePrivilege mode (write):update of the compare register with a new compare valueNote: Reset behaviorA reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="31 - 0" rwaccess="RW"/>
	</register>
</module>