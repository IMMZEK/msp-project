

<module description="" id="MSS_CTRL">
  
  
  <register acronym="PID" description=" PID register " id="PID" offset="0x0" width="32">
    
  <bitfield begin="31" description="" end="16" id="" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="" end="11" id="" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="" end="8" id="" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="" end="6" id="" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="MSS_SW_INT" description="" id="MSS_SW_INT" offset="0x4" width="32">
    
  <bitfield begin="4" description="Write_pulse bit field: writing 1'b1 to each bit will trigger MSS_SW_INT&lt;0-4> respectively to CR5A/B." end="0" id="pulse" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="MSS_CAPEVNT_SEL" description="" id="MSS_CAPEVNT_SEL" offset="0x8" width="32">
    
  <bitfield begin="15" description="Writing a value 'N' will select Nth interrupt from CR5A/B interrupt mapping to trigger CAP-EVENT1 to all MSS_RTIs. Example: writing 8'h0A will select 10th interrupt to trigger CAP-EVENT1 to all MSS_RTIs. (which is MSS_RTIB_INT1)" end="8" id="src1" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="Writing a value 'N' will select Nth interrupt from CR5A/B interrupt mapping to trigger CAP-EVENT0 to all MSS_RTIs. Example: writing 8'h0A will select 10th interrupt to trigger CAP-EVENT0 to all MSS_RTIs. (which is MSS_RTIB_INT1)" end="0" id="src0" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_REQ_SEL" description="" id="MSS_DMA_REQ_SEL" offset="0xC" width="32">
    
  <bitfield begin="31" description="Reserved for R&amp;D. Do not touch" end="0" id="select" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA1_REQ_SEL" description="" id="MSS_DMA1_REQ_SEL" offset="0x10" width="32">
    
  <bitfield begin="31" description="Reserved for R&amp;D. Do not touch" end="0" id="select" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_IRQ_REQ_SEL" description="" id="MSS_IRQ_REQ_SEL" offset="0x14" width="32">
    
  <bitfield begin="31" description="Reserved for R&amp;D. Do not touch" end="0" id="select" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPI_TRIG_SRC" description="" id="MSS_SPI_TRIG_SRC" offset="0x18" width="32">
    
  <bitfield begin="26" description="Writing 1'b1 to each bit will trigger MSS_SPIB Trigger&lt;0-10> respectively" end="16" id="trig_spib" rwaccess="RW" width="11"></bitfield>
    
  <bitfield begin="1" description="RESERVED:Dont Touch" end="0" id="trig_spia" rwaccess="RW" width="2"></bitfield>
  </register>
  
  
  <register acronym="MSS_ATCM_MEM_INIT" description="" id="MSS_ATCM_MEM_INIT" offset="0x1C" width="32">
    
  <bitfield begin="0" description="Write_pulse bit field: Writing 1'b1 will start initializing the ATCM banks of CR5A/B. Value in each row is initialized to 0x0C_0000_0000" end="0" id="mem_init" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_ATCM_MEM_INIT_DONE" description="" id="MSS_ATCM_MEM_INIT_DONE" offset="0x20" width="32">
    
  <bitfield begin="0" description="This field will be high once initialization of ATCM banks is finished. Writing '1' would clear the bit." end="0" id="mem_init_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_ATCM_MEM_INIT_STATUS" description="" id="MSS_ATCM_MEM_INIT_STATUS" offset="0x24" width="32">
    
  <bitfield begin="0" description="1'b0: No initialization is happening for ATCM banks of CR5A/B 1'b1: Initialization is in progress for ATCM banks of CR5A/B" end="0" id="mem_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_BTCM_MEM_INIT" description="" id="MSS_BTCM_MEM_INIT" offset="0x28" width="32">
    
  <bitfield begin="0" description="Write_pulse bit field: Writing 1'b1 will start initializing the B0/1TCM banks of CR5A/B" end="0" id="mem_init" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_BTCM_MEM_INIT_DONE" description="" id="MSS_BTCM_MEM_INIT_DONE" offset="0x2C" width="32">
    
  <bitfield begin="0" description="This field will be high once initialization of B0/1TCM banks is finished. Writing '1' would clear the bit." end="0" id="mem_init_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_BTCM_MEM_INIT_STATUS" description="" id="MSS_BTCM_MEM_INIT_STATUS" offset="0x30" width="32">
    
  <bitfield begin="0" description="1'b0: No initialization is happening for B0/1TCM banks of CR5A/B 1'b1: Initialization is in progress for B0/1TCM banks of CR5A/B" end="0" id="mem_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_MEM_INIT" description="" id="MSS_L2_MEM_INIT" offset="0x34" width="32">
    
  <bitfield begin="2" description="Write_pulse bit field: Writing 1'b1 will start initializing the L2 Bank2.  Value in each row is initialized to 0x0" end="2" id="partition2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Write_pulse bit field: Writing 1'b1 will start initializing the L2 Bank1. Value in each row is initialized to 0x0" end="1" id="partition1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Write_pulse bit field: Writing 1'b1 will start initializing the L2 Bank0. Value in each row is initialized to 0x0" end="0" id="partition0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_MEM_INIT_DONE" description="" id="MSS_L2_MEM_INIT_DONE" offset="0x38" width="32">
    
  <bitfield begin="2" description="This field will be high once intialization of L2 bank2 is finished. Writing '1' would clear the bit" end="2" id="partition2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="This field will be high once intialization of L2 bank1 is finished. Writing '1' would clear the bit" end="1" id="partition1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="This field will be high once intialization of L2 bank0 is finished. Writing '1' would clear the bit" end="0" id="partition0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_MEM_INIT_STATUS" description="" id="MSS_L2_MEM_INIT_STATUS" offset="0x3C" width="32">
    
  <bitfield begin="2" description="1'b0: No initialization is happening for L2 bank2 1'b1: Initialization is in progress for L2 bank2" end="2" id="partition2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="1'b0: No initialization is happening for L2 bank1 1'b1: Initialization is in progress for L2 bank1" end="1" id="partition1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="1'b0: No initialization is happening for L2 bank0  1'b1: Initialization is in progress for L2 bank0" end="0" id="partition0" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_MAILBOX_MEM_INIT" description="" id="MSS_MAILBOX_MEM_INIT" offset="0x40" width="32">
    
  <bitfield begin="0" description="Write_pulse bit field: Writing 1'b1 will start initializing the MSS_MBOX. Value in each row is initialized to 0x0" end="0" id="mem0_init" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_MAIlBOX_MEM_INIT_DONE" description="" id="MSS_MAIlBOX_MEM_INIT_DONE" offset="0x44" width="32">
    
  <bitfield begin="0" description="This field will be high once intialization of MSS_MBOX is finished. Writing '1' would clear the bit" end="0" id="mem0_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_MAILBOX_MEM_INIT_STATUS" description="" id="MSS_MAILBOX_MEM_INIT_STATUS" offset="0x48" width="32">
    
  <bitfield begin="0" description="1'b0: No initialization is happening for MSS_MBOX  1'b1: Initialization is in progress for MSS_MBOX" end="0" id="mem0_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_RETRAM_MEM_INIT" description="" id="MSS_RETRAM_MEM_INIT" offset="0x4C" width="32">
    
  <bitfield begin="0" description="Write_pulse bit field: Writing 1'b1 will start initializing the MSS_RETRAM. Value in each row is initialized to 0x0" end="0" id="mem0_init" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_RETRAM_MEM_INIT_DONE" description="" id="MSS_RETRAM_MEM_INIT_DONE" offset="0x50" width="32">
    
  <bitfield begin="0" description="This field will be high once intialization of MSS_RETRAM is finished. Writing '1' would clear the bit" end="0" id="mem0_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_RETRAM_MEM_INIT_STATUS" description="" id="MSS_RETRAM_MEM_INIT_STATUS" offset="0x54" width="32">
    
  <bitfield begin="0" description="1'b0: No initialization is happening for MSS_RETRAM  1'b1: Initialization is in progress for MSS_RETRAM" end="0" id="mem0_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIA_MEM_INIT" description="" id="MSS_SPIA_MEM_INIT" offset="0x58" width="32">
    
  <bitfield begin="0" description="RESERVED:Dont Touch " end="0" id="mem0_init" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIA_MEM_INIT_DONE" description="" id="MSS_SPIA_MEM_INIT_DONE" offset="0x5C" width="32">
    
  <bitfield begin="0" description="RESERVED: Dont Use" end="0" id="mem0_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIA_MEM_INIT_STATUS" description="" id="MSS_SPIA_MEM_INIT_STATUS" offset="0x60" width="32">
    
  <bitfield begin="0" description="RESERVED: Dont Use" end="0" id="mem0_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIB_MEM_INIT" description="" id="MSS_SPIB_MEM_INIT" offset="0x64" width="32">
    
  <bitfield begin="0" description="Write_pulse bit field: Writing 1'b1 will start initializing the MSS_SPIB. Value in each row is initialized to 0x0" end="0" id="mem0_init" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIB_MEM_INIT_DONE" description="" id="MSS_SPIB_MEM_INIT_DONE" offset="0x68" width="32">
    
  <bitfield begin="0" description="This field will be high once intialization of MSS_SPIB is finished. Writing '1' would clear the bit" end="0" id="mem0_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIB_MEM_INIT_STATUS" description="" id="MSS_SPIB_MEM_INIT_STATUS" offset="0x6C" width="32">
    
  <bitfield begin="0" description="1'b0: No initialization is happening for MSS_SPIB  1'b1: Initialization is in progress for MSS_SPIB" end="0" id="mem0_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPCC_MEMINIT_START" description="" id="MSS_TPCC_MEMINIT_START" offset="0x70" width="32">
    
  <bitfield begin="0" description="Write_pulse bit field: Writing 1'b1 will start initializing the MSS_TPCCA" end="0" id="tpcc_a_meminit_start" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPCC_MEMINIT_DONE" description="" id="MSS_TPCC_MEMINIT_DONE" offset="0x74" width="32">
    
  <bitfield begin="0" description="This field will be high once intialization of MSS_TPCCA is finished. Writing '1' would clear the bit" end="0" id="tpcc_a_meminit_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPCC_MEMINIT_STATUS" description="" id="MSS_TPCC_MEMINIT_STATUS" offset="0x78" width="32">
    
  <bitfield begin="0" description="1'b0: No initialization is happening for MSS_TPCCA 1'b1: Initialization is in progress for MSS_TPCCB" end="0" id="tpcc_a_meminit_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_GPADC_MEM_INIT" description="" id="MSS_GPADC_MEM_INIT" offset="0x7C" width="32">
    
  <bitfield begin="0" description="Write_pulse bit field: Writing 1'b1 will start initializing the MSS_GPADC_DATA_MEM. Value in each row is initialized to 0x00_0000_03FF" end="0" id="mem0_init" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_GPADC_MEM_INIT_DONE" description="" id="MSS_GPADC_MEM_INIT_DONE" offset="0x80" width="32">
    
  <bitfield begin="0" description="This field will be high once intialization of MSS_GPADC_DATA_MEM is finished. Writing '1' would clear the bit" end="0" id="mem0_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_GPADC_MEM_INIT_STATUS" description="" id="MSS_GPADC_MEM_INIT_STATUS" offset="0x84" width="32">
    
  <bitfield begin="0" description="1'b0: No initialization is happening for MSS_GPADC_DATA_MEM  1'b1: Initialization is in progress for MSS_GPADC_DATA_MEM" end="0" id="mem0_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIA_CFG" description=" RESERVED: Dont Use  " id="MSS_SPIA_CFG" offset="0x88" width="32">
    
  <bitfield begin="24" description="RESERVED:Dont Use" end="24" id="spia_int_trig_polarity" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="RESERVED:Dont Use" end="16" id="spia_trig_gate_en" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="RESERVED:Dont Use" end="8" id="spia_cs_trigsrc_en" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="RESERVED:Dont Use" end="0" id="spiasync2sen" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIB_CFG" description="" id="MSS_SPIB_CFG" offset="0x8C" width="32">
    
  <bitfield begin="24" description="SPIB trigger source polarity select.   0    - Polarity 0,   1   -Polarity 1" end="24" id="spib_int_trig_polarity" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="When set the TRIGGER   s are un-gated only when chip-select is active" end="16" id="spib_trig_gate_en" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="MIBSPIB CS Trigger SRC enable    1   : Use CS as trigger source" end="8" id="spib_cs_trigsrc_en" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Donot touch the field. Used as Tie-off for IP-config." end="0" id="spibsync2sen" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_EPWM_CFG" description="" id="MSS_EPWM_CFG" offset="0x90" width="32">
    
  <bitfield begin="31" description="bit0: SW syncin for EPWM1  bit1: SW syncin for EPWM2 bit2: SW syncin for EPWM3 bit8:9 :  select bits for EPWM1       '0' :  external syncin       '1' :  reserved       '2' :  sw syncin         '3' :  reserved bit10:11 : select bits for EPWM2       '0' :  external syncin       '1' :  chained from EPWM1       '2' :  sw syncin         '3' :  reserved bit12:13 : select bits for EPWM3       '0' :  external syncin       '1' :  chained from EPWM2       '2' :  sw syncin         '3' :  reserved bit24:TBCLKEN for EPWM1 bit25:TBCLKEN for EPWM2 bit26:TBCLKEN for EPWM3" end="0" id="epwm_config" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_GIO_CFG" description="" id="MSS_GIO_CFG" offset="0x94" width="32">
    
  <bitfield begin="31" description="bit0 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT0 to IRQ bit1 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT1to IRQ bit2: writing '1'  will slect negedge for pulse generation of GIO_PAD_INT2 to IRQ bit3 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT3 to IRQ bit4 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT4 to IRQ bit5 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT5 to IRQ bit6 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT6 to IRQ bit7 : writing '1'  will slect negedge for pulse generation of GIO_PAD_INT7 to IRQ" end="0" id="gio_config" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_REG1" description="" id="HW_SPARE_REG1" offset="0x9C" width="32">
    
  <bitfield begin="31" description="Resereved for R&amp;D" end="0" id="NU" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_REG2" description="" id="HW_SPARE_REG2" offset="0xAC" width="32">
    
  <bitfield begin="31" description="Resereved for R&amp;D" end="0" id="NU" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CCC_ERR_STATUS" description="" id="CCC_ERR_STATUS" offset="0xB0" width="32">
    
  <bitfield begin="23" description="CCCB Error Status (for Debug) {3'd0, counter_error, counter_done, timeout_error, counter_error, counter_done}" end="16" id="cccb_errot_status" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="CCCA Error Status (for Debug) {3'd0, counter_error, counter_done, timeout_error, counter_error, counter_done}" end="0" id="ccca_errot_status" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CCCA_CFG0" description="" id="CCCA_CFG0" offset="0xB4" width="32">
    
  <bitfield begin="31" description="Margin value for clock comparison in terms of counter1 clock.CCC error will not be generated if counter1 counter value is within    count1_expected_val    +/- MARGIN_COUNT" end="16" id="ccca_margin_count" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Not used" end="9" id="Reserved" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="8" description="1: Single shot mode 0: Continuous mode" end="8" id="ccca_single_shot_mode" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="1'b1: Enables CCCA 1'b0: Disables CCCA" end="7" id="ccca_enable_module" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="1: Clock gated to counter0 and counter1 0:  Normal mode" end="6" id="ccca_disable_clocks" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Selection for Clock 1 0: Select clock0_src0 as source for counter1 1: Select clock0_src1 as source for counter1 2: Select clock0_src2 as source for counter1 ... 7: Select clock0_src7 as source for counter1" end="3" id="ccca_clk1_sel" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Selection for Clock 0 0: Select clock0_src0 as source for counter0 1: Select clock0_src1 as source for counter0 2: Select clock0_src2 as source for counter0 ... 7: Select clock0_src7 as source for counter0" end="0" id="ccca_clk0_sel" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="CCCA_CFG1" description="" id="CCCA_CFG1" offset="0xB8" width="32">
    
  <bitfield begin="31" description="count0_expiry_val Counter 1 is compared for    count1_expected_val    +/- MARGIN_COUNT when counter0 expires after counting down from count0_expiry_val to 0" end="0" id="ccca_cfg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CCCA_CFG2" description="" id="CCCA_CFG2" offset="0xBC" width="32">
    
  <bitfield begin="31" description="count1_expected_val Expected value of counter 1 when counter 0 expires after counting down from count0_expiry value" end="0" id="ccca_cfg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CCCA_CFG3" description="" id="CCCA_CFG3" offset="0xC0" width="32">
    
  <bitfield begin="31" description="Timeout Error Counter value in counter1 clock" end="0" id="ccca_cfg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CCCA_CNTVAL" description="" id="CCCA_CNTVAL" offset="0xC4" width="32">
    
  <bitfield begin="31" description="count1_val_out Real time value of counter1" end="0" id="ccca_cfg" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="CCCB_CFG0" description="" id="CCCB_CFG0" offset="0xC8" width="32">
    
  <bitfield begin="31" description="Margin value for clock comparison in terms of counter1 clock.CCC error will not be generated if counter1 counter value is within    count1_expected_val    +/- MARGIN_COUNT" end="16" id="cccb_margin_count" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Not used" end="9" id="Reserved" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="8" description="1: Single shot mode 0: Continuous mode" end="8" id="cccb_single_shot_mode" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="1'b1: Enables CCCB 1'b0: Disables CCCB" end="7" id="cccb_enable_module" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="1: Clock gated to counter0 and counter1 0:  Normal mode" end="6" id="cccb_disable_clocks" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Selection for Clock 1 0: Select clock0_src0 as source for counter1 1: Select clock0_src1 as source for counter1 2: Select clock0_src2 as source for counter1 ... 7: Select clock0_src7 as source for counter1" end="3" id="CCCB_clk1_sel" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Selection for Clock 0 0: Select clock0_src0 as source for counter0 1: Select clock0_src1 as source for counter0 2: Select clock0_src2 as source for counter0 ... 7: Select clock0_src7 as source for counter0" end="0" id="CCCB_clk0_sel" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="CCCB_CFG1" description="" id="CCCB_CFG1" offset="0xCC" width="32">
    
  <bitfield begin="31" description="count0_expiry_val Counter 1 is compared for    count1_expected_val    +/- MARGIN_COUNT when counter0 expires after counting down from count0_expiry_val to 0" end="0" id="cccb_cfg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CCCB_CFG2" description="" id="CCCB_CFG2" offset="0xD0" width="32">
    
  <bitfield begin="31" description="count1_expected_val Expected value of counter 1 when counter 0 expires after counting down from count0_expiry value" end="0" id="cccb_cfg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CCCB_CFG3" description="" id="CCCB_CFG3" offset="0xD4" width="32">
    
  <bitfield begin="31" description="Timeout Error Counter value in counter1 clock" end="0" id="cccb_cfg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CCCB_CNTVAL" description="" id="CCCB_CNTVAL" offset="0xD8" width="32">
    
  <bitfield begin="31" description="count1_val_out Real time value of counter1" end="0" id="cccb_cfg" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="CCC_DCC_COMMON" description="" id="CCC_DCC_COMMON" offset="0xDC" width="32">
    
  <bitfield begin="12" description="1'b0:Enable CCCB error to generate NMI. 1'b1:disables CCCB error to generate NMI." end="12" id="enable_cccb_err_nmi" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="1'b0: Enable CCCB error to generate WD restn. 1'b1: disables CCCB error to generate WD restn." end="8" id="enable_cccb_err_rstn" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="R5_GLOBAL_CONFIG" description="" id="R5_GLOBAL_CONFIG" offset="0xE0" width="32">
    
  <bitfield begin="0" description="Exception handling state at reset. 0-ARM 1-Thumb" end="0" id="teinit" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="R5_AHB_EN" description="" id="R5_AHB_EN" offset="0xE4" width="32">
    
  <bitfield begin="18" description="Ti internal Register. Modifying this register is not recommended Signal decides whehter ahb interface is enabled or not." end="16" id="cpu1_ahb_init" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Ti internal Register. Modifying this register is not recommended Signal decides whehter ahb interface is enabled or not." end="0" id="cpu0_ahb_init" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5A_AHB_BASE" description="" id="R5A_AHB_BASE" offset="0xE8" width="32">
    
  <bitfield begin="19" description="Ti internal Register. Modifying this register is not recommended Decides the base address of ahb region" end="0" id="ahb_base" rwaccess="RW" width="20"></bitfield>
  </register>
  
  
  <register acronym="R5A_AHB_SIZE" description="" id="R5A_AHB_SIZE" offset="0xEC" width="32">
    
  <bitfield begin="4" description="Ti internal Register. Modifying this register is not recommended Code for selecting size for ahb. b00011    4KB b00100    8KB b00101    16KB b00110    32KB b00111    64KB b01000    128KB b01001    256KB b01010    512KB b01011    1MB b01100    2MB b01101    4MB b01110    8MB b01111    16MB b10000    32MB b10001    64MB b10010    128MB b10011    256MB b10100    512MB b10101    1GB b10110    2GB b10111    4GB" end="0" id="ahb_size" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="R5B_AHB_BASE" description="" id="R5B_AHB_BASE" offset="0xF0" width="32">
    
  <bitfield begin="19" description="Ti internal Register. Modifying this register is not recommended Decides the base address of ahb region" end="0" id="ahb_base" rwaccess="RW" width="20"></bitfield>
  </register>
  
  
  <register acronym="R5B_AHB_SIZE" description="" id="R5B_AHB_SIZE" offset="0xF4" width="32">
    
  <bitfield begin="4" description="Ti internal Register. Modifying this register is not recommended Code for selecting size for ahb. b00011    4KB b00100    8KB b00101    16KB b00110    32KB b00111    64KB b01000    128KB b01001    256KB b01010    512KB b01011    1MB b01100    2MB b01101    4MB b01110    8MB b01111    16MB b10000    32MB b10001    64MB b10010    128MB b10011    256MB b10100    512MB b10101    1GB b10110    2GB b10111    4GB" end="0" id="ahb_size" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="R5_TCM_EXT_ERR_EN" description="" id="R5_TCM_EXT_ERR_EN" offset="0xF8" width="32">
    
  <bitfield begin="18" description="Ti internal Register. Modifying this register is not recommended TCMs external error enable. Tie each bit high to enable the external error signal for each TCM at reset" end="16" id="cpu1_tcm" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Ti internal Register. Modifying this register is not recommended TCMs external error enable. Tie each bit high to enable the external error signal for each TCM at reset" end="0" id="cpu0_tcm" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5_TCM_ERR_EN" description="" id="R5_TCM_ERR_EN" offset="0xFC" width="32">
    
  <bitfield begin="18" description="Ti internal Register. Modifying this register is not recommended TCMs ECC check enable. Tie each bit high to enable ECC checking on appropraite TCM" end="16" id="cpu1_tcm" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Ti internal Register. Modifying this register is not recommended TCMs ECC check enable. Tie each bit high to enable ECC checking on appropraite TCM" end="0" id="cpu0_tcm" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5_INIT_TCM" description="" id="R5_INIT_TCM" offset="0x100" width="32">
    
  <bitfield begin="22" description="Ti internal Register. Modifying this register is not recommended When HIGH ATCM base address at reset is 0x0 when LOW BTCM base address at reset is 0x0" end="20" id="lockzram_cpu1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="Ti internal Register. Modifying this register is not recommended When HIGH enables BTCM interface out of reset" end="16" id="tcmb_cpu1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="14" description="Ti internal Register. Modifying this register is not recommended When HIGH enables ATCM interface out of reset" end="12" id="tcma_cpu1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="Ti internal Register. Modifying this register is not recommended When HIGH ATCM base address at reset is 0x0 when LOW BTCM base address at reset is 0x0" end="8" id="lockzram_cpu0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="Ti internal Register. Modifying this register is not recommended When HIGH enables BTCM interface out of reset" end="4" id="tcmb_cpu0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Ti internal Register. Modifying this register is not recommended When HIGH enables ATCM interface out of reset" end="0" id="tcma_cpu0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5_TCM_ECC_WRENZ_EN" description="" id="R5_TCM_ECC_WRENZ_EN" offset="0x104" width="32">
    
  <bitfield begin="22" description="RESERVED: Dont Use" end="20" id="cpu1_tcmb1_wrenz_en" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="RESERVED: Dont Use" end="16" id="cpu1_tcmb0_wrenz_en" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="14" description="RESERVED: Dont Use" end="12" id="cpu1_tcma_wrenz_en" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="writing '000'  blocks the writes to ECC-bits of TCMB0-RAM of CR5A. Writing '111' unblocks the writes to ECC-bits of TCMB1-RAM of CR5A" end="8" id="cpu0_tcmb1_wrenz_en" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="writing '000'  blocks the writes to ECC-bits of TCMB0-RAM of CR5A. Writing '111' unblocks the writes to ECC-bits of TCMB0-RAM of CR5A" end="4" id="cpu0_tcmb0_wrenz_en" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="writing '000'  blocks the writes to ECC-bits of TCMA-RAM of CR5A. Writing '111' unblocks the writes to ECC-bits of TCMA-RAM of CR5A" end="0" id="cpu0_tcma_wrenz_en" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING0" description="" id="ESM_GATING0" offset="0x108" width="32">
    
  <bitfield begin="31" description="bit3:0 : writing '000' will ungate the ESM_GRP2_ERROR_0 bit7:4 : writing '000' will ungate the ESM_GRP2_ERROR_1        bit31:28 : writing '000' will ungate the ESM_GRP2_ERROR_7" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING1" description="" id="ESM_GATING1" offset="0x10C" width="32">
    
  <bitfield begin="31" description="bit3:0 : writing '000' will ungate the ESM_GRP2_ERROR_8 bit7:4 : writing '000' will ungate the ESM_GRP2_ERROR_9        bit31:28 : writing '000' will ungate the ESM_GRP2_ERROR_15" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING2" description="" id="ESM_GATING2" offset="0x110" width="32">
    
  <bitfield begin="31" description="bit3:0 : writing '000' will ungate the ESM_GRP2_ERROR_16 bit7:4 : writing '000' will ungate the ESM_GRP2_ERROR_17        bit31:28 : writing '000' will ungate the ESM_GRP2_ERROR_23" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING3" description="" id="ESM_GATING3" offset="0x114" width="32">
    
  <bitfield begin="31" description="bit3:0 : writing '000' will ungate the ESM_GRP2_ERROR_24 bit7:4 : writing '000' will ungate the ESM_GRP2_ERROR_25        bit31:28 : writing '000' will ungate the ESM_GRP2_ERROR_31" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING4" description="" id="ESM_GATING4" offset="0x118" width="32">
    
  <bitfield begin="31" description="bit3:0 : writing '000' will ungate the ESM_GRP3_ERROR_0 bit7:4 : writing '000' will ungate the ESM_GRP3_ERROR_1        bit31:28 : writing '000' will ungate the ESM_GRP3_ERROR_7" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING5" description="" id="ESM_GATING5" offset="0x11C" width="32">
    
  <bitfield begin="31" description="bit3:0 : writing '000' will ungate the ESM_GRP3_ERROR_8 bit7:4 : writing '000' will ungate the ESM_GRP3_ERROR_9        bit31:28 : writing '000' will ungate the ESM_GRP3_ERROR_15" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING6" description="" id="ESM_GATING6" offset="0x120" width="32">
    
  <bitfield begin="31" description="bit3:0 : writing '000' will ungate the ESM_GRP3_ERROR_16 bit7:4 : writing '000' will ungate the ESM_GRP3_ERROR_17        bit31:28 : writing '000' will ungate the ESM_GRP3_ERROR_23" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING7" description="" id="ESM_GATING7" offset="0x124" width="32">
    
  <bitfield begin="31" description="bit3:0 : writing '000' will ungate the ESM_GRP3_ERROR_24 bit7:4 : writing '000' will ungate the ESM_GRP3_ERROR_25        bit31:28 : writing '000' will ungate the ESM_GRP3_ERROR_31" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ERR_PARITY_ATCM0" description="" id="ERR_PARITY_ATCM0" offset="0x128" width="32">
    
  <bitfield begin="19" description="Address lathched when parity error is occurred for ATCM of CR5A" end="0" id="addr" rwaccess="R" width="20"></bitfield>
  </register>
  
  
  <register acronym="ERR_PARITY_ATCM1" description="" id="ERR_PARITY_ATCM1" offset="0x12C" width="32">
    
  <bitfield begin="19" description="RESERVED: Dont Use" end="0" id="addr" rwaccess="R" width="20"></bitfield>
  </register>
  
  
  <register acronym="ERR_PARITY_B0TCM0" description="" id="ERR_PARITY_B0TCM0" offset="0x130" width="32">
    
  <bitfield begin="19" description="Address lathched when parity error is occurred for B0TCM of CR5A" end="0" id="addr" rwaccess="R" width="20"></bitfield>
  </register>
  
  
  <register acronym="ERR_PARITY_B0TCM1" description="" id="ERR_PARITY_B0TCM1" offset="0x134" width="32">
    
  <bitfield begin="19" description="RESERVED: Dont Use" end="0" id="addr" rwaccess="R" width="20"></bitfield>
  </register>
  
  
  <register acronym="ERR_PARITY_B1TCM0" description="" id="ERR_PARITY_B1TCM0" offset="0x138" width="32">
    
  <bitfield begin="19" description="Address lathched when parity error is occurred for B1TCM of CR5A" end="0" id="addr" rwaccess="R" width="20"></bitfield>
  </register>
  
  
  <register acronym="ERR_PARITY_B1TCM1" description="" id="ERR_PARITY_B1TCM1" offset="0x13C" width="32">
    
  <bitfield begin="19" description="RESERVED: Dont Use" end="0" id="addr" rwaccess="R" width="20"></bitfield>
  </register>
  
  
  <register acronym="TCM_PARITY_CTRL" description="" id="TCM_PARITY_CTRL" offset="0x140" width="32">
    
  <bitfield begin="22" description="RESERVED: Dont Use" end="20" id="b1tcm1_erraddr_clr" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="Write pulse bit field: writing 3'b111 clears  the Address latched after parity error for B1TCM of CR5A" end="16" id="b1tcm0_erraddr_clr" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="14" description="RESERVED: Dont Use" end="12" id="b0cm1_erraddr_clr" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="RESERVED: Dont Use" end="8" id="b0tcm0_erraddr_clr" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="RESERVED: Dont Use" end="4" id="atcm1_erraddr_clr" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Pulse bit-field  writing 3'b111 clears  the Address latched after parity error for ATCM of CR5A" end="0" id="atcm0_erraddr_clr" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="TCM_PARITY_ERRFRC" description="" id="TCM_PARITY_ERRFRC" offset="0x144" width="32">
    
  <bitfield begin="22" description="RESERVED: Dont Use" end="20" id="b1tcm1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="Write pulse bit field: writing 3'b111 forces  a parity error for B1TCM of CR5A" end="16" id="b1tcm0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="14" description="RESERVED: Dont Use" end="12" id="b0tcm1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="Write pulse bit field: writing 3'b111 forces  a parity error for B0TCM of CR5A" end="8" id="b0tcm0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="RESERVED: Dont Use" end="4" id="atcm1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Write pulse bit field: writing 3'b111 forces  a parity error for ATCM of CR5A" end="0" id="atcm0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_REG3" description="" id="HW_SPARE_REG3" offset="0x148" width="32">
    
  <bitfield begin="31" description="Resereved for R&amp;D" end="0" id="NU" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="SPIA_IO_CFG" description="" id="SPIA_IO_CFG" offset="0x14C" width="32">
    
  <bitfield begin="18" description="RESERVED:Dont Use" end="16" id="miso_oen_by_cs" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="RESERVED:Dont Use" end="8" id="cs_pol" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="RESERVED:Dont Use" end="0" id="cs_deact" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="SPIB_IO_CFG" description="" id="SPIB_IO_CFG" offset="0x150" width="32">
    
  <bitfield begin="18" description="MIBSPIB MISO OE_N Control based on Chip selectCS-applicable in slave mode 1:MISO OEN controlled based on CS.When CS is inactive OE_N=1 0:MISO OEN controlled by IP" end="16" id="miso_oen_by_cs" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="MIBSPIB CS polarity-slave mode 1: Active high 0:Active low" end="8" id="cs_pol" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="1   : MIBSPIB External chip select is overridden with the value of MIBSPIB CS polarity-slave mode" end="0" id="cs_deact" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="SPI_HOST_IRQ" description="" id="SPI_HOST_IRQ" offset="0x154" width="32">
    
  <bitfield begin="2" description="HOST IRQ" end="0" id="host_irq" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="TPTC_DBS_CONFIG" description="" id="TPTC_DBS_CONFIG" offset="0x158" width="32">
    
  <bitfield begin="9" description="Default burst size tieoff value for TPTC_B0" end="8" id="tptc_b0" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="5" description="Default burst size tieoff value for TPTC_A1" end="4" id="tptc_a1" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="1" description="Default burst size tieoff value for TPTC_A0" end="0" id="tptc_a0" rwaccess="RW" width="2"></bitfield>
  </register>
  
  
  <register acronym="TPCC_PARITY_CTRL" description="" id="TPCC_PARITY_CTRL" offset="0x15C" width="32">
    
  <bitfield begin="16" description="Write pulse bit field: parity clear bit. Writing 1'b1 will clear the tpcc_a_parity_addr" end="16" id="tpcc_a_parity_err_clr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="parity test enable for tpcc a" end="4" id="tpcc_a_parity_testen" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="writing 1'b1 enables parity for TPCC_A" end="0" id="tpcc_a_parity_en" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="TPCC_PARITY_STATUS" description="" id="TPCC_PARITY_STATUS" offset="0x160" width="32">
    
  <bitfield begin="7" description="address where parity error happened for tpcca" end="0" id="tpcc_a_parity_addr" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_DBG_ACK_CTL0" description="" id="MSS_DBG_ACK_CTL0" offset="0x164" width="32">
    
  <bitfield begin="26" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="24" id="cpsw" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="20" id="dccd" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="16" id="dccc" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="14" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="12" id="dccb" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="8" id="dcca" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="4" id="cccb" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="0" id="ccca" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_DBG_ACK_CTL1" description="" id="MSS_DBG_ACK_CTL1" offset="0x168" width="32">
    
  <bitfield begin="26" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="24" id="scib" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="20" id="scia" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="16" id="i2c" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="14" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="12" id="mcrc" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="8" id="wdt" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="4" id="rti" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="0" id="dcan" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CONTROL" description="" id="CPSW_CONTROL" offset="0x16C" width="32">
    
  <bitfield begin="16" description="writing 1'b1 would disable the internal clock delays. And those delays need to be handled on board." end="16" id="rgmii1_id_mode" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="To select the rmii_ref_clk from PAD or from MSS_RCM.   0: clock will be from mss_rcm through IO internal loopback  1: will be from" end="8" id="rmii_ref_clk_oe_n" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Port 1 Interface  00 = GMII/MII 01 = RMII 10 = RGMII 11 = Not Supported" end="0" id="port1_mode_sel" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPCC_A_ERRAGG_MASK" description="" id="MSS_TPCC_A_ERRAGG_MASK" offset="0x170" width="32">
    
  <bitfield begin="26" description="Mask Error from MSS_TPTC_A1 to aggregated Error MSS_TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked" end="26" id="tptc_a1_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Mask Error from MSS_TPTC_A0 to aggregated Error MSS_TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked" end="25" id="tptc_a0_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Mask Error from MSS_TPCC_A to aggregated Error MSS_TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked" end="24" id="tpcc_a_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Mask Error from MSS_TPTC_A1 to aggregated Error MSS_TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked" end="18" id="tptc_a1_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Mask Error from MSS_TPTC_A0 to aggregated Error MSS_TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked" end="17" id="tptc_a0_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Mask Error from MSS_TPCC_A to aggregated Error MSS_TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked" end="16" id="tpcc_a_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Mask Error from MSS_TPCC_A to aggregated Error MSS_TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked" end="4" id="tpcc_a_par_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Mask Error from MSS_TPTC_A1 to aggregated Error MSS_TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked" end="3" id="tptc_a1_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Mask Error from MSS_TPTC_A0 to aggregated Error MSS_TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked" end="2" id="tptc_a0_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Mask Error from MSS_TPCC_A to aggregated Error MSS_TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked" end="1" id="tpcc_a_mpint" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Mask Error from MSS_TPCC_A to aggregated Error MSS_TPCC_A_ERRAGG 1 : Error is Masked 0 : Error is Unmasked" end="0" id="tpcc_a_errint" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPCC_A_ERRAGG_STATUS" description="" id="MSS_TPCC_A_ERRAGG_STATUS" offset="0x174" width="32">
    
  <bitfield begin="26" description="Status of Error from MSS_TPTC_A1.  Set only if Interupt is unmasked in MSS_TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error." end="26" id="tptc_a1_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Status of Error from MSS_TPTC_A0.  Set only if Interupt is unmasked in MSS_TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error." end="25" id="tptc_a0_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Status of Error from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error." end="24" id="tpcc_a_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Status of Error from MSS_TPTC_A1.  Set only if Interupt is unmasked in MSS_TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error." end="18" id="tptc_a1_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Status of Error from MSS_TPTC_A0.  Set only if Interupt is unmasked in MSS_TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error." end="17" id="tptc_a0_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Status of Error from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error." end="16" id="tpcc_a_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Status of Error from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error." end="4" id="tpcc_a_par_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Status of Error from MSS_TPTC_A1.  Set only if Interupt is unmasked in MSS_TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error." end="3" id="tptc_a1_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Status of Error from MSS_TPTC_A0.  Set only if Interupt is unmasked in MSS_TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error." end="2" id="tptc_a0_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Status of Error from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error." end="1" id="tpcc_a_mpint" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Status of Error from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_ERRAGG_MASK Wrie 0x1 to clear this Error." end="0" id="tpcc_a_errint" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPCC_A_ERRAGG_STATUS_RAW" description="" id="MSS_TPCC_A_ERRAGG_STATUS_RAW" offset="0x178" width="32">
    
  <bitfield begin="26" description="Raw Status of Error from MSS_TPTC_A1.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_ERRAGG_MASK" end="26" id="tptc_a1_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Raw Status of Error from MSS_TPTC_A0.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_ERRAGG_MASK" end="25" id="tptc_a0_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Raw Status of Error from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_ERRAGG_MASK" end="24" id="tpcc_a_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Raw Status of Error from MSS_TPTC_A1.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_ERRAGG_MASK" end="18" id="tptc_a1_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Raw Status of Error from MSS_TPTC_A0.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_ERRAGG_MASK" end="17" id="tptc_a0_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Raw Status of Error from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_ERRAGG_MASK" end="16" id="tpcc_a_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Raw Status of Error from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_ERRAGG_MASK" end="4" id="tpcc_a_par_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Raw Status of Error from MSS_TPTC_A1.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_ERRAGG_MASK" end="3" id="tptc_a1_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Raw Status of Error from MSS_TPTC_A0.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_ERRAGG_MASK" end="2" id="tptc_a0_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Raw Status of Error from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_ERRAGG_MASK" end="1" id="tpcc_a_mpint" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Raw Status of Error from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_ERRAGG_MASK" end="0" id="tpcc_a_errint" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPCC_A_INTAGG_MASK" description="" id="MSS_TPCC_A_INTAGG_MASK" offset="0x17C" width="32">
    
  <bitfield begin="17" description="Mask Interrupt from TPTC A1 to aggregated Interrupt MSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="17" id="tptc_a1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Mask Interrupt from TPTC A0 to aggregated Interrupt MSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="16" id="tptc_a0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Mask Interrupt from MSS_TPCC_A to aggregated Interrupt MSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="8" id="tpcc_a_int7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Mask Interrupt from MSS_TPCC_A to aggregated Interrupt MSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="7" id="tpcc_a_int6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Mask Interrupt from MSS_TPCC_A to aggregated Interrupt MSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="6" id="tpcc_a_int5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Mask Interrupt from MSS_TPCC_A to aggregated Interrupt MSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="5" id="tpcc_a_int4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Mask Interrupt from MSS_TPCC_A to aggregated Interrupt MSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="4" id="tpcc_a_int3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Mask Interrupt from MSS_TPCC_A to aggregated Interrupt MSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="3" id="tpcc_a_int2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Mask Interrupt from MSS_TPCC_A to aggregated Interrupt MSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="2" id="tpcc_a_int1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Mask Interrupt from TPCC A to aggregated Interrupt MSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="1" id="tpcc_a_int0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Mask Interrupt from MSS_TPCC_A to aggregated Interrupt MSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="0" id="tpcc_a_intg" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPCC_A_INTAGG_STATUS" description="" id="MSS_TPCC_A_INTAGG_STATUS" offset="0x180" width="32">
    
  <bitfield begin="17" description="Status of Interrupt from TPTC A1.  Set only if Interupt is unmasked in MSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="17" id="tptc_a1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Status of Interrupt from TPTC A0.  Set only if Interupt is unmasked in MSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="16" id="tptc_a0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Status of Interrupt from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="8" id="tpcc_a_int7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Status of Interrupt from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="7" id="tpcc_a_int6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Status of Interrupt from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="6" id="tpcc_a_int5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Status of Interrupt from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="5" id="tpcc_a_int4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Status of Interrupt from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="4" id="tpcc_a_int3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Status of Interrupt from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="3" id="tpcc_a_int2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Status of Interrupt from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="2" id="tpcc_a_int1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Status of Interrupt from TPCC A  Set only if Interupt is unmasked in MSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="1" id="tpcc_a_int0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Status of Interrupt from MSS_TPCC_A.  Set only if Interupt is unmasked in MSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="0" id="tpcc_a_intg" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPCC_A_INTAGG_STATUS_RAW" description="" id="MSS_TPCC_A_INTAGG_STATUS_RAW" offset="0x184" width="32">
    
  <bitfield begin="17" description="Raw Status of Interrupt from TPTC A1.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_INTAGG_MASK" end="17" id="tptc_a1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Raw Status of Interrupt from TPTC A0.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_INTAGG_MASK" end="16" id="tptc_a0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Raw Status of Interrupt from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_C_INTAGG_MASK" end="8" id="tpcc_a_int7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Raw Status of Interrupt from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_C_INTAGG_MASK" end="7" id="tpcc_a_int6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Raw Status of Interrupt from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_C_INTAGG_MASK" end="6" id="tpcc_a_int5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Raw Status of Interrupt from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_C_INTAGG_MASK" end="5" id="tpcc_a_int4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Raw Status of Interrupt from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_C_INTAGG_MASK" end="4" id="tpcc_a_int3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Raw Status of Interrupt from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_C_INTAGG_MASK" end="3" id="tpcc_a_int2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Raw Status of Interrupt from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_C_INTAGG_MASK" end="2" id="tpcc_a_int1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Raw Status of Interrupt from TPCC A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_A_INTAGG_MASK" end="1" id="tpcc_a_int0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Raw Status of Interrupt from MSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in MSS_TPCC_C_INTAGG_MASK" end="0" id="tpcc_a_intg" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_BUS_SAFETY_CTRL" description="" id="MSS_BUS_SAFETY_CTRL" offset="0x1A0" width="32">
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_RD_BUS_SAFETY_CTRL" description="" id="MSS_CR5A_AXI_RD_BUS_SAFETY_CTRL" offset="0x1A4" width="32">
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="type" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="8" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="err_clear" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_RD_BUS_SAFETY_FI" description="" id="MSS_CR5A_AXI_RD_BUS_SAFETY_FI" offset="0x1A8" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="safe" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="main" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="data" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="5" description="Refer to TPR12 Substem Microarch document for more details" end="5" id="ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Refer to TPR12 Substem Microarch document for more details" end="4" id="sec" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Refer to TPR12 Substem Microarch document for more details" end="3" id="global_safe_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="2" id="global_main_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Refer to TPR12 Substem Microarch document for more details" end="1" id="global_safe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="global_main" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_RD_BUS_SAFETY_ERR" description="" id="MSS_CR5A_AXI_RD_BUS_SAFETY_ERR" offset="0x1AC" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="ded" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="sec" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="comp_check" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="comp_err" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_RD_BUS_SAFETY_ERR_STAT_DATA0" description="" id="MSS_CR5A_AXI_RD_BUS_SAFETY_ERR_STAT_DATA0" offset="0x1B0" width="32">
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="d1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="d0" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_RD_BUS_SAFETY_ERR_STAT_CMD" description="" id="MSS_CR5A_AXI_RD_BUS_SAFETY_ERR_STAT_CMD" offset="0x1B4" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_RD_BUS_SAFETY_ERR_STAT_READ" description="" id="MSS_CR5A_AXI_RD_BUS_SAFETY_ERR_STAT_READ" offset="0x1B8" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_WR_BUS_SAFETY_CTRL" description="" id="MSS_CR5A_AXI_WR_BUS_SAFETY_CTRL" offset="0x1D4" width="32">
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="type" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="8" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="err_clear" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_WR_BUS_SAFETY_FI" description="" id="MSS_CR5A_AXI_WR_BUS_SAFETY_FI" offset="0x1D8" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="safe" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="main" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="data" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="5" description="Refer to TPR12 Substem Microarch document for more details" end="5" id="ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Refer to TPR12 Substem Microarch document for more details" end="4" id="sec" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Refer to TPR12 Substem Microarch document for more details" end="3" id="global_safe_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="2" id="global_main_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Refer to TPR12 Substem Microarch document for more details" end="1" id="global_safe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="global_main" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_WR_BUS_SAFETY_ERR" description="" id="MSS_CR5A_AXI_WR_BUS_SAFETY_ERR" offset="0x1DC" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="ded" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="sec" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="comp_check" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="comp_err" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_WR_BUS_SAFETY_ERR_STAT_DATA0" description="" id="MSS_CR5A_AXI_WR_BUS_SAFETY_ERR_STAT_DATA0" offset="0x1E0" width="32">
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="d1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="d0" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_WR_BUS_SAFETY_ERR_STAT_CMD" description="" id="MSS_CR5A_AXI_WR_BUS_SAFETY_ERR_STAT_CMD" offset="0x1E4" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_WR_BUS_SAFETY_ERR_STAT_WRITE" description="" id="MSS_CR5A_AXI_WR_BUS_SAFETY_ERR_STAT_WRITE" offset="0x1E8" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_WR_BUS_SAFETY_ERR_STAT_WRITERESP" description="" id="MSS_CR5A_AXI_WR_BUS_SAFETY_ERR_STAT_WRITERESP" offset="0x1EC" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_S_BUS_SAFETY_CTRL" description="" id="MSS_CR5A_AXI_S_BUS_SAFETY_CTRL" offset="0x20C" width="32">
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="type" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="8" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="err_clear" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_S_BUS_SAFETY_FI" description="" id="MSS_CR5A_AXI_S_BUS_SAFETY_FI" offset="0x210" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="safe" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="main" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="data" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="5" description="Refer to TPR12 Substem Microarch document for more details" end="5" id="ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Refer to TPR12 Substem Microarch document for more details" end="4" id="sec" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Refer to TPR12 Substem Microarch document for more details" end="3" id="global_safe_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="2" id="global_main_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Refer to TPR12 Substem Microarch document for more details" end="1" id="global_safe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="global_main" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_S_BUS_SAFETY_ERR" description="" id="MSS_CR5A_AXI_S_BUS_SAFETY_ERR" offset="0x214" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="ded" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="sec" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="comp_check" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="comp_err" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_S_BUS_SAFETY_ERR_STAT_DATA0" description="" id="MSS_CR5A_AXI_S_BUS_SAFETY_ERR_STAT_DATA0" offset="0x218" width="32">
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="d1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="d0" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_S_BUS_SAFETY_ERR_STAT_CMD" description="" id="MSS_CR5A_AXI_S_BUS_SAFETY_ERR_STAT_CMD" offset="0x21C" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_S_BUS_SAFETY_ERR_STAT_WRITE" description="" id="MSS_CR5A_AXI_S_BUS_SAFETY_ERR_STAT_WRITE" offset="0x220" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_S_BUS_SAFETY_ERR_STAT_READ" description="" id="MSS_CR5A_AXI_S_BUS_SAFETY_ERR_STAT_READ" offset="0x224" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AXI_S_BUS_SAFETY_ERR_STAT_WRITERESP" description="" id="MSS_CR5A_AXI_S_BUS_SAFETY_ERR_STAT_WRITERESP" offset="0x228" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_A_BUS_SAFETY_CTRL" description="" id="MSS_L2_A_BUS_SAFETY_CTRL" offset="0x470" width="32">
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="type" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="8" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="err_clear" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_A_BUS_SAFETY_FI" description="" id="MSS_L2_A_BUS_SAFETY_FI" offset="0x474" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="safe" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="main" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="data" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="5" description="Refer to TPR12 Substem Microarch document for more details" end="5" id="ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Refer to TPR12 Substem Microarch document for more details" end="4" id="sec" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Refer to TPR12 Substem Microarch document for more details" end="3" id="global_safe_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="2" id="global_main_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Refer to TPR12 Substem Microarch document for more details" end="1" id="global_safe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="global_main" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_A_BUS_SAFETY_ERR" description="" id="MSS_L2_A_BUS_SAFETY_ERR" offset="0x478" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="ded" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="sec" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="comp_check" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="comp_err" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_A_BUS_SAFETY_ERR_STAT_DATA0" description="" id="MSS_L2_A_BUS_SAFETY_ERR_STAT_DATA0" offset="0x47C" width="32">
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="d1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="d0" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_A_BUS_SAFETY_ERR_STAT_CMD" description="" id="MSS_L2_A_BUS_SAFETY_ERR_STAT_CMD" offset="0x480" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_A_BUS_SAFETY_ERR_STAT_WRITE" description="" id="MSS_L2_A_BUS_SAFETY_ERR_STAT_WRITE" offset="0x484" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_A_BUS_SAFETY_ERR_STAT_READ" description="" id="MSS_L2_A_BUS_SAFETY_ERR_STAT_READ" offset="0x488" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_A_BUS_SAFETY_ERR_STAT_WRITERESP" description="" id="MSS_L2_A_BUS_SAFETY_ERR_STAT_WRITERESP" offset="0x48C" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_B_BUS_SAFETY_CTRL" description="" id="MSS_L2_B_BUS_SAFETY_CTRL" offset="0x490" width="32">
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="type" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="8" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="err_clear" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_B_BUS_SAFETY_FI" description="" id="MSS_L2_B_BUS_SAFETY_FI" offset="0x494" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="safe" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="main" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="data" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="5" description="Refer to TPR12 Substem Microarch document for more details" end="5" id="ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Refer to TPR12 Substem Microarch document for more details" end="4" id="sec" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Refer to TPR12 Substem Microarch document for more details" end="3" id="global_safe_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="2" id="global_main_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Refer to TPR12 Substem Microarch document for more details" end="1" id="global_safe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="global_main" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_B_BUS_SAFETY_ERR" description="" id="MSS_L2_B_BUS_SAFETY_ERR" offset="0x498" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="ded" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="sec" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="comp_check" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="comp_err" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_B_BUS_SAFETY_ERR_STAT_DATA0" description="" id="MSS_L2_B_BUS_SAFETY_ERR_STAT_DATA0" offset="0x49C" width="32">
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="d1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="d0" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_B_BUS_SAFETY_ERR_STAT_CMD" description="" id="MSS_L2_B_BUS_SAFETY_ERR_STAT_CMD" offset="0x4A0" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_B_BUS_SAFETY_ERR_STAT_WRITE" description="" id="MSS_L2_B_BUS_SAFETY_ERR_STAT_WRITE" offset="0x4A4" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_B_BUS_SAFETY_ERR_STAT_READ" description="" id="MSS_L2_B_BUS_SAFETY_ERR_STAT_READ" offset="0x4A8" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_B_BUS_SAFETY_ERR_STAT_WRITERESP" description="" id="MSS_L2_B_BUS_SAFETY_ERR_STAT_WRITERESP" offset="0x4AC" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_BUS_SAFETY_SEC_ERR_STAT0" description="" id="MSS_BUS_SAFETY_SEC_ERR_STAT0" offset="0x510" width="32">
    
  <bitfield begin="26" description="Bus safety single-bit-error of Node mentioned in the field" end="26" id="l2ram1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="25" description="Bus safety single-bit-error of Node mentioned in the field" end="25" id="l2ram0" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="Bus safety single-bit-error of Node mentioned in the field" end="4" id="cr5a_slv" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Bus safety single-bit-error of Node mentioned in the field" end="2" id="cr5a_wr" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Bus safety single-bit-error of Node mentioned in the field" end="0" id="cr5a_rd" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_BUS_SAFETY_SEC_ERR_STAT1" description="" id="MSS_BUS_SAFETY_SEC_ERR_STAT1" offset="0x514" width="32">
    
  <bitfield begin="4" description="Bus safety single-bit-error of Node mentioned in the field" end="4" id="l2ram2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="Bus safety single-bit-error of Node mentioned in the field" end="3" id="r5ss2dss" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Bus safety single-bit-error of Node mentioned in the field" end="2" id="dss2r5ss" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Bus safety single-bit-error of Node mentioned in the field" end="1" id="r5ss2mss" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Bus safety single-bit-error of Node mentioned in the field" end="0" id="mss2r5ss" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="HW_REG0" description="" id="HW_REG0" offset="0x518" width="32">
    
  <bitfield begin="31" description="HW reserved Regsiter" end="0" id="hwreg0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG1" description="" id="HW_REG1" offset="0x51C" width="32">
    
  <bitfield begin="31" description="HW reserved Regsiter" end="0" id="hwreg1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PREVIOUS_NAME" description="" id="PREVIOUS_NAME" offset="0x520" width="32">
    
  <bitfield begin="31" description="HW reserved Register" end="25" id="hwreg2" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="24" description="Writing 1'b1  will allow CPSW ping-pong switch to happen during debugger reads (through JTAG)." end="24" id="dbg_pp_switch_en" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing 1'b1 takes override on the CPWS ping-pong switch.Ping-pong switch doesn   t happen even after reading the configured end-address." end="20" id="pp_switch_ovr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="CPSW clock stop req" end="16" id="CPSW_CLK_STOP_REQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Write pulse bit field: Write 1'b1 whenever ping_pong_sel needs to be set." end="12" id="set" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Write pulse bit field: Write 1'b1 whenever ping_pong_sel needs to be cleared." end="8" id="clr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="1'b0: CRC disable  1'b1:  CRC enable" end="4" id="crc_enable" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="1'b0 : CRC16CCITT 1'b1 : ETHERNET CRC32" end="0" id="crc_mode" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HW_REG3" description="" id="HW_REG3" offset="0x524" width="32">
    
  <bitfield begin="31" description="HW reserved Register" end="9" id="hwreg3" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="CPSW clock stop idle" end="8" id="CPSW_CLK_STOP_IDLE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="CPSW clock stop ack" end="4" id="CPSW_CLK_STOP_ACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="This denotes the status of ping_pong_sel bit." end="0" id="ro" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="HW_REG4" description="" id="HW_REG4" offset="0x528" width="32">
    
  <bitfield begin="31" description="Configures the timeout value for MSS_PCRA." end="0" id="mss_pcrA_timeout_cfg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG5" description="" id="HW_REG5" offset="0x52C" width="32">
    
  <bitfield begin="31" description="HW reserved Register" end="0" id="hwreg5" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG6" description="" id="HW_REG6" offset="0x530" width="32">
    
  <bitfield begin="31" description="HW reserved Register" end="0" id="hwreg6" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG7" description="" id="HW_REG7" offset="0x534" width="32">
    
  <bitfield begin="31" description="HW reserved Register" end="0" id="hwreg7" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AHB_BUS_SAFETY_CTRL" description="" id="MSS_CR5A_AHB_BUS_SAFETY_CTRL" offset="0x5B8" width="32">
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="type" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="8" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="err_clear" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AHB_BUS_SAFETY_FI" description="" id="MSS_CR5A_AHB_BUS_SAFETY_FI" offset="0x5BC" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="safe" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="main" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="data" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="5" description="Refer to TPR12 Substem Microarch document for more details" end="5" id="ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Refer to TPR12 Substem Microarch document for more details" end="4" id="sec" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Refer to TPR12 Substem Microarch document for more details" end="3" id="global_safe_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to TPR12 Substem Microarch document for more details" end="2" id="global_main_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Refer to TPR12 Substem Microarch document for more details" end="1" id="global_safe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="global_main" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AHB_BUS_SAFETY_ERR" description="" id="MSS_CR5A_AHB_BUS_SAFETY_ERR" offset="0x5C0" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="24" id="ded" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to TPR12 Substem Microarch document for more details" end="16" id="sec" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="comp_check" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="comp_err" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AHB_BUS_SAFETY_ERR_STAT_DATA0" description="" id="MSS_CR5A_AHB_BUS_SAFETY_ERR_STAT_DATA0" offset="0x5C4" width="32">
    
  <bitfield begin="15" description="Refer to TPR12 Substem Microarch document for more details" end="8" id="d1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="d0" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AHB_BUS_SAFETY_ERR_STAT_CMD" description="" id="MSS_CR5A_AHB_BUS_SAFETY_ERR_STAT_CMD" offset="0x5C8" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AHB_BUS_SAFETY_ERR_STAT_WRITE" description="" id="MSS_CR5A_AHB_BUS_SAFETY_ERR_STAT_WRITE" offset="0x5CC" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AHB_BUS_SAFETY_ERR_STAT_READ" description="" id="MSS_CR5A_AHB_BUS_SAFETY_ERR_STAT_READ" offset="0x5D0" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_AHB_BUS_SAFETY_ERR_STAT_WRITERESP" description="" id="MSS_CR5A_AHB_BUS_SAFETY_ERR_STAT_WRITERESP" offset="0x5D4" width="32">
    
  <bitfield begin="31" description="Refer to TPR12 Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DMM_CTRL_REG" description="" id="DMM_CTRL_REG" offset="0x5F8" width="32">
    
  <bitfield begin="0" description="0: SOC will be able to send the packet to DMMA/B    1:   PAD will be able to send the packet to DMMA/B controlling from PAD" end="0" id="dmm_pad_select" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_MBOX_WRITE_DONE" description="" id="MSS_CR5A_MBOX_WRITE_DONE" offset="0x5FC" width="32">
    
  <bitfield begin="28" description="Write pulse bit field: This register should be written once finishing writing into the mailbox memory of processor 7" end="28" id="proc_7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Write pulse bit field: This register should be written once finishing writing into the mailbox memory of processor 6" end="24" id="proc_6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Write pulse bit field: This register should be written once finishing writing into the mailbox memory of processor 5" end="20" id="proc_5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Write pulse bit field: This register should be written once finishing writing into the mailbox memory of processor 4" end="16" id="proc_4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Write pulse bit field: This register should be written once finishing writing into the mailbox memory of processor 3" end="12" id="proc_3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Write pulse bit field: This register should be written once finishing writing into the mailbox memory of processor 2" end="8" id="proc_2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Write pulse bit field: This register should be written once finishing writing into the mailbox memory of processor 1" end="4" id="proc_1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Write pulse bit field: This register should be written once finishing writing into the mailbox memory of processor 0" end="0" id="proc_0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_MBOX_READ_REQ" description="" id="MSS_CR5A_MBOX_READ_REQ" offset="0x600" width="32">
    
  <bitfield begin="28" description="This is request from  processor 7 to mss_cr5a. Requesting it to read from mailbox." end="28" id="proc_7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="This is request from  processor 6 to mss_cr5a. Requesting it to read from mailbox." end="24" id="proc_6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="This is request from  processor 5 to mss_cr5a. Requesting it to read from mailbox." end="20" id="proc_5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="This is request from  processor 4 to mss_cr5a. Requesting it to read from mailbox." end="16" id="proc_4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="This is request from  processor 3 to mss_cr5a. Requesting it to read from mailbox." end="12" id="proc_3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="This is request from  processor 2 to mss_cr5a. Requesting it to read from mailbox." end="8" id="proc_2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="This is request from  processor 1 to mss_cr5a. Requesting it to read from mailbox." end="4" id="proc_1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="This is request from  processor 0 to mss_cr5a. Requesting it to read from mailbox." end="0" id="proc_0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_MBOX_READ_DONE" description="" id="MSS_CR5A_MBOX_READ_DONE" offset="0x604" width="32">
    
  <bitfield begin="28" description="This register should be written once finishing reading from CR5A's mailbox written by proc 7" end="28" id="proc_7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="This register should be written once finishing reading from CR5A's mailbox written by proc 6" end="24" id="proc_6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="This register should be written once finishing reading from CR5A's mailbox written by proc 5" end="20" id="proc_5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="This register should be written once finishing reading from CR5A's mailbox written by proc 4" end="16" id="proc_4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="This register should be written once finishing reading from CR5A's mailbox written by proc 3" end="12" id="proc_3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="This register should be written once finishing reading from CR5A's mailbox written by proc 2" end="8" id="proc_2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="This register should be written once finishing reading from CR5A's mailbox written by proc 1" end="4" id="proc_1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="This register should be written once finishing reading from CR5A's mailbox written by proc 0" end="0" id="proc_0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_PBIST_KEY_RST" description="" id="MSS_PBIST_KEY_RST" offset="0x614" width="32">
    
  <bitfield begin="7" description="MSS PBIST controller will be brought out of reset when value is 0xA" end="4" id="pbist_st_rst" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="Top PBIST Selftest Key. Valid value is 0x5" end="0" id="pbist_st_key" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="MSS_PBIST_REG0" description="" id="MSS_PBIST_REG0" offset="0x618" width="32">
    
  <bitfield begin="31" description="" end="0" id="pbist_reg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_PBIST_REG1" description="" id="MSS_PBIST_REG1" offset="0x61C" width="32">
    
  <bitfield begin="31" description="" end="0" id="pbist_reg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_PBIST_REG2" description="" id="MSS_PBIST_REG2" offset="0x620" width="32">
    
  <bitfield begin="31" description="" end="0" id="pbist_reg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_CONFIG" description="" id="MSS_QSPI_CONFIG" offset="0x624" width="32">
    
  <bitfield begin="10" description="Write 3'b111 to take board level loop back clock for QSPI" end="8" id="clk_loopback" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Write 3'b111 to external clock as QSPI baud clock source     needed for DFT IO char." end="0" id="ext_clk" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_STC_CONTROL" description="" id="MSS_STC_CONTROL" offset="0x628" width="32">
    
  <bitfield begin="2" description="writing 3'b111 will bypass the wfi signals from R5SS." end="0" id="cr5_wfi_overide" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CTI_TRIG_SEL" description="" id="MSS_CTI_TRIG_SEL" offset="0x62C" width="32">
    
  <bitfield begin="7" description="Used for selecting the trigger source for 8th trigger of MSS_CTI" end="0" id="trig8_sel" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_DBGSS_CTI_TRIG_SEL" description="" id="MSS_DBGSS_CTI_TRIG_SEL" offset="0x630" width="32">
    
  <bitfield begin="23" description="Used for selecting the trigger source for 3rd trigger  of ONE_MCU_CTI" end="16" id="trig3" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Used for selecting the trigger source for 2nd trigger of ONE_MCU_CTI" end="8" id="trig2" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="Used for selecting the trigger source for 1st trigger  of ONE_MCU_CTI" end="0" id="trig1" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_BOOT_INFO_REG0" description="" id="MSS_BOOT_INFO_REG0" offset="0x634" width="32">
    
  <bitfield begin="31" description="Reserved Register for Software use" end="0" id="config" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_BOOT_INFO_REG1" description="" id="MSS_BOOT_INFO_REG1" offset="0x638" width="32">
    
  <bitfield begin="31" description="Reserved Register for Software use" end="0" id="config" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_BOOT_INFO_REG2" description="" id="MSS_BOOT_INFO_REG2" offset="0x63C" width="32">
    
  <bitfield begin="31" description="Reserved Register for Software use" end="0" id="config" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_BOOT_INFO_REG3" description="" id="MSS_BOOT_INFO_REG3" offset="0x640" width="32">
    
  <bitfield begin="31" description="Reserved Register for Software use" end="0" id="config" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_BOOT_INFO_REG4" description="" id="MSS_BOOT_INFO_REG4" offset="0x644" width="32">
    
  <bitfield begin="31" description="Reserved Register for Software use" end="0" id="config" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_BOOT_INFO_REG5" description="" id="MSS_BOOT_INFO_REG5" offset="0x648" width="32">
    
  <bitfield begin="31" description="Reserved Register for Software use" end="0" id="config" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_BOOT_INFO_REG6" description="" id="MSS_BOOT_INFO_REG6" offset="0x64C" width="32">
    
  <bitfield begin="31" description="Reserved Register for Software use" end="0" id="config" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_BOOT_INFO_REG7" description="" id="MSS_BOOT_INFO_REG7" offset="0x650" width="32">
    
  <bitfield begin="31" description="Reserved Register for Software use" end="0" id="config" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPTC_ECCAGGR_CLK_CNTRL" description="" id="MSS_TPTC_ECCAGGR_CLK_CNTRL" offset="0x654" width="32">
    
  <bitfield begin="2" description="Writing  '0' will gate the clock to TPTC_B0-FIFO during  ECC-AGGR interaction(fault injection)" end="2" id="tptc_B0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Writing  '0' will gate the clock to TPTC_A1-FIFO during  ECC-AGGR interaction(fault injection)" end="1" id="tptc_A1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Writing  '0' will gate the clock to TPTC_A0-FIFO during  ECC-AGGR interaction(fault injection)" end="0" id="tptc_A0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_PERIPH_ERRAGG_MASK0" description="" id="MSS_PERIPH_ERRAGG_MASK0" offset="0x658" width="32">
    
  <bitfield begin="27" description="RESERVED:Dont Use" end="27" id="top_mdo_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="RESERVED:Dont Use" end="26" id="top_mdo_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Mask Interrupt from RSS_RCM to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="25" id="rcss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Mask Interrupt from RSS_RCM to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="24" id="rcss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Mask Interrupt from RSS_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="23" id="rcss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Mask Interrupt from RSS_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="22" id="rcss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Mask Interrupt from HWA_CFG to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="21" id="hwa_cfg_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Mask Interrupt from HWA_CFG to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="20" id="hwa_cfg_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="RESERVED:Dont Use" end="19" id="dss_cm4_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="RESERVED:Dont Use" end="18" id="dss_cm4_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Mask Interrupt from DSS_RCM to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="17" id="dss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Mask Interrupt from DSS_RCM to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="16" id="dss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Mask Interrupt from DSS_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="15" id="dss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Mask Interrupt from DSS_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="14" id="dss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Mask Interrupt from HSM_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="13" id="hsm_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Mask Interrupt from HSM_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="12" id="hsm_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Mask Interrupt from HSM_SOC_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="11" id="hsm_soc_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Mask Interrupt from HSM_SOC_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="10" id="hsm_soc_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="RESERVED:Dont Use" end="9" id="top_aurora_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="RESERVED:Dont Use" end="8" id="top_aurora_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Mask Interrupt from TOP_RCM to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="7" id="top_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Mask Interrupt from TOP_RCM to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="6" id="top_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Mask Interrupt from TOP_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="5" id="top_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Mask Interrupt from TOP_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="4" id="top_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Mask Interrupt from MSS_RCM to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="3" id="mss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Mask Interrupt from MSS_RCM to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="2" id="mss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Mask Interrupt from MSS_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="1" id="mss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Mask Interrupt from MSS_CTRL to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="0" id="mss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_PERIPH_ERRAGG_STATUS0" description="" id="MSS_PERIPH_ERRAGG_STATUS0" offset="0x65C" width="32">
    
  <bitfield begin="27" description="RESERVED:Dont Use" end="27" id="top_mdo_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="RESERVED:Dont Use" end="26" id="top_mdo_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Status of Interrupt from RSS_RCM Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="25" id="rcss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Status of Interrupt from RSS_RCM Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="24" id="rcss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Status of Interrupt from RSS_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="23" id="rcss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Status of Interrupt from RSS_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="22" id="rcss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Status of Interrupt from HWA_CFG Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="21" id="hwa_cfg_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Status of Interrupt from HWA_CFG Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="20" id="hwa_cfg_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="RESERVED:Dont Use" end="19" id="dss_cm4_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="RESERVED:Dont Use" end="18" id="dss_cm4_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Status of Interrupt from DSS_RCM Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="17" id="dss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Status of Interrupt from DSS_RCM Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="16" id="dss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Status of Interrupt from DSS_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="15" id="dss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Status of Interrupt from DSS_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="14" id="dss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Status of Interrupt from HSM_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="13" id="hsm_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Status of Interrupt from HSM_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="12" id="hsm_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Status of Interrupt from HSM_SOC_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="11" id="hsm_soc_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Status of Interrupt from HSM_SOC_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="10" id="hsm_soc_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="RESERVED:Dont Use" end="9" id="top_aurora_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="RESERVED:Dont Use" end="8" id="top_aurora_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Status of Interrupt from TOP_RCM Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="7" id="top_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Status of Interrupt from TOP_RCM Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="6" id="top_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Status of Interrupt from TOP_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="5" id="top_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Status of Interrupt from TOP_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="4" id="top_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Status of Interrupt from MSS_RCM Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="3" id="mss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Status of Interrupt from MSS_RCM Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="2" id="mss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Status of Interrupt from MSS_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="1" id="mss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Status of Interrupt from MSS_CTRL Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK0 Wrie 0x1 to clear this interrupt." end="0" id="mss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_PERIPH_ERRAGG_STATUS_RAW0" description="" id="MSS_PERIPH_ERRAGG_STATUS_RAW0" offset="0x660" width="32">
    
  <bitfield begin="27" description="RESERVED:Dont Use" end="27" id="top_mdo_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="RESERVED:Dont Use" end="26" id="top_mdo_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Raw Status of Interrupt from RSS_RCM.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="25" id="rcss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Raw Status of Interrupt from RSS_RCM.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="24" id="rcss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Raw Status of Interrupt from RSS_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="23" id="rcss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Raw Status of Interrupt from RSS_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="22" id="rcss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Raw Status of Interrupt from HWA_CFG.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="21" id="hwa_cfg_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Raw Status of Interrupt from HWA_CFG.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="20" id="hwa_cfg_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="RESERVED:Dont Use" end="19" id="dss_cm4_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="RESERVED:Dont Use" end="18" id="dss_cm4_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Raw Status of Interrupt from DSS_RCM.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="17" id="dss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Raw Status of Interrupt from DSS_RCM.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="16" id="dss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Raw Status of Interrupt from DSS_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="15" id="dss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Raw Status of Interrupt from DSS_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="14" id="dss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Raw Status of Interrupt from HSM_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="13" id="hsm_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Raw Status of Interrupt from HSM_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="12" id="hsm_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Raw Status of Interrupt from HSM_SOC_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="11" id="hsm_soc_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Raw Status of Interrupt from HSM_SOC_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="10" id="hsm_soc_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="RESERVED:Dont Use" end="9" id="top_aurora_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="RESERVED:Dont Use" end="8" id="top_aurora_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Raw Status of Interrupt from TOP_RCM.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="7" id="top_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Raw Status of Interrupt from TOP_RCM.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="6" id="top_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Raw Status of Interrupt from TOP_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="5" id="top_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Raw Status of Interrupt from TOP_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="4" id="top_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Raw Status of Interrupt from MSS_RCM.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="3" id="mss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Raw Status of Interrupt from MSS_RCM.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="2" id="mss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Raw Status of Interrupt from MSS_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="1" id="mss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Raw Status of Interrupt from MSS_CTRL.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK0" end="0" id="mss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_PERIPH_ERRAGG_MASK1" description="" id="MSS_PERIPH_ERRAGG_MASK1" offset="0x664" width="32">
    
  <bitfield begin="16" description="Mask Interrupt from  MPU_DSS_HSM to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="16" id="mpu_rd_hsm" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Mask Interrupt from  MPU_DSS_MBOX to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="15" id="mpu_rd_dss_mbox" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="RESERVED:Dont Use" end="14" id="mpu_rd_dss_hwa_proc" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="MRESERVED:Dont Use" end="13" id="mpu_rd_dss_hwa_dma1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="RESERVED:Dont Use" end="12" id="mpu_rd_dss_hwa_dma0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="RESERVED:Dont Use" end="11" id="mpu_rd_dss_l3_bankd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="RESERVED:Dont Use" end="10" id="mpu_rd_dss_l3_bankc" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Mask Interrupt from  MPU_DSS_L3_BANKB to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="9" id="mpu_rd_dss_l3_bankb" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Mask Interrupt from  MPU_DSS_L3_BANKA to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="8" id="mpu_rd_dss_l3_banka" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Mask Interrupt from  MPU_MSS_L2_BANKC to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="7" id="mpu_rd_mss_cr5b_axis" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Mask Interrupt from  MPU_MSS_CR5A_AXIS to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="6" id="mpu_rd_mss_cr5a_axis" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Mask Interrupt from  MPU_MSS_QSPI to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="5" id="mpu_rd_mss_qspi" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Mask Interrupt from  MPU_MSS_PCRA to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="4" id="mpu_rd_mss_pcra" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Mask Interrupt from  MPU_MSS_MBOX to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="3" id="mpu_rd_mss_mbox" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Mask Interrupt from  MPU_HSM_DTHE to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="2" id="mpu_rd_hsm_dthe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Mask Interrupt from  MPU_MSS_L2_BANKB to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="1" id="mpu_rd_mss_l2_bankb" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Mask Interrupt from  MPU_MSS_L2_BANKA to aggregated Interrupt MSS_PERIPH_ACCESS_ERRAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="0" id="mpu_rd_mss_l2_banka" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_PERIPH_ERRAGG_STATUS1" description="" id="MSS_PERIPH_ERRAGG_STATUS1" offset="0x668" width="32">
    
  <bitfield begin="16" description="Status of Interrupt from MPU_HSM Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="16" id="mpu_rd_hsm" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Status of Interrupt from MPU_DSS_MBOX Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="15" id="mpu_rd_dss_mbox" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="RESERVED:Dont Use" end="14" id="mpu_rd_dss_hwa_proc" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="RESERVED:Dont Use" end="13" id="mpu_rd_dss_hwa_dma1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="RESERVED:Dont Use" end="12" id="mpu_rd_dss_hwa_dma0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="RESERVED:Dont Use" end="11" id="mpu_rd_dss_l3_bankd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="RESERVED:Dont Use" end="10" id="mpu_rd_dss_l3_bankc" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Status of Interrupt from MPU_DSS_L3_BANKB Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="9" id="mpu_rd_dss_l3_bankb" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Status of Interrupt from MPU_DSS_L3_BANKA Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="8" id="mpu_rd_dss_l3_banka" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Status of Interrupt from MPU_MSS_L2_BANKC Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="7" id="mpu_rd_mss_cr5b_axis" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Status of Interrupt from MPU_MSS_CR5A_AXIS Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="6" id="mpu_rd_mss_cr5a_axis" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Status of Interrupt from MPU_MSS_QSPI Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="5" id="mpu_rd_mss_qspi" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Status of Interrupt from MPU_MSS_PCRA Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="4" id="mpu_rd_mss_pcra" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Status of Interrupt from MPU_MSS_MBOX Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="3" id="mpu_rd_mss_mbox" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Status of Interrupt from MPU_HSM_DTHE Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="2" id="mpu_rd_hsm_dthe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Status of Interrupt from MPU_MSS_L2_BANKB Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="1" id="mpu_rd_mss_l2_bankb" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Status of Interrupt from MPU_MSS_L2_BANKA Set only if Interupt is unmasked in MSS_PERIPH_ERRAGG_MASK1 Wrie 0x1 to clear this interrupt." end="0" id="mpu_rd_mss_l2_banka" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_PERIPH_ERRAGG_STATUS_RAW1" description="" id="MSS_PERIPH_ERRAGG_STATUS_RAW1" offset="0x66C" width="32">
    
  <bitfield begin="16" description="Raw Status of Interrupt from MPU_HSM.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="16" id="mpu_rd_hsm" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Raw Status of Interrupt from MPU_DSS_MBOX.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="15" id="mpu_rd_dss_mbox" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="RESERVED:Dont Use" end="14" id="mpu_rd_dss_hwa_proc" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="RESERVED:Dont Use" end="13" id="mpu_rd_dss_hwa_dma1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="RESERVED:Dont Use" end="12" id="mpu_rd_dss_hwa_dma0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="RESERVED:Dont Use" end="11" id="mpu_rd_dss_l3_bankd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="RESERVED:Dont Use" end="10" id="mpu_rd_dss_l3_bankc" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Raw Status of Interrupt from MPU_DSS_L3_BANKB.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="9" id="mpu_rd_dss_l3_bankb" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Raw Status of Interrupt from MPU_DSS_L3_BANKA.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="8" id="mpu_rd_dss_l3_banka" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Raw Status of Interrupt from MPU_MSS_L2_BANKC.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="7" id="mpu_rd_mss_cr5b_axis" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Raw Status of Interrupt from MPU_MSS_CR5A_AXIS.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="6" id="mpu_rd_mss_cr5a_axis" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Raw Status of Interrupt from MPU_MSS_QSPI.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="5" id="mpu_rd_mss_qspi" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Raw Status of Interrupt from MPU_MSS_PCRA.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="4" id="mpu_rd_mss_pcra" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Raw Status of Interrupt from MPU_MSS_MBOX.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="3" id="mpu_rd_mss_mbox" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Raw Status of Interrupt from MPU_HSM_DTHE.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="2" id="mpu_rd_hsm_dthe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Raw Status of Interrupt from MPU_MSS_L2_BANKB.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="1" id="mpu_rd_mss_l2_bankb" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Raw Status of Interrupt from MPU_MSS_L2_BANKA.  Set irrespective if the Interupt is masked or unmasked in MSS_PERIPH_ERRAGG_MASK1" end="0" id="mpu_rd_mss_l2_banka" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT0_REG" description="" id="MSS_DMM_EVENT0_REG" offset="0x670" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger for RSS_CSI2A_EOL_CNTX1_INT" end="24" id="event_trig3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger for RSS_CSI2A_EOL_CNTX0_INT" end="16" id="event_trig2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger for RSS_CSI2A_SOF_INT1" end="8" id="event_trig1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger for RSS_CSI2A_SOF_INT0" end="0" id="event_trig0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT1_REG" description="" id="MSS_DMM_EVENT1_REG" offset="0x674" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger for RSS_CSI2A_EOL_CNTX5_INT" end="24" id="event_trig7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger for RSS_CSI2A_EOL_CNTX4_INT" end="16" id="event_trig6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger for RSS_CSI2A_EOL_CNTX3_INT" end="8" id="event_trig5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger for RSS_CSI2A_EOL_CNTX2_INT" end="0" id="event_trig4" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT2_REG" description="" id="MSS_DMM_EVENT2_REG" offset="0x678" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel11" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger for RSS_ADC_CAPTURE_COMPLETE (to DMA)" end="24" id="event_trig11" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel10" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger for DFE_FRAME_START_TO_DSS" end="16" id="event_trig10" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel9" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger for RSS_CSI2A_EOL_CNTX7_INT" end="8" id="event_trig9" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel8" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger for RSS_CSI2A_EOL_CNTX6_INT" end="0" id="event_trig8" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT3_REG" description="" id="MSS_DMM_EVENT3_REG" offset="0x67C" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel15" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger for RSS_ADC_CAPTURE_COMPLETE (to interrupts)" end="24" id="event_trig15" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel14" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger for FRC_LOGICAL_FRAME_END" end="16" id="event_trig14" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel13" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger for FRC_LOGICAL_FRAME_START" end="8" id="event_trig13" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel12" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger for RSS_DATA_CAPTURE_ENABLE_FALL" end="0" id="event_trig12" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT4_REG" description="" id="MSS_DMM_EVENT4_REG" offset="0x680" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel19" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger Reserved" end="24" id="event_trig19" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger Reserved" end="16" id="event_trig18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel17" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger Reserved" end="8" id="event_trig17" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel16" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger for ADC_CLK_ENABLE_VALID" end="0" id="event_trig16" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT5_REG" description="" id="MSS_DMM_EVENT5_REG" offset="0x684" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel23" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger Reserved" end="24" id="event_trig23" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel22" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger Reserved" end="16" id="event_trig22" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel21" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger Reserved" end="8" id="event_trig21" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel20" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger Reserved" end="0" id="event_trig20" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT6_REG" description="" id="MSS_DMM_EVENT6_REG" offset="0x688" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel27" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger Reserved" end="24" id="event_trig27" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel26" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger Reserved" end="16" id="event_trig26" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel25" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger Reserved" end="8" id="event_trig25" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel24" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger Reserved" end="0" id="event_trig24" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT7_REG" description="" id="MSS_DMM_EVENT7_REG" offset="0x68C" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel31" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger for DSS_HWA_THREAD1_PARAM_DONE" end="24" id="event_trig31" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel30" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger for DSS_HWA_THREAD1_LOOP" end="16" id="event_trig30" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel29" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger Reserved" end="8" id="event_trig29" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel28" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger Reserved" end="0" id="event_trig28" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT8_REG" description="" id="MSS_DMM_EVENT8_REG" offset="0x690" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel35" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger Reserved" end="24" id="event_trig35" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel34" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger for DSS_HWA_LOCAL_RAM_ERR" end="16" id="event_trig34" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel33" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger for DSS_HWA_THREAD2_PARAM_DONE" end="8" id="event_trig33" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel32" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger for DSS_HWA_THREAD2_LOOP" end="0" id="event_trig32" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT9_REG" description="" id="MSS_DMM_EVENT9_REG" offset="0x694" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel39" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger Reserved" end="24" id="event_trig39" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel38" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger Reserved" end="16" id="event_trig38" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel37" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger Reserved" end="8" id="event_trig37" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel36" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger Reserved" end="0" id="event_trig36" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT10_REG" description="" id="MSS_DMM_EVENT10_REG" offset="0x698" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel43" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger Reserved" end="24" id="event_trig43" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel42" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger Reserved" end="16" id="event_trig42" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel41" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger Reserved" end="8" id="event_trig41" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel40" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger Reserved" end="0" id="event_trig40" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT11_REG" description="" id="MSS_DMM_EVENT11_REG" offset="0x69C" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel47" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger For MSS_MCANA_FE_INT source 2" end="24" id="event_trig47" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel46" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger For MSS_MCANA_FE_INT source 1" end="16" id="event_trig46" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel45" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger For MSS_MCANA_FE_INT source 0" end="8" id="event_trig45" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel44" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger Reserved" end="0" id="event_trig44" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT12_REG" description="" id="MSS_DMM_EVENT12_REG" offset="0x6A0" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel51" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger For MSS_MCANA_FE_INT source 1" end="24" id="event_trig51" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel50" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger For MSS_MCANA_FE_INT source 0" end="16" id="event_trig50" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel49" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger For MSS_MCANA_INT1" end="8" id="event_trig49" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel48" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger For MSS_MCANA_INT0" end="0" id="event_trig48" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT13_REG" description="" id="MSS_DMM_EVENT13_REG" offset="0x6A4" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel55" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger Reserved" end="24" id="event_trig55" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel54" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger For MSS_MCANB_INT1" end="16" id="event_trig54" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel53" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger For MSS_MCANB_INT0" end="8" id="event_trig53" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel52" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger For MSS_MCANA_FE_INT source 2" end="0" id="event_trig52" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT14_REG" description="" id="MSS_DMM_EVENT14_REG" offset="0x6A8" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel59" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger Reserved" end="24" id="event_trig59" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel58" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger Reserved" end="16" id="event_trig58" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel57" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger Reserved" end="8" id="event_trig57" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel56" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger Reserved" end="0" id="event_trig56" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_EVENT15_REG" description="" id="MSS_DMM_EVENT15_REG" offset="0x6AC" width="32">
    
  <bitfield begin="28" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="28" id="event_sel63" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DMM trigger Reserved" end="24" id="event_trig63" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="20" id="event_sel62" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="DMM trigger Reserved" end="16" id="event_trig62" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="12" id="event_sel61" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DMM trigger Reserved" end="8" id="event_trig61" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing  1'b1 : Selects DMM event_trig as interrupt source. 1'b0 : Selects actual interrupt as interrupt source." end="4" id="event_sel60" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="DMM trigger Reserved" end="0" id="event_trig60" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPTC_BOUNDARY_CFG" description="" id="MSS_TPTC_BOUNDARY_CFG" offset="0x6B0" width="32">
    
  <bitfield begin="21" description="6 bit signal used for deciding the boundary crossing size for CID-RID-SID reordering of MSS_TPTC_B0 Example: writing 6'd19 decidies boundary to be 2^19  i.e. 512 KB" end="16" id="tptc_b0_size" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="13" description="6 bit signal used for deciding the boundary crossing size for CID-RID-SID reordering of MSS_TPTC_A1 Example: writing 6'd19 decidies boundary to be 2^19  i.e. 512 KB" end="8" id="tptc_a1_size" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="5" description="6 bit signal used for deciding the boundary crossing size for CID-RID-SID reordering of MSS_TPTC_A0 Example: writing 6'd19 decidies boundary to be 2^19  i.e. 512 KB" end="0" id="tptc_a0_size" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="MSS_TPTC_XID_REORDER_CFG" description="" id="MSS_TPTC_XID_REORDER_CFG" offset="0x6B4" width="32">
    
  <bitfield begin="16" description="writing 1'b1 will disable the CID-RID-SID reodering feature for MSS_TPTC_B0" end="16" id="tptc_b0_disable" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="writing 1'b1 will disable the CID-RID-SID reodering feature for MSS_TPTC_A1" end="8" id="tptc_a1_disable" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="writing 1'b1 will disable the CID-RID-SID reodering feature for MSS_TPTC_A0" end="0" id="tptc_a0_disable" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="GPADC_CTRL" description="" id="GPADC_CTRL" offset="0x6B8" width="32">
    
  <bitfield begin="12" description="Writing below decimal values to this regiter will select corresponding interrupt as GPADC trigger source. 0: GPIO_0 1: GPIO_1 2: GPIO_2 3: GPIO_3 4: Reserved 5: Reserved 6: Reserved 7: Reserved 8: Reserved 9: Reseved 10: Reserved 11: MSS_RTIA_INT0 12: MSS_RTIA_INT1 13: HW_Sync_FE1  14: Reserved 15: MMR based SW trigger" end="8" id="gpadc_trigin_sel" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="0" description="Writing 1'b1 will give MMR based SW trigger to GPADC" end="0" id="gpadc_sw_trig" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HW_Sync_FE_CTRL" description="" id="HW_Sync_FE_CTRL" offset="0x6BC" width="32">
    
  <bitfield begin="8" description="Writing  1'b0  :  Selects MCANA filter event as HW_Sync_FE2 1'b1   : Selects MCANB filter event as HW_Sync_FE2" end="8" id="fe2_sel" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Writing  1'b0  :  Selects MCANA filter event as HW_Sync_FE1 1'b1   : Selects MCANB filter event as HW_Sync_FE1" end="0" id="fe1_sel" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DEBUGSS_CSETB_FLUSH" description="" id="DEBUGSS_CSETB_FLUSH" offset="0x6C0" width="32">
    
  <bitfield begin="10" description="When HIGH indicates that the ETB RAM has overflowed or wrapped around to address zero" end="10" id="CSETB_FULL" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="9" description="When HIGH, indicates that trace acquisition is complete by ETB, that is, the trigger counter is at zero" end="9" id="CSETB_ACQ_COMPLETE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Return acknowledgement to CSETBFLUSHIN" end="8" id="CSETB_FLUSHINACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="External control used to assert the ATB signal AFVALIDS and drain any historical FIFO information on the bus" end="0" id="CSETB_FLUSHIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANALOG_WU_STATUS_REG_POLARITY_INV" description="" id="ANALOG_WU_STATUS_REG_POLARITY_INV" offset="0x6C4" width="32">
    
  <bitfield begin="31" description="This register decides the polarity of each status bit before providing to the MSS_ESM. Each bit controls the respective status bit." end="0" id="inv_ctrl" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ANALOG_CLK_STATUS_REG_POLARITY_INV" description="" id="ANALOG_CLK_STATUS_REG_POLARITY_INV" offset="0x6C8" width="32">
    
  <bitfield begin="31" description="This register decides the polarity of each status bit before providing to the MSS_ESM. Each bit controls the respective status bit." end="0" id="inv_ctrl" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ANALOG_WU_STATUS_REG_GRP1_MASK" description="" id="ANALOG_WU_STATUS_REG_GRP1_MASK" offset="0x6CC" width="32">
    
  <bitfield begin="31" description="Writing 1'b1 : Masks the corresponding status bit before generating a group 1 ESM error.  1'b0 :  Unmasks the corresponding status bit before generating a group 1 ESM error." end="0" id="mask" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ANALOG_CLK_STATUS_REG_GRP1_MASK" description="" id="ANALOG_CLK_STATUS_REG_GRP1_MASK" offset="0x6D0" width="32">
    
  <bitfield begin="31" description="Writing 1'b1 : Masks the corresponding status bit before generating a group 1 ESM error.  1'b0 :  Unmasks the corresponding status bit before generating a group 1 ESM error." end="0" id="mask" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ANALOG_WU_STATUS_REG_GRP2_MASK" description="" id="ANALOG_WU_STATUS_REG_GRP2_MASK" offset="0x6D4" width="32">
    
  <bitfield begin="31" description="Writing 1'b1 : Masks the corresponding status bit before generating a group 2 ESM error.  1'b0 :  Unmasks the corresponding status bit before generating a group 2 ESM error." end="0" id="mask" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ANALOG_CLK_STATUS_REG_GRP2_MASK" description="" id="ANALOG_CLK_STATUS_REG_GRP2_MASK" offset="0x6D8" width="32">
    
  <bitfield begin="31" description="Writing 1'b1 : Masks the corresponding status bit before generating a group 2 ESM error.  1'b0 :  Unmasks the corresponding status bit before generating a group 2 ESM error." end="0" id="mask" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="NERROR_MASK" description="" id="NERROR_MASK" offset="0x6DC" width="32">
    
  <bitfield begin="2" description="writing 3'b111 will mask the Nerror propagation to pad Writing 3'b000 will unmask the Nerror propagation to pad" end="0" id="mask" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS2R5SS_BUS_SAFETY_CTRL" description="" id="MSS2R5SS_BUS_SAFETY_CTRL" offset="0x6E0" width="32">
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="type" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="8" description="Refer to 25xx Substem Microarch document for more details" end="8" id="err_clear" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to 25xx Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS2R5SS_BUS_SAFETY_FI" description="" id="MSS2R5SS_BUS_SAFETY_FI" offset="0x6E4" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="24" id="safe" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="main" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="data" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="5" description="Refer to 25xx Substem Microarch document for more details" end="5" id="ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Refer to 25xx Substem Microarch document for more details" end="4" id="sec" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Refer to 25xx Substem Microarch document for more details" end="3" id="global_safe_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to 25xx Substem Microarch document for more details" end="2" id="global_main_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Refer to 25xx Substem Microarch document for more details" end="1" id="global_safe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Refer to 25xx Substem Microarch document for more details" end="0" id="global_main" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS2R5SS_BUS_SAFETY_ERR" description="" id="MSS2R5SS_BUS_SAFETY_ERR" offset="0x6E8" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="24" id="ded" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="sec" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="comp_check" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to 25xx Substem Microarch document for more details" end="0" id="comp_err" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS2R5SS_BUS_SAFETY_ERR_STAT_DATA0" description="" id="MSS2R5SS_BUS_SAFETY_ERR_STAT_DATA0" offset="0x6EC" width="32">
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="d1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to 25xx Substem Microarch document for more details" end="0" id="d0" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS2R5SS_BUS_SAFETY_ERR_STAT_CMD" description="" id="MSS2R5SS_BUS_SAFETY_ERR_STAT_CMD" offset="0x6F0" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS2R5SS_BUS_SAFETY_ERR_STAT_WRITE" description="" id="MSS2R5SS_BUS_SAFETY_ERR_STAT_WRITE" offset="0x6F4" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS2R5SS_BUS_SAFETY_ERR_STAT_READ" description="" id="MSS2R5SS_BUS_SAFETY_ERR_STAT_READ" offset="0x6F8" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS2R5SS_BUS_SAFETY_ERR_STAT_WRITERESP" description="" id="MSS2R5SS_BUS_SAFETY_ERR_STAT_WRITERESP" offset="0x6FC" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSS2R5SS_BUS_SAFETY_CTRL" description="" id="DSS2R5SS_BUS_SAFETY_CTRL" offset="0x700" width="32">
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="type" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="8" description="Refer to 25xx Substem Microarch document for more details" end="8" id="err_clear" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to 25xx Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS2R5SS_BUS_SAFETY_FI" description="" id="DSS2R5SS_BUS_SAFETY_FI" offset="0x704" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="24" id="safe" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="main" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="data" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="5" description="Refer to 25xx Substem Microarch document for more details" end="5" id="ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Refer to 25xx Substem Microarch document for more details" end="4" id="sec" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Refer to 25xx Substem Microarch document for more details" end="3" id="global_safe_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to 25xx Substem Microarch document for more details" end="2" id="global_main_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Refer to 25xx Substem Microarch document for more details" end="1" id="global_safe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Refer to 25xx Substem Microarch document for more details" end="0" id="global_main" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS2R5SS_BUS_SAFETY_ERR" description="" id="DSS2R5SS_BUS_SAFETY_ERR" offset="0x708" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="24" id="ded" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="sec" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="comp_check" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to 25xx Substem Microarch document for more details" end="0" id="comp_err" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="DSS2R5SS_BUS_SAFETY_ERR_STAT_DATA0" description="" id="DSS2R5SS_BUS_SAFETY_ERR_STAT_DATA0" offset="0x70C" width="32">
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="d1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to 25xx Substem Microarch document for more details" end="0" id="d0" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="DSS2R5SS_BUS_SAFETY_ERR_STAT_CMD" description="" id="DSS2R5SS_BUS_SAFETY_ERR_STAT_CMD" offset="0x710" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSS2R5SS_BUS_SAFETY_ERR_STAT_WRITE" description="" id="DSS2R5SS_BUS_SAFETY_ERR_STAT_WRITE" offset="0x714" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSS2R5SS_BUS_SAFETY_ERR_STAT_READ" description="" id="DSS2R5SS_BUS_SAFETY_ERR_STAT_READ" offset="0x718" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSS2R5SS_BUS_SAFETY_ERR_STAT_WRITERESP" description="" id="DSS2R5SS_BUS_SAFETY_ERR_STAT_WRITERESP" offset="0x71C" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_ACCESS_MODE" description="" id="MSS_DMM_ACCESS_MODE" offset="0x720" width="32">
    
  <bitfield begin="4" description="writing 1'b0 : ensures all the accesses from DMMB are user-mode writing 1'b1 : ensures all the accesses from DMMB are privilege mode" end="4" id="dmmb_sel" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="writing 1'b0 : ensures all the accesses from DMMA are user-mode writing 1'b1 : ensures all the accesses from DMMA are privilege mode" end="0" id="dmma_sel" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_HW_TRIG_CTRL" description="" id="CPSW_HW_TRIG_CTRL" offset="0x724" width="32">
    
  <bitfield begin="2" description="Bits [1:0] are used for Genf select line bits  2'b00 : Genf0 2'b01 : Genf1  2'b10 : Genf2 2'b11 : Not used Bit2 is used to select Genf or CPSW_HW_TRIG_VAL" end="0" id="CPSW_HW_TRIG_CTRL" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="CPSW_HW_TRIG_VAL" description="" id="CPSW_HW_TRIG_VAL" offset="0x728" width="32">
    
  <bitfield begin="7" description="Trigger" end="0" id="CPSW_HW_TRIG_VAL" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_TRIG_CAPTURE_COUNT" description="" id="CPSW_TRIG_CAPTURE_COUNT" offset="0x72C" width="32">
    
  <bitfield begin="3" description="Configuration of number of cycles for pulse extender of TRIG signal to CPSW" end="0" id="trig_count" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_C_BUS_SAFETY_CTRL" description="" id="MSS_L2_C_BUS_SAFETY_CTRL" offset="0x730" width="32">
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="type" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="8" description="Refer to 25xx Substem Microarch document for more details" end="8" id="err_clear" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to 25xx Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_C_BUS_SAFETY_FI" description="" id="MSS_L2_C_BUS_SAFETY_FI" offset="0x734" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="24" id="safe" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="main" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="data" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="5" description="Refer to 25xx Substem Microarch document for more details" end="5" id="ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Refer to 25xx Substem Microarch document for more details" end="4" id="sec" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Refer to 25xx Substem Microarch document for more details" end="3" id="global_safe_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to 25xx Substem Microarch document for more details" end="2" id="global_main_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Refer to 25xx Substem Microarch document for more details" end="1" id="global_safe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Refer to 25xx Substem Microarch document for more details" end="0" id="global_main" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_C_BUS_SAFETY_ERR" description="" id="MSS_L2_C_BUS_SAFETY_ERR" offset="0x738" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="24" id="ded" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="sec" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="comp_check" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to 25xx Substem Microarch document for more details" end="0" id="comp_err" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_C_BUS_SAFETY_ERR_STAT_DATA0" description="" id="MSS_L2_C_BUS_SAFETY_ERR_STAT_DATA0" offset="0x73C" width="32">
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="d1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to 25xx Substem Microarch document for more details" end="0" id="d0" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_C_BUS_SAFETY_ERR_STAT_CMD" description="" id="MSS_L2_C_BUS_SAFETY_ERR_STAT_CMD" offset="0x740" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_C_BUS_SAFETY_ERR_STAT_WRITE" description="" id="MSS_L2_C_BUS_SAFETY_ERR_STAT_WRITE" offset="0x744" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_C_BUS_SAFETY_ERR_STAT_READ" description="" id="MSS_L2_C_BUS_SAFETY_ERR_STAT_READ" offset="0x748" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_C_BUS_SAFETY_ERR_STAT_WRITERESP" description="" id="MSS_L2_C_BUS_SAFETY_ERR_STAT_WRITERESP" offset="0x74C" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="R5SS2DSS_BUS_SAFETY_CTRL" description="" id="R5SS2DSS_BUS_SAFETY_CTRL" offset="0x750" width="32">
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="type" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="8" description="Refer to 25xx Substem Microarch document for more details" end="8" id="err_clear" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to 25xx Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5SS2DSS_BUS_SAFETY_FI" description="" id="R5SS2DSS_BUS_SAFETY_FI" offset="0x754" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="24" id="safe" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="main" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="data" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="5" description="Refer to 25xx Substem Microarch document for more details" end="5" id="ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Refer to 25xx Substem Microarch document for more details" end="4" id="sec" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Refer to 25xx Substem Microarch document for more details" end="3" id="global_safe_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to 25xx Substem Microarch document for more details" end="2" id="global_main_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Refer to 25xx Substem Microarch document for more details" end="1" id="global_safe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Refer to 25xx Substem Microarch document for more details" end="0" id="global_main" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="R5SS2DSS_BUS_SAFETY_ERR" description="" id="R5SS2DSS_BUS_SAFETY_ERR" offset="0x758" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="24" id="ded" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="sec" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="comp_check" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to 25xx Substem Microarch document for more details" end="0" id="comp_err" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="R5SS2DSS_BUS_SAFETY_ERR_STAT_DATA0" description="" id="R5SS2DSS_BUS_SAFETY_ERR_STAT_DATA0" offset="0x75C" width="32">
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="d1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to 25xx Substem Microarch document for more details" end="0" id="d0" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="R5SS2DSS_BUS_SAFETY_ERR_STAT_CMD" description="" id="R5SS2DSS_BUS_SAFETY_ERR_STAT_CMD" offset="0x760" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="R5SS2DSS_BUS_SAFETY_ERR_STAT_WRITE" description="" id="R5SS2DSS_BUS_SAFETY_ERR_STAT_WRITE" offset="0x764" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="R5SS2DSS_BUS_SAFETY_ERR_STAT_READ" description="" id="R5SS2DSS_BUS_SAFETY_ERR_STAT_READ" offset="0x768" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="R5SS2DSS_BUS_SAFETY_ERR_STAT_WRITERESP" description="" id="R5SS2DSS_BUS_SAFETY_ERR_STAT_WRITERESP" offset="0x76C" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="R5SS2MSS_BUS_SAFETY_CTRL" description="" id="R5SS2MSS_BUS_SAFETY_CTRL" offset="0x770" width="32">
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="type" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="8" description="Refer to 25xx Substem Microarch document for more details" end="8" id="err_clear" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to 25xx Substem Microarch document for more details" end="0" id="enable" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5SS2MSS_BUS_SAFETY_FI" description="" id="R5SS2MSS_BUS_SAFETY_FI" offset="0x774" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="24" id="safe" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="main" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="data" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="5" description="Refer to 25xx Substem Microarch document for more details" end="5" id="ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Refer to 25xx Substem Microarch document for more details" end="4" id="sec" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Refer to 25xx Substem Microarch document for more details" end="3" id="global_safe_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Refer to 25xx Substem Microarch document for more details" end="2" id="global_main_req" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Refer to 25xx Substem Microarch document for more details" end="1" id="global_safe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Refer to 25xx Substem Microarch document for more details" end="0" id="global_main" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="R5SS2MSS_BUS_SAFETY_ERR" description="" id="R5SS2MSS_BUS_SAFETY_ERR" offset="0x778" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="24" id="ded" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Refer to 25xx Substem Microarch document for more details" end="16" id="sec" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="comp_check" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to 25xx Substem Microarch document for more details" end="0" id="comp_err" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="R5SS2MSS_BUS_SAFETY_ERR_STAT_DATA0" description="" id="R5SS2MSS_BUS_SAFETY_ERR_STAT_DATA0" offset="0x77C" width="32">
    
  <bitfield begin="15" description="Refer to 25xx Substem Microarch document for more details" end="8" id="d1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Refer to 25xx Substem Microarch document for more details" end="0" id="d0" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="R5SS2MSS_BUS_SAFETY_ERR_STAT_CMD" description="" id="R5SS2MSS_BUS_SAFETY_ERR_STAT_CMD" offset="0x780" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="R5SS2MSS_BUS_SAFETY_ERR_STAT_WRITE" description="" id="R5SS2MSS_BUS_SAFETY_ERR_STAT_WRITE" offset="0x784" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="R5SS2MSS_BUS_SAFETY_ERR_STAT_READ" description="" id="R5SS2MSS_BUS_SAFETY_ERR_STAT_READ" offset="0x788" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="R5SS2MSS_BUS_SAFETY_ERR_STAT_WRITERESP" description="" id="R5SS2MSS_BUS_SAFETY_ERR_STAT_WRITERESP" offset="0x78C" width="32">
    
  <bitfield begin="31" description="Refer to 25xx Substem Microarch document for more details" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="NW_PACKET_COUNT" description="" id="NW_PACKET_COUNT" offset="0x790" width="32">
    
  <bitfield begin="31" description="Gives the count of the ping-pong switch events of the network packet buffer" end="0" id="stat" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="NW_PACKET_COUNT_RESET" description="" id="NW_PACKET_COUNT_RESET" offset="0x794" width="32">
    
  <bitfield begin="0" description="Software reset for Counter maintaining Ping pong switch events" end="0" id="undefined" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CRC_PING_ADDR" description="" id="CPSW_CRC_PING_ADDR" offset="0x798" width="32">
    
  <bitfield begin="15" description="This denotes the last address of the data Read.  This depends on the Packet size .  Example :  If  packet size is 3072 bytes or 3KB  and CRC is disabled , this needs to programmed as 3064 or    hBF8 If packet size is 3072 bytes or 3KB and 16 bit CRC , this needs to be programmed as    hC00  Address must be 4 byte aligned for 32 bit CRC  Address must be 2 byte aligned for 16 bit CRC" end="0" id="undefined" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CRC_PONG_ADDR" description="" id="CPSW_CRC_PONG_ADDR" offset="0x79C" width="32">
    
  <bitfield begin="15" description="This denotes the last address of the data Read.  This depends on the Packet size .  Example :  If  packet size is 3072 bytes or 3KB  and CRC is disabled , this needs to programmed as 3064 or    hBF8 If packet size is 3072 bytes or 3KB and 16 bit CRC , this needs to be programmed as    hC00  Address must be 4 byte aligned for 32 bit CRC  Address must be 2 byte aligned for 16 bit CRC" end="0" id="undefined" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="R5_CONTROL" description="" id="R5_CONTROL" offset="0x800" width="32">
    
  <bitfield begin="26" description="writing '111'  enables a single cycle wait state with respect to CR5A_clk for rom access. This needs to be set when R5 clock is at 400MHZ and Interconnect-clk is at 200MHZ. (because it is a timing issue in this scenario)" end="24" id="rom_wait_state" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="Write pulse bit field: writing 3'b111 will trigger the reset FSM.  Reset FSM ensures reset to R5SS and inturn ensures the latching of lock_step and also mem_swap bit" end="16" id="reset_fsm_trigger" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="writing 3'b111 ensures switch happens only after R5SS reset. Orelse it will be a immediate switch." end="8" id="lock_step_switch_wait" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="writing 3'b000 ensures R5 to be in Dual-Core mode.  Note: The change happens after the R5SS reset assertion if R5_CONTROL_lock_step_switch_wait is set. Or else the switiching to Dual-core happens on the fly." end="0" id="lock_step" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5_ROM_ECLIPSE" description="" id="R5_ROM_ECLIPSE" offset="0x804" width="32">
    
  <bitfield begin="10" description="writing 3'b111 ensures ROM-Eclipsing happens only after R5SS reset. Orelse it will be a immediate change." end="8" id="memswap_wait" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="writing '111' ensures eclipsing of CR5A_ROM immediately if memswap_wait is not set. If memswap_wait is set then ROM is eclipsed after R5SS reset assertion." end="0" id="memswap" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5_COREA_HALT" description="" id="R5_COREA_HALT" offset="0x808" width="32">
    
  <bitfield begin="2" description="writing '000'  will unhalt CR5A. This register should be written only once." end="0" id="halt" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5_COREB_HALT" description="" id="R5_COREB_HALT" offset="0x80C" width="32">
    
  <bitfield begin="2" description="RESERVED: Dont Use" end="0" id="halt" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5_STATUS_REG" description="" id="R5_STATUS_REG" offset="0x810" width="32">
    
  <bitfield begin="8" description="Reading 1: confirms R5SS is in lockstep mode.  Reading 0: confirms R5SS is in Dual-core mode." end="8" id="lock_step" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="reading 1: confirms ROM is Eclipsed from with RAM for R5." end="0" id="memswap" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW0" description="" id="HW_SPARE_RW0" offset="0xFD0" width="32">
    
  <bitfield begin="31" description="[2:0]  writing 3'b111 gates the clock to redundant-safe bridges and inteconnects [6:4] RESERVED [8]: Mux Select to RSS_Interrupt_Map to choose between Pbist_done and MSS_RTIC Interrupt [9]:writing 1'b1 clock-gates HSM hard-macro [31:7] Reserved for HW R&amp;D" end="0" id="hw_spare_rw0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW1" description="" id="HW_SPARE_RW1" offset="0xFD4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW2" description="" id="HW_SPARE_RW2" offset="0xFD8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW3" description="" id="HW_SPARE_RW3" offset="0xFDC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO0" description="" id="HW_SPARE_RO0" offset="0xFE0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO1" description="" id="HW_SPARE_RO1" offset="0xFE4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO2" description="" id="HW_SPARE_RO2" offset="0xFE8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO3" description="" id="HW_SPARE_RO3" offset="0xFEC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro3" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_WPH" description="" id="HW_SPARE_WPH" offset="0xFF0" width="32">
    
  <bitfield begin="31" description="Write pulse bit field: For bits 0 to 7: Wrting 1'b1 : Generates pulse interrupt to corresponding proc from MSS_CR5A. For bits 8 to 15: RESERVED " end="0" id="proc" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_REC" description="" id="HW_SPARE_REC" offset="0xFF4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="31" id="hw_spare_rec31" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved for HW R&amp;D" end="30" id="hw_spare_rec30" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Reserved for HW R&amp;D" end="29" id="hw_spare_rec29" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Reserved for HW R&amp;D" end="28" id="hw_spare_rec28" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="Reserved for HW R&amp;D" end="27" id="hw_spare_rec27" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="Reserved for HW R&amp;D" end="26" id="hw_spare_rec26" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Reserved for HW R&amp;D" end="25" id="hw_spare_rec25" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Reserved for HW R&amp;D" end="24" id="hw_spare_rec24" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved for HW R&amp;D" end="23" id="hw_spare_rec23" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Reserved for HW R&amp;D" end="22" id="hw_spare_rec22" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Reserved for HW R&amp;D" end="21" id="hw_spare_rec21" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Reserved for HW R&amp;D" end="20" id="hw_spare_rec20" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Reserved for HW R&amp;D" end="19" id="hw_spare_rec19" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Reserved for HW R&amp;D" end="18" id="hw_spare_rec18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Reserved for HW R&amp;D" end="17" id="hw_spare_rec17" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Reserved for HW R&amp;D" end="16" id="hw_spare_rec16" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved for HW R&amp;D" end="15" id="hw_spare_rec15" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Reserved for HW R&amp;D" end="14" id="hw_spare_rec14" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Reserved for HW R&amp;D" end="13" id="hw_spare_rec13" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Reserved for HW R&amp;D" end="12" id="hw_spare_rec12" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Reserved for HW R&amp;D" end="11" id="hw_spare_rec11" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Reserved for HW R&amp;D" end="10" id="hw_spare_rec10" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Reserved for HW R&amp;D" end="9" id="hw_spare_rec9" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Reserved for HW R&amp;D" end="8" id="hw_spare_rec8" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved for HW R&amp;D" end="7" id="hw_spare_rec7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Reserved for HW R&amp;D" end="6" id="hw_spare_rec6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Reserved for HW R&amp;D" end="5" id="hw_spare_rec5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Reserved for HW R&amp;D" end="4" id="hw_spare_rec4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Reserved for HW R&amp;D" end="3" id="hw_spare_rec3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Reserved for HW R&amp;D" end="2" id="hw_spare_rec2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved for HW R&amp;D" end="1" id="hw_spare_rec1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rec0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK0" description="  - KICK0 component " id="LOCK0_KICK0" offset="0x1008" width="32">
    
  <bitfield begin="31" description=" - KICK0 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK1" description="  - KICK1 component " id="LOCK0_KICK1" offset="0x100C" width="32">
    
  <bitfield begin="31" description=" - KICK1 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="intr_raw_status" description=" Interrupt Raw Status/Set Register " id="intr_raw_status" offset="0x1010" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enabled_status_clear" description=" Interrupt Enabled Status/Clear register " id="intr_enabled_status_clear" offset="0x1014" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable" description=" Interrupt Enable register " id="intr_enable" offset="0x1018" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable_clear" description=" Interrupt Enable Clear register " id="intr_enable_clear" offset="0x101C" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="eoi" description=" EOI register " id="eoi" offset="0x1020" width="32">
    
  <bitfield begin="7" description="EOI vector value. Write this with interrupt distribution value in the chip." end="0" id="" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_address" description=" Fault Address register " id="fault_address" offset="0x1024" width="32">
    
  <bitfield begin="31" description="Fault Address." end="0" id="" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="fault_type_status" description=" Fault Type Status register " id="fault_type_status" offset="0x1028" width="32">
    
  <bitfield begin="6" description="Non-secure access." end="6" id="" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="fault_attr_status" description=" Fault Attribute Status register " id="fault_attr_status" offset="0x102C" width="32">
    
  <bitfield begin="31" description="XID." end="20" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Route ID." end="8" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="7" description="Privilege ID." end="0" id="" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_clear" description=" Fault Clear register " id="fault_clear" offset="0x1030" width="32">
    
  <bitfield begin="0" description="Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect." end="0" id="" rwaccess="W" width="1"></bitfield>
  </register>
</module>
