<module name="MCU_NAVSS0_INTR0_CFG" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="INTR_ROUTER_PID" acronym="INTR_ROUTER_PID" offset="0x0" width="32" description="Identification register">
    <bitfield id="SCHEME" width="2" begin="31" end="30" resetval="0x1" description="PID scheme" range="" rwaccess="R"/>
    <bitfield id="BU" width="2" begin="29" end="28" resetval="0x2" description="bu" range="" rwaccess="R"/>
    <bitfield id="FUNCTION" width="12" begin="27" end="16" resetval="0x694" description="function" range="" rwaccess="R"/>
    <bitfield id="RTL" width="5" begin="15" end="11" resetval="0x10" description="RTL version 10h - NAVSS0 Fh - MCU_NAVSS0" range="" rwaccess="R"/>
    <bitfield id="MAJREV" width="3" begin="10" end="8" resetval="0x1" description="major version" range="" rwaccess="R"/>
    <bitfield id="CUSTOM" width="2" begin="7" end="6" resetval="0x0" description="custom id" range="" rwaccess="R"/>
    <bitfield id="MINREV" width="6" begin="5" end="0" resetval="0x0" description="minor version" range="" rwaccess="R"/>
  </register>
  <register id="INTR_ROUTER_MUXCNTL_y" acronym="INTR_ROUTER_MUXCNTL_y" offset="0x4" width="32" description="Interrupt mux control register Offset = 4h + (y * 4); where y = 0h to 1FFh for NAVSS0 Offset = 4h + (y * 4); where y = 0h to 3Fh for MCU_NAVSS0">
    <bitfield id="RESERVED" width="15" begin="31" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INT_ENABLE" width="1" begin="16" end="16" resetval="0x0" description="Interrupt output enable for interrupt y" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="7" begin="15" end="9" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MUX_CONTROL" width="9" begin="8" end="0" resetval="0x0" description="Mux control for interrupt y Avoid programming the mux control when input interrutps are enabled via INT_ENABLE." range="" rwaccess="RW"/>
  </register>
</module>
