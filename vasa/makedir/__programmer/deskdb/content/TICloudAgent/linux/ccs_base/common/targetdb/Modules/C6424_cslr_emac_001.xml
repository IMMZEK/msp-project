<?xml version="1.0" encoding="UTF-8"?>
<module id="EMAC" HW_revision="" XML_version="1" description="Ethernet Media Access Controller">
     <register id="TXIDVER" acronym="TXIDVER" offset="0x0" width="32" description="Transmit Identification and Version Register ">
<bitfield id="TXIDENT" width="16" begin="31" end="16" resetval="12" description="Transmit identification value" range="" rwaccess="R"></bitfield>
<bitfield id="TXMAJORVER" width="8" begin="15" end="8" resetval="10" description="Transmit major version value" range="" rwaccess="R"></bitfield>
<bitfield id="TXMINORVER" width="8" begin="7" end="0" resetval="7" description="Transmit minor version value" range="" rwaccess="R"></bitfield>
</register>
     <register id="TXCONTROL" acronym="TXCONTROL" offset="0x4" width="32" description="Transmit Control Register">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="TXEN" width="1" begin="0" end="0" resetval="0" description="Transmit enable" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Transmit is disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Transmit is enabled" />
</bitfield>
</register>
     <register id="TXTEARDOWN" acronym="TXTEARDOWN" offset="0x8" width="32" description="Transmit Teardown Register ">
<bitfield id="_RESV_1" width="29" begin="31" end="3" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="TXTDNCH" width="3" begin="2" end="0" resetval="0" description="Transmit teardown channel. Transmit channel teardown is commanded by writing the encoded value of the transmit channel to be torn down. The teardown register is read as zero." range="0-7h" rwaccess="RW">
<bitenum id="CHA0" value="0" token="CHA0" description="Teardown transmit channel 0" />
<bitenum id="CHA1" value="1" token="CHA1" description="Teardown transmit channel 1" />
<bitenum id="CHA2" value="2" token="CHA2" description="Teardown transmit channel 2" />
<bitenum id="CHA3" value="3" token="CHA3" description="Teardown transmit channel 3" />
<bitenum id="CHA4" value="4" token="CHA4" description="Teardown transmit channel 4" />
<bitenum id="CHA5" value="5" token="CHA5" description="Teardown transmit channel 5" />
<bitenum id="CHA6" value="6" token="CHA6" description="Teardown transmit channel 6" />
<bitenum id="CHA7" value="7" token="CHA7" description="Teardown transmit channel 7" />
</bitfield>
</register>
     <register id="RXIDVER" acronym="RXIDVER" offset="0x10" width="32" description="Receive Identification and Version Register ">
<bitfield id="RXIDENT" width="16" begin="31" end="16" resetval="12" description="Receive identification value" range="" rwaccess="R"></bitfield>
<bitfield id="RXMAJORVER" width="8" begin="15" end="8" resetval="10" description="Receive major version value" range="" rwaccess="R"></bitfield>
<bitfield id="RXMINORVER" width="8" begin="7" end="0" resetval="7" description="Receive minor version value" range="" rwaccess="R"></bitfield>
</register>
     <register id="RXCONTROL" acronym="RXCONTROL" offset="0x14" width="32" description="Receive Control Register">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXEN" width="1" begin="0" end="0" resetval="0" description="Receive DMA enable" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Receive is disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Receive is enabled" />
</bitfield>
</register>
     <register id="RXTEARDOWN" acronym="RXTEARDOWN" offset="0x18" width="32" description="Receive Teardown Register ">
<bitfield id="_RESV_1" width="29" begin="31" end="3" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXTDNCH" width="3" begin="2" end="0" resetval="0" description="Receive teardown channel. Receive channel teardown is commanded by writing the encoded value of the receive channel to be torn down. The teardown register is read as zero." range="0-7h" rwaccess="RW">
<bitenum id="CHA0" value="0" token="CHA0" description="Teardown receive channel 0" />
<bitenum id="CHA1" value="1" token="CHA1" description="Teardown receive channel 1" />
<bitenum id="CHA2" value="2" token="CHA2" description="Teardown receive channel 2" />
<bitenum id="CHA3" value="3" token="CHA3" description="Teardown receive channel 3" />
<bitenum id="CHA4" value="4" token="CHA4" description="Teardown receive channel 4" />
<bitenum id="CHA5" value="5" token="CHA5" description="Teardown receive channel 5" />
<bitenum id="CHA6" value="6" token="CHA6" description="Teardown receive channel 6" />
<bitenum id="CHA7" value="7" token="CHA7" description="Teardown receive channel 7" />
</bitfield>
</register>
     <register id="TXINTSTATRAW" acronym="TXINTSTATRAW" offset="0x80" width="32" description="Transmit Interrupt Status (Unmasked) Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="TX7PEND" width="1" begin="7" end="7" resetval="0" description="TX7PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="TX6PEND" width="1" begin="6" end="6" resetval="0" description="TX6PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="TX5PEND" width="1" begin="5" end="5" resetval="0" description="TX5PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="TX4PEND" width="1" begin="4" end="4" resetval="0" description="TX4PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="TX3PEND" width="1" begin="3" end="3" resetval="0" description="TX3PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="TX2PEND" width="1" begin="2" end="2" resetval="0" description="TX2PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="TX1PEND" width="1" begin="1" end="1" resetval="0" description="TX1PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="TX0PEND" width="1" begin="0" end="0" resetval="0" description="TX0PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
</register>
     <register id="TXINTSTATMASKED" acronym="TXINTSTATMASKED" offset="0x84" width="32" description="Transmit Interrupt Status (Masked) Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="TX7PEND" width="1" begin="7" end="7" resetval="0" description="TX7PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="TX6PEND" width="1" begin="6" end="6" resetval="0" description="TX6PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="TX5PEND" width="1" begin="5" end="5" resetval="0" description="TX5PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="TX4PEND" width="1" begin="4" end="4" resetval="0" description="TX4PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="TX3PEND" width="1" begin="3" end="3" resetval="0" description="TX3PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="TX2PEND" width="1" begin="2" end="2" resetval="0" description="TX2PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="TX1PEND" width="1" begin="1" end="1" resetval="0" description="TX1PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="TX0PEND" width="1" begin="0" end="0" resetval="0" description="TX0PEND masked interrupt read" range="" rwaccess="R"></bitfield>
</register>
     <register id="TXINTMASKSET" acronym="TXINTMASKSET" offset="0x88" width="32" description="Transmit Interrupt Mask Set Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="TX7MASK" width="1" begin="7" end="7" resetval="0" description="Transmit channel 7 interrupt mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX6MASK" width="1" begin="6" end="6" resetval="0" description="Transmit channel 6 interrupt mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX5MASK" width="1" begin="5" end="5" resetval="0" description="Transmit channel 5 interrupt mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX4MASK" width="1" begin="4" end="4" resetval="0" description="Transmit channel 4 interrupt mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX3MASK" width="1" begin="3" end="3" resetval="0" description="Transmit channel 3 interrupt mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX2MASK" width="1" begin="2" end="2" resetval="0" description="Transmit channel 2 interrupt mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX1MASK" width="1" begin="1" end="1" resetval="0" description="Transmit channel 1 interrupt mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX0MASK" width="1" begin="0" end="0" resetval="0" description="Transmit channel 0 interrupt mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
</register>
     <register id="TXINTMASKCLEAR" acronym="TXINTMASKCLEAR" offset="0x8c" width="32" description="Transmit Interrupt Clear Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="TX7MASK" width="1" begin="7" end="7" resetval="0" description="Transmit channel 7 interrupt mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX6MASK" width="1" begin="6" end="6" resetval="0" description="Transmit channel 6 interrupt mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX5MASK" width="1" begin="5" end="5" resetval="0" description="Transmit channel 5 interrupt mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX4MASK" width="1" begin="4" end="4" resetval="0" description="Transmit channel 4 interrupt mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX3MASK" width="1" begin="3" end="3" resetval="0" description="Transmit channel 3 interrupt mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX2MASK" width="1" begin="2" end="2" resetval="0" description="Transmit channel 2 interrupt mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX1MASK" width="1" begin="1" end="1" resetval="0" description="Transmit channel 1 interrupt mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="TX0MASK" width="1" begin="0" end="0" resetval="0" description="Transmit channel 0 interrupt mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
</register>
     <register id="MACINVECTOR" acronym="MACINVECTOR" offset="0x90" width="32" description="MAC Input Vector Register ">
<bitfield id="USERINT" width="1" begin="31" end="31" resetval="0" description="MDIO module user interrupt (USERINT) pending status bit" range="0-1" rwaccess="R"></bitfield>
<bitfield id="LINKINT" width="1" begin="30" end="30" resetval="0" description="MDIO module link change interrupt (LINKINT) pending status bit" range="0-1" rwaccess="R"></bitfield>
<bitfield id="_RESV_3" width="12" begin="29" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="HOSTPEND" width="1" begin="17" end="17" resetval="0" description="EMAC module host error interrupt (HOSTPEND) pending status bit" range="0-1" rwaccess="R"></bitfield>
<bitfield id="STATPEND" width="1" begin="16" end="16" resetval="0" description="EMAC module statistics interrupt (STATPEND) pending status bit" range="0-1" rwaccess="R"></bitfield>
<bitfield id="RXPEND" width="8" begin="15" end="8" resetval="0" description="Receive channels 0-7 interrupt (RXxPEND) pending status bit. Bit 8 is receive channel 0." range="0-FFh" rwaccess="R"></bitfield>
<bitfield id="TXPEND" width="8" begin="7" end="0" resetval="0" description="Transmit channels 0-7 interrupt (TXxPEND) pending status bit. Bit 0 is transmit channel 0." range="0-FFh" rwaccess="R"></bitfield>
</register>
     <register id="RXINTSTATRAW" acronym="RXINTSTATRAW" offset="0xa0" width="32" description="Receive Interrupt Status (Unmasked) Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX7PEND" width="1" begin="7" end="7" resetval="0" description="RX7PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="RX6PEND" width="1" begin="6" end="6" resetval="0" description="RX6PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="RX5PEND" width="1" begin="5" end="5" resetval="0" description="RX5PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="RX4PEND" width="1" begin="4" end="4" resetval="0" description="RX4PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="RX3PEND" width="1" begin="3" end="3" resetval="0" description="RX3PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="RX2PEND" width="1" begin="2" end="2" resetval="0" description="RX2PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="RX1PEND" width="1" begin="1" end="1" resetval="0" description="RX1PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="RX0PEND" width="1" begin="0" end="0" resetval="0" description="RX0PEND raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
</register>
     <register id="RXINTSTATMASKED" acronym="RXINTSTATMASKED" offset="0xa4" width="32" description="Receive Interrupt Status (Masked) Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX7PEND" width="1" begin="7" end="7" resetval="0" description="RX7PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="RX6PEND" width="1" begin="6" end="6" resetval="0" description="RX6PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="RX5PEND" width="1" begin="5" end="5" resetval="0" description="RX5PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="RX4PEND" width="1" begin="4" end="4" resetval="0" description="RX4PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="RX3PEND" width="1" begin="3" end="3" resetval="0" description="RX3PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="RX2PEND" width="1" begin="2" end="2" resetval="0" description="RX2PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="RX1PEND" width="1" begin="1" end="1" resetval="0" description="RX1PEND masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="RX0PEND" width="1" begin="0" end="0" resetval="0" description="RX0PEND masked interrupt read" range="" rwaccess="R"></bitfield>
</register>
     <register id="RXINTMASKSET" acronym="RXINTMASKSET" offset="0xa8" width="32" description="Receive Interrupt Mask Set Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX7MASK" width="1" begin="7" end="7" resetval="0" description="Receive channel 7 mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="RX6MASK" width="1" begin="6" end="6" resetval="0" description="Receive channel 6 mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="RX5MASK" width="1" begin="5" end="5" resetval="0" description="Receive channel 5 mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="RX4MASK" width="1" begin="4" end="4" resetval="0" description="Receive channel 4 mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="RX3MASK" width="1" begin="3" end="3" resetval="0" description="Receive channel 3 mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="RX2MASK" width="1" begin="2" end="2" resetval="0" description="Receive channel 2 mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="RX1MASK" width="1" begin="1" end="1" resetval="0" description="Receive channel 1 mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="RX0MASK" width="1" begin="0" end="0" resetval="0" description="Receive channel 0 mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
</register>
     <register id="RXINTMASKCLEAR" acronym="RXINTMASKCLEAR" offset="0xac" width="32" description="Receive Interrupt Mask Clear Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX7MASK" width="1" begin="7" end="7" resetval="0" description="Receive channel 7 mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RX6MASK" width="1" begin="6" end="6" resetval="0" description="Receive channel 6 mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RX5MASK" width="1" begin="5" end="5" resetval="0" description="Receive channel 5 mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RX4MASK" width="1" begin="4" end="4" resetval="0" description="Receive channel 4 mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RX3MASK" width="1" begin="3" end="3" resetval="0" description="Receive channel 3 mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RX2MASK" width="1" begin="2" end="2" resetval="0" description="Receive channel 2 mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RX1MASK" width="1" begin="1" end="1" resetval="0" description="Receive channel 1 mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RX0MASK" width="1" begin="0" end="0" resetval="0" description="Receive channel 0 mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
</register>
     <register id="MACINTSTATRAW" acronym="MACINTSTATRAW" offset="0xb0" width="32" description="MAC Interrupt Status (Unmasked) Register ">
<bitfield id="_RESV_1" width="30" begin="31" end="2" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="HOSTPEND" width="1" begin="1" end="1" resetval="0" description="Host pending interrupt; raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
<bitfield id="STATPEND" width="1" begin="0" end="0" resetval="0" description="Statistics pending interrupt; raw interrupt read (before mask)" range="" rwaccess="R"></bitfield>
</register>
     <register id="MACINTSTATMASKED" acronym="MACINTSTATMASKED" offset="0xb4" width="32" description="MAC Interrupt Status (Masked) Register ">
<bitfield id="_RESV_1" width="30" begin="31" end="2" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="HOSTPEND" width="1" begin="1" end="1" resetval="0" description="Host pending interrupt; masked interrupt read" range="" rwaccess="R"></bitfield>
<bitfield id="STATPEND" width="1" begin="0" end="0" resetval="0" description="Statistics pending interrupt; masked interrupt read " range="" rwaccess="R"></bitfield>
</register>
     <register id="MACINTMASKSET" acronym="MACINTMASKSET" offset="0xb8" width="32" description="MAC Interrupt Mask Set Register">
<bitfield id="_RESV_1" width="30" begin="31" end="2" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="HOSTMASK" width="1" begin="1" end="1" resetval="0" description="Host error interrupt mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
<bitfield id="STATMASK" width="1" begin="0" end="0" resetval="0" description="Statistics interrupt mask set bit. Write 1 to enable interrupt, a write of 0 has no effect." range="" rwaccess="RWS"></bitfield>
</register>
     <register id="MACINTMASKCLEAR" acronym="MACINTMASKCLEAR" offset="0xbc" width="32" description="MAC Interrupt Mask Clear Register">
<bitfield id="_RESV_1" width="30" begin="31" end="2" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="HOSTMASK" width="1" begin="1" end="1" resetval="0" description="Host error interrupt mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="STATMASK" width="1" begin="0" end="0" resetval="0" description="Statistics interrupt mask clear bit. Write 1 to disable interrupt, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
</register>
     <register id="RXMBPENABLE" acronym="RXMBPENABLE" offset="0x100" width="32" description="Receive Multicast/Broadcast/Promiscuous Channel Enable Register ">
<bitfield id="_RESV_1" width="1" begin="31" end="31" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXPASSCRC" width="1" begin="30" end="30" resetval="0" description="Pass receive CRC enable bit" range="" rwaccess="RW">
<bitenum id="DISCARD" value="0" token="DISCARD" description="Received CRC is discarded for all channels and is not included in the buffer descriptor packet length field" />
<bitenum id="INCLUDE" value="1" token="INCLUDE" description="Received CRC is transferred to memory for all channels and is included in the buffer descriptor packet length" />
</bitfield>
<bitfield id="RXQOSEN" width="1" begin="29" end="29" resetval="0" description="Receive quality of service enable bit" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Receive QOS is disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Receive QOS is enabled" />
</bitfield>
<bitfield id="RXNOCHAIN" width="1" begin="28" end="28" resetval="0" description="Receive no buffer chaining bit" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Received frames can span multiple buffers" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Receive DMA controller transfers each frame into a single buffer regardless of the frame or buffer size. All remaining frame data after the first buffer is discarded. The buffer descriptor " />
</bitfield>
<bitfield id="_RESV_5" width="3" begin="27" end="25" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXCMFEN" width="1" begin="24" end="24" resetval="0" description="Receive copy MAC control frames enable bit. Enables MAC control frames to be transferred to memory. MAC control frames are normally acted upon (if enabled), but not copied to memory. MAC control frames that are pause frames will be acted upon if enabled in MACCONTROL, regardless of the value of RXCMFEN. Frames transferred to memory due to RXCMFEN will have the CONTROL bit set in their EOP buffer descriptor." range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="MAC control frames are filtered (but acted upon if enabled)" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="MAC control frames are transferred to memory" />
</bitfield>
<bitfield id="RXCSFEN" width="1" begin="23" end="23" resetval="0" description="Receive copy short frames enable bit. Enables frames or fragments shorter than 64 bytes to be copied to memory. Frames transferred to memory due to RXCSFEN will have the FRAGMENT or UNDERSIZE bit set in their EOP buffer descriptor. Fragments are short frames that contain CRC/align/code errors and undersized are short frames without errors." range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Short frames are filtered" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Short frames are transferred to memory" />
</bitfield>
<bitfield id="RXCEFEN" width="1" begin="22" end="22" resetval="0" description="Receive copy error frames enable bit. Enables frames containing errors to be transferred to memory. The appropriate error bit will be set in the frame EOP buffer descriptor." range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Frames containing errors are filtered" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Frames containing errors are transferred to memory" />
</bitfield>
<bitfield id="RXCAFEN" width="1" begin="21" end="21" resetval="0" description="Receive copy all frames enable bit. Enables frames that do not address match (includes multicast frames that do not hash match) to be transferred to the promiscuous channel selected by RXPROMCH bits. Such frames will be marked with the NOMATCH bit in their EOP buffer descriptor." range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Frames that do not address match are filtered" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Frames that do not address match are transferred to the promiscuous channel selected by RXPROMCH bits" />
</bitfield>
<bitfield id="_RESV_10" width="2" begin="20" end="19" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXPROMCH" width="3" begin="18" end="16" resetval="0" description="Receive promiscuous channel select" range="0-7h" rwaccess="RW">
<bitenum id="CHA0" value="0" token="CHA0" description="Select channel 0 to receive promiscuous frames" />
<bitenum id="CHA1" value="1" token="CHA1" description="Select channel 1 to receive promiscuous frames" />
<bitenum id="CHA2" value="2" token="CHA2" description="Select channel 2 to receive promiscuous frames" />
<bitenum id="CHA3" value="3" token="CHA3" description="Select channel 3 to receive promiscuous frames" />
<bitenum id="CHA4" value="4" token="CHA4" description="Select channel 4 to receive promiscuous frames" />
<bitenum id="CHA5" value="5" token="CHA5" description="Select channel 5 to receive promiscuous frames" />
<bitenum id="CHA6" value="6" token="CHA6" description="Select channel 6 to receive promiscuous frames" />
<bitenum id="CHA7" value="7" token="CHA7" description="Select channel 7 to receive promiscuous frames" />
</bitfield>
<bitfield id="_RESV_12" width="2" begin="15" end="14" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXBROADEN" width="1" begin="13" end="13" resetval="0" description="Receive broadcast enable. Enable received broadcast frames to be copied to the channel selected by RXBROADCH bits." range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Broadcast frames are filtered" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Broadcast frames are copied to the channel selected by RXBROADCH bits" />
</bitfield>
<bitfield id="_RESV_14" width="2" begin="12" end="11" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXBROADCH" width="3" begin="10" end="8" resetval="0" description="Receive broadcast channel select" range="0-7h" rwaccess="RW">
<bitenum id="CHA0" value="0" token="CHA0" description="Select channel 0 to receive broadcast frames" />
<bitenum id="CHA1" value="1" token="CHA1" description="Select channel 1 to receive broadcast frames" />
<bitenum id="CHA2" value="2" token="CHA2" description="Select channel 2 to receive promiscuous frames" />
<bitenum id="CHA3" value="3" token="CHA3" description="Select channel 3 to receive broadcast frames" />
<bitenum id="CHA4" value="4" token="CHA4" description="Select channel 4 to receive broadcast frames" />
<bitenum id="CHA5" value="5" token="CHA5" description="Select channel 5 to receive broadcast frames" />
<bitenum id="CHA6" value="6" token="CHA6" description="Select channel 6 to receive broadcast frames" />
<bitenum id="CHA7" value="7" token="CHA7" description="Select channel 7 to receive broadcast frames" />
</bitfield>
<bitfield id="_RESV_16" width="2" begin="7" end="6" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXMULTEN" width="1" begin="5" end="5" resetval="0" description="RX multicast enable. Enable received hash matching multicast frames to be copied to the channel selected by RXMULTCH bits." range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Multicast frames are filtered" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Multicast frames are copied to the channel selected by RXMULTCH bits" />
</bitfield>
<bitfield id="_RESV_18" width="2" begin="4" end="3" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXMULTCH" width="3" begin="2" end="0" resetval="0" description="Receive multicast channel select" range="0-7h" rwaccess="RW">
<bitenum id="CHA0" value="0" token="CHA0" description="Select channel 0 to receive multicast frames" />
<bitenum id="CHA1" value="1" token="CHA1" description="Select channel 1 to receive multicast frames" />
<bitenum id="CHA2" value="2" token="CHA2" description="Select channel 2 to receive promiscuous frames" />
<bitenum id="CHA3" value="3" token="CHA3" description="Select channel 3 to receive multicast frames" />
<bitenum id="CHA4" value="4" token="CHA4" description="Select channel 4 to receive multicast frames" />
<bitenum id="CHA5" value="5" token="CHA5" description="Select channel 5 to receive multicast frames" />
<bitenum id="CHA6" value="6" token="CHA6" description="Select channel 6 to receive multicast frames" />
<bitenum id="CHA7" value="7" token="CHA7" description="Select channel 7 to receive multicast frames" />
</bitfield>
</register>
     <register id="RXUNICASTSET" acronym="RXUNICASTSET" offset="0x104" width="32" description="Receive Unicast Enable Set Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXCH7EN" width="1" begin="7" end="7" resetval="0" description="Receive channel 7 unicast enable set bit. Write 1 to set the enable, a write of 0 has no effect. May be read." range="" rwaccess="RWS"></bitfield>
<bitfield id="RXCH6EN" width="1" begin="6" end="6" resetval="0" description="Receive channel 6 unicast enable set bit. Write 1 to set the enable, a write of 0 has no effect. May be read." range="" rwaccess="RWS"></bitfield>
<bitfield id="RXCH5EN" width="1" begin="5" end="5" resetval="0" description="Receive channel 5 unicast enable set bit. Write 1 to set the enable, a write of 0 has no effect. May be read." range="" rwaccess="RWS"></bitfield>
<bitfield id="RXCH4EN" width="1" begin="4" end="4" resetval="0" description="Receive channel 4 unicast enable set bit. Write 1 to set the enable, a write of 0 has no effect. May be read." range="" rwaccess="RWS"></bitfield>
<bitfield id="RXCH3EN" width="1" begin="3" end="3" resetval="0" description="Receive channel 3 unicast enable set bit. Write 1 to set the enable, a write of 0 has no effect. May be read." range="" rwaccess="RWS"></bitfield>
<bitfield id="RXCH2EN" width="1" begin="2" end="2" resetval="0" description="Receive channel 2 unicast enable set bit. Write 1 to set the enable, a write of 0 has no effect. May be read." range="" rwaccess="RWS"></bitfield>
<bitfield id="RXCH1EN" width="1" begin="1" end="1" resetval="0" description="Receive channel 1 unicast enable set bit. Write 1 to set the enable, a write of 0 has no effect. May be read." range="" rwaccess="RWS"></bitfield>
<bitfield id="RXCH0EN" width="1" begin="0" end="0" resetval="0" description="Receive channel 0 unicast enable set bit. Write 1 to set the enable, a write of 0 has no effect. May be read." range="" rwaccess="RWS"></bitfield>
</register>
     <register id="RXUNICASTCLEAR" acronym="RXUNICASTCLEAR" offset="0x108" width="32" description="Receive Unicast Clear Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXCH7EN" width="1" begin="7" end="7" resetval="0" description="Receive channel 7 unicast enable clear bit. Write 1 to clear the enable, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RXCH6EN" width="1" begin="6" end="6" resetval="0" description="Receive channel 6 unicast enable clear bit. Write 1 to clear the enable, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RXCH5EN" width="1" begin="5" end="5" resetval="0" description="Receive channel 5 unicast enable clear bit. Write 1 to clear the enable, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RXCH4EN" width="1" begin="4" end="4" resetval="0" description="Receive channel 4 unicast enable clear bit. Write 1 to clear the enable, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RXCH3EN" width="1" begin="3" end="3" resetval="0" description="Receive channel 3 unicast enable clear bit. Write 1 to clear the enable, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RXCH2EN" width="1" begin="2" end="2" resetval="0" description="Receive channel 2 unicast enable clear bit. Write 1 to clear the enable, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RXCH1EN" width="1" begin="1" end="1" resetval="0" description="Receive channel 1 unicast enable clear bit. Write 1 to clear the enable, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
<bitfield id="RXCH0EN" width="1" begin="0" end="0" resetval="0" description="Receive channel 0 unicast enable clear bit. Write 1 to clear the enable, a write of 0 has no effect." range="" rwaccess="RWC"></bitfield>
</register>
     <register id="RXMAXLEN" acronym="RXMAXLEN" offset="0x10c" width="32" description="Receive Maximum Length Register ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXMAXLEN" width="16" begin="15" end="0" resetval="5400" description="Receive maximum frame length. These bits determine the maximum length of a received frame. The reset value is 5EEh (1518). Frames with byte counts greater than RXMAXLEN are long frames. Long frames with no errors are oversized frames. Long frames with CRC, code, or alignment error are jabber frames." range="0-FFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RXBUFFEROFFSET" acronym="RXBUFFEROFFSET" offset="0x110" width="32" description="Receive Buffer Offset Register ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXBUFFEROFFSET" width="16" begin="15" end="0" resetval="0" description="Receive buffer offset value. These bits are written by the EMAC into each frame SOP buffer descriptor Buffer Offset field. The frame data begins after the RXBUFFEROFFSET value of bytes. A value of 0 indicates that there are no unused bytes at the beginning of the data and that valid data begins on the first byte of the buffer. A value of Fh (15) indicates that the first 15 bytes of the buffer are to be ignored by the EMAC and that valid buffer data starts on byte 16 of the buffer. This value is used for all channels." range="0-FFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RXFILTERLOWTHRESH" acronym="RXFILTERLOWTHRESH" offset="0x114" width="32" description="Receive Filter Low Priority Frame Threshold Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXFILTERTHRESH" width="8" begin="7" end="0" resetval="0" description="Receive filter low threshold. These bits contain the receive channel n free buffer count register (RXnFREEBUFFER) threshold value for filtering low priority incoming frames. This field should remain zero, if no filtering is desired." range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX0FLOWTHRESH" acronym="RX0FLOWTHRESH" offset="0x120" width="32" description="Receive Channel 0 Flow Control Threshold Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX0FLOWTHRESH" width="8" begin="7" end="0" resetval="0" description="Receive flow threshold. These bits contain the threshold value for issuing flow control on incoming frames (when enabled)." range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX1FLOWTHRESH" acronym="RX1FLOWTHRESH" offset="0x124" width="32" description="Receive Channel 1 Flow Control Threshold Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX1FLOWTHRESH" width="8" begin="7" end="0" resetval="0" description="Receive flow threshold. These bits contain the threshold value for issuing flow control on incoming frames (when enabled)." range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX2FLOWTHRESH" acronym="RX2FLOWTHRESH" offset="0x128" width="32" description="Receive Channel 2 Flow Control Threshold Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX2FLOWTHRESH" width="8" begin="7" end="0" resetval="0" description="Receive flow threshold. These bits contain the threshold value for issuing flow control on incoming frames (when enabled)." range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX3FLOWTHRESH" acronym="RX3FLOWTHRESH" offset="0x12c" width="32" description="Receive Channel 3 Flow Control Threshold Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX3FLOWTHRESH" width="8" begin="7" end="0" resetval="0" description="Receive flow threshold. These bits contain the threshold value for issuing flow control on incoming frames (when enabled)." range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX4FLOWTHRESH" acronym="RX4FLOWTHRESH" offset="0x130" width="32" description="Receive Channel 4 Flow Control Threshold Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX4FLOWTHRESH" width="8" begin="7" end="0" resetval="0" description="Receive flow threshold. These bits contain the threshold value for issuing flow control on incoming frames (when enabled)." range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX5FLOWTHRESH" acronym="RX5FLOWTHRESH" offset="0x134" width="32" description="Receive Channel 5 Flow Control Threshold Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX5FLOWTHRESH" width="8" begin="7" end="0" resetval="0" description="Receive flow threshold. These bits contain the threshold value for issuing flow control on incoming frames (when enabled)." range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX6FLOWTHRESH" acronym="RX6FLOWTHRESH" offset="0x138" width="32" description="Receive Channel 6 Flow Control Threshold Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX6FLOWTHRESH" width="8" begin="7" end="0" resetval="0" description="Receive flow threshold. These bits contain the threshold value for issuing flow control on incoming frames (when enabled)." range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX7FLOWTHRESH" acronym="RX7FLOWTHRESH" offset="0x13c" width="32" description="Receive Channel 7 Flow Control Threshold Register ">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX7FLOWTHRESH" width="8" begin="7" end="0" resetval="0" description="Receive flow threshold. These bits contain the threshold value for issuing flow control on incoming frames (when enabled)." range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX0FREEBUFFER" acronym="RX0FREEBUFFER" offset="0x140" width="32" description="Receive Channel 0 Free Buffer Count Register ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX0FREEBUF" width="16" begin="15" end="0" resetval="0" description="Receive free buffer count. These bits contain the count of free buffers available. The RXFILTERTHRESH value is compared with this field to determine if low priority frames should be filtered. The RX0FLOWTHRESH value is compared with this field to determine if receive flow control should be issued against incoming packets (if enabled). This is a write-to-increment field. This field rolls over to zero on overflow. If hardware flow control or QOS is used, the host must initialize this field to the number of available buffers (one register per channel). The EMAC decrements (by the number of buffers in the received frame) the associated channel register for each received frame. The host must write this field with the number of buffers that have been freed due to host processing." range="0-FFFFh" rwaccess="WI"></bitfield>
</register>
     <register id="RX1FREEBUFFER" acronym="RX1FREEBUFFER" offset="0x144" width="32" description="Receive Channel 1 Free Buffer Count Register ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX1FREEBUF" width="16" begin="15" end="0" resetval="0" description="Receive free buffer count. These bits contain the count of free buffers available. The RXFILTERTHRESH value is compared with this field to determine if low priority frames should be filtered. The RX1FLOWTHRESH value is compared with this field to determine if receive flow control should be issued against incoming packets (if enabled). This is a write-to-increment field. This field rolls over to zero on overflow. If hardware flow control or QOS is used, the host must initialize this field to the number of available buffers (one register per channel). The EMAC decrements (by the number of buffers in the received frame) the associated channel register for each received frame. The host must write this field with the number of buffers that have been freed due to host processing." range="0-FFFFh" rwaccess="WI"></bitfield>
</register>
     <register id="RX2FREEBUFFER" acronym="RX2FREEBUFFER" offset="0x148" width="32" description="Receive Channel 2 Free Buffer Count Register ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX2FREEBUF" width="16" begin="15" end="0" resetval="0" description="Receive free buffer count. These bits contain the count of free buffers available. The RXFILTERTHRESH value is compared with this field to determine if low priority frames should be filtered. The RX2FLOWTHRESH value is compared with this field to determine if receive flow control should be issued against incoming packets (if enabled). This is a write-to-increment field. This field rolls over to zero on overflow. If hardware flow control or QOS is used, the host must initialize this field to the number of available buffers (one register per channel). The EMAC decrements (by the number of buffers in the received frame) the associated channel register for each received frame. The host must write this field with the number of buffers that have been freed due to host processing." range="0-FFFFh" rwaccess="WI"></bitfield>
</register>
     <register id="RX3FREEBUFFER" acronym="RX3FREEBUFFER" offset="0x14c" width="32" description="Receive Channel 3 Free Buffer Count Register ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX3FREEBUF" width="16" begin="15" end="0" resetval="0" description="Receive free buffer count. These bits contain the count of free buffers available. The RXFILTERTHRESH value is compared with this field to determine if low priority frames should be filtered. The RX3FLOWTHRESH value is compared with this field to determine if receive flow control should be issued against incoming packets (if enabled). This is a write-to-increment field. This field rolls over to zero on overflow. If hardware flow control or QOS is used, the host must initialize this field to the number of available buffers (one register per channel). The EMAC decrements (by the number of buffers in the received frame) the associated channel register for each received frame. The host must write this field with the number of buffers that have been freed due to host processing." range="0-FFFFh" rwaccess="WI"></bitfield>
</register>
     <register id="RX4FREEBUFFER" acronym="RX4FREEBUFFER" offset="0x150" width="32" description="Receive Channel 4 Free Buffer Count Register ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX4FREEBUF" width="16" begin="15" end="0" resetval="0" description="Receive free buffer count. These bits contain the count of free buffers available. The RXFILTERTHRESH value is compared with this field to determine if low priority frames should be filtered. The RX4FLOWTHRESH value is compared with this field to determine if receive flow control should be issued against incoming packets (if enabled). This is a write-to-increment field. This field rolls over to zero on overflow. If hardware flow control or QOS is used, the host must initialize this field to the number of available buffers (one register per channel). The EMAC decrements (by the number of buffers in the received frame) the associated channel register for each received frame. The host must write this field with the number of buffers that have been freed due to host processing." range="0-FFFFh" rwaccess="WI"></bitfield>
</register>
     <register id="RX5FREEBUFFER" acronym="RX5FREEBUFFER" offset="0x154" width="32" description="Receive Channel 5 Free Buffer Count Register ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX5FREEBUF" width="16" begin="15" end="0" resetval="0" description="Receive free buffer count. These bits contain the count of free buffers available. The RXFILTERTHRESH value is compared with this field to determine if low priority frames should be filtered. The RX5FLOWTHRESH value is compared with this field to determine if receive flow control should be issued against incoming packets (if enabled). This is a write-to-increment field. This field rolls over to zero on overflow. If hardware flow control or QOS is used, the host must initialize this field to the number of available buffers (one register per channel). The EMAC decrements (by the number of buffers in the received frame) the associated channel register for each received frame. The host must write this field with the number of buffers that have been freed due to host processing." range="0-FFFFh" rwaccess="WI"></bitfield>
</register>
     <register id="RX6FREEBUFFER" acronym="RX6FREEBUFFER" offset="0x158" width="32" description="Receive Channel 6 Free Buffer Count Register ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX6FREEBUF" width="16" begin="15" end="0" resetval="0" description="Receive free buffer count. These bits contain the count of free buffers available. The RXFILTERTHRESH value is compared with this field to determine if low priority frames should be filtered. The RX6FLOWTHRESH value is compared with this field to determine if receive flow control should be issued against incoming packets (if enabled). This is a write-to-increment field. This field rolls over to zero on overflow. If hardware flow control or QOS is used, the host must initialize this field to the number of available buffers (one register per channel). The EMAC decrements (by the number of buffers in the received frame) the associated channel register for each received frame. The host must write this field with the number of buffers that have been freed due to host processing." range="0-FFFFh" rwaccess="WI"></bitfield>
</register>
     <register id="RX7FREEBUFFER" acronym="RX7FREEBUFFER" offset="0x15c" width="32" description="Receive Channel 7 Free Buffer Count Register ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RX7FREEBUF" width="16" begin="15" end="0" resetval="0" description="Receive free buffer count. These bits contain the count of free buffers available. The RXFILTERTHRESH value is compared with this field to determine if low priority frames should be filtered. The RX7FLOWTHRESH value is compared with this field to determine if receive flow control should be issued against incoming packets (if enabled). This is a write-to-increment field. This field rolls over to zero on overflow. If hardware flow control or QOS is used, the host must initialize this field to the number of available buffers (one register per channel). The EMAC decrements (by the number of buffers in the received frame) the associated channel register for each received frame. The host must write this field with the number of buffers that have been freed due to host processing." range="0-FFFFh" rwaccess="WI"></bitfield>
</register>
     <register id="MACCONTROL" acronym="MACCONTROL" offset="0x160" width="32" description="MAC Control Register ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RMIISPEED" width="1" begin="15" end="15" resetval="0" description="RMII speed" range="" rwaccess="RW">
<bitenum id="2.5Mhz" value="0" token="2.5Mhz" description="RMII Speed 2.5Mhz (10Mbps mode)" />
<bitenum id="25Mhz" value="1" token="25Mhz" description="RMII Speed 25Mhz (100Mbps mode)" />
</bitfield>
<bitfield id="RXOFFLENBLOCK" width="1" begin="14" end="14" resetval="0" description="Receive offset / length word write block" range="" rwaccess="RW">
<bitenum id="NOBLOCK" value="0" token="NOBLOCK" description="Do not block the DMA writes to the receive buffer descriptor offset/buffer length word" />
<bitenum id="BLOCK" value="1" token="BLOCK" description="Block all EMAC DMA controller writes to the receive buffer descriptor offset/buffer length words during packet processing. When this bit is set, the EMAC will never write the third word to any receive buffer descriptor" />
</bitfield>
<bitfield id="RXOWNERSHIP" width="1" begin="13" end="13" resetval="0" description="Receive ownership write bit value" range="" rwaccess="RW">
<bitenum id="ZERO" value="0" token="ZERO" description="The EMAC writes the Receive ownership bit to zero at the end of packet processing " />
<bitenum id="ONE" value="1" token="ONE" description="The EMAC writes the Receive ownership bit to one at the end of packet processing " />
</bitfield>
<bitfield id="_RESV_5" width="1" begin="12" end="12" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CMDIDLE" width="1" begin="11" end="11" resetval="0" description="Command Idle bit" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Idle not commanded" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Idle commanded (read IDLE in the MACSTATUS register)" />
</bitfield>
<bitfield id="_RESV_7" width="1" begin="10" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TXPTYPE" width="1" begin="9" end="9" resetval="0" description="Transmit queue priority type" range="" rwaccess="RW">
<bitenum id="RROBIN" value="0" token="RROBIN" description="The queue uses a round-robin scheme to select the next channel for transmission" />
<bitenum id="CHANNELPRI" value="1" token="CHANNELPRI" description="The queue uses a fixed-priority (channel 7 highest priority) scheme to select the next channel for transmission" />
</bitfield>
<bitfield id="_RESV_9" width="1" begin="8" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="_RESV_10" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TXPACE" width="1" begin="6" end="6" resetval="0" description="Transmit pacing enable bit" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Transmit pacing is disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Transmit pacing is enabled" />
</bitfield>
<bitfield id="GMIIEN" width="1" begin="5" end="5" resetval="0" description="GMII enable bit" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="GMII RX and TX are held in reset" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="GMII RX and TX are enabled for receive and transmit" />
</bitfield>
<bitfield id="TXFLOWEN" width="1" begin="4" end="4" resetval="0" description="Transmit flow control enable bit. This bit determines if incoming pause frames are acted upon in full-duplex mode. Incoming pause frames are not acted upon in half-duplex mode, regardless of this bit setting. The RXMBPENABLE bits determine whether or not received pause frames are transferred to memory." range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Transmit flow control is disabled. Full-duplex mode: incoming pause frames are not acted upon" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Transmit flow control is enabled. Full-duplex mode: incoming pause frames are acted upon" />
</bitfield>
<bitfield id="RXBUFFERFLOWEN" width="1" begin="3" end="3" resetval="0" description="Receive buffer flow control enable bit" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Receive flow control is disabled. Half-duplex mode: no flow control generated collisions are sent. Full-duplex mode: no outgoing pause frames are sent" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Receive flow control is enabled. Half-duplex mode: collisions are initiated when receive buffer flow control is triggered. Full-duplex mode: outgoing pause frames are sent when receive flow control is triggered" />
</bitfield>
<bitfield id="_RESV_15" width="1" begin="2" end="2" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="LOOPBACK" width="1" begin="1" end="1" resetval="0" description="Loopback mode. The loopback mode forces internal full-duplex mode regardless of the FULLDUPLEX bit. The loopback bit should be changed only when GMIIEN bit is deasserted." range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Loopback mode is disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Loopback mode is enabled" />
</bitfield>
<bitfield id="FULLDUPLEX" width="1" begin="0" end="0" resetval="0" description="Full duplex mode. The gigabit mode forces full duplex mode regardless of whether the FULLDUPLEX bit is set or not." range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Half-duplex mode is enabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Full-duplex mode is enabled" />
</bitfield>
</register>
     <register id="MACSTATUS" acronym="MACSTATUS" offset="0x164" width="32" description="MAC Status Register">
<bitfield id="IDLE" width="1" begin="31" end="31" resetval="0" description="EMAC idle bit. This bit is set to 0 at reset; one clock after reset it goes to 1." range="" rwaccess="R">
<bitenum id="NOIDLE" value="0" token="NOIDLE" description="The EMAC is not idle" />
<bitenum id="IDLE" value="1" token="IDLE" description="The EMAC is in the idle state" />
</bitfield>
<bitfield id="_RESV_2" width="7" begin="30" end="24" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="TXERRCODE" width="4" begin="23" end="20" resetval="0" description="Transmit host error code. These bits indicate that EMAC detected transmit DMA related host errors. The host should read this field after a host error interrupt (HOSTPEND) to determine the error. Host error interrupts require hardware reset in order to recover. A zero packet length is an error, but it is not detected" range="0-Fh" rwaccess="R">
<bitenum id="NOERROR" value="0" token="NOERROR" description="No error" />
<bitenum id="SOPERROR" value="1" token="SOPERROR" description="SOP error; the buffer is the first buffer in a packet, but the SOP bit is not set in software." />
<bitenum id="OWNERSHIP" value="2" token="OWNERSHIP" description="Ownership bit not set in SOP buffer" />
<bitenum id="NOEOP" value="3" token="NOEOP" description="Zero next buffer descriptor pointer without EOP" />
<bitenum id="NULLPTR" value="4" token="NULLPTR" description="Zero buffer pointer" />
<bitenum id="NULLEN" value="5" token="NULLEN" description="Zero buffer length" />
<bitenum id="LENRRROR" value="6" token="LENRRROR" description="Packet length error (sum of buffers &amp;#60; packet length)" />
</bitfield>
<bitfield id="_RESV_4" width="1" begin="19" end="19" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="TXERRCH" width="3" begin="18" end="16" resetval="0" description="Transmit host error channel. These bits indicate which transmit channel the host error occurred on. This field is cleared to 0 on a host read." range="0-7h" rwaccess="R">
<bitenum id="CHA0" value="0" token="CHA0" description="The host error occurred on transmit channel 0" />
<bitenum id="CHA1" value="1" token="CHA1" description="The host error occurred on transmit channel 1" />
<bitenum id="CHA2" value="2" token="CHA2" description="The host error occurred on transmit channel 2" />
<bitenum id="CHA3" value="3" token="CHA3" description="The host error occurred on transmit channel 3" />
<bitenum id="CHA4" value="4" token="CHA4" description="The host error occurred on transmit channel 4" />
<bitenum id="CHA5" value="5" token="CHA5" description="The host error occurred on transmit channel 5" />
<bitenum id="CHA6" value="6" token="CHA6" description="The host error occurred on transmit channel 6" />
<bitenum id="CHA7" value="7" token="CHA7" description="The host error occurred on transmit channel 7" />
</bitfield>
<bitfield id="RXERRCODE" width="4" begin="15" end="12" resetval="0" description="Receive host error code. These bits indicate that EMAC detected receive DMA related host errors. The host should read this field after a host error interrupt (HOSTPEND) to determine the error. Host error interrupts require hardware reset in order to recover." range="0-Fh" rwaccess="R">
<bitenum id="NOERROR" value="0" token="NOERROR" description="No error" />
<bitenum id="OWNERSHIP" value="2" token="OWNERSHIP" description="Ownership bit not set in SOP buffer" />
<bitenum id="NULLPTR" value="4" token="NULLPTR" description="Zero buffer pointer" />
</bitfield>
<bitfield id="_RESV_7" width="1" begin="11" end="11" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXERRCH" width="3" begin="10" end="8" resetval="0" description="Receive host error channel. These bits indicate which receive channel the host error occurred on. This field is cleared to 0 on a host read." range="0-7h" rwaccess="R">
<bitenum id="CHA0" value="0" token="CHA0" description="The host error occurred on receive channel 0" />
<bitenum id="CHA1" value="1" token="CHA1" description="The host error occurred on receive channel 1" />
<bitenum id="CHA2" value="2" token="CHA2" description="The host error occurred on receive channel 2" />
<bitenum id="CHA3" value="3" token="CHA3" description="The host error occurred on receive channel 3" />
<bitenum id="CHA4" value="4" token="CHA4" description="The host error occurred on receive channel 4" />
<bitenum id="CHA5" value="5" token="CHA5" description="The host error occurred on receive channel 5" />
<bitenum id="CHA6" value="6" token="CHA6" description="The host error occurred on receive channel 6" />
<bitenum id="CHA7" value="7" token="CHA7" description="The host error occurred on receive channel 7" />
</bitfield>
<bitfield id="_RESV_9" width="5" begin="7" end="3" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RXQOSACT" width="1" begin="2" end="2" resetval="0" description="Receive Quality of Service (QOS) active bit. When asserted, indicates that receive quality of service is enabled and that at least one channel freebuffer count (RXnFREEBUFFER) is less than or equal to the RXFILTERLOWTHRESH value." range="" rwaccess="R">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Receive quality of service is disabled." />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Receive quality of service is enabled" />
</bitfield>
<bitfield id="RXFLOWACT" width="1" begin="1" end="1" resetval="0" description="Receive flow control active bit. When asserted, indicates that at least one channel freebuffer count (RXnFREEBUFFER) is less than or equal to the channel's corresponding RXnFILTERTHRESH value." range="" rwaccess="R">
<bitenum id="INACTIVE" value="0" token="INACTIVE" description="Receive flow control is inactive" />
<bitenum id="ACTIVE" value="1" token="ACTIVE" description="Receive flow control is active" />
</bitfield>
<bitfield id="TXFLOWACT" width="1" begin="0" end="0" resetval="0" description="Transmit flow control active bit. When asserted, this bit indicates that the pause time period is being observed for a received pause frame. No new transmissions will begin while this bit is asserted except for the transmission of pause frames. Any transmission in progress when this bit is asserted will complete." range="" rwaccess="R">
<bitenum id="INACTIVE" value="0" token="INACTIVE" description="Transmit flow control is inactive" />
<bitenum id="ACTIVE" value="1" token="ACTIVE" description="Transmit flow control is active" />
</bitfield>
</register>
     <register id="EMCONTROL" acronym="EMCONTROL" offset="0x168" width="32" description="Emulation Control Register">
<bitfield id="_RESV_1" width="30" begin="31" end="2" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="SOFT" width="1" begin="1" end="1" resetval="0" description="Emulation soft bit" range="" rwaccess="RW"></bitfield>
<bitfield id="FREE" width="1" begin="0" end="0" resetval="0" description="Emulation free bit" range="" rwaccess="RW"></bitfield>
</register>
     <register id="FIFOCONTROL" acronym="FIFOCONTROL" offset="0x16c" width="32" description="FIFO Control Register">
<bitfield id="_RESV_1" width="30" begin="31" end="2" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="TXCELLTHRESH" width="2" begin="1" end="0" resetval="2" description="Transmit FIFO cell threshold. Indicates the number of 64-byte packet cells required to be in the transmit FIFO before the packet transfer is initiated. Packets with fewer cells will be initiated when the complete packet is contained in the FIFO. " range="2-18h" rwaccess="RW"></bitfield>
</register>
     <register id="MACCONFIG" acronym="MACCONFIG" offset="0x170" width="32" description="MAC Configuration Register ">
<bitfield id="TXCELLDEPTH" width="8" begin="31" end="24" resetval="24" description="Transmit cell depth. These bit indicates the number of cells in the transmit FIFO." range="0-FFh" rwaccess="R"></bitfield>
<bitfield id="RXCELLDEPTH" width="8" begin="23" end="16" resetval="68" description="Receive cell depth. These bits indicate the number of cells in the receive FIFO." range="0-FFh" rwaccess="R"></bitfield>
<bitfield id="ADDRESSTYPE" width="8" begin="15" end="8" resetval="2" description="Address type" range="0-FFh" rwaccess="R"></bitfield>
<bitfield id="MACCFIG" width="8" begin="7" end="0" resetval="3" description="MAC configuration value" range="0-FFh" rwaccess="R"></bitfield>
</register>
     <register id="SOFTRESET" acronym="SOFTRESET" offset="0x174" width="32" description="Soft Reset Register ">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="SOFTRESET" width="1" begin="0" end="0" resetval="0" description="Software reset. Writing a one to this bit causes the EMAC logic to be reset. Software reset occurs when the receive and transmit DMA controllers are in an idle state to avoid locking up the Configuration bus. After writing a one to this bit, it may be polled to determine if the reset has occurred. If a one is read, the reset has not yet occurred. If a zero is read then reset has occurred." range="0-1h" rwaccess="RW">
<bitenum id="NORESET" value="0" token="NORESET" description="A software reset has not occurred" />
<bitenum id="RESET" value="1" token="RESET" description="A software reset has occurred" />
</bitfield>
</register>
     <register id="MACSRCADDRLO" acronym="MACSRCADDRLO" offset="0x1d0" width="32" description="MAC Source Address Low Bytes Register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="MACSRCADDR0" width="8" begin="15" end="8" resetval="0" description="MAC source address lower 8 bits (byte 0)" range="0-FFh" rwaccess="RW"></bitfield>
<bitfield id="MACSRCADDR1" width="8" begin="7" end="0" resetval="0" description="MAC source address bits 15-9 (byte 1)" range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="MACSRCADDRHI" acronym="MACSRCADDRHI" offset="0x1d4" width="32" description="MAC Source Address High Bytes Register">
<bitfield id="MACSRCADDR2" width="8" begin="31" end="24" resetval="0" description="MAC source address bits 23-16 (byte 2)" range="0-FFh" rwaccess="RW"></bitfield>
<bitfield id="MACSRCADDR3" width="8" begin="23" end="16" resetval="0" description="MAC source address bits 31-23 (byte 3)" range="0-FFh" rwaccess="RW"></bitfield>
<bitfield id="MACSRCADDR4" width="8" begin="15" end="8" resetval="0" description="MAC source address bits 39-32 (byte 4)" range="0-FFh" rwaccess="RW"></bitfield>
<bitfield id="MACSRCADDR5" width="8" begin="7" end="0" resetval="0" description="MAC source address bits 47-40 (byte 5)" range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="MACHASH1" acronym="MACHASH1" offset="0x1d8" width="32" description="MAC Hash Address Register 1">
<bitfield id="MACHASH1" width="32" begin="31" end="0" resetval="0" description="Least-significant 32 bits of the hash table corresponding to hash values 0 to 31. If a hash table bit is set, then a group address that hashes to that bit index is accepted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="MACHASH2" acronym="MACHASH2" offset="0x1dc" width="32" description="MAC Hash Address Register 2">
<bitfield id="MACHASH2" width="32" begin="31" end="0" resetval="0" description="Most-significant 32 bits of the hash table corresponding to hash values 32 to 63. If a hash table bit is set, then a group address that hashes to that bit index is accepted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="BOFFTEST" acronym="BOFFTEST" offset="0x1e0" width="32" description="Back Off Test Register">
<bitfield id="_RESV_1" width="6" begin="31" end="26" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="RNDNUM" width="10" begin="25" end="16" resetval="0" description="Backoff random number generator. This field allows the Backoff Random Number Generator to be read. Reading this field returns the generator's current value. The value is reset to zero and begins counting on the clock after the deassertion of reset." range="0-3FFh" rwaccess="R"></bitfield>
<bitfield id="COLLCOUNT" width="4" begin="15" end="12" resetval="0" description="Collision count. These bits indicate the number of collisions the current frame has experienced." range="0-Fh" rwaccess="R"></bitfield>
<bitfield id="_RESV_4" width="2" begin="11" end="10" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="TXBACKOFF" width="10" begin="9" end="0" resetval="0" description="Backoff count. This field allows the current value of the backoff counter to be observed for test purposes. This field is loaded automatically according to the backoff algorithm, and is decremented by one for each slot time after the collision." range="0-3FFh" rwaccess="R"></bitfield>
</register>
     <register id="TPACETEST" acronym="TPACETEST" offset="0x1e4" width="32" description="Transmit Pacing  Algorithm Test Register ">
<bitfield id="_RESV_1" width="27" begin="31" end="5" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="PACEVAL" width="5" begin="4" end="0" resetval="0" description="Pacing register current value. A nonzero value in this field indicates that transmit pacing is active. A transmit frame collision or deferral causes PACEVAL to be loaded with 1Fh (31); good frame transmissions (with no collisions or deferrals) cause PACEVAL to be decremented down to 0. When PACEVAL is nonzero, the transmitter delays four Inter Packet Gaps between new frame transmissions after each successfully transmitted frame that had no deferrals or collisions. If a transmit frame is deferred or suffers a collision, the IPG time is not stretched to four times the normal value. Transmit pacing helps reduce capture effects, which improves overall network bandwidth." range="0-1Fh" rwaccess="R"></bitfield>
</register>
     <register id="RXPAUSE" acronym="RXPAUSE" offset="0x1e8" width="32" description="Receive Pause Timer Register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="PAUSETIMER" width="16" begin="15" end="0" resetval="0" description="Receive pause timer value. These bits allow the contents of the receive pause timer to be observed. The receive pause timer is loaded with FF00h when the EMAC sends an outgoing pause frame (with pause time of FFFFh). The receive pause timer is decremented at slot time intervals. If the receive pause timer decrements to 0, then another outgoing pause frame is sent and the load/decrement process is repeated." range="0-FFFFh" rwaccess="R"></bitfield>
</register>
     <register id="TXPAUSE" acronym="TXPAUSE" offset="0x1ec" width="32" description="Transmit Pause Timer Register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="PAUSETIMER" width="16" begin="15" end="0" resetval="0" description="Transmit pause timer value. These bits allow the contents of the transmit pause timer to be observed. The transmit pause timer is loaded by a received (incoming) pause frame, and then decremented at slot time intervals down to 0 at which time EMAC transmit frames are again enabled." range="0-FFFFh" rwaccess="R"></bitfield>
</register>
     <register id="RXGOODFRAMES" acronym="RXGOODFRAMES" offset="0x200" width="32" description="Good Receive Frames">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXBCASTFRAMES" acronym="RXBCASTFRAMES" offset="0x204" width="32" description="Total number of good broadcast frames received">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXMCASTFRAMES" acronym="RXMCASTFRAMES" offset="0x208" width="32" description="Total number of good multicast frames received">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXPAUSEFRAMES" acronym="RXPAUSEFRAMES" offset="0x20c" width="32" description="Pause Receive Frames Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXCRCERRORS" acronym="RXCRCERRORS" offset="0x210" width="32" description="Total number of frames received with CRC errors">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXALIGNCODEERRORS" acronym="RXALIGNCODEERRORS" offset="0x214" width="32" description="Total number of frames received with alignment/code errors">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXOVERSIZED" acronym="RXOVERSIZED" offset="0x218" width="32" description="Total number of oversized frames received">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXJABBER" acronym="RXJABBER" offset="0x21c" width="32" description="Total number of jabber frames received">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXUNDERSIZED" acronym="RXUNDERSIZED" offset="0x220" width="32" description="Total number of undersized frames received">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXFRAGMENTS" acronym="RXFRAGMENTS" offset="0x224" width="32" description="Receive Frame Fragments Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXFILTERED" acronym="RXFILTERED" offset="0x228" width="32" description="Filtered Receive Frames">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXQOSFILTERED" acronym="RXQOSFILTERED" offset="0x22c" width="32" description="Received Frames Filtered by QOS">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXOCTETS" acronym="RXOCTETS" offset="0x230" width="32" description="Total number of received bytes in good frames">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXGOODFRAMES" acronym="TXGOODFRAMES" offset="0x234" width="32" description="Total number of good frames transmitted">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXBCASTFRAMES" acronym="TXBCASTFRAMES" offset="0x238" width="32" description="Broadcast Transmit Frames Register">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXMCASTFRAMES" acronym="TXMCASTFRAMES" offset="0x23c" width="32" description="Multicast Transmit Frames Register">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXPAUSEFRAMES" acronym="TXPAUSEFRAMES" offset="0x240" width="32" description="Pause Transmit Frames Register">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXDEFERRED" acronym="TXDEFERRED" offset="0x244" width="32" description="Deferred Transmit Frames Register">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXCOLLISION" acronym="TXCOLLISION" offset="0x248" width="32" description="Transmit Collision Frames Register">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXSINGLECOLL" acronym="TXSINGLECOLL" offset="0x24c" width="32" description="Transmit Single Collision Frames Register">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXMULTICOLL" acronym="TXMULTICOLL" offset="0x250" width="32" description="Transmit Multiple Collision Frames Register">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXEXCESSIVECOLL" acronym="TXEXCESSIVECOLL" offset="0x254" width="32" description="Transmit Excessive Collision Frames Register">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXLATECOLL" acronym="TXLATECOLL" offset="0x258" width="32" description="Transmit Late Collision Frames Register">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXUNDERRUN" acronym="TXUNDERRUN" offset="0x25c" width="32" description="Transmit Underrun Error Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXCARRIERSENSE" acronym="TXCARRIERSENSE" offset="0x260" width="32" description="Transmit Carrier Sense Errors Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TXOCTETS" acronym="TXOCTETS" offset="0x264" width="32" description="Transmit Octet Frames Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="FRAME64" acronym="FRAME64" offset="0x268" width="32" description="Transmit and Receive 64 Octet Frames Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="FRAME65T127" acronym="FRAME65T127" offset="0x26c" width="32" description="Transmit and Receive 65 to 127 Octet Frames Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="FRAME128T255" acronym="FRAME128T255" offset="0x270" width="32" description="Transmit and Receive 128 to 255 Octet Frames Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="FRAME256T511" acronym="FRAME256T511" offset="0x274" width="32" description="Transmit and Receive 256 to 511 Octet Frames Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="FRAME512T1023" acronym="FRAME512T1023" offset="0x278" width="32" description="Transmit and Receive 512 to 1023 Octet Frames Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="FRAME1024TUP" acronym="FRAME1024TUP" offset="0x27c" width="32" description="Transmit and Receive 1024 to 1518 Octet Frames Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="NETOCTETS" acronym="NETOCTETS" offset="0x280" width="32" description="Network Octet Frames Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXSOFOVERRUNS" acronym="RXSOFOVERRUNS" offset="0x284" width="32" description="Receive FIFO or DMA Start of Frame Overruns Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXMOFOVERRUNS" acronym="RXMOFOVERRUNS" offset="0x288" width="32" description="Receive FIFO or DMA Middle of Frame Overruns Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RXDMAOVERRUNS" acronym="RXDMAOVERRUNS" offset="0x28c" width="32" description="Receive DMA Start of Frame and Middle of Frame Overruns Register ">
<bitfield id="COUNT" width="32" begin="31" end="0" resetval="0" description="Count" range="" rwaccess="RW"></bitfield>
</register>
     <register id="MACADDRLO" acronym="MACADDRLO" offset="0x500" width="32" description="MAC Address Low Bytes Register, Used in Receive Address Matching ">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="MACADDR0" width="8" begin="15" end="8" resetval="0" description="MAC addres lower 8 bits (byte 0)" range="0-FFh" rwaccess="RW"></bitfield>
<bitfield id="MACADDR1" width="8" begin="7" end="0" resetval="0" description="MAC addres bits 15-8 (byte 1)" range="" rwaccess="RW"></bitfield>
</register>
     <register id="MACADDRHI" acronym="MACADDRHI" offset="0x504" width="32" description="MAC Address High Bytes Register, Used in Receive Address Matching ">
<bitfield id="MACADDR2" width="8" begin="31" end="24" resetval="0" description="MAC source address bits 23-16 (byte 2)" range="0-FFh" rwaccess="RW"></bitfield>
<bitfield id="MACADDR3" width="8" begin="23" end="16" resetval="0" description="MAC source address bits 31-23 (byte 3)" range="0-FFh" rwaccess="RW"></bitfield>
<bitfield id="MACADDR4" width="8" begin="15" end="8" resetval="0" description="MAC source address bits 39-32 (byte 4)" range="0-FFh" rwaccess="RW"></bitfield>
<bitfield id="MACADDR5" width="8" begin="7" end="0" resetval="0" description="MAC source address bits 47-40 (byte 5)" range="0-FFh" rwaccess="RW"></bitfield>
</register>
     <register id="MACINDEX" acronym="MACINDEX" offset="0x508" width="32" description="MAC Index Register">
<bitfield id="_RESV_1" width="29" begin="31" end="3" resetval="0" description="Reserved " range="" rwaccess="N"></bitfield>
<bitfield id="MACINDEX" width="3" begin="2" end="0" resetval="0" description="MAC address index. The host must write the index into the RX ADDR RAM in the MACINDEX field, followed by the upper 32-bits of address, followed by the lower 16-bits of address (with control bits). The 53-bit indexed ram location is written when the low location is written. All 32 address RAM locations must be initialized prior to enabling packet reception." range="0-7h" rwaccess="RW"></bitfield>
</register>
     <register id="TX0HDP" acronym="TX0HDP" offset="0x600" width="32" description="Transmit Channel 0 DMA Head Descriptor Pointer Register">
<bitfield id="TX0HDP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 0 DMA Head Descriptor pointer. Writing a transmit DMA buffer descriptor address to a head pointer location initiates transmit DMA operations in the queue for the selected channel. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX1HDP" acronym="TX1HDP" offset="0x604" width="32" description="Transmit Channel 1 DMA Head Descriptor Pointer Register">
<bitfield id="TX1HDP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 1 DMA Head Descriptor pointer. Writing a transmit DMA buffer descriptor address to a head pointer location initiates transmit DMA operations in the queue for the selected channel. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX2HDP" acronym="TX2HDP" offset="0x608" width="32" description="Transmit Channel 2 DMA Head Descriptor Pointer Register">
<bitfield id="TX2HDP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 2 DMA Head Descriptor pointer. Writing a transmit DMA buffer descriptor address to a head pointer location initiates transmit DMA operations in the queue for the selected channel. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX3HDP" acronym="TX3HDP" offset="0x60c" width="32" description="Transmit Channel 3 DMA Head Descriptor Pointer Register">
<bitfield id="TX3HDP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 3 DMA Head Descriptor pointer. Writing a transmit DMA buffer descriptor address to a head pointer location initiates transmit DMA operations in the queue for the selected channel. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX4HDP" acronym="TX4HDP" offset="0x610" width="32" description="Transmit Channel 4 DMA Head Descriptor Pointer Register">
<bitfield id="TX4HDP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 4 DMA Head Descriptor pointer. Writing a transmit DMA buffer descriptor address to a head pointer location initiates transmit DMA operations in the queue for the selected channel. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX5HDP" acronym="TX5HDP" offset="0x614" width="32" description="Transmit Channel 5 DMA Head Descriptor Pointer Register">
<bitfield id="TX5HDP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 5 DMA Head Descriptor pointer. Writing a transmit DMA buffer descriptor address to a head pointer location initiates transmit DMA operations in the queue for the selected channel. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX6HDP" acronym="TX6HDP" offset="0x618" width="32" description="Transmit Channel 6 DMA Head Descriptor Pointer Register">
<bitfield id="TX6HDP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 6 DMA Head Descriptor pointer" range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX7HDP" acronym="TX7HDP" offset="0x61c" width="32" description="Transmit Channel 7 DMA Head Descriptor Pointer Register">
<bitfield id="TX7HDP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 7 DMA Head Descriptor pointer. Writing a transmit DMA buffer descriptor address to a head pointer location initiates transmit DMA operations in the queue for the selected channel. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX0HDP" acronym="RX0HDP" offset="0x620" width="32" description="Receive Channel 0 DMA Head Descriptor Pointer Register">
<bitfield id="RX0HDP" width="32" begin="31" end="0" resetval="0" description="Receive channel 0 DMA Head Descriptor pointer. Writing a receive DMA buffer descriptor address to this location allows receive DMA operations in the selected channel when a channel frame is received. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX1HDP" acronym="RX1HDP" offset="0x624" width="32" description="Receive Channel 1 DMA Head Descriptor Pointer Register">
<bitfield id="RX1HDP" width="32" begin="31" end="0" resetval="0" description="Receive channel 1 DMA Head Descriptor pointer. . Writing a receive DMA buffer descriptor address to this location allows receive DMA operations in the selected channel when a channel frame is received. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX2HDP" acronym="RX2HDP" offset="0x628" width="32" description="Receive Channel 2 DMA Head Descriptor Pointer Register">
<bitfield id="RX2HDP" width="32" begin="31" end="0" resetval="0" description="Receive channel 2 DMA Head Descriptor pointer. Writing a receive DMA buffer descriptor address to this location allows receive DMA operations in the selected channel when a channel frame is received. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX3HDP" acronym="RX3HDP" offset="0x62c" width="32" description="Receive Channel 3 DMA Head Descriptor Pointer Register">
<bitfield id="RX3HDP" width="32" begin="31" end="0" resetval="0" description="Receive channel 3 DMA Head Descriptor pointer. Writing a receive DMA buffer descriptor address to this location allows receive DMA operations in the selected channel when a channel frame is received. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX4HDP" acronym="RX4HDP" offset="0x630" width="32" description="Receive Channel 4 DMA Head Descriptor Pointer Register">
<bitfield id="RX4HDP" width="32" begin="31" end="0" resetval="0" description="Receive channel 4 DMA Head Descriptor pointer. Writing a receive DMA buffer descriptor address to this location allows receive DMA operations in the selected channel when a channel frame is received. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX5HDP" acronym="RX5HDP" offset="0x634" width="32" description="Receive Channel 5 DMA Head Descriptor Pointer Register">
<bitfield id="RX5HDP" width="32" begin="31" end="0" resetval="0" description="Receive channel 5 DMA Head Descriptor pointer. Writing a receive DMA buffer descriptor address to this location allows receive DMA operations in the selected channel when a channel frame is received. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX6HDP" acronym="RX6HDP" offset="0x638" width="32" description="Receive Channel 6 DMA Head Descriptor Pointer Register">
<bitfield id="RX6HDP" width="32" begin="31" end="0" resetval="0" description="Receive channel 6 DMA Head Descriptor pointer. Writing a receive DMA buffer descriptor address to this location allows receive DMA operations in the selected channel when a channel frame is received. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX7HDP" acronym="RX7HDP" offset="0x63c" width="32" description="Receive Channel 7 DMA Head Descriptor Pointer Register">
<bitfield id="RX7HDP" width="32" begin="31" end="0" resetval="0" description="Receive channel 7 DMA Head Descriptor pointer. Writing a receive DMA buffer descriptor address to this location allows receive DMA operations in the selected channel when a channel frame is received. Writing to these locations when they are nonzero is an error (except at reset). Host software must initialize these locations to zero on reset." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX0CP" acronym="TX0CP" offset="0x640" width="32" description="Transmit Channel 0 Completion Pointer (Interrupt Ack) Register">
<bitfield id="TX0CP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 0 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX1CP" acronym="TX1CP" offset="0x644" width="32" description="Transmit Channel 1 Completion Pointer Register">
<bitfield id="TX1CP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 1 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX2CP" acronym="TX2CP" offset="0x648" width="32" description="Transmit Channel 2 Completion Pointer Register">
<bitfield id="TX2CP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 2 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX3CP" acronym="TX3CP" offset="0x64c" width="32" description="Transmit Channel 3 Completion Pointer Register">
<bitfield id="TX3CP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 3 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX4CP" acronym="TX4CP" offset="0x650" width="32" description="Transmit Channel 4 Completion Pointer Register">
<bitfield id="TX4CP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 4 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX5CP" acronym="TX5CP" offset="0x654" width="32" description="Transmit Channel 5 Completion Pointer Register">
<bitfield id="TX5CP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 5 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX6CP" acronym="TX6CP" offset="0x658" width="32" description="Transmit Channel 6 Completion Pointer Register">
<bitfield id="TX6CP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 6 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="TX7CP" acronym="TX7CP" offset="0x65c" width="32" description="Transmit Channel 7 Completion Pointer Register">
<bitfield id="TX7CP" width="32" begin="31" end="0" resetval="0" description="Transmit channel 7 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX0CP" acronym="RX0CP" offset="0x660" width="32" description="Receive Channel 0 Completion Pointer (Interrupt Ack) Register">
<bitfield id="RX0CP" width="32" begin="31" end="0" resetval="0" description="Receive channel 0 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX1CP" acronym="RX1CP" offset="0x664" width="32" description="Receive Channel 1 Completion Pointer (Interrupt Ack) Register">
<bitfield id="RX1CP" width="32" begin="31" end="0" resetval="0" description="Receive channel 1 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX2CP" acronym="RX2CP" offset="0x668" width="32" description="Receive Channel 2 Completion Pointer (Interrupt Ack) Register">
<bitfield id="RX2CP" width="32" begin="31" end="0" resetval="0" description="Receive channel 2 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX3CP" acronym="RX3CP" offset="0x66c" width="32" description="Receive Channel 3 Completion Pointer (Interrupt Ack) Register">
<bitfield id="RX3CP" width="32" begin="31" end="0" resetval="0" description="Receive channel 3 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX4CP" acronym="RX4CP" offset="0x670" width="32" description="Receive Channel 4 Completion Pointer (Interrupt Ack) Register">
<bitfield id="RX4CP" width="32" begin="31" end="0" resetval="0" description="Receive channel 4 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX5CP" acronym="RX5CP" offset="0x674" width="32" description="Receive Channel 5 Completion Pointer (Interrupt Ack) Register">
<bitfield id="RX5CP" width="32" begin="31" end="0" resetval="0" description="Receive channel 5 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX6CP" acronym="RX6CP" offset="0x678" width="32" description="Receive Channel 6 Completion Pointer (Interrupt Ack) Register">
<bitfield id="RX6CP" width="32" begin="31" end="0" resetval="0" description="Receive channel 6 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
     <register id="RX7CP" acronym="RX7CP" offset="0x67c" width="32" description="Receive Channel 7 Completion Pointer (Interrupt Ack) Register">
<bitfield id="RX7CP" width="32" begin="31" end="0" resetval="0" description="Receive channel 7 completion pointer register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The EMAC uses the value written to determine if the interrupt should be deasserted." range="0-FFFFFFFFh" rwaccess="RW"></bitfield>
</register>
</module>
