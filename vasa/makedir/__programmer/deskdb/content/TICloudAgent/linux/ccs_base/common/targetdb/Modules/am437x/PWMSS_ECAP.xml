<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="PWMSS_ECAP" id="PWMSS_ECAP">
  
  
  <register acronym="TSCTR" description="" id="TSCTR" offset="0x0" width="32">
    
  <bitfield begin="31" description=" Active 32 bit counter register that is used as the capture time-base" end="0" id="TSCTR" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CTRPHS" description="" id="CTRPHS" offset="0x4" width="32">
    
  <bitfield begin="31" description=" Counter phase value register that can be programmed for phase lag/lead. [[br]]This register shadows TSCTR and is loaded into TSCTR upon either a SYNCI event or S/W force via a control bit. [[br]]Used to achieve phase control synchronization with respect to other eCAP and EPWM time-bases." end="0" id="CTRPHS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CAP1" description="" id="CAP1" offset="0x8" width="32">
    
  <bitfield begin="31" description=" This register can be loaded (written) by the following. [[br]](a) Time-Stamp (that is, counter value) during a capture event. [[br]](b) Software may be useful for test purposes. [[br]](c) APRD active register when used in APWM mode." end="0" id="CAP1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CAP2" description="" id="CAP2" offset="0xC" width="32">
    
  <bitfield begin="31" description=" This register can be loaded (written) by the following. [[br]](a) Time-Stamp (that is, counter value) during a capture event. [[br]](b) Software may be useful for test purposes. [[br]](c) APRD active register when used in APWM mode." end="0" id="CAP2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CAP3" description="" id="CAP3" offset="0x10" width="32">
    
  <bitfield begin="31" description=" In CMP mode, this is a time-stamp capture register. [[br]]In APWM mode, this is the period shadow (APRD) register. [[br]]You update the PWM period value through this register. [[br]]In this mode, CAP3 shadows CAP1." end="0" id="CAP3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CAP4" description="" id="CAP4" offset="0x14" width="32">
    
  <bitfield begin="31" description=" In CMP mode, this is a time-stamp capture register. [[br]]In APWM mode, this is the compare shadow (ACMP) register. [[br]]You update the PWM compare value through this register. [[br]]In this mode, CAP4 shadows CAP2." end="0" id="CAP4" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ECCTL1" description="" id="ECCTL1" offset="0x28" width="16">
    
  <bitfield begin="15" description=" Emulation Control" end="14" id="FREE_SOFT" rwaccess="RW" width="2">
    <bitenum description="TSCTR counter is unaffected by emulation suspend (Run Free)." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="TSCTR counter is unaffected by emulation suspend (Run Free)." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="TSCTR counter runs until = 0." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="TSCTR counter stops immediately on emulation suspend." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description=" Event Filter prescale select ..." end="9" id="PRESCALE" rwaccess="RW" width="5">
    <bitenum description="Divide by 62" id="en_8_0x1F" token="en_8_0x1F" value="0x1F"></bitenum>
    <bitenum description="Divide by 60" id="en_7_0x1E" token="en_7_0x1E" value="0x1E"></bitenum>
    <bitenum description="Divide by 10" id="en_6_0x5" token="en_6_0x5" value="0x5"></bitenum>
    <bitenum description="Divide by 8" id="en_5_0x4" token="en_5_0x4" value="0x4"></bitenum>
    <bitenum description="Divide by 6" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Divide by 4" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Divide by 2" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Divide by 1 (i.e,. no prescale, by-pass the prescaler)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description=" Enable Loading of CAP1 to CAP4 registers on a capture event" end="8" id="CAPLDEN" rwaccess="RW" width="1">
    <bitenum description="Enable CAP1-4 register loads at capture event time." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Disable CAP1 through 4 register loads at capture event time." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" Counter Reset on Capture Event 4" end="7" id="CTRRST4" rwaccess="RW" width="1">
    <bitenum description="Reset counter after Capture Event 4 time-stamp has been captured (used in difference mode operation)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Do not reset counter on Capture Event 4 (absolute time stamp operation)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" Capture Event 4 Polarity select" end="6" id="CAP4POL" rwaccess="RW" width="1">
    <bitenum description="Capture Event 4 triggered on a falling edge (FE)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Capture Event 4 triggered on a rising edge (RE)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Counter Reset on Capture Event 3" end="5" id="CTRRST3" rwaccess="RW" width="1">
    <bitenum description="Reset counter after Event 3 time-stamp has been captured (used in difference mode operation)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Do not reset counter on Capture Event 3 (absolute time stamp)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Capture Event 3 Polarity select" end="4" id="CAP3POL" rwaccess="RW" width="1">
    <bitenum description="Capture Event 3 triggered on a falling edge (FE)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Capture Event 3 triggered on a rising edge (RE)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Counter Reset on Capture Event 2" end="3" id="CTRRST2" rwaccess="RW" width="1">
    <bitenum description="Reset counter after Event 2 time-stamp has been captured (used in difference mode operation)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Do not reset counter on Capture Event 2 (absolute time stamp)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Capture Event 2 Polarity select" end="2" id="CAP2POL" rwaccess="RW" width="1">
    <bitenum description="Capture Event 2 triggered on a falling edge (FE)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Capture Event 2 triggered on a rising edge (RE)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Counter Reset on Capture Event 1" end="1" id="CTRRST1" rwaccess="RW" width="1">
    <bitenum description="Reset counter after Event 1 time-stamp has been captured (used in difference mode operation)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Do not reset counter on Capture Event 1 (absolute time stamp)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Capture Event 1 Polarity select" end="0" id="CAP1POL" rwaccess="RW" width="1">
    <bitenum description="Capture Event 1 triggered on a falling edge (FE)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Capture Event 1 triggered on a rising edge (RE)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="ECCTL2" description="" id="ECCTL2" offset="0x2A" width="16">
    
  <bitfield begin="15" description=" " end="11" id="RESERVED_1" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description=" APWM output polarity select. [[br]]This is applicable only in APWM operating mode " end="10" id="APWMPOL" rwaccess="RW" width="1">
    <bitenum description="Output is active low (Compare value defines low time)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Output is active high (Compare value defines high time)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description=" CAP/APWM operating mode select" end="9" id="CAP_APWM" rwaccess="RW" width="1">
    <bitenum description="ECAP module operates in APWM mode. This mode forces the following configuration. (a) Resets TSCTR on PRDEQ event (period boundary). (b) Permits shadow loading on CAP1 and 2 registers. (c) Disables loading of time-stamps into CAP1-4 registers. (d) ECAPn/APWMn pin operates as a APWM output." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="ECAP module operates in capture mode. This mode forces the following configuration. (a) Inhibits TSCTR resets via PRDEQ event. (b) Inhibits shadow loads on CAP1 and 2 registers. (c) Permits user to enable CAP1-4 register load. (d) ECAPn/APWMn pin operates as a capture input." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description=" Software-forced Counter (TSCTR) Synchronizing. [[br]]This provides a convenient software method to synchronize some or all ECAP time bases. [[br]]In APWM mode, the synchronizing can also be done via the PRDEQ event. [[br]]Note: Selecting PRDEQ is meaningful only in APWM mode. [[br]]However, you can choose it in CAP mode if you find doing so useful. " end="8" id="SWSYNC" rwaccess="RW" width="1">
    <bitenum description="Writing a one forces a TSCTR shadow load of current ECAP module and any ECAP modules down-stream providing the SYNCO_SEL bits are 0,0. After writing a 1, this bit returns to a zero." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing a zero has no effect. Reading always returns a zero" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" Sync-Out Select" end="6" id="SYNCO_SEL" rwaccess="RW" width="2">
    <bitenum description="Disable sync out signal" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Disable sync out signal" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Select PRDEQ event to be the sync-out signal" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Select sync-in event to be the sync-out signal (pass through)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Counter (TSCTR) Sync-In select mode" end="5" id="SYNCI_EN" rwaccess="RW" width="1">
    <bitenum description="Enable counter (TSCTR) to be loaded from CTRPHS register upon either a SYNCI signal or a S/W force event." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Disable sync-in option" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Time Stamp (TSCTR) Counter Stop (freeze) Control" end="4" id="TSCTRSTOP" rwaccess="RW" width="1">
    <bitenum description="TSCTR free-running" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="TSCTR stopped" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" One-Shot Re-Arming Control, that is, wait for stop trigger. [[br]]Note: The re-arm function is valid in one shot or continuous mode. " end="3" id="REARM" rwaccess="RW" width="1">
    <bitenum description="Arms the one-shot sequence as follows: 1) Resets the Mod4 counter to zero. 2) Unfreezes the Mod4 counter. 3) Enables capture register loads." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Has no effect (reading always returns a 0)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Stop value for one-shot mode. [[br]]This is the number (between 1 and 4) of captures allowed to occur before the CAP (1 through 4) registers are frozen, that is, capture sequence is stopped. [[br]]Wrap value for continuous mode. [[br]]This is the number (between 1 and 4) of the capture register in which the circular buffer wraps around and starts again. [[br]]Notes: STOP_WRAP is compared to Mod4 counter and, when equal, the following two actions occur. [[br]](1) Mod4 counter is stopped (frozen), and (2) Capture register loads are inhibited. [[br]]In one-shot mode, further interrupt events are blocked until re-armed. " end="1" id="STOP_WRAP" rwaccess="RW" width="2">
    <bitenum description="Stop after Capture Event 4 in one-shot mode. Wrap after Capture Event 4 in continuous mode." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Stop after Capture Event 3 in one-shot mode. Wrap after Capture Event 3 in continuous mode." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Stop after Capture Event 2 in one-shot mode. Wrap after Capture Event 2 in continuous mode." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Stop after Capture Event 1 in one-shot mode. Wrap after Capture Event 1 in continuous mode." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Continuous or one-shot mode control (applicable only in capture mode)" end="0" id="CONT_ONESHT" rwaccess="RW" width="1">
    <bitenum description="Operate in one-shot mode" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Operate in continuous mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="ECEINT" description="The interrupt enable bits (CEVTn) block any of the selected events from generating an interrupt. Events will still be latched into the flag bit (ECFLG register) and can be forced or cleared via the ECFRC and ECCLR registers. The proper procedure for configuring peripheral modes and interrupts is: 1. Disable global interrupts. 2. Stop eCAP counter. 3. Disable eCAP interrupts. 4. Configure peripheral registers. 5. Clear spurious eCAP interrupt flags. 6. Enable eCAP interrupts. 7. Start eCAP counter. 8. Enable global interrupts." id="ECEINT" offset="0x2C" width="16">
    
  <bitfield begin="15" description=" " end="8" id="RESERVED_1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description=" Counter Equal Compare Interrupt Enable." end="7" id="CMPEQ" rwaccess="RW" width="1">
    <bitenum description="Enable Compare Equal as an Interrupt source." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Disable Compare Equal as an Interrupt source." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" Counter Equal Period Interrupt Enable." end="6" id="PRDEQ" rwaccess="RW" width="1">
    <bitenum description="Enable Period Equal as an Interrupt source." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Disable Period Equal as an Interrupt source." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Counter Overflow Interrupt Enable." end="5" id="CNTOVF" rwaccess="RW" width="1">
    <bitenum description="Enable counter Overflow as an Interrupt source." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Disable counter Overflow as an Interrupt source." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Capture Event 4 Interrupt Enable." end="4" id="CEVT4" rwaccess="RW" width="1">
    <bitenum description="Enable Capture Event 4 as an Interrupt source." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Disable Capture Event 4 as an Interrupt source." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Capture Event 3 Interrupt Enable." end="3" id="CEVT3" rwaccess="RW" width="1">
    <bitenum description="Enable Capture Event 3 as an Interrupt source." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Disable Capture Event 3 as an Interrupt source." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Capture Event 2 Interrupt Enable." end="2" id="CEVT2" rwaccess="RW" width="1">
    <bitenum description="Enable Capture Event 2 as an Interrupt source." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Disable Capture Event 2 as an Interrupt source." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Capture Event 1 Interrupt Enable ." end="1" id="CEVT1" rwaccess="RW" width="1">
    <bitenum description="Enable Capture Event 1 as an Interrupt source." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Disable Capture Event 1 as an Interrupt source." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" " end="0" id="RESERVED_2" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="ECFLG" description="" id="ECFLG" offset="0x2E" width="16">
    
  <bitfield begin="15" description=" " end="8" id="RESERVED_1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description=" Compare Equal Compare Status Flag. [[br]]This flag is only active in APWM mode. " end="7" id="CMPEQ" rwaccess="R" width="1">
    <bitenum description="Indicates the counter (TSCTR) reached the compare register value (ACMP)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Indicates no event occurred" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" Counter Equal Period Status Flag. [[br]]This flag is only active in APWM mode. " end="6" id="PRDEQ" rwaccess="R" width="1">
    <bitenum description="Indicates the counter (TSCTR) reached the period register value (APRD) and was reset." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Indicates no event occurred" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Counter Overflow Status Flag. [[br]]This flag is active in CAP and APWM mode. " end="5" id="CNTOVF" rwaccess="R" width="1">
    <bitenum description="Indicates the counter (TSCTR) has made the transition from 0xFFFFFFFF to 0x00000000" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Indicates no event occurred." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Capture Event 4 Status Flag This flag is only active in CAP mode." end="4" id="CEVT4" rwaccess="R" width="1">
    <bitenum description="Indicates the fourth event occurred at ECAPn pin" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Indicates no event occurred" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Capture Event 3 Status Flag. [[br]]This flag is active only in CAP mode. " end="3" id="CEVT3" rwaccess="R" width="1">
    <bitenum description="Indicates the third event occurred at ECAPn pin." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Indicates no event occurred." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Capture Event 2 Status Flag. [[br]]This flag is only active in CAP mode. " end="2" id="CEVT2" rwaccess="R" width="1">
    <bitenum description="Indicates the second event occurred at ECAPn pin." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Indicates no event occurred." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Capture Event 1 Status Flag. [[br]]This flag is only active in CAP mode. " end="1" id="CEVT1" rwaccess="R" width="1">
    <bitenum description="Indicates the first event occurred at ECAPn pin." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Indicates no event occurred." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Global Interrupt Status Flag" end="0" id="INT" rwaccess="R" width="1">
    <bitenum description="Indicates that an interrupt was generated." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Indicates no interrupt generated." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="ECCLR" description="" id="ECCLR" offset="0x30" width="16">
    
  <bitfield begin="15" description=" " end="8" id="RESERVED_1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description=" Counter Equal Compare Status Flag" end="7" id="CMPEQ" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 clears the CMPEQ flag condition" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing a 0 has no effect. Always reads back a 0" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" Counter Equal Period Status Flag" end="6" id="PRDEQ" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 clears the PRDEQ flag condition" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing a 0 has no effect. Always reads back a 0" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Counter Overflow Status Flag" end="5" id="CNTOVF" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 clears the CNTOVF flag condition" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing a 0 has no effect. Always reads back a 0" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Capture Event 4 Status Flag" end="4" id="CEVT4" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 clears the CEVT3 flag condition." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing a 0 has no effect. Always reads back a 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Capture Event 3 Status Flag" end="3" id="CEVT3" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 clears the CEVT3 flag condition." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing a 0 has no effect. Always reads back a 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Capture Event 2 Status Flag" end="2" id="CEVT2" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 clears the CEVT2 flag condition." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing a 0 has no effect. Always reads back a 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Capture Event 1 Status Flag" end="1" id="CEVT1" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 clears the CEVT1 flag condition." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing a 0 has no effect. Always reads back a 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Global Interrupt Clear Flag" end="0" id="INT" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 clears the INT flag and enable further interrupts to be generated if any of the event flags are set to 1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing a 0 has no effect. Always reads back a 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="ECFRC" description="" id="ECFRC" offset="0x32" width="16">
    
  <bitfield begin="15" description=" " end="8" id="RESERVED_1" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description=" Force Counter Equal Compare Interrupt" end="7" id="CMPEQ" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 sets the CMPEQ flag bit." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect. Always reads back a 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" Force Counter Equal Period Interrupt" end="6" id="PRDEQ" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 sets the PRDEQ flag bit." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect. Always reads back a 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Force Counter Overflow" end="5" id="CNTOVF" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 to this bit sets the CNTOVF flag bit." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect. Always reads back a 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Force Capture Event 4" end="4" id="CEVT4" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 sets the CEVT4 flag bit" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect. Always reads back a 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Force Capture Event 3" end="3" id="CEVT3" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 sets the CEVT3 flag bit" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect. Always reads back a 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Force Capture Event 2" end="2" id="CEVT2" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 sets the CEVT2 flag bit." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect. Always reads back a 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Always reads back a 0. [[br]]Force Capture Event 1 " end="1" id="CEVT1" rwaccess="RW" width="1">
    <bitenum description="Writing a 1 sets the CEVT1 flag bit." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" " end="0" id="RESERVED_2" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="REVID" description="" id="REVID" offset="0x5C" width="32">
    
  <bitfield begin="31" description=" Revision ID." end="0" id="REV" rwaccess="R" width="32"></bitfield>
  </register>
</module>
