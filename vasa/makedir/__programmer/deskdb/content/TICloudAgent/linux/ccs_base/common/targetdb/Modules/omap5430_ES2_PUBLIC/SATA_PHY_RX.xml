<module name="SATA_PHY_RX" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="SATAPHYRX_ANA_PROGRAMMABILITY_REG1" acronym="SATAPHYRX_ANA_PROGRAMMABILITY_REG1" offset="0xC" width="32" description="Some programmability for different analog circuits in the IP.">
    <bitfield id="MEM_ANAMODE" width="24" begin="31" end="8" resetval="0x00 0000" description="Programmability for Analog circuits in the IP. The top 5 bits -MEM_ANAMODE[31:27] indicate the Serial Interface using this PHY module. The bits MEM_ANAMODE [30:29] correspond to SATA 1.5 Gbps and SATA 3 Gbps modes, respectively. The appropriate bit must be set to '0b1' according to selected SATA speed mode, and the other bits must be written to '0b0', as follows: Bits [17:14] of the MEM_ANAMODE bitfield are used to control loss-of-signal detection (LOSD) threshold." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="MEM_PLLDIV" width="2" begin="6" end="5" resetval="0x0" description="This is a test mode. SoC Users are requested to leave this at default value. The input pll_clk (after being muxed with pllbypclk) is divided by the following factors indicated by this register. 00=1 01=2 10=4 11=RESERVED. All references to pll_clk in this register descriptions are AFTER considering this division." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="" range="" rwaccess="R"/>
  </register>
  <register id="SATAPHYRX_TRIM_REG4" acronym="SATAPHYRX_TRIM_REG4" offset="0x1C" width="32" description="The IP requires some values to be remembered in EFUSE. This register provides an alternative to EFUSE.">
    <bitfield id="MEM_DLL_TRIM_SEL" width="2" begin="31" end="30" resetval="0x0" description="Determines which of the 4 EFUSE registers EFUSE_dll_rateN_coarsetrim should be used as the trim code by the DLL. This feature is so that the user may find and store the trim codes corresponding to different (at most 4) DLL frequencies (pll_clk pll_clk (after the bypassing by MEM_en_pllbyp and the division by MEM_plldiv) frequencies) and at wake-up, instruct the IP to choose one of these available trim values depending on the Application's frequency requirement. 00 selects dll_rate0_coarsetrim 01 selects dll_rate1_coarsetrim 10 selects dll_rate2_coarsetrim 11 selects dll_rate3_coarsetrim." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="30" begin="29" end="0" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
  </register>
  <register id="SATAPHYRX_DLL_REG1" acronym="SATAPHYRX_DLL_REG1" offset="0x24" width="32" description="This register is used to program DLL settings.">
    <bitfield id="MEM_DLL_PHINT_RATE" width="2" begin="31" end="30" resetval="0x3" description="Programs the DLL and the Phase Interpolator analog circuits to work with different clock frequencies. The frequency of pll_clk (after the bypassing by MEM_en_pllbyp and the division by MEM_plldiv) should be indicated by this register. 00=0.625GHz to 0.75GHz 01=RESERVED 10=1.25GHz to 1.5GHz 11=2.5GHz to 2.9GHz." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="30" begin="29" end="0" resetval="0x00A4 1915" description="" range="" rwaccess="R"/>
  </register>
  <register id="SATAPHYRX_DIGITAL_MODES_REG1" acronym="SATAPHYRX_DIGITAL_MODES_REG1" offset="0x28" width="32" description="This register contains control bits which affect different circuits in digital section of the IP.">
    <bitfield id="MEM_INV_RXPN_PAIR" width="1" begin="31" end="31" resetval="0" description="If '1', interchanges RXP and RXN effectively by inverting the received data samples." range="" rwaccess="RW"/>
    <bitfield id="MEM_OVRD_INV_RXPN_PAIR" width="1" begin="30" end="30" resetval="0" description="Pin override control. See register bit MEM_inv_rxpn_pair." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="29" end="29" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="MEM_HS_RATE" width="2" begin="28" end="27" resetval="0x0" description="Determines the ratio of pll_clk (after the bypassing by MEM_en_pllbyp and the division by MEM_plldiv) frequency and the output data rate. Full Rate means pll_clk (after the bypassing by MEM_en_pllbyp and the division by MEM_plldiv) frequency = Data Rate/2 00=Full Rate 01=Half Rate 10=Quarter Rate 11=RESERVED. This takes effect only if register bit MEM_ovrd_hs_rate is '1', else the same is controlled by input pins hs_rate." range="" rwaccess="RW"/>
    <bitfield id="MEM_OVRD_HS_RATE" width="1" begin="26" end="26" resetval="0" description="Pin override control. See register bit MEM_hs_rate." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="25" end="24" resetval="0x2" description="" range="" rwaccess="R"/>
    <bitfield id="MEM_CDR_FASTLOCK" width="1" begin="23" end="23" resetval="1" description="'1' to reduce lock time of CDR (clock-data-recovery circuit)." range="" rwaccess="RW"/>
    <bitfield id="MEM_CDR_LBW" width="2" begin="22" end="21" resetval="0x3" description="CDR band-width control." range="" rwaccess="RW"/>
    <bitfield id="MEM_CDR_STEPCNT" width="2" begin="20" end="19" resetval="0x0" description="CDR 2nd order setting." range="" rwaccess="RW"/>
    <bitfield id="MEM_CDR_STL" width="3" begin="18" end="16" resetval="0x3" description="CDR settling time. Determines the number of vote clocks to blank ELV (Early-Late-Voter circuit) after update of phase." range="" rwaccess="RW"/>
    <bitfield id="MEM_CDR_THR" width="3" begin="15" end="13" resetval="0x1" description="CDR 1st order threshold. Determines how much early/late votes should differ by before a phase change in the receiver sampling clock is triggered." range="" rwaccess="RW"/>
    <bitfield id="MEM_CDR_THR_MODE" width="1" begin="12" end="12" resetval="1" description="CDR 1st order threshold." range="" rwaccess="RW"/>
    <bitfield id="MEM_CDR_2NDO_SDM_MODE" width="1" begin="11" end="11" resetval="0" description="If '1', the 2nd Order CDR block uses a 1st order Sigma Delta Modulator to accomplish frequency offset If '0', a simple rate transformer is used for the same purpose." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="11" begin="10" end="0" resetval="0x000" description="" range="" rwaccess="R"/>
  </register>
  <register id="SATAPHYRX_EQUALIZER_REG1" acronym="SATAPHYRX_EQUALIZER_REG1" offset="0x38" width="32" description="The IP has an Equalizer (with analog and digital parts) which addresses Inter Symbol Interference (ISI). This register is for its controllability.">
    <bitfield id="MEM_EQLEV" width="16" begin="31" end="16" resetval="0x0000" description="Equalizer level control." range="" rwaccess="RW"/>
    <bitfield id="MEM_EQFTC" width="5" begin="15" end="11" resetval="0x00" description="Equalizer zero freq control." range="" rwaccess="RW"/>
    <bitfield id="MEM_EQCTL" width="4" begin="10" end="7" resetval="0x0" description="0000 - Equalizer disabled 0001 - Fully adaptive; FTC normal 0010 - Fully adaptive; FTC inverted 0011 - Hold eq state 01xx - Init eq to fully adaptive start/midpoint 1000 - Partially adaptive; zero=1084 MHz 1001 - Partially adaptive; zero= 805 MHz 1010 - Partially adaptive; zero= 573 MHz 1011 - Partially adaptive; zero= 402 MHZ 1100 - Partially adaptive; zero= 304 MHz 1101 - Partially adaptive; zero= 216 MHz 1110 - Partially adaptive; zero= 156 MHz 1111 - Partially adaptive; zero= 135 MHz" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="6" end="3" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="MEM_OVRD_EQLEV" width="1" begin="2" end="2" resetval="0" description="Continuosly forces the Equalizer output with the eqlev[15:0]." range="" rwaccess="RW"/>
    <bitfield id="MEM_OVRD_EQFTC" width="1" begin="1" end="1" resetval="0" description="Continuosly forces the Equalizer output with the eqftc[4:0]." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0" description="" range="" rwaccess="R"/>
  </register>
  <register id="SATAPHYRX_IO_AND_A2D_OVERRIDES_REG1" acronym="SATAPHYRX_IO_AND_A2D_OVERRIDES_REG1" offset="0x44" width="32" description="This register has controls for SATA PHY RX tunning">
    <bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MEM_CDR_LOS_SOURCE" width="2" begin="10" end="9" resetval="0x1" description="0x0: the Analog's los_sts (analog's loss of signal detector output) is used by the CDR algorithm to stop the CDR loop. 0x1: the input pin los_in is used by the CDR algorithm for the same purpose. 0x2: the SCP register MEM_los_to_cdr_val is used by the CDR algorithm for the same purpose. This feature may be used if there is an external (above the PHY layer) filtering of the Analog's loss of detection status signal which should be used to stop the CDR loop updates (through los_in) instead of using Analog's unfiltered LOS status directly. 0x3: Reserved" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="9" begin="8" end="0" resetval="0x000" description="Reserved" range="" rwaccess="R"/>
  </register>
</module>
