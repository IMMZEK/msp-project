<module name="NAVSS0_CPTS" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="CPTS_IDVER_REG" acronym="CPTS_IDVER_REG" offset="0x0" width="32" description="Identification and Version Register">
    <bitfield id="TX_IDENT" width="16" begin="31" end="16" resetval="0x4E8A" description="Identification value" range="" rwaccess="R"/>
    <bitfield id="RTL_VER" width="5" begin="15" end="11" resetval="0x4" description="RTL version value" range="" rwaccess="R"/>
    <bitfield id="MAJOR_VER" width="3" begin="10" end="8" resetval="0x1" description="Major version value" range="" rwaccess="R"/>
    <bitfield id="MINOR_VER" width="8" begin="7" end="0" resetval="0xX" description="Minor version value SR2.0: Bh SR1.0: 9h" range="" rwaccess="R"/>
  </register>
  <register id="CPTS_CONTROL_REG" acronym="CPTS_CONTROL_REG" offset="0x4" width="32" description="Time Sync Control Register">
    <bitfield id="TS_SYNC_SEL" width="4" begin="31" end="28" resetval="0x0" description="TS_SYNC output timestamp counter bit select0000 &#8211; TS_SYNC disabled 0001 0001..1111 - TS_SYNC is timestamp counter bits 31 (1111) down to 17 (0001)" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="10" begin="27" end="18" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TX_GENF_CLR_EN" width="1" begin="17" end="17" resetval="0x0" description="GENF (and ESTF) Clear Enable. 0 - A TS_GENFn output is not cleared when the associated CPTS_TS_GENF_LENGTH_REG_j[31:0] LENGTH field is cleared to zero. 1 - A TS_GENFn output is cleared when the associated CPTS_TS_GENF_LENGTH_REG_j[31:0] LENGTH field is cleared to zero." range="" rwaccess="RW"/>
    <bitfield id="TS_RX_NO_EVENT" width="1" begin="16" end="16" resetval="0x0" description="Timestamp Ethernet Receive produces no events. 0 - Ethernet receive timesync events enabled 1 - Ethernet receive timesync events disabled" range="" rwaccess="RW"/>
    <bitfield id="HW8_TS_PUSH_EN" width="1" begin="15" end="15" resetval="0x0" description="Hardware push 8 enable" range="" rwaccess="RW"/>
    <bitfield id="HW7_TS_PUSH_EN" width="1" begin="14" end="14" resetval="0x0" description="Hardware push 7 enable" range="" rwaccess="RW"/>
    <bitfield id="HW6_TS_PUSH_EN" width="1" begin="13" end="13" resetval="0x0" description="Hardware push 6 enable" range="" rwaccess="RW"/>
    <bitfield id="HW5_TS_PUSH_EN" width="1" begin="12" end="12" resetval="0x0" description="Hardware push 5 enable" range="" rwaccess="RW"/>
    <bitfield id="HW4_TS_PUSH_EN" width="1" begin="11" end="11" resetval="0x0" description="Hardware push 4 enable" range="" rwaccess="RW"/>
    <bitfield id="HW3_TS_PUSH_EN" width="1" begin="10" end="10" resetval="0x0" description="Hardware push 3 enable" range="" rwaccess="RW"/>
    <bitfield id="HW2_TS_PUSH_EN" width="1" begin="9" end="9" resetval="0x0" description="Hardware push 2 enable" range="" rwaccess="RW"/>
    <bitfield id="HW1_TS_PUSH_EN" width="1" begin="8" end="8" resetval="0x0" description="Hardware push 1 enable" range="" rwaccess="RW"/>
    <bitfield id="TS_PPM_DIR" width="1" begin="7" end="7" resetval="0x0" description="Timestamp PPM Direction0 &#8211; Increase the time_stamp[63:0] value by the PPM value 1 &#8211; Decrease the time_stamp[63:0] value by the PPM value" range="" rwaccess="RW"/>
    <bitfield id="TS_COMP_TOG" width="1" begin="6" end="6" resetval="0x0" description="Timestamp Compare Toggle mode: 0=TS_COMP is in non-toggle mode 1=TS_COMP is in toggle mode" range="" rwaccess="RW"/>
    <bitfield id="MODE" width="1" begin="5" end="5" resetval="0x0" description="Timestamp mode 0 &#8211; The timestamp is 32-bits with the upper 32-bits forced to zero. 1 &#8211; The timestamp is 64-bits." range="" rwaccess="RW"/>
    <bitfield id="SEQUENCE_EN" width="1" begin="4" end="4" resetval="0x0" description="Sequence Enable0 &#8211; The timestamp value increments with the selected RFTCLK 1 - The timestamp for received packets is the sequence number of the received packet (first packet is 1, second packet is 2, etc)." range="" rwaccess="RW"/>
    <bitfield id="TSTAMP_EN" width="1" begin="3" end="3" resetval="0x0" description="Host Receive Timestamp Enable0 &#8211; Timestamps are disabled on received packets to host 1 &#8211; Timestamps enabled on received packets to host (cpts_en must be set)" range="" rwaccess="RW"/>
    <bitfield id="TS_COMP_POLARITY" width="1" begin="2" end="2" resetval="0x1" description="TS_COMP polarity0 &#8211; TS_COMP is asserted low 1 &#8211; TS_COMP is asserted high" range="" rwaccess="RW"/>
    <bitfield id="INT_TEST" width="1" begin="1" end="1" resetval="0x0" description="Interrupt testWhen set, this bit allows the raw interrupt to be written to facilitate interrupt test." range="" rwaccess="RW"/>
    <bitfield id="CPTS_EN" width="1" begin="0" end="0" resetval="0x0" description="Time sync enableWhen disabled (cleared to zero), the RCLK domain is held in reset." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_RFTCLK_SEL_REG" acronym="CPTS_RFTCLK_SEL_REG" offset="0x8" width="32" description="Added RFTCLK_SEL Register Bit Field Description in Section Time Sync Module RFTCLK Select Register">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RFTCLK_SEL" width="5" begin="4" end="0" resetval="0x0" description="Reference clock select. This bit field is used to control an external multiplexer that selects one out of 8 clocks for time sync reference. 0h: Selects CPSWHSDIV_CLKOUT2 clock The RFTCLK_SEL value can be written only when the [0] CPTS_EN and [3] TSTAMP_EN bits are cleared to zero in the" range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_PUSH_REG" acronym="CPTS_TS_PUSH_REG" offset="0xC" width="32" description="Time Stamp Event Push Register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="W"/>
    <bitfield id="TS_PUSH" width="1" begin="0" end="0" resetval="0x0" description="Time stamp event pushWhen a logic high is written to this bit a time stamp event is pushed onto the event FIFO. The time stamp value is the time of the write of this register, not the time of the event read. The time stamp value can then be read on interrupt via the event registers. Software should not push a second time stamp event onto the event FIFO until the first time stamp value has been read from the event FIFO (there should be only one time stamp event in the event FIFO at any given time)." range="" rwaccess="W"/>
  </register>
  <register id="CPTS_TS_LOAD_VAL_REG" acronym="CPTS_TS_LOAD_VAL_REG" offset="0x10" width="32" description="Time Stamp Load Low Value Register">
    <bitfield id="TS_LOAD_VAL" width="32" begin="31" end="0" resetval="0x0" description="Time stamp load low valueWriting the ts_load_en bit causes ts_load[63:0] to be written into the time stamp. The time stamp value is read by initiating a time stamp push event, not by reading this register. When reading this register, the value read is not the time stamp, but is the value that was last written to this register." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_LOAD_EN_REG" acronym="CPTS_TS_LOAD_EN_REG" offset="0x14" width="32" description="Time Stamp Load Enable Register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="W"/>
    <bitfield id="TS_LOAD_EN" width="1" begin="0" end="0" resetval="0x0" description="Time stamp load enableWriting a one to this bit enables the time stamp value to be written with the value in ts_load[63:0]. This bit is write only and will be cleared by the hardware after one clock. The upper 32-bits of the timestamp are forced to zero in 32-bit mode." range="" rwaccess="W"/>
  </register>
  <register id="CPTS_TS_COMP_VAL_REG" acronym="CPTS_TS_COMP_VAL_REG" offset="0x18" width="32" description="Time Stamp Comparison Low Value Register">
    <bitfield id="TS_COMP_VAL" width="32" begin="31" end="0" resetval="0x0" description="Time stamp comparison low valueWriting a non-zero value to the TS_Comp_Length[31:0] register causes a pulse of TS_Comp_Length RCLK periods on the TS_COMP output and a comparison event when the time_stamp counter value is equivalent to ts_comp_val." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_COMP_LEN_REG" acronym="CPTS_TS_COMP_LEN_REG" offset="0x1C" width="32" description="Time Stamp Comparison Length Register">
    <bitfield id="TS_COMP_LENGTH" width="32" begin="31" end="0" resetval="0x0" description="Time stamp comparison lengthWriting a non-zero value to this field enables the time stamp comparison event and output. This value should be zero when the TS_Comp_Low and TS_Comp_High registers are written." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_INTSTAT_RAW_REG" acronym="CPTS_INTSTAT_RAW_REG" offset="0x20" width="32" description="Interrupt Status Register Raw">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TS_PEND_RAW" width="1" begin="0" end="0" resetval="0x0" description="TS_PEND_RAW int read (before enable)Writable when int_test = 1. A one in this bit indicates that there are one or more events in the event FIFO." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_INTSTAT_MASKED_REG" acronym="CPTS_INTSTAT_MASKED_REG" offset="0x24" width="32" description="Interrupt Status Register Masked">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="TS_PEND" width="1" begin="0" end="0" resetval="0x0" description="TS_PEND masked interrupt read (after enable)" range="" rwaccess="R"/>
  </register>
  <register id="CPTS_INT_ENABLE_REG" acronym="CPTS_INT_ENABLE_REG" offset="0x28" width="32" description="Interrupt Enable Register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TS_PEND_EN" width="1" begin="0" end="0" resetval="0x0" description="TS_PEND masked interrupt enable" range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_COMP_NUDGE_REG" acronym="CPTS_TS_COMP_NUDGE_REG" offset="0x2C" width="32" description="Time Stamp Comparison Nudge Register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="NUDGE" width="8" begin="7" end="0" resetval="0x0" description="This 2s complement number is added to the ts_comp_length value to increase or decrease the TS_COMP length by the nudge amountOnly a single high or low time is adjusted and the ts_comp_nudge value is cleared to zero when the nudge has occurred." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_EVENT_POP_REG" acronym="CPTS_EVENT_POP_REG" offset="0x30" width="32" description="Event Pop Register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="W"/>
    <bitfield id="EVENT_POP" width="1" begin="0" end="0" resetval="0x0" description="Event popWhen a logic high is written to this bit an event is popped off the event FIFO. The event FIFO pop occurs as part of the interrupt process after the event has been read from the Event_0-3 registers. Popping an event discards the event and causes the next event, if any, to be moved to the top of the FIFO ready to be read by software on interrupt." range="" rwaccess="W"/>
  </register>
  <register id="CPTS_EVENT_0_REG" acronym="CPTS_EVENT_0_REG" offset="0x34" width="32" description="Event 0 Register">
    <bitfield id="TIME_STAMP" width="32" begin="31" end="0" resetval="0x0" description="Time StampThe timestamp is valid for transmit, receive, and time stamp push event types. The timestamp value is not valid for counter roll event types." range="" rwaccess="R"/>
  </register>
  <register id="CPTS_EVENT_1_REG" acronym="CPTS_EVENT_1_REG" offset="0x38" width="32" description="Event 1 Register">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="PREMPT_QUEUE" width="1" begin="29" end="29" resetval="0x0" description="Prempt QUEUE0 &#8211; The packet was received/transmitted on the express queue. 1 &#8211; The packet was received/transmitted on the prempt queue." range="" rwaccess="R"/>
    <bitfield id="PORT_NUMBER" width="5" begin="28" end="24" resetval="0x0" description="Port numberindicates the port number (encoded) of an Ethernet event or the encoded hardware timestamp number." range="" rwaccess="R"/>
    <bitfield id="EVENT_TYPE" width="4" begin="23" end="20" resetval="0x0" description="Event type0000 &#8211; Time Stamp Push Event 0001 &#8211; Time Stamp Rollover Event 0010 &#8211; Time Stamp Half Rollover Event 0011 &#8211; Hardware Time Stamp Push Event 0100 &#8211; Ethernet Receive Event 0101 &#8211; Ethernet Transmit Event 0110 &#8211; Time Stamp Compare Event 0111 &#8211; Host Transmit Event 1000 1111 reserved" range="" rwaccess="R"/>
    <bitfield id="MESSAGE_TYPE" width="4" begin="19" end="16" resetval="0x0" description="Message typeThe message type value that was contained in an Ethernet transmit or receive time sync packet. This field is valid only for Ethernet transmit or receive events." range="" rwaccess="R"/>
    <bitfield id="SEQUENCE_ID" width="16" begin="15" end="0" resetval="0x0" description="Sequence IDThe 16-bit sequence id is the value that was contained in an Ethernet transmit or receive time sync packet. This field is valid only for Ethernet transmit or receive events." range="" rwaccess="R"/>
  </register>
  <register id="CPTS_EVENT_2_REG" acronym="CPTS_EVENT_2_REG" offset="0x3C" width="32" description="Event 2 Register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="DOMAIN" width="8" begin="7" end="0" resetval="0x0" description="DomainThe 8-bit domain is the value that was contained in an Ethernet transmit or receive time sync packet. This field is valid only for Ethernet transmit or receive events." range="" rwaccess="R"/>
  </register>
  <register id="CPTS_EVENT_3_REG" acronym="CPTS_EVENT_3_REG" offset="0x40" width="32" description="Event 3 Register">
    <bitfield id="TIME_STAMP" width="32" begin="31" end="0" resetval="0x0" description="Time StampThe timestamp upper 32-bits are valid for transmit, receive, and time stamp push event types. This value is zero in 32-bit mode." range="" rwaccess="R"/>
  </register>
  <register id="CPTS_TS_LOAD_HIGH_VAL_REG" acronym="CPTS_TS_LOAD_HIGH_VAL_REG" offset="0x44" width="32" description="Time Stamp Load High Value Register">
    <bitfield id="TS_LOAD_VAL" width="32" begin="31" end="0" resetval="0x0" description="Time stamp load high valueWriting the ts_load_en bit causes the value contained in this register (and the ts_load[63:0]) to be written into the time stamp. The time stamp value is read by initiating a time stamp push event, not by reading this register. When reading this register, the value read is not the time stamp, but is the value that was last written to this register. This value is unused in 32-bit mode" range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_COMP_HIGH_VAL_REG" acronym="CPTS_TS_COMP_HIGH_VAL_REG" offset="0x48" width="32" description="Time Stamp Comparison High Value Register">
    <bitfield id="TS_COMP_HIGH_VAL" width="32" begin="31" end="0" resetval="0x0" description="Time stamp comparison high valueWriting a non-zero value to the TS_Comp_Length[31:0] register causes a pulse of TS_Comp_Length RCLK periods on the TS_COMP output and a comparison event when the time_stamp counter value is equivalent to ts_comp_val[63:0]. This value is unused in 32-bit mode. The upper 32-bits in this register should be written before the lower 32-bits in the TS_Comp_Low register." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_ADD_VAL_REG" acronym="CPTS_TS_ADD_VAL_REG" offset="0x4C" width="32" description="TS Add Value Register">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADD_VAL" width="3" begin="2" end="0" resetval="0x0" description="Add ValueAdd Value is added to 1 to comprise the timestamp increment value. The timestamp increment value is added to the current timestamp (time_stamp[63:0]) on each RCLK. The timestamp increment value can be adjusted by nudge and ppm also. The ts_add_val[2:0] value may be non-zero in 64-bit mode only." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_PPM_LOW_VAL_REG" acronym="CPTS_TS_PPM_LOW_VAL_REG" offset="0x50" width="32" description="Time Stamp PPM Low Value Register">
    <bitfield id="TS_PPM_LOW_VAL" width="32" begin="31" end="0" resetval="0x0" description="Time stamp PPM Low valueThe 64-bit PPM value takes effect when this low value is written. The high value should be written first. Note: There should be at least 10 clocks in between writes to the low register to ensure that the previous operation has been seen" range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_PPM_HIGH_VAL_REG" acronym="CPTS_TS_PPM_HIGH_VAL_REG" offset="0x54" width="32" description="Time Stamp PPM High Value Register">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TS_PPM_HIGH_VAL" width="10" begin="9" end="0" resetval="0x0" description="Time stamp PPM High valueThis value should be written first (before the low value is written). The minimum value of the ts_ppm is 0x400 (all 42 bits)." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_NUDGE_VAL_REG" acronym="CPTS_TS_NUDGE_VAL_REG" offset="0x58" width="32" description="Time Stamp Nudge Value Register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TS_NUDGE_VAL" width="8" begin="7" end="0" resetval="0x0" description="Time stamp Nudge valueThis two&#8217;s complement number is added to the time_stamp[63:0] value to increase or decrease the timestamp value by the ts_nudge amount. The ts_nudge value is cleared to zero when the nudge has occurred." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_GENF_COMP_LOW_REG_j" acronym="CPTS_TS_GENF_COMP_LOW_REG_j" offset="0xE0" width="32" description="Time Stamp Generate Function Comparison Low Value Offset = E0h + (j * 20h); where j = 0h to 5h">
    <bitfield id="COMP_LOW" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp Generate Function Comparison Low ValueThis value should be written after the upper 32-bits. The ts_GENFn_comp high and low should only be written when the ts_GENFn_length value is zero." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_GENF_COMP_HIGH_REG_j" acronym="CPTS_TS_GENF_COMP_HIGH_REG_j" offset="0xE4" width="32" description="Time Stamp Generate Function Comparison high Value Offset = E4h + (j * 20h); where j = 0h to 5h">
    <bitfield id="COMP_HIGH" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp Generate Function Comparison High ValueThis value should be written before the lower 32-bits are written. The ts_GENFn_comp high and low should only be written when the ts_GENFn_length value is zero." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_GENF_CONTROL_REG_j" acronym="CPTS_TS_GENF_CONTROL_REG_j" offset="0xE8" width="32" description="Time Stamp Generate Function Control Offset = E8h + (j * 20h); where j = 0h to 5h">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="POLARITY_INV" width="1" begin="1" end="1" resetval="0x0" description="Time Stamp Generate Function Polarity Invert0 &#8211; The output TS_GENFn signal asserts high 1 &#8211; The output TS_GENFn signal asserts low" range="" rwaccess="RW"/>
    <bitfield id="PPM_DIR" width="1" begin="0" end="0" resetval="0x0" description="Time Stamp Generate Function PPM Direction0 &#8211; A single RCLK is added to the generate function counter at the PPM rate which has the effect of decreasing the generate function frequency by the PPM amount. 1 &#8211; A single RCLK is subtracted from the generate function counter at the PPM rate which has the effect of increasing the generate function frequency by the PPM amount." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_GENF_LENGTH_REG_j" acronym="CPTS_TS_GENF_LENGTH_REG_j" offset="0xEC" width="32" description="Time Stamp Generate Function Length Value Offset = ECh + (j * 20h); where j = 0h to 5h">
    <bitfield id="LENGTH" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp Generate Function Length ValueThe minimum value is decimal 5" range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_GENF_PPM_LOW_REG_j" acronym="CPTS_TS_GENF_PPM_LOW_REG_j" offset="0xF0" width="32" description="Time Stamp Generate Function PPM Low Value Offset = F0h + (j * 20h); where j = 0h to 5h">
    <bitfield id="PPM_LOW" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp Generate Function PPM Low ValueThe 64-bit PPM value takes effect when this low value is written. The high value should be written first" range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_GENF_PPM_HIGH_REG_j" acronym="CPTS_TS_GENF_PPM_HIGH_REG_j" offset="0xF4" width="32" description="Time Stamp Generate Function PPM High Value Offset = F4h + (j * 20h); where j = 0h to 5h">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PPM_HIGH" width="10" begin="9" end="0" resetval="0x0" description="Time Stamp Generate Function PPM High ValueThis value should be written first (before the low value is written)." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_GENF_NUDGE_REG_j" acronym="CPTS_TS_GENF_NUDGE_REG_j" offset="0xF8" width="32" description="Time Stamp Generate Function Nudge Value Offset = F8h + (j * 20h); where j = 0h to 5h">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="NUDGE" width="8" begin="7" end="0" resetval="0x0" description="Time Stamp Generate Function Nudge ValueThis two&#8217;s complement number is added to the generate counter value to increase or decrease the length by the ts_genfN_nudge amount. Only a single high or low time is adjusted and the ts_genfN_nudge value is cleared to zero when the nudge has occurred." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_ESTF_COMP_LOW_REG" acronym="CPTS_TS_ESTF_COMP_LOW_REG" offset="0x200" width="32" description="Time Stamp ESTF Generate Function Comparison Low Value">
    <bitfield id="COMP_LOW" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp ESTF Generate Function Comparison Low ValueThis value should be written after the upper 32-bits. The ts_ESTFn_comp high and low should only be written when the ts_ESTFn_length value is zero." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_ESTF_COMP_HIGH_REG" acronym="CPTS_TS_ESTF_COMP_HIGH_REG" offset="0x204" width="32" description="Time Stamp ESTF Generate Function Comparison high Value">
    <bitfield id="COMP_HIGH" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp ESTF Generate Function Comparison High ValueThis value should be written before the lower 32-bits are written. The ts_ESTFn_comp high and low should only be written when the ts_ESTFn_length value is zero" range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_ESTF_CONTROL_REG" acronym="CPTS_TS_ESTF_CONTROL_REG" offset="0x208" width="32" description="Time Stamp ESTF Generate Function Control">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="POLARITY_INV" width="1" begin="1" end="1" resetval="0x0" description="Time Stamp ESTF Generate Function Polarity Invert 0 &#8211; The output TS_ESTFn signal asserts low 1 &#8211; The output TS_ESTFn signal asserts high" range="" rwaccess="RW"/>
    <bitfield id="PPM_DIR" width="1" begin="0" end="0" resetval="0x0" description="Time Stamp ESTF Generate Function PPM Direction 0 &#8211; A single RCLK is added to the generate function counter at the PPM rate which has the effect of decreasing the generate function frequency by the PPM amount. 1 &#8211; A single RCLK is subtracted from the generate function counter at the PPM rate which has the effect of increasing the generate function frequency by the PPM amount." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_ESTF_LENGTH_REG" acronym="CPTS_TS_ESTF_LENGTH_REG" offset="0x20C" width="32" description="Time Stamp ESTF Generate Function Length Value">
    <bitfield id="LENGTH" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp ESTF Generate Function Length Value" range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_ESTF_PPM_LOW_REG" acronym="CPTS_TS_ESTF_PPM_LOW_REG" offset="0x210" width="32" description="Time Stamp ESTF Generate Function PPM Low Value">
    <bitfield id="PPM_LOW" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp ESTF Generate Function PPM Low ValueThe 64-bit PPM value takes effect when this low value is written. The high value should be written first." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_ESTF_PPM_HIGH_REG" acronym="CPTS_TS_ESTF_PPM_HIGH_REG" offset="0x214" width="32" description="Time Stamp ESTF Generate Function PPM High Value">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PPM_HIGH" width="10" begin="9" end="0" resetval="0x0" description="Time Stamp ESTF Generate Function PPM High ValueThis value should be written first (before the low value is written)." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_ESTF_NUDGE_REG" acronym="CPTS_TS_ESTF_NUDGE_REG" offset="0x218" width="32" description="Time Stamp ESTF Generate Function Nudge Value">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="NUDGE" width="8" begin="7" end="0" resetval="0x0" description="Time Stamp ESTF Generate Function Nudge ValueThis two&#8217;s complement number is added to the generate counter value to increase or decrease the length by the ts_estfN_nudge amount. Only a single high or low time is adjusted and the ts_estfN_nudge value is cleared to zero when the nudge has occurred." range="" rwaccess="RW"/>
  </register>
</module>
