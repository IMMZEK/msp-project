<?xml version="1.0" encoding="utf-8" ?>

<module name="UART3" acronym="" XML_version="1.0" HW_revision="n/a" description="">
	<register id="DLL_REG" acronym="DLL_REG" offset="0x0" width="32" description="Divisor latches low">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="CLOCK_LSB" width="8" begin="7" end="0" resetval="0x00" description="Stores the 8-bit LSB divisor value" range="" rwaccess="RW"/>
	</register>
	<register id="RHR_REG" acronym="RHR_REG" offset="0x0" width="32" description="Receive holding register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="RHR" width="8" begin="7" end="0" resetval="0x-" description="Receive holding register" range="" rwaccess="R"/>
	</register>
	<register id="THR_REG" acronym="THR_REG" offset="0x0" width="32" description="Transmit holding register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Write has no functional effect." range="" rwaccess="W"/>
		<bitfield id="THR" width="8" begin="7" end="0" resetval="0x-" description="Transmit holding register" range="" rwaccess="W"/>
	</register>
	<register id="DLH_REG" acronym="DLH_REG" offset="0x4" width="32" description="Divisor latches high">
		<bitfield id="Reserved" width="26" begin="31" end="6" resetval="0x0000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="CLOCK_MSB" width="6" begin="5" end="0" resetval="0x00" description="Stores the 6-bit most-significant bit (MSB) divisor value" range="" rwaccess="RW"/>
	</register>
	<register id="IER_REG" acronym="IER_REG" offset="0x4" width="16" description="Interrupt enable register">
		<bitfield id="Reserved" width="8" begin="15" end="8" resetval="0x00" description="Read returns 0x00. Write has no functional effect." range="" rwaccess="RW"/>
		<bitfield id="CTS_IT" width="1" begin="7" end="7" resetval="0" description="Can be written only whenEFR_REG[4] = 1" range="" rwaccess="RW">
			<bitenum value="0" token="CTS_IT_0" description="Disables the nCTS interrupt"/>
			<bitenum value="1" token="CTS_IT_1" description="Enables the nCTS interrupt"/>
		</bitfield>
		<bitfield id="RTS_IT" width="1" begin="6" end="6" resetval="0" description="Can be written only whenEFR_REG[4] = 1" range="" rwaccess="RW">
			<bitenum value="0" token="RTS_IT_0" description="Disables the interrupt"/>
			<bitenum value="1" token="RTS_IT_1" description="Enables the nRTS interrupt"/>
		</bitfield>
		<bitfield id="XOFF_IT" width="1" begin="5" end="5" resetval="0" description="Can be written only whenEFR_REG[4] = 1" range="" rwaccess="RW">
			<bitenum value="0" token="XOFF_IT_0" description="Disables the XOFF interrupt"/>
			<bitenum value="1" token="XOFF_IT_1" description="Enables the XOFF interrupt"/>
		</bitfield>
		<bitfield id="SLEEP_MODE" width="1" begin="4" end="4" resetval="0" description="Can be only written whenEFR_REG[4] = 1" range="" rwaccess="RW">
			<bitenum value="0" token="SLEEP_MODE_0" description="Disables sleep mode"/>
			<bitenum value="1" token="SLEEP_MODE_1" description="Enables sleep mode (stop baud rate clock when the module is inactive)"/>
		</bitfield>
		<bitfield id="MODEM_STS_IT" width="1" begin="3" end="3" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="MODEM_STS_IT_0" description="Disables the modem status register interrupt"/>
			<bitenum value="1" token="MODEM_STS_IT_1" description="Enables the modem status register interrupt"/>
		</bitfield>
		<bitfield id="LINE_STS_IT" width="1" begin="2" end="2" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="LINE_STS_IT_0" description="Disables the receiver line status interrupt"/>
			<bitenum value="1" token="LINE_STS_IT_1" description="Enables the receiver line status interrupt"/>
		</bitfield>
		<bitfield id="THR_IT" width="1" begin="1" end="1" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="THR_IT_0" description="Disables the THR interrupt"/>
			<bitenum value="1" token="THR_IT_1" description="Enables the THR interrupt"/>
		</bitfield>
		<bitfield id="RHR_IT" width="1" begin="0" end="0" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="RHR_IT_0" description="Disables the RHR interrupt and time out interrupt."/>
			<bitenum value="1" token="RHR_IT_1" description="Enables the RHR interrupt and time out interrupt."/>
		</bitfield>
	</register>
	<register id="EFR_REG" acronym="EFR_REG" offset="0x8" width="32" description="Enhanced feature register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="AUTO_CTS_EN" width="1" begin="7" end="7" resetval="0" description="Auto-CTS enable bit (UART mode only)" range="" rwaccess="RW">
			<bitenum value="0" token="AUTO_CTS_EN_0" description="Normal operation"/>
			<bitenum value="1" token="AUTO_CTS_EN_1" description="Auto-CTS flow control is enabled; transmission is halted when the nCTS pin is high (inactive)."/>
		</bitfield>
		<bitfield id="AUTO_RTS_EN" width="1" begin="6" end="6" resetval="0" description="Auto-RTS enable bit (UART mode only)" range="" rwaccess="RW">
			<bitenum value="0" token="AUTO_RTS_EN_0" description="Normal operation"/>
			<bitenum value="1" token="AUTO_RTS_EN_1" description="Auto-RTS flow control is enabled; nRTS pin goes high (inactive) when the receiver FIFO HALT trigger level,[3:0], is reached and goes low (active) when the receiver FIFO RESTORE transmission trigger level is reached."/>
		</bitfield>
		<bitfield id="SPEC_CHAR" width="1" begin="5" end="5" resetval="0" description="(UART mode only) Special character detect" range="" rwaccess="RW">
			<bitenum value="0" token="SPEC_CHAR_0" description="Normal operation"/>
			<bitenum value="1" token="SPEC_CHAR_1" description="Special character detect enable. Received data is compared with XOFF2 data. If a match occurs, the received data is transferred to RX FIFO and bit 4 is set to 1 to indicate that a special character was detected."/>
		</bitfield>
		<bitfield id="ENHANCED_EN" width="1" begin="4" end="4" resetval="0" description="Enhanced functions write enable bit" range="" rwaccess="RW">
			<bitenum value="0" token="ENHANCED_EN_0" description="Disables writing to bits [7:4], bits [5:4], and bits [7:5]"/>
			<bitenum value="1" token="ENHANCED_EN_1" description="Enables writing to bits [7:4], bits [5:4], and bits [7:5]"/>
		</bitfield>
		<bitfield id="SW_FLOW_CONTROL" width="4" begin="3" end="0" resetval="0x0" description="Combinations of software flow control can be selected by programming bit [3:0].See. In IrDA mode, bits [1:0] select IR address to check. See , IR Address Checking. ." range="" rwaccess="RW"/>
	</register>
	<register id="FCR_REG" acronym="FCR_REG" offset="0x8" width="32" description="FIFO control register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Write has no functional effect." range="" rwaccess="W"/>
		<bitfield id="RX_FIFO_TRIG" width="2" begin="7" end="6" resetval="0x0" description="Sets the trigger level for the RX FIFO: IfSCR_REG[7] = 0 and TLR_REG[7:4]&#8800; 0000, RX_FIFO_TRIG is not considered.If[7] = 1, RX_FIFO_TRIG is 2 LSB of the trigger level (1 to 63 on 6 bits) with a granularity of 1. . If[7] = 0 and [7:4] = 0000: ." range="" rwaccess="W">
			<bitenum value="0" token="RX_FIFO_TRIG_0" description="8 characters"/>
			<bitenum value="1" token="RX_FIFO_TRIG_1" description="16 characters"/>
			<bitenum value="2" token="RX_FIFO_TRIG_2" description="56 characters"/>
			<bitenum value="3" token="RX_FIFO_TRIG_3" description="60 characters"/>
		</bitfield>
		<bitfield id="TX_FIFO_TRIG" width="2" begin="5" end="4" resetval="0x0" description="Can be written only ifEFR_REG[4] = 1. Sets the trigger level for the TX FIFO. If SCR_REG[6] = 0 and TLR_REG[3:0] &#8800; 0000, TX_FIFO_TRIG is not considered.If[6] = 1, RX_FIFO_TRIG is 2 LSB of the trigger level (1 to 63 on 6 bits) with a granularity of 1. . If[6] = 0 and [3:0] = 0000: ." range="" rwaccess="W">
			<bitenum value="0" token="TX_FIFO_TRIG_0" description="8 characters"/>
			<bitenum value="1" token="TX_FIFO_TRIG_1" description="16 characters"/>
			<bitenum value="2" token="TX_FIFO_TRIG_2" description="32 characters"/>
			<bitenum value="3" token="TX_FIFO_TRIG_3" description="56 characters"/>
		</bitfield>
		<bitfield id="DMA_MODE" width="1" begin="3" end="3" resetval="0" description="Can be changed only when the baud clock is not running (DLL_REG and DLH_REG set to 0).This register is considered if[0] = 0. ." range="" rwaccess="W">
			<bitenum value="0" token="DMA_MODE_0" description="DMA_MODE 0 (No DMA)"/>
			<bitenum value="1" token="DMA_MODE_1" description="DMA_MODE 1 (UART_NDMA_REQ[0] in TX, UART_NDMA_REQ[1] in RX)"/>
		</bitfield>
		<bitfield id="TX_FIFO_CLEAR" width="1" begin="2" end="2" resetval="0" description="Clears the TX FIFO" range="" rwaccess="W">
			<bitenum value="0" token="TX_FIFO_CLEAR_0" description="No change"/>
			<bitenum value="1" token="TX_FIFO_CLEAR_1" description="Clears the transmit FIFO and resets its counter logic to 0. Returns to 0 after clearing FIFO."/>
		</bitfield>
		<bitfield id="RX_FIFO_CLEAR" width="1" begin="1" end="1" resetval="0" description="Clears the RX FIFO." range="" rwaccess="W">
			<bitenum value="0" token="RX_FIFO_CLEAR_0" description="No change"/>
			<bitenum value="1" token="RX_FIFO_CLEAR_1" description="Clears the receive FIFO and resets its counter logic to 0. Returns to 0 after clearing FIFO."/>
		</bitfield>
		<bitfield id="FIFO_EN" width="1" begin="0" end="0" resetval="0" description="Can be changed only when the baud clock is not running (DLL_REG and DLH_REG set to 0)." range="" rwaccess="W">
			<bitenum value="0" token="FIFO_EN_0" description="Disables the transmit and receive FIFOs. The transmit and receive holding registers are 1-byte FIFOs."/>
			<bitenum value="1" token="FIFO_EN_1" description="Enables the transmit and receive FIFOs. The transmit and receive holding registers are 64-byte FIFOs."/>
		</bitfield>
	</register>
	<register id="IIR_REG" acronym="IIR_REG" offset="0x8" width="16" description="Interrupt Identification register">
		<bitfield id="Reserved" width="8" begin="15" end="8" resetval="0x00" description="Read returns 0x00." range="" rwaccess="R"/>
		<bitfield id="FCR_MIRROR" width="2" begin="7" end="6" resetval="0x0" description="Mirror the contents ofFCR_REG[0] on both bits." range="" rwaccess="R"/>
		<bitfield id="IT_TYPE" width="5" begin="5" end="1" resetval="0x00" description="Seven possible interrupts in UART mode; other combinations never occur:" range="" rwaccess="R">
			<bitenum value="0" token="IT_TYPE_0" description="Modem interrupt. Priority = 4"/>
			<bitenum value="1" token="IT_TYPE_1" description="THR interrupt. Priority = 3"/>
			<bitenum value="2" token="IT_TYPE_2" description="RHR interrupt. Priority = 2"/>
			<bitenum value="3" token="IT_TYPE_3" description="Receiver line status error. Priority = 1"/>
			<bitenum value="6" token="IT_TYPE_6" description="Rx timeout. Priority = 2"/>
			<bitenum value="8" token="IT_TYPE_8" description="Xoff/special character. Priority = 5"/>
			<bitenum value="16" token="IT_TYPE_16" description="CTS, RTS change state from active (low) to inactive (high). Priority = 6"/>
		</bitfield>
		<bitfield id="IT_PENDING" width="1" begin="0" end="0" resetval="R" description="0x0:" range="" rwaccess="An interrupt is pending.">
			<bitenum value="1" token="IT_PENDING_1" description="No interrupt is pending."/>
		</bitfield>
	</register>
	<register id="LCR_REG" acronym="LCR_REG" offset="0xC" width="32" description="Line control register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0" range="" rwaccess="R"/>
		<bitfield id="DIV_EN" width="1" begin="7" end="7" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="DIV_EN_0" description="Operational mode"/>
			<bitenum value="1" token="DIV_EN_1" description="Divisor latch enable; put the module in Configuration_Mode_A/B. Allows access to, , and other registers (see , UART/IrDA/CIR Register Mapping Summary). Configuration_Mode_B: [7:0] = 0xBF Else, Configuration_Mode_A"/>
		</bitfield>
		<bitfield id="BREAK_EN" width="1" begin="6" end="6" resetval="0" description="Break control bit. UART mode only.Note:When [6] is set to 1, the TX line is forced to 0 and remains in this state as long as [6] = 1. ." range="" rwaccess="RW">
			<bitenum value="0" token="BREAK_EN_0" description="Normal operating condition"/>
			<bitenum value="1" token="BREAK_EN_1" description="Forces the transmitter output to go low to alert the communication terminal. TX line is forced to 0 and remains in this state while BREAK_EN = 1."/>
		</bitfield>
		<bitfield id="PARITY_TYPE2" width="1" begin="5" end="5" resetval="0" description="Selects the forced parity format (ifLCR_REG[3] = 1). UART mode only. If LCR_REG[5] = 1and LCR_REG[4] = 0, the parity bit is forced to 1 in the transmitted and received data. If LCR_REG[5] = 1 and LCR_REG[4] = 1, the parity bit is forced to 0 in the transmitted and received data." range="" rwaccess="RW"/>
		<bitfield id="PARITY_TYPE1" width="1" begin="4" end="4" resetval="0" description="UART mode only" range="" rwaccess="RW">
			<bitenum value="0" token="PARITY_TYPE1_0" description="Odd parity is generated (if[3] = 1)."/>
			<bitenum value="1" token="PARITY_TYPE1_1" description="Even parity is generated (if[3] = 1)."/>
		</bitfield>
		<bitfield id="PARITY_EN" width="1" begin="3" end="3" resetval="0" description="UART mode only" range="" rwaccess="RW">
			<bitenum value="0" token="PARITY_EN_0" description="No parity"/>
			<bitenum value="1" token="PARITY_EN_1" description="A parity bit is generated during transmission, and the receiver checks for received parity."/>
		</bitfield>
		<bitfield id="NB_STOP" width="1" begin="2" end="2" resetval="0" description="Specifies the number of stop bits. UART mode only." range="" rwaccess="RW">
			<bitenum value="0" token="NB_STOP_0" description="1 stop bit (word length = 5, 6, 7, 8)"/>
			<bitenum value="1" token="NB_STOP_1" description="1.5 stop bits (word length = 5)1 - 2 stop bits (word length = 6, 7, 8)"/>
		</bitfield>
		<bitfield id="CHAR_LENGTH" width="2" begin="1" end="0" resetval="0x0" description="Specifies the word length to be transmitted or received. UART mode only." range="" rwaccess="RW">
			<bitenum value="0" token="CHAR_LENGTH_0" description="5 bits"/>
			<bitenum value="1" token="CHAR_LENGTH_1" description="6 bits"/>
			<bitenum value="2" token="CHAR_LENGTH_2" description="7 bits"/>
			<bitenum value="3" token="CHAR_LENGTH_3" description="8 bits"/>
		</bitfield>
	</register>
	<register id="MCR_REG" acronym="MCR_REG" offset="0x10" width="32" description="Modem control register">
		<bitfield id="Reserved" width="25" begin="31" end="7" resetval="0x0000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="TCR_TLR" width="1" begin="6" end="6" resetval="0" description="Can be written only whenEFR_REG[4] ENHANCED_EN = 1" range="" rwaccess="RW">
			<bitenum value="0" token="TCR_TLR_0" description="No action"/>
			<bitenum value="1" token="TCR_TLR_1" description="Enables access to the and registers"/>
		</bitfield>
		<bitfield id="XON_EN" width="1" begin="5" end="5" resetval="0" description="Can be written only whenEFR_REG[4] ENHANCED_EN = 1" range="" rwaccess="RW">
			<bitenum value="0" token="XON_EN_0" description="Disable XON any function"/>
			<bitenum value="1" token="XON_EN_1" description="Enable XON any function"/>
		</bitfield>
		<bitfield id="LOOPBACK_EN" width="1" begin="4" end="4" resetval="0" description="In this mode, the[3:0] signals are looped back into [7:4]. The transmit output is looped back to the receive input internally. ." range="" rwaccess="RW">
			<bitenum value="0" token="LOOPBACK_EN_0" description="Normal operating mode"/>
			<bitenum value="1" token="LOOPBACK_EN_1" description="Enable local loopback mode (internal)."/>
		</bitfield>
		<bitfield id="CD_STS_CH" width="1" begin="3" end="3" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="CD_STS_CH_0" description="In loopback, forces nDCD input high and IRQ outputs to INACTIVE state."/>
			<bitenum value="1" token="CD_STS_CH_1" description="In loopback, forces nDCD input low and IRQ outputs to INACTIVE state."/>
		</bitfield>
		<bitfield id="RI_STS_CH" width="1" begin="2" end="2" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="RI_STS_CH_0" description="In loopback, forces nRI input inactive (high)."/>
			<bitenum value="1" token="RI_STS_CH_1" description="In loopback, forces nRI input active (low)."/>
		</bitfield>
		<bitfield id="RTS" width="1" begin="1" end="1" resetval="0" description="In loop back, controlsMSR_REG[4].If auto-RTS is enabled, the nRTS output is controlled by hardware flow control." range="" rwaccess="RW">
			<bitenum value="0" token="RTS_0" description="Force nRTS output to inactive (high)."/>
			<bitenum value="1" token="RTS_1" description="Force nRTS output to active (low)."/>
		</bitfield>
		<bitfield id="DTR" width="1" begin="0" end="0" resetval="RW" description="0:" range="" rwaccess="Force DTR output (used in loop back mode) to inactive (high)">
			<bitenum value="1" token="DTR_1" description="Force DTR output (used in loop back mode) to active (low)"/>
		</bitfield>
	</register>
	<register id="XON1_ADDR1_REG" acronym="XON1_ADDR1_REG" offset="0x10" width="32" description="UART mode: XON1 character, IrDA mode: ADDR1 address">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0" range="" rwaccess="R"/>
		<bitfield id="XON_WORD1" width="8" begin="7" end="0" resetval="0x00" description="Used to store the 8-bit XON1 character in UART modes and ADDR1 address 1 for IrDA modes" range="" rwaccess="RW"/>
	</register>
	<register id="LSR_REG" acronym="LSR_REG" offset="0x14" width="32" description="Line status register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="RX_FIFO_STS" width="1" begin="7" end="7" resetval="0" description="" range="" rwaccess="R">
			<bitenum value="0" token="RX_FIFO_STS_0" description="Normal operation"/>
			<bitenum value="1" token="RX_FIFO_STS_1" description="At least one parity error, framing error, or break indication in the RX FIFO. Bit 7 is cleared when no errors are present in the RX FIFO."/>
		</bitfield>
		<bitfield id="TX_SR_E" width="1" begin="6" end="6" resetval="1" description="" range="" rwaccess="R">
			<bitenum value="0" token="TX_SR_E_0" description="Transmitter hold (TX FIFO) and shift registers are not empty."/>
			<bitenum value="1" token="TX_SR_E_1" description="Transmitter hold (TX FIFO) and shift registers are empty"/>
		</bitfield>
		<bitfield id="TX_FIFO_E" width="1" begin="5" end="5" resetval="1" description="" range="" rwaccess="R">
			<bitenum value="0" token="TX_FIFO_E_0" description="Transmit hold register (TX FIFO) is not empty."/>
			<bitenum value="1" token="TX_FIFO_E_1" description="Transmit hold register (TX FIFO) is empty. The transmission is not necessarily complete."/>
		</bitfield>
		<bitfield id="RX_BI" width="1" begin="4" end="4" resetval="0" description="" range="" rwaccess="R">
			<bitenum value="0" token="RX_BI_0" description="No break condition"/>
			<bitenum value="1" token="RX_BI_1" description="A break was detected while the data being read from the RX FIFO was being received (RX input was low for one character + 1 bit time frame)."/>
		</bitfield>
		<bitfield id="RX_FE" width="1" begin="3" end="3" resetval="0" description="" range="" rwaccess="R">
			<bitenum value="0" token="RX_FE_0" description="No framing error in data being read from RX FIFO"/>
			<bitenum value="1" token="RX_FE_1" description="Framing error occurred in data being read from RX FIFO (received data did not have a valid stop bit)."/>
		</bitfield>
		<bitfield id="RX_PE" width="1" begin="2" end="2" resetval="0" description="" range="" rwaccess="R">
			<bitenum value="0" token="RX_PE_0" description="No parity error in data being read from RX FIFO"/>
			<bitenum value="1" token="RX_PE_1" description="Parity error in data being read from RX FIFO"/>
		</bitfield>
		<bitfield id="RX_OE" width="1" begin="1" end="1" resetval="0" description="" range="" rwaccess="R">
			<bitenum value="0" token="RX_OE_0" description="No overrun error"/>
			<bitenum value="1" token="RX_OE_1" description="Overrun error occurred. Set when the character held in the receive shift register is not transferred to the RX FIFO. This case occurs only when receive FIFO is full."/>
		</bitfield>
		<bitfield id="RX_FIFO_E" width="1" begin="0" end="0" resetval="0" description="" range="" rwaccess="R">
			<bitenum value="0" token="RX_FIFO_E_0" description="No data in the receive FIFO"/>
			<bitenum value="1" token="RX_FIFO_E_1" description="At least one data character in the RX FIFO"/>
		</bitfield>
	</register>
	<register id="XON2_ADDR2_REG" acronym="XON2_ADDR2_REG" offset="0x14" width="32" description="">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="XON_WORD2" width="8" begin="7" end="0" resetval="0x00" description="Stores the 8-bit XON2 character in UART modes and ADDR2 address 2 for IrDA modes" range="" rwaccess="RW"/>
	</register>
	<register id="MSR_REG" acronym="MSR_REG" offset="0x18" width="32" description="Modem status register. UART mode only.">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0x00." range="" rwaccess="R"/>
		<bitfield id="NCD_STS" width="1" begin="7" end="7" resetval="-" description="In loopback mode, it is equivalent toMCR_REG[3]." range="" rwaccess="R"/>
		<bitfield id="NRI_STS" width="1" begin="6" end="6" resetval="-" description="This bit is the complement of the nRI input. In loopback mode, it is equivalent toMCR_REG[2]." range="" rwaccess="R"/>
		<bitfield id="NDSR_STS" width="1" begin="5" end="5" resetval="-" description="In loopback mode, it is equivalent toMCR_REG[0]." range="" rwaccess="R"/>
		<bitfield id="NCTS_STS" width="1" begin="4" end="4" resetval="-" description="This bit is the complement of the nCTS input. In loopback mode, it is equivalent toMCR_REG[1]." range="" rwaccess="R"/>
		<bitfield id="DCD_STS" width="1" begin="3" end="3" resetval="0" description="Indicates thatMCR_REG[3] in loopback changed. Cleared on a read." range="" rwaccess="R"/>
		<bitfield id="RI_STS" width="1" begin="2" end="2" resetval="0" description="Indicates that nRI input (orMCR_REG[2] in loopback) changed state from low to high. Cleared on a read." range="" rwaccess="R"/>
		<bitfield id="DSR_STS" width="1" begin="1" end="1" resetval="0" description="" range="" rwaccess="R">
			<bitenum value="1" token="DSR_STS_1" description="Indicates that[0] in loopback changed state. Cleared on a read."/>
		</bitfield>
		<bitfield id="CTS_STS" width="1" begin="0" end="0" resetval="0" description="" range="" rwaccess="R">
			<bitenum value="1" token="CTS_STS_1" description="Indicates that nCTS input (or[1] in loopback) changed state. Cleared on a read."/>
		</bitfield>
	</register>
	<register id="TCR_REG" acronym="TCR_REG" offset="0x18" width="32" description="Transmission control register.">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="RX_FIFO_TRIG_START" width="4" begin="7" end="4" resetval="0x0" description="RX FIFO trigger level to RESTORE transmission (0 to 60)" range="" rwaccess="RW"/>
		<bitfield id="RX_FIFO_TRIG_HALT" width="4" begin="3" end="0" resetval="0xF" description="RX FIFO trigger level to HALT transmission (0 to 60)" range="" rwaccess="RW"/>
	</register>
	<register id="XOFF1_REG" acronym="XOFF1_REG" offset="0x18" width="32" description="UART mode XOFF1 character">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0" range="" rwaccess="R"/>
		<bitfield id="XOFF_WORD1" width="8" begin="7" end="0" resetval="0x00" description="Stores the 8-bit XOFF1 character used in UART modes" range="" rwaccess="RW"/>
	</register>
	<register id="SPR_REG" acronym="SPR_REG" offset="0x1C" width="32" description="Scratchpad register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0x00." range="" rwaccess="R"/>
		<bitfield id="SPR_WORD" width="8" begin="7" end="0" resetval="0x00" description="Scratchpad register" range="" rwaccess="RW"/>
	</register>
	<register id="TLR_REG" acronym="TLR_REG" offset="0x1C" width="32" description="Trigger level register.">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0x00." range="" rwaccess="R"/>
		<bitfield id="RX_FIFO_TRIG_DMA" width="4" begin="7" end="4" resetval="0x0" description="Receive FIFO trigger level" range="" rwaccess="RW"/>
		<bitfield id="TX_FIFO_TRIG_DMA" width="4" begin="3" end="0" resetval="0x0" description="Transmit FIFO trigger level" range="" rwaccess="RW"/>
	</register>
	<register id="XOFF2_REG" acronym="XOFF2_REG" offset="0x1C" width="32" description="UART mode XOFF2 character.">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="XOFF_WORD2" width="8" begin="7" end="0" resetval="0x00" description="Stores the 8-bit XOFF2 character used in UART modes" range="" rwaccess="RW"/>
	</register>
	<register id="MDR1_REG" acronym="MDR1_REG" offset="0x20" width="32" description="Mode definition register 1.">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="FRAME_END_MODE" width="1" begin="7" end="7" resetval="0" description="IrDA mode only" range="" rwaccess="RW">
			<bitenum value="0" token="FRAME_END_MODE_0" description="Frame-length method"/>
			<bitenum value="1" token="FRAME_END_MODE_1" description="Set EOT bit method"/>
		</bitfield>
		<bitfield id="SIP_MODE" width="1" begin="6" end="6" resetval="0" description="MIR/FIR modes only. IrDA only." range="" rwaccess="RW">
			<bitenum value="0" token="SIP_MODE_0" description="Manual SIP mode: SIP is generated with the control of[3]."/>
			<bitenum value="1" token="SIP_MODE_1" description="Automatic SIP mode: SIP is generated after each transmission."/>
		</bitfield>
		<bitfield id="SCT" width="1" begin="5" end="5" resetval="0" description="Store and control the transmission.Note:Before starting any transmission, there must be no reception ongoing. ." range="" rwaccess="RW">
			<bitenum value="0" token="SCT_0" description="Starts the infrared transmission when a value is written to"/>
			<bitenum value="1" token="SCT_1" description="Starts the infrared transmission with the control of[2]"/>
		</bitfield>
		<bitfield id="SET_TXIR" width="1" begin="4" end="4" resetval="0" description="Used to configure the infrared transceiver. IrDA only." range="" rwaccess="RW">
			<bitenum value="0" token="SET_TXIR_0" description="a) No action if MDR2[7]=0b) TXIR pin output is forced low if MDR2[7]=1"/>
			<bitenum value="1" token="SET_TXIR_1" description="TXIR pin output is forced high (not dependant on value of MDR2[7])."/>
		</bitfield>
		<bitfield id="IR_SLEEP" width="1" begin="3" end="3" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="IR_SLEEP_0" description="IrDA/CIR sleep mode disabled"/>
			<bitenum value="1" token="IR_SLEEP_1" description="IrDA/CIR sleep mode enabled"/>
		</bitfield>
		<bitfield id="MODE_SELECT" width="3" begin="2" end="0" resetval="0x7" description="UART-IrDA-CIR mode selection" range="" rwaccess="RW">
			<bitenum value="0" token="MODE_SELECT_0" description="UART 16x mode"/>
			<bitenum value="1" token="MODE_SELECT_1" description="SIR mode"/>
			<bitenum value="2" token="MODE_SELECT_2" description="UART 16x auto-baud"/>
			<bitenum value="3" token="MODE_SELECT_3" description="UART 13x mode"/>
			<bitenum value="4" token="MODE_SELECT_4" description="MIR mode"/>
			<bitenum value="5" token="MODE_SELECT_5" description="FIR mode"/>
			<bitenum value="6" token="MODE_SELECT_6" description="CIR mode"/>
			<bitenum value="7" token="MODE_SELECT_7" description="Disable (default state)"/>
		</bitfield>
	</register>
	<register id="MDR2_REG" acronym="MDR2_REG" offset="0x24" width="32" description="Mode definition register 2">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x00" description="Read returns 0x00." range="" rwaccess="R"/>
		<bitfield id="SET_TXIR_ALT" width="1" begin="7" end="7" resetval="0" description="Provide alternate functionnality for MDR1[4] (SET_TXIR)" range="" rwaccess="RW">
			<bitenum value="0" token="SET_TXIR_ALT_0" description="Normal mode."/>
			<bitenum value="1" token="SET_TXIR_ALT_1" description="Alternate mode for SET_TXIR."/>
		</bitfield>
		<bitfield id="IRRXINVERT" width="1" begin="6" end="6" resetval="0" description="Only for IR mode (IrDA and CIR). Invert RX pin in the module before the voting or sampling system logic of the infrared block. This does not affect the RX path in UART modem modes." range="" rwaccess="RW">
			<bitenum value="0" token="IRRXINVERT_0" description="Inversion is performed."/>
			<bitenum value="1" token="IRRXINVERT_1" description="No inversion is performed."/>
		</bitfield>
		<bitfield id="CIR_PULSE_MODE" width="2" begin="5" end="4" resetval="0x00" description="CIR pulse modulation definition. Defines high level of the pulse width associated with a digit:" range="" rwaccess="RW">
			<bitenum value="0" token="CIR_PULSE_MODE_0" description="Pulse width of 3 from 12 cycles"/>
			<bitenum value="1" token="CIR_PULSE_MODE_1" description="Pulse width of 4 from 12 cycles"/>
			<bitenum value="2" token="CIR_PULSE_MODE_2" description="Pulse width of 5 from 12 cycles"/>
			<bitenum value="3" token="CIR_PULSE_MODE_3" description="Pulse width of 6 from 12 cycles"/>
		</bitfield>
		<bitfield id="UART_PULSE" width="1" begin="3" end="3" resetval="0" description="UART mode only. Used to allow pulse shaping in UART mode." range="" rwaccess="RW">
			<bitenum value="0" token="UART_PULSE_0" description="Normal UART mode"/>
			<bitenum value="1" token="UART_PULSE_1" description="UART mode with pulse shaping"/>
		</bitfield>
		<bitfield id="STS_FIFO_TRIG" width="2" begin="2" end="1" resetval="0x00" description="Only for IR-IrDA modeFrame status FIFO threshold select: ." range="" rwaccess="RW">
			<bitenum value="0" token="STS_FIFO_TRIG_0" description="1 entry"/>
			<bitenum value="1" token="STS_FIFO_TRIG_1" description="4 entries"/>
			<bitenum value="2" token="STS_FIFO_TRIG_2" description="7 entries"/>
			<bitenum value="3" token="STS_FIFO_TRIG_3" description="8 entries"/>
		</bitfield>
		<bitfield id="IRTX_UNDERRUN" width="1" begin="0" end="0" resetval="0" description="IrDA transmission status interrupt. When theIIR_REG[5] interrupt occurs, the meaning of the interrupt is:" range="" rwaccess="R">
			<bitenum value="0" token="IRTX_UNDERRUN_0" description="The last bit of the frame was transmitted successfully without error."/>
			<bitenum value="1" token="IRTX_UNDERRUN_1" description="An underrun occurred. The last bit of the frame was transmitted but with an underrun error. The bit is reset to 0 when the register is read."/>
		</bitfield>
	</register>
	<register id="SFLSR_REG" acronym="SFLSR_REG" offset="0x28" width="32" description="Status FIFO line status register">
		<bitfield id="Reserved" width="27" begin="31" end="5" resetval="0x00" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="OE_ERROR" width="1" begin="4" end="4" resetval="-" description="" range="" rwaccess="R">
			<bitenum value="1" token="OE_ERROR_1" description="Overrun error in RX FIFO when frame at top of RX FIFO was received. Top of RX FIFO = next frame to be read from RX FIFO."/>
		</bitfield>
		<bitfield id="FTL_ERROR" width="1" begin="3" end="3" resetval="-" description="Frame-too-long error" range="" rwaccess="R">
			<bitenum value="1" token="FTL_ERROR_1" description="Frame-length too long error in frame at top of RX FIFO"/>
		</bitfield>
		<bitfield id="ABORT_DETECT" width="1" begin="2" end="2" resetval="-" description="" range="" rwaccess="R">
			<bitenum value="1" token="ABORT_DETECT_1" description="Abort pattern detected in frame at top of RX FIFO"/>
			<bitenum value="1" token="ABORT_DETECT_1" description="CRC error in frame at top of RX FIFO"/>
		</bitfield>
		<bitfield id="CRC_ERROR" width="1" begin="1" end="1" resetval="-" description="" range="" rwaccess="R"/>
		<bitfield id="Reserved" width="1" begin="0" end="0" resetval="0" description="Read returns 0." range="" rwaccess="R"/>
	</register>
	<register id="TXFLL_REG" acronym="TXFLL_REG" offset="0x28" width="32" description="Transmit frame length register low">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Write has no functional effect." range="" rwaccess="W"/>
		<bitfield id="TXFLL" width="8" begin="7" end="0" resetval="0x00" description="LSB register used to specify the frame length" range="" rwaccess="W"/>
	</register>
	<register id="RESUME_REG" acronym="RESUME_REG" offset="0x2C" width="32" description="IR-IrDA and IR-CIR modes only">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0x00" range="" rwaccess="R"/>
		<bitfield id="RESUME" width="8" begin="7" end="0" resetval="0x00" description="Dummy read to restart the TX or RX" range="" rwaccess="R"/>
	</register>
	<register id="TXFLH_REG" acronym="TXFLH_REG" offset="0x2C" width="32" description="Transmit frame length register low">
		<bitfield id="Reserved" width="27" begin="31" end="5" resetval="0x0000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="TXFLH" width="5" begin="4" end="0" resetval="0x00" description="MSB register used to specify the frame length" range="" rwaccess="W"/>
	</register>
	<register id="RXFLL_REG" acronym="RXFLL_REG" offset="0x30" width="16" description="Received frame length register low">
		<bitfield id="Reserved" width="8" begin="15" end="8" resetval="0x00" description="Write has no functional effect." range="" rwaccess="W"/>
		<bitfield id="RXFLL" width="8" begin="7" end="0" resetval="0x00" description="LSB register used to specify the frame length in reception" range="" rwaccess="W"/>
	</register>
	<register id="SFREGL_REG" acronym="SFREGL_REG" offset="0x30" width="32" description="Status FIFO register low">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0x00." range="" rwaccess="R"/>
		<bitfield id="SFREGL" width="8" begin="7" end="0" resetval="0x-" description="LSB part of the frame length" range="" rwaccess="R"/>
	</register>
	<register id="RXFLH_REG" acronym="RXFLH_REG" offset="0x34" width="32" description="Received frame length register high">
		<bitfield id="Reserved" width="28" begin="31" end="4" resetval="0x0000000" description="Write has no functional effect." range="" rwaccess="W"/>
		<bitfield id="RXFLH" width="4" begin="3" end="0" resetval="0x0" description="MSB register used to specify the frame length in reception" range="" rwaccess="W"/>
	</register>
	<register id="SFREGH_REG" acronym="SFREGH_REG" offset="0x34" width="32" description="Status FIFO register high">
		<bitfield id="Reserved" width="28" begin="31" end="4" resetval="0x0000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="SFREGH" width="4" begin="3" end="0" resetval="0x-" description="MSB part of the frame length" range="" rwaccess="R"/>
	</register>
	<register id="BLR_REG" acronym="BLR_REG" offset="0x38" width="32" description="BOF control register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="STS_FIFO_RESET" width="1" begin="7" end="7" resetval="0" description="Status FIFO reset. This bit is self-clearing." range="" rwaccess="RW"/>
		<bitfield id="XBOF_TYPE" width="1" begin="6" end="6" resetval="1" description="SIR xBOF select" range="" rwaccess="RW">
			<bitenum value="0" token="XBOF_TYPE_0" description="0xFF"/>
			<bitenum value="1" token="XBOF_TYPE_1" description="0xC0"/>
		</bitfield>
		<bitfield id="Reserved" width="6" begin="5" end="0" resetval="0x00" description="Read returns 0x00." range="" rwaccess="R"/>
	</register>
	<register id="UASR_REG" acronym="UASR_REG" offset="0x38" width="32" description="UART autobauding status register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="PARITY_TYPE" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R">
			<bitenum value="0" token="PARITY_TYPE_0" description="No parity identified"/>
			<bitenum value="1" token="PARITY_TYPE_1" description="Parity space"/>
			<bitenum value="2" token="PARITY_TYPE_2" description="Even parity"/>
			<bitenum value="3" token="PARITY_TYPE_3" description="Odd parity"/>
		</bitfield>
		<bitfield id="BIT_BY_CHAR" width="1" begin="5" end="5" resetval="0" description="" range="" rwaccess="R">
			<bitenum value="0" token="BIT_BY_CHAR_0" description="7-bit character identified"/>
			<bitenum value="1" token="BIT_BY_CHAR_1" description="8-bit character identified"/>
		</bitfield>
		<bitfield id="SPEED" width="5" begin="4" end="0" resetval="0x00" description="Used to report the speed identified" range="" rwaccess="R">
			<bitenum value="0" token="SPEED_0" description="No speed identified"/>
			<bitenum value="1" token="SPEED_1" description="115 200 baud"/>
			<bitenum value="2" token="SPEED_2" description="57 600 baud"/>
			<bitenum value="3" token="SPEED_3" description="38 400 baud"/>
			<bitenum value="4" token="SPEED_4" description="28 800 baud"/>
			<bitenum value="5" token="SPEED_5" description="19 200 baud"/>
			<bitenum value="6" token="SPEED_6" description="14 400 baud"/>
			<bitenum value="7" token="SPEED_7" description="9 600 baud"/>
			<bitenum value="8" token="SPEED_8" description="4 800 baud"/>
			<bitenum value="9" token="SPEED_9" description="4 800 baud"/>
			<bitenum value="10" token="SPEED_10" description="1 200 baud"/>
		</bitfield>
	</register>
	<register id="ACREG_REG" acronym="ACREG_REG" offset="0x3C" width="32" description="Auxiliary control register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x00" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="PULSE_TYPE" width="1" begin="7" end="7" resetval="0" description="SIR pulse-width select:" range="" rwaccess="RW">
			<bitenum value="0" token="PULSE_TYPE_0" description="3/16 of baud-rate pulse width"/>
			<bitenum value="1" token="PULSE_TYPE_1" description="1.6 &#181;s"/>
		</bitfield>
		<bitfield id="SD_MOD" width="1" begin="6" end="6" resetval="0" description="Primary output used to configure transceivers. Connected to the SD/MODE input pin of IrDA transceivers." range="" rwaccess="RW">
			<bitenum value="0" token="SD_MOD_0" description="SD pin is set to high."/>
			<bitenum value="1" token="SD_MOD_1" description="SD pin is set to low."/>
		</bitfield>
		<bitfield id="DIS_IR_RX" width="1" begin="5" end="5" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="DIS_IR_RX_0" description="Normal operation (RX input automatically disabled during transmit, but enabled outside of transmit operation)."/>
			<bitenum value="1" token="DIS_IR_RX_1" description="Disables RX input (permanent state; independent of transmit)"/>
		</bitfield>
		<bitfield id="DIS_TX_UNDERRUN" width="1" begin="4" end="4" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="DIS_TX_UNDERRUN_0" description="Long stop bits cannot be transmitted. TX underrun is enabled."/>
			<bitenum value="1" token="DIS_TX_UNDERRUN_1" description="Long stop bits can be transmitted. TX underrun is disabled."/>
		</bitfield>
		<bitfield id="SEND_SIP" width="1" begin="3" end="3" resetval="0" description="MIR/FIR modes only. Send serial infrared interaction pulse (SIP).If this bit is set during an MIR/FIR transmission, the SIP is sent at the end of it. This bit is automatically cleared at the end of the SIP transmission. ." range="" rwaccess="RW">
			<bitenum value="0" token="SEND_SIP_0" description="No action"/>
			<bitenum value="1" token="SEND_SIP_1" description="Send SIP pulse."/>
		</bitfield>
		<bitfield id="SCTX_EN" width="1" begin="2" end="2" resetval="0" description="Store and control TX start. WhenMDR1_REG[5] = 1 and the MPU writes 1 to this bit, the TX state-machine starts frame transmission. This bit is self-clearing." range="" rwaccess="RW"/>
		<bitfield id="ABORT_EN" width="1" begin="1" end="1" resetval="0" description="Frame abort. The MPU can intentionally abort transmission of a frame by writing 1 to this bit. Neither the end flag nor the CRC bits are appended to the frame." range="" rwaccess="RW"/>
		<bitfield id="EOT_EN" width="1" begin="0" end="0" resetval="0" description="EOT (end-of-transmission) bit. The MPU writes 1 to this bit just before it writes the last byte to the TX FIFO in the set-EOT bit frame-closing method. This bit is automatically cleared when the MPU writes to theTHR_REG (TX FIFO)." range="" rwaccess="RW"/>
	</register>
	<register id="SCR_REG" acronym="SCR_REG" offset="0x40" width="32" description="Supplementary control register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="RX_TRIG_GRANU1" width="1" begin="7" end="7" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="RX_TRIG_GRANU1_0" description="Disables the granularity of 1 for TRIGGER RX level"/>
			<bitenum value="1" token="RX_TRIG_GRANU1_1" description="Enables the granularity of 1 for TRIGGER RX level"/>
		</bitfield>
		<bitfield id="TX_TRIG_GRANU1" width="1" begin="6" end="6" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="TX_TRIG_GRANU1_0" description="Disables the granularity of 1 for TRIGGER TX level"/>
			<bitenum value="1" token="TX_TRIG_GRANU1_1" description="Enables the granularity of 1 for trigger TX level"/>
		</bitfield>
		<bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0" description="Read returns 0. Write has no functional effect." range="" rwaccess="R"/>
		<bitfield id="RX_CTS_WU_EN" width="1" begin="4" end="4" resetval="0" description="RX CTS wake-up enable" range="" rwaccess="RW">
			<bitenum value="0" token="RX_CTS_WU_EN_0" description="Disables the WAKE UP interrupt and clears[1]"/>
			<bitenum value="1" token="RX_CTS_WU_EN_1" description="Waits for a falling edge of pins RX, nCTS, or nDSR to generate an interrupt"/>
		</bitfield>
		<bitfield id="TX_EMPTY_CTL_IT" width="1" begin="3" end="3" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="TX_EMPTY_CTL_IT_0" description="Normal mode for THR interrupt (see for details about UART mode interrupts)"/>
			<bitenum value="1" token="TX_EMPTY_CTL_IT_1" description="The THR interrupt is generated when TX FIFO and TX shift register are empty."/>
		</bitfield>
		<bitfield id="DMA_MODE_2" width="2" begin="2" end="1" resetval="0x0" description="Specifies the DMA mode valid ifSCR_REG[0] = 1" range="" rwaccess="RW">
			<bitenum value="0" token="DMA_MODE_2_0" description="DMA mode 0 (no DMA)"/>
			<bitenum value="1" token="DMA_MODE_2_1" description="DMA mode 1 (UARTi_DMA_TX, UARTi_DMA_RX)"/>
			<bitenum value="2" token="DMA_MODE_2_2" description="DMA mode 2 (UARTi_DMA_RX)"/>
			<bitenum value="3" token="DMA_MODE_2_3" description="DMA mode 3 (UARTi_DMA_TX)"/>
		</bitfield>
		<bitfield id="DMA_MODE_CTL" width="1" begin="0" end="0" resetval="0" description="" range="" rwaccess="RW">
			<bitenum value="0" token="DMA_MODE_CTL_0" description="The DMA_MODE is set with[3]."/>
			<bitenum value="1" token="DMA_MODE_CTL_1" description="The DMA_MODE is set with[2:1]."/>
		</bitfield>
	</register>
	<register id="SSR_REG" acronym="SSR_REG" offset="0x44" width="16" description="Supplementary status register">
		<bitfield id="Reserved" width="13" begin="15" end="3" resetval="0x00000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="DMA_COUNTER_RST" width="1" begin="2" end="2" resetval="1" description="DMA counter reset." range="" rwaccess="RW">
			<bitenum value="0" token="DMA_COUNTER_RST_0" description="The DMA counter will not be reset if the corresponding FIFO is reset (via FCR[1] or FCR[2])"/>
			<bitenum value="1" token="DMA_COUNTER_RST_1" description="The DMA counter will be reset if corresponding FIFO is reset (via FCR[1] or FCR[2])."/>
		</bitfield>
		<bitfield id="RX_CTS_DSR_WAKE_UP_STS" width="1" begin="1" end="1" resetval="0" description="Pin falling edge detection: Reset only whenSCR_REG[4] is reset to 0." range="" rwaccess="R">
			<bitenum value="0" token="RX_CTS_DSR_WAKE_UP_STS_0" description="No falling-edge event on RX, nCTS, and nDSR"/>
			<bitenum value="1" token="RX_CTS_DSR_WAKE_UP_STS_1" description="A falling edge occurred on RX, nCTS, or nDSR."/>
		</bitfield>
		<bitfield id="TX_FIFO_FULL" width="1" begin="0" end="0" resetval="0" description="TX FIFO status." range="" rwaccess="R">
			<bitenum value="0" token="TX_FIFO_FULL_0" description="TX FIFO is not full."/>
			<bitenum value="1" token="TX_FIFO_FULL_1" description="TX FIFO is full."/>
		</bitfield>
	</register>
	<register id="EBLR_REG" acronym="EBLR_REG" offset="0x48" width="32" description="BOF length register.">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="EBLR" width="8" begin="7" end="0" resetval="0x00" description="IR-IrDA mode: This register allows definition of up to 176 xBOFs, the maximum required by IrDA specification.IR-CIR mode: N/A" range="" rwaccess="RW">
			<bitenum value="0" token="EBLR_0" description="Feature disabled"/>
			<bitenum value="1" token="EBLR_1" description="Generate RX_STOP interrupt after receiving one zero bit."/>
			<bitenum value="255" token="EBLR_255" description="Generate RX_STOP interrupt after receiving 255 zero bits."/>
		</bitfield>
	</register>
	<register id="MVR_REG" acronym="MVR_REG" offset="0x50" width="32" description="Module version register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="MAJOR_REV" width="4" begin="7" end="4" resetval="See" description="Major revision of the module" range="" rwaccess="R"/>
		<bitfield id="MINOR_REV" width="4" begin="3" end="0" resetval="See" description="Minor revision of the module" range="" rwaccess="R"/>
	</register>
	<register id="SYSC_REG" acronym="SYSC_REG" offset="0x54" width="32" description="System configuration register.">
		<bitfield id="Reserved" width="27" begin="31" end="5" resetval="0x00000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="IDLEMODE" width="2" begin="4" end="3" resetval="0x0" description="Power management req/ack control" range="" rwaccess="RW">
			<bitenum value="0" token="IDLEMODE_0" description="Force idle: Idle request is acknowledged unconditionally."/>
			<bitenum value="1" token="IDLEMODE_1" description="No-idle: Idle request is never acknowledged."/>
			<bitenum value="2" token="IDLEMODE_2" description="Smart idle: Idle request is acknowledged based on the internal module activity."/>
			<bitenum value="3" token="IDLEMODE_3" description="Reserved"/>
		</bitfield>
		<bitfield id="ENAWAKEUP" width="1" begin="2" end="2" resetval="0" description="Wakeup control" range="" rwaccess="RW">
			<bitenum value="0" token="ENAWAKEUP_0" description="Wakeup is disabled."/>
			<bitenum value="1" token="ENAWAKEUP_1" description="Wakeup capability is enabled."/>
		</bitfield>
		<bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0" description="Software reset. Set this bit to 1 to trigger a module reset. This bit is automatically reset by the hardware. Read returns 0." range="" rwaccess="RW">
			<bitenum value="0" token="SOFTRESET_0" description="Normal mode"/>
			<bitenum value="1" token="SOFTRESET_1" description="The module is reset."/>
		</bitfield>
		<bitfield id="AUTOIDLE" width="1" begin="0" end="0" resetval="0" description="Internal interface clock-gating strategy" range="" rwaccess="RW">
			<bitenum value="0" token="AUTOIDLE_0" description="Clock is running."/>
			<bitenum value="1" token="AUTOIDLE_1" description="Automatic interface clock-gating strategy is applied based on interface activity."/>
		</bitfield>
	</register>
	<register id="SYSS_REG" acronym="SYSS_REG" offset="0x58" width="32" description="System status register">
		<bitfield id="Reserved" width="31" begin="31" end="1" resetval="0x0000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="RESETDONE" width="1" begin="0" end="0" resetval="0" description="Internal reset monitoring" range="" rwaccess="R">
			<bitenum value="0" token="RESETDONE_0" description="Internal module reset is ongoing."/>
			<bitenum value="1" token="RESETDONE_1" description="Reset complete"/>
		</bitfield>
	</register>
	<register id="WER_REG" acronym="WER_REG" offset="0x5C" width="32" description="Wake-up enable register">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0x00." range="" rwaccess="R"/>
		<bitfield id="EVENT_7_TX_WAKEUP_EN" width="1" begin="7" end="7" resetval="1" description="Receiver line status interrupt" range="" rwaccess="RW">
			<bitenum value="0" token="EVENT_7_TX_WAKEUP_EN_0" description="Event is not allowed to wake up the system."/>
			<bitenum value="1" token="EVENT_7_TX_WAKEUP_EN_1" description="EVENT CAN WAKE UP THE SYSTEM: Event can be: THR_IT or TX_DMA request and/or TX_SATUS_IT."/>
		</bitfield>
		<bitfield id="EVENT_6_RLS_INTERRUPT" width="1" begin="6" end="6" resetval="1" description="Receiver line status interrupt" range="" rwaccess="RW">
			<bitenum value="0" token="EVENT_6_RLS_INTERRUPT_0" description="Event is not allowed to wake up the system."/>
			<bitenum value="1" token="EVENT_6_RLS_INTERRUPT_1" description="Event can wake up the system."/>
		</bitfield>
		<bitfield id="EVENT_5_RHR_INTERRUPT" width="1" begin="5" end="5" resetval="RW" description="" range="" rwaccess="">
			<bitenum value="0" token="EVENT_5_RHR_INTERRUPT_0" description="Event is not allowed to wake up the system."/>
			<bitenum value="1" token="EVENT_5_RHR_INTERRUPT_1" description="Event can wake up the system."/>
		</bitfield>
		<bitfield id="EVENT_4_RX_ACTIVITY" width="1" begin="4" end="4" resetval="1" description="" range="" rwaccess="RW">
			<bitenum value="0" token="EVENT_4_RX_ACTIVITY_0" description="Event is not allowed to wake up the system."/>
			<bitenum value="1" token="EVENT_4_RX_ACTIVITY_1" description="Event can wake up the system."/>
		</bitfield>
		<bitfield id="RESERVED" width="1" begin="3" end="3" resetval="1" description="Read returns 1. Must be set to 1 for correct behavior." range="" rwaccess="RW"/>
		<bitfield id="EVENT_2_RI_ACTIVITY" width="1" begin="2" end="2" resetval="1" description="" range="" rwaccess="RW">
			<bitenum value="0" token="EVENT_2_RI_ACTIVITY_0" description="Event is not allowed to wake up the system."/>
			<bitenum value="1" token="EVENT_2_RI_ACTIVITY_1" description="Event can wake up the system."/>
		</bitfield>
		<bitfield id="RESERVED" width="1" begin="1" end="1" resetval="1" description="Read returns 1. Must be set to 1 for correct behavior." range="" rwaccess="RW"/>
		<bitfield id="EVENT_0_CTS_ACTIVITY" width="1" begin="0" end="0" resetval="1" description="UART mode only" range="" rwaccess="RW">
			<bitenum value="0" token="EVENT_0_CTS_ACTIVITY_0" description="Event is not allowed to wake up the system."/>
			<bitenum value="1" token="EVENT_0_CTS_ACTIVITY_1" description="Event can wake up the system."/>
		</bitfield>
	</register>
	<register id="CFPS_REG" acronym="CFPS_REG" offset="0x60" width="32" description="Carrier frequency prescaler">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="CFPS" width="8" begin="7" end="0" resetval="0x69" description="Because the consumer IR works at modulation rates of 30-56.8 kHz, the 48-MHz clock must be prescaled before the clock can drive the IR logic. This register sets the divisor rate to give a range to accommodate remote-control requirements in BAUD multiples of 12x. The value of the CFPS at reset is 0105 (decimal), which equates to a 38.1-kHz output from starting conditions. The 48-MHz carrier is prescaled by the CFPS, which is then divided by the 12x BAUD multiple.Example: . Target Freq (kHz) CFPS (decimal) Actual Freq(kHz) . 30 133 30.08 . 32.75 122 32.79 . 36 111 36.04 . 36.7 109 36.69 . 38 105 38.1 . 40 100 40 . 56.8 70 57.14 . CFPS = 0 is not supported. ." range="" rwaccess="RW"/>
	</register>
	<register id="RXFIFO_LVL_REG" acronym="RXFIFO_LVL_REG" offset="0x64" width="32" description="Level of the RX FIFO">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="RXFIFO_LVL" width="8" begin="7" end="0" resetval="0x00" description="Shows the number of received bytes in the RX FIFO." range="" rwaccess="R"/>
	</register>
	<register id="TXFIFO_LVL_REG" acronym="TXFIFO_LVL_REG" offset="0x68" width="32" description="Level of the TX FIFO">
		<bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0x00." range="" rwaccess="R"/>
		<bitfield id="TXFIFO_LVL" width="8" begin="7" end="0" resetval="0x00" description="Shows the number of received bytes in the TX FIFO." range="" rwaccess="R"/>
	</register>
	<register id="IER2_REG" acronym="IER2_REG" offset="0x6C" width="32" description="Enables RX/TX FIFOs empty corresponding interrupts.">
		<bitfield id="Reserved" width="30" begin="31" end="2" resetval="0x0000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="EN_TXFIFO_EMPTY" width="1" begin="1" end="1" resetval="0" description="Enables TX FIFO empty corresponding interrupt" range="" rwaccess="RW">
			<bitenum value="0" token="EN_TXFIFO_EMPTY_0" description="Enables EN_TXFIFO_EMPTY interrupt"/>
			<bitenum value="1" token="EN_TXFIFO_EMPTY_1" description="Disables EN_TXFIFO_EMPTY interrupt"/>
		</bitfield>
		<bitfield id="EN_RXFIFO_EMPTY" width="1" begin="0" end="0" resetval="0" description="Enables RX FIFO empty corresponding interrupt" range="" rwaccess="RW">
			<bitenum value="0" token="EN_RXFIFO_EMPTY_0" description="Enables EN_RXFIFO_EMPTY interrupt"/>
			<bitenum value="1" token="EN_RXFIFO_EMPTY_1" description="Disables EN_RXFIFO_EMPTY interrupt"/>
		</bitfield>
	</register>
	<register id="ISR2_REG" acronym="ISR2_REG" offset="0x70" width="32" description="Status of RX/TX FIFOs empty corresponding interrupts.">
		<bitfield id="Reserved" width="30" begin="31" end="2" resetval="0x0000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="TXFIFO_EMPTY_STS" width="1" begin="1" end="1" resetval="1" description="Used to generate interrupt if the TX_FIFO is empty (software flow control)" range="" rwaccess="RW">
			<bitenum value="0" token="TXFIFO_EMPTY_STS_0" description="TXFIFO_EMPTY interrupt not pending."/>
			<bitenum value="1" token="TXFIFO_EMPTY_STS_1" description="TXFIFO_EMPTY interrupt pending."/>
		</bitfield>
		<bitfield id="RXFIFO_EMPTY_STS" width="1" begin="0" end="0" resetval="1" description="Used to generate interrupt if the RX_FIFO is empty (software flow control)" range="" rwaccess="RW">
			<bitenum value="0" token="RXFIFO_EMPTY_STS_0" description="RXFIFO_EMPTY interrupt not pending."/>
			<bitenum value="1" token="RXFIFO_EMPTY_STS_1" description="RXFIFO_EMPTY interrupt pending."/>
		</bitfield>
	</register>
	<register id="MDR3_REG" acronym="MDR3_REG" offset="0x80" width="32" description="Mode definition register 3.">
		<bitfield id="Reserved" width="31" begin="31" end="1" resetval="0x0000000" description="Read returns 0." range="" rwaccess="R"/>
		<bitfield id="DISABLE_CIR_RX_DEMOD" width="1" begin="0" end="0" resetval="0" description="Used to enable CIR RX demodulation." range="" rwaccess="RW">
			<bitenum value="0" token="DISABLE_CIR_RX_DEMOD_0" description="Enables CIR RX demodulation."/>
			<bitenum value="1" token="DISABLE_CIR_RX_DEMOD_1" description="Disables CIR RX demodulation."/>
		</bitfield>
	</register>
</module>
