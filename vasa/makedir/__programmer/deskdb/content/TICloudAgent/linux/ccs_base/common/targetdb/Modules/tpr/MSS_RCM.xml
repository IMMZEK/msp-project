

<module description="" id="MSS_RCM">
  
  
  <register acronym="PID" description=" PID register " id="PID" offset="0x0" width="32">
    
  <bitfield begin="31" description="" end="16" id="" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="" end="11" id="" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="" end="8" id="" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="" end="6" id="" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="MSS_RST_CAUSE_CLR" description="" id="MSS_RST_CAUSE_CLR" offset="0x4" width="32">
    
  <bitfield begin="2" description="Write pulse bit field: Clear bit for rst cause register (writing '111'  will clear the rst cause register)" end="0" id="clr" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_RST_STATUS" description="" id="MSS_RST_STATUS" offset="0x8" width="32">
    
  <bitfield begin="15" description="Has the status because of which reset has happened.                                        Bit0: POR Reset Bit1: Warm Reset Bit2: STC Reset Bit3  Reset for CR5A and MSS_CR5A_VIM  using MSS_RCM::MSS_CR5SSA_RST_CTRL Bit4: Reset for CR5B and MSS_CR5B_VIM using MSS_RCM::MSS_CR5SSB_RST_CTRL Bit5: Reset for  CR5A only using  MSS_RCM::MSS_CR5A_RST_CTRL Bit6: Reset for CR5B only using using MSS_RCM::MSS_CR5B_RST_CTRL Bit7: Reset for CR5A and MSS_CR5A_VIM caused because of reset request  by debugger in CR5A                                                                                                         Bit8:  Reset for CR5B and MSS_CR5B_VIM caused because of reset request  by debugger in CR5B Bit9: Reset for CR5SS by the RESET FSM  using  MSS_CTRL::R5_CONTROL_RESET_FSM_TRIGGER" end="0" id="cause" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="SYSRST_BY_DBG_RST" description="" id="SYSRST_BY_DBG_RST" offset="0xC" width="32">
    
  <bitfield begin="18" description="writing '000'   will block debug reset request from CR5B  toggling globally reset for CR5B" end="16" id="r5b" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="writing '000'   will block debug reset request from CR5A  toggling globally reset for CR5A" end="0" id="r5a" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RST_ASSERDLY" description="" id="RST_ASSERDLY" offset="0x10" width="32">
    
  <bitfield begin="7" description="Value decides number of cycles reset should be asserted for CR5SS related resets" end="0" id="common" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="RST2ASSERTDLY" description="" id="RST2ASSERTDLY" offset="0x14" width="32">
    
  <bitfield begin="31" description="Value decides number of cycles should be held before asserting reset for r5ss local reset for CR5B" end="24" id="r5b" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Value decides number of cycles should be held before asserting reset for r5ss local reset for CR5A" end="16" id="r5a" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Value decides number of cycles should be held before asserting reset for r5ss global reset for CR5B" end="8" id="r5ssb" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="Value decides number of cycles should be held before asserting reset for r5ss global reset for CR5A." end="0" id="r5ssa" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="RST_WFICHECK" description="" id="RST_WFICHECK" offset="0x18" width="32">
    
  <bitfield begin="26" description="writing '000' will disable check for WFI before  local reset assertion of CR5A" end="24" id="r5b" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="writing '000' will disable check for WFI before  local reset assertion of CR5A" end="16" id="r5a" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="writing '000' will disable check for WFI before  global reset assertion of CR5B" end="8" id="r5ssb" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="writing '000' will disable check for WFI before  global reset assertion of CR5A" end="0" id="r5ssa" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_MCANA_CLK_SRC_SEL" description="" id="MSS_MCANA_CLK_SRC_SEL" offset="0x1C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for MCANA.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_MCANB_CLK_SRC_SEL" description="" id="MSS_MCANB_CLK_SRC_SEL" offset="0x20" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for MCANB.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_CLK_SRC_SEL" description="" id="MSS_QSPI_CLK_SRC_SEL" offset="0x24" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for QSPI.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIA_CLK_SRC_SEL" description="" id="MSS_RTIA_CLK_SRC_SEL" offset="0x28" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RTIA.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIB_CLK_SRC_SEL" description="" id="MSS_RTIB_CLK_SRC_SEL" offset="0x2C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RTIB.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIC_CLK_SRC_SEL" description="" id="MSS_RTIC_CLK_SRC_SEL" offset="0x30" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RTIC.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_WDT_CLK_SRC_SEL" description="" id="MSS_WDT_CLK_SRC_SEL" offset="0x34" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for WDT.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIA_CLK_SRC_SEL" description="" id="MSS_SPIA_CLK_SRC_SEL" offset="0x38" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for SPIA.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIB_CLK_SRC_SEL" description="" id="MSS_SPIB_CLK_SRC_SEL" offset="0x3C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for SPIB.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_I2C_CLK_SRC_SEL" description="" id="MSS_I2C_CLK_SRC_SEL" offset="0x40" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for I2C.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_SCIA_CLK_SRC_SEL" description="" id="MSS_SCIA_CLK_SRC_SEL" offset="0x44" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for SCIA.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_SCIB_CLK_SRC_SEL" description="" id="MSS_SCIB_CLK_SRC_SEL" offset="0x48" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for SCIB.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_CPTS_CLK_SRC_SEL" description="" id="MSS_CPTS_CLK_SRC_SEL" offset="0x4C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for CPTS.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_CPSW_CLK_SRC_SEL" description="" id="MSS_CPSW_CLK_SRC_SEL" offset="0x50" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for CPSW.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_MCANA_CLK_DIV_VAL" description="" id="MSS_MCANA_CLK_DIV_VAL" offset="0x54" width="32">
    
  <bitfield begin="11" description="Divider value MCANA selected clock.Data should be loaded as multibit.   For example: if divider value of 8(1000) should be selected then '100010001000' should be configured to the register. Refer to TPR12 clock planner for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_MCANB_CLK_DIV_VAL" description="" id="MSS_MCANB_CLK_DIV_VAL" offset="0x58" width="32">
    
  <bitfield begin="11" description="Divider value MCANB selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_CLK_DIV_VAL" description="" id="MSS_QSPI_CLK_DIV_VAL" offset="0x5C" width="32">
    
  <bitfield begin="11" description="Divider value QSPI selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIA_CLK_DIV_VAL" description="" id="MSS_RTIA_CLK_DIV_VAL" offset="0x60" width="32">
    
  <bitfield begin="11" description="Divider value RTIA selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIB_CLK_DIV_VAL" description="" id="MSS_RTIB_CLK_DIV_VAL" offset="0x64" width="32">
    
  <bitfield begin="11" description="Divider value RTIB selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIC_CLK_DIV_VAL" description="" id="MSS_RTIC_CLK_DIV_VAL" offset="0x68" width="32">
    
  <bitfield begin="11" description="Divider value RTIC selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_WDT_CLK_DIV_VAL" description="" id="MSS_WDT_CLK_DIV_VAL" offset="0x6C" width="32">
    
  <bitfield begin="11" description="Divider value WDT selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIA_CLK_DIV_VAL" description="" id="MSS_SPIA_CLK_DIV_VAL" offset="0x70" width="32">
    
  <bitfield begin="11" description="Divider value SPIA selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIB_CLK_DIV_VAL" description="" id="MSS_SPIB_CLK_DIV_VAL" offset="0x74" width="32">
    
  <bitfield begin="11" description="Divider value SPIB selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_I2C_CLK_DIV_VAL" description="" id="MSS_I2C_CLK_DIV_VAL" offset="0x78" width="32">
    
  <bitfield begin="11" description="Divider value I2C selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_SCIA_CLK_DIV_VAL" description="" id="MSS_SCIA_CLK_DIV_VAL" offset="0x7C" width="32">
    
  <bitfield begin="11" description="Divider value SCIA selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_SCIB_CLK_DIV_VAL" description="" id="MSS_SCIB_CLK_DIV_VAL" offset="0x80" width="32">
    
  <bitfield begin="11" description="Divider value SCIB selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_CPTS_CLK_DIV_VAL" description="" id="MSS_CPTS_CLK_DIV_VAL" offset="0x84" width="32">
    
  <bitfield begin="11" description="Divider value CPTS selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_CPSW_CLK_DIV_VAL" description="" id="MSS_CPSW_CLK_DIV_VAL" offset="0x88" width="32">
    
  <bitfield begin="11" description="Divider value CPSW selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_RGMII_CLK_DIV_VAL" description="" id="MSS_RGMII_CLK_DIV_VAL" offset="0x8C" width="32">
    
  <bitfield begin="11" description="Divider value RGMII selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_MII100_CLK_DIV_VAL" description="" id="MSS_MII100_CLK_DIV_VAL" offset="0x90" width="32">
    
  <bitfield begin="11" description="Divider value MII100 selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_MII10_CLK_DIV_VAL" description="" id="MSS_MII10_CLK_DIV_VAL" offset="0x94" width="32">
    
  <bitfield begin="23" description="Divider value MII10 selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="24"></bitfield>
  </register>
  
  
  <register acronym="MSS_GPADC_CLK_DIV_VAL" description="" id="MSS_GPADC_CLK_DIV_VAL" offset="0x98" width="32">
    
  <bitfield begin="23" description="Divider value GPADC selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="24"></bitfield>
  </register>
  
  
  <register acronym="MSS_MCANA_CLK_GATE" description="" id="MSS_MCANA_CLK_GATE" offset="0x9C" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for MCANA" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_MCANB_CLK_GATE" description="" id="MSS_MCANB_CLK_GATE" offset="0xA0" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for MCANB" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_CLK_GATE" description="" id="MSS_QSPI_CLK_GATE" offset="0xA4" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for QSPI" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIA_CLK_GATE" description="" id="MSS_RTIA_CLK_GATE" offset="0xA8" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for RTIA" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIB_CLK_GATE" description="" id="MSS_RTIB_CLK_GATE" offset="0xAC" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for RTIB" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIC_CLK_GATE" description="" id="MSS_RTIC_CLK_GATE" offset="0xB0" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for RTIC" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_WDT_CLK_GATE" description="" id="MSS_WDT_CLK_GATE" offset="0xB4" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for WDT" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIA_CLK_GATE" description="" id="MSS_SPIA_CLK_GATE" offset="0xB8" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for SPIA" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIB_CLK_GATE" description="" id="MSS_SPIB_CLK_GATE" offset="0xBC" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for SPIB" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_I2C_CLK_GATE" description="" id="MSS_I2C_CLK_GATE" offset="0xC0" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for I2C" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_SCIA_CLK_GATE" description="" id="MSS_SCIA_CLK_GATE" offset="0xC4" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for SCIA" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_SCIB_CLK_GATE" description="" id="MSS_SCIB_CLK_GATE" offset="0xC8" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for SCIB" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CPTS_CLK_GATE" description="" id="MSS_CPTS_CLK_GATE" offset="0xCC" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for CPTS" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CPSW_CLK_GATE" description="" id="MSS_CPSW_CLK_GATE" offset="0xD0" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for CPSW" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_RGMII_CLK_GATE" description="" id="MSS_RGMII_CLK_GATE" offset="0xD4" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for RGMII" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_MII100_CLK_GATE" description="" id="MSS_MII100_CLK_GATE" offset="0xD8" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for MII100" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_MII10_CLK_GATE" description="" id="MSS_MII10_CLK_GATE" offset="0xDC" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for MII10" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_GPADC_CLK_GATE" description="" id="MSS_GPADC_CLK_GATE" offset="0xE0" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for MSS GPADC" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_MCANA_CLK_STATUS" description="" id="MSS_MCANA_CLK_STATUS" offset="0xE4" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for MCANA" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for MCANA" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_MCANB_CLK_STATUS" description="" id="MSS_MCANB_CLK_STATUS" offset="0xE8" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for MCANB" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for MCANB" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_CLK_STATUS" description="" id="MSS_QSPI_CLK_STATUS" offset="0xEC" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for QSPI" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for QSPI" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIA_CLK_STATUS" description="" id="MSS_RTIA_CLK_STATUS" offset="0xF0" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RTIA" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RTIA" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIB_CLK_STATUS" description="" id="MSS_RTIB_CLK_STATUS" offset="0xF4" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RTIB" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RTIB" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIC_CLK_STATUS" description="" id="MSS_RTIC_CLK_STATUS" offset="0xF8" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RTIC" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RTIC" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_WDT_CLK_STATUS" description="" id="MSS_WDT_CLK_STATUS" offset="0xFC" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for WDT" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for WDT" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIA_CLK_STATUS" description="" id="MSS_SPIA_CLK_STATUS" offset="0x100" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for SPIA" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for SPIA" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIB_CLK_STATUS" description="" id="MSS_SPIB_CLK_STATUS" offset="0x104" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for SPIB" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for SPIB" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_I2C_CLK_STATUS" description="" id="MSS_I2C_CLK_STATUS" offset="0x108" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for I2C" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for I2C" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_SCIA_CLK_STATUS" description="" id="MSS_SCIA_CLK_STATUS" offset="0x10C" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for SCIA" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for SCIA" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_SCIB_CLK_STATUS" description="" id="MSS_SCIB_CLK_STATUS" offset="0x110" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for SCIB" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for SCIB" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CPTS_CLK_STATUS" description="" id="MSS_CPTS_CLK_STATUS" offset="0x114" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for CPTS" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for CPTS" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CPSW_CLK_STATUS" description="" id="MSS_CPSW_CLK_STATUS" offset="0x118" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for CPSW" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for CPSW" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_RGMII_CLK_STATUS" description="" id="MSS_RGMII_CLK_STATUS" offset="0x11C" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RGMII" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_MII100_CLK_STATUS" description="" id="MSS_MII100_CLK_STATUS" offset="0x120" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for MII100" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_MII10_CLK_STATUS" description="" id="MSS_MII10_CLK_STATUS" offset="0x124" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for MII10" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_GPADC_CLK_STATUS" description="" id="MSS_GPADC_CLK_STATUS" offset="0x128" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for GPADC" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5SS_POR_RST_CTRL" description="" id="MSS_CR5SS_POR_RST_CTRL" offset="0x12C" width="32">
    
  <bitfield begin="2" description="write pulse bit field: writing '111' will assert por reset to R5SS" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5SSA_RST_CTRL" description="" id="MSS_CR5SSA_RST_CTRL" offset="0x130" width="32">
    
  <bitfield begin="2" description="write pulse bit field: writing '111'  will reset CR5A and MSS_CR5A_VIM" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5SSB_RST_CTRL" description="" id="MSS_CR5SSB_RST_CTRL" offset="0x134" width="32">
    
  <bitfield begin="2" description="write pulse bit field: writing '111'  will reset CR5B  and MSS_CR5B_VIM" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5A_RST_CTRL" description="" id="MSS_CR5A_RST_CTRL" offset="0x138" width="32">
    
  <bitfield begin="2" description="write pulse bit field: writing '111'  will reset CR5A only" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5B_RST_CTRL" description="" id="MSS_CR5B_RST_CTRL" offset="0x13C" width="32">
    
  <bitfield begin="2" description="write pulse bit field: writing '111'  will reset CR5B only" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_VIMA_RST_CTRL" description="" id="MSS_VIMA_RST_CTRL" offset="0x140" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MSS_CR5A_VIM" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_VIMB_RST_CTRL" description="" id="MSS_VIMB_RST_CTRL" offset="0x144" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MSS_CR5B_VIM" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CRC_RST_CTRL" description="" id="MSS_CRC_RST_CTRL" offset="0x148" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MCRC" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIA_RST_CTRL" description="" id="MSS_RTIA_RST_CTRL" offset="0x14C" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset RTIA" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIB_RST_CTRL" description="" id="MSS_RTIB_RST_CTRL" offset="0x150" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset RTIB" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_RTIC_RST_CTRL" description="" id="MSS_RTIC_RST_CTRL" offset="0x154" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset RTIC" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_WDT_RST_CTRL" description="" id="MSS_WDT_RST_CTRL" offset="0x158" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset WDT" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_ESM_RST_CTRL" description="" id="MSS_ESM_RST_CTRL" offset="0x15C" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset ESM" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_DCCA_RST_CTRL" description="" id="MSS_DCCA_RST_CTRL" offset="0x160" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset DCCA" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_DCCB_RST_CTRL" description="" id="MSS_DCCB_RST_CTRL" offset="0x164" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset DCCB" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_DCCC_RST_CTRL" description="" id="MSS_DCCC_RST_CTRL" offset="0x168" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset DCCC" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_DCCD_RST_CTRL" description="" id="MSS_DCCD_RST_CTRL" offset="0x16C" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset DCCD" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_GIO_RST_CTRL" description="" id="MSS_GIO_RST_CTRL" offset="0x170" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset GIO" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIA_RST_CTRL" description="" id="MSS_SPIA_RST_CTRL" offset="0x174" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset SPIA" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_SPIB_RST_CTRL" description="" id="MSS_SPIB_RST_CTRL" offset="0x178" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset SPIB" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_RST_CTRL" description="" id="MSS_QSPI_RST_CTRL" offset="0x17C" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset QSPI" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_PWM1_RST_CTRL" description="" id="MSS_PWM1_RST_CTRL" offset="0x180" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset EPWM1" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_PWM2_RST_CTRL" description="" id="MSS_PWM2_RST_CTRL" offset="0x184" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset EPWM2" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_PWM3_RST_CTRL" description="" id="MSS_PWM3_RST_CTRL" offset="0x188" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset EPWM3" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_MCANA_RST_CTRL" description="" id="MSS_MCANA_RST_CTRL" offset="0x18C" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MCANA" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_MCANB_RST_CTRL" description="" id="MSS_MCANB_RST_CTRL" offset="0x190" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MCANB" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_I2C_RST_CTRL" description="" id="MSS_I2C_RST_CTRL" offset="0x194" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset I2C" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_SCIA_RST_CTRL" description="" id="MSS_SCIA_RST_CTRL" offset="0x198" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset SCIA" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_SCIB_RST_CTRL" description="" id="MSS_SCIB_RST_CTRL" offset="0x19C" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset SCIB" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_EDMA_RST_CTRL" description="" id="MSS_EDMA_RST_CTRL" offset="0x1A0" width="32">
    
  <bitfield begin="26" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MSS_TPTCB0" end="24" id="tptcb0_assert" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MSS_TPCCB" end="16" id="tpccb_assert" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="14" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MSS_TPTCA1" end="12" id="tptca1_assert" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MSS_TPTCA0" end="8" id="tptca0_assert" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MSS_TPCCA" end="4" id="tpcca_assert" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset EDMA" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_INFRA_RST_CTRL" description="" id="MSS_INFRA_RST_CTRL" offset="0x1A4" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MSS INFRA" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_CPSW_RST_CTRL" description="" id="MSS_CPSW_RST_CTRL" offset="0x1A8" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MSS CPSW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_GPADC_RST_CTRL" description="" id="MSS_GPADC_RST_CTRL" offset="0x1AC" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MSS GPADC" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMM_RST_CTRL" description="" id="MSS_DMM_RST_CTRL" offset="0x1B0" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of the Device/IP before configuring. Writing  '111'  will reset MSS DMMA/B" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5_COREA_GATE" description="" id="R5_COREA_GATE" offset="0x1B4" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock to CR5A related peripherals inside Cortexr5ss" end="0" id="clkgate" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="R5_COREB_GATE" description="" id="R5_COREB_GATE" offset="0x1B8" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock to CR5B related peripherals inside Cortexr5ss" end="0" id="clkgate" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_BANKA_PD_CTRL" description="" id="MSS_L2_BANKA_PD_CTRL" offset="0x1BC" width="32">
    
  <bitfield begin="10" description="SW control for power signal 'AGOODIN' for MSS_L2_BANKA" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW control for power signal 'AONIN' for MSS_L2_BANKA" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW control for power signal 'ISO' for MSS_L2_BANKA" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_BANKB_PD_CTRL" description="" id="MSS_L2_BANKB_PD_CTRL" offset="0x1C0" width="32">
    
  <bitfield begin="10" description="SW control for power signal 'AGOODIN' for MSS_L2_BANKB" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW control for power signal 'AONIN' for MSS_L2_BANKB" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW control for power signal 'ISO' for MSS_L2_BANKB" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_BANKA_PD_STATUS" description="" id="MSS_L2_BANKA_PD_STATUS" offset="0x1C4" width="32">
    
  <bitfield begin="1" description="SW status indicating the 'pgoodin' of MSS_L2_BANKA" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="SW status indicating the 'ponin' of MSS_L2_BANKA" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="MSS_L2_BANKB_PD_STATUS" description="" id="MSS_L2_BANKB_PD_STATUS" offset="0x1C8" width="32">
    
  <bitfield begin="1" description="SW status indicating the 'pgoodin' of MSS_L2_BANKB" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="SW status indicating the 'ponin' of MSS_L2_BANKB" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="HW_REG0" description="" id="HW_REG0" offset="0x1CC" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG1" description="" id="HW_REG1" offset="0x1D0" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PREVIOUS_NAME" description="" id="PREVIOUS_NAME" offset="0x1D4" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG3" description="" id="HW_REG3" offset="0x1D8" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HSM_RTIA_CLK_SRC_SEL" description="" id="HSM_RTIA_CLK_SRC_SEL" offset="0x400" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for HSM_RTIA.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSM_WDT_CLK_SRC_SEL" description="" id="HSM_WDT_CLK_SRC_SEL" offset="0x404" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for HSM_WDT.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSM_RTC_CLK_SRC_SEL" description="" id="HSM_RTC_CLK_SRC_SEL" offset="0x408" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for HSM_RTC.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSM_DMTA_CLK_SRC_SEL" description="" id="HSM_DMTA_CLK_SRC_SEL" offset="0x40C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for HSM_DMTA.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSM_DMTB_CLK_SRC_SEL" description="" id="HSM_DMTB_CLK_SRC_SEL" offset="0x410" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for HSM_DMTB.Data should be loaded as multibit.   For example: if '0x5' should be selected then '0x555' should be       configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSM_RTI_CLK_DIV_VAL" description="" id="HSM_RTI_CLK_DIV_VAL" offset="0x414" width="32">
    
  <bitfield begin="11" description="Divider value HSM RTI selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSM_WDT_CLK_DIV_VAL" description="" id="HSM_WDT_CLK_DIV_VAL" offset="0x418" width="32">
    
  <bitfield begin="11" description="Divider value HSM WDT selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSM_RTC_CLK_DIV_VAL" description="" id="HSM_RTC_CLK_DIV_VAL" offset="0x41C" width="32">
    
  <bitfield begin="11" description="Divider value HSM RTC selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSM_DMTA_CLK_DIV_VAL" description="" id="HSM_DMTA_CLK_DIV_VAL" offset="0x420" width="32">
    
  <bitfield begin="11" description="Divider value HSM DMTA selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSM_DMTB_CLK_DIV_VAL" description="" id="HSM_DMTB_CLK_DIV_VAL" offset="0x424" width="32">
    
  <bitfield begin="11" description="Divider value HSM DMTB selected clock.Data should be loaded as multibit.   For example: if divider value of '0x8' should be selected then '0x888' should be configured to the register. Refer to TPR12 clock spec for clock reference" end="0" id="clkdivr" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSM_RTI_CLK_GATE" description="" id="HSM_RTI_CLK_GATE" offset="0x428" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for HSM RTI" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HSM_WDT_CLK_GATE" description="" id="HSM_WDT_CLK_GATE" offset="0x42C" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for HSM WDT" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HSM_RTC_CLK_GATE" description="" id="HSM_RTC_CLK_GATE" offset="0x430" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for HSM RTC" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HSM_DMTA_CLK_GATE" description="" id="HSM_DMTA_CLK_GATE" offset="0x434" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for HSM DMTA" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HSM_DMTB_CLK_GATE" description="" id="HSM_DMTB_CLK_GATE" offset="0x438" width="32">
    
  <bitfield begin="2" description="writing '111'  will gate clock for HSM DMTB" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HSM_RTI_CLK_STATUS" description="" id="HSM_RTI_CLK_STATUS" offset="0x43C" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for HSM_RTI" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for HSM_RTI" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="HSM_WDT_CLK_STATUS" description="" id="HSM_WDT_CLK_STATUS" offset="0x440" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for HSM_WDT" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for HSM_WDT" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="HSM_RTC_CLK_STATUS" description="" id="HSM_RTC_CLK_STATUS" offset="0x444" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for HSM_RTC" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for HSM_RTC" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="HSM_DMTA_CLK_STATUS" description="" id="HSM_DMTA_CLK_STATUS" offset="0x448" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for HSM_DMTA" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for HSM_DMTA" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="HSM_DMTB_CLK_STATUS" description="" id="HSM_DMTB_CLK_STATUS" offset="0x44C" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for HSM_DMTB" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for HSM_DMTB" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW0" description="" id="HW_SPARE_RW0" offset="0xFD0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW1" description="" id="HW_SPARE_RW1" offset="0xFD4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW2" description="" id="HW_SPARE_RW2" offset="0xFD8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW3" description="" id="HW_SPARE_RW3" offset="0xFDC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO0" description="" id="HW_SPARE_RO0" offset="0xFE0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO1" description="" id="HW_SPARE_RO1" offset="0xFE4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO2" description="" id="HW_SPARE_RO2" offset="0xFE8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO3" description="" id="HW_SPARE_RO3" offset="0xFEC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro3" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_WPH" description="" id="HW_SPARE_WPH" offset="0xFF0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_wph" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_REC" description="" id="HW_SPARE_REC" offset="0xFF4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="31" id="hw_spare_rec31" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved for HW R&amp;D" end="30" id="hw_spare_rec30" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Reserved for HW R&amp;D" end="29" id="hw_spare_rec29" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Reserved for HW R&amp;D" end="28" id="hw_spare_rec28" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="Reserved for HW R&amp;D" end="27" id="hw_spare_rec27" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="Reserved for HW R&amp;D" end="26" id="hw_spare_rec26" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Reserved for HW R&amp;D" end="25" id="hw_spare_rec25" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Reserved for HW R&amp;D" end="24" id="hw_spare_rec24" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved for HW R&amp;D" end="23" id="hw_spare_rec23" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Reserved for HW R&amp;D" end="22" id="hw_spare_rec22" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Reserved for HW R&amp;D" end="21" id="hw_spare_rec21" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Reserved for HW R&amp;D" end="20" id="hw_spare_rec20" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Reserved for HW R&amp;D" end="19" id="hw_spare_rec19" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Reserved for HW R&amp;D" end="18" id="hw_spare_rec18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Reserved for HW R&amp;D" end="17" id="hw_spare_rec17" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Reserved for HW R&amp;D" end="16" id="hw_spare_rec16" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved for HW R&amp;D" end="15" id="hw_spare_rec15" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Reserved for HW R&amp;D" end="14" id="hw_spare_rec14" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Reserved for HW R&amp;D" end="13" id="hw_spare_rec13" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Reserved for HW R&amp;D" end="12" id="hw_spare_rec12" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Reserved for HW R&amp;D" end="11" id="hw_spare_rec11" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Reserved for HW R&amp;D" end="10" id="hw_spare_rec10" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Reserved for HW R&amp;D" end="9" id="hw_spare_rec9" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Reserved for HW R&amp;D" end="8" id="hw_spare_rec8" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved for HW R&amp;D" end="7" id="hw_spare_rec7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Reserved for HW R&amp;D" end="6" id="hw_spare_rec6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Reserved for HW R&amp;D" end="5" id="hw_spare_rec5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Reserved for HW R&amp;D" end="4" id="hw_spare_rec4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Reserved for HW R&amp;D" end="3" id="hw_spare_rec3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Reserved for HW R&amp;D" end="2" id="hw_spare_rec2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved for HW R&amp;D" end="1" id="hw_spare_rec1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rec0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK0" description="  - KICK0 component " id="LOCK0_KICK0" offset="0x1008" width="32">
    
  <bitfield begin="31" description=" - KICK0 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK1" description="  - KICK1 component " id="LOCK0_KICK1" offset="0x100C" width="32">
    
  <bitfield begin="31" description=" - KICK1 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="intr_raw_status" description=" Interrupt Raw Status/Set Register " id="intr_raw_status" offset="0x1010" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enabled_status_clear" description=" Interrupt Enabled Status/Clear register " id="intr_enabled_status_clear" offset="0x1014" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable" description=" Interrupt Enable register " id="intr_enable" offset="0x1018" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable_clear" description=" Interrupt Enable Clear register " id="intr_enable_clear" offset="0x101C" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="eoi" description=" EOI register " id="eoi" offset="0x1020" width="32">
    
  <bitfield begin="7" description="EOI vector value. Write this with interrupt distribution value in the chip." end="0" id="" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_address" description=" Fault Address register " id="fault_address" offset="0x1024" width="32">
    
  <bitfield begin="31" description="Fault Address." end="0" id="" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="fault_type_status" description=" Fault Type Status register " id="fault_type_status" offset="0x1028" width="32">
    
  <bitfield begin="6" description="Non-secure access." end="6" id="" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="fault_attr_status" description=" Fault Attribute Status register " id="fault_attr_status" offset="0x102C" width="32">
    
  <bitfield begin="31" description="XID." end="20" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Route ID." end="8" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="7" description="Privilege ID." end="0" id="" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_clear" description=" Fault Clear register " id="fault_clear" offset="0x1030" width="32">
    
  <bitfield begin="0" description="Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect." end="0" id="" rwaccess="W" width="1"></bitfield>
  </register>
</module>
