<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="MSS_QSPI" id="MSS_QSPI">
  
  
  <register acronym="PID" description="PID" id="PID" offset="0x0" width="32">
    
  <bitfield begin="31" description="The scheme of the register used. This indicates the PDR3.5 Method" end="30" id="SCHEME" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="Always read as 0" end="28" id="Reserved" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="27" description="The function of the module being used" end="16" id="FUNC" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="15" description="RTL Release Version The PDR release number of this IP" end="11" id="RTL" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="Major Release Number" end="8" id="MAJOR" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="Custom IP" end="6" id="CUSTOM" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="Minor Release Number" end="0" id="MINOR" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_Reserved1" description="Reserved" id="MSS_QSPI_Reserved1" offset="0x4" width="32">
    
  <bitfield begin="31" description="Reserved" end="0" id="Reserved_1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_Reserved2" description="Reserved" id="MSS_QSPI_Reserved2" offset="0x8" width="32">
    
  <bitfield begin="31" description="Reserved" end="0" id="Reserved_2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_Reserved3" description="Reserved" id="MSS_QSPI_Reserved3" offset="0xC" width="32">
    
  <bitfield begin="31" description="Reserved" end="0" id="Reserved_3" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="SYSCONFIG" description="SYSCONFIG" id="SYSCONFIG" offset="0x10" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="6" id="Reserved3" rwaccess="R" width="26"></bitfield>
    
  <bitfield begin="5" description="Always read as 0" end="4" id="Reserved2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="3" description="Configuration of the local target state management mode.  By definition, target can handle read/write transaction as long as it is out of IDLE state 0x0 : Force-idle mode: local target's idle state follows (acknowledges) the system's idle requests unconditionally, i.e. regardless of the IP module's internal requirements. Backup mode, for debug only 0x1 : No-idle mode: local target never enters idle state. Backup mode, for debug only 0x2 : Smart-idle mode: local target's idle state eventually follows (acknowledges) the system's idle requests, depending on the IP module's internal requirements. IP module shall not generate (IRQ- or DMA-request-related) wakeup events 0x3 : Smart-idle wakeup-capable mode: local target's idle state eventually follows (acknowledges) the system's idle requests, depending on the IP module's internal requirements. IP module may generate (IRQ- or DMA-request-related) wakeup events when in idle state. Mode is only relevant if the appropriate IP module &quot;swakeup&quot; output(s) is (are) implemented" end="2" id="IDLEMODE" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="1" description="Always read as 0" end="0" id="Reserved1" rwaccess="R" width="2"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_Reserved4" description="Reserved" id="MSS_QSPI_Reserved4" offset="0x14" width="32">
    
  <bitfield begin="31" description="Reserved" end="0" id="Reserved_4" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_Reserved5" description="Reserved" id="MSS_QSPI_Reserved5" offset="0x18" width="32">
    
  <bitfield begin="31" description="Reserved" end="0" id="Reserved_5" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_Reserved6" description="Reserved" id="MSS_QSPI_Reserved6" offset="0x1C" width="32">
    
  <bitfield begin="31" description="Reserved" end="0" id="Reserved_6" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="INTR_STATUS_RAW_SET" description="INTR Interrupt Status Raw/Set Register" id="INTR_STATUS_RAW_SET" offset="0x20" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="2" id="Reserved" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Word Interrupt Status  Read indicates raw status 0 = inactive 1 = active Writing 1 will set status Writing 0 has no effect" end="1" id="WIRQ_RAW" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Frame Interrupt Status Read indicates raw status 0 = inactive 1 = active Writing 1 will set status Writing 0 has no effect" end="0" id="FIRQ_RAW" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="INTR_STATUS_ENABLED_CLEAR" description="INTR Interrupt Status Enabled/Clear Register" id="INTR_STATUS_ENABLED_CLEAR" offset="0x24" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="2" id="Reserved" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Word  Interrupt Enabled Status Read indicates enabled status 0 = inactive 1 = active Writing 1 will clear interrupt Writing 0 has no effect" end="1" id="WIRQ_ENA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Frame Interrupt Enabled Status Read indicates enabled status 0 = inactive 1 = active Writing 1 will clear interrupt Writing 0 has no effect" end="0" id="FIRQ_ENA" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="INTR_ENABLE_SET" description="INTR Interrupt Enable/Set Register" id="INTR_ENABLE_SET" offset="0x28" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="2" id="Reserved" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Word Interrupt  Enable/Set Read indicates interrupt enable 0 = disabled 1 = enabled Writing 1 will set interrupt enabled Writing 0 has no effect" end="1" id="WIRQ_ENA_SET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Frame Interrupt Enable/Set Read indicates interrupt enable 0 = disabled 1 = enabled Writing 1 will set interrupt enabled Writing 0 has no effect" end="0" id="FIRQ_ENA_SET" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="INTR_ENABLE_CLEAR" description="INTR Interrupt Enable/Clear Register" id="INTR_ENABLE_CLEAR" offset="0x2C" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="2" id="Reserved" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Word Interrupt  Enable/Clear Read indicates interrupt enable 0 = disabled 1 = enabled Writing 1 will clear interrupt enabled Writing 0 has no effect" end="1" id="WIRQ_ENA_CLR" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Frame Interrupt  Enable/Clear Read indicates interrupt enable 0 = disabled 1 = enabled Writing 1 will clear interrupt enabled Writing 0 has no effect" end="0" id="FIRQ_ENA_CLR" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="INTC_EOI" description="EOI Register" id="INTC_EOI" offset="0x30" width="32">
    
  <bitfield begin="31" description="Number associated with the ipgenericirq for intr output.  There are 1 interrupt outputs Write 0x0 : Write to intr IP Generic Any other write value is ignored." end="0" id="EOI_VECTOR" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_Reserved7" description="Reserved" id="MSS_QSPI_Reserved7" offset="0x34" width="32">
    
  <bitfield begin="31" description="Reserved" end="0" id="Reserved_7" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_Reserved8" description="Reserved" id="MSS_QSPI_Reserved8" offset="0x38" width="32">
    
  <bitfield begin="31" description="Reserved" end="0" id="Reserved_8" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_QSPI_Reserved9" description="Reserved" id="MSS_QSPI_Reserved9" offset="0x3C" width="32">
    
  <bitfield begin="31" description="Reserved" end="0" id="Reserved_9" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="SPI_CLOCK_CNTRL" description="SPI Clock Control Register (SPICC)" id="SPI_CLOCK_CNTRL" offset="0x40" width="32">
    
  <bitfield begin="31" description="Clock Enable.  0- Data clock is turned off 1- Data clock is enabled" end="31" id="CLKEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Always read as 0" end="16" id="Reserved" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="15" description="Serial data clock divide by ratio" end="0" id="DCLK_DIV" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="SPI_DC" description="SPI Data Control Register (SPIDC)" id="SPI_DC" offset="0x44" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="29" id="Reserved4" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="28" description="Data delay for chip select 3 00-  Data is output on the same cycle as the CS_N goes active 01-  Data is output 1 DCLK cycle after the CS_N goes active  10-  Data is output 2 DCLK cycles after the CS_N goes active 11-  Data is output 3 DCLK cycles after the CS_N goes active" end="27" id="DD3" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="26" description="Clock phase for chip select 3  If CKP0 = 0   0- Data shifted out on falling edge; input on rising edge   1- Data shifted out on rising edge; input on falling edge If CKP0 = 1   1- Data shifted out on falling edge; input on rising edge   0- Data shifted out on rising edge; input on falling edge" end="26" id="CKPH3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Chip select polarity for chip select 3 0- Active low 1- Active high" end="25" id="CSP3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Clock polarity for chip select 3 0- When data is not being transferred, SCK = 0 1- When data is not being transferred, SCK = 1" end="24" id="CKP3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Always read as 0" end="21" id="Reserved3" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="20" description="Data delay for chip select 2 00-  Data is output on the same cycle as the CS_N goes active 01-  Data is output 1 DCLK cycle after the CS_N goes active  10-  Data is output 2 DCLK cycles after the CS_N goes active 11-  Data is output 3 DCLK cycles after the CS_N goes active" end="19" id="DD2" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="18" description="Clock phase for chip select 2.   If CKP0 = 0   0- Data shifted out on falling edge; input on rising edge   1- Data shifted out on rising edge; input on falling edge If CKP0 = 1   1- Data shifted out on falling edge; input on rising edge   0- Data shifted out on rising edge; input on falling edge" end="18" id="CKPH2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Chip select polarity for chip select 2 0- Active low 1- Active high" end="17" id="CSP2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Clock polarity for chip select 2 0- When data is not being transferred, SCK = 0 1- When data is not being transferred, SCK = 1" end="16" id="CKP2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Always read as 0" end="13" id="Reserved2" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="12" description="Data delay for chip select 1 00-  Data is output on the same cycle as the CS_N goes active 01-  Data is output 1 DCLK cycle after the CS_N goes active  10-  Data is output 2 DCLK cycles after the CS_N goes active 11-  Data is output 3 DCLK cycles after the CS_N goes active" end="11" id="DD1" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="10" description="Clock phase for chip select 1.   If CKP0 = 0   0- Data shifted out on falling edge; input on rising edge   1- Data shifted out on rising edge; input on falling edge If CKP0 = 1   1- Data shifted out on falling edge; input on rising edge   0- Data shifted out on rising edge; input on falling edge" end="10" id="CKPH1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Chip select polarity for chip select 1 0- Active low 1- Active high" end="9" id="CSP1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Clock polarity for chip select 1 0- When data is not being transferred, SCK = 0 1- When data is not being transferred, SCK = 1" end="8" id="CKP1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Always read as 0" end="5" id="Reserved1" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="4" description="Data delay for chip select 0 00-  Data is output on the same cycle as the CS_N goes active 01-  Data is output 1 DCLK cycle after the CS_N goes active  10-  Data is output 2 DCLK cycles after the CS_N goes active 11-  Data is output 3 DCLK cycles after the CS_N goes active" end="3" id="DD0" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="Clock phase for chip select 0.   If CKP0 = 0   0- Data shifted out on falling edge; input on rising edge   1- Data shifted out on rising edge; input on falling edge If CKP0 = 1   1- Data shifted out on falling edge; input on rising edge   0- Data shifted out on rising edge; input on falling edge" end="2" id="CKPH0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Chip select polarity for chip select 0 0- Active low 1- Active high" end="1" id="CSP0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Clock polarity for chip select 0 0- When data is not being transferred, SCK = 0 1- When data is not being transferred, SCK = 1" end="0" id="CKP0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="SPI_CMD" description="SPI Command Register (SPICR)" id="SPI_CMD" offset="0x48" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="30" id="Reserved3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="Device select.  Sets the active chip select for the transfer 00-  Chip Select 0 active 01-  Chip Select 1 active 10-  Chip Select 2 active 11-  Chip Select 3 active" end="28" id="CSNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="27" description="Always read as 0" end="26" id="Reserved2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="25" description="Word length.  Sets the size of the individual transfers from 1 – 128 bits 0- 1 bit 1- 2 bits … 127 – 128 bits" end="19" id="WLEN" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="18" description="Transfer command 000-  Reserved 001-  4 pin Read Single  010-  4 pin Write  Single 011-  4 pin Read Dual 100 – Reserved 101 – 3 pin Read Single 110 – 3 pin Write Single  111 – 6 pin Read Quad" end="16" id="CMD" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="Frame count interrupt enable" end="15" id="FIRQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Word count interrupt enable" end="14" id="WIRQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Always read as 0" end="12" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="11" description="Frame Length 0- 1 word 1- 2 words … 4095 – 4096 words" end="0" id="FLEN" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="SPI_STATUS" description="SPI Status Register (SPISR)" id="SPI_STATUS" offset="0x4C" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="28" id="Reserved2" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="27" description="Word count.  This field will reflect the 1-4096 words transferred" end="16" id="WDCNT" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="15" description="Always read as 0" end="3" id="Reserved1" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="2" description="Frame complete.  This bit is set after all of the requested words have been transmitted. 0- Transfer is not complete 1- Transfer is complete This bit is reset when the SPI Status Register is read" end="2" id="FC" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Word complete.  This bit is set after each word transfer is completed. 0- Word transfer is not complete 1- Word transfer is complete This bit is reset when the SPI Status Register is read" end="1" id="WC" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Busy bit.  Active transfer in progress.  This bit is only set during an active word transfer.  Between words, the bit will clear to signal that it is ok to read/write the data registers. 0- Idle 1- Busy" end="0" id="BUSY" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="SPI_DATA" description="SPI Data Register (SPIDR)" id="SPI_DATA" offset="0x50" width="32">
    
  <bitfield begin="31" description="Data register for read and write operations" end="0" id="DATA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="SPI_SETUP0" description="Memory Mapped SPI Setup0 Register" id="SPI_SETUP0" offset="0x54" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="29" id="Reserved2" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="28" description="Number of dummy bits to use if NUM_D_BYTES = 0" end="24" id="NUM_D_BITS" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="23" description="Write Command" end="16" id="WCMD" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Always read as 0" end="14" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="Determines if the read command is a single, dual or quad read mode command 00 – Normal read (all data input on spi_din) 01 – Dual read (odd bytes input on spi_din; even on spi_dout) 10 – Normal read (all data input on spi_din) 11 – Quad read (uses spi_qdin0/1)" end="12" id="READ_TYPE" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="11" description="Number of dummy bytes to be used for fast read.  0 = use the value in NUM_D_BITS 1 = use 8 bits; 2 = use 16 bits; 3 = use 24 bits" end="10" id="NUM_D_BYTES" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="9" description="Number of address bytes to be sent. 0 = 1 byte; 1 = 2 bytes; 2 = 3 bytes; 3 = 4 bytes" end="8" id="NUM_A_BYTES" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="7" description="Read Command" end="0" id="RCMD" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="SPI_SETUP1" description="Memory Mapped SPI Setup1 Register" id="SPI_SETUP1" offset="0x58" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="29" id="Reserved2" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="28" description="Number of dummy bits to use if NUM_D_BYTES = 0" end="24" id="NUM_D_BITS" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="23" description="Write Command" end="16" id="WCMD" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Always read as 0" end="14" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="Determines if the read command is a single, dual or quad read mode command 00 – Normal read (all data input on spi_din) 01 – Dual read (odd bytes input on spi_din; even on spi_dout) 10 – Normal read (all data input on spi_din) 11 – Quad read (uses spi_qdin0/1)" end="12" id="READ_TYPE" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="11" description="Number of dummy bytes to be used for fast read.  0 = use the value in NUM_D_BITS 1 = use 8 bits; 2 = use 16 bits; 3 = use 24 bits" end="10" id="NUM_D_BYTES" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="9" description="Number of address bytes to be sent. 0 = 1 byte; 1 = 2 bytes; 2 = 3 bytes; 3 = 4 bytes" end="8" id="NUM_A_BYTES" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="7" description="Read Command" end="0" id="RCMD" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="SPI_SETUP2" description="Memory Mapped SPI Setup2 Register" id="SPI_SETUP2" offset="0x5C" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="29" id="Reserved2" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="28" description="Number of dummy bits to use if NUM_D_BYTES = 0" end="24" id="NUM_D_BITS" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="23" description="Write Command" end="16" id="WCMD" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Always read as 0" end="14" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="Determines if the read command is a single, dual or quad read mode command 00 – Normal read (all data input on spi_din) 01 – Dual read (odd bytes input on spi_din; even on spi_dout) 10 – Normal read (all data input on spi_din) 11 – Quad read (uses spi_qdin0/1)" end="12" id="READ_TYPE" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="11" description="Number of dummy bytes to be used for fast read.  0 = use the value in NUM_D_BITS 1 = use 8 bits; 2 = use 16 bits; 3 = use 24 bits" end="10" id="NUM_D_BYTES" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="9" description="Number of address bytes to be sent. 0 = 1 byte; 1 = 2 bytes; 2 = 3 bytes; 3 = 4 bytes" end="8" id="NUM_A_BYTES" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="7" description="Read Command" end="0" id="RCMD" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="SPI_SETUP3" description="Memory Mapped SPI Setup3 Register" id="SPI_SETUP3" offset="0x60" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="29" id="Reserved2" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="28" description="Number of dummy bits to use if NUM_D_BYTES = 0" end="24" id="NUM_D_BITS" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="23" description="Write Command" end="16" id="WCMD" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Always read as 0" end="14" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="Determines if the read command is a single, dual or quad read mode command 00 – Normal read (all data input on spi_din) 01 – Dual read (odd bytes input on spi_din; even on spi_dout) 10 – Normal read (all data input on spi_din) 11 – Quad read (uses spi_qdin0/1)" end="12" id="READ_TYPE" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="11" description="Number of dummy bytes to be used for fast read.  0 = use the value in NUM_D_BITS 1 = use 8 bits; 2 = use 16 bits; 3 = use 24 bits" end="10" id="NUM_D_BYTES" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="9" description="Number of address bytes to be sent. 0 = 1 byte; 1 = 2 bytes; 2 = 3 bytes; 3 = 4 bytes" end="8" id="NUM_A_BYTES" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="7" description="Read Command" end="0" id="RCMD" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="SPI_SWITCH" description="Memory Mapped SPI Switch Register" id="SPI_SWITCH" offset="0x64" width="32">
    
  <bitfield begin="31" description="Always read as 0" end="2" id="Reserved" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Memory Mapped mode interrupt enable. 0 – Interrupts are disabled during memory mapped operations 1 – Word Count interrupt is enabled for memory mapped operations" end="1" id="MM_INT_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="MMPT select.  If 0 (default) config port has is selected to control config of core SPI module.  If 1, Memory Mapped Protocol Translator is selected to control config port of core SPI module." end="0" id="MMPT_S" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="SPI_DATA1" description="SPI Data Register (SPIDR1)" id="SPI_DATA1" offset="0x68" width="32">
    
  <bitfield begin="31" description="Data register for read and write operations" end="0" id="DATA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="SPI_DATA2" description="SPI Data Register (SPIDR2)" id="SPI_DATA2" offset="0x6C" width="32">
    
  <bitfield begin="31" description="Data register for read and write operations" end="0" id="DATA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="SPI_DATA3" description="SPI Data Register (SPIDR3)" id="SPI_DATA3" offset="0x70" width="32">
    
  <bitfield begin="31" description="Data register for read and write operations" end="0" id="DATA" rwaccess="RW" width="32"></bitfield>
  </register>
</module>
