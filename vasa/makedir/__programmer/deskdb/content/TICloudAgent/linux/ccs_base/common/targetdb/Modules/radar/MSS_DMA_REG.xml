<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="MSS_DMA_REG" id="MSS_DMA_REG">
  
  
  <register acronym="GCTRL" description="Sets Power-down mode, debug mode..." id="GCTRL" offset="0x0" width="32">
    
  <bitfield begin="31" description="Reserved" end="17" id="Reserved4" rwaccess="RW" width="15"></bitfield>
    
  <bitfield begin="16" description="DMA Enable bit" end="16" id="DMA_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="15" id="Reserved3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="BUS BUSY This bit indicates status of DMA external AHB bus status. 0 DMA’s external bus is not busy in data transfers. 1 DMA’s external bus is busy in data transfers" end="14" id="BUS_BUSY" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="13" description="Reserved" end="10" id="Reserved2" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="9" description="DEBUG MODE 11 immediate stop at an DMA arbitration boundary and continue after suspend 10 finish current frame transfer 01 finish current block transfer 00 ignore suspend" end="8" id="DEBUG_MODE" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="1" id="Reserved1" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="0" description="DMA Software Reset Writing a 1 to this bit resets the DMA state machine and all control registers. Control packets are not reset when DMA software reset is active. Writing a zero disable SW reset." end="0" id="DMARES" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PEND" description="Channel pending register" id="PEND" offset="0x4" width="32">
    
  <bitfield begin="31" description="Channel Pending Register Writing has no effect. Reading from PEND gives the channel pending information no matter if the channel was initiated by SW or HW. Once set, it remains set even if the corresponding channel is disabled via HWCHENA or SWCHENA. The pending bit is automatically cleared for the following conditions: 1)At the end of a frame or a block transfer depending on how the channel is triggered as programmed in the TTYPE bit field of Section 1.6.3.4, &quot;CHANNEL CONTROL Register (CHCTRL)&quot; . 2)The control packet is modified after the pending bit is set. 3)An AHB bus error occurs. 1 the associated channel is pending and is waiting for service. 0 the associated channel is inactive." end="0" id="PEND" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="FBREG" description="Fall back register for EMC" id="FBREG" offset="0x8" width="32">
    
  <bitfield begin="31" description="Reserved" end="12" id="Reserved2" rwaccess="R" width="20"></bitfield>
    
  <bitfield begin="11" description="FSM_FB: FSM Fallback feature Used to switch off RTL clock gating for all FSM logics used for saving power. “1010” = Disable RTL clock gating in RTL. “0101” = Enable RTL clock gating in RTL. others = no effect will be in same state as before" end="8" id="FSM_FB" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="4" id="Reserved1" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="3" description="VBUSP_FB: VBUSP Fallback feature Used to switch off RTL clock gating for all VBUSP logics used for saving power. “1010” = Disable RTL clock gating in RTL. “0101” = Enable RTL clock gating in RTL. others = no effect will be in same state as before" end="0" id="VBUSP_FB" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="DMASTAT" description="Channel active information" id="DMASTAT" offset="0xC" width="32">
    
  <bitfield begin="31" description="0STCH: Status of DMA channels 1 channel active (means channel is currently in DMA’s execution queue). 0 channel inactive. Since the DMA has two Ports only two channels can be active at a time. Writing has no effect. Note: The status of a channel currently in DMA’s execution queue remains active even if emulation mode is entered or DMA is disabled via DMA_EN bit" end="0" id="STCH" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved1" id="MSS_DMA_Reserved1" offset="0x10" width="32"></register>
  
  
  <register acronym="HWCHENAS" description="Enables a channel for HW trigger" id="HWCHENAS" offset="0x14" width="32">
    
  <bitfield begin="31" description="HWCHENA: HW Channel Enable Bit Writing a one to a bit enables the according channel for HW triggering. Writing a zero has no effect. An active HW DMA request can not initiate DMA transfer unless the associated HW enable bit is set. The associated HW enable bit is cleared automatically for the following conditions: 1)At the end of a block transfer if autoinitiation bit AIM in Section 1.6.3.4, &quot;CHANNEL CONTROL Register (CHCTRL)&quot; is not active. 2)If an AHB bus error is detected for an active channel as indicated by HRESP signal. Reading from HWCHENAS gives the status (enabled/disabled) of channels 0 through 31. 1 the associated channel is enabled for HW triggering. 0 the associated channel is disabled for HW triggering." end="0" id="HWCHENA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved2" id="MSS_DMA_Reserved2" offset="0x18" width="32"></register>
  
  
  <register acronym="HWCHENAR" description="Disables a channel for HW trigger" id="HWCHENAR" offset="0x1C" width="32">
    
  <bitfield begin="31" description="HW Channel Disable Bit. Writing a one to a bit disables the according channel for HW triggering. Writing a zero has no effect. Reading from CHENAR gives the status (enabled/disabled) of channels 0 through 31. 1 the associated channel is enabled for HW triggering. 0 the associated channel is disabled for HW triggering. Note: All Set and Reset registers throughout DMA controller such as HWCHENAS and HWCHENAR are two logical locations mapped to one physical register." end="0" id="HWCHDIS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved3" id="MSS_DMA_Reserved3" offset="0x20" width="32"></register>
  
  
  <register acronym="SWCHENAS" description="Activate a SW request" id="SWCHENAS" offset="0x24" width="32">
    
  <bitfield begin="31" description="SWCHENA: SW Channel Enable Bit. Writing a one to a bit trigger a SW request on the associated channel to start DMA transaction. The associated bit is automatically cleared by the following conditions. 1)The associated bit is cleared after one frame transfer if the TTYPE bit in Section 1.6.3.4, &quot;CHANNEL CONTROL Register (CHCTRL)&quot; is programmed for frame transfer. 2)The associated bit is cleared after one block transfer if the corresponding TTYPE bit is programmed for block transfer and the autoinitiation bit is not enabled. 3)The control packet is modified after the pending bit is set. 4)The associated bit is cleared after one block transfer when TTYPE bit is programmed for blocks transfer and if the corresponding bit in HW Channel Enable Register (HWCHENAS) is enabled. When a channel is enabled for both HW and SW, the state machine will initiate transfers based on the SW first. After one block transfer is complete, the associated bit in the SWCHENA register is then cleared. The same channel is serviced again by a HW DMA request. 5)The associated bit is cleared if an AHB bus error is detected for an active channel as indicated by HRESP signal. Reading from SWCHENAS gives the status (enabled/disabled) of channels 0 through 31 1 the associated channel was triggered by SW request. 0 the associated channel was not triggered by SW request" end="0" id="SWCHENA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved4" id="MSS_DMA_Reserved4" offset="0x28" width="32"></register>
  
  
  <register acronym="SWCHENAR" description="Disables a SW request" id="SWCHENAR" offset="0x2C" width="32">
    
  <bitfield begin="31" description="SWCHDIS: SW Channel Disable Bit Writing a one to a bit disables the according channel from SW trigger. Writing a zero has no effect. Reading from SWCHENAR gives the status (enabled/disabled) of channels 0 through 31. 1 the associated channel was triggered by SW. 0 the associated channel was not triggered by SW." end="0" id="SWCHDIS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved5" id="MSS_DMA_Reserved5" offset="0x30" width="32"></register>
  
  
  <register acronym="CHPRIOS" description="Enables a channel" id="CHPRIOS" offset="0x34" width="32">
    
  <bitfield begin="31" description="CPH: Channel Priority Set Bit. Writing a one to a bit assigns the according channel to the high priority queue. Writing a zero has no effect. Reading from CHPRIOS gives the status (high priority 1 / low priority 0) of channels 0 through 31. 1 the associated channel is assigned to high priority queue. 0 the associated channel is assigned to low priority queue." end="0" id="CPH" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved6" id="MSS_DMA_Reserved6" offset="0x38" width="32"></register>
  
  
  <register acronym="CHPRIOR" description="Disables a channel" id="CHPRIOR" offset="0x3C" width="32">
    
  <bitfield begin="31" description="CPL: Channel Priority Reset Bit Writing a one to a bit assigns the according channel to the low priority queue. Writing a zero has no effect. Reading from CHPRIOR gives the status (high priority 1 / low priority 0) of channels 0 through 31. 1 the associated channel is assigned to high priority queue. 0 the associated channel is assigned to low priority queue." end="0" id="CPL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved7" id="MSS_DMA_Reserved7" offset="0x40" width="32"></register>
  
  
  <register acronym="GCHIENAS" description="Enables the specific channel interrupts" id="GCHIENAS" offset="0x44" width="32">
    
  <bitfield begin="31" description="GCHIE: Global Channel Interrupt Enable Bit. Writing a one to a bit enables the according channel interrupt. Writing a zero has no effect. Reading from GCHIENAS gives the status (enabled/disabled) of channels 0 through 31. 1 the associated channel is enabled for interrupt. 0 the associated channel is disabled for interrupt." end="0" id="GCHIE" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved8" id="MSS_DMA_Reserved8" offset="0x48" width="32"></register>
  
  
  <register acronym="GCHIENAR" description="Disables the specific channel interrupts" id="GCHIENAR" offset="0x4C" width="32">
    
  <bitfield begin="31" description="GCHID: Global Channel Interrupt Disable Bit Writing a one to a bit disables the according channel interrupt. Writing a zero has no effect. Reading from GCHIENAR gives the status (enabled/disabled) of channels 0 through 31. 1 the associated channel is enabled for interrupt. 0 the associated channel is disabled for interrupt" end="0" id="GCHID" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved9" id="MSS_DMA_Reserved9" offset="0x50" width="32"></register>
  
  
  <register acronym="DREQASI0" description="DMA channel to request line assignment" id="DREQASI0" offset="0x54" width="32">
    
  <bitfield begin="31" description="Reserved" end="30" id="Reserved4" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="CH0ASI: Channel 0 Assignment Bits This bit field chooses the DMA request assignment for channel 0. Writing 0 means DMA request line 0 coming in to the DMA will trigger channel 0. Writing 3F means DMA request line 63 will trigger channel 0." end="24" id="CH0ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="22" id="Reserved3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="21" description="CH1ASI: Channel 1 Assignment Bits This bit field chooses the DMA request assignment for channel 1." end="16" id="CH1ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="14" id="Reserved2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="CH2ASI: Channel 2 Assignment Bits This bit field chooses the DMA request assignment for channel 2." end="8" id="CH2ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="6" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="CH3ASI: Channel 3 Assignment Bits.  This bit field chooses the DMA request assignment for channel 3" end="0" id="CH3ASI_5_0" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DREQASI1" description="DMA channel to request line assignment" id="DREQASI1" offset="0x58" width="32">
    
  <bitfield begin="31" description="Reserved" end="30" id="Reserved4" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="CH4ASI: Channel 4 Assignment Bits This bit field chooses the DMA request assignment for channel 4. ." end="24" id="CH4ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="22" id="Reserved3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="21" description="CH5ASI: Channel 5 Assignment Bits This bit field chooses the DMA request assignment for channel 5" end="16" id="CH5ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="14" id="Reserved2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="CH6ASI: Channel 6 Assignment Bits This bit field chooses the DMA request assignment for channel 6" end="8" id="CH6ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="6" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="CH7ASI: Channel 7 Assignment Bits.  This bit field chooses the DMA request assignment for channel 7" end="0" id="CH7ASI_5_0" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DREQASI2" description="DMA channel to request line assignment" id="DREQASI2" offset="0x5C" width="32">
    
  <bitfield begin="31" description="Reserved" end="30" id="Reserved4" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="CH8ASI: Channel 8 Assignment Bits This bit field chooses the DMA request assignment for channel 8" end="24" id="CH8ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="22" id="Reserved3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="21" description="CH9ASI: Channel 9 Assignment Bits This bit field chooses the DMA request assignment for channel 9" end="16" id="CH9ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="14" id="Reserved2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="CH10ASI: Channel 10 Assignment Bits This bit field chooses the DMA request assignment for channel 10" end="8" id="CH10ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="6" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="CH11ASI: Channel 11 Assignment Bits.  This bit field chooses the DMA request assignment for channel 11" end="0" id="CH11ASI_5_0" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DREQASI3" description="DMA channel to request line assignment" id="DREQASI3" offset="0x60" width="32">
    
  <bitfield begin="31" description="Reserved" end="30" id="Reserved4" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="CH12ASI: Channel 12 Assignment Bits This bit field chooses the DMA request assignment for channel 12" end="24" id="CH12ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="22" id="Reserved3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="21" description="CH13ASI: Channel 13 Assignment Bits This bit field chooses the DMA request assignment for channel 13" end="16" id="CH13ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="14" id="Reserved2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="CH14ASI: Channel 14 Assignment Bits This bit field chooses the DMA request assignment for channel 14" end="8" id="CH14ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="6" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="CH15ASI: Channel 15 Assignment Bits.  This bit field chooses the DMA request assignment for channel 15" end="0" id="CH15ASI_5_0" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DREQASI4" description="DMA channel to request line assignment" id="DREQASI4" offset="0x64" width="32">
    
  <bitfield begin="31" description="Reserved" end="30" id="Reserved4" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="CH16ASI: Channel 16 Assignment Bits This bit field chooses the DMA request assignment for channel 16" end="24" id="CH16ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="22" id="Reserved3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="21" description="CH17ASI: Channel 17 Assignment Bits This bit field chooses the DMA request assignment for channel 17" end="16" id="CH17ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="14" id="Reserved2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="CH18ASI: Channel 18 Assignment Bits This bit field chooses the DMA request assignment for channel 18" end="8" id="CH18ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="6" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="CH18ASI: Channel 19 Assignment Bits.  This bit field chooses the DMA request assignment for channel 19" end="0" id="CH19ASI_5_0" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DREQASI5" description="DMA channel to request line assignment" id="DREQASI5" offset="0x68" width="32">
    
  <bitfield begin="31" description="Reserved" end="30" id="Reserved4" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="CH20ASI: Channel 20 Assignment Bits This bit field chooses the DMA request assignment for channel 20" end="24" id="CH20ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="22" id="Reserved3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="21" description="CH21ASI: Channel 21 Assignment Bits This bit field chooses the DMA request assignment for channel 21" end="16" id="CH21ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="14" id="Reserved2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="CH22ASI: Channel 22 Assignment Bits This bit field chooses the DMA request assignment for channel 22" end="8" id="CH22ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="6" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="CH23ASI: Channel 23 Assignment Bits.  This bit field chooses the DMA request assignment for channel 23" end="0" id="CH23ASI_5_0" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DREQASI6" description="DMA channel to request line assignment" id="DREQASI6" offset="0x6C" width="32">
    
  <bitfield begin="31" description="Reserved" end="30" id="Reserved4" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="CH24ASI: Channel 24 Assignment Bits This bit field chooses the DMA request assignment for channel 24" end="24" id="CH24ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="22" id="Reserved3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="21" description="CH25SI: Channel 25 Assignment Bits This bit field chooses the DMA request assignment for channel 25" end="16" id="CH25ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="14" id="Reserved2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="CH26ASI: Channel 26 Assignment Bits This bit field chooses the DMA request assignment for channel 26" end="8" id="CH26ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="6" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="CH27ASI: Channel 27 Assignment Bits.  This bit field chooses the DMA request assignment for channel 27" end="0" id="CH27ASI_5_0" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DREQASI7" description="DMA channel to request line assignment" id="DREQASI7" offset="0x70" width="32">
    
  <bitfield begin="31" description="Reserved" end="30" id="Reserved4" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="CH28ASI: Channel 28 Assignment Bits This bit field chooses the DMA request assignment for channel 28" end="24" id="CH28ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="22" id="Reserved3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="21" description="CH29SI: Channel 29 Assignment Bits This bit field chooses the DMA request assignment for channel 29" end="16" id="CH29ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="14" id="Reserved2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description="CH30ASI: Channel 30 Assignment Bits This bit field chooses the DMA request assignment for channel 30" end="8" id="CH30ASI_5_0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="6" id="Reserved1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="CH31ASI: Channel 31 Assignment Bits.  This bit field chooses the DMA request assignment for channel 31" end="0" id="CH31ASI_5_0" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved10" id="MSS_DMA_Reserved10" offset="0x74" width="32"></register>
  
  
  <register acronym="MSS_DMA_Reserved11" id="MSS_DMA_Reserved11" offset="0x78" width="32"></register>
  
  
  <register acronym="MSS_DMA_Reserved12" id="MSS_DMA_Reserved12" offset="0x7C" width="32"></register>
  
  
  <register acronym="MSS_DMA_Reserved13" id="MSS_DMA_Reserved13" offset="0x80" width="32"></register>
  
  
  <register acronym="MSS_DMA_Reserved14" id="MSS_DMA_Reserved14" offset="0x84" width="32"></register>
  
  
  <register acronym="MSS_DMA_Reserved15" id="MSS_DMA_Reserved15" offset="0x88" width="32"></register>
  
  
  <register acronym="MSS_DMA_Reserved16" id="MSS_DMA_Reserved16" offset="0x8C" width="32"></register>
  
  
  <register acronym="MSS_DMA_Reserved17" id="MSS_DMA_Reserved17" offset="0x90" width="32"></register>
  
  
  <register acronym="PAR0" description="DMA channel to port assignment" id="PAR0" offset="0x94" width="32">
    
  <bitfield begin="31" description="Reserved" end="31" id="Reserved8" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="CH0PA These bit fields determine which port channel 0 is assigned. 1xx Port B 011 Port A2 only 010 Port A1 only 001 Port A1/2 combined, A2 read / A1 write 000 Port A1/2 combined, A1 read / A2 write" end="28" id="CH0PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="27" description="Reserved" end="27" id="Reserved7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description="CH1PA These bit fields determine which port channel 1 is assigned" end="24" id="CH1PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="23" id="Reserved6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="22" description="CH2PA These bit fields determine which port channel 2 is assigned" end="20" id="CH2PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="19" description="Reserved" end="19" id="Reserved5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="CH3PA These bit fields determine which port channel 3 is assigned" end="16" id="CH3PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="15" id="Reserved4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="CH4PA These bit fields determine which port channel 4 is assigned" end="12" id="CH4PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="11" description="Reserved" end="11" id="Reserved3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="CH5PA These bit fields determine which port channel 5 is assigned" end="8" id="CH5PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="7" id="Reserved2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="CH6PA These bit fields determine which port channel 6 is assigned" end="4" id="CH6PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="3" description="Reserved" end="3" id="Reserved1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="CH7PA These bit fields determine which port channel 7 is assigned" end="0" id="CH7PA_2_0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="PAR1" description="DMA channel to port assignment" id="PAR1" offset="0x98" width="32">
    
  <bitfield begin="31" description="Reserved" end="31" id="Reserved8" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="CH8PA These bit fields determine which port channel 8 is assigned. 1xx Port B 011 Port A2 only 010 Port A1 only 001 Port A1/2 combined, A2 read / A1 write 000 Port A1/2 combined, A1 read / A2 write" end="28" id="CH8PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="27" description="Reserved" end="27" id="Reserved7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description="CH9PA These bit fields determine which port channel 9 is assigned" end="24" id="CH9PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="23" id="Reserved6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="22" description="CH10PA These bit fields determine which port channel 10 is assigned" end="20" id="CH10PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="19" description="Reserved" end="19" id="Reserved5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="CH11PA These bit fields determine which port channel 11 is assigned" end="16" id="CH11PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="15" id="Reserved4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="CH12PA These bit fields determine which port channel 12 is assigned" end="12" id="CH12PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="11" description="Reserved" end="11" id="Reserved3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="CH13PA These bit fields determine which port channel 13 is assigned" end="8" id="CH13PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="7" id="Reserved2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="CH14PA These bit fields determine which port channel 14 is assigned" end="4" id="CH14PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="3" description="Reserved" end="3" id="Reserved1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="CH15PA These bit fields determine which port channel 15 is assigned" end="0" id="CH15PA_2_0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="PAR2" description="DMA channel to port assignment" id="PAR2" offset="0x9C" width="32">
    
  <bitfield begin="31" description="Reserved" end="31" id="Reserved8" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="CH16PA These bit fields determine which port channel 16 is assigned. 1xx Port B 011 Port A2 only 010 Port A1 only 001 Port A1/2 combined, A2 read / A1 write 000 Port A1/2 combined, A1 read / A2 write" end="28" id="CH16PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="27" description="Reserved" end="27" id="Reserved7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description="CH17PA These bit fields determine which port channel 17 is assigned" end="24" id="CH17PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="23" id="Reserved6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="22" description="CH18PA These bit fields determine which port channel 18 is assigned" end="20" id="CH18PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="19" description="Reserved" end="19" id="Reserved5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="CH19PA These bit fields determine which port channel 19 is assigned" end="16" id="CH19PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="15" id="Reserved4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="CH20PA These bit fields determine which port channel 20 is assigned" end="12" id="CH20PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="11" description="Reserved" end="11" id="Reserved3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="CH21PA These bit fields determine which port channel 21 is assigned" end="8" id="CH21PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="7" id="Reserved2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="CH22PA These bit fields determine which port channel 22 is assigned" end="4" id="CH22PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="3" description="Reserved" end="3" id="Reserved1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="CH23PA These bit fields determine which port channel 23 is assigned" end="0" id="CH23PA_2_0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="PAR3" description="DMA channel to port assignment" id="PAR3" offset="0xA0" width="32">
    
  <bitfield begin="31" description="Reserved" end="31" id="Reserved8" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="CH24PA These bit fields determine which port channel 24 is assigned. 1xx Port B 011 Port A2 only 010 Port A1 only 001 Port A1/2 combined, A2 read / A1 write 000 Port A1/2 combined, A1 read / A2 write" end="28" id="CH24PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="27" description="Reserved" end="27" id="Reserved7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description="CH25PA These bit fields determine which port channel 25 is assigned" end="24" id="CH25PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="23" id="Reserved6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="22" description="CH26PA These bit fields determine which port channel 26 is assigned" end="20" id="CH26PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="19" description="Reserved" end="19" id="Reserved5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="CH27PA These bit fields determine which port channel 27 is assigned" end="16" id="CH27PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="15" id="Reserved4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="CH28PA These bit fields determine which port channel 28 is assigned" end="12" id="CH28PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="11" description="Reserved" end="11" id="Reserved3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="CH29PA These bit fields determine which port channel 28 is assigned" end="8" id="CH29PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="7" id="Reserved2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="CH30PA These bit fields determine which port channel 30 is assigned" end="4" id="CH30PA_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="3" description="Reserved" end="3" id="Reserved1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="CH31PA These bit fields determine which port channel 31 is assigned" end="0" id="CH31PA_2_0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved18" id="MSS_DMA_Reserved18" offset="0xA4" width="32"></register>
  
  
  <register acronym="MSS_DMA_Reserved19" id="MSS_DMA_Reserved19" offset="0xA8" width="32"></register>
  
  
  <register acronym="MSS_DMA_Reserved20" id="MSS_DMA_Reserved20" offset="0xAC" width="32"></register>
  
  
  <register acronym="MSS_DMA_Reserved21" id="MSS_DMA_Reserved21" offset="0xB0" width="32"></register>
  
  
  <register acronym="FTCMAP" description="Assignment of interrupt lines to either ARM CPU or DSP CPU" id="FTCMAP" offset="0xB4" width="32">
    
  <bitfield begin="31" description="FTCAB: Frame Transfer Complete Interrupt to Group A or Group B 1 routes FTC interrupt of the corresponding channel to Group B. 0 routes FTC interrupt of the corresponding channel to Group A. Note: Group A interrupts (FTC, LFS, HBC, BTC and BER) are routed to ARM CPU. Group B interrupts (FTC, LFS, HBC, BTC and BER) are routed to DSP CPU." end="0" id="FTCAB" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved22" id="MSS_DMA_Reserved22" offset="0xB8" width="32"></register>
  
  
  <register acronym="LFSMAP" description="Assignment of interrupt lines to either ARM CPU or DSP CPU" id="LFSMAP" offset="0xBC" width="32">
    
  <bitfield begin="31" description="LFSAB: Last Frame Started Interrupt to Group A or Group B 1 routes LFS interrupt of the corresponding channel to Group B. 0 routes LFS interrupt of the corresponding channel to Group A." end="0" id="LFSAB" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved23" id="MSS_DMA_Reserved23" offset="0xC0" width="32"></register>
  
  
  <register acronym="HBCMAP" description="Assignment of interrupt lines to either ARM CPU or DSP CPU" id="HBCMAP" offset="0xC4" width="32">
    
  <bitfield begin="31" description="HBCAB: Half Block Complete Interrupt to Group A or Group B 1 routes HBC interrupt of the corresponding channel to Group B. 0 routes HBC interrupt of the corresponding channel to Group A." end="0" id="HBCAB" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved24" id="MSS_DMA_Reserved24" offset="0xC8" width="32"></register>
  
  
  <register acronym="BTCMAP" description="Assignment of interrupt lines to either ARM CPU or DSP CPU" id="BTCMAP" offset="0xCC" width="32">
    
  <bitfield begin="31" description="BTCAB: Block Transfer Complete Interrupt to Group A or Group B 1 routes BTC interrupt of the corresponding channel to Group B. 0 routes BTC interrupt of the corresponding channel to Group A." end="0" id="BTCAB" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved25" id="MSS_DMA_Reserved25" offset="0xD0" width="32"></register>
  
  
  <register acronym="BERMAP" description="Assignment of interrupt lines to either ARM CPU or DSP CPU" id="BERMAP" offset="0xD4" width="32">
    
  <bitfield begin="31" description="BERAB: Bus Error Interrupt to Group A or Group B. 1 routes BER interrupt of the corresponding channel to Group B. 0 routes BER interrupt of the corresponding channel to Group A." end="0" id="BERAB" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved26" id="MSS_DMA_Reserved26" offset="0xD8" width="32"></register>
  
  
  <register acronym="FTCINTENAS" description="Enables a FTC interrupt for channels 0-31" id="FTCINTENAS" offset="0xDC" width="32">
    
  <bitfield begin="31" description="FTCINTENA: FTC (Frame Transfer Complete) Interrupt Enable Bit. Writing a one to a bit enables the interrupt of the according channel. Writing a zero has no effect. Reading from FTCINTENAS gives the status (interrupt enabled/disabled) of channels 0 through 31. 1 the associated FTC interrupt of a channel is enabled. 0 the associated FTC interrupt of a channel is disabled." end="0" id="FTCINTENA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved27" id="MSS_DMA_Reserved27" offset="0xE0" width="32"></register>
  
  
  <register acronym="FTCINTENAR" description="Disables a FTC interrupt for channels 0-31" id="FTCINTENAR" offset="0xE4" width="32">
    
  <bitfield begin="31" description="FTCINTDIS: FTC (Frame Transfer Complete) Interrupt Disable Bit. Writing a one to a bit disables the interrupt of the according channel. Writing a zero has no effect. Reading from FTCINTENAR gives the status (interrupt enabled/disabled) of channels 0 through 31. 1 the associated FTC interrupt of a channel is enabled. 0 the associated FTC interrupt of a channel is disabled." end="0" id="FTCINTDIS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved28" id="MSS_DMA_Reserved28" offset="0xE8" width="32"></register>
  
  
  <register acronym="LFSINTENAS" description="Enables a LFS interrupt for channels 0-31" id="LFSINTENAS" offset="0xEC" width="32">
    
  <bitfield begin="31" description="LFSINTENA: LFS (last Frame Started) Interrupt Enable Bit. Writing a one to a bit enables the interrupt of the according channel. Writing a zero has no effect Reading from LFSINTENAS gives the status (interrupt enabled/disabled) of channels 0 through 31. 1 the associated LFS interrupt of a channel is enabled. 0 the associated LFS interrupt of a channel is disabled" end="0" id="LFSINTENA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved29" id="MSS_DMA_Reserved29" offset="0xF0" width="32"></register>
  
  
  <register acronym="LFSINTENAR" description="Disables a LFS interrupt for channels 0-31" id="LFSINTENAR" offset="0xF4" width="32">
    
  <bitfield begin="31" description="LFSINTDIS: LFS (Last Frame Started) Interrupt Disable Bit. Writing a one to a bit disables the interrupt of the according channel. Writing a zero has no effect. Reading from LFSINTENAR gives the status (interrupt enabled/disabled) of channels 0 through 31. 1 the associated LFS interrupt of a channel is enabled. 0 the associated LFS interrupt of a channel is disabled" end="0" id="LFSINTDIS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved30" id="MSS_DMA_Reserved30" offset="0xF8" width="32"></register>
  
  
  <register acronym="HBCINTENAS" description="Enables a HBC interrupt for channels 0-31" id="HBCINTENAS" offset="0xFC" width="32">
    
  <bitfield begin="31" description="HBCINTENA: HBC (Half Block Complete) Interrupt Enable Bit. Writing a one to a bit enables the interrupt of the according channel. Writing a zero has no effect. Reading from HBCINTENAS gives the status (interrupt enabled/disabled) of channels 0 through 31. 1 the associated HBC interrupt of a channel is enabled. 0 the associated HBC interrupt of a channel is disabled" end="0" id="HBCINTENA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved31" id="MSS_DMA_Reserved31" offset="0x100" width="32"></register>
  
  
  <register acronym="HBCINTENAR" description="Disables a HBC interrupt for channels 0-31" id="HBCINTENAR" offset="0x104" width="32">
    
  <bitfield begin="31" description="HBCINTDIS: HBC (Half Block Complete) Interrupt Disable Bit. Writing a one to a bit disables the interrupt of the according channel. Writing a zero has no effect Reading from HBCINTENAR gives the status (interrupt enabled/disabled) of channels 0 through 31. 1 the associated HBC interrupt of a channel is enabled. 0 the associated HBC interrupt of a channel is disabled" end="0" id="HBCINTDIS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="Reserved32" id="Reserved32" offset="0x108" width="32">
    
  <bitfield begin="31" description="Reserved" end="0" id="Reserved" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="BTCINTENAS" description="Enables a BTC interrupt for channels 0-31" id="BTCINTENAS" offset="0x10C" width="32">
    
  <bitfield begin="31" description="BTCINTENA: BTC (Block Transfer Complete) Interrupt Enable Bit. Writing a one to a bit enables the interrupt of the according channel. Writing a zero has no effect. Reading from BTCINTENAS gives the status (interrupt enabled/disabled) of channels 0 through 31. 1 the associated BTC interrupt of a channel is enabled. 0 the associated BTC interrupt of a channel is disabled." end="0" id="BTCINTENA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved33" id="MSS_DMA_Reserved33" offset="0x110" width="32"></register>
  
  
  <register acronym="BTCINTENAR" description="Disables a BTC interrupt for channels 0-31" id="BTCINTENAR" offset="0x114" width="32">
    
  <bitfield begin="31" description="BTCINTDIS: BTC (Block Transfer Complete) Interrupt Disable Bit. Writing a one to a bit disables the interrupt of the according channel. Writing a zero has no effect. Reading from BTCINTENAR gives the status (interrupt enabled/disabled) of channels 0 through 31. 1 the associated BTC interrupt of a channel is enabled. 0 the associated BTC interrupt of a channel is disabled" end="0" id="BTCINTDIS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved34" id="MSS_DMA_Reserved34" offset="0x118" width="32"></register>
  
  
  <register acronym="GINTFLAG" description="Each flag bit is an OR of five different interrupt types of the same channel" id="GINTFLAG" offset="0x11C" width="32">
    
  <bitfield begin="31" description="GINT: Global Interrupt Flags. Global interrupt flag bit is a OR function of FTC, LFS, HBC, BTC and BER interrupt flags. When a bit is active, it indicates that one or more of the five interrupt types is pending of the corresponding channel" end="0" id="GINT" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved35" id="MSS_DMA_Reserved35" offset="0x120" width="32"></register>
  
  
  <register acronym="FTCFLAG" description="FTC Interrupt flags Channels 0-31" id="FTCFLAG" offset="0x124" width="32">
    
  <bitfield begin="31" description="FTCI: Frame Transfer Complete Flags. If the bit is set a FTC Interrupt of the corresponding channels pending. Writing a 1 clears the according flag. Writing a zero has no effect. Reading from the respected Interrupt Channel Offset register also clears the corresponding flag. 1 the associated FTC interrupt of a channel is pending. 0 the associated FTC interrupt of a channel is not pending. The state of the flag bit can be polled even if the corresponding interrupt enable bit is cleared" end="0" id="FTC" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved36" id="MSS_DMA_Reserved36" offset="0x128" width="32"></register>
  
  
  <register acronym="LFSFLAG" description="LFS Interrupt flags Channels 0-31" id="LFSFLAG" offset="0x12C" width="32">
    
  <bitfield begin="31" description="LFSI: Last Frame Transfer Started Flags If the bit is set a LFS Interrupt of the corresponding channels pending. Writing a 1 clears the according flag. Writing a zero has no effect. Reading from the respected Interrupt Channel Offset register also clears the corresponding flag. 1 the associated LFS interrupt of a channel is pending. 0 the associated LFS interrupt of a channel is not pending. The state of the flag bit can be polled even if the corresponding interrupt enable bit is cleared" end="0" id="LFSI" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved37" id="MSS_DMA_Reserved37" offset="0x130" width="32"></register>
  
  
  <register acronym="HBCFLAG" description="HBC Interrupt flags Channels 0-31" id="HBCFLAG" offset="0x134" width="32">
    
  <bitfield begin="31" description="HBCI: Half of Block Transfer Complete Flags. If the bit is set a HBC Interrupt of the corresponding channels pending. Writing a 1 clears the according flag. Writing a zero has no effect. Reading from the respected Interrupt Channel Offset register also clears the corresponding flag. 1 the associated HBC interrupt of a channel is pending. 0 the associated HBC interrupt of a channel is not pending. The state of the flag bit can be polled even if the corresponding interrupt enable bit is cleared" end="0" id="HBCI" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved38" id="MSS_DMA_Reserved38" offset="0x138" width="32"></register>
  
  
  <register acronym="BTCFLAG" description="BTC Interrupt flags Channels 0-31" id="BTCFLAG" offset="0x13C" width="32">
    
  <bitfield begin="31" description="BTCI: Block Transfer Complete Flags. If the bit is set a BTC Interrupt of the corresponding channels pending. Writing a 1 clears the according flag. Writing a zero has no effect. Reading from the respected Interrupt Channel Offset register also clears the corresponding flag. 1 the associated BTC interrupt of a channel is pending. 0 the associated BTC interrupt of a channel is not pending. The state of the flag bit can be polled even if the corresponding interrupt enable bit is cleared" end="0" id="BTCI" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved39" id="MSS_DMA_Reserved39" offset="0x140" width="32"></register>
  
  
  <register acronym="BERFLAG" description="BER Interrupt flags Channels 0-31" id="BERFLAG" offset="0x144" width="32">
    
  <bitfield begin="31" description="BERI: Bus Error Flags. If the bit is set a BER Interrupt of the corresponding channels pending. Writing a 1 clears the according flag. Writing a zero has no effect. Reading from the respected Interrupt Channel Offset register also clears the corresponding flag. 1 the associated BER interrupt of a channel is pending. 0 the associated BER interrupt of a channel is not pending. The state of the flag bit can be polled even if the corresponding interrupt enable bit is cleared." end="0" id="BERI" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved40" id="MSS_DMA_Reserved40" offset="0x148" width="32"></register>
  
  
  <register acronym="FTCAOFFSET" description="Channel causing FTC Interrupt on Group A" id="FTCAOFFSET" offset="0x14C" width="32">
    
  <bitfield begin="31" description="Reserved" end="8" id="Reserved" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="sbz. These bits should be programmed as zero" end="6" id="sbz" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="FTCA: Channel causing FTC (Frame Transfer Complete) Interrupt Group A. Contains the channel number of the pending interrupt for group A if the corresponding interrupt enable is set. Reading this location clears the corresponding Interrupt pending flag with the highest priority. Please refer to Table 1–10. If FTCA is zero it means no interrupt is pending. FTCA = 1, means channel 0 is pending. FTCA = 2, means channel 1 is pending and so on...  FTCA Interrupt Offset Index Interrupt Condition           Offset Value Phantom                                   0x0 Channel 0 FTCA                       0x1 Channel 1 FTCA                       0x2            |                                        |            |                                        | Channel 31 FTCA                     0x20 " end="0" id="FTCA_5_0" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="LFSAOFFSET" description="Channel causing LFS Interrupt on Group A" id="LFSAOFFSET" offset="0x150" width="32">
    
  <bitfield begin="31" description="Reserved" end="8" id="Reserved" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="6sbz. These bits should be programmed as zero." end="6" id="sbz" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="LFSA: Channel causing LFS (Last Frame Started) Interrupt Group A. Contains the channel number of the pending interrupt for group A if the corresponding interrupt enable is set. Reading this location clears the corresponding Interrupt pending flag with the highest priority. Please refer below table  FTCA Interrupt Offset Index Interrupt Condition           Offset Value Phantom                                   0x0 Channel 0 FTCA                       0x1 Channel 1 FTCA                       0x2            |                                        |            |                                        | Channel 31 FTCA                     0x20" end="0" id="LFSA_5_0" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="HBCAOFFSET" description="Channel causing HBC Interrupt on Group A" id="HBCAOFFSET" offset="0x154" width="32">
    
  <bitfield begin="31" description="Reserved" end="8" id="Reserved" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="sbz. These bits should be programmed as zero" end="6" id="sbz" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="HBCA: Channel causing HBC (Half Block Complete) Interrupt Group A. Contains the channel number of the pending interrupt for group A if the corresponding interrupt enable is set. Reading this location clears the corresponding Interrupt pending flag with the highest priority. Please refer to below table  FTCA Interrupt Offset Index Interrupt Condition           Offset Value Phantom                                   0x0 Channel 0 FTCA                       0x1 Channel 1 FTCA                       0x2            |                                        |            |                                        | Channel 31 FTCA                     0x20" end="0" id="HBCA_5_0" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="BTCAOFFSET" description="Channel causing BTC Interrupt on Group A" id="BTCAOFFSET" offset="0x158" width="32">
    
  <bitfield begin="31" description="Reserved" end="8" id="Reserved" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="sbz. These bits should be programmed as zero" end="6" id="sbz" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="BTCA: Channel causing BTC (Block Transfer Complete) Interrupt Group A. Contains the channel number of the pending interrupt for group A if the corresponding interrupt enable is set. Reading this location clears the corresponding Interrupt pending flag with the highest priority." end="0" id="BTCA_5_0" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="BERAOFFSET" description="Channel causing BER Interrupt on Group A" id="BERAOFFSET" offset="0x15C" width="32">
    
  <bitfield begin="31" description="Reserved" end="8" id="Reserved" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="sbz. These bits should be programmed as zero" end="6" id="sbz" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="BERA: Channel causing BER (Bus Error) Interrupt Group A. Contains the channel number of the pending interrupt for group A if the corresponding interrupt enable is set. Reading this location clears the corresponding Interrupt pending flag with the highest priority" end="0" id="BERA_5_0" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="FTCBOFFSET" description="Channel causing FTC Interrupt on Group B" id="FTCBOFFSET" offset="0x160" width="32">
    
  <bitfield begin="31" description="Reserved" end="8" id="Reserved" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="sbz. These bits should be programmed as zero" end="6" id="sbz" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="FTCB: Channel causing FTC (Frame Transfer Complete) Interrupt Group B. Contains the channel number of the pending interrupt for group B. Reading this location clears the corresponding Interrupt pending flag with the highest priority. Please refer to below table  FTCA Interrupt Offset Index Interrupt Condition           Offset Value Phantom                                   0x0 Channel 0 FTCA                       0x1 Channel 1 FTCA                       0x2            |                                        |            |                                        | Channel 31 FTCA                     0x20" end="0" id="FTCB_5_0" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="LFSBOFFSET" description="Channel causing LFS Interrupt on Group B" id="LFSBOFFSET" offset="0x164" width="32">
    
  <bitfield begin="31" description="Reserved" end="8" id="Reserved" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="sbz. These bits should be programmed as zero" end="6" id="sbz" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="LFSB: Channel causing LFS (Last Frame Started) Interrupt Group B. Contains the channel number of the pending interrupt for group B if the corresponding interrupt enable is set. Reading this location clears the corresponding Interrupt pending flag with the highest priority. Please refer to below table  FTCA Interrupt Offset Index Interrupt Condition           Offset Value Phantom                                   0x0 Channel 0 FTCA                       0x1 Channel 1 FTCA                       0x2            |                                        |            |                                        | Channel 31 FTCA                     0x20" end="0" id="LFSB_5_0" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="HBCBOFFSET" description="Channel causing HBC Interrupt on Group B" id="HBCBOFFSET" offset="0x168" width="32">
    
  <bitfield begin="31" description="Reserved" end="8" id="Reserved" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="sbz. These bits should be programmed as zero" end="6" id="sbz" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="0HBCB: Channel causing HBC (Half Block Complete) Interrupt Group B. Contains the channel number of the pending interrupt for group B if the corresponding interrupt enable is set. Reading this location clears the corresponding Interrupt pending flag with the highest priority. Please refer to below table  FTCA Interrupt Offset Index Interrupt Condition           Offset Value Phantom                                   0x0 Channel 0 FTCA                       0x1 Channel 1 FTCA                       0x2            |                                        |            |                                        | Channel 31 FTCA                     0x20" end="0" id="HBCB_5_0" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="BTCBOFFSET" description="Channel causing BTC Interrupt on Group B" id="BTCBOFFSET" offset="0x16C" width="32">
    
  <bitfield begin="31" description="Reserved" end="8" id="Reserved" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="sbz. These bits should be programmed as zero" end="6" id="sbz" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="BTCB: Channel causing BTC (Block Transfer Complete) Interrupt Group B. Contains the channel number of the pending interrupt for group B if the corresponding interrupt enable is set. Reading this location clears the corresponding Interrupt pending flag with the highest priority. Please refer to below table  FTCA Interrupt Offset Index Interrupt Condition           Offset Value Phantom                                   0x0 Channel 0 FTCA                       0x1 Channel 1 FTCA                       0x2            |                                        |            |                                        | Channel 31 FTCA                     0x20" end="0" id="BTCB_5_0" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="BERBOFFSET" description="Channel causing BER Interrupt on Group B" id="BERBOFFSET" offset="0x170" width="32">
    
  <bitfield begin="31" description="Reserved" end="8" id="Reserved" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="sbz. These bits should be programmed as zero" end="6" id="sbz" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="BERB: Channel causing BER (Bus Error) Interrupt Group B. Contains the channel number of the pending interrupt for group B if the corresponding interrupt enable is set. Reading this location clears the corresponding Interrupt pending flag with the highest priority. Please refer to below table  FTCA Interrupt Offset Index Interrupt Condition           Offset Value Phantom                                   0x0 Channel 0 FTCA                       0x1 Channel 1 FTCA                       0x2            |                                        |            |                                        | Channel 31 FTCA                     0x20" end="0" id="BERB_5_0" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved41" id="MSS_DMA_Reserved41" offset="0x174" width="32"></register>
  
  
  <register acronym="PTCRL" description="Port Control and Status..." id="PTCRL" offset="0x178" width="32">
    
  <bitfield begin="31" description="Reserved" end="25" id="Reserved4" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="24" description="PENDB: Transactions Pending for Port B. This flag determines if there are transactions ongoing on Port B. The flag will be cleared if no transfers are done. It can be used to determine if there is still data transfered while DMA_EN is set to 0 in GCTCRL. In this case, once all transfers are finished, the flag will be set to 0. 1 Transfers are still pending 0 No transfers are pending" end="24" id="PENDB" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="19" id="Reserved3" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="18" description="BYB: Bypass FIFO B. Writing 1 to this bit limits the FIFO depth to the size of one element. That means after one element is read the write out to the destination will start. This feature is particularly useful to minimize switching latency in-between channels. But it also does not make optimal use of AHB bandwidth." end="18" id="BYB" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="PSFRHQPB: Priority Scheme Fix or Rotate for High Priority Queue of Port B. 1 Rotation priority 0 Fixed priority" end="17" id="PSFRHQPB" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="PSFRLQPB: Priority Scheme Fix or Rotate for Low Priority Queue of Port B. 1 Rotation priority 0 Fixed priority" end="16" id="PSFRLQPB" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="9" id="Reserved2" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="8" description="PENDA: Transactions Pending for Port A. This flag determines if there are transactions ongoing on Port A. The flag will be cleared if no transfers are done. It can be used to determine if there is still data transfered while DMA_EN is set to 0 in GCTCRL. In this case, once all transfers are finished, the flag will be set to 0. 1 Transfers are still pending 0 No transfers are pending" end="8" id="PENDA" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="3" id="Reserved1" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="2" description="BYA: Bypass FIFO A. Writing 1 to this bit limits the FIFO depth to the size of one element. That means after one element is read the write out to the destination will start. This feature is particularly useful to minimize switching latency in-between channels. But it also does not make optimal use of AHB bandwidth" end="2" id="BYA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="PSFRHQPA: Priority Scheme Fix or Rotate for High Priority Queue of Port A. 1 Rotation priority 0 Fixed priority" end="1" id="PSFRHQPA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="PSFRLQPA: Priority Scheme Fix or Rotate for Low Priority Queue of Port A. 1 Rotation priority 0 Fixed priority" end="0" id="PSFRLQPA" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="RTCTRL" description="test bit to open write access to CPU during test mode" id="RTCTRL" offset="0x17C" width="32">
    
  <bitfield begin="31" description="Reserved" end="1" id="Reserved" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description="RTC: RAM Test Control Writing a one to this bit open the write access to the reserved locations of control packet RAM as defined in the memory map. Writing a zero will prohibit write access to the reserved locations of control packet RAM" end="0" id="RTC" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DCTRL" description="Control bit to enable watchpoint checking" id="DCTRL" offset="0x180" width="32">
    
  <bitfield begin="31" description="Reserved" end="29" id="Reserved3" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="28" description="CHNUM : Channel Number. These bit fields indicate the channel number which causes the watchpoint to match" end="24" id="CHNUM" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="17" id="Reserved2" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="16" description="DMADBGS: DMA Debug Status. When a watchpoint is setup to watch for an unique AHB address or a range of addresses is true on one of the three AHB ports is true then DMA Debug Status bit is set and a debug request signal is asserted to the main CPU. CPU must write one to clear this bit in order for DMA to release debug request signal. When this bit is read: 0 = No watchpoint condition is detected. 1 = Watchpoint condition is detected. When this is written: 0 = No effect. 1 = Clears the bit" end="16" id="DMADBGS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="1" id="Reserved1" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="0" description="DBGEN: Debug Enable Writing a one to this bit enable the watchpoint checking logics. This bit can only be set during emulation mode when SUSPEND is high. Also this bit is reset by test reset (nTRST)." end="0" id="DBGEN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="WPR" description="watch for an address on AHB bus of either PortA1, PortA2 and PortB" id="WPR" offset="0x184" width="32">
    
  <bitfield begin="31" description="WP: Watch Point Register. This register can only be programmed during emulation mode when SUSPEND signal is high. Also this register is only reset by a test reset (nTRST). A 32 bit address can be programmed into this register as a watchpoint. This register is used along with Watch Mask Register (WMR) as described in the next section. When DBGEN bit is set and a unique address or a range of addresses are detected on the AHB address bus of either Port A1, Port A2 or Port B, a debug request signal is sent to ARM CPU. The state machine of the port in which the watchpoint condition is true is frozen" end="0" id="WP" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="WMR" description="mask out a bit in watch point register from address compare" id="WMR" offset="0x188" width="32">
    
  <bitfield begin="31" description="WM: Watch Mask Register. This register can only be programmed during emulation mode when SUSPEND signal is high. Also this register is only reset by a test reset (nTRST). Setting a bit to 1 in the WMR register has the effect of masking the corresponding bit in the WPR register disregarded in the comparison." end="0" id="WM" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PAACSADDR" description="The current source address of an ongoing active channel in Port A" id="PAACSADDR" offset="0x18C" width="32">
    
  <bitfield begin="31" description="PAACSA: PortA Active Channel Source Address. This register contains the current source address of the active channel as broadcasted in Section 1.6.2.4, &quot;DMA STATUS Register (DMASTAT)&quot; for Port A" end="0" id="PAACSA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PAACDADDR" description="The destination address of an ongoing active channel in Port A" id="PAACDADDR" offset="0x190" width="32">
    
  <bitfield begin="31" description="PAACDA: PortA Active Channel Destination Address. This register contains the current destination address of the active channel as broadcasted in Section 1.6.2.4, &quot;DMA STATUS Register (DMASTAT)&quot; for Port A." end="0" id="PAACDA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PAACTC" description="The transfer count of an ongoing active channel in Port B" id="PAACTC" offset="0x194" width="32">
    
  <bitfield begin="31" description="Reserved" end="29" id="Reserved2" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="28" description="PAFTCOUNT: PortA Active Channel Frame Count. This register contains the current frame count value of the active channel as broadcasted in Section 1.6.2.4, &quot;DMA STATUS Register (DMASTAT)&quot; for Port A" end="16" id="PAFTCOUNT_28_16" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="13" id="Reserved1" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="12" description="PAETCOUNT: PortA Active Channel Element Count. This register contains the current element count value of the active channel as broadcasted in Section 1.6.2.4, &quot;DMA STATUS Register (DMASTAT)&quot; for Port A.  Note: PAETCOUNT and PAFTCOUNT indicate the count values of the active channel currently residing in DMA’s execution queue. With multiple pending channels and due to arbitration between channels the PAETCOUNT and PAFTCOUNT should not be polled to determine the end of a channel transfer." end="0" id="PAETCOUNT_12_0" rwaccess="R" width="13"></bitfield>
  </register>
  
  
  <register acronym="PBACSADDR" description="The current source address of an ongoing active channel in Port B" id="PBACSADDR" offset="0x198" width="32">
    
  <bitfield begin="31" description="PBACSA: PortB Active Channel Source Address. This register contains the current source address of the active channel as broadcasted in Section 1.6.2.4, &quot;DMA STATUS Register (DMASTAT)&quot; for Port B." end="0" id="PBACSA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PBACDADDR" description="The destination address of an ongoing active channel in Port B" id="PBACDADDR" offset="0x19C" width="32">
    
  <bitfield begin="31" description="PBACDA: PortB Active Channel Destination Address. This register contains the current destination address of the active channel as broadcasted in Section 1.6.2.4, &quot;DMA STATUS Register (DMASTAT)&quot; for Port B." end="0" id="PBACDA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PBACTC" description="The transfer count of an ongoing active channel in Port B" id="PBACTC" offset="0x1A0" width="32">
    
  <bitfield begin="31" description="Reserved" end="29" id="Reserved2" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="28" description="PBFTCOUNT: PortB Active Channel Frame Count. This register contains the current frame count value of the active channel as broadcasted in Section 1.6.2.4, &quot;DMA STATUS Register (DMASTAT)&quot; for Port B." end="16" id="PBFTCOUNT_28_16" rwaccess="RW" width="13"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="13" id="Reserved1" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="12" description="PBETCOUNT: PortB Active Channel Element Count. This register contains the current element count value of the active channel as broadcasted in Section 1.6.2.4, &quot;DMA STATUS Register (DMASTAT)&quot; for Port B." end="0" id="PBETCOUNT_12_0" rwaccess="RW" width="13"></bitfield>
  </register>
  
  
  <register acronym="MSS_DMA_Reserved42" id="MSS_DMA_Reserved42" offset="0x1A4" width="32"></register>
  
  
  <register acronym="DMAPCR" description="Control of the parity generation" id="DMAPCR" offset="0x1A8" width="32">
    
  <bitfield begin="31" description="Reserved" end="17" id="Reserved3" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="16" description="ERRA: Error Action  0 = If a parity error is detected on Control Packet x (x = 0, 1, ...or 31), then the enable/disable state of Control Packet x remains unchanged. 1 = If a parity error is detected on Control Packet x (x = 0, 1, ...or 31), then DMA is disabled immediately. If a frame on Control Packet x is processed at the time the parity error is detected, then remaining elements of this frame will no more be transferred. Disabling of the DMA will be done, regardless of whether the error was detected during a read to the Control Packet RAM performed by the DMA state machine or by a different master." end="16" id="ERRA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="9" id="Reserved2" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="8" description="TEST. When this bit is set, the parity bits are memory mapped to make them accessible by the CPU. 0 = parity bits are not memory mapped 1 = parity bits are memory mapped" end="8" id="TEST" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="4" id="Reserved1" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="3" description="PARITY_ENA: Parity Error Detection Enable. This bit field enables or disables the parity check on read operations and the parity calculation on write operations. If parity checking is enabled and a parity error is detected the DMA_UERR signal is activated. During memory initiallization this bit field needs to be enable inorder to generate parity bits inside memory. 0101 = disable all other = enable NOTE: It is recommended to write a ‘1010’ to enable error detection, to guard against soft error from flipping PARITY_ENA to a disable state" end="0" id="PARITY_ENA" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="DMAPAR" description="The address of the control packet memory, where the uncorrectable error occured" id="DMAPAR" offset="0x1AC" width="32">
    
  <bitfield begin="31" description="Reserved" end="25" id="Reserved2" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="24" description="EDFLG: Parity Error Detection Flag. This flag indicates if a parity error occured on reading DMA Control packet RAM. When this bit is read: 0 = No error occured. 1 = Error detected and the address is captured in DMAPAR’s ERROR_ADDRESS field. When write to this bit with: 0 = No effect. 1 = Clears the bit." end="24" id="EDFLG" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="12" id="Reserved1" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="11" description="ERROR ADDRESS: Error Address. This register holds the address of the first parity error generated in the RAM. This error address is frozen from being updated until it is read by the CPU. During emulation mode when SUSPEND is high, this address is frozen even when read. NOTE: The Error Address Register (11:0) will not be reset, neither by PORRST nor by any other reset source." end="0" id="ERROR_ADDRESS_11_0" rwaccess="R" width="12"></bitfield>
  </register>
  
  
  <register acronym="DMAMPCTRL" description="Controls enablin/disabling of the protection regions and access restrictions" id="DMAMPCTRL" offset="0x1B0" width="32">
    
  <bitfield begin="31" description="Reserved" end="29" id="Reserved4" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="28" description="INT3AB: Interrupt assignment of region 3 to Group A or GroupB. 0 = Interrupt is routed to VIM (Group A) 1 = Interrupt is routed to DSP CPU (Group B)" end="28" id="INT3AB" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="INT3ENA: Interrupt enable of region 3. 0 = Interrupt is disabled 1 = Interrupt is enabled" end="27" id="INT3ENA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="REG3AP: Region 3 Access Permission. These bits determine the access permission for region 3  REG3AP                           Access Permission    00                                    all accesses allowed    01                                    read only    10                                    write only    11                                    none" end="25" id="REG3AP" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="24" description="REG3ENA: Region 3 Enable. 0 = Region is disabled (no address checking done) 1 = Region is enalbed (address and access permission checking done)" end="24" id="REG3ENA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="21" id="Reserved3" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="20" description="INT2AB: Interrupt assignment of region 2 to Group A or GroupB. 0 = Interrupt is routed to VIM (Group A) 1 = Interrupt is routed to DSP CPU (Group B)" end="20" id="INT2AB" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="INT2ENA: Interrupt enable of region 2. 0 = Interrupt is disabled 1 = Interrupt is enabled" end="19" id="INT2ENA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="REG2AP: Region 2 Access Permission. These bits determine the access permission for region 2  REG2AP                          Access Permission    00                                   all accesses allowed    01                                   read only    10                                   write only    11                                   none" end="17" id="REG2AP" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="16" description="REG2ENA: Region 2 Enable. 0 = Region is disabled (no address checking done) 1 = Region is enalbed (address and access permission checking done)" end="16" id="REG2ENA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="13" id="Reserved2" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="12" description="INT1AB: Interrupt assignment of region 1 to Group A or GroupB. 0 = Interrupt is routed to VIM (Group A) 1 = Interrupt is routed to DSP CPU (Group B)" end="12" id="INT1AB" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="INT1ENA: Interrupt enable of region 1. 0 = Interrupt is disabled 1 = Interrupt is enabled" end="11" id="INT1ENA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="REG1AP: Region 1 Access Permission These bits determine the access permission for region 1  REG1AP                           Access Permission    00                                    all accesses allowed    01                                    read only    10                                    write only    11                                    none" end="9" id="REG1AP" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="8" description="REG1ENA: Region 1 Enable. 0 = Region is disabled (no address checking done) 1 = Region is enalbed (address and access permission checking done)" end="8" id="REG1ENA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="5" id="Reserved1" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="4" description="INT0AB: Interrupt assignment of region 0 to Group A or GroupB. 0 = Interrupt is routed to VIM (Group A) 1 = Interrupt is routed to DSP CPU (Group B)" end="4" id="INT0AB" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="INT0ENA: Interrupt enable of region 0. 0 = Interrupt is disabled 1 = Interrupt is enabled" end="3" id="INT0ENA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="REG0AP: Region 0 Access Permission. These bits determine the access permission for region 0  REG0AP                             Access Permission    00                                      all accesses allowed    01                                      read only    10                                      write only    11                                      none" end="1" id="REG0AP" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="0" description="REG0ENA: Region 0 Enable. 0 = Region is disabled (no address checking done) 1 = Region is enalbed (address and access permission checking done)" end="0" id="REG0ENA" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DMAMPST" description="Status bits to show in which region a access violation happened" id="DMAMPST" offset="0x1B4" width="32">
    
  <bitfield begin="31" description="Reserved" end="25" id="Reserved4" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="24" description="REG3FT: Region 3 Fault. This bit determines whether a access permission violation was detected in this region. Once the bit is set, it can be cleared by writing a 1. 0 = no fault detected 1 = fault detected" end="24" id="REG3FT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved" end="17" id="Reserved3" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="16" description="REG2FT: Region 2 Fault. This bit determines whether a access permission violation was detected in this region. Once the bit is set, it can be cleared by writing a 1. 0 = no fault detected 1 = fault detected" end="16" id="REG2FT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved" end="9" id="Reserved2" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="8" description="REG1FT: Region 1 Fault. This bit determines whether a access permission violation was detected in this region. Once the bit is set, it can be cleared by writing a 1. 0 = no fault detected 1 = fault detected" end="8" id="REG1FT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="1" id="Reserved1" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="0" description="REG0FT: Region 0 Fault. This bit determines whether a access permission violation was detected in this region. Once the bit is set, it can be cleared by writing a 1. 0 = no fault detected 1 = fault detected" end="0" id="REG0FT" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DMAMPR0S" description="Defines starting address of region 0" id="DMAMPR0S" offset="0x1B8" width="32">
    
  <bitfield begin="31" description="STARTADDRESS - Region 0 The startaddress defines at which address the region begins" end="0" id="STARTADDRESS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DMAMPR0E" description="Defines end address of region 0" id="DMAMPR0E" offset="0x1BC" width="32">
    
  <bitfield begin="31" description="ENDADDRESS - Region 0 The endaddress defines at which address the region ends. The endaddress usually is bigger than the startaddress for this region. Otherwise the region will wrap around at the end of the address space." end="0" id="ENDADDRESS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DMAMPR1S" description="Defines starting address of region 1" id="DMAMPR1S" offset="0x1C0" width="32">
    
  <bitfield begin="31" description="STARTADDRESS - Region 1 The startaddress defines at which address the region begins" end="0" id="STARTADDRESS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DMAMPR1E" description="Defines end address of region 1" id="DMAMPR1E" offset="0x1C4" width="32">
    
  <bitfield begin="31" description="ENDADDRESS - Region 1 The endaddress defines at which address the region ends. The endaddress usually is bigger than the startaddress for this region. Otherwise the region will wrap around at the end of the address space." end="0" id="ENDADDRESS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DMAMPR2S" description="Defines starting address of region 2" id="DMAMPR2S" offset="0x1C8" width="32">
    
  <bitfield begin="31" description="STARTADDRESS - Region 2 The startaddress defines at which address the region begins." end="0" id="STARTADDRESS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DMAMPR2E" description="Defines end address of region 2" id="DMAMPR2E" offset="0x1CC" width="32">
    
  <bitfield begin="31" description="ENDADDRESS - Region 2 The endaddress defines at which address the region ends. The endaddress usually is bigger than the startaddress for this region. Otherwise the region will wrap around at the end of the address space." end="0" id="ENDADDRESS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DMAMPR3S" description="Defines starting address of region 3" id="DMAMPR3S" offset="0x1D0" width="32">
    
  <bitfield begin="31" description="STARTADDRESS - Region 3 The startaddress defines at which address the region begins." end="0" id="STARTADDRESS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DMAMPR3E" description="Defines end address of region 3" id="DMAMPR3E" offset="0x1D4" width="32">
    
  <bitfield begin="31" description="ENDADDRESS - Region 3 The endaddress defines at which address the region ends. The endaddress usually is bigger than the startaddress for this region. Otherwise the region will wrap around at the end of the address space." end="0" id="ENDADDRESS" rwaccess="RW" width="32"></bitfield>
  </register>
</module>
