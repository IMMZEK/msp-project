<module name="VPAC_DRU_UTC_VPAC1_DRU_MMR_CFG_DRU_DRU_CHRT" acronym="" XML_version="1.0" HW_revision="n/a" description="">
	<register id="DRU_UTC_VPAC1__DRU_MMR_CFG__DRU_DRU_DRU_CHRT_chrt_ctl" acronym="DRU_UTC_VPAC1__DRU_MMR_CFG__DRU_DRU_DRU_CHRT_chrt_ctl" offset="0x0" width="64" description="">
		<bitfield id="ENABLE" width="1" begin="31" end="31" resetval="0x0" description="This field enables or disables the channel.  Disabling a channel halts operation on the channel after the current block transfer is completed.  Disabling a channel in the middle of a packet transfer may result in underflow conditions in the attached application block and data loss.  This field is encoded as follows: 0 = channel is disabled 1 = channel is enabled This field will be cleared after a channel teardown is complete." range="31" rwaccess="R/W"/> 
		<bitfield id="TEARDOWN" width="1" begin="30" end="30" resetval="0x0" description="Channel teardown: Setting this bit will request the channel to be torn down.  This field will remain set after a channel teardown is complete." range="30" rwaccess="R/W"/> 
		<bitfield id="PAUSE" width="1" begin="29" end="29" resetval="0x0" description="Channel pause: Setting this bit will request the channel to pause processing at the next packet boundary.  This is a more graceful method of halting processing than disabling the channel as it will not allow any current packets to underflow." range="29" rwaccess="R/W"/> 
		<bitfield id="FORCED_TEARDOWN" width="1" begin="28" end="28" resetval="0x0" description="Channel forced teardown: Setting this bit will request the channel to be torn down forcefulyy.  This field will clear after a channel teardown is complete." range="28" rwaccess="R/W"/>
	</register>
	<register id="DRU_UTC_VPAC1__DRU_MMR_CFG__DRU_DRU_DRU_CHRT_chrt_swtrig" acronym="DRU_UTC_VPAC1__DRU_MMR_CFG__DRU_DRU_DRU_CHRT_chrt_swtrig" offset="0x8" width="64" description="">
		<bitfield id="LOCAL_TRIGGER0" width="1" begin="2" end="2" resetval="0x0" description="Trigger: writing this bit with a value of 1 will cause the trigger event to be sent to this channel. This will trigger LOCAL Event" range="2" rwaccess="R/W"/> 
		<bitfield id="GLOBAL_TRIGGER1" width="1" begin="1" end="1" resetval="0x0" description="Trigger: writing this bit with a value of 1 will cause the trigger event to be sent to this channel. This will trigger Global Event 1" range="1" rwaccess="R/W"/> 
		<bitfield id="GLOBAL_TRIGGER0" width="1" begin="0" end="0" resetval="0x0" description="Trigger: writing this bit with a value of 1 will cause the trigger event to be sent to this channel. This will trigger Global Event 0" range="0" rwaccess="R/W"/>
	</register>
	<register id="DRU_UTC_VPAC1__DRU_MMR_CFG__DRU_DRU_DRU_CHRT_chrt_status_det" acronym="DRU_UTC_VPAC1__DRU_MMR_CFG__DRU_DRU_DRU_CHRT_chrt_status_det" offset="0x10" width="64" description="">
		<bitfield id="CMD_ID" width="8" begin="15" end="8" resetval="0x0" description="The last cmd_id given to the write queue" range="15 - 8" rwaccess="R"/> 
		<bitfield id="INFO" width="4" begin="7" end="4" resetval="0x0" description="The info of the error that was received" range="7 - 4" rwaccess="R"/> 
		<bitfield id="STATUS_TYPE" width="4" begin="3" end="0" resetval="0x0" description="The type of error that was received" range="3 - 0" rwaccess="R"/>
	</register>
	<register id="DRU_UTC_VPAC1__DRU_MMR_CFG__DRU_DRU_DRU_CHRT_chrt_status_cnt" acronym="DRU_UTC_VPAC1__DRU_MMR_CFG__DRU_DRU_DRU_CHRT_chrt_status_cnt" offset="0x18" width="64" description="">
		<bitfield id="ICNT3" width="16" begin="63" end="48" resetval="0x0" description="The last icnt3 given to the write queue" range="63 - 48" rwaccess="R"/> 
		<bitfield id="ICNT2" width="16" begin="47" end="32" resetval="0x0" description="The last icnt2 given to the write queue" range="47 - 32" rwaccess="R"/> 
		<bitfield id="ICNT1" width="16" begin="31" end="16" resetval="0x0" description="The last icnt1 given to the write queue" range="31 - 16" rwaccess="R"/> 
		<bitfield id="ICNT0" width="16" begin="15" end="0" resetval="0x0" description="The last icnt0 given to the write queue" range="15 - 0" rwaccess="R"/>
	</register>
</module>