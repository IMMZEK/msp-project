<?xml version="1.0" encoding="UTF-8"?>
<module id="NETCP" HW_revision="" XML_version="1" description="">
  <!-- csl_msmcregs -->
  <register id="MBOX_SLOT" offset="0x00000" width="32" description="(1 of 6, stride 16)">
    <bitfield id="status_bits" width="32" begin="31" end="0" description="Status bits" rwaccess="RW" />
  </register>
  <register id="PKT_ID_REVISION" offset="0x00400" width="32" description="(1 of 1, stride 0)">
    <bitfield id="module_id" width="14" begin="29" end="16" description="Module ID" rwaccess="R" />
    <bitfield id="revrtl" width="5" begin="15" end="11" description="RTL revision" rwaccess="R" />
    <bitfield id="revmaj" width="3" begin="10" end="8" description="Major revision" rwaccess="R" />
    <bitfield id="revmin" width="8" begin="7" end="0" description="Minor revision" rwaccess="R" />
  </register>
  <register id="PKT_ID_SOFT_RESET" offset="0x00404" width="32" description="(1 of 1, stride 0)">
    <bitfield id="trigger" width="32" begin="31" end="0" description="Writing anything to this field causes all internal statistics to be cleared" rwaccess="W" />
  </register>
  <register id="PKT_ID_RANGE_LIMIT" offset="0x00408" width="32" description="(1 of 1, stride 0)">
    <bitfield id="range_limit" width="10" begin="9" end="0" description="Contains the value of the highest allowable ID returned by allocation" rwaccess="RW" />
  </register>
  <register id="PKT_ID_VALUE" offset="0x0040c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="id_value" width="11" begin="10" end="0" description="When read, returns the value of a newly allocated packet ID, or returns 0x400 when no packet ID is available. When written, frees the supplied packet ID." rwaccess="RW" />
  </register>
  <register id="LUT2_REVISION" offset="0x00500" width="32" description="(1 of 1, stride 0)">
    <bitfield id="module_id" width="14" begin="29" end="16" description="Module ID" rwaccess="R" />
    <bitfield id="revrtl" width="5" begin="15" end="11" description="RTL revision" rwaccess="R" />
    <bitfield id="revmaj" width="3" begin="10" end="8" description="Major revision" rwaccess="R" />
    <bitfield id="revmin" width="8" begin="7" end="0" description="Minor revision" rwaccess="R" />
  </register>
  <register id="LUT2_SOFT_RESET" offset="0x00504" width="32" description="(1 of 1, stride 0)">
    <bitfield id="trigger" width="32" begin="31" end="0" description="Writing anything to this field causes the LUT to be cleared. This operation takes 2 clock cycles to complete." rwaccess="W" />
  </register>
  <register id="LUT2_ADD_DATA_N" offset="0x00520" width="32" description="(1 of 1, stride 0)">
    <bitfield id="data" width="32" begin="31" end="0" description="This is the data which will be placed in bits ((32*N)+31):(32*N) of the data portion of the added table entry." rwaccess="RW" />
  </register>
  <register id="LUT2_ADD_DELETE_KEY" offset="0x00530" width="32" description="(1 of 1, stride 0)">
    <bitfield id="key" width="32" begin="31" end="0" description="This is the key which will be matched against during the search operation." rwaccess="RW" />
  </register>
  <register id="LUT2_ADD_DELETE_CONTROL" offset="0x00534" width="32" description="(1 of 1, stride 0)">
    <bitfield id="go" width="1" begin="31" end="31" description="Go bit. Writing this bit will cause the add / delete operation to start. Once started, the operation cannot be cancelled. This bit will remain asserted until the add or delete operation completes." rwaccess="RW" />
    <bitfield id="add_del" width="1" begin="30" end="30" description="Add / delete control bit: 0=Delete entry, 1=Add entry" rwaccess="RW" />
  </register>
  <register id="STREAMSWITCH_REVISION" offset="0x00600" width="32" description="(1 of 1, stride 0)">
    <bitfield id="rev_minor" width="6" begin="5" end="0" description="Minor revision" rwaccess="R" />
    <bitfield id="rev_custom" width="2" begin="7" end="6" description="Custom revision" rwaccess="R" />
    <bitfield id="rev_major" width="3" begin="10" end="8" description="Major revision" rwaccess="R" />
    <bitfield id="rev_rtl" width="5" begin="15" end="11" description="RTL revisions" rwaccess="R" />
    <bitfield id="rev_module" width="12" begin="27" end="16" description="Module ID" rwaccess="R" />
    <bitfield id="rev_scheme" width="2" begin="31" end="30" description="Scheme" rwaccess="R" />
  </register>
  <register id="STREAMSWITCH_SOFT_RESET" offset="0x00604" width="32" description="(1 of 1, stride 0)">
    <bitfield id="txsta" width="3" begin="2" end="0" description="This field maps the CPSW txsta port to a physical slave thread." rwaccess="RW" />
    <bitfield id="txstb" width="3" begin="10" end="8" description="This field maps the CPSW txstb port to a physical slave thread." rwaccess="RW" />
  </register>
  <register id="PDSP_CONTROL" offset="0x01000" width="32" description="(1 of 6, stride 256)">
    <bitfield id="soft_rst_n" width="1" begin="0" end="0" description="Soft reset. When this bit is cleared, the PDSP will be reset. This bit is set back to 1 on the next cycle after it has been cleared." rwaccess="R" />
    <bitfield id="pdsp_enable" width="1" begin="1" end="1" description="PDSP enable: 0=PDSP is disabled, 1=PDSP is enabled" rwaccess="RW" />
    <bitfield id="pdsp_sleeping" width="1" begin="2" end="2" description="PDSP sleep indicator: 0=PDSP is not asleep, 1=PDSP us asleep" rwaccess="RW" />
    <bitfield id="counter_enable" width="1" begin="3" end="3" description="PDSP cycle counter enable: 0=Counters not enabled, 1=Counters enabled" rwaccess="RW" />
    <bitfield id="restart" width="1" begin="4" end="4" description="Causes PDSP to stop current operation gracefully and return to the PC reset value" rwaccess="RW" />
    <bitfield id="single_step" width="1" begin="8" end="8" description="Single step enable: 0=PDSP will free run when enabled, 1=PDSP will execute a single instruction and then the pdsp_enable bit will be cleared" rwaccess="RW" />
    <bitfield id="big_endian" width="1" begin="14" end="14" description="Big-endian input state" rwaccess="R" />
    <bitfield id="pdsp_state" width="1" begin="15" end="15" description="PDSP run state: 0=PDSP is halted, 1=PDSP is running" rwaccess="R" />
    <bitfield id="pcounter_rst_val" width="16" begin="31" end="16" description="Program counter reset value" rwaccess="RW" />
  </register>
  <register id="PDSP_STATUS" offset="0x01004" width="32" description="(1 of 6, stride 256)">
    <bitfield id="pcounter" width="16" begin="15" end="0" description="Current PDSP program counter" rwaccess="R" />
  </register>
  <register id="PDSP_WAKEUP_ENABLE" offset="0x01008" width="32" description="(1 of 6, stride 256)">
    <bitfield id="bitwise_enables" width="32" begin="31" end="0" description="Wakeup enables" rwaccess="RW" />
  </register>
  <register id="PDSP_CYCLE_COUNT" offset="0x0100c" width="32" description="(1 of 6, stride 256)">
    <bitfield id="cyclecount" width="32" begin="31" end="0" description="This value is incremented by 1 for every clock cycle during which the PDSP is enabled and the counter is enabled." rwaccess="RW" />
  </register>
  <register id="PDSP_STALL_COUNT" offset="0x01010" width="32" description="(1 of 6, stride 256)">
    <bitfield id="stallcount" width="32" begin="31" end="0" description="This value is incremented by 1 for every clock cycle during which the PDSP is enabled, the counter is enabled, and the PDSP was unable to fetch a new instruction for any reason." rwaccess="R" />
  </register>
  <register id="PDSP_CONSTANT_TABLE_BLOCK_INDEX_0" offset="0x01020" width="32" description="(1 of 6, stride 256)">
    <bitfield id="c24_blk_index" width="8" begin="7" end="0" description="PDSP constant entry 24 block index" rwaccess="RW" />
    <bitfield id="c25_blk_index" width="8" begin="23" end="16" description="PDSP constant entry 25 block index" rwaccess="RW" />
  </register>
  <register id="PDSP_CONSTANT_TABLE_BLOCK_INDEX_1" offset="0x01024" width="32" description="(1 of 6, stride 256)">
    <bitfield id="c26_blk_index" width="8" begin="7" end="0" description="PDSP constant entry 26 block index" rwaccess="RW" />
    <bitfield id="c27_blk_index" width="8" begin="23" end="16" description="PDSP constant entry 27 block index" rwaccess="RW" />
  </register>
  <register id="PDSP_CONSTANT_TABLE_PROG_PTR_0" offset="0x01028" width="32" description="(1 of 6, stride 256)">
    <bitfield id="c28_pointer" width="16" begin="15" end="0" description="PDSP constant entry 28 pointer" rwaccess="RW" />
    <bitfield id="c29_pointer" width="16" begin="31" end="16" description="PDSP constant entry 29 pointer" rwaccess="RW" />
  </register>
  <register id="PDSP_CONSTANT_TABLE_PROG_PTR_1" offset="0x0102c" width="32" description="(1 of 6, stride 256)">
    <bitfield id="c30_pointer" width="16" begin="15" end="0" description="PDSP constant entry 30 pointer" rwaccess="RW" />
    <bitfield id="c31_pointer" width="16" begin="31" end="16" description="PDSP constant entry 31 pointer" rwaccess="RW" />
  </register>
  <register id="PDSP_IGP" offset="0x02000" width="32" description="(1 of 6, stride 256)">
    <bitfield id="regN" width="32" begin="31" end="0" description="PDSP Internal GP Register N" rwaccess="RW" />
  </register>
  <register id="PDSP_ICTE" offset="0x02080" width="32" description="(1 of 6, stride 256)">
    <bitfield id="ct_entryN" width="32" begin="31" end="0" description="PDSP Internal Constants Table Entry N" rwaccess="R" />
  </register>
  <register id="TIMER_CNTRL_REG" offset="0x03000" width="32" description="(1 of 6, stride 256)">
    <bitfield id="go" width="1" begin="0" end="0" description="Timer start/stop: 0=stop, 1=start" rwaccess="RW" />
    <bitfield id="mode" width="1" begin="1" end="1" description="Timer count mode: 0=one-shot mode, 1=auto-load mode" rwaccess="RW" />
    <bitfield id="prescale" width="4" begin="5" end="2" description="Pre-scale value" rwaccess="RW" />
    <bitfield id="pse" width="1" begin="15" end="15" description="Pre-scale enable: 0=disabled, 1=enabled" rwaccess="RW" />
  </register>
  <register id="TIMER_LOAD_REG" offset="0x03004" width="32" description="(1 of 6, stride 256)">
    <bitfield id="count" width="16" begin="15" end="0" description="Value to be counted down from" rwaccess="W" />
  </register>
  <register id="TIMER_VALUE_REG" offset="0x03008" width="32" description="(1 of 6, stride 256)">
    <bitfield id="curr_count" width="16" begin="15" end="0" description="Current 16-bit count down value" rwaccess="R" />
  </register>
  <register id="TIMER_IRQ_REG" offset="0x0300c" width="32" description="(1 of 6, stride 256)">
    <bitfield id="interrupt" width="1" begin="0" end="0" description="Timer interrupt status: 0=inactive, 1=active" rwaccess="RW" />
  </register>
  <register id="INTD_REVISION" offset="0x07000" width="32" description="(1 of 1, stride 0)">
    <bitfield id="rev_minor" width="6" begin="5" end="0" description="Minor revision" rwaccess="R" />
    <bitfield id="rev_custom" width="2" begin="7" end="6" description="Custom revision" rwaccess="R" />
    <bitfield id="rev_major" width="3" begin="10" end="8" description="Major revision" rwaccess="R" />
    <bitfield id="rev_rtl" width="5" begin="15" end="11" description="RTL revisions" rwaccess="R" />
    <bitfield id="rev_module" width="12" begin="27" end="16" description="Module ID" rwaccess="R" />
    <bitfield id="rev_scheme" width="2" begin="31" end="30" description="Scheme" rwaccess="R" />
  </register>
  <register id="INTD_EOI" offset="0x07010" width="32" description="(1 of 1, stride 0)">
    <bitfield id="eoi_vector" width="8" begin="7" end="0" description="End of Interrupt Vector" rwaccess="RW" />
  </register>
  <register id="INTD_INTR_VECTOR" offset="0x07014" width="32" description="(1 of 1, stride 0)">
    <bitfield id="intr_vector" width="32" begin="31" end="0" description="Interrupt Vector Register" rwaccess="R" />
  </register>
  <register id="INTD_STATUS0" offset="0x07200" width="32" description="(1 of 1, stride 0)">
    <bitfield id="status_host_in_intr" width="32" begin="31" end="0" description="Status (write 1 to set) for in_intr" rwaccess="RW" />
  </register>
  <register id="INTD_STATUS1" offset="0x07204" width="32" description="(1 of 1, stride 0)">
    <bitfield id="status_host_lintr" width="32" begin="31" end="0" description="Status for lintr" rwaccess="R" />
  </register>
  <register id="INTD_STATUS2" offset="0x07208" width="32" description="(1 of 1, stride 0)">
    <bitfield id="status_host_cdma_starve" width="1" begin="0" end="0" description="Status (write 1 to set) for cdma_starve" rwaccess="RW" />
    <bitfield id="status_host_cpsw_stat0_syncd" width="1" begin="1" end="1" description="Status for cpsw_stat0" rwaccess="R" />
    <bitfield id="status_host_cpsw_stat1_syncd" width="1" begin="2" end="2" description="Status for cpsw_stat1" rwaccess="R" />
    <bitfield id="status_host_evnt_pend_syncd" width="1" begin="3" end="3" description="Status for evnt_pend" rwaccess="R" />
    <bitfield id="status_host_stat_over" width="1" begin="4" end="4" description="Status for stat_over" rwaccess="R" />
  </register>
  <register id="INTD_STATUS_CLR0" offset="0x07280" width="32" description="(1 of 1, stride 0)">
    <bitfield id="status_host_in_intr_clr" width="32" begin="31" end="0" description="Status (write 1 to clear) for in_intr" rwaccess="RW" />
  </register>
  <register id="INTD_STATUS_CLR2" offset="0x07288" width="32" description="(1 of 1, stride 0)">
    <bitfield id="status_host_cdma_starve_clr" width="1" begin="0" end="0" description="Status (write 1 to clear) for cdma_starve" rwaccess="RW" />
  </register>
  <register id="INTD_INTCNT" offset="0x07300" width="32" description="(1 of 1, stride 0)">
    <bitfield id="intcnt_host_cnt_in_intr" width="8" begin="7" end="0" description="Interrupt Count for host_cnt_in_intr (write to decrement)" rwaccess="R" />
  </register>
  <register id="INTD_INTR_VECTOR_HOST" offset="0x07480" width="32" description="(1 of 1, stride 0)">
    <bitfield id="intr_vector_host" width="32" begin="31" end="0" description="Interrupt Vector" rwaccess="R" />
  </register>
  <register id="PDSP_RAM" offset="0x10000" width="32" description="(1 of 6, stride 32768)">
    <bitfield id="RAM" width="32" begin="31" end="0" description="PDSP RAM" rwaccess="RW" />
  </register>
  <register id="PDSP_RAM" offset="0x40000" width="32" description="(1 of 4, stride 8192)">
    <bitfield id="RAM" width="32" begin="31" end="0" description="PDSP RAM" rwaccess="RW" />
  </register>
  <register id="PDSP_RAM" offset="0x00000" width="32" description="(1 of 2048, stride 4)">
    <bitfield id="RAM" width="32" begin="31" end="0" description="PDSP RAM" rwaccess="RW" />
  </register>
  <register id="STATS_REVISION" offset="0x06000" width="32" description="(1 of 1, stride 0)">
    <bitfield id="rev_scheme" width="2" begin="31" end="30" description="Scheme" rwaccess="R" />
    <bitfield id="module_id" width="14" begin="29" end="16" description="Module ID" rwaccess="R" />
    <bitfield id="revrtl" width="5" begin="15" end="11" description="RTL revision" rwaccess="R" />
    <bitfield id="revmaj" width="3" begin="10" end="8" description="Major revision" rwaccess="R" />
    <bitfield id="revmin" width="8" begin="7" end="0" description="Minor revision" rwaccess="R" />
  </register>
  <register id="STATS_SOFT_RESET" offset="0x06004" width="32" description="(1 of 1, stride 0)">
    <bitfield id="trigger" width="32" begin="31" end="0" description="Writing anything to this field causes all internal statistics to be cleared." rwaccess="W" />
  </register>
  <register id="STATS_INC_FLAGS" offset="0x06008" width="32" description="(1 of 1, stride 0)">
    <bitfield id="inc_flags" width="32" begin="31" end="0" description="Each flag corresponds to a statistic to increment. Bit 0 corresponds to the Statistic 0 register. The amount to increment is 1." rwaccess="W" />
  </register>
  <register id="STATS_CAPTURE" offset="0x0600c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="stat_capture" width="32" begin="31" end="0" description="Each flag corresponds to a statistic. Bit 0 corresponds to the Statistic 0 register. Writing any value to this register causes all 32 statistic values to be captured. For any bit that is set to 1, the corresponding statistic is also cleared after being" rwaccess="W" />
  </register>
  <register id="STATS_COUNT_N" offset="0x06020" width="32" description="(1 of 1, stride 0)">
    <bitfield id="stat_count" width="32" begin="31" end="0" description="Holds the 32-bit value of the statistic." rwaccess="R" />
  </register>
</module>
<!-- KeyStone2 Emupack version __KEYSTONE2_EMUPACK_VERSION__ -->
