<?xml version="1.0" encoding="UTF-8"?>
<module id="I2C" HW_revision="" XML_version="1.0" description="I2C IP module with peripheral and controller capabilities 
    " xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="setup_parser.xsd">
   <register acronym="TOAR" width="32" description="Target Own Address
This register consists of seven address bits that identify this I2C device on the I2C bus." id="TOAR" offset="0x0">
      <bitfield range="" begin="31" width="25" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Target own address. This field specifies bits a6 through a0 of the target address." id="OAR" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="TSTA" width="32" description="Target status
This register functions as a status register of the target." id="TSTA" offset="0x4">
      <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED3" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="First byte received.
This bit is only applicable when the TSTA.RREQ bit is set and is automatically cleared when data has been read from the TDR register.
Note: This bit is not used for target transmit operations." id="FBR" resetval="0x0">
         <bitenum id="SET" value="1" token="The first byte following the target&#39;s own address has been received." description="The first byte following the target&#39;s own address has been received."/>
         <bitenum id="CLR" value="0" token="The first byte following the target&#39;s own address has not been received" description="The first byte following the target&#39;s own address has not been received"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="This field reflects the transmit request status" id="TREQ" resetval="0x0">
         <bitenum id="SET" value="1" token="The I2C has been addressed as a target transmitter and is using clock stretching to delay the controller until data has been written to the TDR register" description="The I2C has been addressed as a target transmitter and is using clock stretching to delay the controller until data has been written to the TDR register"/>
         <bitenum id="CLR" value="0" token="No outstanding transmit request" description="No outstanding transmit request"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="This field reflects the receive request status." id="RREQ" resetval="0x0">
         <bitenum id="SET" value="1" token="The target has outstanding receive data from the external controller and is using clock stretching to delay the controller until data has been read from the TDR register" description="The target has outstanding receive data from the external controller and is using clock stretching to delay the controller until data has been read from the TDR register"/>
         <bitenum id="CLR" value="0" token="No outstanding receive data" description="No outstanding receive data"/>
      </bitfield>
   </register>
   <register acronym="TCTL" width="32" description="Target control
This registers functions as a target control register" id="TCTL" offset="0x4">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="This field sets the device active control
" id="DA" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable the target operation" description="Enable the target operation"/>
         <bitenum id="DIS" value="0" token="Disable the target operation" description="Disable the target operation"/>
      </bitfield>
   </register>
   <register acronym="TDR" width="32" description="Target data register 
This register contains the data to be transmitted when in the target transmit state, and the data received
when in the target receive state." id="TDR" offset="0x8">
      <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED8" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Data for transfer. This field contains the data for transfer during a target receive or a transmit operation. When written, the register data is used as transmit data. When read, this register returns the last data received. Data is stored until next update, either by a system write to the controller for transmit or by an external controller to the target for receive." id="DATA" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="TIMR" width="32" description="Target interrupt mask
This register controls whether a raw interrupt is promoted to a controller interrupt" id="TIMR" offset="0xc">
      <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED3" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="Stop condition interrupt mask" id="STOPIM" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable interrupt mask" description="Enable interrupt mask"/>
         <bitenum id="DIS" value="0" token="Disable interrupt mask" description="Disable interrupt mask"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Start condition interrupt mask" id="STARTIM" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable interrupt mask" description="Enable interrupt mask"/>
         <bitenum id="DIS" value="0" token="Disable interrupt mask" description="Disable interrupt mask"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Data interrupt mask" id="DATAIM" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable interrupt mask" description="Enable interrupt mask"/>
         <bitenum id="DIS" value="0" token="Disable interrupt mask" description="Disable interrupt mask"/>
      </bitfield>
   </register>
   <register acronym="TRIS" width="32" description="Target raw interrupt status
This register shows the unmasked interrupt status." id="TRIS" offset="0x10">
      <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED3" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="Stop condition raw interrupt status
This bit is cleared by writing a 1 to TICR.STOPIC." id="STOPRIS" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Start condition raw interrupt status
This bit is cleared by writing a 1 to TICR.STARTIC." id="STARTRIS" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Data raw interrupt status
This bit is cleared by writing a 1 to TICR.DATAIC." id="DATARIS" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
   </register>
   <register acronym="TMIS" width="32" description="Target Masked Interrupt Status
This register shows which interrupt is active (based on result from TRIS and TIMR registers)." id="TMIS" offset="0x14">
      <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED3" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="Stop condition masked interrupt status
This bit is cleared by writing a 1 to TICR.STOPIC." id="STOPMIS" resetval="0x0">
         <bitenum id="SET" value="1" token="Masked interrupt occured" description="Masked interrupt occured"/>
         <bitenum id="CLR" value="0" token="Masked interrupt did not occur" description="Masked interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Start condition masked interrupt status
This bit is cleared by writing a 1 to TICR.STARTIC." id="STARTMIS" resetval="0x0">
         <bitenum id="SET" value="1" token="Masked interrput occured" description="Masked interrput occured"/>
         <bitenum id="CLR" value="0" token="Masked interrupt did not occur" description="Masked interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Start condition masked interrupt status
This bit is cleared by writing a 1 to TICR.DATAIC." id="DATAMIS" resetval="0x0">
         <bitenum id="SET" value="1" token="Masked interrupt occured" description="Masked interrupt occured"/>
         <bitenum id="CLR" value="0" token="Masked interrupt did not occur" description="Masked interrupt did not occur"/>
      </bitfield>
   </register>
   <register acronym="TICR" width="32" description="Target Interrupt Clear
This register clears the raw interrupt TRIS" id="TICR" offset="0x18">
      <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED3" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="WO" description="Stop condition interrupt clear
" id="STOPIC" resetval="0x0">
         <bitenum id="EN" value="1" token="Clear interrupt
Writing 1 to this bit clears TRIS.STOPRIS and TMIS.STOPMIS" description="Clear interrupt
Writing 1 to this bit clears TRIS.STOPRIS and TMIS.STOPMIS"/>
         <bitenum id="DIS" value="0" token="No effect" description="No effect"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="WO" description="Start condition interrupt clear
" id="STARTIC" resetval="0x0">
         <bitenum id="EN" value="1" token="Clear interrupt
Writing 1 to this bit clears TRIS.STARTRIS and TMIS.STARTMIS" description="Clear interrupt
Writing 1 to this bit clears TRIS.STARTRIS and TMIS.STARTMIS"/>
         <bitenum id="DIS" value="0" token="No effect" description="No effect"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="Data interrupt clear
" id="DATAIC" resetval="0x0">
         <bitenum id="EN" value="1" token="Clear interrupt
Writing 1 to this bit clears TRIS.DATARIS and TMIS.DATAMIS" description="Clear interrupt
Writing 1 to this bit clears TRIS.DATARIS and TMIS.DATAMIS"/>
         <bitenum id="DIS" value="0" token="No effect" description="No effect"/>
      </bitfield>
   </register>
   <register acronym="CTA" width="32" description="Controller target address
This register contains seven address bits of the target to be accessed by the controller (a6-a0), and an CTA.RS bit determining if the next operation is a receive or transmit" id="CTA" offset="0x800">
      <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED8" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="7" end="1" rwaccess="RW" description="Controller target address
Defines which target is addressed for the transaction in controller mode" id="SA" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Receive or Send
This bit-field specifies the next operation with addressed target CTA.SA.
" id="RS" resetval="0x0">
         <bitenum id="EN" value="1" token="Receive data from target" description="Receive data from target"/>
         <bitenum id="DIS" value="0" token="Transmit/send data to target" description="Transmit/send data to target"/>
      </bitfield>
   </register>
   <register acronym="CSTA" width="32" description="Controller status
This register functions as a controller status register" id="CSTA" offset="0x804">
      <bitfield range="" begin="31" width="25" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="1" end="6" rwaccess="RO" description="Bus busy
Note:The bit changes based on the CCTRL.START and CCTRL.STOP conditions." id="BUSBSY" resetval="0x0">
         <bitenum id="SET" value="1" token="The bus is busy." description="The bus is busy."/>
         <bitenum id="CLR" value="0" token="The bus is idle." description="The bus is idle."/>
      </bitfield>
      <bitfield range="" begin="5" width="1" end="5" rwaccess="RO" description="This field specifies whether I2C is idle or not" id="IDLE" resetval="0x1">
         <bitenum id="SET" value="1" token="The controller is idle." description="The controller is idle."/>
         <bitenum id="CLR" value="0" token="The controller is not idle." description="The controller is not idle."/>
      </bitfield>
      <bitfield range="" begin="4" width="1" end="4" rwaccess="RO" description="The filed specifies the arbitration status" id="ARBLST" resetval="0x0">
         <bitenum id="SET" value="1" token="The controller lost arbitration." description="The controller lost arbitration."/>
         <bitenum id="CLR" value="0" token="The controller won arbitration." description="The controller won arbitration."/>
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="RO" description="This field contains Data acknowledge status" id="DATACKN" resetval="0x0">
         <bitenum id="SET" value="1" token="The transmitted data was not acknowledged" description="The transmitted data was not acknowledged"/>
         <bitenum id="CLR" value="0" token="The transmitted data was acknowledged" description="The transmitted data was acknowledged"/>
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="This field reflects the address acknowledge status" id="ADRACKN" resetval="0x0">
         <bitenum id="SET" value="1" token="The transmitted address was not acknowledged" description="The transmitted address was not acknowledged"/>
         <bitenum id="CLR" value="0" token="The transmitted address was acknowledged" description="The transmitted address was acknowledged"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="This field reflects the error status" id="ERR" resetval="0x0">
         <bitenum id="SET" value="1" token="An error occurred with the last operation" description="An error occurred with the last operation"/>
         <bitenum id="CLR" value="0" token="No error was detected on the last operation" description="No error was detected on the last operation"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="This field reflects the I2C busy status
Note: The I2C controller requires four CLKSVT clock cycles to assert the BUSY status after I2C controller operation has been initiated through a write into CCTL register.
Hence after programming CCTL register, application is requested to wait for four CLKSVT clock cycles before issuing a controller status inquiry through a read from CSTA register. Any prior inquiry would result in wrong status being reported." id="BUSY" resetval="0x0">
         <bitenum id="SET" value="1" token="The controller is busy" description="The controller is busy"/>
         <bitenum id="CLR" value="0" token="The controller is idle" description="The controller is idle"/>
      </bitfield>
   </register>
   <register acronym="CCTL" width="32" description="Controller control
This register functions as a controller control register" id="CCTL" offset="0x804">
      <bitfield range="" begin="31" width="28" end="4" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED4" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="WO" description="This field is to enable the data acknowledge.
Note:This bit-field must be cleared when the I2C bus controller requires no further data to be transmitted from the target transmitter." id="ACK" resetval="0x0">
         <bitenum id="EN" value="1" token="The received data byte is acknowledged automatically by the controller" description="The received data byte is acknowledged automatically by the controller"/>
         <bitenum id="DIS" value="0" token="The received data byte is not acknowledged automatically by the controller" description="The received data byte is not acknowledged automatically by the controller"/>
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="WO" description="This field is to set stop condition .
Note: This bit-field determines if the cycle stops at the end of the data cycle or continues on to a repeated start condition." id="STOP" resetval="0x0">
         <bitenum id="EN" value="1" token="The controller generates the stop condition" description="The controller generates the stop condition"/>
         <bitenum id="DIS" value="0" token="The controller does not generate the stop condition" description="The controller does not generate the stop condition"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="WO" description="This field is to set start or repeated start condition." id="START" resetval="0x0">
         <bitenum id="EN" value="1" token="The controller generates the start condition." description="The controller generates the start condition."/>
         <bitenum id="DIS" value="0" token="The controller does not generate the start condition" description="The controller does not generate the start condition"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="This field is to set the controller enable." id="RUN" resetval="0x0">
         <bitenum id="EN" value="1" token="The controller is enabled to transmit or receive data" description="The controller is enabled to transmit or receive data"/>
         <bitenum id="DIS" value="0" token="The controller is disabled." description="The controller is disabled."/>
      </bitfield>
   </register>
   <register acronym="CDR" width="32" description="Controller data
This register contains the data to be transmitted when in the controller transmit state and the data received when in the controller receive state." id="CDR" offset="0x808">
      <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED8" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="When Read: Last RX Data is returned
When Written: Data is transferred during TX transaction" id="DATA" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="CTPR" width="32" description="Controller timer period
This register specifies the period of the SCL clock." id="CTPR" offset="0x80c">
      <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED8" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RW" description="Must be set to 0 to set CTPR.TPR. If set to 1, a write to CTPR.TPR will be ignored." id="TPR_7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="SCL clock period
This field specifies the period of the SCL clock.
SCL_PRD = 2*(1+TPR)*(SCL_LP + SCL_HP)*CLK_PRD, where:
SCL_PRD is the SCL line period (I2C clock).
TPR is the timer period register value (range of 1 to 127)
SCL_LP is the SCL low period (fixed at 6).
SCL_HP is the SCL high period (fixed at 4).
CLK_PRD is the CLKSVT period in ns." id="TPR" resetval="0x1">
      </bitfield>
   </register>
   <register acronym="CIMR" width="32" description="Controller interrupt mask
This register controls whether a raw interrupt is promoted to a controller interrupt." id="CIMR" offset="0x810">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Interrupt mask" id="IM" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable interrupt mask" description="Enable interrupt mask"/>
         <bitenum id="DIS" value="0" token="Disable interrupt mask" description="Disable interrupt mask"/>
      </bitfield>
   </register>
   <register acronym="CRIS" width="32" description="Controller raw interrupt status
This register shows the unmasked interrupt status." id="CRIS" offset="0x814">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Raw interrupt status
This bit is cleared by writing 1 to CICR.IC bit." id="RIS" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
   </register>
   <register acronym="CMIS" width="32" description="Controller masked interrupt status
This register shows which interrupt is active (based on result from CRIS and CIMR registers)." id="CMIS" offset="0x818">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Masked interrupt status
This bit is cleared by writing 1 to CICR.IC bit." id="MIS" resetval="0x0">
         <bitenum id="SET" value="1" token="Masked interrupt occured" description="Masked interrupt occured"/>
         <bitenum id="CLR" value="0" token="Masked interrupt did not occur" description="Masked interrupt did not occur"/>
      </bitfield>
   </register>
   <register acronym="CICR" width="32" description="Controller interrupt clear
This register clears the raw and masked interrupt." id="CICR" offset="0x81c">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="Interrupt clear " id="IC" resetval="0x0">
         <bitenum id="EN" value="1" token="Clear Interrupt
Writing 1 to this bit clears CRIS.RIS and CMIS.MIS." description="Clear Interrupt
Writing 1 to this bit clears CRIS.RIS and CMIS.MIS."/>
         <bitenum id="DIS" value="0" token="No effect" description="No effect"/>
      </bitfield>
   </register>
   <register acronym="CCR" width="32" description="Controller Configuration
This register configures the mode (Controller or Target) and sets the interface for test mode loopback." id="CCR" offset="0x820">
      <bitfield range="" begin="31" width="26" end="6" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED6" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="I2C target function enable
                        " id="TFE" resetval="0x0">
         <bitenum id="EN" value="1" token="Target mode enabled" description="Target mode enabled"/>
         <bitenum id="DIS" value="0" token="Target mode disabled" description="Target mode disabled"/>
      </bitfield>
      <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="I2C controller function enable" id="CFE" resetval="0x0">
         <bitenum id="EN" value="1" token="Controller mode enabled" description="Controller mode enabled"/>
         <bitenum id="DIS" value="0" token="Controller mode disabled" description="Controller mode disabled"/>
      </bitfield>
      <bitfield range="" begin="3" width="3" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="I2C loopback" id="LPBK" resetval="0x0">
         <bitenum id="EN" value="1" token="Test mode (Loopback operation) enabled" description="Test mode (Loopback operation) enabled"/>
         <bitenum id="DIS" value="0" token="Test mode (Loopback operation) disabled" description="Test mode (Loopback operation) disabled"/>
      </bitfield>
   </register>
</module>
