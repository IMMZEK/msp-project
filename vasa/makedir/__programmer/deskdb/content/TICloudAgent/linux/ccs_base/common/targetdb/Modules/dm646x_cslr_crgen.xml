<?xml version="1.0" encoding="UTF-8"?>
<module id="CRGEN" HW_revision="" XML_version="1" description="CRGEN Register">
     <register id="PID" acronym="PID" offset="0x0000" width="32" description="CRGEN PID Register">
<bitfield id="SCHEME" width="2" begin="31" end="30" resetval="1" description="Used to distinguish between old scheme and current. Spare bit to encode future schemes. Fixed to be &quot;01&quot;(b)." range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="2" begin="29" end="28" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FUNC" width="12" begin="27" end="16" resetval="3083" description="Function indicates an S/W compatible module family. If there is not level of S/W compatibility, a new Func number (and hence PID) should be assigned." range="" rwaccess="R"></bitfield>
<bitfield id="RTL" width="5" begin="15" end="11" resetval="0" description="Indicates RTL version, and must be easily ECO-able or controlled during fabrication.  Ideally through a top level metal mask or e-fuse. This number is maintained / owned by IP design owner. In present design, fixed to be 0." range="" rwaccess="R"></bitfield>
<bitfield id="MAJOR" width="3" begin="10" end="8" resetval="0" description="Local revision number which should be owned by module designer. This number should be updated for each major design change (such as bug fix, and memory size change etcÂ…). In present design, fixed to be 0." range="" rwaccess="R"></bitfield>
<bitfield id="CUSTOM" width="2" begin="7" end="6" resetval="0" description="Indicates a special version for a particular device. Consequence of use may avoid use of standard chip support library (CSL). In this module, fixed to be 0" range="" rwaccess="R"></bitfield>
<bitfield id="MINOR" width="6" begin="5" end="0" resetval="0" description="Local revision number which should be owned by module designer. This number should be updated for each small design change. In present design, fixed to be 0." range="" rwaccess="R"></bitfield>
</register>
     <register id="CTRL" acronym="CTRL" offset="0x0004" width="32" description="CRGEN  Control Register">
<bitfield id="_RESV_1" width="29" begin="31" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="STC_LOAD_MODE" width="1" begin="2" end="2" resetval="0" description="This register defines loading mode for STC counter.  0 : Load PCR value on first loading pulse from SPIO  1 : Load PCR value on each loading pulse from SPIO                    " range="" rwaccess="RW">
<bitenum id="ZERO" value="0" token="ZERO" description="Load PCR value on first loading pulse from SPIO" />
<bitenum id="ONE" value="1" token="ONE" description="Load PCR value on each loading pulse from SPIO" />
</bitfield>
<bitfield id="STC_LOAD_SEL" width="1" begin="1" end="1" resetval="0" description="This register defines hold timing select for STC value.                                                                                          0 : Pos edge of spio_i_pkt_strt of PCR packet (default)                                           1 : Pos edge of spio_crgen_pcr_en                                              " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Pos edge of spio_i_pkt_strt of PCR packet (default)" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Pos edge of spio_crgen_pcr_en" />
</bitfield>
<bitfield id="MODULE_EN" width="1" begin="0" end="0" resetval="0" description="This bit can activate the module. The first &quot;PCR loading&quot; pulse after activating this register bit is used for initialize pulse of STC counter value. If user would like to stall this module when the module is activated, user needs to configure value of this bit to be 0. 0: CRGEN module doesn't work (stops). 1: CRGEN module works.   " range="" rwaccess="RW">
<bitenum id="INACTIVATE" value="0" token="INACTIVATE" description="CRGEN module doesn't work (stops)." />
<bitenum id="ACTIVATE" value="1" token="ACTIVATE" description="CRGEN module works." />
</bitfield>
</register>
     <register id="STC_PRESENT_VALUE_H" acronym="STC_PRESENT_VALUE_H" offset="0x0008" width="32" description="STC present base counter value  Register">
<bitfield id="_RESV_1" width="15" begin="31" end="17" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="STC_BASE_H" width="17" begin="16" end="0" resetval="0" description="STC base counter value which are driven in 90[KHz]. Higher 17 bits (32 to 16) are reflected to this register bits" range="" rwaccess="R"></bitfield>
</register>
     <register id="STC_PRESENT_VALUE_L" acronym="STC_PRESENT_VALUE_L" offset="0x000C" width="32" description="STC present base counter value  Register">
<bitfield id="STC_BASE_L" width="16" begin="31" end="16" resetval="0" description="STC base counter value which are driven in 90[KHz]. Lower 16 bits (15 to 0) are reflected to this register bits." range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="7" begin="15" end="9" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="STC_EXTENSION" width="9" begin="8" end="0" resetval="0" description="STC extension counter value which is driven in 27[MHz] (maximum counter value is 299(unsigned) = 0x12B)." range="" rwaccess="R"></bitfield>
</register>
     <register id="STC_VALUE_H" acronym="STC_VALUE_H" offset="0x0010" width="32" description="STC base counter value  Register">
<bitfield id="_RESV_1" width="15" begin="31" end="17" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="STC_BASE_H" width="17" begin="16" end="0" resetval="0" description="STC base counter value which are driven in 90[KHz]. Higher 17 bits (32 to 16) are reflected to this register bits." range="" rwaccess="R"></bitfield>
</register>
     <register id="STC_VALUE_L" acronym="STC_VALUE_L" offset="0x0014" width="32" description="STC base counter value  Register">
<bitfield id="STC_BASE_L" width="16" begin="31" end="16" resetval="0" description="STC base counter value which are driven in 90[KHz]. Lower 16 bits (15 to 0) are reflected to this register bits" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="7" begin="15" end="9" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="STC_EXTENSION" width="9" begin="8" end="0" resetval="0" description="STC extension counter value which is driven in 27[MHz] (maximum counter value is 299(unsigned) = 0x12B)." range="" rwaccess="R"></bitfield>
</register>
     <register id="PCR_VALUE_H" acronym="PCR_VALUE_H" offset="0x0018" width="32" description="PCR base counter value  Register">
<bitfield id="_RESV_1" width="15" begin="31" end="17" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PCR_BASE_H" width="17" begin="16" end="0" resetval="0" description="PCR base counter value which are driven in 90[KHz]. Higher 17 bits (32 to 16) are reflected to this register bits." range="" rwaccess="R"></bitfield>
</register>
     <register id="PCR_VALUE_L" acronym="PCR_VALUE_L" offset="0x001C" width="32" description="PCR base counter value  Register">
<bitfield id="PCR_BASE_L" width="16" begin="31" end="16" resetval="0" description="PCR base counter value which are driven in 90[KHz]. Lower 16 bits (15 to 0) are reflected to this register bits." range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="7" begin="15" end="9" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PCR_EXTENSION" width="9" begin="8" end="0" resetval="0" description="PCR extension counter value which is driven in 27[MHz] (maximum counter value is 299(unsigned) = 0x12B)." range="" rwaccess="R"></bitfield>
</register>
     <register id="PCR_PACKET_STATUS" acronym="PCR_PACKET_STATUS" offset="0x0020" width="32" description="PCR packet status Register">
<bitfield id="_RESV_1" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PCR_PKT_STATUS" width="4" begin="3" end="0" resetval="0" description="This register shows the status on PCR packet. Status value is detected by &quot;PCR loading pulse&quot; signal which comes from the SPIO module.   [0] : Sync Byte Error flag.  1:Sync Byte Error,  0: No Error   [1] : Transport Error Indicator in TS Header   [2] : Discontinuity Indicator in adaptation field   [3] : Fixed to &quot;0&quot; " range="" rwaccess="R"></bitfield>
</register>
     <register id="LOOP_FILTER" acronym="LOOP_FILTER" offset="0x0024" width="32" description="Loop Filter Register">
<bitfield id="_RESV_1" width="5" begin="31" end="27" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="LPF_IN" width="11" begin="26" end="16" resetval="0" description="This register is prepared for reflecting subtraction result between PCR value and STC counter value. Result data is clipped into -1024~+1023 (11 bits)." range="" rwaccess="R"></bitfield>
<bitfield id="LPF_OUT" width="16" begin="15" end="0" resetval="0" description="This register is prepared for configuring loop filter output data which is derived from calculation result of ARM processor (-32768~+32767)" range="" rwaccess="RW"></bitfield>
</register>
     <register id="STC_INIT_OFST_H" acronym="STC_INIT_OFST_H" offset="0x0028" width="32" description="STC base counter offset value upper Register">
<bitfield id="_RESV_1" width="15" begin="31" end="17" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="STC_BASE_H" width="17" begin="16" end="0" resetval="0" description="STC base counter value which are driven in 90[KHz]. Higher 17 bits (32 to 16) are reflected to this register bits" range="" rwaccess="RW"></bitfield>
</register>
     <register id="STC_INIT_OFST_L" acronym="STC_INIT_OFST_L" offset="0x002C" width="32" description="STC base counter offset value lower Register">
<bitfield id="STC_BASE_L" width="16" begin="31" end="16" resetval="0" description="STC base counter value which are driven in 90[KHz]. Lower 16 bits (15 to 0) are reflected to this register bits." range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="7" begin="15" end="9" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="STC_EXTENSION" width="9" begin="8" end="0" resetval="0" description="STC extension counter value which is driven in 27[MHz] (maximum counter value is 299(unsigned) = 0x12B)." range="" rwaccess="RW"></bitfield>
</register>
     <register id="INTEN" acronym="INTEN" offset="0x0040" width="32" description="Interrupt Enable register">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INTEN" width="1" begin="0" end="0" resetval="0" description="This bit controls preparation to activate interrupt from this module to ARM processor. If you would like to activate function of asserting interrupt to ARM, you should configure this bit to 1, and then you should also configure following &quot;crgen_inten_set&quot; register bit to 1.  0: Interrupt disable. 1: Interrupt enable." range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Interrupt disable." />
<bitenum id="ENABLE" value="1" token="ENABLE" description=" Interrupt enable" />
</bitfield>
</register>
     <register id="INTEN_SET" acronym="INTEN_SET" offset="0x0044" width="32" description="Interrupt Enable register">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INTEN_SET" width="1" begin="0" end="0" resetval="0" description="If user would like to activate interrupt assertion function to ARM, user should configure this register bit to 1 with activating above &quot;crgen_inten&quot;. During activated, this register value keeps 1. Please notice that this register has effect only when crgen_inten is activated. Otherwise, any configured value to this register is ignored, and register value stays at 0. User can write only '1', and cannot write '0' to this register. If user write 1 to &quot;crgen_inten_clr&quot; during this bit being activated, this bit is internally cleared to 0.   0: Interrupt inactivated (cannot write 0).  1: Interrupt activated." range="" rwaccess="RW">
<bitenum id="SET" value="1" token="SET" description="Interrupt activated." />
</bitfield>
</register>
     <register id="INTEN_CLR" acronym="INTEN_CLR" offset="0x0048" width="32" description="Interrupt Clear register">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INTEN_CLR" width="1" begin="0" end="0" resetval="0" description="If user would like to inactivate interrupt assertion function to ARM, user should configure this register bit to 1 with activating above &quot;crgen_inten&quot; and &quot;crgen_inten_set&quot;. Please notice that this register has effect only when crgen_inten and crgen_inten_set are activated. Otherwise, any configured value to this register is ignored. Also, this register bit is write only register and user can write this register only value of 1 (cannot write 0).  0: No change.  1: Interrupt inactivated (cannot be read by ARM)." range="" rwaccess="W">
<bitenum id="CLR" value="1" token="CLR" description="Interrupt activated." />
</bitfield>
</register>
     <register id="STATUS" acronym="STATUS" offset="0x004C" width="32" description="Status register">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PCR_DETECT" width="1" begin="0" end="0" resetval="0" description="Interrupt status register. This register works even if following interrupt register is inactivated. Please notice that this register is non-writable (read only). If you would like to clear this register, you should configure bit[0] in CRGEN_status_CLR register to 1. This status value is internally cleared if bit[0] in CRGEN_status_CLR is configured to 1.   0: PCR loading pulse is not detected so far.  1: PCR loading pulse is detected, and not checked yet." range="" rwaccess="R">
<bitenum id="NOTDETECT" value="0" token="NOTDETECT" description="PCR loading pulse is not detected so far." />
<bitenum id="DETECT" value="1" token="DETECT" description="PCR loading pulse is detected, and not checked yet" />
</bitfield>
</register>
     <register id="STATUS_CLR" acronym="STATUS_CLR" offset="0x0050" width="32" description="Status register">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PCR_DETECT_STATUS_CLR" width="1" begin="0" end="0" resetval="0" description="Interrupt status clear register bit. If user would like to status register &quot;pcr_detect&quot;, user should configure this register to be 1. Please notice that this register is &quot;write-only&quot;, and written value cannot be read by ARM.    0: No change.  1: pcr_detect register clear (write only: cannot be read)" range="" rwaccess="W">
<bitenum id="CLR" value="1" token="CLR" description="pcr_detect register clear" />
</bitfield>
</register>
     <register id="EMULATION_CTRL" acronym="EMULATION_CTRL" offset="0x0054" width="32" description="Status register">
<bitfield id="_RESV_1" width="30" begin="31" end="2" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EMULSUSP_SOFT" width="1" begin="1" end="1" resetval="0" description="This bit defines whether or not a soft or hard stop is initiated whenever the &quot;emususp&quot; is asserted.   0: Hard Stop (the CRGEN module immediately stops processing).  1: Soft Stop (the CRGEN module stops processing after next PCR loading pulse is detected)." range="" rwaccess="RW">
<bitenum id="HARD_STOP" value="0" token="HARD_STOP" description="Hard Stop" />
<bitenum id="SOFT_STOP" value="1" token="SOFT_STOP" description="Soft Stop" />
</bitfield>
<bitfield id="EMULSUSP_FREE" width="1" begin="0" end="0" resetval="0" description="This bit controls whether or not the peripheral will respond to the emulation suspend signal that it has been programmed to monitor.   0: functions based on configuration of &quot;crgen_emulsusp_soft&quot;.  1: ignores any emulation suspend signal (non-stop)." range="" rwaccess="RW">
<bitenum id="STOP" value="0" token="STOP" description="functions based on configuration of &quot;crgen_emulsusp_soft&quot;." />
<bitenum id="NON_STOP" value="1" token="NON_STOP" description="ignores any emulation suspend signal (non-stop)" />
</bitfield>
</register>
</module>
