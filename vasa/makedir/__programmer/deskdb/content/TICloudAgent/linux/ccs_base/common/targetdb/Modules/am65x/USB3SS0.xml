<module name="USB3SS0" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="USB_REVISION" acronym="USB_REVISION" offset="0x0" width="32" description="IP Revision Identifier (X.Y.R) Used by software to track features, bugs, and compatibility">
    <bitfield id="SCHEME" width="2" begin="31" end="30" resetval="0x1" description="Scheme" range="" rwaccess="R"/>
    <bitfield id="BU" width="2" begin="29" end="28" resetval="0x2" description="bu" range="" rwaccess="R"/>
    <bitfield id="FUNC" width="12" begin="27" end="16" resetval="0x820" description="Module ID" range="" rwaccess="R"/>
    <bitfield id="R_RTL" width="5" begin="15" end="11" resetval="0x12" description="RTL version" range="" rwaccess="R"/>
    <bitfield id="X_MAJOR" width="3" begin="10" end="8" resetval="0x1" description="Major version" range="" rwaccess="R"/>
    <bitfield id="CUSTOM" width="2" begin="7" end="6" resetval="0x0" description="Custom version" range="" rwaccess="R"/>
    <bitfield id="Y_MINOR" width="6" begin="5" end="0" resetval="0x0" description="Minor version" range="" rwaccess="R"/>
  </register>
  <register id="USB_SYSCONFIG" acronym="USB_SYSCONFIG" offset="0x10" width="32" description="Controls various parameters of the master and slave interfaces.">
    <bitfield id="RESERVED" width="15" begin="31" end="17" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PME_EN" width="1" begin="16" end="16" resetval="0x0" description="Enable signal for the pme_generation. When the Run/Stop bit of the USB Command Register is cleared during USB suspend mode, the core cannot generate event and cannot assert regular interrupt. In this case, the core asserts pme_generation signal to report any wakeup condition if PME_EN is high." range="" rwaccess="RW"/>
    <bitfield id="HSIC_SEL" width="1" begin="15" end="15" resetval="0x0" description="Select USB2PHY when 0, HSIC when 1" range="" rwaccess="RW"/>
    <bitfield id="CEGPIOA" width="1" begin="14" end="14" resetval="0x0" description="GPO mode data for CE." range="" rwaccess="RW"/>
    <bitfield id="CEGPIOGZ" width="1" begin="13" end="13" resetval="0x0" description="CE GPO output buffer control." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="13" begin="12" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="USB_IRQ_STATUS_RAW_MAIN_i" acronym="USB_IRQ_STATUS_RAW_MAIN_i" offset="0x20" width="32" description="The IRQ_STATUS_RAW_MAIN_i register allows the usbss interrupt sources to be manually set when writing a 1 to a specific bit. Parameter i ranges from 0 to 15. Offset = 20h + (i * 10h), where: i = 0h to Fh">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IRQ_STATUS_RAW_MAIN" width="1" begin="0" end="0" resetval="0x0" description="Write 0: No action Write 1: Set event Read 0: No event pending Read 1: Event pending" range="" rwaccess="RW1S"/>
  </register>
  <register id="USB_IRQ_STATUS_MAIN_i" acronym="USB_IRQ_STATUS_MAIN_i" offset="0x24" width="32" description="The IRQ_STATUS_MAIN_i register allows the usbss interrupt sources to be manually cleared when writing a 1 to a specific bit. Parameter i ranges from 0 to 15. Offset = 24h + (i * 10h), where: i = 0h to Fh">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IRQ_STATUS_MAIN" width="1" begin="0" end="0" resetval="0x0" description="Write 0: No action Write 1: Clear event Read 0: No event pending Read 1: Event pending" range="" rwaccess="RW1C"/>
  </register>
  <register id="USB_IRQ_EOI_MISC" acronym="USB_IRQ_EOI_MISC" offset="0x42C" width="32" description="The End of Interrupt (EOI) MISC Register allows the CPU to acknowledge completion of an interrupt by writing to the EOI for MISC interrupt sources. An eoi_write signal will be generated and another interrupt will be triggered if interrupt sources remain. This register will be reset one cycle after it has been written to. The EOI register is used to re-trigger the pulse interrupt signal to ensure that any nested interrupt events are serviced. The software interrupt handler must write to the EOI register at the end of the current interrupt processing routine, so that new events can re-trigger the pulse interrupt signal again. For level interrupt signals the EOI register is not functional and must not be used.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="EOI_MISC" width="1" begin="0" end="0" resetval="0x0" description="Write 1 to flag End Of Interrupt 'MISC'" range="" rwaccess="RW1S"/>
  </register>
  <register id="USB_IRQ_STATUS_RAW_MISC" acronym="USB_IRQ_STATUS_RAW_MISC" offset="0x430" width="32" description="The register allows the usbss interrupt sources to be manually set when writing a 1 to a specific bit. Write 0: No action Write 1: Set event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="VBUSVALID_CHANGE" width="1" begin="22" end="22" resetval="0x0" description="Set when VBUSVALID changes state" range="" rwaccess="RW1S"/>
    <bitfield id="AVALID_CHANGE" width="1" begin="21" end="21" resetval="0x0" description="Set when AVALID changes state" range="" rwaccess="RW1S"/>
    <bitfield id="BVALID_CHANGE" width="1" begin="20" end="20" resetval="0x0" description="Set when BVALID changes state" range="" rwaccess="RW1S"/>
    <bitfield id="SESSEND_CHANGE" width="1" begin="19" end="19" resetval="0x0" description="Set when SESSEND changes state" range="" rwaccess="RW1S"/>
    <bitfield id="AXI_ERROR" width="1" begin="18" end="18" resetval="0x0" description="Set by host_system_err when HW detects an error response to AXI master. USB_USBCMD[3] HSEE must be set in the controller. Error reflected in the controller USB_USBSTS[2] HSE field." range="" rwaccess="RW1S"/>
    <bitfield id="RESERVED" width="18" begin="17" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="USB_IRQ_STATUS_MISC" acronym="USB_IRQ_STATUS_MISC" offset="0x434" width="32" description="The register allows the usbss interrupt sources to be manually cleared when writing a 1 to a specific bit. Write 0: No action Write 1: Clear event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="VBUSVALID_CHANGE" width="1" begin="22" end="22" resetval="0x0" description="Set when VBUSVALID changes state" range="" rwaccess="RW1C"/>
    <bitfield id="AVALID_CHANGE" width="1" begin="21" end="21" resetval="0x0" description="Set when AVALID changes state" range="" rwaccess="RW1C"/>
    <bitfield id="BVALID_CHANGE" width="1" begin="20" end="20" resetval="0x0" description="Set when BVALID changes state" range="" rwaccess="RW1C"/>
    <bitfield id="SESSEND_CHANGE" width="1" begin="19" end="19" resetval="0x0" description="Set when SESSEND changes state" range="" rwaccess="RW1C"/>
    <bitfield id="AXI_ERROR" width="1" begin="18" end="18" resetval="0x0" description="Set by host_system_err when HW detects an error response to AXI master. USB_USBCMD[3] HSEE must be set in the controller. Error reflected in the controller USB_USBSTS[2] HSE field." range="" rwaccess="RW1C"/>
    <bitfield id="RESERVED" width="18" begin="17" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="USB_IRQ_ENABLE_SET_MISC" acronym="USB_IRQ_ENABLE_SET_MISC" offset="0x438" width="32" description="The register allows the usbss interrupt sources to be manually enabled when writing a 1 to a specific bit. Write 0: No action Write 1: Enable event Read 0: Event is disabled Read 1: Event is enabled">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="VBUSVALID_CHANGE" width="1" begin="22" end="22" resetval="0x0" description="Event enable set" range="" rwaccess="RW1S"/>
    <bitfield id="AVALID_CHANGE" width="1" begin="21" end="21" resetval="0x0" description="Event enable set" range="" rwaccess="RW1S"/>
    <bitfield id="BVALID_CHANGE" width="1" begin="20" end="20" resetval="0x0" description="Event enable set" range="" rwaccess="RW1S"/>
    <bitfield id="SESSEND_CHANGE" width="1" begin="19" end="19" resetval="0x0" description="Event enable set" range="" rwaccess="RW1S"/>
    <bitfield id="AXI_ERROR" width="1" begin="18" end="18" resetval="0x0" description="Event enable set" range="" rwaccess="RW1S"/>
    <bitfield id="RESERVED" width="18" begin="17" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="USB_IRQ_ENABLE_CLR_MISC" acronym="USB_IRQ_ENABLE_CLR_MISC" offset="0x43C" width="32" description="The register allows the usbss interrupt sources to be manually disabled when writing a 1 to a specific bit. Write 0: No action Write 1: Disable event Read 0: Event is disabled Read 1: Event is enabled">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="VBUSVALID_CHANGE" width="1" begin="22" end="22" resetval="0x0" description="Event enable clear" range="" rwaccess="RW1C"/>
    <bitfield id="AVALID_CHANGE" width="1" begin="21" end="21" resetval="0x0" description="Event enable clear" range="" rwaccess="RW1C"/>
    <bitfield id="BVALID_CHANGE" width="1" begin="20" end="20" resetval="0x0" description="Event enable clear" range="" rwaccess="RW1C"/>
    <bitfield id="SESSEND_CHANGE" width="1" begin="19" end="19" resetval="0x0" description="Event enable clear" range="" rwaccess="RW1C"/>
    <bitfield id="AXI_ERROR" width="1" begin="18" end="18" resetval="0x0" description="Event enable clear" range="" rwaccess="RW1C"/>
    <bitfield id="RESERVED" width="18" begin="17" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="USB_IRQ_STATUS_RAW_OTG" acronym="USB_IRQ_STATUS_RAW_OTG" offset="0x450" width="32" description="The Register allows the OTG interrupt source to be manually triggered when writing a 1 to a specific bit. A read of this register returns the interrupt event pending value. General actions per bit: Write 0: No action Write 1: Set event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="OTG_EVNT" width="1" begin="0" end="0" resetval="0x0" description="Interrupt raw status for OTG event" range="" rwaccess="RW1S"/>
  </register>
  <register id="USB_IRQ_STATUS_OTG" acronym="USB_IRQ_STATUS_OTG" offset="0x454" width="32" description="The Register allows the OTG source to be manually cleared when writing a 1 to a specific bit. A read of this register returns the interrupt event pending value. General actions per bit: Write 0: No action Write 1: Clear event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="OTG_EVNT" width="1" begin="0" end="0" resetval="0x0" description="Interrupt status for OTG event" range="" rwaccess="RW1C"/>
  </register>
  <register id="USB_IRQ_STATUS_RAW_ADP" acronym="USB_IRQ_STATUS_RAW_ADP" offset="0x460" width="32" description="The Register allows the ADP interrupt source to be manually triggered when writing a 1 to a specific bit. A read of this register returns the interrupt event pending value. General actions per bit: Write 0: No action Write 1: Set event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADP_EVNT" width="1" begin="0" end="0" resetval="0x0" description="Interrupt raw status for ADP event" range="" rwaccess="RW1S"/>
  </register>
  <register id="USB_IRQ_STATUS_ADP" acronym="USB_IRQ_STATUS_ADP" offset="0x464" width="32" description="The Register allows the ADP source to be manually cleared when writing a 1 to a specific bit. A read of this register returns the interrupt event pending value. General actions per bit: Write 0: No action Write 1: Clear event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADP_EVNT" width="1" begin="0" end="0" resetval="0x0" description="Interrupt status for ADP event" range="" rwaccess="RW1C"/>
  </register>
  <register id="USB_IRQ_STATUS_RAW_BC" acronym="USB_IRQ_STATUS_RAW_BC" offset="0x470" width="32" description="The Register allows the BC interrupt source to be manually triggered when writing a 1 to a specific bit. A read of this register returns the interrupt event pending value. General actions per bit: Write 0: No action Write 1: Set event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BC_EVNT" width="1" begin="0" end="0" resetval="0x0" description="Interrupt raw status for BC event" range="" rwaccess="RW1S"/>
  </register>
  <register id="USB_IRQ_STATUS_BC" acronym="USB_IRQ_STATUS_BC" offset="0x474" width="32" description="The Register allows the BC source to be manually cleared when writing a 1 to a specific bit. A read of this register returns the interrupt event pending value. General actions per bit: Write 0: No action Write 1: Clear event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BC_EVNT" width="1" begin="0" end="0" resetval="0x0" description="Interrupt status for BC event" range="" rwaccess="RW1C"/>
  </register>
  <register id="USB_IRQ_STATUS_RAW_PME_GEN" acronym="USB_IRQ_STATUS_RAW_PME_GEN" offset="0x480" width="32" description="The Register allows the PME_GEN interrupt source to be manually triggered when writing a 1 to a specific bit. A read of this register returns the interrupt event pending value. General actions per bit: Write 0: No action Write 1: Set event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PME_GEN_EVNT" width="1" begin="0" end="0" resetval="0x0" description="Interrupt raw status for PME_GEN event" range="" rwaccess="RW1S"/>
  </register>
  <register id="USB_IRQ_STATUS_PME_GEN" acronym="USB_IRQ_STATUS_PME_GEN" offset="0x484" width="32" description="The Register allows the PME_GEN source to be manually cleared when writing a 1 to a specific bit. A read of this register returns the interrupt event pending value. General actions per bit: Write 0: No action Write 1: Clear event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PME_GEN_EVNT" width="1" begin="0" end="0" resetval="0x0" description="Interrupt status for PME_GEN event" range="" rwaccess="RW1C"/>
  </register>
  <register id="USB_VBUS_ID_FILTER" acronym="USB_VBUS_ID_FILTER" offset="0x614" width="32" description="The vbus and id comparator signals may be filtered by controlling these register values.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="VBUSVALID_ANA_THRESH" width="1" begin="19" end="19" resetval="0x0" description="Set threshold for VBUSVALID. Drives VALID_THRESHOLD_SEL on the USB_VBUS_IDD" range="" rwaccess="RW"/>
    <bitfield id="RID_EN" width="1" begin="18" end="18" resetval="0x0" description="Enable RID detection when =1" range="" rwaccess="RW"/>
    <bitfield id="RID_BYPASS" width="1" begin="17" end="17" resetval="0x0" description="0= use filter, 1= bypass filter" range="" rwaccess="RW"/>
    <bitfield id="RID_THRESH" width="2" begin="16" end="15" resetval="0x0" description="00= 1us, 01= 100us, 10= 5ms, 11= 50ms. UTMI_CLK latency for RID_FLOAT, RID_GND, RID_A, RID_B and RID_C" range="" rwaccess="RW"/>
    <bitfield id="IDDIG_BYPASS" width="1" begin="14" end="14" resetval="0x0" description="0= use filter, 1= bypass filter for IDDIG" range="" rwaccess="RW"/>
    <bitfield id="IDDIG_THRESH" width="2" begin="13" end="12" resetval="0x0" description="00= 1us, 01= 100us, 10= 5ms, 11= 50ms. UTMI_CLK latency for IDDIG" range="" rwaccess="RW"/>
    <bitfield id="SESSEND_BYPASS" width="1" begin="11" end="11" resetval="0x0" description="0= use filter, 1= bypass filter for SESSEND" range="" rwaccess="RW"/>
    <bitfield id="SESSEND_THRESH" width="2" begin="10" end="9" resetval="0x0" description="00= 1us, 01= 100us, 10= 5ms, 11= 50ms. UTMI_CLK latency for SESSEND" range="" rwaccess="RW"/>
    <bitfield id="BVALID_BYPASS" width="1" begin="8" end="8" resetval="0x0" description="0= use filter, 1= bypass filter" range="" rwaccess="RW"/>
    <bitfield id="BVALID_THRESH" width="2" begin="7" end="6" resetval="0x0" description="00= 1us, 01= 100us, 10= 5ms, 11= 50ms. UTMI_CLK latency for BVALID" range="" rwaccess="RW"/>
    <bitfield id="AVALID_BYPASS" width="1" begin="5" end="5" resetval="0x0" description="0= use filter, 1= bypass filter for AVALID" range="" rwaccess="RW"/>
    <bitfield id="AVALID_THRESH" width="2" begin="4" end="3" resetval="0x0" description="00= 1us, 01= 100us, 10= 5ms, 11= 50ms. UTMI_CLK latency for AVALID" range="" rwaccess="RW"/>
    <bitfield id="VBUSVALID_BYPASS" width="1" begin="2" end="2" resetval="0x0" description="0= use filter, 1= bypass filter for VBUSVALID" range="" rwaccess="RW"/>
    <bitfield id="VBUSVALID_THRESH" width="2" begin="1" end="0" resetval="0x0" description="00= 1us, 01= 100us, 10= 5ms, 11= 50ms. UTMI_CLK latency for VBUSVALID" range="" rwaccess="RW"/>
  </register>
  <register id="USB_VBUS_ID_STAT" acronym="USB_VBUS_ID_STAT" offset="0x618" width="32" description="Status bits of VBUS and ID detected signals after filter.">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RID_FLOAT" width="1" begin="9" end="9" resetval="0x0" description="Filtered RID_FLOAT" range="" rwaccess="R"/>
    <bitfield id="RID_GND" width="1" begin="8" end="8" resetval="0x0" description="Filtered RID_GND" range="" rwaccess="R"/>
    <bitfield id="RID_C" width="1" begin="7" end="7" resetval="0x0" description="Filtered RID_C" range="" rwaccess="R"/>
    <bitfield id="RID_B" width="1" begin="6" end="6" resetval="0x0" description="Filtered RID_B" range="" rwaccess="R"/>
    <bitfield id="RID_A" width="1" begin="5" end="5" resetval="0x0" description="Filtered RID_A" range="" rwaccess="R"/>
    <bitfield id="IDDIG" width="1" begin="4" end="4" resetval="0x0" description="Filtered IDDIG" range="" rwaccess="R"/>
    <bitfield id="SESSEND" width="1" begin="3" end="3" resetval="0x0" description="Filtered SESSEND" range="" rwaccess="R"/>
    <bitfield id="BVALID" width="1" begin="2" end="2" resetval="0x0" description="Filtered BVALID" range="" rwaccess="R"/>
    <bitfield id="AVALID" width="1" begin="1" end="1" resetval="0x0" description="Filtered AVALID" range="" rwaccess="R"/>
    <bitfield id="VBUSVALID" width="1" begin="0" end="0" resetval="0x0" description="Filtered VBUSVALID" range="" rwaccess="R"/>
  </register>
  <register id="USB_USB2PHY_CTRL_STAT" acronym="USB_USB2PHY_CTRL_STAT" offset="0x61C" width="32" description="The USB2PHY ports with corresponding names arecontrolled by these registers. Status bits correspond to the USB2PHY outputs of the same name.">
    <bitfield id="RESERVED" width="10" begin="31" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CHGDETECTED" width="1" begin="21" end="21" resetval="0x0" description="Corresponds to USB2PHY port CHGDETECTED" range="" rwaccess="R"/>
    <bitfield id="CHGDETDONE" width="1" begin="20" end="20" resetval="0x0" description="Corresponds to USB2PHY port CHGDETDONE" range="" rwaccess="R"/>
    <bitfield id="DATADET" width="1" begin="19" end="19" resetval="0x0" description="Corresponds to USB2PHY port DATADET" range="" rwaccess="R"/>
    <bitfield id="CHG_DET_DP_COMP" width="1" begin="18" end="18" resetval="0x0" description="Corresponds to USB2PHY port CHG_DET_DP_COMP" range="" rwaccess="R"/>
    <bitfield id="CHG_DET_DM_COMP" width="1" begin="17" end="17" resetval="0x0" description="Corresponds to USB2PHY port CHG_DET_DM_COMP" range="" rwaccess="R"/>
    <bitfield id="CHG_DET_STATUS" width="3" begin="16" end="14" resetval="0x0" description="Corresponds to USB2PHY port CHG_DET_STATUS" range="" rwaccess="R"/>
    <bitfield id="CDP_NSDP" width="1" begin="13" end="13" resetval="0x0" description="Allows for charging downstream port control =1" range="" rwaccess="RW"/>
    <bitfield id="DATAPOLARITYN" width="1" begin="12" end="12" resetval="0x0" description="Corresponds to USB2PHY port DATAPOLARITYN" range="" rwaccess="RW"/>
    <bitfield id="MCPCMODEEN" width="1" begin="11" end="11" resetval="0x0" description="Corresponds to USB2PHY port MCPCMODEEN" range="" rwaccess="RW"/>
    <bitfield id="MCPCPUEN" width="1" begin="10" end="10" resetval="0x0" description="Corresponds to USB2PHY port MCPCPUEN" range="" rwaccess="RW"/>
    <bitfield id="RESTARTCHGDET" width="1" begin="9" end="9" resetval="0x0" description="Corresponds to USB2PHY port RESTARTCHGDET" range="" rwaccess="RW"/>
    <bitfield id="SRCONDM" width="1" begin="8" end="8" resetval="0x0" description="Corresponds to USB2PHY port SRCONDM" range="" rwaccess="RW"/>
    <bitfield id="SINKONDP" width="1" begin="7" end="7" resetval="0x0" description="Corresponds to USB2PHY port SINKONDP" range="" rwaccess="RW"/>
    <bitfield id="CHG_ISINK_EN" width="1" begin="6" end="6" resetval="0x0" description="Corresponds to USB2PHY port CHG_ISINK_EN" range="" rwaccess="RW"/>
    <bitfield id="CHG_VSRC_EN" width="1" begin="5" end="5" resetval="0x0" description="Corresponds to USB2PHY port CHG_VSRC_EN" range="" rwaccess="RW"/>
    <bitfield id="RDP_PU_CHGDET_EN" width="1" begin="4" end="4" resetval="0x0" description="Corresponds to USB2PHY port RDP_PU_CHGDET_EN" range="" rwaccess="RW"/>
    <bitfield id="RDM_PD_CHGDET_EN" width="1" begin="3" end="3" resetval="0x0" description="Corresponds to USB2PHY port RDM_PD_CHGDET_EN" range="" rwaccess="RW"/>
    <bitfield id="CHG_DET_EXT_CTL" width="1" begin="2" end="2" resetval="0x0" description="Corresponds to USB2PHY port CHG_DET_EXT_CTL" range="" rwaccess="RW"/>
    <bitfield id="DISCHGDET" width="1" begin="1" end="1" resetval="0x0" description="Corresponds to USB2PHY port DISCHGDET" range="" rwaccess="RW"/>
    <bitfield id="AUTORESUME_EN" width="1" begin="0" end="0" resetval="0x0" description="Corresponds to USB2PHY port AUTORESUME_EN" range="" rwaccess="RW"/>
  </register>
  <register id="USB_MMRAM_OFFSET" acronym="USB_MMRAM_OFFSET" offset="0x700" width="32" description="Offset of Memory-mapped RAM accesses. Page is remapped from 0x8000 to 0xFFFF (32 kbyte)">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="OFFSET_MSB" width="5" begin="19" end="15" resetval="0x8" description="Byte offset MSBits = page offset" range="" rwaccess="RW"/>
    <bitfield id="OFFSET_LSB" width="15" begin="14" end="0" resetval="0x0" description="Byte offset LSBits, always 0" range="" rwaccess="R"/>
  </register>
  <register id="USB_CORE_CTL" acronym="USB_CORE_CTL" offset="0x704" width="32" description="XHCI rev, port disable pseudo-static parameters">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="HOST_U3_PORT_DISABLE" width="1" begin="28" end="28" resetval="0x0" description="USB3 port disable, overriding xHCI driver" range="" rwaccess="RW"/>
    <bitfield id="HOST_U2_PORT_DISABLE" width="1" begin="27" end="27" resetval="0x0" description="USB2 port disable, overriding xHCI driver" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="26" end="21" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="21" begin="20" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="USB_DEBUG_CFG" acronym="USB_DEBUG_CFG" offset="0x708" width="32" description="Configuration of debug data for observation and for control. 0x0 = debug outputs are tied low 0x1 = debug outputs are UTMI interface signals 0x2 = debug outputs are PIPE3 interface signals 0x3 = debug outputs are xHC internal signals 0x4 = debug outputs are controller logic_analyzer_trace[31:0] 0x5 = debug outputs are controller logic_analyzer_trace[63:32]">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SEL_DBG" width="3" begin="2" end="0" resetval="0x0" description="Selects observed local signals" range="" rwaccess="RW"/>
  </register>
  <register id="USB_DEBUG_DATA" acronym="USB_DEBUG_DATA" offset="0x70C" width="32" description="Data that is observable Observable data is selected via .sel_dbg , shown only for sel_dbg = (1,2,3)">
    <bitfield id="DEBUG31" width="1" begin="31" end="31" resetval="0x0" description="sel= 1: utmi_sessend sel= 2: pipe_rxstatus[2] sel= 3: core_sm2bl_cur_mode" range="" rwaccess="R"/>
    <bitfield id="DEBUG30" width="1" begin="30" end="30" resetval="0x0" description="sel= 1: utmi_vbusvalid sel= 2: pipe_rxstatus[1] sel= 3: core_suspend_n" range="" rwaccess="R"/>
    <bitfield id="DEBUG29" width="1" begin="29" end="29" resetval="0x0" description="sel= 1: utmi_bvalid sel= 2: pipe_rxstatus[0] sel= 3: core_suspend_com_n" range="" rwaccess="R"/>
    <bitfield id="DEBUG28" width="1" begin="28" end="28" resetval="0x0" description="sel= 1: utmi_avalid sel= 2: pipe_elecidle sel= 3: core_u2_dssr_state[3]" range="" rwaccess="R"/>
    <bitfield id="DEBUG27" width="1" begin="27" end="27" resetval="0x0" description="sel= 1: utmi_iddig sel= 2: pipe_phystatus sel= 3: core_u2_dssr_state[2]" range="" rwaccess="R"/>
    <bitfield id="DEBUG26" width="1" begin="26" end="26" resetval="0x0" description="sel= 1: utmi_hostdisconnect sel= 2: pipe_rxvalid sel= 3: core_u2_dssr_state[1]" range="" rwaccess="R"/>
    <bitfield id="DEBUG25" width="1" begin="25" end="25" resetval="0x0" description="sel= 1: utmi_txbitstuffenableh sel= 2: pipe_rxdatak[3] sel= 3: core_u2_dssr_state[0]" range="" rwaccess="R"/>
    <bitfield id="DEBUG24" width="1" begin="24" end="24" resetval="0x0" description="sel= 1: utmi_txbitstuffenable sel= 2: pipe_rxdatak[2] sel= 3: core_u2mac_txrx_state_1[4]" range="" rwaccess="R"/>
    <bitfield id="DEBUG23" width="1" begin="23" end="23" resetval="0x0" description="sel= 1: utmi_dischrgvbus sel= 2: pipe_rxdatak[1] sel= 3: core_u2mac_txrx_state_1[3]" range="" rwaccess="R"/>
    <bitfield id="DEBUG22" width="1" begin="22" end="22" resetval="0x0" description="sel= 1: utmi_chrgvbus sel= 2: pipe_rxdatak[0] sel= 3: core_u2mac_txrx_state_1[2]" range="" rwaccess="R"/>
    <bitfield id="DEBUG21" width="1" begin="21" end="21" resetval="0x0" description="sel= 1: utmi_drvvbus sel= 2: pipe_rxpclk sel= 3: core_u2mac_txrx_state_1[1]" range="" rwaccess="R"/>
    <bitfield id="DEBUG20" width="1" begin="20" end="20" resetval="0x0" description="sel= 1: utmi_dmpulldown sel= 2: pipe_rxtermination sel= 3: core_u2mac_txrx_state_1[0]" range="" rwaccess="R"/>
    <bitfield id="DEBUG19" width="1" begin="19" end="19" resetval="0x0" description="sel= 1: utmi_dppulldown sel= 2: pipe_txswing sel= 3: core_u2mac_txrx_state_0[4]" range="" rwaccess="R"/>
    <bitfield id="DEBUG18" width="1" begin="18" end="18" resetval="0x0" description="sel= 1: utmi_idpullup sel= 2: pipe_txmargin[2] sel= 3: core_u2mac_txrx_state_0[3]" range="" rwaccess="R"/>
    <bitfield id="DEBUG17" width="1" begin="17" end="17" resetval="0x0" description="sel= 1: utmi_linestate[1] sel= 2: pipe_txmargin[1] sel= 3: core_u2mac_txrx_state_0[2]" range="" rwaccess="R"/>
    <bitfield id="DEBUG16" width="1" begin="16" end="16" resetval="0x0" description="sel= 1: utmi_linestate[0] sel= 2: pipe_txmargin[0] sel= 3: core_u2mac_txrx_state_0[1]" range="" rwaccess="R"/>
    <bitfield id="DEBUG15" width="1" begin="15" end="15" resetval="0x0" description="sel= 1: utmi_opmode[1] sel= 2: pipe_txdeemph[1] sel= 3: core_u2mac_txrx_state_0[0]" range="" rwaccess="R"/>
    <bitfield id="DEBUG14" width="1" begin="14" end="14" resetval="0x0" description="sel= 1: utmi_opmode[0] sel= 2: pipe_txdeemph[0] sel= 3: core_u2_prt_state[4]" range="" rwaccess="R"/>
    <bitfield id="DEBUG13" width="1" begin="13" end="13" resetval="0x0" description="sel= 1: utmi_termselect sel= 2: pipe_powerdown[1] sel= 3: core_u2_prt_state[3]" range="" rwaccess="R"/>
    <bitfield id="DEBUG12" width="1" begin="12" end="12" resetval="0x0" description="sel= 1: utmi_xcvrselect[1] sel= 2: pipe_powerdown[0] sel= 3: core_u2_prt_state[2]" range="" rwaccess="R"/>
    <bitfield id="DEBUG11" width="1" begin="11" end="11" resetval="0x0" description="sel= 1: utmi_xcvrselect[0] sel= 2: pipe_reset_n sel= 3: core_u2_prt_state[1]" range="" rwaccess="R"/>
    <bitfield id="DEBUG10" width="1" begin="10" end="10" resetval="0x0" description="sel= 1: utmi_suspendm sel= 2: pipe_rxeqtraining sel= 3: core_u2_prt_state[0]" range="" rwaccess="R"/>
    <bitfield id="DEBUG9" width="1" begin="9" end="9" resetval="0x0" description="sel= 1: utmi_reset sel= 2: pipe_rxpolarity sel= 3: core_gsts_buserraddvld" range="" rwaccess="R"/>
    <bitfield id="DEBUG8" width="1" begin="8" end="8" resetval="0x0" description="sel= 1: utmi_rxerror sel= 2: pipe_txoneszeros sel= 3: debug_mclk_usof_number[0]" range="" rwaccess="R"/>
    <bitfield id="DEBUG7" width="1" begin="7" end="7" resetval="0x0" description="sel= 1: utmi_rxvalidh sel= 2: pipe_txelecidle sel= 3: core_ltdb_link_state[3]" range="" rwaccess="R"/>
    <bitfield id="DEBUG6" width="1" begin="6" end="6" resetval="0x0" description="sel= 1: utmi_rxvalid sel= 2: pipe_txdetectrxloopback sel= 3: core_ltdb_link_state[2]" range="" rwaccess="R"/>
    <bitfield id="DEBUG5" width="1" begin="5" end="5" resetval="0x0" description="sel= 1: utmi_rxactive sel= 2: pipe_elasticitybuffermode sel= 3: core_ltdb_link_state[1]" range="" rwaccess="R"/>
    <bitfield id="DEBUG4" width="1" begin="4" end="4" resetval="0x0" description="sel= 1: utmi_txready sel= 2: pipe_txdatak[3] sel= 3: core_ltdb_link_state[0]" range="" rwaccess="R"/>
    <bitfield id="DEBUG3" width="1" begin="3" end="3" resetval="0x0" description="sel= 1: utmi_txdatah sel= 2: pipe_txdatak[2] sel= 3: core_ltdb_substate[3]" range="" rwaccess="R"/>
    <bitfield id="DEBUG2" width="1" begin="2" end="2" resetval="0x0" description="sel= 1: utmi_txdata sel= 2: pipe_txdatak[1] sel= 3: core_ltdb_substate[2]" range="" rwaccess="R"/>
    <bitfield id="DEBUG1" width="1" begin="1" end="1" resetval="0x0" description="sel= 1: utmi_databus16_8 or wordinterface sel= 2: pipe_txdatak[0] sel= 3: core_ltdb_substate[1]" range="" rwaccess="R"/>
    <bitfield id="DEBUG0" width="1" begin="0" end="0" resetval="0x0" description="sel= 1: utmi_clk sel= 2: pipe_txpclk sel= 3: core_ltdb_substate[0]" range="" rwaccess="R"/>
  </register>
  <register id="USB_DEV_EBC_EN" acronym="USB_DEV_EBC_EN" offset="0x710" width="32" description="Enable External Buffer Control (EBC) for selected endpoints. Device mode only. INEP[x] Enable EBC HW throttling for IN EP (USB transmit). To enable logical EP IN #i, set [x]. In DEPCFG command for this EP, DEPCMDPAR1[x] = LimitOutstandingTxDMA should then also be set to 1 OUTEP[x] Enable EBC HW throttling for OUT EP, per bit (USB receive). To enable logical OUT EP #i, set [x+16] In DEPCFG command for this EP, DEPCMDPAR1[x] = LimitOutstandingTxDMA should then also be set to 1 x equals 15">
    <bitfield id="OUTEP15" width="1" begin="31" end="31" resetval="0x0" description="ENABLE EBC HW throttling (USB receive) for OUT EP 15" range="" rwaccess="RW"/>
    <bitfield id="OUTEP14" width="1" begin="30" end="30" resetval="0x0" description="ENABLE EBC HW throttling (USB receive) for OUT EP 14" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="14" begin="29" end="16" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="INEP15" width="1" begin="15" end="15" resetval="0x0" description="ENABLE EBC HW throttling (USB transmit) for IN EP 15" range="" rwaccess="RW"/>
    <bitfield id="INEP14" width="1" begin="14" end="14" resetval="0x0" description="ENABLE EBC HW throttling (USB transmit) for IN EP 14" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="14" begin="13" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="USB_HOST_HUB_CTRL" acronym="USB_HOST_HUB_CTRL" offset="0x714" width="32" description="The Register is a collection of various input signals that control the xHC controllers Host or Hub interfaces. These signals are used regardless if a Host or Hub is implemented or not.">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="BUS_FILTER_BYPASS" width="4" begin="11" end="8" resetval="0x0" description="Bus Filter Bypass bit [0]: bypass the filter for vbusvalid bit [1]: bypass the filter for pipe3_PowerPresent bit [2]: bypass the filter for avalid, bvalid, and sessend bit [3]: bypass the filter for iddig 0 = filter enabled 1 = filter disabled" range="" rwaccess="RW"/>
    <bitfield id="HUB_PORT_PERM_ATTACH" width="2" begin="7" end="6" resetval="0x0" description="Indicates if the device attached to a downstream port is permanently attached or not. Bit 6 is the USB2 port and bit 7 is the SS port. 0 - Not permanently attached 1 - Permanently attached" range="" rwaccess="RW"/>
    <bitfield id="XHC_BME" width="1" begin="5" end="5" resetval="0x1" description="This signal is used to disable the bus mastering capability of the xHC. In a PCI system, it comes from the Bus Master Enable (BME) bit of the Device Control Register in the PCI Configuration register space. 1'b 0: Bus mastering capability is disabled. The host controller cannot use the bus master interface. 1'b 1: Bus mastering capability is enabled." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="4" end="3" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="HOST_PORT_POWER_CONTROL_PRESENT" width="1" begin="2" end="2" resetval="0x1" description="This port defines the bit [3] of Capability Parameters (HCCPARAMS). Change the PPC value through the pin Port Power Control (PPC). This indicates whether the host controller implementation includes port power control. 0 - Indicates that the port does not have port power switches. 1 - Indicates that the port has port power switches." range="" rwaccess="RW"/>
    <bitfield id="HUB_PORT_OVERCURRENT" width="2" begin="1" end="0" resetval="0x0" description="This is the per port Overcurrent indication of the root-hub ports. Bit 0 is the USB2 port and bit 1 is the SS port. 0 - No Overcurrent 1 - Overcurrent" range="" rwaccess="RW"/>
  </register>
</module>
