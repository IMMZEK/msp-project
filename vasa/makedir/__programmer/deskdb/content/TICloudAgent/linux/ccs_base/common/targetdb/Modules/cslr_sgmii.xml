<?xml version="1.0" encoding="UTF-8"?>
<module id="SGMII" HW_revision="" XML_version="1" description="Serial Gigabit Media independent Interface ">
   <register id="IDVER" acronym="IDVER" offset="0x0000" width="32" description="Identification and  Version register">
<bitfield id="TX_IDENT" width="16" begin="31" end="16" resetval="44" description="TX identification value" range="" rwaccess="R"></bitfield>
<bitfield id="RTL_VER" width="5" begin="15" end="11" resetval="0" description="RTL version value" range="" rwaccess="R"></bitfield>
<bitfield id="MAJOR_VER" width="3" begin="10" end="8" resetval="1" description="Major version value" range="" rwaccess="R"></bitfield>
<bitfield id="MINOR_VER" width="8" begin="7" end="0" resetval="0" description="Minor version value" range="" rwaccess="R"></bitfield>
</register>
   <register id="SOFT_RESET" acronym="SOFT_RESET" offset="0x0004" width="32" description="Software Reset Register">
<bitfield id="_RESV_1" width="30" begin="31" end="2" resetval="0" description="reserved - read as zero" range="" rwaccess="R"></bitfield>
<bitfield id="RT_SOFT_RESET" width="1" begin="1" end="1" resetval="0" description="Transmit and Receive Software Reset. Writing 1 to this bit causes the  CPSGMII Transmit and Receive logic to be in reset condition" range="" rwaccess="">
<bitenum id="YES" value="27" token="YES" description="Resets SGMII Tx/Rx logic" />
<bitenum id="NO" value="11" token="NO" description="Removes SGMII Tx/Rx logic from reset condition" />
</bitfield>
<bitfield id="SOFT_RESET" width="1" begin="0" end="0" resetval="0" description="Software reset - Writing a one to this bit causes the CPSGMII logic to be reset. Software reset occurs immediately" range="" rwaccess="RW">
<bitenum id="YES" value="27" token="YES" description="Resets SGMII logic" />
</bitfield>
</register>
   <register id="CONTROL" acronym="CONTROL" offset="0x0010" width="32" description="Control Register">
<bitfield id="_RESV_1" width="25" begin="31" end="7" resetval="0" description="reserved - read as zero" range="" rwaccess="R"></bitfield>
<bitfield id="TEST_PATTERN_EN" width="1" begin="6" end="6" resetval="0" description="Test Pattern Enable" range="" rwaccess="RW"></bitfield>
<bitfield id="MASTER" width="1" begin="5" end="5" resetval="0" description="Master mode" range="" rwaccess="RW">
<bitenum id="MASTER" value="27" token="MASTER" description="Master mode - set on one side for  a direct CPSGMII to CPSGMII link when SGMII_MODE is asserted" />
<bitenum id="SLAVE" value="11" token="SLAVE" description="Slave mode" />
</bitfield>
<bitfield id="LOOPBACK" width="1" begin="4" end="4" resetval="0" description="Loop back mode. In loop back mode the transmit clock(TX_CLK) is used for  transmit/receive and auto-negotiation is bypassed" range="" rwaccess="RW">
<bitenum id="YES" value="27" token="YES" description="Internal loop back mode " />
<bitenum id="NO" value="11" token="NO" description="Not in internal loop back mode" />
</bitfield>
<bitfield id="MR_NP_LOADED" width="1" begin="3" end="3" resetval="0" description="Next Page Loaded - Writing a one to this bit informs the auto-negotiation process that the next page register has been loaded. After writing a one to this bit, software should read the status register and clear this bit then the reset_np_loaded bit in the status register is asserted. This bit is not used when the SGMII_MODE input is asserted" range="" rwaccess="RW"></bitfield>
<bitfield id="FAST_LINK_TIMER" width="1" begin="2" end="2" resetval="0" description="Fast link timer.  0 - The link timer value is 10ms in FIBER mode and 1.6ms in SGMII mode. 1 - The link timer value is 2us in FIBER and SGMII mode. This is included for test purposes." range="" rwaccess="RW"></bitfield>
<bitfield id="MR_AN_RESTART" width="1" begin="1" end="1" resetval="0" description="Auto-Negotiation restart" range="" rwaccess="RW">
<bitenum id="YES" value="27" token="YES" description="Restarts auto-negotiation process" />
</bitfield>
<bitfield id="MR_AN_ENABLE" width="1" begin="0" end="0" resetval="0" description="Auto-Negotiation enable" range="" rwaccess="RW">
<bitenum id="YES" value="27" token="YES" description="Enables auto-negotiation process" />
</bitfield>
</register>
   <register id="STATUS" acronym="STATUS" offset="0x0014" width="32" description="Status Register">
<bitfield id="_RESV_1" width="26" begin="31" end="6" resetval="0" description="Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="FIB_SIG_DETECT" width="1" begin="5" end="5" resetval="0" description="Fiber Signal Detect - This is  the FIB_SIG_DETECT input pin" range="" rwaccess="R"></bitfield>
<bitfield id="LOCK" width="1" begin="4" end="4" resetval="0" description="Lock - This is the Lock input pin" range="" rwaccess="R"></bitfield>
<bitfield id="MR_PAGE_RX" width="1" begin="3" end="3" resetval="0" description="Next Page Received - This is set to 1 by the auto-negotiation state machine when the next page has been received. This bit is cleared to 0 by a host write of 1 to the mr_np_loaded bit in the CONTROL register. This value is not  valid until the lock status bit is asserted" range="" rwaccess="R"></bitfield>
<bitfield id="MR_AN_COMPLETE" width="1" begin="2" end="2" resetval="0" description="Auto-negotiation complete. This value is not valid until the lock status bit is  asserted" range="" rwaccess="R/W">
<bitenum id="DONE" value="27" token="DONE" description="Auto-negotiation is not completed" />
<bitenum id="NOT_DONE" value="11" token="NOT_DONE" description="Auto-negotiation is completed" />
</bitfield>
<bitfield id="AN_ERROR" width="1" begin="1" end="1" resetval="0" description="Auto-negotiation error. For SGMII mode an auto-negotiation error occurs  when half duplex gigabit is commanded. For FIBER mode, auto-negotiation error occurs when both sides can not be full duplex This bit is not valid until the lock status bit is asserted" range="" rwaccess="R/W">
<bitenum id="OCCURED" value="27" token="OCCURED" description="Auto-negotiation error" />
<bitenum id="NOT_OCCURED" value="11" token="NOT_OCCURED" description="No auto-negotiation error" />
</bitfield>
<bitfield id="LINK" width="1" begin="0" end="0" resetval="0" description="Link. This value is not valid until the lock status bit is asserted" range="" rwaccess="R/W">
<bitenum id="UP" value="27" token="UP" description="Link is up" />
<bitenum id="NOT_UP" value="11" token="NOT_UP" description="Link is not up" />
</bitfield>
</register>
   <register id="MR_ADV_ABILITY" acronym="MR_ADV_ABILITY" offset="0x0018" width="32" description="Advertised Ability Register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="MR_ADV_ABILITY" width="16" begin="15" end="0" resetval="0" description="Advertised Ability" range="" rwaccess="R/W"></bitfield>
</register>
   <register id="MR_NP_TX" acronym="MR_NP_TX" offset="0x001C" width="32" description="Next Page Transmit Register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="MR_NP_TX" width="16" begin="15" end="0" resetval="0" description="Next Page Transmit" range="" rwaccess="R/W"></bitfield>
</register>
   <register id="MR_LP_ADV_ABILITY" acronym="MR_LP_ADV_ABILITY" offset="0x0020" width="32" description="Link Partner Advertised Ability Register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="MR_LP_ADV_ABILITY" width="16" begin="15" end="0" resetval="0" description="Link Partner Advertised Ability" range="" rwaccess="R/W"></bitfield>
</register>
   <register id="MR_LP_NP_RX" acronym="MR_LP_NP_RX" offset="0x0024" width="32" description="Link Partner Next Page Received Register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="MR_LP_NP_RX" width="16" begin="15" end="0" resetval="0" description="Link Partner Next Page Received" range="" rwaccess="R/W"></bitfield>
</register>
   <register id="TX_CFG" acronym="TX_CFG" offset="0x0030" width="32" description="Transmit Configuration Register">
<bitfield id="TX_CFG" width="32" begin="31" end="0" resetval="0" description="Transmit Configuration Register Output. This is a 32-bit general purpose  output to be used to control the SERDES transmit configuration. These are  the SERDES device specific configuration bits" range="" rwaccess="R/W"></bitfield>
</register>
   <register id="RX_CFG" acronym="RX_CFG" offset="0x0034" width="32" description="Receive Configuration Register">
<bitfield id="RX_CFG" width="32" begin="31" end="0" resetval="0" description="Receive Configuration Register Output. This is a 32-bit general purpose  output to be used to control the SERDES receive configuration. These are  the SERDES device specific configuration bits" range="" rwaccess="R/W"></bitfield>
</register>
   <register id="AUX_CFG" acronym="AUX_CFG" offset="0x0038" width="32" description="Auxiliary Configuration Register">
<bitfield id="AUX_CFG" width="32" begin="31" end="0" resetval="0" description="Auxiliary Configuration Register Output. These are also specific to SERDES" range="" rwaccess="RW"></bitfield>
</register>
   <register id="DIAG_CLEAR" acronym="DIAG_CLEAR" offset="0x0040" width="32" description="Diagnostics Clear Register">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="DIAG_CLEAR" width="1" begin="0" end="0" resetval="0" description="Diagnostics Clear. Clears all diagnostic status bits when set to one. Some bits may be set back to one immediately following reset. The reset requires several clocks due to synchronizers" range="" rwaccess="RW">
<bitenum id="SET" value="27" token="SET" description="Clears diagnostics" />
</bitfield>
</register>
   <register id="DIAG_CONTROL" acronym="DIAG_CONTROL" offset="0x0044" width="32" description="Diagnostics Control Register">
<bitfield id="_RESV_1" width="25" begin="31" end="7" resetval="0" description="Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="DIAG_SM_SEL" width="3" begin="6" end="4" resetval="0" description="Diagnostic Select - Determines which internal diagnostic bits are muxed  onto diag_stat[15:0]" range="" rwaccess="RW">
<bitenum id="HOLD_SIGNAL" value="1" token="HOLD_SIGNAL" description="Diagnostic Hold Signals" />
<bitenum id="SYNC_STATUS" value="2" token="SYNC_STATUS" description="Diagnostic Sync Status " />
<bitenum id="AN_STATUS" value="3" token="AN_STATUS" description="Diagnostic AN Status" />
<bitenum id="TXOS_STATUS" value="4" token="TXOS_STATUS" description="Diagnostic TXOS Status" />
<bitenum id="TXCG_STATUS" value="5" token="TXCG_STATUS" description="Diagnostic TXCG Status" />
<bitenum id="RXSM_LOW_STATUS" value="6" token="RXSM_LOW_STATUS" description="Diagnostic RXSM Status" />
<bitenum id="RXSM_HIGH_STATUS" value="7" token="RXSM_HIGH_STATUS" description="Diagnostic RXSM Status" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="3" end="2" resetval="0" description="Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="DIAG_EDGE_SEL" width="2" begin="1" end="0" resetval="0" description="Diagnostics Hold Signals Edge Select." range="" rwaccess="RW">
<bitenum id="LEVEL_SENSITIVE" value="0" token="LEVEL_SENSITIVE" description="Diagnostic Hold Signals Level" />
<bitenum id="RISING_EDGE" value="2" token="RISING_EDGE" description="Diagnostic Hold Signals rising edge detected" />
<bitenum id="FALLING_EDGE" value="3" token="FALLING_EDGE" description="Diagnostic Hold Signals falling edge detected" />
<bitenum id="EITHER_EDGE" value="4" token="EITHER_EDGE" description="Diagnostic Hold Signals ether (both) edge detected" />
</bitfield>
</register>
   <register id="DIAG_STATUS" acronym="DIAG_STATUS" offset="0x0048" width="32" description="Diagnostics Status Register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="DIAG_STATUS" width="16" begin="15" end="0" resetval="0" description="Diagnostics Status" range="" rwaccess="R"></bitfield>
</register>
</module>
