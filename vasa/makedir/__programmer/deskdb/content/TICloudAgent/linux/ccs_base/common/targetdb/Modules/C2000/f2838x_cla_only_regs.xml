<module id="CLA_ONLY_REGS" HW_revision="" description="CLA ONLY Registers">
	<register id="_MVECTBGRNDACTIVE" width="16" page="1" offset="0x80" internal="0" description="Active register for MVECTBGRND.">
		<bitfield id="i16" description="Active register for the Background Task Vector " begin="15" end="0" width="16" rwaccess="R"/>
	</register>
	<register id="_MPSACTL" width="16" page="1" offset="0xc0" internal="0" description="CLA PSA Control Register">
		<bitfield id="MPABSTART" description="Start logging PAB onto PSA1" begin="0" end="0" width="1" rwaccess="RW"/>
		<bitfield id="MPABCYC" description="PAB logging into PSA1 is on every cycle or when PAB changes." begin="1" end="1" width="1" rwaccess="RW"/>
		<bitfield id="MDWDBSTART" description="Start logging DWDB onto PSA2" begin="2" end="2" width="1" rwaccess="RW"/>
		<bitfield id="MDWDBCYC" description="DWDB logging into PSA2 is on every cycle." begin="3" end="3" width="1" rwaccess="RW"/>
		<bitfield id="MPSA1CLEAR" description="PSA1 clear" begin="4" end="4" width="1" rwaccess="RW"/>
		<bitfield id="MPSA2CLEAR" description="PSA2 Clear" begin="5" end="5" width="1" rwaccess="RW"/>
		<bitfield id="MPSA2CFG" description="PSA2 Polynomial Configuration" begin="7" end="6" width="2" rwaccess="RW"/>
	</register>
	<register id="_MPSA1" width="32" page="1" offset="0xc2" internal="0" description="CLA PSA1 Register">
		<bitfield id="i32" description="PSA1" begin="31" end="0" width="32" rwaccess="RW"/>
	</register>
	<register id="_MPSA2" width="32" page="1" offset="0xc4" internal="0" description="CLA PSA2 Register">
		<bitfield id="i32" description="PSA2" begin="31" end="0" width="32" rwaccess="RW"/>
	</register>
	<register id="SOFTINTEN" width="16" page="1" offset="0xe0" internal="0" description="CLA Software Interrupt Enable Register">
		<bitfield id="TASK1" description="Configure Software Interrupt or End of Task interrupt." begin="0" end="0" width="1" rwaccess="RW"/>
		<bitfield id="TASK2" description="Configure Software Interrupt or End of Task interrupt." begin="1" end="1" width="1" rwaccess="RW"/>
		<bitfield id="TASK3" description="Configure Software Interrupt or End of Task interrupt." begin="2" end="2" width="1" rwaccess="RW"/>
		<bitfield id="TASK4" description="Configure Software Interrupt or End of Task interrupt." begin="3" end="3" width="1" rwaccess="RW"/>
		<bitfield id="TASK5" description="Configure Software Interrupt or End of Task interrupt." begin="4" end="4" width="1" rwaccess="RW"/>
		<bitfield id="TASK6" description="Configure Software Interrupt or End of Task interrupt." begin="5" end="5" width="1" rwaccess="RW"/>
		<bitfield id="TASK7" description="Configure Software Interrupt or End of Task interrupt." begin="6" end="6" width="1" rwaccess="RW"/>
		<bitfield id="TASK8" description="Configure Software Interrupt or End of Task interrupt." begin="7" end="7" width="1" rwaccess="RW"/>
	</register>
	<register id="SOFTINTFRC" width="16" page="1" offset="0xe2" internal="0" description="CLA Software Interrupt Force Register">
		<bitfield id="TASK1" description="Force CLA software interrupt for the corresponding task." begin="0" end="0" width="1" rwaccess="RW"/>
		<bitfield id="TASK2" description="Force CLA software interrupt for the corresponding task." begin="1" end="1" width="1" rwaccess="RW"/>
		<bitfield id="TASK3" description="Force CLA software interrupt for the corresponding task." begin="2" end="2" width="1" rwaccess="RW"/>
		<bitfield id="TASK4" description="Force CLA software interrupt for the corresponding task." begin="3" end="3" width="1" rwaccess="RW"/>
		<bitfield id="TASK5" description="Force CLA software interrupt for the corresponding task." begin="4" end="4" width="1" rwaccess="RW"/>
		<bitfield id="TASK6" description="Force CLA software interrupt for the corresponding task." begin="5" end="5" width="1" rwaccess="RW"/>
		<bitfield id="TASK7" description="Force CLA software interrupt for the corresponding task." begin="6" end="6" width="1" rwaccess="RW"/>
		<bitfield id="TASK8" description="Force CLA software interrupt for the corresponding task." begin="7" end="7" width="1" rwaccess="RW"/>
	</register>
</module>
