<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="DSS_REG" id="DSS_REG">
  
  
  <register acronym="RTIEVENTCAPTURESEL" id="RTIEVENTCAPTURESEL" offset="0x50" width="32">
    
  <bitfield begin="22" description="Setting the source of interrupt for Counter value capture for RTI1 Event1" end="16" id="EVT1" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="6" description="Setting the source of interrupt for Counter value capture for RTI1 Event0." end="0" id="EVT0" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CQCFG1" id="CQCFG1" offset="0x6C" width="32">
    
  <bitfield begin="30" description="128-bit Address offset which inidcates the start address for storing CQ0  (ADC/RxIF Saturation Detection) from the start of CQ memory. This is not the byte address offset but 128 bit address offset" end="22" id="CQ2BASEADDR" rwaccess="RW" width="9"></bitfield>
    
  <bitfield begin="21" description="128-bit Address offset which inidcates the start address for storing CQ0 (Signal Image Band Energy detection) from the start of CQ memory. This is not the byte address offset but 128 bit address offset" end="13" id="CQ1BASEADDR" rwaccess="RW" width="9"></bitfield>
    
  <bitfield begin="12" description="128-bit Address offset which inidcates the start address for storing CQ0 (Wide Band Energy detection) from the start of CQ memory. This is not the byte address offset but 128 bit address offset" end="4" id="CQ0BASEADDR" rwaccess="RW" width="9"></bitfield>
    
  <bitfield begin="3" description="This is used to pack the CQ data into only the LSB 96 bits of each row of the CQ memory. This can be used in 3 channel mode of LVDS where the ADC data and Chirp Params occupy only LSB 96 bits of each memory row." end="3" id="CQ96BITPACKEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="This is used to appropriately pack the valid CQ data bits in appropriate bits in the CQ memory. 00, 01->Raw 16,  10-->Raw 12,  11-->Raw14" end="0" id="CQDATAWIDTH" rwaccess="RW" width="2"></bitfield>
  </register>
  
  
  <register acronym="TPCCPARSTATCFG" id="TPCCPARSTATCFG" offset="0x80" width="32">
    
  <bitfield begin="10" description="Enable bit for the self test of the Parity logic in TPCC" end="10" id="TPCCPARITYTSTEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Enable bit for the Parity computation in TPCC" end="9" id="TPCCPARITYEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Clear bit for the Parity error from TPCC Write 0x1 to clear the status" end="8" id="TPCCPARITYCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="7" description="Parity address from TPCC" end="0" id="TPCCPARITYSTAT" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CSI2TXPARSTATCFG" id="CSI2TXPARSTATCFG" offset="0x84" width="32">
    
  <bitfield begin="10" description="Enable bit for the self test of the Parity logic in CSI2 FIFO" end="10" id="CSI2TXPARITYTSTEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Enable bit for the Parity computation in CSI2 FIFO" end="9" id="CSI2TXPARITYEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Clear bit for the Parity error from CSI2 FIFO Write 0x1 to clear the status" end="8" id="CSI2TXPARITYCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="6" description="TI Internal feature as this is a FIFO, Parity address from CSI2" end="0" id="CSI2TXPARITYSTAT" rwaccess="R" width="7"></bitfield>
  </register>
  
  
  <register acronym="CSICFG1" id="CSICFG1" offset="0xA0" width="32">
    
  <bitfield begin="23" description="CSI2 Lane 4 PD Enable 0x0: Pull down enabled 0x1: Pull down disabled     " end="23" id="CSIPIPD4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="CSI2 Lane 3 PD Enable 0x0: Pull down enabled 0x1: Pull down disabled     " end="22" id="CSIPIPD3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="CSI2 Lane 2 PD Enable 0x0: Pull down enabled 0x1: Pull down disabled     " end="21" id="CSIPIPD2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="CSI2 Lane 1 PD Enable 0x0: Pull down enabled 0x1: Pull down disabled     " end="20" id="CSIPIPD1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="CSI2 Lane 0 PD Enable 0x0: Pull down enabled 0x1: Pull down disabled     " end="19" id="CSIPIPD0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Idle Status of CSI2 Protocol Engine 0 : CSI2 Protocol Engine is out of Idle 1 : CSI2 Protocol Engine is in Idle" end="17" id="CSISIDLEACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="16" description="CSI2 Lane Enable For each bit, the following settings are valid: 0x0: Lane module disabled 0x1: Lane module enabled [16] CSI2 lane 4 enable [15] CSI2 lane 3 enable [14] CSI2 lane 2 enable [13] CSI2 lane 1 enable [12] CSI2 lane 0 enable" end="12" id="CSILANEENABLE" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="9" description="Configuration to send an Idle request to the CSI2 IP 0 : Request the CSI2 Protocol Engine to come out of Idle 1 : Request the CSI2 Protocol Engine to go into idle mode" end="9" id="CSIMIDLEREQ" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUSTADD0" id="TPTC0WRMPUSTADD0" offset="0x104" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 0 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUSTADD0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUSTADD1" id="TPTC0WRMPUSTADD1" offset="0x108" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 1 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUSTADD1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUSTADD2" id="TPTC0WRMPUSTADD2" offset="0x10C" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 2 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUSTADD2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUSTADD3" id="TPTC0WRMPUSTADD3" offset="0x110" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 3 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUSTADD3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUSTADD4" id="TPTC0WRMPUSTADD4" offset="0x114" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 4 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUSTADD4" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUSTADD5" id="TPTC0WRMPUSTADD5" offset="0x118" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 5 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUSTADD5" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUENDADD0" id="TPTC0WRMPUENDADD0" offset="0x124" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 0 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUENDADD0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUENDADD1" id="TPTC0WRMPUENDADD1" offset="0x128" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 1 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUENDADD1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUENDADD2" id="TPTC0WRMPUENDADD2" offset="0x12C" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 2 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUENDADD2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUENDADD3" id="TPTC0WRMPUENDADD3" offset="0x130" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 3 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUENDADD3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUENDADD4" id="TPTC0WRMPUENDADD4" offset="0x134" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 4 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUENDADD4" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUENDADD5" id="TPTC0WRMPUENDADD5" offset="0x138" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 5 for the MPU on the write port of TPTC0" end="0" id="TPTC0WRMPUENDADD5" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0WRMPUERRADD" id="TPTC0WRMPUERRADD" offset="0x144" width="32">
    
  <bitfield begin="31" description="Status register to Read the address that triggered an MPU error on the write port of TPTC0" end="0" id="TPTC0WRMPUERRADD" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUSTADD0" id="TPTC0RDMPUSTADD0" offset="0x148" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 0 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUSTADD0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUSTADD1" id="TPTC0RDMPUSTADD1" offset="0x14C" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 1 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUSTADD1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUSTADD2" id="TPTC0RDMPUSTADD2" offset="0x150" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 2 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUSTADD2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUSTADD3" id="TPTC0RDMPUSTADD3" offset="0x154" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 3 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUSTADD3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUSTADD4" id="TPTC0RDMPUSTADD4" offset="0x158" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 4 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUSTADD4" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUSTADD5" id="TPTC0RDMPUSTADD5" offset="0x15C" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 5 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUSTADD5" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUENDADD0" id="TPTC0RDMPUENDADD0" offset="0x168" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 0 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUENDADD0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUENDADD1" id="TPTC0RDMPUENDADD1" offset="0x16C" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 1 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUENDADD1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUENDADD2" id="TPTC0RDMPUENDADD2" offset="0x170" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 2 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUENDADD2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUENDADD3" id="TPTC0RDMPUENDADD3" offset="0x174" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 3 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUENDADD3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUENDADD4" id="TPTC0RDMPUENDADD4" offset="0x178" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 4 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUENDADD4" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUENDADD5" id="TPTC0RDMPUENDADD5" offset="0x17C" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 5 for the MPU on the read port of TPTC0" end="0" id="TPTC0RDMPUENDADD5" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC0RDMPUERRADD" id="TPTC0RDMPUERRADD" offset="0x188" width="32">
    
  <bitfield begin="31" description="Status register to Read the address that triggered an MPU error on the read port of TPTC0" end="0" id="TPTC0RDMPUERRADD" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUSTADD0" id="TPTC1WRMPUSTADD0" offset="0x18C" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 0 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUSTADD0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUSTADD1" id="TPTC1WRMPUSTADD1" offset="0x190" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 1 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUSTADD1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUSTADD2" id="TPTC1WRMPUSTADD2" offset="0x194" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 2 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUSTADD2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUSTADD3" id="TPTC1WRMPUSTADD3" offset="0x198" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 3 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUSTADD3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUSTADD4" id="TPTC1WRMPUSTADD4" offset="0x19C" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 4 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUSTADD4" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUSTADD5" id="TPTC1WRMPUSTADD5" offset="0x1A0" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 5 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUSTADD5" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUENDADD0" id="TPTC1WRMPUENDADD0" offset="0x1AC" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 0 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUENDADD0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUENDADD1" id="TPTC1WRMPUENDADD1" offset="0x1B0" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 1 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUENDADD1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUENDADD2" id="TPTC1WRMPUENDADD2" offset="0x1B4" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 2 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUENDADD2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUENDADD3" id="TPTC1WRMPUENDADD3" offset="0x1B8" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 3 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUENDADD3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUENDADD4" id="TPTC1WRMPUENDADD4" offset="0x1BC" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 4 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUENDADD4" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUENDADD5" id="TPTC1WRMPUENDADD5" offset="0x1C0" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 5 for the MPU on the write port of TPTC1" end="0" id="TPTC1WRMPUENDADD5" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1WRMPUERRADD" id="TPTC1WRMPUERRADD" offset="0x1CC" width="32">
    
  <bitfield begin="31" description="Status register to Read the address that triggered an MPU error on the write port of TPTC1" end="0" id="TPTC1WRMPUERRADD" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUSTADD0" id="TPTC1RDMPUSTADD0" offset="0x1D0" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 0 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUSTADD0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUSTADD1" id="TPTC1RDMPUSTADD1" offset="0x1D4" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 1 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUSTADD1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUSTADD2" id="TPTC1RDMPUSTADD2" offset="0x1D8" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 2 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUSTADD2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUSTADD3" id="TPTC1RDMPUSTADD3" offset="0x1DC" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 3 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUSTADD3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUSTADD4" id="TPTC1RDMPUSTADD4" offset="0x1E0" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 4 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUSTADD4" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUSTADD5" id="TPTC1RDMPUSTADD5" offset="0x1E4" width="32">
    
  <bitfield begin="31" description="Configure the Start address for Region 5 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUSTADD5" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUENDADD0" id="TPTC1RDMPUENDADD0" offset="0x1F0" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 0 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUENDADD0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUENDADD1" id="TPTC1RDMPUENDADD1" offset="0x1F4" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 1 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUENDADD1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUENDADD2" id="TPTC1RDMPUENDADD2" offset="0x1F8" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 2 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUENDADD2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUENDADD3" id="TPTC1RDMPUENDADD3" offset="0x1FC" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 3 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUENDADD3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUENDADD4" id="TPTC1RDMPUENDADD4" offset="0x200" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 4 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUENDADD4" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUENDADD5" id="TPTC1RDMPUENDADD5" offset="0x204" width="32">
    
  <bitfield begin="31" description="Configure the End address for Region 5 for the MPU on the read port of TPTC1" end="0" id="TPTC1RDMPUENDADD5" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTC1RDMPUERRADD" id="TPTC1RDMPUERRADD" offset="0x210" width="32">
    
  <bitfield begin="31" description="Status register to Read the address that triggered an MPU error on the read port of TPTC1" end="0" id="TPTC1RDMPUERRADD" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="TPTCMPUVALIDCFG" id="TPTCMPUVALIDCFG" offset="0x214" width="32">
    
  <bitfield begin="31" description="Configure the Valid bit for each address range for the MPU in the read port of TPTC1. [0]->Address0 and [5]-->Address5 Each bit corresponds to a MPU region 0 : Region is disbaled 1 : Regsion is enabled" end="24" id="TPTC1RDMPURNGVLD" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Configure the Valid bit for each address range for the MPU in the write port of TPTC1. [0]->Address0 and [5]-->Address5 Each bit corresponds to a MPU region 0 : Region is disbaled 1 : Regsion is enabled" end="16" id="TPTC1WRMPURNGVLD" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Configure the Valid bit for each address range for the MPU in the read port of TPTC0. [0]->Address0 and [5]-->Address5 Each bit corresponds to a MPU region 0 : Region is disbaled 1 : Regsion is enabled" end="8" id="TPTC0RDMPURNGVLD" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="Configure the Valid bit for each address range for the MPU in the write port of TPTC0. [0]->Address0 and [5]-->Address5 Each bit corresponds to a MPU region 0 : Region is disbaled 1 : Regsion is enabled" end="0" id="TPTC0WRMPURNGVLD" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="TPTCMPUENCFG" id="TPTCMPUENCFG" offset="0x218" width="32">
    
  <bitfield begin="7" description="Clear flag for Error from the MPU in the read port of TPTC1. Write 0x1 to clear the MPU error" end="7" id="TPTC1RDMPUERRCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="6" description="Clear flag for Error from the MPU in the write port of TPTC1. Write 0x1 to clear the MPU error" end="6" id="TPTC1WRMPUERRCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="5" description="Clear flag for Error from the MPU in the read port of TPTC0. Write 0x1 to clear the MPU error" end="5" id="TPTC0RDMPUERRCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="4" description="Clear flag for Error from the MPU in the write port of TPTC0. Write 0x1 to clear the MPU error" end="4" id="TPTC0WRMPUERRCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="3" description="Enable bit for the MPU in the read port of TPTC1. 0 : MPU is disabled 1 : MPU is enabled" end="3" id="TPTC1RDMPUEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Enable bit for the MPU in the write port of TPTC1. 0 : MPU is disabled 1 : MPU is enabled" end="2" id="TPTC1WRMPUEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Enable bit for the MPU in the read port of TPTC0. 0 : MPU is disabled 1 : MPU is enabled" end="1" id="TPTC0RDMPUEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Enable bit for the MPU in the write port of TPTC0. 0 : MPU is disabled 1 : MPU is enabled" end="0" id="TPTC0WRMPUEN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="TESTPATTERNRX1ICFG" id="TESTPATTERNRX1ICFG" offset="0x21C" width="32">
    
  <bitfield begin="31" description=" Value to be added for each successive sample for the test pattern data in I channel Rx channel 0. In this register the naming convention for the 4 Rx channel indices are from 1 to 4 instead of 0 to 3." end="16" id="TSTPATRX1IINCR" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Offset value to be used for the first sample for the test pattern data in I channel Rx channel 0. In this register the naming convention for the 4 Rx channel indices are from 1 to 4 instead of 0 to 3." end="0" id="TSTPATRX1IOFFSET" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="TESTPATTERNRX2ICFG" id="TESTPATTERNRX2ICFG" offset="0x220" width="32">
    
  <bitfield begin="31" description=" Value to be added for each successive sample for the test pattern data in I channel Rx channel 1." end="16" id="TSTPATRX2IINCR" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Offset value to be used for the first sample for the test pattern data in I channel Rx channel 1." end="0" id="TSTPATRX2IOFFSET" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="TESTPATTERNRX3ICFG" id="TESTPATTERNRX3ICFG" offset="0x224" width="32">
    
  <bitfield begin="31" description=" Value to be added for each successive sample for the test pattern data in I channel Rx channel 2" end="16" id="TSTPATRX3IINCR" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Offset value to be used for the first sample for the test pattern data in I channel Rx channel 2" end="0" id="TSTPATRX3IOFFSET" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="TESTPATTERNRX4ICFG" id="TESTPATTERNRX4ICFG" offset="0x228" width="32">
    
  <bitfield begin="31" description=" Value to be added for each successive sample for the test pattern data in I channel Rx channel 3" end="16" id="TSTPATRX4IINCR" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Offset value to be used for the first sample for the test pattern data in I channel Rx channel 3" end="0" id="TSTPATRX4IOFFSET" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="TESTPATTERNRX1QCFG" id="TESTPATTERNRX1QCFG" offset="0x22C" width="32">
    
  <bitfield begin="31" description=" Value to be added for each successive sample for the test pattern data in Q channel Rx channel 0. In this register the naming convention for the 4 Rx channel indices are from 1 to 4 instead of 0 to 3." end="16" id="TSTPATRX1QINCR" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Offset value to be used for the first sample for the test pattern data in Q channel Rx channel 0. In this register the naming convention for the 4 Rx channel indices are from 1 to 4 instead of 0 to 3." end="0" id="TSTPATRX1QOFFSET" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="TESTPATTERNRX2QCFG" id="TESTPATTERNRX2QCFG" offset="0x230" width="32">
    
  <bitfield begin="31" description=" Value to be added for each successive sample for the test pattern data in Q channel Rx channel 1." end="16" id="TSTPATRX2QINCR" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Offset value to be used for the first sample for the test pattern data in Q channel Rx channel 1." end="0" id="TSTPATRX2QOFFSET" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="TESTPATTERNRX3QCFG" id="TESTPATTERNRX3QCFG" offset="0x234" width="32">
    
  <bitfield begin="31" description=" Value to be added for each successive sample for the test pattern data in Q channel Rx channel 2" end="16" id="TSTPATRX3QINCR" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Offset value to be used for the first sample for the test pattern data in Q channel Rx channel 2" end="0" id="TSTPATRX3QOFFSET" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="TESTPATTERNRX4QCFG" id="TESTPATTERNRX4QCFG" offset="0x238" width="32">
    
  <bitfield begin="31" description=" Value to be added for each successive sample for the test pattern data in Q channel Rx channel 3" end="16" id="TSTPATRX4QINCR" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Offset value to be used for the first sample for the test pattern data in Q channel Rx channel 3" end="0" id="TSTPATRX4QOFFSET" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="TESTPATTERNVLDCFG" id="TESTPATTERNVLDCFG" offset="0x23C" width="32">
    
  <bitfield begin="10" description="Enable for test pattern generator. This is used to Mux with the functional data from BSS. 000 -->Disable, 111-->Enable, Others are reserved." end="8" id="TSTPATGENEN" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description="Number of DSS Interconnect clocks (200 MHz) between successive samples for the test pattern gen." end="0" id="TSTPATVLDCNT" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="DSSMISC" id="DSSMISC" offset="0x240" width="32">
    
  <bitfield begin="8" description="Enable HW Accelerator  000-->Disable,  111-->Enable,  Others are reserved." end="6" id="FFTACCSLVEN" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="TPCC1PARSTATCFG" id="TPCC1PARSTATCFG" offset="0x258" width="32">
    
  <bitfield begin="11" description="Enable bit for the self test of the Parity logic in TPCC" end="11" id="TPCC1PARITYTSTEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Enable bit for the Parity computation in TPCC" end="10" id="TPCC1PARITYEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Clear bit for the Parity error from TPCC Write 0x1 to clear the status" end="9" id="TPCC1PARITYCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="8" description="Parity address from TPCC" end="0" id="TPCC1PARITYSTAT" rwaccess="R" width="9"></bitfield>
  </register>
  
  
  <register acronym="DMMSWINT1" id="DMMSWINT1" offset="0x260" width="32">
    
  <bitfield begin="22" description="CQ Write Enable from DMM. 0 --> Write to CQ memory will happen from DFE and Ping-pong select will come from HW FSM (same as ADC Buffer ping-pong select). 1 --> Write to CQ memory will happen from CQ_W slave port in DSS interconnect using DMM as master and Ping-pong select will come from DMMCQPINPONSEL register." end="22" id="DMMCQWREN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="CQ Ping Pong select for HIL Mode" end="21" id="DMMCQPINPONSEL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Select signal for Muxing between HW Registers/Memory for CPBPM data. 0 --> Read access from CPBPM_MEM slave in DSS interconnect will be routed to HW Registers which is populated by DFE/RampGen, 1 --> Read access from CPBPM_MEM slave in DSS interconnect will be routed to appropriate CPBPM memory (Ping/Pong)." end="20" id="DMMCPBPMMEMSEL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="CPBPM Write Enable from DMM. 0 --> Ping-pong select will come from HW FSM (same as ADC Buffer ping-pong select). 1 --> Ping-pong select will come from DMMCPBPMPINPONSEL register." end="19" id="DMMCPBPMWREN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="CP BPM Ping Pong select for HIL Mode" end="18" id="DMMCPBPMPINPONSEL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="ADC Buffer Write Enable from DMM. 0 --> Write to ADC BUF memory will happen from DFE and Ping-pong select will come from HW FSM (same as ADC Buffer ping-pong select). 1 --> Write to CQ memory will happen from ADCBUF_W slave port in DSS interconnect using DMM as master and Ping-pong select will come from DMMADCBUFPINPONSEL register." end="17" id="DMMADCBUFWREN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="ADC Buffer Ping Pong select for HIL Mode" end="16" id="DMMADCBUFPINPONSEL" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSSINTRCFG" id="DSSINTRCFG" offset="0x270" width="32">
    
  <bitfield begin="7" description="[0] - Used to select between DFE and DMM Global Logical Frame Start CFG Bit.                     0 --> Select DFE Logical Frame Start,                     1--> Select DMM Global Logical Frame start CFG Bit.  [1] - Used to select between the result from above mentioned Mux and DMM SW Interrupt 0.                    0 --> Selects the result of above mentioned mux.                    1 --> Selects DMM SW Interrupt 3." end="6" id="LGFRAMESTRTINTMUXSEL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="5" description="[0] - Used to select between VIN/DFE and DMM Global Frame Start CFG Bit.                     0 --> Select VIN/DFE Ping Pong Switch,                     1--> Select DMM Global Ping Pong Switch CFG Bit.  [1] - Used to select between the result from above mentioned Mux and DMM SW Interrupt 0.                    0 --> Selects the result of above mentioned mux.                    1 --> Selects DMM SW Interrupt 2." end="4" id="PINPONINTMUXSEL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="3" description="[0] - Used to select between VIN/DFE and DMM Global Frame Start CFG Bit.                     0 --> Select VIN/DFE Chirp Available,                     1--> Select DMM Global Chirp Available CFG Bit.  [1] - Used to select between the result from above mentioned Mux and DMM SW Interrupt 0.                    0 --> Selects the result of above mentioned mux.                    1 --> Selects DMM SW Interrupt 1." end="2" id="CHIRPAVLINTMUXSEL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="1" description="[0] - Used to select between VIN/DFE and DMM Global Frame Start CFG Bit.                     0 --> Select VIN/DFE Frame Start,                     1--> Select DMM Global Frame start CFG Bit.  [1] - Used to select between the result from above mentioned Mux and DMM SW Interrupt 0.                    0 --> Selects the result of above mentioned mux.                    1 --> Selects DMM SW Interrupt 0." end="0" id="FRAMESTRTINTMUXSEL" rwaccess="RW" width="2"></bitfield>
  </register>
  
  
  <register acronym="MPUMSTIDCFG1" id="MPUMSTIDCFG1" offset="0x274" width="32">
    
  <bitfield begin="31" description="MPU on the MSS -> DSS CFG. Only Masters with Master ID configured in MPUMSTID[0-7] are allowed to access the DSS CFG Space. Allowed MSTID3. Defaule value maps to RS232 Port" end="24" id="MPUMSTID3" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="MPU on the MSS -> DSS CFG. Only Masters with Master ID configured in MPUMSTID[0-7] are allowed to access the DSS CFG Space. Allowed MSTID2. Defaule value maps to MSS DAP Port" end="16" id="MPUMSTID2" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="MPU on the MSS -> DSS CFG. Only Masters with Master ID configured in MPUMSTID[0-7] are allowed to access the DSS CFG Space. Allowed MSTID0. Defaule value maps to MSS CR4 Read Port" end="8" id="MPUMSTID1" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="MPU on the MSS -> DSS CFG. Only Masters with Master ID configured in MPUMSTID[0-7] are allowed to access the DSS CFG Space. Allowed MSTID0. Defaule value maps to MSS CR4 Read Port" end="0" id="MPUMSTID0" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="MPUMSTIDCFG2" id="MPUMSTIDCFG2" offset="0x278" width="32">
    
  <bitfield begin="31" description="MPU on the MSS -> DSS CFG. Only Masters with Master ID configured in MPUMSTID[0-7] are allowed to access the DSS CFG Space. Allowed MSTID7. Defaule value maps to RS232 Port" end="24" id="MPUMSTID7" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Allowed MSTID6. Defaule value maps to MSS DAP Port" end="16" id="MPUMSTID6" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="MPU on the MSS -> DSS CFG. Only Masters with Master ID configured in MPUMSTID[0-7] are allowed to access the DSS CFG Space. Allowed MSTID5 Defaule value maps to MSS CR4 Write Port" end="8" id="MPUMSTID5" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="MPU on the MSS -> DSS CFG. Only Masters with Master ID configured in MPUMSTID[0-7] are allowed to access the DSS CFG Space. Allowed MSTID4. Defaule value maps to MSS CR4 Read Port" end="0" id="MPUMSTID4" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="MPUMSTIDCFG3" id="MPUMSTIDCFG3" offset="0x27C" width="32">
    
  <bitfield begin="19" description="Enable control for Master ID based MPU 0 --> Disabled,  1 --> Enabled" end="19" id="MPUMSTIDEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Error clear pulse for Master ID based MPU Write 0x1 to clear the previous error status " end="17" id="MPUERRCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="15" description="Error status field. Provides the Master ID which is not part of the allowed list which caused an error." end="8" id="MPUERRMSTID" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Master ID valid. Each bit corresponds to the MPUMSTID[7:0] 0 : Master ID entry is valid 1 : Master ID entry is not valid and entry does not have access to DSS CFG Space" end="0" id="MPUMSTIDVLD" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="HSRAM1ECCCFG" id="HSRAM1ECCCFG" offset="0x280" width="32">
    
  <bitfield begin="22" description="Bit position of the repaired bit in HSRAM1" end="15" id="HSRAM1ECCREPAIREDBIT" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="14" description="ECC Fault address in HSRAM1" end="4" id="HSRAM1ECCFAULTADDRESS" rwaccess="R" width="11"></bitfield>
    
  <bitfield begin="3" description="Clear bit for ECC Error Indication in HSRAM1 Write 0x1 to clear the error status" end="3" id="HSRAM1ECCERRCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="2" description="Enable for ECC in HSRAM1" end="2" id="HSRAM1ECCEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Done status for ECC Init for HSRAM1" end="1" id="HSRAM1ECCINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="ECC Init For HSRAM1" end="0" id="HSRAM1ECCINIT" rwaccess="" width="1"></bitfield>
  </register>
  
  
  <register acronym="DATATRRAMECCCFG" id="DATATRRAMECCCFG" offset="0x288" width="32">
    
  <bitfield begin="20" description="Bit position of the repaired bit in DATATRRAM" end="13" id="DATATRRAMECCREPAIREDBIT" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="12" description="ECC Fault address in DATATRRAM" end="4" id="DATATRRAMECCFAULTADDRESS" rwaccess="R" width="9"></bitfield>
    
  <bitfield begin="3" description="Clear bit for ECC Error Indication in DATATRRAM Write 0x1 to clear the error status" end="3" id="DATATRRAMECCERRCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="2" description="Enable for ECC in DATATRRAM" end="2" id="DATATRRAMECCEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Done status for ECC Init for Data Transfer RAM" end="1" id="DATATRRAMECCINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="ECC Init For Data Transfer RAM" end="0" id="DATATRRAMECCINIT" rwaccess="" width="1"></bitfield>
  </register>
  
  
  <register acronym="ADCBUFPINGECCCFG" id="ADCBUFPINGECCCFG" offset="0x28C" width="32">
    
  <bitfield begin="22" description="Bit position of the repaired bit in ADC Buffer Ping Memory" end="15" id="ADCBUFPINGECCREPAIREDBIT" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="14" description="ECC Fault address in ADC Buffer Ping Memory" end="4" id="ADCBUFPINGECCFAULTADDRESS" rwaccess="R" width="11"></bitfield>
    
  <bitfield begin="3" description="Clear bit for ECC Error Indication in ADC Buffer Ping Memory Write 0x1 to clear the error status" end="3" id="ADCBUFPINGECCERRCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="2" description="Enable for ECC in ADC Buffer Ping Memory" end="2" id="ADCBUFPINGECCEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Done status for ECC Init for ADC Buffer Ping Memory" end="1" id="ADCBUFPINGECCINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="ECC Init For ADC Buffer Ping Memory" end="0" id="ADCBUFPINGECCINIT" rwaccess="" width="1"></bitfield>
  </register>
  
  
  <register acronym="ADCBUFPONGECCCFG" id="ADCBUFPONGECCCFG" offset="0x290" width="32">
    
  <bitfield begin="22" description="Bit position of the repaired bit in ADC Buffer Pong Memory" end="15" id="ADCBUFPONGECCREPAIREDBIT" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="14" description="ECC Fault address in ADC Buffer Pong Memory" end="4" id="ADCBUFPONGECCFAULTADDRESS" rwaccess="R" width="11"></bitfield>
    
  <bitfield begin="3" description="Clear bit for ECC Error Indication in ADC Buffer Pong Memory Write 0x1 to clear the error status" end="3" id="ADCBUFPONGECCERRCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="2" description="Enable for ECC in ADC Buffer Pong Memory" end="2" id="ADCBUFPONGECCEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Done status for ECC Init for ADC Buffer Pong Memory" end="1" id="ADCBUFPONGECCINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="ECC Init For ADC Buffer Pong Memory" end="0" id="ADCBUFPONGECCINIT" rwaccess="" width="1"></bitfield>
  </register>
  
  
  <register acronym="UMAP0PARITYCFG1" id="UMAP0PARITYCFG1" offset="0x29C" width="32">
    
  <bitfield begin="25" description="Address corresponding to the parity error in Bank2 or Bank3 of UMAP0." end="15" id="UMAP0BANK23ADDOUT" rwaccess="R" width="11"></bitfield>
    
  <bitfield begin="14" description="Address corresponding to the parity error in Bank0 or Bank1 of UMAP0" end="4" id="UMAP0BANK01ADDOUT" rwaccess="R" width="11"></bitfield>
    
  <bitfield begin="3" description="Parity Error indication from either Bank2 or Bank3 of UMAP0" end="3" id="UMAP0BANK23ERROUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Parity Error indication from either Bank 0 or Bank1 of UMAP0" end="2" id="UMAP0BANK01ERROUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Clear pulse for all the error status from UMAP0 parity check logic. Self-clearing pulse Write 0x1 to clear the error status" end="1" id="UMAP0PARERRCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="0" description="Enable for UMAP0 Parity Check logic. Assumed to be static. 0 --> Disable 1 --> Enable" end="0" id="UMAP0PAREN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="UMAP0PARITYCFG2" id="UMAP0PARITYCFG2" offset="0x2A0" width="32">
    
  <bitfield begin="31" description="Bit level indication corresponding to parity error from UMAP0 Bank1." end="16" id="UMAP0BANK1BITOUT" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="Bit level indication corresponding to parity error from UMAP0 Bank0." end="0" id="UMAP0BANK0BITOUT" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="UMAP0PARITYCFG3" id="UMAP0PARITYCFG3" offset="0x2A4" width="32">
    
  <bitfield begin="31" description="Bit level indication corresponding to parity error from UMAP0 Bank3." end="16" id="UMAP0BANK3BITOUT" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="Bit level indication corresponding to parity error from UMAP0 Bank2." end="0" id="UMAP0BANK2BITOUT" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="UMAP1PARITYCFG1" id="UMAP1PARITYCFG1" offset="0x2A8" width="32">
    
  <bitfield begin="25" description="Address corresponding to the parity error in Bank2 or Bank3 of UMAP1." end="15" id="UMAP1BANK23ADDOUT" rwaccess="R" width="11"></bitfield>
    
  <bitfield begin="14" description="Address corresponding to the parity error in Bank0 or Bank1 of UMAP1" end="4" id="UMAP1BANK01ADDOUT" rwaccess="R" width="11"></bitfield>
    
  <bitfield begin="3" description="Parity Error indication from either Bank2 or Bank3 of UMAP1" end="3" id="UMAP1BANK23ERROUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Parity Error indication from either Bank 0 or Bank1 of UMAP1" end="2" id="UMAP1BANK01ERROUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Clear pulse for all the error status from UMAP1 parity check logic. Self-clearing pulse Write 0x1 to clear the error status" end="1" id="UMAP1PARERRCLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="0" description="Enable for UMAP1 Parity Check logic. Assumed to be static. 0 --> Disable 1 --> Enable" end="0" id="UMAP1PAREN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="UMAP1PARITYCFG2" id="UMAP1PARITYCFG2" offset="0x2AC" width="32">
    
  <bitfield begin="31" description="Bit level indication corresponding to parity error from UMAP1 Bank1." end="16" id="UMAP1BANK1BITOUT" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="Bit level indication corresponding to parity error from UMAP1 Bank0." end="0" id="UMAP1BANK0BITOUT" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="UMAP1PARITYCFG3" id="UMAP1PARITYCFG3" offset="0x2B0" width="32">
    
  <bitfield begin="31" description="Bit level indication corresponding to parity error from UMAP1 Bank3." end="16" id="UMAP1BANK3BITOUT" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="Bit level indication corresponding to parity error from UMAP1 Bank2." end="0" id="UMAP1BANK2BITOUT" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="ESMGRP2MASKCFG" id="ESMGRP2MASKCFG" offset="0x2B4" width="32">
    
  <bitfield begin="31" description="Bbit level mask for each of the error signal connected to ESM Group2 input." end="0" id="ESMGRP2MASK" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="L2MEMINITCFG1" id="L2MEMINITCFG1" offset="0x2B8" width="32">
    
  <bitfield begin="31" description="Init Done status from UMAP1 Bank3 Parity memory" end="31" id="UMAP1BANK3PARINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="Init Done status from UMAP1 Bank2 Parity memory" end="30" id="UMAP1BANK2PARINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="29" description="Init Done status from UMAP1 Bank1 Parity memory" end="29" id="UMAP1BANK1PARINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="28" description="Init Done status from UMAP1 Bank0 Parity memory" end="28" id="UMAP1BANK0PARINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="27" description="Init Done status from UMAP0 Bank3 Parity memory" end="27" id="UMAP0BANK3PARINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description="Init Done status from UMAP0 Bank2 Parity memory" end="26" id="UMAP0BANK2PARINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="25" description="Init Done status from UMAP0 Bank1 Parity memory" end="25" id="UMAP0BANK1PARINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="24" description="Init Done status from UMAP0 Bank0 Parity memory" end="24" id="UMAP0BANK0PARINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="23" description="Init Done status from UMAP1 Bank3 Data memory" end="23" id="UMAP1BANK3DATAINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="22" description="Init Done status from UMAP1 Bank2 Data memory" end="22" id="UMAP1BANK2DATAINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="21" description="Init Done status from UMAP1 Bank1 Data memory" end="21" id="UMAP1BANK1DATAINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="20" description="Init Done status from UMAP1 Bank0 Data memory" end="20" id="UMAP1BANK0DATAINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="19" description="Init Done status from UMAP0 Bank3 Data memory" end="19" id="UMAP0BANK3DATAINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="Init Done status from UMAP0 Bank2 Data memory" end="18" id="UMAP0BANK2DATAINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="17" description="Init Done status from UMAP0 Bank1 Data memory" end="17" id="UMAP0BANK1DATAINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="16" description="Init Done status from UMAP0 Bank0 Data memory" end="16" id="UMAP0BANK0DATAINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="15" description="Init trigger for UMAP1 Bank3 Parity memory" end="15" id="UMAP1BANK3PARINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="14" description="Init trigger for UMAP1 Bank2 Parity memory" end="14" id="UMAP1BANK2PARINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="13" description="Init trigger for UMAP1 Bank1 Parity memory" end="13" id="UMAP1BANK1PARINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="12" description="Init trigger for UMAP1 Bank0 Parity memory" end="12" id="UMAP1BANK0PARINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="11" description="Init trigger for UMAP0 Bank3 Parity memory" end="11" id="UMAP0BANK3PARINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="10" description="Init trigger for UMAP0 Bank2 Parity memory" end="10" id="UMAP0BANK2PARINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="9" description="Init trigger for UMAP0 Bank1 Parity memory" end="9" id="UMAP0BANK1PARINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="8" description="Init trigger for UMAP0 Bank0 Parity memory" end="8" id="UMAP0BANK0PARINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="7" description="Init trigger for UMAP1 Bank3 Data memory" end="7" id="UMAP1BANK3DATAINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="6" description="Init trigger for UMAP1 Bank2 Data memory" end="6" id="UMAP1BANK2DATAINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="5" description="Init trigger for UMAP1 Bank1 Data memory" end="5" id="UMAP1BANK1DATAINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="4" description="Init trigger for UMAP1 Bank0 Data memory" end="4" id="UMAP1BANK0DATAINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="3" description="Init trigger for UMAP0 Bank3 Data memory" end="3" id="UMAP0BANK3DATAINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="2" description="Init trigger for UMAP0 Bank2 Data memory" end="2" id="UMAP0BANK2DATAINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="1" description="Init trigger for UMAP0 Bank1 Data memory" end="1" id="UMAP0BANK1DATAINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="0" description="Init trigger for UMAP0 Bank0 Data memory" end="0" id="UMAP0BANK0DATAINIT" rwaccess="" width="1"></bitfield>
  </register>
  
  
  <register acronym="L2MEMINITCFG2" id="L2MEMINITCFG2" offset="0x2BC" width="32">
    
  <bitfield begin="7" description="Init Done Status for UMAP1 Bank1 PRAM memory" end="7" id="UMAP1BANK1PRAMINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Init Done Status for UMAP1 Bank0 PRAM memory" end="6" id="UMAP1BANK0PRAMINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Init Done Status for UMAP0 Bank1 PRAM memory" end="5" id="UMAP0BANK1PRAMINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="Init Done Status for UMAP0 Bank0 PRAM memory" end="4" id="UMAP0BANK0PRAMINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="Init trigger for UMAP1 Bank1 PRAM memory" end="3" id="UMAP1BANK1PRAMINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="2" description="Init trigger for UMAP1 Bank0 PRAM memory" end="2" id="UMAP1BANK0PRAMINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="1" description="Init trigger for UMAP0 Bank1 PRAM memory" end="1" id="UMAP0BANK1PRAMINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="0" description="Init trigger for UMAP0 Bank0 PRAM memory" end="0" id="UMAP0BANK0PRAMINIT" rwaccess="" width="1"></bitfield>
  </register>
  
  
  <register acronym="GEMRSTCAUSE" id="GEMRSTCAUSE" offset="0x2C0" width="32">
    
  <bitfield begin="24" description="Write 0x1 to clear the reset cause register for any previous resets" end="24" id="GEMRSTCAUSECLR" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="23" description="TRM Description : Only show the resets that are exposed in TOPRCM  TI Restricted Description  DSP POR reset Bitwise Indication : Bit 0 : Por Reset Bit 1 : Sub system Reset from TOPRCM Bit 2 : Reset from TOPRCM Bit 3 : Reset from Power FSM Bit 4 : Reset from STC FSM" end="16" id="GEMPORCAUSE" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="TRM Description : Only show the resets that are exposed in TOPRCM  TI Restricted Description  DSP Greset Bitwise Indication : Bit 0 : Por Reset Bit 1 : Sub system Reset from TOPRCM Bit 2 : Rese from TOPRCM Bit 3 : Reset from Power FSM Bit 4 : Reset from STC FSM" end="8" id="GEMGRSTCAUSE" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="TRM Description : Only show the resets that are exposed in TOPRCM  TI Restricted Description  DSP Lreset Bitwise Indication : Bit 0 : Por Reset Bit 1 : Sub system Reset from TOPRCM Bit 2 : Reset from TOPRCM Bit 3 : Reset from Debugss Bit 4 : Reset from Power FSM Bit 5 : Reset from STC FSM" end="0" id="GEMLRSTCAUSE" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="GEMPWRSMCFG3" id="GEMPWRSMCFG3" offset="0x2C8" width="32">
    
  <bitfield begin="19" description="Power Mode status of GEM. 00 --> Powered OFF, 01 --> Transitioning from OFF to ON state. 10 --> Transitioning from ON to OFF state. 11 --> Powered ON." end="18" id="PWRSMMODESTATUS" rwaccess="R" width="2"></bitfield>
  </register>
  
  
  <register acronym="GEMPWRSMCFG4" id="GEMPWRSMCFG4" offset="0x2CC" width="32">
    
  <bitfield begin="18" description="Mask bit for events going to DSP. When this bit is set (during GEM sleep/power down mode), the events are monitored outside and will be available for DSP to read and clear them once GEM wakes-up. The monitored events can be read from PWRSMEVNTMONSTATx registers." end="18" id="GEMEVENTMASK" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Signal to halt DSP Power cycle state machine before de-asserting LRST of DSP.  This is used during code download for the first time power up." end="17" id="PWRSMLRSTHALT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Sleep mode trigger for DSP power down state machine. This will be honoured only when DSP is in GEM_ON state." end="16" id="PWRSMSLEEPTRIG" rwaccess="" width="1"></bitfield>
  </register>
  
  
  <register acronym="PWRSMWAKEMASK0" id="PWRSMWAKEMASK0" offset="0x2D4" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the wakeup source bits [31:0] 1 --> Masked, 0 --> Unmasked." end="0" id="PWRSMWAKEMASK0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMWAKEMASK1" id="PWRSMWAKEMASK1" offset="0x2D8" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the wakeup source bits [63:32] 1 --> Masked, 0 --> Unmasked." end="0" id="PWRSMWAKEMASK1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMWAKEMASK2" id="PWRSMWAKEMASK2" offset="0x2DC" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the wakeup source bits [95:64] 1 --> Masked, 0 --> Unmasked." end="0" id="PWRSMWAKEMASK2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMMISEVTMASK0" id="PWRSMMISEVTMASK0" offset="0x2E0" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the missed events before getting pushed into GEM. Corresponds to Event lines[31:0] 1 --> Masked, 0 --> Unmasked." end="0" id="PWRSMMISEVTMASK0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMMISEVTMASK1" id="PWRSMMISEVTMASK1" offset="0x2E4" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the missed events before getting pushed into GEM. Corresponds to Event lines[63:32] 1 --> Masked, 0 --> Unmasked." end="0" id="PWRSMMISEVTMASK1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMMISEVTMASK2" id="PWRSMMISEVTMASK2" offset="0x2E8" width="32">
    
  <bitfield begin="31" description="Bit level mask for each of the missed events before getting pushed into GEM. Corresponds to Event lines[95:64] 1 --> Masked, 0 --> Unmasked." end="0" id="PWRSMMISEVTMASK2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMWAKESRCSTAT0" id="PWRSMWAKESRCSTAT0" offset="0x2EC" width="32">
    
  <bitfield begin="31" description="Wakeup source status bits [31:0]" end="0" id="PWRSMWAKESRCSTAT0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMWAKESRCSTAT1" id="PWRSMWAKESRCSTAT1" offset="0x2F0" width="32">
    
  <bitfield begin="31" description="Wakeup source status bits [63:32]" end="0" id="PWRSMWAKESRCSTAT1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMWAKESRCSTAT2" id="PWRSMWAKESRCSTAT2" offset="0x320" width="32">
    
  <bitfield begin="31" description="Wakeup source status bits [95:64]" end="0" id="PWRSMWAKESRCSTAT2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMEVNTMONSTAT0" id="PWRSMEVNTMONSTAT0" offset="0x324" width="32">
    
  <bitfield begin="31" description="Missed events monitor status bits [31:0]. This is monitored when the events going to DSP are masked by GEMEVENTMASK register." end="0" id="PWRSMEVNTMONSTAT0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMEVNTMONSTAT1" id="PWRSMEVNTMONSTAT1" offset="0x328" width="32">
    
  <bitfield begin="31" description="Missed events monitor status bits [63:32]" end="0" id="PWRSMEVNTMONSTAT1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMEVNTMONSTAT2" id="PWRSMEVNTMONSTAT2" offset="0x32C" width="32">
    
  <bitfield begin="31" description="Missed events monitor status bits [95:64]" end="0" id="PWRSMEVNTMONSTAT2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMWAKESRCSTATCLR0" id="PWRSMWAKESRCSTATCLR0" offset="0x330" width="32">
    
  <bitfield begin="31" description="Clear bit for wakeup source status bits [31:0]. Write 0x1 to clear the corrsponding status bit" end="0" id="PWRSMWAKESRCSTATCLR0" rwaccess="" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMWAKESRCSTATCLR1" id="PWRSMWAKESRCSTATCLR1" offset="0x334" width="32">
    
  <bitfield begin="31" description="Clear bit for wakeup source status bits [63:32]. Write 0x1 to clear the corrsponding status bit" end="0" id="PWRSMWAKESRCSTATCLR1" rwaccess="" width="32"></bitfield>
  </register>
  
  
  <register acronym="PWRSMWAKESRCSTATCLR2" id="PWRSMWAKESRCSTATCLR2" offset="0x338" width="32">
    
  <bitfield begin="31" description="Clear bit for wakeup source status bits [95:64]. Write 0x1 to clear the corrsponding status bit" end="0" id="PWRSMWAKESRCSTATCLR2" rwaccess="" width="32"></bitfield>
  </register>
  
  
  <register acronym="ADCBUFCFG1" id="ADCBUFCFG1" offset="0x33C" width="32">
    
  <bitfield begin="15" description="Stop Pulse for Continuous mode. The data capture will stop once this register is set. Continous mode is expected to be only used for CZ and ADC Buffer Testpattern mode" end="15" id="ADCBUFCONTSTOPPL" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="14" description="Start Pulse for Continuous mode. The data capture will start from Address 0 once this register is set. All the other configurations like Enable, Sample Count are expected to be programmed before this pulse. Continous mode is expected to be only used for CZ and ADC Buffer Testpattern mode" end="14" id="ADCBUFCONTSTRTPL" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="13" description="Continuous mode enable for ADC Buffer.  This is set when a fixed number of samples have to be stored in Ping/Pong and not depend on Chirp time-lines (Eg: Analog Lab characterization to stream out continuous data from DFE). Continous mode is expected to be only used for CZ and ADC Buffer Testpattern mode" end="13" id="ADCBUFCONTMODEEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="This needs to be programmed to 0x1 in AR16xx 0 --> Interleaved, 1 --> Non-interleaved" end="12" id="ADCBUFWRITEMODE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Enable for Rx3 write" end="9" id="RX3EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Enable for Rx2 write" end="8" id="RX2EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Enable for Rx1 write" end="7" id="RX1EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Enable for Rx0 write" end="6" id="RX0EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="0 --> I is stored in LSB and Q is stored in MSB 1 --> Q is stored in LSB and I is stored in MSB" end="5" id="ADCBUFIQSWAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="0-->Complex Data mode, 1-->Real data mode" end="2" id="ADCBUFREALONLYMODE" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ADCBUFCFG2" id="ADCBUFCFG2" offset="0x340" width="32">
    
  <bitfield begin="26" description="128 bit Address offset to be added to the internal address pointer for Rx1 writes in Non-interleaved mode." end="16" id="ADCBUFADDRX1" rwaccess="RW" width="11"></bitfield>
    
  <bitfield begin="10" description="128 bit Address offset to be added to the internal address pointer for Rx0 writes in Non-interleaved mode." end="0" id="ADCBUFADDRX0" rwaccess="RW" width="11"></bitfield>
  </register>
  
  
  <register acronym="ADCBUFCFG3" id="ADCBUFCFG3" offset="0x344" width="32">
    
  <bitfield begin="26" description="128 bit Address offset to be added to the internal address pointer for Rx3 writes in Non-interleaved mode." end="16" id="ADCBUFADDRX3" rwaccess="RW" width="11"></bitfield>
    
  <bitfield begin="10" description="128 bit Address offset to be added to the internal address pointer for Rx2 writes in Non-interleaved mode." end="0" id="ADCBUFADDRX2" rwaccess="RW" width="11"></bitfield>
  </register>
  
  
  <register acronym="ADCBUFCFG4" id="ADCBUFCFG4" offset="0x348" width="32">
    
  <bitfield begin="25" description="Number of chirps to be stored in Pong buffer. This register should be programmed with one less than the actual number needed. This is used when data is written to Pong Memory.  The value written to this field should be the same as that configured for Ping" end="21" id="ADCBUFNUMCHRPPONG" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="20" description="Number of chirps to be stored in Ping buffer. This register should be programmed with one less than the actual number needed. This is used when data is written to Pong Memory. The value written to this field should be the same as that configured for Pong" end="16" id="ADCBUFNUMCHRPPING" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="15" description="No of samples to store in each Ping and Pong register in continuous mode of ADC Buffer. In real only mode this refers to the number of real samples and in complex mode, this refers to number of complex samples.  This refers to the number of samples per channel. This counter increments once for every new sample from DFE (as long as 1 or more channels are enabled). The max allowed value varies depending on other configurations (No of channels enabled and real/complex data). Continous mode is expected to be only used for CZ and ADC Buffer Testpattern mode  " end="0" id="ADCBUFSAMPCNT" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="STCPBISTSMCFG1" id="STCPBISTSMCFG1" offset="0x34C" width="32">
    
  <bitfield begin="3" description="Configuration to halt the state machine before the final de-assertion of LRST to enable program download. 1 --> Halt, 0 --> Proceed." end="3" id="STCPBISTLRSTDASRTHALT" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="RTI2EVENTCAPTURESEL" id="RTI2EVENTCAPTURESEL" offset="0x358" width="32">
    
  <bitfield begin="22" description="Used to Select the event to be captured for RTI2 Event1." end="16" id="RTI2EVT1" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="6" description="Used to Select the event to be captured for RTI2 Event0." end="0" id="RTI2EVT0" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="DSSMISC5" id="DSSMISC5" offset="0x35C" width="32">
    
  <bitfield begin="7" description="Mem init done status for the TPCC1 parity memory" end="7" id="TPCC1PARMEMINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Mem init done status for the TPCC0 parity memory" end="6" id="TPCC0PARMEMINITDONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Mem init for the TPCC1 parity memory" end="5" id="TPCC1PARMEMINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="4" description="Mem init for the TPCC0 parity memory" end="4" id="TPCC0PARMEMINIT" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="3" description="Ping pong select override value for CPBPM Memory. 1 --> Read access from CPBPM_MEM Slave of DSS Interconnect will be routed to ping memory and write access from CPBPM_W write will be routed to pong memory. 0 --> Read access from CPBPM_MEM Slave of DSS Interconnect will be routed to pong memory and write access from CPBPM_W write will be routed to ping memory." end="3" id="CPBPMPIPOSELVAL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Ping pong select override control for CPBPM Memory. 0 --> Ping-pong select comes from HW FSM (same as the ping-pong select for ADC Buffer)/DMMCPBPMPINPONSEL 1 --> Ping pong select for CPBPM memory is taken from SW register (CPBPMPIPOSELVAL)" end="2" id="CPBPMPIPOSELCNT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Ping pong select override value for CQ Memory. 1 --> Read access from Chirp Info Slave of DSS Interconnect will be routed to ping memory and write access from CQ_W/DFE write will be routed to pong memory. 0 --> Read access from Chirp Info Slave of DSS Interconnect will be routed to pong memory and write access from CQ_W/DFE write will be routed to ping memory." end="1" id="CQPIPOSELVAL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Ping pong select override control for CQ Memory. 0 --> Ping-pong select comes from HW FSM (same as the ping-pong select for ADC Buffer)/DMMCQPINPONSEL 1 --> Ping pong select for CQ memory is taken from SW register (CQPIPOSELVAL)" end="0" id="CQPIPOSELCNT" rwaccess="RW" width="1"></bitfield>
  </register>
</module>
