<module name="WDTIMER3_DSP" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="WDT_WIDR" acronym="WDT_WIDR" offset="0x0" width="32" description="IP revision identifier">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="0x&#8211;" description="IP Revision" range="" rwaccess="R"/>
  </register>
  <register id="WDT_WDSC" acronym="WDT_WDSC" offset="0x10" width="32" description="This register controls the various parameters of the L4 interface.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0000000" description="Write os for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="EMUFREE" width="1" begin="5" end="5" resetval="0" description="Emulation mode" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EMUFREE_0" description="Timer counter frozen in emulation"/>
      <bitenum value="1" id="1" token="EMUFREE_1" description="Timer counter free-running in emulation"/>
    </bitfield>
    <bitfield id="IDLEMODE" width="2" begin="4" end="3" resetval="0x2" description="Configuration of the local target state management mode. By definition, target can handle read/write transaction as long as it is out of IDLE state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IDLEMODE_0" description="Force-idle mode: local target IDLE state follows (acknowledges) the system idle requests unconditionally, that is, regardless of the IP module internal requirements. Backup mode, for debug only."/>
      <bitenum value="1" id="1" token="IDLEMODE_1" description="No-idle mode: local target never enters IDLE state. Backup mode, for debug only."/>
      <bitenum value="2" id="2" token="IDLEMODE_2" description="Smart-idle mode: local target IDLE state eventually follows (acknowledges) the system idle requests, depending on the IP module internal requirements. IP module should not generate (IRQ- or DMA-request-related) wake-up events."/>
      <bitenum value="3" id="3" token="IDLEMODE_3" description="Smart-idle wake-up-capable mode: local target IDLE state eventually follows (acknowledges) the system idle requests, depending on the IP module internal requirements. IP module may generate (IRQ- or DMA-request-related) wake-up events when in IDLE state. Mode is relevant only if the appropriate IP moduleswake-up output(s) is (are) implemented."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="2" end="2" resetval="0" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0" description="Software reset. (Optional)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SOFTRESET_0_r" description="Reset done, no pending action"/>
      <bitenum value="0" id="0" token="SOFTRESET_0_w" description="No action"/>
      <bitenum value="1" id="1" token="SOFTRESET_1_w" description="Initiate software reset."/>
      <bitenum value="1" id="1" token="SOFTRESET_1_r" description="Reset (software or other) ongoing"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0" description="Write os for future compatibility. Reads return 0." range="" rwaccess="R"/>
  </register>
  <register id="WDT_WDST" acronym="WDT_WDST" offset="0x14" width="32" description="This register provides status information about the module.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="RESETDONE" width="1" begin="0" end="0" resetval="1" description="Internal module reset monitoring" range="" rwaccess="R">
      <bitenum value="0" id="0" token="RESETDONE_0_r" description="Internal module reset is ongoing."/>
      <bitenum value="1" id="1" token="RESETDONE_1_r" description="Reset completed"/>
    </bitfield>
  </register>
  <register id="WDT_WISR" acronym="WDT_WISR" offset="0x18" width="32" description="This register shows which interrupt events are pending inside the module.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="DLY_IT_FLAG" width="1" begin="1" end="1" resetval="0" description="Pending delay interrupt status." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DLY_IT_FLAG_0_r" description="No delay interrupt pending"/>
      <bitenum value="0" id="0" token="DLY_IT_FLAG_0_w" description="Status unchanged"/>
      <bitenum value="1" id="1" token="DLY_IT_FLAG_1_w" description="Status bit cleared"/>
      <bitenum value="1" id="1" token="DLY_IT_FLAG_1_r" description="Delay interrupt pending"/>
    </bitfield>
    <bitfield id="OVF_IT_FLAG" width="1" begin="0" end="0" resetval="0" description="Pending overflow interrupt status." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="OVF_IT_FLAG_0_r" description="No overflow interrupt pending"/>
      <bitenum value="0" id="0" token="OVF_IT_FLAG_0_w" description="Status unchanged"/>
      <bitenum value="1" id="1" token="OVF_IT_FLAG_1_w" description="Status bit cleared"/>
      <bitenum value="1" id="1" token="OVF_IT_FLAG_1_r" description="Overflow interrupt pending"/>
    </bitfield>
  </register>
  <register id="WDT_WIER" acronym="WDT_WIER" offset="0x1C" width="32" description="This register controls (enable/disable) the interrupt events.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="DLY_IT_ENA" width="1" begin="1" end="1" resetval="0" description="Delay interrupt enable/disable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DLY_IT_ENA_0" description="Disable delay interrupt."/>
      <bitenum value="1" id="1" token="DLY_IT_ENA_1" description="Enable delay interrupt."/>
    </bitfield>
    <bitfield id="OVF_IT_ENA" width="1" begin="0" end="0" resetval="0" description="Overflow interrupt enable/disable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="OVF_IT_ENA_0" description="Disable overflow interrupt."/>
      <bitenum value="1" id="1" token="OVF_IT_ENA_1" description="Enable overflow interrupt."/>
    </bitfield>
  </register>
  <register id="WDT_WWER" acronym="WDT_WWER" offset="0x20" width="32" description="This register controls (enable/disable) the wake-up events.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="DLY_WK_ENA" width="1" begin="1" end="1" resetval="0" description="Delay wake-up enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DLY_WK_ENA_0" description="Disable delay wakeup."/>
      <bitenum value="1" id="1" token="DLY_WK_ENA_1" description="Enable delay wakeup."/>
    </bitfield>
    <bitfield id="OVF_WK_ENA" width="1" begin="0" end="0" resetval="0" description="Overflow wake-up enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="OVF_WK_ENA_0" description="Disable overflow wakeup."/>
      <bitenum value="1" id="1" token="OVF_WK_ENA_1" description="Enable overflow wakeup."/>
    </bitfield>
  </register>
  <register id="WDT_WCLR" acronym="WDT_WCLR" offset="0x24" width="32" description="This register controls the prescaler stage of the counter.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0000000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="PRE" width="1" begin="5" end="5" resetval="1" description="Prescaler enable/disable configuration" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PRE_0" description="Prescaler disabled"/>
      <bitenum value="1" id="1" token="PRE_1" description="Prescaler enabled"/>
    </bitfield>
    <bitfield id="PTV" width="3" begin="4" end="2" resetval="0x0" description="Prescaler value The timer counter is prescaled with the value: 2. Example: PTV = 3 -&amp;amp;gt; counter increases value if started after 8 functional clock periods. On reset, it is loaded from PI_PTV_RESET_VALUE input port." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="1" end="0" resetval="0x0" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
  </register>
  <register id="WDT_WCRR" acronym="WDT_WCRR" offset="0x28" width="32" description="This register holds the value of the internal counter.">
    <bitfield id="TIMER_COUNTER" width="32" begin="31" end="0" resetval="0x0000 0000" description="Value of the timer counter register" range="" rwaccess="RW"/>
  </register>
  <register id="WDT_WLDR" acronym="WDT_WLDR" offset="0x2C" width="32" description="This register holds the timer load value.">
    <bitfield id="TIMER_LOAD" width="32" begin="31" end="0" resetval="0x0000 0000" description="Value of the timer load register" range="" rwaccess="RW"/>
  </register>
  <register id="WDT_WTGR" acronym="WDT_WTGR" offset="0x30" width="32" description="Writing a different value than the one already written in this register does a watchdog counter reload.">
    <bitfield id="TTGR_VALUE" width="32" begin="31" end="0" resetval="0x0000 0000" description="Value of the trigger register" range="" rwaccess="RW"/>
  </register>
  <register id="WDT_WWPS" acronym="WDT_WWPS" offset="0x34" width="32" description="This register contains the write posting bits for all writeable functional registers.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0000000" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="W_PEND_WDLY" width="1" begin="5" end="5" resetval="0" description="Write pending for register WDLY" range="" rwaccess="R">
      <bitenum value="0" id="0" token="W_PEND_WDLY_0_r" description="No register write pending"/>
      <bitenum value="1" id="1" token="W_PEND_WDLY_1_r" description="Register write pending"/>
    </bitfield>
    <bitfield id="W_PEND_WSPR" width="1" begin="4" end="4" resetval="0" description="Write pending for register WSPR" range="" rwaccess="R">
      <bitenum value="0" id="0" token="W_PEND_WSPR_0_r" description="No register write pending"/>
      <bitenum value="1" id="1" token="W_PEND_WSPR_1_r" description="Register write pending"/>
    </bitfield>
    <bitfield id="W_PEND_WTGR" width="1" begin="3" end="3" resetval="0" description="Write pending for register WTGR" range="" rwaccess="R">
      <bitenum value="0" id="0" token="W_PEND_WTGR_0_r" description="No register write pending"/>
      <bitenum value="1" id="1" token="W_PEND_WTGR_1_r" description="Register write pending"/>
    </bitfield>
    <bitfield id="W_PEND_WLDR" width="1" begin="2" end="2" resetval="0" description="Write pending for register WLDR" range="" rwaccess="R">
      <bitenum value="0" id="0" token="W_PEND_WLDR_0_r" description="No register write pending"/>
      <bitenum value="1" id="1" token="W_PEND_WLDR_1_r" description="Register write pending"/>
    </bitfield>
    <bitfield id="W_PEND_WCRR" width="1" begin="1" end="1" resetval="0" description="Write pending for register WCRR" range="" rwaccess="R">
      <bitenum value="0" id="0" token="W_PEND_WCRR_0_r" description="No register write pending"/>
      <bitenum value="1" id="1" token="W_PEND_WCRR_1_r" description="Register write pending"/>
    </bitfield>
    <bitfield id="W_PEND_WCLR" width="1" begin="0" end="0" resetval="0" description="Write pending for register WCLR" range="" rwaccess="R">
      <bitenum value="0" id="0" token="W_PEND_WCLR_0_r" description="No register write pending"/>
      <bitenum value="1" id="1" token="W_PEND_WCLR_1_r" description="Register write pending"/>
    </bitfield>
  </register>
  <register id="WDT_WDLY" acronym="WDT_WDLY" offset="0x44" width="32" description="This register holds the delay value that controls the internal pre-overflow event detection.">
    <bitfield id="WDLY_VALUE" width="32" begin="31" end="0" resetval="0x0000 0000" description="Value of the delay register" range="" rwaccess="RW"/>
  </register>
  <register id="WDT_WSPR" acronym="WDT_WSPR" offset="0x48" width="32" description="This register holds the start-stop value that controls the internal start-stop FSM.">
    <bitfield id="WSPR_VALUE" width="32" begin="31" end="0" resetval="0x0000 0000" description="Value of the start-stop register" range="" rwaccess="RW"/>
  </register>
  <register id="WDT_WIRQSTATRAW" acronym="WDT_WIRQSTATRAW" offset="0x54" width="32" description="IRQ unmasked status, status set per-event raw interrupt status vector, line 0. Raw status is set even if event is not enabled. Write 1 to set the (raw) status, mostly for debug.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="EVENT_DLY" width="1" begin="1" end="1" resetval="0" description="Settable raw status for delay event" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="EVENT_DLY_0_r" description="No event pending"/>
      <bitenum value="0" id="0" token="EVENT_DLY_0_w" description="No action"/>
      <bitenum value="1" id="1" token="EVENT_DLY_1_w" description="Set event (debug)"/>
      <bitenum value="1" id="1" token="EVENT_DLY_1_r" description="Event pending"/>
    </bitfield>
    <bitfield id="EVENT_OVF" width="1" begin="0" end="0" resetval="0" description="Settable raw status for overflow event" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="EVENT_OVF_0_r" description="No event pending"/>
      <bitenum value="0" id="0" token="EVENT_OVF_0_w" description="No action"/>
      <bitenum value="1" id="1" token="EVENT_OVF_1_w" description="Set event (debug)"/>
      <bitenum value="1" id="1" token="EVENT_OVF_1_r" description="Event pending"/>
    </bitfield>
  </register>
  <register id="WDT_WIRQSTAT" acronym="WDT_WIRQSTAT" offset="0x58" width="32" description="IRQ masked status, status clear per-event enabled interrupt status vector, line 0. Enabled status is not set unless event is enabled. Write 1 to clear the status after interrupt has been serviced (raw status gets cleared, that is, even if not enabled).">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="EVENT_DLY" width="1" begin="1" end="1" resetval="0" description="Clearable, enabled status for delay event" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="EVENT_DLY_0_r" description="No (enabled) event pending"/>
      <bitenum value="0" id="0" token="EVENT_DLY_0_w" description="No action"/>
      <bitenum value="1" id="1" token="EVENT_DLY_1_w" description="Clear (raw) event"/>
      <bitenum value="1" id="1" token="EVENT_DLY_1_r" description="Event pending"/>
    </bitfield>
    <bitfield id="EVENT_OVF" width="1" begin="0" end="0" resetval="0" description="Clearable, enabled status for overflow event" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="EVENT_OVF_0_r" description="No (enabled) event pending"/>
      <bitenum value="0" id="0" token="EVENT_OVF_0_w" description="No action"/>
      <bitenum value="1" id="1" token="EVENT_OVF_1_w" description="Clear (raw) event"/>
      <bitenum value="1" id="1" token="EVENT_OVF_1_r" description="Event pending"/>
    </bitfield>
  </register>
  <register id="WDT_WIRQENSET" acronym="WDT_WIRQENSET" offset="0x5C" width="32" description="IRQ enable set per-event interrupt enable bit vector, line 0. Write 1 to set (enable interrupt). Readout equal to corresponding _CLR register.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="ENABLE_DLY" width="1" begin="1" end="1" resetval="0" description="Enable for delay event" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="ENABLE_DLY_0_r" description="Interrupt disabled (masked)"/>
      <bitenum value="0" id="0" token="ENABLE_DLY_0_w" description="No action"/>
      <bitenum value="1" id="1" token="ENABLE_DLY_1_w" description="Enable interrupt."/>
      <bitenum value="1" id="1" token="ENABLE_DLY_1_r" description="Interrupt enabled"/>
    </bitfield>
    <bitfield id="ENABLE_OVF" width="1" begin="0" end="0" resetval="0" description="Enable for overflow event" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="ENABLE_OVF_0_r" description="Interrupt disabled (masked)"/>
      <bitenum value="0" id="0" token="ENABLE_OVF_0_w" description="No action"/>
      <bitenum value="1" id="1" token="ENABLE_OVF_1_w" description="Enable interrupt."/>
      <bitenum value="1" id="1" token="ENABLE_OVF_1_r" description="Interrupt enabled"/>
    </bitfield>
  </register>
  <register id="WDT_WIRQENCLR" acronym="WDT_WIRQENCLR" offset="0x60" width="32" description="IRQ enable clear per-event interrupt enable bit vector, line 0. Write 1 to clear (disable interrupt). Readout equal to corresponding _SET register.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="ENABLE_DLY" width="1" begin="1" end="1" resetval="0" description="Enable for delay event" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="ENABLE_DLY_0_r" description="Interrupt disabled (masked)"/>
      <bitenum value="0" id="0" token="ENABLE_DLY_0_w" description="No action"/>
      <bitenum value="1" id="1" token="ENABLE_DLY_1_w" description="Disable interrupt."/>
      <bitenum value="1" id="1" token="ENABLE_DLY_1_r" description="Interrupt enabled"/>
    </bitfield>
    <bitfield id="ENABLE_OVF" width="1" begin="0" end="0" resetval="0" description="Enable for overflow event" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="ENABLE_OVF_0_r" description="Interrupt disabled (masked)"/>
      <bitenum value="0" id="0" token="ENABLE_OVF_0_w" description="No action"/>
      <bitenum value="1" id="1" token="ENABLE_OVF_1_w" description="Disable interrupt."/>
      <bitenum value="1" id="1" token="ENABLE_OVF_1_r" description="Interrupt enabled"/>
    </bitfield>
  </register>
  <register id="WDT_WIRQWAKEEN" acronym="WDT_WIRQWAKEEN" offset="0x64" width="32" description="This register controls (enable/disable) the wake-up events.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="DLY_WK_ENA" width="1" begin="1" end="1" resetval="0" description="Enable delay wake-up" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DLY_WK_ENA_0" description="Disable delay wakeup"/>
      <bitenum value="1" id="1" token="DLY_WK_ENA_1" description="Enable delay wakeup"/>
    </bitfield>
    <bitfield id="OVF_WK_ENA" width="1" begin="0" end="0" resetval="0" description="Enable overflow wakeup" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="OVF_WK_ENA_0" description="Disable overflow wakeup"/>
      <bitenum value="1" id="1" token="OVF_WK_ENA_1" description="Enable overflow wakeup"/>
    </bitfield>
  </register>
</module>
