<?xml version="1.0" encoding="UTF-8"?>
<module id="USB" HW_revision="1" XML_version="1" description="USB2.0 OTG Controller">

		<register id="Channel_0_TCPPIDMASTATEW0" acronym="Channel_0_TCPPIDMASTATEW0" offset="256" width="32" description="TX CPPI DMA State Word 0">
			<bitfield id="TXQ_HEAD_PTR" width="30" begin="31" end="2" resetval="0" description="TX queue head pointer 30 bit pointer to 32-bit aligned descriptor at the head of the high priority TX queue" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_0_TCPPIDMASTATEW1" acronym="Channel_0_TCPPIDMASTATEW1" offset="260" width="32" description="TX CPPI DMA State Word 1">
			<bitfield id="SOP_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Start of Packet Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor which is the first descriptor for the current packet" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_0_TCPPIDMASTATEW2" acronym="Channel_0_TCPPIDMASTATEW2" offset="264" width="32" description="TX CPPI DMA State Word 2">
			<bitfield id="CURR_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Current Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor for buffer from which data is currently being transmitted" range="" rwaccess="">
				
				
			</bitfield>
			<bitfield id="TRUNCATED_NON_EOP" width="1" begin="1" end="1" resetval="0" description="Flag indicating that packet truncation has occurred on the current packet within a buffer which was not designated as the end of packet buff 0: Truncation within non end of packet buffer has not occurred 1: Truncation within non end of packet has occurred" range="" rwaccess="">
				
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="">
				
			</bitfield>
		</register>
		<register id="Channel_0_TCPPIDMASTATEW3" acronym="Channel_0_TCPPIDMASTATEW3" offset="268" width="32" description="TX CPPI DMA State Word 3">
			<bitfield id="CURR_BUFFER_PTR" width="32" begin="31" end="0" resetval="0" description="Current Buffer Pointer 32 bit absolute byte address in buffer from which data is currently being transmitted" range="" rwaccess="">
				
				
			</bitfield>
		</register>
		<register id="Channel_0_TCPPIDMASTATEW4" acronym="Channel_0_TCPPIDMASTATEW4" offset="272" width="32" description="TX CPPI DMA State Word 4">
			<bitfield id="DESC_MSG" width="8" begin="31" end="24" resetval="0" description="Descriptor Message Byte which is passed from the SOP Tx Descriptor to the SOP Rx descriptor.  Used to tag packets" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="6" begin="23" end="18" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CURR_BUFFER_EOP" width="1" begin="17" end="17" resetval="0" description="Current Buffer is EOP Flag indicating whether or not the current buffer that is being transmitted from is the end of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_SOP" width="1" begin="16" end="16" resetval="0" description="Current Buffer is SOP Flag indicating whether or not the current buffer that is being transmitted from is the start of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_LENGTH" width="16" begin="15" end="0" resetval="0" description="Current Buffer Length Indicates how many valid bytes remain in the current buffer that is being transmitted from" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_0_TCPPIDMASTATEW5" acronym="Channel_0_TCPPIDMASTATEW5" offset="276" width="32" description="TX CPPI DMA State Word 5">
			<bitfield id="REM_LENGTH" width="16" begin="31" end="16" resetval="0" description="Remaining Packet Length Indicates how many bytes remain to be transmitted in the packet before truncation occurs" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="LENGTH" width="16" begin="15" end="0" resetval="0" description="Packet Length Indicates how many bytes are contained in the packet.  This value is copied from the packet_length field in Word 3 of the SOP Descriptor. This value is written into the AAL5 trailer for the packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_0_TCPPICOMPPTR" acronym="Channel_0_TCPPICOMPPTR" offset="284" width="32" description="TX CPPI Completion Pointer ">
			<bitfield id="DESC_ADDR" width="30" begin="31" end="2" resetval="0" description="Descriptor Address This field contains the 30 bit word aligned pointer of the end of packet descriptor that the DMA has has last processed " range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="WRBK_MODE" width="1" begin="0" end="0" resetval="0" description="Writeback / Compare Mode This bit controls the action that is to be taken when this location is written 0: Compare Mode, Indicates that the value that is presented on bits 31:2 of the write data should be compared against the value that is currently contained in bits 31:2 of this location.  If the two match, the interrupt bit corresponding to this Tx Queue should be deasserted 1: Writeback Mode, Indicates that the value that is presented on bits 31:2 of the write data should be written to this location and the interrupt for this Tx Queue should be asserted This bit is read as zero" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="Channel_0_RCPPIDMASTATEW0" acronym="Channel_0_RCPPIDMASTATEW0" offset="288" width="32" description="RX CPPI DMA State Word 0">
			<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="SOP_BUFFER_OFFSET" width="8" begin="7" end="0" resetval="0" description="Start of Packet Buffer Offset Controls how many bytes the RX DMA will skip at the beginning of the start of packet buffer before beginning to fill the buffer with receive data.  This field is programmed by the Host software when the channel is set up to facilitate addition of various protocol encapsulation headers for retransmission of received packets" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_0_RCPPIDMASTATEW1" acronym="Channel_0_RCPPIDMASTATEW1" offset="292" width="32" description="RX CPPI DMA State Word 1">
			<bitfield id="RXQ_HEAD_PTR" width="30" begin="31" end="2" resetval="0" description="RX queue head pointer 30 bit pointer to 32-bit aligned descriptor at the head of the Rx queue" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="2" begin="1" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="Channel_0_RCPPIDMASTATEW2" acronym="Channel_0_RCPPIDMASTATEW2" offset="296" width="32" description="RX CPPI DMA State Word 2">
			<bitfield id="SOP_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Start of Packet Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor which is the first descriptor for the current packet" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_0_RCPPIDMASTATEW3" acronym="Channel_0_RCPPIDMASTATEW3" offset="300" width="32" description="RX CPPI DMA State Word 3">
			<bitfield id="CURR_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Current Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor for buffer into which data is currently being received" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="2" begin="1" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="Channel_0_RCPPIDMASTATEW4" acronym="Channel_0_RCPPIDMASTATEW4" offset="304" width="32" description="RX CPPI DMA State Word 4">
			<bitfield id="CURR_BUFFER_PTR" width="32" begin="31" end="0" resetval="0" description="Current Buffer Pointer 32 bit absolute byte address in buffer into which data is currently being received" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_0_RCPPIDMASTATEW5" acronym="Channel_0_RCPPIDMASTATEW5" offset="308" width="32" description="RX CPPI DMA State Word 5">
			<bitfield id="PKT_LENGTH" width="16" begin="31" end="16" resetval="0" description="Packet Length Indicates how many bytes are contained in the packet.  This value is written into bits 15:0 of Word 3 of the SOP Descriptor during end of packet processing" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_LENGTH" width="16" begin="15" end="0" resetval="0" description="Current Buffer Length Indicates how many free bytes remain in the current buffer that is being received into" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_0_RCPPIDMASTATEW6" acronym="Channel_0_RCPPIDMASTATEW6" offset="312" width="32" description="RX CPPI DMA State Word 6">
			<bitfield id="SOP_BUFFER_BYTECNT" width="16" begin="31" end="16" resetval="0" description="Start of Packet Buffer Byte Count Indicates how many valid bytes are contained in the start of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_BYTECNT" width="16" begin="15" end="0" resetval="0" description="Current Buffer Byte Count Indicates how many valid bytes are contained in the buffer that is currently being received into" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_0_RCPPICOMPPTR" acronym="Channel_0_RCPPICOMPPTR" offset="316" width="32" description="RX CPPI Completion Pointer">
			<bitfield id="DESC_ADDR" width="30" begin="31" end="2" resetval="0" description="Descriptor Address This field contains the 30 bit word aligned pointer of the end of packet descriptor that the DMA has has last processed " range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="RDBK_MODE" width="1" begin="0" end="0" resetval="0" description="Readback / Compare Mode This bit controls the action that is to be taken when this location is read 0: Compare Mode, Indicates that the value that is presented on bits 31:2 of the read data should be compared against the value that is currently contained in bits 31:2 of this location.  If the two match, the interrupt bit corresponding to this Rx Queue should be deasserted 1: Readback Mode, Indicates that the value that is presented on bits 31:2 of the read data should be read from this location and the interrupt for this Rx Queue should be asserted This bit is read as zero" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="Channel_1_TCPPIDMASTATEW0" acronym="Channel_1_TCPPIDMASTATEW0" offset="320" width="32" description="TX CPPI DMA State Word 0">
			<bitfield id="TXQ_HEAD_PTR" width="30" begin="31" end="2" resetval="0" description="TX queue head pointer 30 bit pointer to 32-bit aligned descriptor at the head of the high priority TX queue" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_1_TCPPIDMASTATEW1" acronym="Channel_1_TCPPIDMASTATEW1" offset="324" width="32" description="TX CPPI DMA State Word 1">
			<bitfield id="SOP_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Start of Packet Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor which is the first descriptor for the current packet" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_1_TCPPIDMASTATEW2" acronym="Channel_1_TCPPIDMASTATEW2" offset="328" width="32" description="TX CPPI DMA State Word 2">
			<bitfield id="CURR_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Current Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor for buffer from which data is currently being transmitted" range="" rwaccess="">
				
				
			</bitfield>
			<bitfield id="TRUNCATED_NON_EOP" width="1" begin="1" end="1" resetval="0" description="Flag indicating that packet truncation has occurred on the current packet within a buffer which was not designated as the end of packet buff 0: Truncation within non end of packet buffer has not occurred 1: Truncation within non end of packet has occurred" range="" rwaccess="">
				
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="">
				
			</bitfield>
		</register>
		<register id="Channel_1_TCPPIDMASTATEW3" acronym="Channel_1_TCPPIDMASTATEW3" offset="332" width="32" description="TX CPPI DMA State Word 3">
			<bitfield id="CURR_BUFFER_PTR" width="32" begin="31" end="0" resetval="0" description="Current Buffer Pointer 32 bit absolute byte address in buffer from which data is currently being transmitted" range="" rwaccess="">
				
				
			</bitfield>
		</register>
		<register id="Channel_1_TCPPIDMASTATEW4" acronym="Channel_1_TCPPIDMASTATEW4" offset="336" width="32" description="TX CPPI DMA State Word 4">
			<bitfield id="DESC_MSG" width="8" begin="31" end="24" resetval="0" description="Descriptor Message Byte which is passed from the SOP Tx Descriptor to the SOP Rx descriptor.  Used to tag packets" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="6" begin="23" end="18" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CURR_BUFFER_EOP" width="1" begin="17" end="17" resetval="0" description="Current Buffer is EOP Flag indicating whether or not the current buffer that is being transmitted from is the end of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_SOP" width="1" begin="16" end="16" resetval="0" description="Current Buffer is SOP Flag indicating whether or not the current buffer that is being transmitted from is the start of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_LENGTH" width="16" begin="15" end="0" resetval="0" description="Current Buffer Length Indicates how many valid bytes remain in the current buffer that is being transmitted from" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_1_TCPPIDMASTATEW5" acronym="Channel_1_TCPPIDMASTATEW5" offset="340" width="32" description="TX CPPI DMA State Word 5">
			<bitfield id="REM_LENGTH" width="16" begin="31" end="16" resetval="0" description="Remaining Packet Length Indicates how many bytes remain to be transmitted in the packet before truncation occurs" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="LENGTH" width="16" begin="15" end="0" resetval="0" description="Packet Length Indicates how many bytes are contained in the packet.  This value is copied from the packet_length field in Word 3 of the SOP Descriptor. This value is written into the AAL5 trailer for the packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_1_TCPPICOMPPTR" acronym="Channel_1_TCPPICOMPPTR" offset="348" width="32" description="TX CPPI Completion Pointer ">
			<bitfield id="DESC_ADDR" width="30" begin="31" end="2" resetval="0" description="Descriptor Address This field contains the 30 bit word aligned pointer of the end of packet descriptor that the DMA has has last processed " range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="WRBK_MODE" width="1" begin="0" end="0" resetval="0" description="Writeback / Compare Mode This bit controls the action that is to be taken when this location is written 0: Compare Mode, Indicates that the value that is presented on bits 31:2 of the write data should be compared against the value that is currently contained in bits 31:2 of this location.  If the two match, the interrupt bit corresponding to this Tx Queue should be deasserted 1: Writeback Mode, Indicates that the value that is presented on bits 31:2 of the write data should be written to this location and the interrupt for this Tx Queue should be asserted This bit is read as zero" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="Channel_1_RCPPIDMASTATEW0" acronym="Channel_1_RCPPIDMASTATEW0" offset="352" width="32" description="RX CPPI DMA State Word 0">
			<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="SOP_BUFFER_OFFSET" width="8" begin="7" end="0" resetval="0" description="Start of Packet Buffer Offset Controls how many bytes the RX DMA will skip at the beginning of the start of packet buffer before beginning to fill the buffer with receive data.  This field is programmed by the Host software when the channel is set up to facilitate addition of various protocol encapsulation headers for retransmission of received packets" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_1_RCPPIDMASTATEW1" acronym="Channel_1_RCPPIDMASTATEW1" offset="356" width="32" description="RX CPPI DMA State Word 1">
			<bitfield id="RXQ_HEAD_PTR" width="30" begin="31" end="2" resetval="0" description="RX queue head pointer 30 bit pointer to 32-bit aligned descriptor at the head of the Rx queue" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="2" begin="1" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="Channel_1_RCPPIDMASTATEW2" acronym="Channel_1_RCPPIDMASTATEW2" offset="360" width="32" description="RX CPPI DMA State Word 2">
			<bitfield id="SOP_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Start of Packet Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor which is the first descriptor for the current packet" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_1_RCPPIDMASTATEW3" acronym="Channel_1_RCPPIDMASTATEW3" offset="364" width="32" description="RX CPPI DMA State Word 3">
			<bitfield id="CURR_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Current Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor for buffer into which data is currently being received" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="2" begin="1" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="Channel_1_RCPPIDMASTATEW4" acronym="Channel_1_RCPPIDMASTATEW4" offset="368" width="32" description="RX CPPI DMA State Word 4">
			<bitfield id="CURR_BUFFER_PTR" width="32" begin="31" end="0" resetval="0" description="Current Buffer Pointer 32 bit absolute byte address in buffer into which data is currently being received" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_1_RCPPIDMASTATEW5" acronym="Channel_1_RCPPIDMASTATEW5" offset="372" width="32" description="RX CPPI DMA State Word 5">
			<bitfield id="PKT_LENGTH" width="16" begin="31" end="16" resetval="0" description="Packet Length Indicates how many bytes are contained in the packet.  This value is written into bits 15:0 of Word 3 of the SOP Descriptor during end of packet processing" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_LENGTH" width="16" begin="15" end="0" resetval="0" description="Current Buffer Length Indicates how many free bytes remain in the current buffer that is being received into" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_1_RCPPIDMASTATEW6" acronym="Channel_1_RCPPIDMASTATEW6" offset="376" width="32" description="RX CPPI DMA State Word 6">
			<bitfield id="SOP_BUFFER_BYTECNT" width="16" begin="31" end="16" resetval="0" description="Start of Packet Buffer Byte Count Indicates how many valid bytes are contained in the start of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_BYTECNT" width="16" begin="15" end="0" resetval="0" description="Current Buffer Byte Count Indicates how many valid bytes are contained in the buffer that is currently being received into" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_1_RCPPICOMPPTR" acronym="Channel_1_RCPPICOMPPTR" offset="380" width="32" description="RX CPPI Completion Pointer">
			<bitfield id="DESC_ADDR" width="30" begin="31" end="2" resetval="0" description="Descriptor Address This field contains the 30 bit word aligned pointer of the end of packet descriptor that the DMA has has last processed " range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="RDBK_MODE" width="1" begin="0" end="0" resetval="0" description="Readback / Compare Mode This bit controls the action that is to be taken when this location is read 0: Compare Mode, Indicates that the value that is presented on bits 31:2 of the read data should be compared against the value that is currently contained in bits 31:2 of this location.  If the two match, the interrupt bit corresponding to this Rx Queue should be deasserted 1: Readback Mode, Indicates that the value that is presented on bits 31:2 of the read data should be read from this location and the interrupt for this Rx Queue should be asserted This bit is read as zero" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="Channel_2_TCPPIDMASTATEW0" acronym="Channel_2_TCPPIDMASTATEW0" offset="384" width="32" description="TX CPPI DMA State Word 0">
			<bitfield id="TXQ_HEAD_PTR" width="30" begin="31" end="2" resetval="0" description="TX queue head pointer 30 bit pointer to 32-bit aligned descriptor at the head of the high priority TX queue" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_2_TCPPIDMASTATEW1" acronym="Channel_2_TCPPIDMASTATEW1" offset="388" width="32" description="TX CPPI DMA State Word 1">
			<bitfield id="SOP_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Start of Packet Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor which is the first descriptor for the current packet" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_2_TCPPIDMASTATEW2" acronym="Channel_2_TCPPIDMASTATEW2" offset="392" width="32" description="TX CPPI DMA State Word 2">
			<bitfield id="CURR_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Current Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor for buffer from which data is currently being transmitted" range="" rwaccess="">
				
				
			</bitfield>
			<bitfield id="TRUNCATED_NON_EOP" width="1" begin="1" end="1" resetval="0" description="Flag indicating that packet truncation has occurred on the current packet within a buffer which was not designated as the end of packet buff 0: Truncation within non end of packet buffer has not occurred 1: Truncation within non end of packet has occurred" range="" rwaccess="">
				
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="">
				
			</bitfield>
		</register>
		<register id="Channel_2_TCPPIDMASTATEW3" acronym="Channel_2_TCPPIDMASTATEW3" offset="396" width="32" description="TX CPPI DMA State Word 3">
			<bitfield id="CURR_BUFFER_PTR" width="32" begin="31" end="0" resetval="0" description="Current Buffer Pointer 32 bit absolute byte address in buffer from which data is currently being transmitted" range="" rwaccess="">
				
				
			</bitfield>
		</register>
		<register id="Channel_2_TCPPIDMASTATEW4" acronym="Channel_2_TCPPIDMASTATEW4" offset="400" width="32" description="TX CPPI DMA State Word 4">
			<bitfield id="DESC_MSG" width="8" begin="31" end="24" resetval="0" description="Descriptor Message Byte which is passed from the SOP Tx Descriptor to the SOP Rx descriptor.  Used to tag packets" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="6" begin="23" end="18" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CURR_BUFFER_EOP" width="1" begin="17" end="17" resetval="0" description="Current Buffer is EOP Flag indicating whether or not the current buffer that is being transmitted from is the end of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_SOP" width="1" begin="16" end="16" resetval="0" description="Current Buffer is SOP Flag indicating whether or not the current buffer that is being transmitted from is the start of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_LENGTH" width="16" begin="15" end="0" resetval="0" description="Current Buffer Length Indicates how many valid bytes remain in the current buffer that is being transmitted from" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_2_TCPPIDMASTATEW5" acronym="Channel_2_TCPPIDMASTATEW5" offset="404" width="32" description="TX CPPI DMA State Word 5">
			<bitfield id="REM_LENGTH" width="16" begin="31" end="16" resetval="0" description="Remaining Packet Length Indicates how many bytes remain to be transmitted in the packet before truncation occurs" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="LENGTH" width="16" begin="15" end="0" resetval="0" description="Packet Length Indicates how many bytes are contained in the packet.  This value is copied from the packet_length field in Word 3 of the SOP Descriptor. This value is written into the AAL5 trailer for the packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_2_TCPPICOMPPTR" acronym="Channel_2_TCPPICOMPPTR" offset="412" width="32" description="TX CPPI Completion Pointer ">
			<bitfield id="DESC_ADDR" width="30" begin="31" end="2" resetval="0" description="Descriptor Address This field contains the 30 bit word aligned pointer of the end of packet descriptor that the DMA has has last processed " range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="WRBK_MODE" width="1" begin="0" end="0" resetval="0" description="Writeback / Compare Mode This bit controls the action that is to be taken when this location is written 0: Compare Mode, Indicates that the value that is presented on bits 31:2 of the write data should be compared against the value that is currently contained in bits 31:2 of this location.  If the two match, the interrupt bit corresponding to this Tx Queue should be deasserted 1: Writeback Mode, Indicates that the value that is presented on bits 31:2 of the write data should be written to this location and the interrupt for this Tx Queue should be asserted This bit is read as zero" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="Channel_2_RCPPIDMASTATEW0" acronym="Channel_2_RCPPIDMASTATEW0" offset="416" width="32" description="RX CPPI DMA State Word 0">
			<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="SOP_BUFFER_OFFSET" width="8" begin="7" end="0" resetval="0" description="Start of Packet Buffer Offset Controls how many bytes the RX DMA will skip at the beginning of the start of packet buffer before beginning to fill the buffer with receive data.  This field is programmed by the Host software when the channel is set up to facilitate addition of various protocol encapsulation headers for retransmission of received packets" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_2_RCPPIDMASTATEW1" acronym="Channel_2_RCPPIDMASTATEW1" offset="420" width="32" description="RX CPPI DMA State Word 1">
			<bitfield id="RXQ_HEAD_PTR" width="30" begin="31" end="2" resetval="0" description="RX queue head pointer 30 bit pointer to 32-bit aligned descriptor at the head of the Rx queue" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="2" begin="1" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="Channel_2_RCPPIDMASTATEW2" acronym="Channel_2_RCPPIDMASTATEW2" offset="424" width="32" description="RX CPPI DMA State Word 2">
			<bitfield id="SOP_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Start of Packet Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor which is the first descriptor for the current packet" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_2_RCPPIDMASTATEW3" acronym="Channel_2_RCPPIDMASTATEW3" offset="428" width="32" description="RX CPPI DMA State Word 3">
			<bitfield id="CURR_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Current Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor for buffer into which data is currently being received" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="2" begin="1" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="Channel_2_RCPPIDMASTATEW4" acronym="Channel_2_RCPPIDMASTATEW4" offset="432" width="32" description="RX CPPI DMA State Word 4">
			<bitfield id="CURR_BUFFER_PTR" width="32" begin="31" end="0" resetval="0" description="Current Buffer Pointer 32 bit absolute byte address in buffer into which data is currently being received" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_2_RCPPIDMASTATEW5" acronym="Channel_2_RCPPIDMASTATEW5" offset="436" width="32" description="RX CPPI DMA State Word 5">
			<bitfield id="PKT_LENGTH" width="16" begin="31" end="16" resetval="0" description="Packet Length Indicates how many bytes are contained in the packet.  This value is written into bits 15:0 of Word 3 of the SOP Descriptor during end of packet processing" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_LENGTH" width="16" begin="15" end="0" resetval="0" description="Current Buffer Length Indicates how many free bytes remain in the current buffer that is being received into" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_2_RCPPIDMASTATEW6" acronym="Channel_2_RCPPIDMASTATEW6" offset="440" width="32" description="RX CPPI DMA State Word 6">
			<bitfield id="SOP_BUFFER_BYTECNT" width="16" begin="31" end="16" resetval="0" description="Start of Packet Buffer Byte Count Indicates how many valid bytes are contained in the start of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_BYTECNT" width="16" begin="15" end="0" resetval="0" description="Current Buffer Byte Count Indicates how many valid bytes are contained in the buffer that is currently being received into" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_2_RCPPICOMPPTR" acronym="Channel_2_RCPPICOMPPTR" offset="444" width="32" description="RX CPPI Completion Pointer">
			<bitfield id="DESC_ADDR" width="30" begin="31" end="2" resetval="0" description="Descriptor Address This field contains the 30 bit word aligned pointer of the end of packet descriptor that the DMA has has last processed " range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="RDBK_MODE" width="1" begin="0" end="0" resetval="0" description="Readback / Compare Mode This bit controls the action that is to be taken when this location is read 0: Compare Mode, Indicates that the value that is presented on bits 31:2 of the read data should be compared against the value that is currently contained in bits 31:2 of this location.  If the two match, the interrupt bit corresponding to this Rx Queue should be deasserted 1: Readback Mode, Indicates that the value that is presented on bits 31:2 of the read data should be read from this location and the interrupt for this Rx Queue should be asserted This bit is read as zero" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="Channel_3_TCPPIDMASTATEW0" acronym="Channel_3_TCPPIDMASTATEW0" offset="448" width="32" description="TX CPPI DMA State Word 0">
			<bitfield id="TXQ_HEAD_PTR" width="30" begin="31" end="2" resetval="0" description="TX queue head pointer 30 bit pointer to 32-bit aligned descriptor at the head of the high priority TX queue" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_3_TCPPIDMASTATEW1" acronym="Channel_3_TCPPIDMASTATEW1" offset="452" width="32" description="TX CPPI DMA State Word 1">
			<bitfield id="SOP_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Start of Packet Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor which is the first descriptor for the current packet" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_3_TCPPIDMASTATEW2" acronym="Channel_3_TCPPIDMASTATEW2" offset="456" width="32" description="TX CPPI DMA State Word 2">
			<bitfield id="CURR_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Current Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor for buffer from which data is currently being transmitted" range="" rwaccess="">
				
				
			</bitfield>
			<bitfield id="TRUNCATED_NON_EOP" width="1" begin="1" end="1" resetval="0" description="Flag indicating that packet truncation has occurred on the current packet within a buffer which was not designated as the end of packet buff 0: Truncation within non end of packet buffer has not occurred 1: Truncation within non end of packet has occurred" range="" rwaccess="">
				
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="">
				
			</bitfield>
		</register>
		<register id="Channel_3_TCPPIDMASTATEW3" acronym="Channel_3_TCPPIDMASTATEW3" offset="460" width="32" description="TX CPPI DMA State Word 3">
			<bitfield id="CURR_BUFFER_PTR" width="32" begin="31" end="0" resetval="0" description="Current Buffer Pointer 32 bit absolute byte address in buffer from which data is currently being transmitted" range="" rwaccess="">
				
				
			</bitfield>
		</register>
		<register id="Channel_3_TCPPIDMASTATEW4" acronym="Channel_3_TCPPIDMASTATEW4" offset="464" width="32" description="TX CPPI DMA State Word 4">
			<bitfield id="DESC_MSG" width="8" begin="31" end="24" resetval="0" description="Descriptor Message Byte which is passed from the SOP Tx Descriptor to the SOP Rx descriptor.  Used to tag packets" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="6" begin="23" end="18" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CURR_BUFFER_EOP" width="1" begin="17" end="17" resetval="0" description="Current Buffer is EOP Flag indicating whether or not the current buffer that is being transmitted from is the end of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_SOP" width="1" begin="16" end="16" resetval="0" description="Current Buffer is SOP Flag indicating whether or not the current buffer that is being transmitted from is the start of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_LENGTH" width="16" begin="15" end="0" resetval="0" description="Current Buffer Length Indicates how many valid bytes remain in the current buffer that is being transmitted from" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_3_TCPPIDMASTATEW5" acronym="Channel_3_TCPPIDMASTATEW5" offset="468" width="32" description="TX CPPI DMA State Word 5">
			<bitfield id="REM_LENGTH" width="16" begin="31" end="16" resetval="0" description="Remaining Packet Length Indicates how many bytes remain to be transmitted in the packet before truncation occurs" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="LENGTH" width="16" begin="15" end="0" resetval="0" description="Packet Length Indicates how many bytes are contained in the packet.  This value is copied from the packet_length field in Word 3 of the SOP Descriptor. This value is written into the AAL5 trailer for the packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_3_TCPPICOMPPTR" acronym="Channel_3_TCPPICOMPPTR" offset="476" width="32" description="TX CPPI Completion Pointer ">
			<bitfield id="DESC_ADDR" width="30" begin="31" end="2" resetval="0" description="Descriptor Address This field contains the 30 bit word aligned pointer of the end of packet descriptor that the DMA has has last processed " range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="WRBK_MODE" width="1" begin="0" end="0" resetval="0" description="Writeback / Compare Mode This bit controls the action that is to be taken when this location is written 0: Compare Mode, Indicates that the value that is presented on bits 31:2 of the write data should be compared against the value that is currently contained in bits 31:2 of this location.  If the two match, the interrupt bit corresponding to this Tx Queue should be deasserted 1: Writeback Mode, Indicates that the value that is presented on bits 31:2 of the write data should be written to this location and the interrupt for this Tx Queue should be asserted This bit is read as zero" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="Channel_3_RCPPIDMASTATEW0" acronym="Channel_3_RCPPIDMASTATEW0" offset="480" width="32" description="RX CPPI DMA State Word 0">
			<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="SOP_BUFFER_OFFSET" width="8" begin="7" end="0" resetval="0" description="Start of Packet Buffer Offset Controls how many bytes the RX DMA will skip at the beginning of the start of packet buffer before beginning to fill the buffer with receive data.  This field is programmed by the Host software when the channel is set up to facilitate addition of various protocol encapsulation headers for retransmission of received packets" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_3_RCPPIDMASTATEW1" acronym="Channel_3_RCPPIDMASTATEW1" offset="484" width="32" description="RX CPPI DMA State Word 1">
			<bitfield id="RXQ_HEAD_PTR" width="30" begin="31" end="2" resetval="0" description="RX queue head pointer 30 bit pointer to 32-bit aligned descriptor at the head of the Rx queue" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="2" begin="1" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="Channel_3_RCPPIDMASTATEW2" acronym="Channel_3_RCPPIDMASTATEW2" offset="488" width="32" description="RX CPPI DMA State Word 2">
			<bitfield id="SOP_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Start of Packet Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor which is the first descriptor for the current packet" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="IN_PACKET" width="1" begin="0" end="0" resetval="0" description="Flag indicating the DMA is in the middle of processing a packet 0: Not currently in packet 1: Currently in packet" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="Channel_3_RCPPIDMASTATEW3" acronym="Channel_3_RCPPIDMASTATEW3" offset="492" width="32" description="RX CPPI DMA State Word 3">
			<bitfield id="CURR_DESCRIPTOR_PTR" width="30" begin="31" end="2" resetval="0" description="Current Buffer Descriptor Pointer 30 bit pointer to 32-bit aligned descriptor for buffer into which data is currently being received" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="2" begin="1" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="Channel_3_RCPPIDMASTATEW4" acronym="Channel_3_RCPPIDMASTATEW4" offset="496" width="32" description="RX CPPI DMA State Word 4">
			<bitfield id="CURR_BUFFER_PTR" width="32" begin="31" end="0" resetval="0" description="Current Buffer Pointer 32 bit absolute byte address in buffer into which data is currently being received" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_3_RCPPIDMASTATEW5" acronym="Channel_3_RCPPIDMASTATEW5" offset="500" width="32" description="RX CPPI DMA State Word 5">
			<bitfield id="PKT_LENGTH" width="16" begin="31" end="16" resetval="0" description="Packet Length Indicates how many bytes are contained in the packet.  This value is written into bits 15:0 of Word 3 of the SOP Descriptor during end of packet processing" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_LENGTH" width="16" begin="15" end="0" resetval="0" description="Current Buffer Length Indicates how many free bytes remain in the current buffer that is being received into" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_3_RCPPIDMASTATEW6" acronym="Channel_3_RCPPIDMASTATEW6" offset="504" width="32" description="RX CPPI DMA State Word 6">
			<bitfield id="SOP_BUFFER_BYTECNT" width="16" begin="31" end="16" resetval="0" description="Start of Packet Buffer Byte Count Indicates how many valid bytes are contained in the start of packet buffer" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CURR_BUFFER_BYTECNT" width="16" begin="15" end="0" resetval="0" description="Current Buffer Byte Count Indicates how many valid bytes are contained in the buffer that is currently being received into" range="" rwaccess="RW">
				
				
			</bitfield>
		</register>
		<register id="Channel_3_RCPPICOMPPTR" acronym="Channel_3_RCPPICOMPPTR" offset="508" width="32" description="RX CPPI Completion Pointer">
			<bitfield id="DESC_ADDR" width="30" begin="31" end="2" resetval="0" description="Descriptor Address This field contains the 30 bit word aligned pointer of the end of packet descriptor that the DMA has has last processed " range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="RDBK_MODE" width="1" begin="0" end="0" resetval="0" description="Readback / Compare Mode This bit controls the action that is to be taken when this location is read 0: Compare Mode, Indicates that the value that is presented on bits 31:2 of the read data should be compared against the value that is currently contained in bits 31:2 of this location.  If the two match, the interrupt bit corresponding to this Rx Queue should be deasserted 1: Readback Mode, Indicates that the value that is presented on bits 31:2 of the read data should be read from this location and the interrupt for this Rx Queue should be asserted This bit is read as zero" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPTRG_0_TXFUNCADDR" acronym="EPTRG_0_TXFUNCADDR" offset="1152" width="8" description="Address of the target function that has to be accessed through the associated Tx Endpoint">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FUNCADDR" width="7" begin="6" end="0" resetval="0" description="Address of target function" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_0_TXHUBADDR" acronym="EPTRG_0_TXHUBADDR" offset="1154" width="8" description="Address of the hub that has to be accessed through the associated Tx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="MULT_TRANS" width="1" begin="7" end="7" resetval="0" description="Set to '1' if hub has multiple transaction translators. Set to '0' if only single transaction translator is available" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="HUBADDR" width="7" begin="6" end="0" resetval="0" description="Address of hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_0_TXHUBPORT" acronym="EPTRG_0_TXHUBPORT" offset="1155" width="8" description="Port of the hub that has to be accessed through the associated Tx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="HUBPORT" width="7" begin="6" end="0" resetval="0" description="Port number of the hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_0_RXFUNCADDR" acronym="EPTRG_0_RXFUNCADDR" offset="1156" width="8" description="Address of the target function that has to be accessed through the associated Rx Endpoint">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FUNCADDR" width="7" begin="6" end="0" resetval="0" description="Address of target function" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_0_RXHUBADDR" acronym="EPTRG_0_RXHUBADDR" offset="1158" width="8" description="Address of the hub that has to be accessed through the associated Rx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="MULT_TRANS" width="1" begin="7" end="7" resetval="0" description="Set to '1' if hub has multiple transaction translators. Set to '0' if only single transaction translator is available" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="HUBADDR" width="7" begin="6" end="0" resetval="0" description="Address of hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_0_RXHUBPORT" acronym="EPTRG_0_RXHUBPORT" offset="1159" width="8" description="Port of the hub that has to be accessed through the associated Rx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="HUBPORT" width="7" begin="6" end="0" resetval="0" description="Port number of the hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_1_TXFUNCADDR" acronym="EPTRG_1_TXFUNCADDR" offset="1160" width="8" description="Address of the target function that has to be accessed through the associated Tx Endpoint">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FUNCADDR" width="7" begin="6" end="0" resetval="0" description="Address of target function" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_1_TXHUBADDR" acronym="EPTRG_1_TXHUBADDR" offset="1162" width="8" description="Address of the hub that has to be accessed through the associated Tx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="MULT_TRANS" width="1" begin="7" end="7" resetval="0" description="Set to '1' if hub has multiple transaction translators. Set to '0' if only single transaction translator is available" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="HUBADDR" width="7" begin="6" end="0" resetval="0" description="Address of hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_1_TXHUBPORT" acronym="EPTRG_1_TXHUBPORT" offset="1163" width="8" description="Port of the hub that has to be accessed through the associated Tx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="HUBPORT" width="7" begin="6" end="0" resetval="0" description="Port number of the hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_1_RXFUNCADDR" acronym="EPTRG_1_RXFUNCADDR" offset="1164" width="8" description="Address of the target function that has to be accessed through the associated Rx Endpoint">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FUNCADDR" width="7" begin="6" end="0" resetval="0" description="Address of target function" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_1_RXHUBADDR" acronym="EPTRG_1_RXHUBADDR" offset="1166" width="8" description="Address of the hub that has to be accessed through the associated Rx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="MULT_TRANS" width="1" begin="7" end="7" resetval="0" description="Set to '1' if hub has multiple transaction translators. Set to '0' if only single transaction translator is available" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="HUBADDR" width="7" begin="6" end="0" resetval="0" description="Address of hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_1_RXHUBPORT" acronym="EPTRG_1_RXHUBPORT" offset="1167" width="8" description="Port of the hub that has to be accessed through the associated Rx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="HUBPORT" width="7" begin="6" end="0" resetval="0" description="Port number of the hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_2_TXFUNCADDR" acronym="EPTRG_2_TXFUNCADDR" offset="1168" width="8" description="Address of the target function that has to be accessed through the associated Tx Endpoint">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FUNCADDR" width="7" begin="6" end="0" resetval="0" description="Address of target function" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_2_TXHUBADDR" acronym="EPTRG_2_TXHUBADDR" offset="1170" width="8" description="Address of the hub that has to be accessed through the associated Tx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="MULT_TRANS" width="1" begin="7" end="7" resetval="0" description="Set to '1' if hub has multiple transaction translators. Set to '0' if only single transaction translator is available" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="HUBADDR" width="7" begin="6" end="0" resetval="0" description="Address of hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_2_TXHUBPORT" acronym="EPTRG_2_TXHUBPORT" offset="1171" width="8" description="Port of the hub that has to be accessed through the associated Tx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="HUBPORT" width="7" begin="6" end="0" resetval="0" description="Port number of the hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_2_RXFUNCADDR" acronym="EPTRG_2_RXFUNCADDR" offset="1172" width="8" description="Address of the target function that has to be accessed through the associated Rx Endpoint">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FUNCADDR" width="7" begin="6" end="0" resetval="0" description="Address of target function" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_2_RXHUBADDR" acronym="EPTRG_2_RXHUBADDR" offset="1174" width="8" description="Address of the hub that has to be accessed through the associated Rx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="MULT_TRANS" width="1" begin="7" end="7" resetval="0" description="Set to '1' if hub has multiple transaction translators. Set to '0' if only single transaction translator is available" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="HUBADDR" width="7" begin="6" end="0" resetval="0" description="Address of hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_2_RXHUBPORT" acronym="EPTRG_2_RXHUBPORT" offset="1175" width="8" description="Port of the hub that has to be accessed through the associated Rx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="HUBPORT" width="7" begin="6" end="0" resetval="0" description="Port number of the hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_3_TXFUNCADDR" acronym="EPTRG_3_TXFUNCADDR" offset="1176" width="8" description="Address of the target function that has to be accessed through the associated Tx Endpoint">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FUNCADDR" width="7" begin="6" end="0" resetval="0" description="Address of target function" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_3_TXHUBADDR" acronym="EPTRG_3_TXHUBADDR" offset="1178" width="8" description="Address of the hub that has to be accessed through the associated Tx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="MULT_TRANS" width="1" begin="7" end="7" resetval="0" description="Set to '1' if hub has multiple transaction translators. Set to '0' if only single transaction translator is available" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="HUBADDR" width="7" begin="6" end="0" resetval="0" description="Address of hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_3_TXHUBPORT" acronym="EPTRG_3_TXHUBPORT" offset="1179" width="8" description="Port of the hub that has to be accessed through the associated Tx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="HUBPORT" width="7" begin="6" end="0" resetval="0" description="Port number of the hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_3_RXFUNCADDR" acronym="EPTRG_3_RXFUNCADDR" offset="1180" width="8" description="Address of the target function that has to be accessed through the associated Rx Endpoint">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FUNCADDR" width="7" begin="6" end="0" resetval="0" description="Address of target function" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_3_RXHUBADDR" acronym="EPTRG_3_RXHUBADDR" offset="1182" width="8" description="Address of the hub that has to be accessed through the associated Rx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="MULT_TRANS" width="1" begin="7" end="7" resetval="0" description="Set to '1' if hub has multiple transaction translators. Set to '0' if only single transaction translator is available" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="HUBADDR" width="7" begin="6" end="0" resetval="0" description="Address of hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_3_RXHUBPORT" acronym="EPTRG_3_RXHUBPORT" offset="1183" width="8" description="Port of the hub that has to be accessed through the associated Rx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="HUBPORT" width="7" begin="6" end="0" resetval="0" description="Port number of the hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_4_TXFUNCADDR" acronym="EPTRG_4_TXFUNCADDR" offset="1184" width="8" description="Address of the target function that has to be accessed through the associated Tx Endpoint">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FUNCADDR" width="7" begin="6" end="0" resetval="0" description="Address of target function" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_4_TXHUBADDR" acronym="EPTRG_4_TXHUBADDR" offset="1186" width="8" description="Address of the hub that has to be accessed through the associated Tx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="MULT_TRANS" width="1" begin="7" end="7" resetval="0" description="Set to '1' if hub has multiple transaction translators. Set to '0' if only single transaction translator is available" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="HUBADDR" width="7" begin="6" end="0" resetval="0" description="Address of hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_4_TXHUBPORT" acronym="EPTRG_4_TXHUBPORT" offset="1187" width="8" description="Port of the hub that has to be accessed through the associated Tx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="HUBPORT" width="7" begin="6" end="0" resetval="0" description="Port number of the hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_4_RXFUNCADDR" acronym="EPTRG_4_RXFUNCADDR" offset="1188" width="8" description="Address of the target function that has to be accessed through the associated Rx Endpoint">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FUNCADDR" width="7" begin="6" end="0" resetval="0" description="Address of target function" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_4_RXHUBADDR" acronym="EPTRG_4_RXHUBADDR" offset="1190" width="8" description="Address of the hub that has to be accessed through the associated Rx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="MULT_TRANS" width="1" begin="7" end="7" resetval="0" description="Set to '1' if hub has multiple transaction translators. Set to '0' if only single transaction translator is available" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="HUBADDR" width="7" begin="6" end="0" resetval="0" description="Address of hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPTRG_4_RXHUBPORT" acronym="EPTRG_4_RXHUBPORT" offset="1191" width="8" description="Port of the hub that has to be accessed through the associated Rx Endpoint. This is used only when full speed or low speed device is connected via a USB2.0 high speed hub">
			<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="HUBPORT" width="7" begin="6" end="0" resetval="0" description="Port number of the hub" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_0_TXMAXP" acronym="EPCSR_0_TXMAXP" offset="1280" width="16" description="Maximum packet size for peripheral/host Tx endpoint">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="The maximum payload transmitted in a single transaction The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_0_PERI_CSR0" acronym="EPCSR_0_PERI_CSR0" offset="1282" width="16" description="Control Status register for Endpoint 0  in Peripheral mode.">
			<bitfield id="_RESV" width="7" begin="15" end="9" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Set this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="SERV_SETUPEND" width="1" begin="7" end="7" resetval="0" description="Set this bit to clear the SETUPEND bit. It is cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SERV_RXPKTRDY" width="1" begin="6" end="6" resetval="0" description="Set this bit to clear the RXPKTRDY bit. It is cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Set this bit to terminate the current transaction. The STALL handshake will be transmitted and then this bit will be cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SETUPEND" width="1" begin="4" end="4" resetval="0" description="This bit will be set when a control transaction ends before the DATAEND bit has been set. An interrupt will be generated and the FIFO flushed at this time. The bit is cleared by the user writing a 1 to the SERV_SETUPEND bit" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="DATAEND" width="1" begin="3" end="3" resetval="0" description="Set this bit 1. When setting TXPKTRDY for the last data packet 2. When clearing RXPKTRDY after unloading the last data packet 3. When setting TXPKTRDY for a zero length data packet It is cleared automatically" range="" rwaccess="W">
				
				
				
				
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is transmitted.  This bit should be cleared by the user" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. This bit is cleared by setting the SERV_RXPKTRDY bit" range="" rwaccess="R">
				
			</bitfield>
		</register>
		<register id="EPCSR_0_HOST_CSR0" acronym="EPCSR_0_HOST_CSR0" offset="1282" width="16" description="Control Status register for Endpoint 0  in Host mode.">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the EP0 data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Write 1 to this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when Endpoint 0 is halted following the receipt of NAK responses for longer than the time set by the NAKLIMIT0 register. This bit should be cleared to allow the endpoint to continue" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="STATUSPKT" width="1" begin="6" end="6" resetval="0" description="Set this bit at the same time as the TXPKTRDY or REQPKT bit is set, to perform a status stage transaction. Setting this bit ensures that the data toggle is set to 1 so that a DATA1 packet is used for the Status Stage transaction" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Set this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="4" end="4" resetval="0" description="This bit will be set when three attempts have been made to perform a transaction with no response from the peripheral. The user should clear this bit. An interrupt is generated when this bit is set" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SETUPPKT" width="1" begin="3" end="3" resetval="0" description="Set this bit, at the same time as the TXPKTRDY bit is set, to send a SETUP token instead of an OUT token for the transaction" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is received. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. Clear this bit by setting the SERV_RXPKTRDY bit" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_0_PERI_TXCSR" acronym="EPCSR_0_PERI_TXCSR" offset="1282" width="16" description="Control Status register for peripheral Tx endpoint.">
			<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Tx endpoint for Isochronous transfers, and clear it to enable the Tx endpoint for Bulk or Interrupt transfers " range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="MODE" width="1" begin="13" end="13" resetval="1" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit only has any effect where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="3" begin="9" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set automatically when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to issue a STALL handshake to an IN token. Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FlushFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="UNDERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set automatically if an IN token is received when TXPKTRDY is not set. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="This bit is set when there is at least 1 packet in the Tx FIFO. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_0_HOST_TXCSR" acronym="EPCSR_0_HOST_TXCSR" offset="1282" width="16" description="Control Status register for host Tx endpoint.">
			<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP) is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="14" end="14" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MODE" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit has any effect only where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="9" end="9" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="8" end="8" resetval="0" description="When read, this bit indicates the current state of the Tx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when the Tx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAKLIMIT by the TXINTERVAL register. It should be cleared to allow the endpoint to continue Note: Valid only for Bulk endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set when a STALL handshake is received. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SETUPPKT" width="1" begin="4" end="4" resetval="0" description="Set this bit at the sametime as TXPKTRDY is set, to send a SETUP token instead of an OUT token for the transaction.  Note: Setting this bit also clears DATATOG bit" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to send a packet and no handshake packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Valid only when the endpoint is operating in Bulk or Interrupt mode" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="The USB controller sets this bit when there is at least 1 packet in the Tx FIFO" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_0_RXMAXP" acronym="EPCSR_0_RXMAXP" offset="1284" width="16" description="Maximum packet size for peripheral/host Rx endpoint">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="Defines the maximum amount of data that can be transferred through the selected Rx endpoint in a single frame / microframe (High-speed transfers) The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_0_PERI_RXCSR" acronym="EPCSR_0_PERI_RXCSR" offset="1286" width="16" description="Control Status register for peripheral Rx endpoint.">
			<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Rx endpoint for Isochronous transfers, and clear it to enable the Rx endpoint for Bulk/Interrupt transfers" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="3" begin="10" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="6" end="6" resetval="0" description="This bit is set when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to issue a STALL handshake Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
				
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="DATAERROR" width="1" begin="3" end="3" resetval="0" description="This bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error. It is cleared when RXPKTRDY is cleared Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero." range="" rwaccess="R">
				
				
			</bitfield>
			<bitfield id="OVERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set if an OUT packet cannot be loaded into the Rx FIFO. The user should clear this bit Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_0_HOST_RXCSR" acronym="EPCSR_0_HOST_RXCSR" offset="1286" width="16" description="Control Status register for host Rx endpoint.">
			<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="AUTOREQ" width="1" begin="14" end="14" resetval="0" description="When this bit is set, the REQPKT bit will be automatically set when the RXPKTRDY bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the Rx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="8" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="6" end="6" resetval="0" description="When a STALL handshake is received, this bit is set and an interrupt is generated. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="DATAERR_NAKTIMEOUT" width="1" begin="3" end="3" resetval="0" description="When operating in ISO mode, this bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error and cleared when RXPKTRDY is cleared In Bulk mode, this bit will be set when the Rx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAK Limit by the RXINTERVAL register. The user should clear this bit to allow the endpoint to continue" range="" rwaccess="R">
				
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to receive a packet and no data packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Note: This bit is only valid when the Tx endpoint is operating in Bulk or Interrupt mode. In ISO mode, it always returns zero" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_0_COUNT0" acronym="EPCSR_0_COUNT0" offset="1288" width="16" description="Number of received bytes in Endpoint 0 FIFO.">
			<bitfield id="_RESV" width="9" begin="15" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EP0RXCOUNT" width="7" begin="6" end="0" resetval="0" description="Indicates the number of received data bytes in the Endpoint 0 FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_CSR0 or HOST_CSR0 is set" range="" rwaccess="R">
				
				
			</bitfield>
		</register>
		<register id="EPCSR_0_RXCOUNT" acronym="EPCSR_0_RXCOUNT" offset="1288" width="16" description="Number of bytes in host Rx endpoint FIFO.">
			<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EPRXCOUNT" width="13" begin="12" end="0" resetval="0" description="Holds the number of received data bytes in the packet in the Rx FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_RXCSR or HOST_RXCSR is set" range="" rwaccess="R">
				
				
			</bitfield>
		</register>
		<register id="EPCSR_0_HOST_TYPE0" acronym="EPCSR_0_HOST_TYPE0" offset="1290" width="8" description="Defines the speed of Endpoint 0">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="_RESV" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="EPCSR_0_HOST_TXTYPE" acronym="EPCSR_0_HOST_TXTYPE" offset="1290" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Tx endpoint.">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="Set this to select the required protocol for the Tx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="TENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Tx endpoint descriptor returned to the USB controller during device enumeration" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_0_HOST_NAKLIMIT0" acronym="EPCSR_0_HOST_NAKLIMIT0" offset="1291" width="8" description="Sets the NAK response timeout on Endpoint 0.">
			<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EP0NAKLIMIT" width="5" begin="4" end="0" resetval="0" description="Sets the number of frames/microframes (High-Speed transfers) after which Endpoint 0 should timeout on receiving a stream of NAK responses The number of frames/microframes selected is 2 ( m -1) (where m is the value set in the register, valid values 2 - 16). If the host receives NAK responses from the target for more frames than the number represented by the Limit set in this register, the endpoint will be halted Note: A value of 0 or 1 disables the NAK timeout function" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_0_HOST_TXINTERVAL" acronym="EPCSR_0_HOST_TXINTERVAL" offset="1291" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Tx endpoint.">
			<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Tx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a TxInterval register for each configured Tx endpoint (except Endpoint 0). In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function --------------------------------------
-----------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_0_HOST_RXTYPE" acronym="EPCSR_0_HOST_RXTYPE" offset="1292" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Rx endpoint.">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="The CPU should set this to select the required protocol for the Rx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="RENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Rx endpoint descriptor returned to the USB Controller during device enumeration" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_0_HOST_RXINTERVAL" acronym="EPCSR_0_HOST_RXINTERVAL" offset="1293" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Rx endpoint.">
			<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Rx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a RxInterval register for each configured Rx endpoint (except Endpoint 0).In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function ---------------------------------------
----------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_0_CONFIGDATA" acronym="EPCSR_0_CONFIGDATA" offset="1295" width="8" description="Returns details of core configuration">
			<bitfield id="MPRXE" width="1" begin="7" end="7" resetval="0" description="When set to '1', automatic amalgamation of bulk packets is selected" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MPTXE" width="1" begin="6" end="6" resetval="0" description="When set to '1', automatic splitting of bulk packets is selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="BIGENDIAN" width="1" begin="5" end="5" resetval="0" description="When set to '1' indicates Big Endian ordering is selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="HBRXE" width="1" begin="4" end="4" resetval="0" description="When set to '1' indicates High-bandwidth Rx ISO Endpoint Support selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="HBTXE" width="1" begin="3" end="3" resetval="0" description="When set to '1' indicates High-bandwidth Tx ISO Endpoint Support selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="DYNFIFO" width="1" begin="2" end="2" resetval="0" description="When set to '1' indicates Dynamic FIFO Sizing option selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="SOFTCONE" width="1" begin="1" end="1" resetval="0" description="When set to '1' indicates Soft Connect/Disconnect option selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="UTMIDATAWIDTH" width="1" begin="0" end="0" resetval="0" description="Indicates selected UTMI data width 0: 8 bits 1: 16 bits" range="" rwaccess="R">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_0_FIFOSIZE" acronym="EPCSR_0_FIFOSIZE" offset="1295" width="8" description="Returns the configured size of the selected Rx FIFO and Tx FIFOs">
			<bitfield id="RXFIFOSZ" width="4" begin="7" end="4" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Rx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed When the Tx and Rx endpoints share the same FIFO, the Rx FIFO size will be encoded as 15 Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
				
				
				
				
				
				
			</bitfield>
			<bitfield id="TXFIFOSZ" width="4" begin="3" end="0" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Tx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_1_TXMAXP" acronym="EPCSR_1_TXMAXP" offset="1296" width="16" description="Maximum packet size for peripheral/host Tx endpoint">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="The maximum payload transmitted in a single transaction The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_1_PERI_CSR0" acronym="EPCSR_1_PERI_CSR0" offset="1298" width="16" description="Control Status register for Endpoint 0  in Peripheral mode.">
			<bitfield id="_RESV" width="7" begin="15" end="9" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Set this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="SERV_SETUPEND" width="1" begin="7" end="7" resetval="0" description="Set this bit to clear the SETUPEND bit. It is cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SERV_RXPKTRDY" width="1" begin="6" end="6" resetval="0" description="Set this bit to clear the RXPKTRDY bit. It is cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Set this bit to terminate the current transaction. The STALL handshake will be transmitted and then this bit will be cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SETUPEND" width="1" begin="4" end="4" resetval="0" description="This bit will be set when a control transaction ends before the DATAEND bit has been set. An interrupt will be generated and the FIFO flushed at this time. The bit is cleared by the user writing a 1 to the SERV_SETUPEND bit" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="DATAEND" width="1" begin="3" end="3" resetval="0" description="Set this bit 1. When setting TXPKTRDY for the last data packet 2. When clearing RXPKTRDY after unloading the last data packet 3. When setting TXPKTRDY for a zero length data packet It is cleared automatically" range="" rwaccess="W">
				
				
				
				
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is transmitted.  This bit should be cleared by the user" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. This bit is cleared by setting the SERV_RXPKTRDY bit" range="" rwaccess="R">
				
			</bitfield>
		</register>
		<register id="EPCSR_1_HOST_CSR0" acronym="EPCSR_1_HOST_CSR0" offset="1298" width="16" description="Control Status register for Endpoint 0  in Host mode.">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the EP0 data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Write 1 to this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when Endpoint 0 is halted following the receipt of NAK responses for longer than the time set by the NAKLIMIT0 register. This bit should be cleared to allow the endpoint to continue" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="STATUSPKT" width="1" begin="6" end="6" resetval="0" description="Set this bit at the same time as the TXPKTRDY or REQPKT bit is set, to perform a status stage transaction. Setting this bit ensures that the data toggle is set to 1 so that a DATA1 packet is used for the Status Stage transaction" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Set this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="4" end="4" resetval="0" description="This bit will be set when three attempts have been made to perform a transaction with no response from the peripheral. The user should clear this bit. An interrupt is generated when this bit is set" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SETUPPKT" width="1" begin="3" end="3" resetval="0" description="Set this bit, at the same time as the TXPKTRDY bit is set, to send a SETUP token instead of an OUT token for the transaction" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is received. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. Clear this bit by setting the SERV_RXPKTRDY bit" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_1_PERI_TXCSR" acronym="EPCSR_1_PERI_TXCSR" offset="1298" width="16" description="Control Status register for peripheral Tx endpoint.">
			<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Tx endpoint for Isochronous transfers, and clear it to enable the Tx endpoint for Bulk or Interrupt transfers " range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="MODE" width="1" begin="13" end="13" resetval="1" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit only has any effect where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="3" begin="9" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set automatically when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to issue a STALL handshake to an IN token. Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FlushFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="UNDERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set automatically if an IN token is received when TXPKTRDY is not set. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="This bit is set when there is at least 1 packet in the Tx FIFO. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_1_HOST_TXCSR" acronym="EPCSR_1_HOST_TXCSR" offset="1298" width="16" description="Control Status register for host Tx endpoint.">
			<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP) is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="14" end="14" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MODE" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit has any effect only where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="9" end="9" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="8" end="8" resetval="0" description="When read, this bit indicates the current state of the Tx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when the Tx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAKLIMIT by the TXINTERVAL register. It should be cleared to allow the endpoint to continue Note: Valid only for Bulk endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set when a STALL handshake is received. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SETUPPKT" width="1" begin="4" end="4" resetval="0" description="Set this bit at the sametime as TXPKTRDY is set, to send a SETUP token instead of an OUT token for the transaction.  Note: Setting this bit also clears DATATOG bit" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to send a packet and no handshake packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Valid only when the endpoint is operating in Bulk or Interrupt mode" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="The USB controller sets this bit when there is at least 1 packet in the Tx FIFO" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_1_RXMAXP" acronym="EPCSR_1_RXMAXP" offset="1300" width="16" description="Maximum packet size for peripheral/host Rx endpoint">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="Defines the maximum amount of data that can be transferred through the selected Rx endpoint in a single frame / microframe (High-speed transfers) The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_1_PERI_RXCSR" acronym="EPCSR_1_PERI_RXCSR" offset="1302" width="16" description="Control Status register for peripheral Rx endpoint.">
			<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Rx endpoint for Isochronous transfers, and clear it to enable the Rx endpoint for Bulk/Interrupt transfers" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="3" begin="10" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="6" end="6" resetval="0" description="This bit is set when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to issue a STALL handshake Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
				
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="DATAERROR" width="1" begin="3" end="3" resetval="0" description="This bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error. It is cleared when RXPKTRDY is cleared Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero." range="" rwaccess="R">
				
				
			</bitfield>
			<bitfield id="OVERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set if an OUT packet cannot be loaded into the Rx FIFO. The user should clear this bit Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_1_HOST_RXCSR" acronym="EPCSR_1_HOST_RXCSR" offset="1302" width="16" description="Control Status register for host Rx endpoint.">
			<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="AUTOREQ" width="1" begin="14" end="14" resetval="0" description="When this bit is set, the REQPKT bit will be automatically set when the RXPKTRDY bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the Rx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="8" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="6" end="6" resetval="0" description="When a STALL handshake is received, this bit is set and an interrupt is generated. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="DATAERR_NAKTIMEOUT" width="1" begin="3" end="3" resetval="0" description="When operating in ISO mode, this bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error and cleared when RXPKTRDY is cleared In Bulk mode, this bit will be set when the Rx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAK Limit by the RXINTERVAL register. The user should clear this bit to allow the endpoint to continue" range="" rwaccess="R">
				
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to receive a packet and no data packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Note: This bit is only valid when the Tx endpoint is operating in Bulk or Interrupt mode. In ISO mode, it always returns zero" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_1_COUNT0" acronym="EPCSR_1_COUNT0" offset="1304" width="16" description="Number of received bytes in Endpoint 0 FIFO.">
			<bitfield id="_RESV" width="9" begin="15" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EP0RXCOUNT" width="7" begin="6" end="0" resetval="0" description="Indicates the number of received data bytes in the Endpoint 0 FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_CSR0 or HOST_CSR0 is set" range="" rwaccess="R">
				
				
			</bitfield>
		</register>
		<register id="EPCSR_1_RXCOUNT" acronym="EPCSR_1_RXCOUNT" offset="1304" width="16" description="Number of bytes in host Rx endpoint FIFO.">
			<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EPRXCOUNT" width="13" begin="12" end="0" resetval="0" description="Holds the number of received data bytes in the packet in the Rx FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_RXCSR or HOST_RXCSR is set" range="" rwaccess="R">
				
				
			</bitfield>
		</register>
		<register id="EPCSR_1_HOST_TYPE0" acronym="EPCSR_1_HOST_TYPE0" offset="1306" width="8" description="Defines the speed of Endpoint 0">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="_RESV" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="EPCSR_1_HOST_TXTYPE" acronym="EPCSR_1_HOST_TXTYPE" offset="1306" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Tx endpoint.">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="Set this to select the required protocol for the Tx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="TENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Tx endpoint descriptor returned to the USB controller during device enumeration" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_1_HOST_NAKLIMIT0" acronym="EPCSR_1_HOST_NAKLIMIT0" offset="1307" width="8" description="Sets the NAK response timeout on Endpoint 0.">
			<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EP0NAKLIMIT" width="5" begin="4" end="0" resetval="0" description="Sets the number of frames/microframes (High-Speed transfers) after which Endpoint 0 should timeout on receiving a stream of NAK responses The number of frames/microframes selected is 2 ( m -1) (where m is the value set in the register, valid values 2 - 16). If the host receives NAK responses from the target for more frames than the number represented by the Limit set in this register, the endpoint will be halted Note: A value of 0 or 1 disables the NAK timeout function" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_1_HOST_TXINTERVAL" acronym="EPCSR_1_HOST_TXINTERVAL" offset="1307" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Tx endpoint.">
			<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Tx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a TxInterval register for each configured Tx endpoint (except Endpoint 0). In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function --------------------------------------
-----------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_1_HOST_RXTYPE" acronym="EPCSR_1_HOST_RXTYPE" offset="1308" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Rx endpoint.">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="The CPU should set this to select the required protocol for the Rx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="RENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Rx endpoint descriptor returned to the USB Controller during device enumeration" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_1_HOST_RXINTERVAL" acronym="EPCSR_1_HOST_RXINTERVAL" offset="1309" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Rx endpoint.">
			<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Rx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a RxInterval register for each configured Rx endpoint (except Endpoint 0).In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function ---------------------------------------
----------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_1_CONFIGDATA" acronym="EPCSR_1_CONFIGDATA" offset="1311" width="8" description="Returns details of core configuration">
			<bitfield id="MPRXE" width="1" begin="7" end="7" resetval="0" description="When set to '1', automatic amalgamation of bulk packets is selected" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MPTXE" width="1" begin="6" end="6" resetval="0" description="When set to '1', automatic splitting of bulk packets is selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="BIGENDIAN" width="1" begin="5" end="5" resetval="0" description="When set to '1' indicates Big Endian ordering is selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="HBRXE" width="1" begin="4" end="4" resetval="0" description="When set to '1' indicates High-bandwidth Rx ISO Endpoint Support selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="HBTXE" width="1" begin="3" end="3" resetval="0" description="When set to '1' indicates High-bandwidth Tx ISO Endpoint Support selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="DYNFIFO" width="1" begin="2" end="2" resetval="0" description="When set to '1' indicates Dynamic FIFO Sizing option selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="SOFTCONE" width="1" begin="1" end="1" resetval="0" description="When set to '1' indicates Soft Connect/Disconnect option selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="UTMIDATAWIDTH" width="1" begin="0" end="0" resetval="0" description="Indicates selected UTMI data width 0: 8 bits 1: 16 bits" range="" rwaccess="R">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_1_FIFOSIZE" acronym="EPCSR_1_FIFOSIZE" offset="1311" width="8" description="Returns the configured size of the selected Rx FIFO and Tx FIFOs">
			<bitfield id="RXFIFOSZ" width="4" begin="7" end="4" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Rx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed When the Tx and Rx endpoints share the same FIFO, the Rx FIFO size will be encoded as 15 Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
				
				
				
				
				
				
			</bitfield>
			<bitfield id="TXFIFOSZ" width="4" begin="3" end="0" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Tx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_2_TXMAXP" acronym="EPCSR_2_TXMAXP" offset="1312" width="16" description="Maximum packet size for peripheral/host Tx endpoint">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="The maximum payload transmitted in a single transaction The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_2_PERI_CSR0" acronym="EPCSR_2_PERI_CSR0" offset="1314" width="16" description="Control Status register for Endpoint 0  in Peripheral mode.">
			<bitfield id="_RESV" width="7" begin="15" end="9" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Set this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="SERV_SETUPEND" width="1" begin="7" end="7" resetval="0" description="Set this bit to clear the SETUPEND bit. It is cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SERV_RXPKTRDY" width="1" begin="6" end="6" resetval="0" description="Set this bit to clear the RXPKTRDY bit. It is cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Set this bit to terminate the current transaction. The STALL handshake will be transmitted and then this bit will be cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SETUPEND" width="1" begin="4" end="4" resetval="0" description="This bit will be set when a control transaction ends before the DATAEND bit has been set. An interrupt will be generated and the FIFO flushed at this time. The bit is cleared by the user writing a 1 to the SERV_SETUPEND bit" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="DATAEND" width="1" begin="3" end="3" resetval="0" description="Set this bit 1. When setting TXPKTRDY for the last data packet 2. When clearing RXPKTRDY after unloading the last data packet 3. When setting TXPKTRDY for a zero length data packet It is cleared automatically" range="" rwaccess="W">
				
				
				
				
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is transmitted.  This bit should be cleared by the user" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. This bit is cleared by setting the SERV_RXPKTRDY bit" range="" rwaccess="R">
				
			</bitfield>
		</register>
		<register id="EPCSR_2_HOST_CSR0" acronym="EPCSR_2_HOST_CSR0" offset="1314" width="16" description="Control Status register for Endpoint 0  in Host mode.">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the EP0 data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Write 1 to this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when Endpoint 0 is halted following the receipt of NAK responses for longer than the time set by the NAKLIMIT0 register. This bit should be cleared to allow the endpoint to continue" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="STATUSPKT" width="1" begin="6" end="6" resetval="0" description="Set this bit at the same time as the TXPKTRDY or REQPKT bit is set, to perform a status stage transaction. Setting this bit ensures that the data toggle is set to 1 so that a DATA1 packet is used for the Status Stage transaction" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Set this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="4" end="4" resetval="0" description="This bit will be set when three attempts have been made to perform a transaction with no response from the peripheral. The user should clear this bit. An interrupt is generated when this bit is set" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SETUPPKT" width="1" begin="3" end="3" resetval="0" description="Set this bit, at the same time as the TXPKTRDY bit is set, to send a SETUP token instead of an OUT token for the transaction" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is received. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. Clear this bit by setting the SERV_RXPKTRDY bit" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_2_PERI_TXCSR" acronym="EPCSR_2_PERI_TXCSR" offset="1314" width="16" description="Control Status register for peripheral Tx endpoint.">
			<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Tx endpoint for Isochronous transfers, and clear it to enable the Tx endpoint for Bulk or Interrupt transfers " range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="MODE" width="1" begin="13" end="13" resetval="1" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit only has any effect where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="3" begin="9" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set automatically when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to issue a STALL handshake to an IN token. Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FlushFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="UNDERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set automatically if an IN token is received when TXPKTRDY is not set. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="This bit is set when there is at least 1 packet in the Tx FIFO. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_2_HOST_TXCSR" acronym="EPCSR_2_HOST_TXCSR" offset="1314" width="16" description="Control Status register for host Tx endpoint.">
			<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP) is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="14" end="14" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MODE" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit has any effect only where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="9" end="9" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="8" end="8" resetval="0" description="When read, this bit indicates the current state of the Tx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when the Tx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAKLIMIT by the TXINTERVAL register. It should be cleared to allow the endpoint to continue Note: Valid only for Bulk endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set when a STALL handshake is received. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SETUPPKT" width="1" begin="4" end="4" resetval="0" description="Set this bit at the sametime as TXPKTRDY is set, to send a SETUP token instead of an OUT token for the transaction.  Note: Setting this bit also clears DATATOG bit" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to send a packet and no handshake packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Valid only when the endpoint is operating in Bulk or Interrupt mode" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="The USB controller sets this bit when there is at least 1 packet in the Tx FIFO" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_2_RXMAXP" acronym="EPCSR_2_RXMAXP" offset="1316" width="16" description="Maximum packet size for peripheral/host Rx endpoint">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="Defines the maximum amount of data that can be transferred through the selected Rx endpoint in a single frame / microframe (High-speed transfers) The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_2_PERI_RXCSR" acronym="EPCSR_2_PERI_RXCSR" offset="1318" width="16" description="Control Status register for peripheral Rx endpoint.">
			<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Rx endpoint for Isochronous transfers, and clear it to enable the Rx endpoint for Bulk/Interrupt transfers" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="3" begin="10" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="6" end="6" resetval="0" description="This bit is set when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to issue a STALL handshake Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
				
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="DATAERROR" width="1" begin="3" end="3" resetval="0" description="This bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error. It is cleared when RXPKTRDY is cleared Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero." range="" rwaccess="R">
				
				
			</bitfield>
			<bitfield id="OVERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set if an OUT packet cannot be loaded into the Rx FIFO. The user should clear this bit Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_2_HOST_RXCSR" acronym="EPCSR_2_HOST_RXCSR" offset="1318" width="16" description="Control Status register for host Rx endpoint.">
			<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="AUTOREQ" width="1" begin="14" end="14" resetval="0" description="When this bit is set, the REQPKT bit will be automatically set when the RXPKTRDY bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the Rx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="8" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="6" end="6" resetval="0" description="When a STALL handshake is received, this bit is set and an interrupt is generated. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="DATAERR_NAKTIMEOUT" width="1" begin="3" end="3" resetval="0" description="When operating in ISO mode, this bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error and cleared when RXPKTRDY is cleared In Bulk mode, this bit will be set when the Rx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAK Limit by the RXINTERVAL register. The user should clear this bit to allow the endpoint to continue" range="" rwaccess="R">
				
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to receive a packet and no data packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Note: This bit is only valid when the Tx endpoint is operating in Bulk or Interrupt mode. In ISO mode, it always returns zero" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_2_COUNT0" acronym="EPCSR_2_COUNT0" offset="1320" width="16" description="Number of received bytes in Endpoint 0 FIFO.">
			<bitfield id="_RESV" width="9" begin="15" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EP0RXCOUNT" width="7" begin="6" end="0" resetval="0" description="Indicates the number of received data bytes in the Endpoint 0 FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_CSR0 or HOST_CSR0 is set" range="" rwaccess="R">
				
				
			</bitfield>
		</register>
		<register id="EPCSR_2_RXCOUNT" acronym="EPCSR_2_RXCOUNT" offset="1320" width="16" description="Number of bytes in host Rx endpoint FIFO.">
			<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EPRXCOUNT" width="13" begin="12" end="0" resetval="0" description="Holds the number of received data bytes in the packet in the Rx FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_RXCSR or HOST_RXCSR is set" range="" rwaccess="R">
				
				
			</bitfield>
		</register>
		<register id="EPCSR_2_HOST_TYPE0" acronym="EPCSR_2_HOST_TYPE0" offset="1322" width="8" description="Defines the speed of Endpoint 0">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="_RESV" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="EPCSR_2_HOST_TXTYPE" acronym="EPCSR_2_HOST_TXTYPE" offset="1322" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Tx endpoint.">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="Set this to select the required protocol for the Tx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="TENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Tx endpoint descriptor returned to the USB controller during device enumeration" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_2_HOST_NAKLIMIT0" acronym="EPCSR_2_HOST_NAKLIMIT0" offset="1323" width="8" description="Sets the NAK response timeout on Endpoint 0.">
			<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EP0NAKLIMIT" width="5" begin="4" end="0" resetval="0" description="Sets the number of frames/microframes (High-Speed transfers) after which Endpoint 0 should timeout on receiving a stream of NAK responses The number of frames/microframes selected is 2 ( m -1) (where m is the value set in the register, valid values 2 - 16). If the host receives NAK responses from the target for more frames than the number represented by the Limit set in this register, the endpoint will be halted Note: A value of 0 or 1 disables the NAK timeout function" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_2_HOST_TXINTERVAL" acronym="EPCSR_2_HOST_TXINTERVAL" offset="1323" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Tx endpoint.">
			<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Tx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a TxInterval register for each configured Tx endpoint (except Endpoint 0). In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function --------------------------------------
-----------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_2_HOST_RXTYPE" acronym="EPCSR_2_HOST_RXTYPE" offset="1324" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Rx endpoint.">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="The CPU should set this to select the required protocol for the Rx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="RENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Rx endpoint descriptor returned to the USB Controller during device enumeration" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_2_HOST_RXINTERVAL" acronym="EPCSR_2_HOST_RXINTERVAL" offset="1325" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Rx endpoint.">
			<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Rx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a RxInterval register for each configured Rx endpoint (except Endpoint 0).In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function ---------------------------------------
----------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_2_CONFIGDATA" acronym="EPCSR_2_CONFIGDATA" offset="1327" width="8" description="Returns details of core configuration">
			<bitfield id="MPRXE" width="1" begin="7" end="7" resetval="0" description="When set to '1', automatic amalgamation of bulk packets is selected" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MPTXE" width="1" begin="6" end="6" resetval="0" description="When set to '1', automatic splitting of bulk packets is selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="BIGENDIAN" width="1" begin="5" end="5" resetval="0" description="When set to '1' indicates Big Endian ordering is selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="HBRXE" width="1" begin="4" end="4" resetval="0" description="When set to '1' indicates High-bandwidth Rx ISO Endpoint Support selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="HBTXE" width="1" begin="3" end="3" resetval="0" description="When set to '1' indicates High-bandwidth Tx ISO Endpoint Support selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="DYNFIFO" width="1" begin="2" end="2" resetval="0" description="When set to '1' indicates Dynamic FIFO Sizing option selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="SOFTCONE" width="1" begin="1" end="1" resetval="0" description="When set to '1' indicates Soft Connect/Disconnect option selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="UTMIDATAWIDTH" width="1" begin="0" end="0" resetval="0" description="Indicates selected UTMI data width 0: 8 bits 1: 16 bits" range="" rwaccess="R">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_2_FIFOSIZE" acronym="EPCSR_2_FIFOSIZE" offset="1327" width="8" description="Returns the configured size of the selected Rx FIFO and Tx FIFOs">
			<bitfield id="RXFIFOSZ" width="4" begin="7" end="4" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Rx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed When the Tx and Rx endpoints share the same FIFO, the Rx FIFO size will be encoded as 15 Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
				
				
				
				
				
				
			</bitfield>
			<bitfield id="TXFIFOSZ" width="4" begin="3" end="0" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Tx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_3_TXMAXP" acronym="EPCSR_3_TXMAXP" offset="1328" width="16" description="Maximum packet size for peripheral/host Tx endpoint">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="The maximum payload transmitted in a single transaction The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_3_PERI_CSR0" acronym="EPCSR_3_PERI_CSR0" offset="1330" width="16" description="Control Status register for Endpoint 0  in Peripheral mode.">
			<bitfield id="_RESV" width="7" begin="15" end="9" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Set this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="SERV_SETUPEND" width="1" begin="7" end="7" resetval="0" description="Set this bit to clear the SETUPEND bit. It is cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SERV_RXPKTRDY" width="1" begin="6" end="6" resetval="0" description="Set this bit to clear the RXPKTRDY bit. It is cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Set this bit to terminate the current transaction. The STALL handshake will be transmitted and then this bit will be cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SETUPEND" width="1" begin="4" end="4" resetval="0" description="This bit will be set when a control transaction ends before the DATAEND bit has been set. An interrupt will be generated and the FIFO flushed at this time. The bit is cleared by the user writing a 1 to the SERV_SETUPEND bit" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="DATAEND" width="1" begin="3" end="3" resetval="0" description="Set this bit 1. When setting TXPKTRDY for the last data packet 2. When clearing RXPKTRDY after unloading the last data packet 3. When setting TXPKTRDY for a zero length data packet It is cleared automatically" range="" rwaccess="W">
				
				
				
				
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is transmitted.  This bit should be cleared by the user" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. This bit is cleared by setting the SERV_RXPKTRDY bit" range="" rwaccess="R">
				
			</bitfield>
		</register>
		<register id="EPCSR_3_HOST_CSR0" acronym="EPCSR_3_HOST_CSR0" offset="1330" width="16" description="Control Status register for Endpoint 0  in Host mode.">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the EP0 data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Write 1 to this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when Endpoint 0 is halted following the receipt of NAK responses for longer than the time set by the NAKLIMIT0 register. This bit should be cleared to allow the endpoint to continue" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="STATUSPKT" width="1" begin="6" end="6" resetval="0" description="Set this bit at the same time as the TXPKTRDY or REQPKT bit is set, to perform a status stage transaction. Setting this bit ensures that the data toggle is set to 1 so that a DATA1 packet is used for the Status Stage transaction" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Set this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="4" end="4" resetval="0" description="This bit will be set when three attempts have been made to perform a transaction with no response from the peripheral. The user should clear this bit. An interrupt is generated when this bit is set" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SETUPPKT" width="1" begin="3" end="3" resetval="0" description="Set this bit, at the same time as the TXPKTRDY bit is set, to send a SETUP token instead of an OUT token for the transaction" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is received. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. Clear this bit by setting the SERV_RXPKTRDY bit" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_3_PERI_TXCSR" acronym="EPCSR_3_PERI_TXCSR" offset="1330" width="16" description="Control Status register for peripheral Tx endpoint.">
			<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Tx endpoint for Isochronous transfers, and clear it to enable the Tx endpoint for Bulk or Interrupt transfers " range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="MODE" width="1" begin="13" end="13" resetval="1" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit only has any effect where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="3" begin="9" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set automatically when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to issue a STALL handshake to an IN token. Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FlushFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="UNDERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set automatically if an IN token is received when TXPKTRDY is not set. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="This bit is set when there is at least 1 packet in the Tx FIFO. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_3_HOST_TXCSR" acronym="EPCSR_3_HOST_TXCSR" offset="1330" width="16" description="Control Status register for host Tx endpoint.">
			<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP) is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="14" end="14" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MODE" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit has any effect only where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="9" end="9" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="8" end="8" resetval="0" description="When read, this bit indicates the current state of the Tx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when the Tx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAKLIMIT by the TXINTERVAL register. It should be cleared to allow the endpoint to continue Note: Valid only for Bulk endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set when a STALL handshake is received. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SETUPPKT" width="1" begin="4" end="4" resetval="0" description="Set this bit at the sametime as TXPKTRDY is set, to send a SETUP token instead of an OUT token for the transaction.  Note: Setting this bit also clears DATATOG bit" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to send a packet and no handshake packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Valid only when the endpoint is operating in Bulk or Interrupt mode" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="The USB controller sets this bit when there is at least 1 packet in the Tx FIFO" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_3_RXMAXP" acronym="EPCSR_3_RXMAXP" offset="1332" width="16" description="Maximum packet size for peripheral/host Rx endpoint">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="Defines the maximum amount of data that can be transferred through the selected Rx endpoint in a single frame / microframe (High-speed transfers) The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_3_PERI_RXCSR" acronym="EPCSR_3_PERI_RXCSR" offset="1334" width="16" description="Control Status register for peripheral Rx endpoint.">
			<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Rx endpoint for Isochronous transfers, and clear it to enable the Rx endpoint for Bulk/Interrupt transfers" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="3" begin="10" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="6" end="6" resetval="0" description="This bit is set when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to issue a STALL handshake Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
				
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="DATAERROR" width="1" begin="3" end="3" resetval="0" description="This bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error. It is cleared when RXPKTRDY is cleared Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero." range="" rwaccess="R">
				
				
			</bitfield>
			<bitfield id="OVERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set if an OUT packet cannot be loaded into the Rx FIFO. The user should clear this bit Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_3_HOST_RXCSR" acronym="EPCSR_3_HOST_RXCSR" offset="1334" width="16" description="Control Status register for host Rx endpoint.">
			<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="AUTOREQ" width="1" begin="14" end="14" resetval="0" description="When this bit is set, the REQPKT bit will be automatically set when the RXPKTRDY bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the Rx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="8" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="6" end="6" resetval="0" description="When a STALL handshake is received, this bit is set and an interrupt is generated. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="DATAERR_NAKTIMEOUT" width="1" begin="3" end="3" resetval="0" description="When operating in ISO mode, this bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error and cleared when RXPKTRDY is cleared In Bulk mode, this bit will be set when the Rx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAK Limit by the RXINTERVAL register. The user should clear this bit to allow the endpoint to continue" range="" rwaccess="R">
				
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to receive a packet and no data packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Note: This bit is only valid when the Tx endpoint is operating in Bulk or Interrupt mode. In ISO mode, it always returns zero" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_3_COUNT0" acronym="EPCSR_3_COUNT0" offset="1336" width="16" description="Number of received bytes in Endpoint 0 FIFO.">
			<bitfield id="_RESV" width="9" begin="15" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EP0RXCOUNT" width="7" begin="6" end="0" resetval="0" description="Indicates the number of received data bytes in the Endpoint 0 FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_CSR0 or HOST_CSR0 is set" range="" rwaccess="R">
				
				
			</bitfield>
		</register>
		<register id="EPCSR_3_RXCOUNT" acronym="EPCSR_3_RXCOUNT" offset="1336" width="16" description="Number of bytes in host Rx endpoint FIFO.">
			<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EPRXCOUNT" width="13" begin="12" end="0" resetval="0" description="Holds the number of received data bytes in the packet in the Rx FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_RXCSR or HOST_RXCSR is set" range="" rwaccess="R">
				
				
			</bitfield>
		</register>
		<register id="EPCSR_3_HOST_TYPE0" acronym="EPCSR_3_HOST_TYPE0" offset="1338" width="8" description="Defines the speed of Endpoint 0">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="_RESV" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="EPCSR_3_HOST_TXTYPE" acronym="EPCSR_3_HOST_TXTYPE" offset="1338" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Tx endpoint.">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="Set this to select the required protocol for the Tx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="TENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Tx endpoint descriptor returned to the USB controller during device enumeration" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_3_HOST_NAKLIMIT0" acronym="EPCSR_3_HOST_NAKLIMIT0" offset="1339" width="8" description="Sets the NAK response timeout on Endpoint 0.">
			<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EP0NAKLIMIT" width="5" begin="4" end="0" resetval="0" description="Sets the number of frames/microframes (High-Speed transfers) after which Endpoint 0 should timeout on receiving a stream of NAK responses The number of frames/microframes selected is 2 ( m -1) (where m is the value set in the register, valid values 2 - 16). If the host receives NAK responses from the target for more frames than the number represented by the Limit set in this register, the endpoint will be halted Note: A value of 0 or 1 disables the NAK timeout function" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_3_HOST_TXINTERVAL" acronym="EPCSR_3_HOST_TXINTERVAL" offset="1339" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Tx endpoint.">
			<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Tx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a TxInterval register for each configured Tx endpoint (except Endpoint 0). In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function --------------------------------------
-----------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_3_HOST_RXTYPE" acronym="EPCSR_3_HOST_RXTYPE" offset="1340" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Rx endpoint.">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="The CPU should set this to select the required protocol for the Rx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="RENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Rx endpoint descriptor returned to the USB Controller during device enumeration" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_3_HOST_RXINTERVAL" acronym="EPCSR_3_HOST_RXINTERVAL" offset="1341" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Rx endpoint.">
			<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Rx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a RxInterval register for each configured Rx endpoint (except Endpoint 0).In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function ---------------------------------------
----------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_3_CONFIGDATA" acronym="EPCSR_3_CONFIGDATA" offset="1343" width="8" description="Returns details of core configuration">
			<bitfield id="MPRXE" width="1" begin="7" end="7" resetval="0" description="When set to '1', automatic amalgamation of bulk packets is selected" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MPTXE" width="1" begin="6" end="6" resetval="0" description="When set to '1', automatic splitting of bulk packets is selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="BIGENDIAN" width="1" begin="5" end="5" resetval="0" description="When set to '1' indicates Big Endian ordering is selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="HBRXE" width="1" begin="4" end="4" resetval="0" description="When set to '1' indicates High-bandwidth Rx ISO Endpoint Support selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="HBTXE" width="1" begin="3" end="3" resetval="0" description="When set to '1' indicates High-bandwidth Tx ISO Endpoint Support selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="DYNFIFO" width="1" begin="2" end="2" resetval="0" description="When set to '1' indicates Dynamic FIFO Sizing option selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="SOFTCONE" width="1" begin="1" end="1" resetval="0" description="When set to '1' indicates Soft Connect/Disconnect option selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="UTMIDATAWIDTH" width="1" begin="0" end="0" resetval="0" description="Indicates selected UTMI data width 0: 8 bits 1: 16 bits" range="" rwaccess="R">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_3_FIFOSIZE" acronym="EPCSR_3_FIFOSIZE" offset="1343" width="8" description="Returns the configured size of the selected Rx FIFO and Tx FIFOs">
			<bitfield id="RXFIFOSZ" width="4" begin="7" end="4" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Rx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed When the Tx and Rx endpoints share the same FIFO, the Rx FIFO size will be encoded as 15 Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
				
				
				
				
				
				
			</bitfield>
			<bitfield id="TXFIFOSZ" width="4" begin="3" end="0" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Tx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_4_TXMAXP" acronym="EPCSR_4_TXMAXP" offset="1344" width="16" description="Maximum packet size for peripheral/host Tx endpoint">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="The maximum payload transmitted in a single transaction The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_4_PERI_CSR0" acronym="EPCSR_4_PERI_CSR0" offset="1346" width="16" description="Control Status register for Endpoint 0  in Peripheral mode.">
			<bitfield id="_RESV" width="7" begin="15" end="9" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Set this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="SERV_SETUPEND" width="1" begin="7" end="7" resetval="0" description="Set this bit to clear the SETUPEND bit. It is cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SERV_RXPKTRDY" width="1" begin="6" end="6" resetval="0" description="Set this bit to clear the RXPKTRDY bit. It is cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Set this bit to terminate the current transaction. The STALL handshake will be transmitted and then this bit will be cleared automatically" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SETUPEND" width="1" begin="4" end="4" resetval="0" description="This bit will be set when a control transaction ends before the DATAEND bit has been set. An interrupt will be generated and the FIFO flushed at this time. The bit is cleared by the user writing a 1 to the SERV_SETUPEND bit" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="DATAEND" width="1" begin="3" end="3" resetval="0" description="Set this bit 1. When setting TXPKTRDY for the last data packet 2. When clearing RXPKTRDY after unloading the last data packet 3. When setting TXPKTRDY for a zero length data packet It is cleared automatically" range="" rwaccess="W">
				
				
				
				
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is transmitted.  This bit should be cleared by the user" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. This bit is cleared by setting the SERV_RXPKTRDY bit" range="" rwaccess="R">
				
			</bitfield>
		</register>
		<register id="EPCSR_4_HOST_CSR0" acronym="EPCSR_4_HOST_CSR0" offset="1346" width="16" description="Control Status register for Endpoint 0  in Host mode.">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the EP0 data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Write 1 to this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when Endpoint 0 is halted following the receipt of NAK responses for longer than the time set by the NAKLIMIT0 register. This bit should be cleared to allow the endpoint to continue" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="STATUSPKT" width="1" begin="6" end="6" resetval="0" description="Set this bit at the same time as the TXPKTRDY or REQPKT bit is set, to perform a status stage transaction. Setting this bit ensures that the data toggle is set to 1 so that a DATA1 packet is used for the Status Stage transaction" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Set this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="4" end="4" resetval="0" description="This bit will be set when three attempts have been made to perform a transaction with no response from the peripheral. The user should clear this bit. An interrupt is generated when this bit is set" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SETUPPKT" width="1" begin="3" end="3" resetval="0" description="Set this bit, at the same time as the TXPKTRDY bit is set, to send a SETUP token instead of an OUT token for the transaction" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is received. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. Clear this bit by setting the SERV_RXPKTRDY bit" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_4_PERI_TXCSR" acronym="EPCSR_4_PERI_TXCSR" offset="1346" width="16" description="Control Status register for peripheral Tx endpoint.">
			<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Tx endpoint for Isochronous transfers, and clear it to enable the Tx endpoint for Bulk or Interrupt transfers " range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="MODE" width="1" begin="13" end="13" resetval="1" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit only has any effect where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="3" begin="9" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set automatically when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to issue a STALL handshake to an IN token. Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FlushFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="UNDERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set automatically if an IN token is received when TXPKTRDY is not set. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="This bit is set when there is at least 1 packet in the Tx FIFO. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_4_HOST_TXCSR" acronym="EPCSR_4_HOST_TXCSR" offset="1346" width="16" description="Control Status register for host Tx endpoint.">
			<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP) is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="14" end="14" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MODE" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit has any effect only where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="9" end="9" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="8" end="8" resetval="0" description="When read, this bit indicates the current state of the Tx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when the Tx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAKLIMIT by the TXINTERVAL register. It should be cleared to allow the endpoint to continue Note: Valid only for Bulk endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set when a STALL handshake is received. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SETUPPKT" width="1" begin="4" end="4" resetval="0" description="Set this bit at the sametime as TXPKTRDY is set, to send a SETUP token instead of an OUT token for the transaction.  Note: Setting this bit also clears DATATOG bit" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to send a packet and no handshake packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Valid only when the endpoint is operating in Bulk or Interrupt mode" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="The USB controller sets this bit when there is at least 1 packet in the Tx FIFO" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_4_RXMAXP" acronym="EPCSR_4_RXMAXP" offset="1348" width="16" description="Maximum packet size for peripheral/host Rx endpoint">
			<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="Defines the maximum amount of data that can be transferred through the selected Rx endpoint in a single frame / microframe (High-speed transfers) The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_4_PERI_RXCSR" acronym="EPCSR_4_PERI_RXCSR" offset="1350" width="16" description="Control Status register for peripheral Rx endpoint.">
			<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Rx endpoint for Isochronous transfers, and clear it to enable the Rx endpoint for Bulk/Interrupt transfers" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="3" begin="10" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="SENTSTALL" width="1" begin="6" end="6" resetval="0" description="This bit is set when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to issue a STALL handshake Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
				
				
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="DATAERROR" width="1" begin="3" end="3" resetval="0" description="This bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error. It is cleared when RXPKTRDY is cleared Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero." range="" rwaccess="R">
				
				
			</bitfield>
			<bitfield id="OVERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set if an OUT packet cannot be loaded into the Rx FIFO. The user should clear this bit Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_4_HOST_RXCSR" acronym="EPCSR_4_HOST_RXCSR" offset="1350" width="16" description="Control Status register for host Rx endpoint.">
			<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="AUTOREQ" width="1" begin="14" end="14" resetval="0" description="When this bit is set, the REQPKT bit will be automatically set when the RXPKTRDY bit is cleared" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the Rx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="_RESV" width="1" begin="8" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
				
			</bitfield>
			<bitfield id="RXSTALL" width="1" begin="6" end="6" resetval="0" description="When a STALL handshake is received, this bit is set and an interrupt is generated. The user should clear this bit" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
				
			</bitfield>
			<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
				
				
			</bitfield>
			<bitfield id="DATAERR_NAKTIMEOUT" width="1" begin="3" end="3" resetval="0" description="When operating in ISO mode, this bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error and cleared when RXPKTRDY is cleared In Bulk mode, this bit will be set when the Rx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAK Limit by the RXINTERVAL register. The user should clear this bit to allow the endpoint to continue" range="" rwaccess="R">
				
				
			</bitfield>
			<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to receive a packet and no data packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Note: This bit is only valid when the Tx endpoint is operating in Bulk or Interrupt mode. In ISO mode, it always returns zero" range="" rwaccess="RW">
				
				
			</bitfield>
			<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_4_COUNT0" acronym="EPCSR_4_COUNT0" offset="1352" width="16" description="Number of received bytes in Endpoint 0 FIFO.">
			<bitfield id="_RESV" width="9" begin="15" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EP0RXCOUNT" width="7" begin="6" end="0" resetval="0" description="Indicates the number of received data bytes in the Endpoint 0 FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_CSR0 or HOST_CSR0 is set" range="" rwaccess="R">
				
				
			</bitfield>
		</register>
		<register id="EPCSR_4_RXCOUNT" acronym="EPCSR_4_RXCOUNT" offset="1352" width="16" description="Number of bytes in host Rx endpoint FIFO.">
			<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EPRXCOUNT" width="13" begin="12" end="0" resetval="0" description="Holds the number of received data bytes in the packet in the Rx FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_RXCSR or HOST_RXCSR is set" range="" rwaccess="R">
				
				
			</bitfield>
		</register>
		<register id="EPCSR_4_HOST_TYPE0" acronym="EPCSR_4_HOST_TYPE0" offset="1354" width="8" description="Defines the speed of Endpoint 0">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="_RESV" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
		</register>
		<register id="EPCSR_4_HOST_TXTYPE" acronym="EPCSR_4_HOST_TXTYPE" offset="1354" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Tx endpoint.">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="Set this to select the required protocol for the Tx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="TENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Tx endpoint descriptor returned to the USB controller during device enumeration" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_4_HOST_NAKLIMIT0" acronym="EPCSR_4_HOST_NAKLIMIT0" offset="1355" width="8" description="Sets the NAK response timeout on Endpoint 0.">
			<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="EP0NAKLIMIT" width="5" begin="4" end="0" resetval="0" description="Sets the number of frames/microframes (High-Speed transfers) after which Endpoint 0 should timeout on receiving a stream of NAK responses The number of frames/microframes selected is 2 ( m -1) (where m is the value set in the register, valid values 2 - 16). If the host receives NAK responses from the target for more frames than the number represented by the Limit set in this register, the endpoint will be halted Note: A value of 0 or 1 disables the NAK timeout function" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_4_HOST_TXINTERVAL" acronym="EPCSR_4_HOST_TXINTERVAL" offset="1355" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Tx endpoint.">
			<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Tx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a TxInterval register for each configured Tx endpoint (except Endpoint 0). In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function --------------------------------------
-----------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_4_HOST_RXTYPE" acronym="EPCSR_4_HOST_RXTYPE" offset="1356" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Rx endpoint.">
			<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="The CPU should set this to select the required protocol for the Rx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
				
				
				
				
				
			</bitfield>
			<bitfield id="RENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Rx endpoint descriptor returned to the USB Controller during device enumeration" range="" rwaccess="RW">
				
			</bitfield>
		</register>
		<register id="EPCSR_4_HOST_RXINTERVAL" acronym="EPCSR_4_HOST_RXINTERVAL" offset="1357" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Rx endpoint.">
			<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Rx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a RxInterval register for each configured Rx endpoint (except Endpoint 0).In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function ---------------------------------------
----------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_4_CONFIGDATA" acronym="EPCSR_4_CONFIGDATA" offset="1359" width="8" description="Returns details of core configuration">
			<bitfield id="MPRXE" width="1" begin="7" end="7" resetval="0" description="When set to '1', automatic amalgamation of bulk packets is selected" range="" rwaccess="N">
				
			</bitfield>
			<bitfield id="MPTXE" width="1" begin="6" end="6" resetval="0" description="When set to '1', automatic splitting of bulk packets is selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="BIGENDIAN" width="1" begin="5" end="5" resetval="0" description="When set to '1' indicates Big Endian ordering is selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="HBRXE" width="1" begin="4" end="4" resetval="0" description="When set to '1' indicates High-bandwidth Rx ISO Endpoint Support selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="HBTXE" width="1" begin="3" end="3" resetval="0" description="When set to '1' indicates High-bandwidth Tx ISO Endpoint Support selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="DYNFIFO" width="1" begin="2" end="2" resetval="0" description="When set to '1' indicates Dynamic FIFO Sizing option selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="SOFTCONE" width="1" begin="1" end="1" resetval="0" description="When set to '1' indicates Soft Connect/Disconnect option selected" range="" rwaccess="R">
				
			</bitfield>
			<bitfield id="UTMIDATAWIDTH" width="1" begin="0" end="0" resetval="0" description="Indicates selected UTMI data width 0: 8 bits 1: 16 bits" range="" rwaccess="R">
				
				
				
			</bitfield>
		</register>
		<register id="EPCSR_4_FIFOSIZE" acronym="EPCSR_4_FIFOSIZE" offset="1359" width="8" description="Returns the configured size of the selected Rx FIFO and Tx FIFOs">
			<bitfield id="RXFIFOSZ" width="4" begin="7" end="4" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Rx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed When the Tx and Rx endpoints share the same FIFO, the Rx FIFO size will be encoded as 15 Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
				
				
				
				
				
				
			</bitfield>
			<bitfield id="TXFIFOSZ" width="4" begin="3" end="0" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Tx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
				
				
				
				
				
			</bitfield>
		</register>

	<register id="REVR" acronym="REVR" offset="0x0000" width="32" description="Revision Register ">
		<bitfield id="_RESV" width="2" begin="31" end="30" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="MODID" width="14" begin="29" end="16" resetval="0x14" description="Module ID field" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="REVRTL" width="5" begin="15" end="11" resetval="0" description="RTL version" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="REVMAJ" width="3" begin="10" end="8" resetval="0x1" description="Major revision" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="REVMIN" width="8" begin="7" end="0" resetval="0" description="Minor revision." range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="CTRLR" acronym="CTRLR" offset="0x0004" width="32" description="Control  Register ">
		<bitfield id="_RESV" width="27" begin="31" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="RNDIS" width="1" begin="4" end="4" resetval="0" description="RNDIS mode enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="UINT" width="1" begin="3" end="3" resetval="0" description="USB non-PDR interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="_RESV" width="1" begin="2" end="2" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="CLKFACK" width="1" begin="1" end="1" resetval="0" description="Clock stop fast ack enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="RESET" width="1" begin="0" end="0" resetval="0" description="Soft reset Writing a 1 starts a module reset" range="" rwaccess="W">
			
			
		</bitfield>
	</register>
	<register id="STATR" acronym="STATR" offset="0x0008" width="32" description="Status Register">
		<bitfield id="_RESV" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="DRVVBUS" width="1" begin="0" end="0" resetval="0" description="Current DRVVBUS value" range="" rwaccess="R">
			
		</bitfield>
	</register>
	<register id="EMUR" acronym="EMUR" offset="0x000C" width="32" description="Emulation Register to configure CBA3.0 interface">
		<bitfield id="_RESV" width="29" begin="31" end="3" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="RTSEL" width="1" begin="2" end="2" resetval="0" description="Real-time Enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="SOFT" width="1" begin="1" end="1" resetval="0x1" description="Soft Stop Enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="FREERUN" width="1" begin="0" end="0" resetval="0x1" description="Free Run Enable" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="RNDISR" acronym="RNDISR" offset="0x0010" width="32" description="RNDIS Register to enable RNDIS mode for each endpoint. Using the global RNDIS enable (RNDIS bit of CTRLR) overrides thie register and enable RNDIS mode for all endpoints">
		<bitfield id="_RESV" width="12" begin="31" end="20" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="RX4EN" width="1" begin="19" end="19" resetval="0" description="Rx Endpoint 4 RNDIS mode enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="RX3EN" width="1" begin="18" end="18" resetval="0" description="Rx Endpoint 3 RNDIS mode enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="RX2EN" width="1" begin="17" end="17" resetval="0" description="Rx Endpoint 2 RNDIS mode enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="RX1EN" width="1" begin="16" end="16" resetval="0" description="Rx Endpoint 1 RNDIS mode enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="_RESV" width="12" begin="15" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="TX4EN" width="1" begin="3" end="3" resetval="0" description="TX Endpoint 4 RNDIS mode enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="TX3EN" width="1" begin="2" end="2" resetval="0" description="TX Endpoint 3 RNDIS mode enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="TX2EN" width="1" begin="1" end="1" resetval="0" description="TX Endpoint 2 RNDIS mode enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="TX1EN" width="1" begin="0" end="0" resetval="0" description="TX Endpoint 1 RNDIS mode enable" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="INTSRCR" acronym="INTSRCR" offset="0x0020" width="32" description="USB Interrupt Source Register">
		<bitfield id="_RESV" width="7" begin="31" end="25" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="USB" width="9" begin="24" end="16" resetval="0" description="USB interrupt sources Generated by the USB core (not the DMA)" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="RX" width="5" begin="12" end="8" resetval="0" description="RX endpoint interrupt sources Generated by the USB core (not the DMA)" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="TX" width="5" begin="4" end="0" resetval="0" description="TX endpoint interrupt sources Generated by the USB core (not the DMA)" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="INTSETR" acronym="INTSETR" offset="0x0024" width="32" description="USB Interrupt Source Set Register ">
		<bitfield id="_RESV" width="7" begin="31" end="25" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="USB" width="9" begin="24" end="16" resetval="0" description="Write a 1 to set equivalent USB interrupt source Allows the USB interrupt sources to be manually triggered" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="RX" width="5" begin="12" end="8" resetval="0" description="Write a 1 to set equivalent RX endpoint interrupt source Allows the USB interrupt sources to be manually triggered" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="TX" width="5" begin="4" end="0" resetval="0" description="Write a 1 to set equivalent TX endpoint interrupt source Allows the USB interrupt sources to be manually triggered" range="" rwaccess="W">
			
			
		</bitfield>
	</register>
	<register id="INTCLRR" acronym="INTCLRR" offset="0x0028" width="32" description="USB Interrupt Source Clear Register ">
		<bitfield id="_RESV" width="7" begin="31" end="25" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="USB" width="9" begin="24" end="16" resetval="0" description="Write a 1 to clear equivalent USB interrupt source Allows the CPU to acknowledge an interrupt source and turn it off" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="RX" width="5" begin="12" end="8" resetval="0" description="Write a 1 to clear equivalent RX endpoint interrupt source Allows the CPU to acknowledge an interrupt source and turn it off" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="TX" width="5" begin="4" end="0" resetval="0" description="Write a 1 to clear equivalent TX endpoint interrupt source Allows the CPU to acknowledge an interrupt source and turn it off" range="" rwaccess="W">
			
			
		</bitfield>
	</register>
	<register id="INTMSKR" acronym="INTMSKR" offset="0x002C" width="32" description="USB Interrupt Mask Register ">
		<bitfield id="_RESV" width="7" begin="31" end="25" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="USB" width="9" begin="24" end="16" resetval="0" description="USB interrupt source masks Contains the masks of the interrupt sources generated by the USB core (not the DMA). These masks are used to enable or disable interrupt sources appearing as masked interrupts" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="RX" width="5" begin="12" end="8" resetval="0" description="RX endpoint interrupt source masks Contains the masks of the interrupt sources generated by the USB core (not the DMA). These masks are used to enable or disable interrupt sources appearing as masked interrupts" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="TX" width="5" begin="4" end="0" resetval="0" description="TX endpoint interrupt source masks Contains the masks of the interrupt sources generated by the USB core (not the DMA). These masks are used to enable or disable interrupt sources appearing as masked interrupts" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="INTMSKSETR" acronym="INTMSKSETR" offset="0x0030" width="32" description="USB Interrupt Mask Set Register ">
		<bitfield id="_RESV" width="7" begin="31" end="25" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="USB" width="9" begin="24" end="16" resetval="0" description="Write a 1 to set equivalent USB interrupt mask Allows the USB interrupt masks to be individually enabled" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="RX" width="5" begin="12" end="8" resetval="0" description="Write a 1 to set equivalent RX endpoint interrupt mask Allows the USB interrupt masks to be individually enabled" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="TX" width="5" begin="4" end="0" resetval="0" description="Write a 1 to set equivalent TX endpoint interrupt mask Allows the USB interrupt masks to be individually enabled" range="" rwaccess="W">
			
			
		</bitfield>
	</register>
	<register id="INTMSKCLRR" acronym="INTMSKCLRR" offset="0x0034" width="32" description="USB Interrupt Mask Clear Register ">
		<bitfield id="_RESV" width="7" begin="31" end="25" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="USB" width="9" begin="24" end="16" resetval="0" description="Write a 1 to clear equivalent USB interrupt mask Allows the USB interrupt masks to be individually disabled" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="RX" width="5" begin="12" end="8" resetval="0" description="Write a 1 to clear equivalent RX endpoint interrupt mask Allows the USB interrupt masks to be individually disabled" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="TX" width="5" begin="4" end="0" resetval="0" description="Write a 1 to clear equivalent TX endpoint interrupt mask Allows the USB interrupt masks to be individually disabled" range="" rwaccess="W">
			
			
		</bitfield>
	</register>
	<register id="INTMASKEDR" acronym="INTMASKEDR" offset="0x0038" width="32" description="USB Interrupt Source Masked Register ">
		<bitfield id="_RESV" width="7" begin="31" end="25" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="USB" width="9" begin="24" end="16" resetval="0" description="USB interrupt sources masked Contains the status of the interrupt sources generated by the USB core masked by the USB Interrupt Mask Register values" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="RX" width="5" begin="12" end="8" resetval="0" description="RX endpoint interrupt sources masked Contains the status of the interrupt sources generated by the USB core masked by the USB Interrupt Mask Register values" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="TX" width="5" begin="4" end="0" resetval="0" description="TX endpoint interrupt sources masked Contains the status of the interrupt sources generated by the USB core masked by the USB Interrupt Mask Register values" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="EOIR" acronym="EOIR" offset="0x003C" width="32" description="USB End of Interrupt Register ">
		<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="VECTOR" width="8" begin="7" end="0" resetval="0" description="EOI Vector Allows the CPU to acknowledge completion of an interrupt by writing to the EOI. An eoi_write signal will be generated, the EOI vector will be updated to the written value, and another interrupt will be triggered if interrupt sources remain" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="INTVECTR" acronym="INTVECTR" offset="0x0040" width="32" description="USB Interrupt Vector Register ">
		<bitfield id="VECTOR" width="32" begin="31" end="0" resetval="0" description="Input Interrupt Vector Recycles the Interrupt Vector input to be read by the CPU" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="TCPPICR" acronym="TCPPICR" offset="0x0080" width="32" description="Tx CPPI Control Register ">
		<bitfield id="_RESV" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="TCPPI_ENABLE" width="1" begin="0" end="0" resetval="0" description="Tx CPPI Enable Controls if the Tx CPPI DMA controller is enabled 0: Tx CPPI DMA is disabled 1: Tx CPPI DMA is enabled" range="" rwaccess="RW">
			
			
			
			
		</bitfield>
	</register>
	<register id="TCPPITDR" acronym="TCPPITDR" offset="0x0084" width="32" description="Tx CPPI Teardown Register ">
		<bitfield id="READY" width="1" begin="31" end="31" resetval="1" description="Indicates if the Teardown register can be written" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="_RESV" width="29" begin="30" end="2" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="CHANNEL" width="2" begin="1" end="0" resetval="0" description="Teardown Channel Indicates the channel that is to be torn down" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="TCPPIEOIR" acronym="TCPPIEOIR" offset="0x0088" width="32" description="Tx CPPI DMA Controller End of Interrupt Register">
		<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="VECTOR" width="8" begin="7" end="0" resetval="0" description="End of Interrupt Vector This is an application specific register which is essentially a general purpose output from the LCSAR.  One cycle after this register is written, the eoi_vector[7:0] value will appear on the eoi_vector output port from the LCSAR and the eoi_write output port will be assserted for 1 clock cycle. This register is used to convert level sensitive interrupts to pulsed, non-redundant interrupts" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="TCPPIIVECTR" acronym="TCPPIIVECTR" offset="0x008C" width="32" description="Tx CPPI DMA Controller Interrupt Vector Register">
		<bitfield id="VECTOR" width="32" begin="31" end="0" resetval="0" description="Interrupt Vector This is an application specific register which is essentially a general purpose input to the LCSAR.  The intr_vector field in this register is a registered version of the intr_vector primary input to the LCSAR.  This register is used for interrupt handling" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="TCPPIMSKSR" acronym="TCPPIMSKSR" offset="0x0090" width="32" description="Tx CPPI Masked Status Register">
		<bitfield id="_RESV" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="COMP_PENDING" width="4" begin="3" end="0" resetval="0" description="Masked High Priority Transmit Completion Pending Indicators for channels 3 to 0  Raw Tx high priority completion indicators bitwise anded with Tx high priority completion mask bits" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="TCPPIRAWSR" acronym="TCPPIRAWSR" offset="0x0094" width="32" description="Tx CPPI Raw Status Register ">
		<bitfield id="_RESV" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="COMP_PENDING" width="4" begin="3" end="0" resetval="0" description="Raw High Priority Transmit Completion Pending Indicators for channels 3 to 0  Active high flags which indicate that a packet has completed transmission on the high priority queue" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="TCPPIIENSETR" acronym="TCPPIIENSETR" offset="0x0098" width="32" description="Tx CPPI Interrupt Enable Set Register ">
		<bitfield id="_RESV" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="COMP_PENDING_INTR_EN" width="4" begin="3" end="0" resetval="0" description="Tx CPPI High Priority Interrupt Enables These are active high interrupt enables corresponding to the Tx CPPI High Priority Completion Pending status bits" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="TCPPIIENCLRR" acronym="TCPPIIENCLRR" offset="0x009C" width="32" description="Tx CPPI Interrupt Enable Clear Register ">
		<bitfield id="_RESV" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="COMP_PENDING_INTR_EN" width="4" begin="3" end="0" resetval="0" description="Writing a 1 to any of the bits in the Tx CPPI Interrupt Enable Clear Register will result in clearing of the corresponding bit in the Tx CPPI High Priority Interrupt Enable Register" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="RCPPICR" acronym="RCPPICR" offset="0x00C0" width="32" description="Rx CPPI Control Register ">
		<bitfield id="_RESV" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="RCPPI_ENABLE" width="1" begin="0" end="0" resetval="0" description="Rx CPPI Enable Controls if the Rx CPPI DMA controller is enabled 0: Rx CPPI DMA is disabled 1: Rx CPPI DMA is enabled" range="" rwaccess="RW">
			
			
			
			
		</bitfield>
	</register>
	<register id="RCPPIMSKSR" acronym="RCPPIMSKSR" offset="0x00D0" width="32" description="Rx CPPI Masked Status Register">
		<bitfield id="_RESV" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="MASKED_COMP_PENDING" width="4" begin="3" end="0" resetval="0" description="Masked Receive Completion Pending Indicators for channels 3 to 0 Raw Rx completion indicators bitwise ANDed with Rx completion mask bits" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="RCPPIRAWSR" acronym="RCPPIRAWSR" offset="0x00D4" width="32" description="Rx CPPI Raw Status Register ">
		<bitfield id="_RESV" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="COMP_PENDING" width="4" begin="3" end="0" resetval="0" description="Raw Receive Completion Pending Indicators for channels 3 to 0 Active high flags which indicate that a packet has completed reception" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="RCPPIENSETR" acronym="RCPPIENSETR" offset="0x00D8" width="32" description="Rx CPPI Interrupt Enable Set Register ">
		<bitfield id="_RESV" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="COMP_PENDING_INTR_EN" width="4" begin="3" end="0" resetval="0" description="Rx CPPI Interrupt Enables These are active high interrupt enables corresponding to the Rx CPPI Completion Pending status bits Writing a 1 to any of the bits in the Rx CPPI Interrupt Enable Set Register will result in setting of the corresponding bit in the Rx CPPI Interrupt Enable Register" range="" rwaccess="RW">
			
			
			
		</bitfield>
	</register>
	<register id="RCPPIIENCLRR" acronym="RCPPIIENCLRR" offset="0x00DC" width="32" description="Rx CPPI Interrupt Enable Clear Register ">
		<bitfield id="_RESV" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="COMP_PENDING_INTR_EN" width="4" begin="3" end="0" resetval="0" description="Rx CPPI Interrupt Enables These are active high interrupt enables corresponding to the Rx CPPI Completion Pending status bits Writing a 1 to any of the bits in the Rx CPPI Interrupt Enable Clear Register will result in clearing of the corresponding bit in the Rx CPPI Interrupt Enable Register" range="" rwaccess="RW">
			
			
			
		</bitfield>
	</register>
	<register id="RBUFCNT0" acronym="RBUFCNT0" offset="0x00E0" width="32" description="Rx Buffer Count 0 Register">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="BUFCNT" width="16" begin="15" end="0" resetval="0" description="Rx CPPI Buffer Count The current count of CPPI buffers in Rx channel 0 queue. Writes add to current value (not overwrite)" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="RBUFCNT1" acronym="RBUFCNT1" offset="0x00E4" width="32" description="Rx Buffer Count 1 Register">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="BUFCNT" width="16" begin="15" end="0" resetval="0" description="Rx CPPI Buffer Count The current count of CPPI buffers in Rx channel 1 queue. Writes add to current value (not overwrite)" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="RBUFCNT2" acronym="RBUFCNT2" offset="0x00E8" width="32" description="Rx Buffer Count 2 Register">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="BUFCNT" width="16" begin="15" end="0" resetval="0" description="Rx CPPI Buffer Count The current count of CPPI buffers in Rx channel 2 queue. Writes add to current value (not overwrite)" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="RBUFCNT3" acronym="RBUFCNT3" offset="0x00EC" width="32" description="Rx Buffer Count 3 Register">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="BUFCNT" width="16" begin="15" end="0" resetval="0" description="Rx CPPI Buffer Count 0 The current count of CPPI buffers in Rx channel 3 queue. Writes add to current value (not overwrite)" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>

	<register id="FADDR" acronym="FADDR" offset="0x0400" width="8" description="Function address register">
		<bitfield id="_RESV" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="FUNCADDR" width="7" begin="6" end="0" resetval="0" description="7-bit address of the peripheral part of the transaction  When used in Peripheral mode (DevCtl.D2=0), this register should be written with the address received through a SET_ADDRESS command, which will then be used for decoding the function address in subsequent token packets  When used in Host mode (DevCtl.D2=1), this register should be set to the value sent in a SET_ADDRESS command during device enumeration as the address for the peripheral device" range="" rwaccess="RW">
			
			
			
			
			
		</bitfield>
	</register>
	<register id="POWER" acronym="POWER" offset="0x0401" width="8" description="Power management register">
		<bitfield id="ISOUPDATE" width="1" begin="7" end="7" resetval="0" description="When set, the USB controller will wait for an SOF token from the time TxPktRdy is set before sending the packet. If an IN token is received before an SOF token, then a zero length data packet will be sent Note: Only valid in Peripheral Mode. Also, this bit only affects endpoints performing Isochronous transfers" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="SOFTCONN" width="1" begin="6" end="6" resetval="0" description="If Soft Connect/Disconnect feature is enabled, then the USB D+/D- lines are enabled when this bit is set and tri-stated when this bit is cleared Note: Only valid in Peripheral Mode" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="HSEN" width="1" begin="5" end="5" resetval="0" description="When set, the USB controller will negotiate for High-speed mode when the device is reset by the hub. If not set, the device will only operate in Full-speed mode" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="HSMODE" width="1" begin="4" end="4" resetval="0" description="This bit is set when the USB contoller has successfully negotiated for High-speed mode" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="RESET" width="1" begin="3" end="3" resetval="0" description="This bit is set when Reset signaling is present on the bus Note: This bit is Read/Write in Host Mode but Read-Only in Peripheral Mode" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="RESUME" width="1" begin="2" end="2" resetval="0" description="Set to generate Resume signaling when the controller is in Suspend mode. The bit should be cleared after 10 ms (a maximum of 15 ms) to end Resume signaling. In Host mode, this bit is also automatically set when Resume signaling from the target is detected while the USB controller is suspended" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="SUSPENDM" width="1" begin="1" end="1" resetval="0" description="In Host mode, this bit should be set to enter Suspend mode.  In Peripheral mode, this bit is set on entry into Suspend mode. It is cleared when the interrupt register is read, or the RESUME bit is set" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="ENSUSPM" width="1" begin="0" end="0" resetval="0" description="Set to enable the SUSPENDM output" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="INTRTX" acronym="INTRTX" offset="0x0402" width="16" description="Interrupt register for Endpoint 0 plus Tx Endpoints 1 to 4">
		<bitfield id="_RESV" width="11" begin="15" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="EP4TX" width="1" begin="4" end="4" resetval="0" description="Tx Endpoint 4 interrupt active" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="EP3TX" width="1" begin="3" end="3" resetval="0" description="Tx Endpoint 3 interrupt active" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="EP2TX" width="1" begin="2" end="2" resetval="0" description="Tx Endpoint 2 interrupt active" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="EP1TX" width="1" begin="1" end="1" resetval="0" description="Tx Endpoint 1 interrupt active" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="EP0" width="1" begin="0" end="0" resetval="0" description="Endpoint 0 interrupt active" range="" rwaccess="R">
			
		</bitfield>
	</register>
	<register id="INTRRX" acronym="INTRRX" offset="0x0404" width="16" description="Interrupt register for Rx Endpoints 1 to 4">
		<bitfield id="_RESV" width="11" begin="15" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="EP4RX" width="1" begin="4" end="4" resetval="0" description="Rx Endpoint 4 interrupt active" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="EP3RX" width="1" begin="3" end="3" resetval="0" description="Rx Endpoint 3 interrupt active" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="EP2RX" width="1" begin="2" end="2" resetval="0" description="Rx Endpoint 2 interrupt active" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="EP1RX" width="1" begin="1" end="1" resetval="0" description="Rx Endpoint 1 interrupt active" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="_RESV" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
	</register>
	<register id="INTRTXE" acronym="INTRTXE" offset="0x0406" width="16" description="Interrupt enable register for INTRTX">
		<bitfield id="_RESV" width="11" begin="15" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="EP4TX" width="1" begin="4" end="4" resetval="1" description="Tx Endpoint 4 interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="EP3TX" width="1" begin="3" end="3" resetval="1" description="Tx Endpoint 3 interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="EP2TX" width="1" begin="2" end="2" resetval="1" description="Tx Endpoint 2 interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="EP1TX" width="1" begin="1" end="1" resetval="1" description="Tx Endpoint 1 interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="EP0" width="1" begin="0" end="0" resetval="1" description="Endpoint 0 interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="INTRRXE" acronym="INTRRXE" offset="0x0408" width="16" description="Interrupt enable register for INTRRX">
		<bitfield id="_RESV" width="11" begin="15" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="EP4RX" width="1" begin="4" end="4" resetval="1" description="Rx Endpoint 4 interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="EP3RX" width="1" begin="3" end="3" resetval="1" description="Rx Endpoint 3 interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="EP2RX" width="1" begin="2" end="2" resetval="1" description="Rx Endpoint 2 interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="EP1RX" width="1" begin="1" end="1" resetval="1" description="Rx Endpoint 1 interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="_RESV" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
	</register>
	<register id="INTRUSB" acronym="INTRUSB" offset="0x040A" width="8" description="Interrupt register for common USB interrupts">
		<bitfield id="VBUSERR" width="1" begin="7" end="7" resetval="0" description="Set when VBus drops below the VBus Valid threshold during a session Only valid when USB controller is 'A' device All active interrupts will be cleared when this register is read" range="" rwaccess="R">
			
			
			
		</bitfield>
		<bitfield id="SESSREQ" width="1" begin="6" end="6" resetval="0" description="Set when Session Request signaling has been detected Only valid when USB controller is 'A' device" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="DISCON" width="1" begin="5" end="5" resetval="0" description="Set in Host mode when a device disconnect is detected Set in Peripheral mode when a session ends" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="CONN" width="1" begin="4" end="4" resetval="0" description="Set when a device connection is detected  Only valid in Host mode" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="SOF" width="1" begin="3" end="3" resetval="0" description="Set when a new frame starts" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="RESET_BABBLE" width="1" begin="2" end="2" resetval="0" description="Set in Peripheral mode when Reset signaling is detected on the bus Set in Host mode when babble is detected" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="RESUME" width="1" begin="1" end="1" resetval="0" description="Set when Resume signaling is detected on the bus while the USB controller is in Suspend mode" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="SUSPEND" width="1" begin="0" end="0" resetval="0" description="Set when Suspend signaling is detected on the bus Only valid in Peripheral mode" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="INTRUSBE" acronym="INTRUSBE" offset="0x040B" width="8" description="Interrupt enable register for INTRUSB">
		<bitfield id="VBUSERR" width="1" begin="7" end="7" resetval="0" description="Vbus error interrupt  enable  " range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="SESSREQ" width="1" begin="6" end="6" resetval="0" description="Session request interrupt enable " range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="DISCON" width="1" begin="5" end="5" resetval="0" description="Disconnect interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="CONN" width="1" begin="4" end="4" resetval="0" description="Connect interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="SOF" width="1" begin="3" end="3" resetval="0" description="Start of frame interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="RESET_BABBLE" width="1" begin="2" end="2" resetval="0" description="Reset interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="RESUME" width="1" begin="1" end="1" resetval="0" description="Resume interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="SUSPEND" width="1" begin="0" end="0" resetval="0" description="Suspend interrupt enable" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="FRAME" acronym="FRAME" offset="0x040C" width="16" description="Frame number register">
		<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="FRAMENUMBER" width="11" begin="10" end="0" resetval="0" description="Last received frame number " range="" rwaccess="R">
			
		</bitfield>
	</register>
	<register id="INDEX" acronym="INDEX" offset="0x040E" width="8" description="Index register for selecting the endpoint status and control registers">
		<bitfield id="_RESV" width="4" begin="7" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="EPSEL" width="4" begin="3" end="0" resetval="0" description="Each Tx endpoint and each Rx endpoint have their own set of control/status registers. EPSEL determines which endpoint control/status registers are accessed Before accessing an endpoint's control/status registers, the endpoint number should be written to the Index register to ensure that the correct control/status registers appear in the memory map" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="TESTMODE" acronym="TESTMODE" offset="0x040F" width="8" description="Register to enable the USB 2.0 test modes">
		<bitfield id="FORCE_HOST" width="1" begin="7" end="7" resetval="0" description="Set this bit to forcibly put the USB controller into Host mode when SESSION bit is set, regardless of whether it is connected to any peripheral. The controller remains in Host mode until the Session bit is cleared, even if a device is disconnected. And if the FORCE_HOST but remains set, it will re-enter Host mode next time the SESSION bit is set.  The operating speed is determined using the FORCE_HS and FORCE_FS bits" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="FIFO_ACCESS" width="1" begin="6" end="6" resetval="0" description="Set this bit to transfer the packet in EP0 Tx FIFO to EP0 Rx FIFO. It is cleared automatically" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="FORCE_FS" width="1" begin="5" end="5" resetval="0" description="Set this bit to force the USB controller into Full-speed mode when it receives a USB reset" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="FORCE_HS" width="1" begin="4" end="4" resetval="0" description="Set this bit to force the USB controller into High-speed mode when it receives a USB reset" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="TEST_PACKET" width="1" begin="3" end="3" resetval="0" description="Set this bit to enter the Test_Packet test mode. In this mode, the USB controller repetitively transmits on the bus a 53-byte test packet, the form of which is defined in the Universal Serial Bus Specification Revision 2.0 Note: The test packet has a fixed format and must be loaded into the Endpoint 0 FIFO before the test mode is entered" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="TEST_K" width="1" begin="2" end="2" resetval="0" description="Set this bit to enter the Test_K test mode. In this mode, the USB controller transmits a continuous K on the bus" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="TEST_J" width="1" begin="1" end="1" resetval="0" description="Set this bit to enter the Test_J test mode. In this mode, the USB controller transmits a continuous J on the bus" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="TEST_SE0_NAK" width="1" begin="0" end="0" resetval="0" description="Set this bit to enter the Test_SE0_NAK test mode. In this mode, the USB controller remains in High-speed mode but responds to any valid IN token with a NAK" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="TXMAXP" acronym="TXMAXP" offset="0x0410" width="16" description="Maximum packet size for peripheral/host Tx endpoint (Index register set to select Endpoints 1 - 4 only)">
		<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="The maximum payload transmitted in a single transaction The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
			
			
			
		</bitfield>
	</register>
	<register id="PERI_CSR0" acronym="PERI_CSR0" offset="0x0412" width="16" description="Control Status register for Endpoint 0  in Peripheral mode. (Index register set to select Endpoint 0)">
		<bitfield id="_RESV" width="7" begin="15" end="9" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Set this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="SERV_SETUPEND" width="1" begin="7" end="7" resetval="0" description="Set this bit to clear the SETUPEND bit. It is cleared automatically" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="SERV_RXPKTRDY" width="1" begin="6" end="6" resetval="0" description="Set this bit to clear the RXPKTRDY bit. It is cleared automatically" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Set this bit to terminate the current transaction. The STALL handshake will be transmitted and then this bit will be cleared automatically" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="SETUPEND" width="1" begin="4" end="4" resetval="0" description="This bit will be set when a control transaction ends before the DATAEND bit has been set. An interrupt will be generated and the FIFO flushed at this time. The bit is cleared by the user writing a 1 to the SERV_SETUPEND bit" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="DATAEND" width="1" begin="3" end="3" resetval="0" description="Set this bit 1. When setting TXPKTRDY for the last data packet 2. When clearing RXPKTRDY after unloading the last data packet 3. When setting TXPKTRDY for a zero length data packet It is cleared automatically" range="" rwaccess="W">
			
			
			
			
			
		</bitfield>
		<bitfield id="SENTSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is transmitted.  This bit should be cleared by the user" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. This bit is cleared by setting the SERV_RXPKTRDY bit" range="" rwaccess="R">
			
		</bitfield>
	</register>
	<register id="HOST_CSR0" acronym="HOST_CSR0" offset="0x0412" width="16" description="Control Status register for Endpoint 0  in Host mode. (Index register set to select Endpoint 0)">
		<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the EP0 data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="FLUSHFIFO" width="1" begin="8" end="8" resetval="0" description="Write 1 to this bit to flush the next packet to be transmitted/read from the Endpoint 0 FIFO. The FIFO pointer is reset and the TXPKTRDY/RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless TXPKTRDY/RXPKTRDY is set" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when Endpoint 0 is halted following the receipt of NAK responses for longer than the time set by the NAKLIMIT0 register. This bit should be cleared to allow the endpoint to continue" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="STATUSPKT" width="1" begin="6" end="6" resetval="0" description="Set this bit at the same time as the TXPKTRDY or REQPKT bit is set, to perform a status stage transaction. Setting this bit ensures that the data toggle is set to 1 so that a DATA1 packet is used for the Status Stage transaction" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Set this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="ERROR" width="1" begin="4" end="4" resetval="0" description="This bit will be set when three attempts have been made to perform a transaction with no response from the peripheral. The user should clear this bit. An interrupt is generated when this bit is set" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="SETUPPKT" width="1" begin="3" end="3" resetval="0" description="Set this bit, at the same time as the TXPKTRDY bit is set, to send a SETUP token instead of an OUT token for the transaction" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="RXSTALL" width="1" begin="2" end="2" resetval="0" description="This bit is set when a STALL handshake is received. The user should clear this bit" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="TXPKTRDY" width="1" begin="1" end="1" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when the data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. An interrupt is generated when this bit is set. Clear this bit by setting the SERV_RXPKTRDY bit" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="PERI_TXCSR" acronym="PERI_TXCSR" offset="0x0412" width="16" description="Control Status register for peripheral Tx endpoint. (Index register set to select Endpoints 1 - 4)">
		<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Tx endpoint for Isochronous transfers, and clear it to enable the Tx endpoint for Bulk or Interrupt transfers " range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="MODE" width="1" begin="13" end="13" resetval="1" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit only has any effect where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="9" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="SENTSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set automatically when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="SENDSTALL" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to issue a STALL handshake to an IN token. Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FlushFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="UNDERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set automatically if an IN token is received when TXPKTRDY is not set. The user should clear this bit" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="This bit is set when there is at least 1 packet in the Tx FIFO. The user should clear this bit" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="HOST_TXCSR" acronym="HOST_TXCSR" offset="0x0412" width="16" description="Control Status register for host Tx endpoint. (Index register set to select Endpoints 1 - 4)">
		<bitfield id="AUTOSET" width="1" begin="15" end="15" resetval="0" description="When this bit is set, TXPKTRDY will be automatically set when data of the maximum packet size (value in TXMAXP) is loaded into the Tx FIFO. If a packet of less than the maximum packet size is loaded, then TXPKTRDY will have to be set manually. TXPKTRDY will also be automatically set when the first of two packets in the Tx FIFO has been sent and the second packet is the maximum packet size" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="_RESV" width="1" begin="14" end="14" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="MODE" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the endpoint direction as Tx, and clear the bit to enable it as Rx Note: This bit has any effect only where the same endpoint FIFO is used for both Tx and Rx transactions" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="DMAEN" width="1" begin="12" end="12" resetval="0" description="Set this bit to enable the DMA request for the Tx endpoint" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="FRCDATATOG" width="1" begin="11" end="11" resetval="0" description="Set this bit to force the endpoint data toggle to switch and the data packet to be cleared from the FIFO, regardless of whether an ACK was received. This can be used by Interrupt Tx endpoints that are used to communicate rate feedback for Isochronous endpoints" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="DMAMODE" width="1" begin="10" end="10" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="DATATOGWREN" width="1" begin="9" end="9" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="DATATOG" width="1" begin="8" end="8" resetval="0" description="When read, this bit indicates the current state of the Tx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="NAK_TIMEOUT" width="1" begin="7" end="7" resetval="0" description="This bit will be set when the Tx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAKLIMIT by the TXINTERVAL register. It should be cleared to allow the endpoint to continue Note: Valid only for Bulk endpoints" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="CLRDATATOG" width="1" begin="6" end="6" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="RXSTALL" width="1" begin="5" end="5" resetval="0" description="This bit is set when a STALL handshake is received. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="SETUPPKT" width="1" begin="4" end="4" resetval="0" description="Set this bit at the sametime as TXPKTRDY is set, to send a SETUP token instead of an OUT token for the transaction.  Note: Setting this bit also clears DATATOG bit" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="FLUSHFIFO" width="1" begin="3" end="3" resetval="0" description="Write a 1 to this bit to flush the next packet to be transmitted from the endpoint Tx FIFO. The FIFO pointer is reset and the TXPKTRDY bit (below) is cleared. Note: FlushFIFO has no effect unless TXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to send a packet and no handshake packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Valid only when the endpoint is operating in Bulk or Interrupt mode" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="FIFONOTEMPTY" width="1" begin="1" end="1" resetval="0" description="The USB controller sets this bit when there is at least 1 packet in the Tx FIFO" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="TXPKTRDY" width="1" begin="0" end="0" resetval="0" description="Set this bit after loading a data packet into the FIFO. It is cleared automatically when a data packet has been transmitted. An interrupt is generated (if enabled) when the bit is cleared" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="RXMAXP" acronym="RXMAXP" offset="0x0414" width="16" description="Maximum packet size for peripheral/host Rx endpoint (Index register set to select Endpoints 1 - 4 only)">
		<bitfield id="_RESV" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="MAXPAYLOAD" width="11" begin="10" end="0" resetval="0" description="Defines the maximum amount of data that can be transferred through the selected Rx endpoint in a single frame / microframe (High-speed transfers) The value set can be up to 1024 bytes but is subject to the constraints placed by the USB Specification on packet sizes for Bulk, Interrupt and Isochronous transfers in Full-speed and High-speed operations The value written to this register should match the wMaxPacketSize field of the Standard Endpoint Descriptor for the associated endpoint. A mismatch could cause unexpected results" range="" rwaccess="RW">
			
			
			
		</bitfield>
	</register>
	<register id="PERI_RXCSR" acronym="PERI_RXCSR" offset="0x0416" width="16" description="Control Status register for peripheral Rx endpoint. (Index register set to select Endpoints 1 - 4)">
		<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="ISO" width="1" begin="14" end="14" resetval="0" description="Set this bit to enable the Rx endpoint for Isochronous transfers, and clear it to enable the Rx endpoint for Bulk/Interrupt transfers" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="_RESV" width="3" begin="10" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="SENTSTALL" width="1" begin="6" end="6" resetval="0" description="This bit is set when a STALL handshake is transmitted. The FIFO is flushed and the TXPKTRDY bit is cleared (see below). The user should clear this bit" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="SENDSTALL" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to issue a STALL handshake Clear this bit to terminate the stall condition Note: This bit has no effect where the endpoint is being used for Isochronous transfers" range="" rwaccess="RW">
			
			
			
		</bitfield>
		<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="DATAERROR" width="1" begin="3" end="3" resetval="0" description="This bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error. It is cleared when RXPKTRDY is cleared Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero." range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="OVERRUN" width="1" begin="2" end="2" resetval="0" description="This bit is set if an OUT packet cannot be loaded into the Rx FIFO. The user should clear this bit Note: This bit is only valid when the endpoint is operating in ISO mode. In Bulk mode, it always returns zero" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="HOST_RXCSR" acronym="HOST_RXCSR" offset="0x0416" width="16" description="Control Status register for host Rx endpoint. (Index register set to select Endpoints 1 - 4)">
		<bitfield id="AUTOCLEAR" width="1" begin="15" end="15" resetval="0" description="When this bit is set, the RXPKTRDY bit will be automatically cleared when a packet of RXMAXP bytes has been unloaded from the Rx FIFO. When packets of less than the maximum packet size are unloaded, RXPKTRDY will have to be cleared manually" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="AUTOREQ" width="1" begin="14" end="14" resetval="0" description="When this bit is set, the REQPKT bit will be automatically set when the RXPKTRDY bit is cleared" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="DMAEN" width="1" begin="13" end="13" resetval="0" description="Set this bit to enable the DMA request for the Rx endpoints" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="DISNYET" width="1" begin="12" end="12" resetval="0" description="Set this bit to disable the sending of NYET handshakes. When set, all successfully received Rx packets are ACK'd including at the point at which the FIFO becomes full Note: This bit only has any effect in High-speed mode, in which mode it should be set for all Interrupt endpoints" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="DMAMODE" width="1" begin="11" end="11" resetval="0" description="This bit should always be 0" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="DATATOGWREN" width="1" begin="10" end="10" resetval="0" description="Write 1 to this bit to enable the DATATOG bit to be written. This bit is automatically cleared once the new value is written to DATATOG" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="DATATOG" width="1" begin="9" end="9" resetval="0" description="When read, this bit indicates the current state of the Rx EP data toggle. If DATATOGWREN is high, this bit canbe written with the required setting of the data toggle. If DATATOGWREN is low, any value written to this bit is ignored" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="_RESV" width="1" begin="8" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="CLRDATATOG" width="1" begin="7" end="7" resetval="0" description="Write a 1 to this bit to reset the endpoint data toggle to 0" range="" rwaccess="W">
			
		</bitfield>
		<bitfield id="RXSTALL" width="1" begin="6" end="6" resetval="0" description="When a STALL handshake is received, this bit is set and an interrupt is generated. The user should clear this bit" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="REQPKT" width="1" begin="5" end="5" resetval="0" description="Write a 1 to this bit to request an IN transaction. It is cleared when RXPKTRDY is set" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="FLUSHFIFO" width="1" begin="4" end="4" resetval="0" description="Write a 1 to this bit to flush the next packet to be read from the endpoint Rx FIFO. The FIFO pointer is reset and the RXPKTRDY bit (below) is cleared Note: FLUSHFIFO has no effect unless RXPKTRDY is set. Also note that, if the FIFO is double-buffered, FLUSHFIFO may need to be set twice to completely clear the FIFO" range="" rwaccess="W">
			
			
		</bitfield>
		<bitfield id="DATAERR_NAKTIMEOUT" width="1" begin="3" end="3" resetval="0" description="When operating in ISO mode, this bit is set when RXPKTRDY is set if the data packet has a CRC or bit-stuff error and cleared when RXPKTRDY is cleared In Bulk mode, this bit will be set when the Rx endpoint is halted following the receipt of NAK responses for longer than the time set as the NAK Limit by the RXINTERVAL register. The user should clear this bit to allow the endpoint to continue" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="ERROR" width="1" begin="2" end="2" resetval="0" description="The USB controller sets this bit when 3 attempts have been made to receive a packet and no data packet has been received. The user should clear this bit. An interrupt is generated when the bit is set Note: This bit is only valid when the Tx endpoint is operating in Bulk or Interrupt mode. In ISO mode, it always returns zero" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="FIFOFULL" width="1" begin="1" end="1" resetval="0" description="This bit is set when no more packets can be loaded into the Rx FIFO" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="RXPKTRDY" width="1" begin="0" end="0" resetval="0" description="This bit is set when a data packet has been received. The user should clear this bit when the packet has been unloaded from the Rx FIFO. An interrupt is generated when the bit is set" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="COUNT0" acronym="COUNT0" offset="0x0418" width="16" description="Number of received bytes in Endpoint 0 FIFO. (Index register set to select Endpoint 0)">
		<bitfield id="_RESV" width="9" begin="15" end="7" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="EP0RXCOUNT" width="7" begin="6" end="0" resetval="0" description="Indicates the number of received data bytes in the Endpoint 0 FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_CSR0 or HOST_CSR0 is set" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="RXCOUNT" acronym="RXCOUNT" offset="0x0418" width="16" description="Number of bytes in host Rx endpoint FIFO. (Index register set to select Endpoints 1 - 4)">
		<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="EPRXCOUNT" width="13" begin="12" end="0" resetval="0" description="Holds the number of received data bytes in the packet in the Rx FIFO The value returned changes as the contents of the FIFO change and is only valid while RXPKTRDY of PERI_RXCSR or HOST_RXCSR is set" range="" rwaccess="R">
			
			
		</bitfield>
	</register>
	<register id="HOST_TYPE0" acronym="HOST_TYPE0" offset="0x041A" width="8" description="Defines the speed of Endpoint 0">
		<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
			
			
			
			
			
		</bitfield>
		<bitfield id="_RESV" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
	</register>
	<register id="HOST_TXTYPE" acronym="HOST_TXTYPE" offset="0x041A" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Tx endpoint. (Index register set to select Endpoints 1 - 4 only)">
		<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
			
			
			
			
			
		</bitfield>
		<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="Set this to select the required protocol for the Tx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
			
			
			
			
			
		</bitfield>
		<bitfield id="TENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Tx endpoint descriptor returned to the USB controller during device enumeration" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="HOST_NAKLIMIT0" acronym="HOST_NAKLIMIT0" offset="0x041B" width="8" description="Sets the NAK response timeout on Endpoint 0. (Index register set to select Endpoint 0)">
		<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="EP0NAKLIMIT" width="5" begin="4" end="0" resetval="0" description="Sets the number of frames/microframes (High-Speed transfers) after which Endpoint 0 should timeout on receiving a stream of NAK responses The number of frames/microframes selected is 2 ( m -1) (where m is the value set in the register, valid values 2 - 16). If the host receives NAK responses from the target for more frames than the number represented by the Limit set in this register, the endpoint will be halted Note: A value of 0 or 1 disables the NAK timeout function" range="" rwaccess="RW">
			
			
			
			
			
		</bitfield>
	</register>
	<register id="HOST_TXINTERVAL" acronym="HOST_TXINTERVAL" offset="0x041B" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Tx endpoint. (Index register set to select Endpoints 1 -  4 only)">
		<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Tx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a TxInterval register for each configured Tx endpoint (except Endpoint 0). In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function ------------------------------------------
-------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		</bitfield>
	</register>
	<register id="HOST_RXTYPE" acronym="HOST_RXTYPE" offset="0x041C" width="8" description="Sets the operating speed, transaction protocol and peripheral endpoint number for the host Rx endpoint. (Index register set to select Endpoints 1 - 4 only)">
		<bitfield id="SPEED" width="2" begin="7" end="6" resetval="0" description="Operating Speed of Target Device 00: Illegal 01: High 10: Full 11: Low" range="" rwaccess="RW">
			
			
			
			
			
		</bitfield>
		<bitfield id="PROT" width="2" begin="5" end="4" resetval="0" description="The CPU should set this to select the required protocol for the Rx endpoint 00: Control 01: Isochronous 10: Bulk 11: Interrupt" range="" rwaccess="RW">
			
			
			
			
			
		</bitfield>
		<bitfield id="RENDPN" width="4" begin="3" end="0" resetval="0" description="Set this value to the endpoint number contained in the Rx endpoint descriptor returned to the USB Controller during device enumeration" range="" rwaccess="RW">
			
		</bitfield>
	</register>
	<register id="HOST_RXINTERVAL" acronym="HOST_RXINTERVAL" offset="0x041D" width="8" description="Sets the polling interval for Interrupt/ISOC transactions or the NAK response timeout on Bulk transactions for host Rx endpoint. (Index register set to select Endpoints 1 -  4 only)">
		<bitfield id="POLINTVL_NAKLIMIT" width="8" begin="7" end="0" resetval="0" description="For Interrupt and Isochronous transfers, defines the polling interval for the currently-selected Rx endpoint For Bulk endpoints, this register sets the number of frames/microframes after which the endpoint should timeout on receiving a stream of NAK responses There is a RxInterval register for each configured Rx endpoint (except Endpoint 0).In each case the value that is set defines a number of frames/microframes (High Speed transfers), as follows ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Transfer Type             Speed                    Valid values (m)       Interpretation ----------------------------------------------------------------------------------------------------------------------------------------------------------------- Interrupt             Low Speed or Full Speed   1 - 255                    Polling interval is m frames                          High Speed                      1 - 16                      Polling interval is 2 ( m -1) microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------ Isochronous      Full Speed or High Speed   1 - 16                      Polling interval is 2 ( m -1) frames/microframes ------------------------------------------------------------------------------------------------------------------------------------------------------------------- Bulk                 Full Speed or High Speed   2 - 16                    NAK Limit is 2 ( m-1) frames/microframes                                                                                             Note: A value of 0 or 1 disables the                                                                                                      NAK timeout function -------------------------------------------
------------------------------------------------------------------------------------------------------------------------" range="" rwaccess="RW">
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		</bitfield>
	</register>
	<register id="CONFIGDATA" acronym="CONFIGDATA" offset="0x041F" width="8" description="Returns details of core configuration (Index register set to select Endpoint 0)">
		<bitfield id="MPRXE" width="1" begin="7" end="7" resetval="0" description="When set to '1', automatic amalgamation of bulk packets is selected" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="MPTXE" width="1" begin="6" end="6" resetval="0" description="When set to '1', automatic splitting of bulk packets is selected" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="BIGENDIAN" width="1" begin="5" end="5" resetval="0" description="When set to '1' indicates Big Endian ordering is selected" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="HBRXE" width="1" begin="4" end="4" resetval="0" description="When set to '1' indicates High-bandwidth Rx ISO Endpoint Support selected" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="HBTXE" width="1" begin="3" end="3" resetval="0" description="When set to '1' indicates High-bandwidth Tx ISO Endpoint Support selected" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="DYNFIFO" width="1" begin="2" end="2" resetval="0" description="When set to '1' indicates Dynamic FIFO Sizing option selected" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="SOFTCONE" width="1" begin="1" end="1" resetval="0" description="When set to '1' indicates Soft Connect/Disconnect option selected" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="UTMIDATAWIDTH" width="1" begin="0" end="0" resetval="0" description="Indicates selected UTMI data width 0: 8 bits 1: 16 bits" range="" rwaccess="R">
			
			
			
		</bitfield>
	</register>
	<register id="FIFOSIZE" acronym="FIFOSIZE" offset="0x041F" width="8" description="Returns the configured size of the selected Rx FIFO and Tx FIFOs (Endpoints 1 - 4 only)">
		<bitfield id="RXFIFOSZ" width="4" begin="7" end="4" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Rx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed When the Tx and Rx endpoints share the same FIFO, the Rx FIFO size will be encoded as 15 Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
			
			
			
			
			
			
		</bitfield>
		<bitfield id="TXFIFOSZ" width="4" begin="3" end="0" resetval="0" description="Returns the sizes of the FIFOs associated with the selected Tx endpoints Values of 3 - 13 correspond to a FIFO size of 2n bytes (8 - 8192 bytes). If an endpoint has not been configured, a value of 0 will be displayed Note: The register only has this interpretation when the Index register is set to select one of Endpoints 1 - 4 and Dynamic Sizing is not selected" range="" rwaccess="R">
			
			
			
			
			
		</bitfield>
	</register>
	<register id="FIFO0" acronym="FIFO0" offset="0x0420" width="32" description="Tx and Rx FIFO register for Endpoint 0">
		<bitfield id="DATA" width="32" begin="31" end="0" resetval="0" description="Writing to these addresses loads data into the TxFIFO for the corresponding endpoint Reading from these addresses unloads data from the RxFIFO for the corresponding endpoint" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="FIFO1" acronym="FIFO1" offset="0x0424" width="32" description="Tx and Rx FIFO register for Endpoint 1">
		<bitfield id="DATA" width="32" begin="31" end="0" resetval="0" description="Writing to these addresses loads data into the TxFIFO for the corresponding endpoint Reading from these addresses unloads data from the RxFIFO for the corresponding endpoint" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="FIFO2" acronym="FIFO2" offset="0x0428" width="32" description="Tx and Rx FIFO register for Endpoint 2">
		<bitfield id="DATA" width="32" begin="31" end="0" resetval="0" description="Writing to these addresses loads data into the TxFIFO for the corresponding endpoint Reading from these addresses unloads data from the RxFIFO for the corresponding endpoint" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="FIFO3" acronym="FIFO3" offset="0x042C" width="32" description="Tx and Rx FIFO register for Endpoint 3">
		<bitfield id="DATA" width="32" begin="31" end="0" resetval="0" description="Writing to these addresses loads data into the TxFIFO for the corresponding endpoint Reading from these addresses unloads data from the RxFIFO for the corresponding endpoint" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="FIFO4" acronym="FIFO4" offset="0x0430" width="32" description="Tx and Rx FIFO register for Endpoint 4">
		<bitfield id="DATA" width="32" begin="31" end="0" resetval="0" description="Writing to these addresses loads data into the TxFIFO for the corresponding endpoint Reading from these addresses unloads data from the RxFIFO for the corresponding endpoint" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="DEVCTL" acronym="DEVCTL" offset="0x0460" width="8" description="OTG device control register">
		<bitfield id="BDEVICE" width="1" begin="7" end="7" resetval="0" description="This Read-only bit indicates whether the USB controller is operating as the 'A' device or the 'B' device 0: 'A' device 1: 'B' device Only valid while a session is in progress" range="" rwaccess="R">
			
			
			
			
		</bitfield>
		<bitfield id="FSDEV" width="1" begin="6" end="6" resetval="0" description="This Read-only bit is set when a full-speed or high-speed device has been detected being connected to the port  (High-speed devices are distinguished from full-speed by checking for high-speed chirps when the device is reset) Only valid in Host mode" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="LSDEV" width="1" begin="5" end="5" resetval="0" description="This Read-only bit is set when a low-speed device has been detected being connected to the port Only valid in Host mode" range="" rwaccess="R">
			
			
		</bitfield>
		<bitfield id="VBUS" width="2" begin="4" end="3" resetval="0" description="These Read-only bits encode the current VBus level as follows ----------------------------------------------------------------------------- VBus[1]   VBus[0]                   Meaning ------------------------------------------------------------------------------     0           0              Below SessionEnd     0           1              Above SessionEnd, below AValid     1           0              Above AValid, below VBusValid     1           1              Above VBusValid" range="" rwaccess="R">
			
			
			
			
			
			
			
			
		</bitfield>
		<bitfield id="HOSTMODE" width="1" begin="2" end="2" resetval="0" description="This Read-only bit is set when the USB controller is acting as a Host" range="" rwaccess="R">
			
		</bitfield>
		<bitfield id="HOSTREQ" width="1" begin="1" end="1" resetval="0" description="When set, the USB controller will initiate the Host Negotiation when Suspend mode is entered. It is cleared when Host Negotiation is completed. ('B' device only)" range="" rwaccess="RW">
			
		</bitfield>
		<bitfield id="SESSION" width="1" begin="0" end="0" resetval="0" description="When operating as an 'A' device, this bit is set or cleared by the userto start or end a session When operating as a 'B' device, this bit is set/cleared by the USB controller when a session starts/ends It is also set by the user to initiate the Session Request Protocol. When the USB controller is in Suspend mode, the bit may be cleared by the user to perform a software disconnect" range="" rwaccess="RW">
			
			
			
		</bitfield>
	</register>
	<register id="TXFIFOSZ" acronym="TXFIFOSZ" offset="0x0462" width="8" description="Tx Endpoint FIFO Size(Index register set to select Endpoints 0 -  4 only)">
		<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="DPB" width="1" begin="4" end="4" resetval="0" description="When bit is set to '1', double packet buffering is enabled When bit is set to '0', single packet buffering is supported" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="SZ" width="4" begin="3" end="0" resetval="0" description="Maximum packet size to be allowed(before any splitting within the FIFO of Bulk packets prior to transmission) If m = SZ[3:0], the FIFO size is calculated as 2(m+3) for single packet buffering and 2(m+4) for dual packet buffering" range="" rwaccess="R">
			
			
			
			
			
			
		</bitfield>
	</register>
	<register id="RXFIFOSZ" acronym="RXFIFOSZ" offset="0x0463" width="8" description="Rx Endpoint FIFO Size(Index register set to select Endpoints 0 -  4 only)">
		<bitfield id="_RESV" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="DPB" width="1" begin="4" end="4" resetval="0" description="When bit is set to '1', double packet buffering is enabled When bit is set to '0', single packet buffering is supported" range="" rwaccess="RW">
			
			
		</bitfield>
		<bitfield id="SZ" width="4" begin="3" end="0" resetval="0" description="Maximum packet size to be allowed(before any splitting within the FIFO of Bulk packets prior to transmission) If m = SZ[3:0], the FIFO size is calculated as 2(m+3) for single packet buffering and 2(m+4) for dual packet buffering" range="" rwaccess="R">
			
			
			
			
			
			
		</bitfield>
	</register>
	<register id="TXFIFOADDR" acronym="TXFIFOADDR" offset="0x0464" width="16" description="Tx Endpoint FIFO Address(Index register set to select Endpoints 0 -  4 only)">
		<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="ADDR" width="13" begin="12" end="0" resetval="0" description="Start Address of endpoint FIFO in units of 8 bytes If m = ADDR[12:0] then the start address is 8*m" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>
	<register id="RXFIFOADDR" acronym="RXFIFOADDR" offset="0x0466" width="16" description="Rx Endpoint FIFO Address(Index register set to select Endpoints 0 -  4 only)">
		<bitfield id="_RESV" width="3" begin="15" end="13" resetval="0" description="Reserved" range="" rwaccess="N">
			
		</bitfield>
		<bitfield id="ADDR" width="13" begin="12" end="0" resetval="0" description="Start Address of endpoint FIFO in units of 8 bytes If m = ADDR[12:0] then the start address is 8*m" range="" rwaccess="RW">
			
			
		</bitfield>
	</register>

</module>
