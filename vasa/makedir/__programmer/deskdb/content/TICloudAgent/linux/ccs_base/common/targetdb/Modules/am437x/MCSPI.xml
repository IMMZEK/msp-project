<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="MCSPI" id="MCSPI">
  
  
  <register acronym="MCSPI_HL_REV" description="IP Revision Identifier (X.Y.R) Used by software to track features, bugs, and compatibility" id="MCSPI_HL_REV" offset="0x0" width="32">
    
  <bitfield begin="31" description=" Used to distinguish between old scheme and current." end="30" id="SCHEME" rwaccess="R" width="2">
    <bitenum description="Highlander 0.8 scheme" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Legacy ASP or WTBU scheme" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description=" Reserved These bits are initialized to zero, and writes to them are ignored." end="28" id="RSVD" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="27" description=" Function indicates a software compatible module family. [[br]]If there is no level of software compatibility a new Func number (and hence REVISION) should be assigned." end="16" id="FUNC" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="15" description=" RTL Version (R), maintained by IP design owner. [[br]]RTL follows a numbering such as X.Y.R.Z which are explained in this table. [[br]]R changes ONLY when:  (1) PDS uploads occur which may have been due to spec changes (2) Bug fixes occur  (3) Resets to '0' when X or Y changes. [[br]]Design team has an internal 'Z' (customer invisible) number which increments on every drop that happens due to DV and RTL updates. [[br]]Z resets to 0 when R increments." end="11" id="R_RTL" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description=" Major Revision (X), maintained by IP specification owner. [[br]]X changes ONLY when: (1) There is a major feature addition. [[br]]An example would be adding Master Mode to Utopia Level2. [[br]]The Func field (or Class/Type in old PID format) will remain the same. [[br]]X does NOT change due to: (1) Bug fixes (2) Change in feature parameters." end="8" id="X_MAJOR" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description=" Indicates a special version for a particular device. [[br]]Consequence of use may avoid use of standard Chip Support Library (CSL) / Drivers. " end="6" id="CUSTOM" rwaccess="R" width="2">
    <bitenum description="Non custom (standard) revision" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Minor Revision (Y), maintained by IP specification owner. [[br]]Y changes ONLY when: (1) Features are scaled (up or down). [[br]]Flexibility exists in that this feature scalability may either be represented in the Y change or a specific register in the IP that indicates which features are exactly available. [[br]](2) When feature creeps from Is-Not list to Is list. [[br]]But this may not be the case once it sees silicon[[br]] in which case X will change. [[br]]Y does NOT change due to: (1) Bug fixes (2) Typos or clarifications (3) major functional/feature change/addition/deletion. [[br]]Instead these changes may be reflected via R, S, X as applicable. [[br]]Spec owner maintains a customer-invisible number 'S' which changes due to: (1) Typos/clarifications (2) Bug documentation. [[br]]Note that this bug is not due to a spec change but due to implementation. [[br]]Nevertheless, the spec tracks the IP bugs. [[br]]An RTL release (say for silicon PG1.1) that occurs due to bug fix should document the corresponding spec number (X.Y.S) in its release notes." end="0" id="Y_MINOR" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_HL_HWINFO" description="Information about the IP module's hardware configuration, i.e. typically the module's HDL generics (if any). Actual field format and encoding is up to the module's designer to decide." id="MCSPI_HL_HWINFO" offset="0x4" width="32">
    
  <bitfield begin="31" description=" Reserved These bits are initialized to zero, and writes to them are ignored." end="7" id="RSVD" rwaccess="R" width="25"></bitfield>
    
  <bitfield begin="6" description=" This bit field indicates whether the retention mode is supported using the pin PIRFFRET." end="6" id="RETMODE" rwaccess="R" width="1">
    <bitenum description="Retention mode enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Retention mode disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" FIFO number of byte generic parameter This register defines the value of FFNBYTE generic parameter, only MSB bits from 8 down to 4 are taken into account." end="1" id="FFNBYTE" rwaccess="R" width="5">
    <bitenum description="FIFO 256 bytes depth" id="en_5_0x10" token="en_5_0x10" value="0x10"></bitenum>
    <bitenum description="FIFO 128 bytes depth" id="en_4_0x8" token="en_4_0x8" value="0x8"></bitenum>
    <bitenum description="FIFO 64 bytes depth" id="en_3_0x4" token="en_3_0x4" value="0x4"></bitenum>
    <bitenum description="FIFO 32 bytes depth" id="en_2_0x2" token="en_2_0x2" value="0x2"></bitenum>
    <bitenum description="FIFO 16 bytes depth" id="en_1_0x1" token="en_1_0x1" value="0x1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Use of a FIFO enable: This bit field indicates if a FIFO is integrated within controller design with its management." end="0" id="USEFIFO" rwaccess="R" width="1">
    <bitenum description="FIFO and its management implemented in design with depth defined by FFNBYTE generic." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO not implemented in design" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_HL_SYSCONFIG" description="Clock management configuration" id="MCSPI_HL_SYSCONFIG" offset="0x10" width="32">
    
  <bitfield begin="31" description=" " end="4" id="RSVD" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description=" Configuration of the local target state management mode. [[br]]By definition, target can handle read/write transaction as long as it is out of IDLE state. " end="2" id="IDLEMODE" rwaccess="RW" width="2">
    <bitenum description="Smart-idle wakeup-capable mode: local target's idle state eventually follows (acknowledges) the system's idle requests, depending on the IP module's internal requirements.IP module may generate (IRQ- or DMA-request-related) wakeup events when in idle state.Mode is only relevant if the appropriate IP module &quot;swakeup&quot; output(s) is (are) implemented." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Smart-idle mode: local target's idle state eventually follows (acknowledges) the system's idle requests, depending on the IP module's internal requirements.IP module shall not generate (IRQ- or DMA-request-related) wakeup events." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="No-idle mode: local target never enters idle state.Backup mode, for debug only." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Force-idle mode: local target's idle state follows (acknowledges) the system's idle requests unconditionally, i.e. regardless of the IP module's internal requirements.Backup mode, for debug only." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Sensitivity to emulation (debug) suspend input signal." end="1" id="FREEEMU" rwaccess="RW" width="1">
    <bitenum description="IP module is not sensitive to emulation suspend" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="IP module is sensitive to emulation suspend" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Software reset. [[br]](Optional) " end="0" id="SOFTRESET" rwaccess="RW" width="1">
    <bitenum description="Initiate software reset" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Reset (software or other) ongoing" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="No action" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Reset done, no pending action" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_REVISION" description="This register contains the hard coded RTL revision number." id="MCSPI_REVISION" offset="0x100" width="32">
    
  <bitfield begin="31" description=" Reads returns 0" end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" IP revision [[br]][7:4] Major revision [[br]][3:0] Minor revision Examples: 0x10 for 1.0, 0x21 for 2.1" end="0" id="REV" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_SYSCONFIG" description="This register allows controlling various parameters of the OCP interface." id="MCSPI_SYSCONFIG" offset="0x110" width="32">
    
  <bitfield begin="31" description=" Reads returns 0" end="10" id="RESERVED_1" rwaccess="RW" width="22"></bitfield>
    
  <bitfield begin="9" description=" Clocks activity during wake up mode period " end="8" id="CLOCKACTIVITY" rwaccess="RW" width="2">
    <bitenum description="OCP and Functional clocks are maintained." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Functional clock is maintained. OCP clock may be switched-off." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="OCP clock is maintained. Functional clock may be switched-off." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="OCP and Functional clocks may be switched off." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" Reads returns 0" end="5" id="RESERVED_2" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="4" description=" Power management" end="3" id="SIDLEMODE" rwaccess="RW" width="2">
    <bitenum description="If an idle request is detected, the module will switch to idle mode based on its internal activity, and the wake up capability can be used if the bit MCSPI_SYSCONFIG[EnaWakeUp] is set." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="If an idle request is detected, the module will switch to idle mode based on its internal activity. The wake up capability cannot be used." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="If an idle request is detected, the request is ignored and the module does not switch to wake up mode, and keeps on behaving normally." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="If an idle request is detected, the McSPI acknowledges it unconditionally and goes in Inactive mode. Interrupt, DMA requests and wake up lines are unconditionally de-asserted and the module wakeup capability is deactivated even if the bit MCSPI_SYSCONFIG[EnaWakeUp] is set." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" WakeUp feature control" end="2" id="ENAWAKEUP" rwaccess="RW" width="1">
    <bitenum description="WakeUp capability is enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="WakeUp capability is disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Software reset. [[br]]During reads it always returns 0. " end="1" id="SOFTRESET" rwaccess="RW" width="1">
    <bitenum description="(write) Set this bit to 1 to trigger a module reset.The bit is automatically reset by the hardware." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="(write) Normal mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Internal OCP Clock gating strategy" end="0" id="AUTOIDLE" rwaccess="RW" width="1">
    <bitenum description="Automatic OCP clock gating strategy is applied, based on the OCP interface activity" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="OCP clock is free-running" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_SYSSTS" description="This register provides status information about the module excluding the interrupt status information" id="MCSPI_SYSSTS" offset="0x114" width="32">
    
  <bitfield begin="31" description=" Reserved for module specific status information. [[br]]Read returns 0" end="1" id="RESERVED_1" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description=" Internal Reset Monitoring" end="0" id="RESETDONE" rwaccess="R" width="1">
    <bitenum description="Reset completed" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Internal module reset is on-going" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_IRQSTS" description="The interrupt status regroups all the status of the module internal events that can generate an interrupt" id="MCSPI_IRQSTS" offset="0x118" width="32">
    
  <bitfield begin="31" description=" Reads returns 0" end="18" id="RESERVED_1" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="17" description=" End of word count event  when a channel is enabled using the FIFO buffer and the channel had sent the number of SPI word defined by MCSPI_XFERLEVEL[WCNT]. [[br]] " end="17" id="EOW" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description=" Wake Up event in slave mode when an active control signal is detected on the SPIEN line programmed in the field MCSPI_CH0CONF[SPIENSLV] " end="16" id="WKS" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" Reads returns 0" end="15" id="RESERVED_2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description=" Receiver register is full or almost full. [[br]]Only when Channel 3 is enabled  " end="14" id="RX3_FULL" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description=" Transmitter register underflow. [[br]]Only when Channel 3 is enabled. [[br]]The transmitter register is empty (not updated by Host or DMA with new data) before its time slot assignment. [[br]]Exception: No TX_underflow event when no data has been loaded into the transmitter register since channel has been enabled. [[br]] " end="13" id="TX3_UNDERFLOW" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description=" Transmitter register is empty or almost empty. [[br]]Note: Enabling the channel automatically rises this event. [[br]] " end="12" id="TX3_EMPTY" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description=" Reads returns 0" end="11" id="RESERVED_3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description=" Receiver register full or almost full. [[br]]Channel 2  " end="10" id="RX2_FULL" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description=" Transmitter register underflow. [[br]]Channel 2  " end="9" id="TX2_UNDERFLOW" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description=" Transmitter register empty or almost empty. [[br]]Channel 2  " end="8" id="TX2_EMPTY" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" Reads returns 0" end="7" id="RESERVED_4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description=" Receiver register full or almost full. [[br]]Channel 1  " end="6" id="RX1_FULL" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Transmitter register underflow. [[br]]Channel 1  " end="5" id="TX1_UNDERFLOW" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Transmitter register empty or almost empty. [[br]]Channel 1  " end="4" id="TX1_EMPTY" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Receiver register overflow (slave mode only). [[br]]Channel 0  " end="3" id="RX0_OVERFLOW" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Receiver register full or almost full. [[br]]Channel 0  " end="2" id="RX0_FULL" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Transmitter register underflow. [[br]]Channel 0  " end="1" id="TX0_UNDERFLOW" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Transmitter register empty or almost empty. [[br]]Channel 0  " end="0" id="TX0_EMPTY" rwaccess="RW" width="1">
    <bitenum description="Event is pending" id="en_4_0x1" token="en_4_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit is reset" id="en_3_0x1" token="en_3_0x1" value="0x1"></bitenum>
    <bitenum description="Event status bit unchanged" id="en_2_0x0" token="en_2_0x0" value="0x0"></bitenum>
    <bitenum description="Event false" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_IRQEN" description="This register allows to enable/disable the module internal sources of interrupt, on an event-by-event basis." id="MCSPI_IRQEN" offset="0x11C" width="32">
    
  <bitfield begin="31" description=" Reads return 0" end="18" id="RESERVED_1" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="17" description=" End of Word count Interrupt Enable." end="17" id="EOW_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description=" Wake Up event interrupt Enable in slave mode when an active control signal is detected on the SPIEN line programmed in the field MCSPI_CH0CONF[SPIENSLV]" end="16" id="WKE" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" Reads returns 0" end="15" id="RESERVED_2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description=" Receiver register Full Interrupt Enable. [[br]]Ch 3 " end="14" id="RX3_FULL_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description=" Transmitter register Underflow Interrupt Enable. [[br]]Ch 3 " end="13" id="TX3_UNDERFLOW_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description=" Transmitter register Empty Interrupt Enable. [[br]]Ch3 " end="12" id="TX3_EMPTY_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description=" Reads return 0" end="11" id="RESERVED_3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description=" Receiver register Full Interrupt Enable. [[br]]Ch 2 " end="10" id="RX2_FULL_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description=" Transmitter register Underflow Interrupt Enable. [[br]]Ch 2 " end="9" id="TX2_UNDERFLOW_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description=" Transmitter register Empty Interrupt Enable. [[br]]Ch 2 " end="8" id="TX2_EMPTY_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" Reads return 0" end="7" id="RESERVED_4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description=" Receiver register Full Interrupt Enable. [[br]]Ch 1 " end="6" id="RX1_FULL_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Transmitter register Underflow Interrupt Enable. [[br]]Ch 1 " end="5" id="TX1_UNDERFLOW_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Transmitter register Empty Interrupt Enable. [[br]]Ch 1 " end="4" id="TX1_EMPTY_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Receiver register Overflow Interrupt Enable. [[br]]Ch 0 " end="3" id="RX0_OVERFLOW_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Receiver register Full Interrupt Enable. [[br]]Ch 0 " end="2" id="RX0_FULL_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Transmitter register Underflow Interrupt Enable. [[br]]Ch 0 " end="1" id="TX0_UNDERFLOW_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Transmitter register Empty Interrupt Enable. [[br]]Ch 0 " end="0" id="TX0_EMPTY_EN" rwaccess="RW" width="1">
    <bitenum description="Interrupt enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_WAKEUPEN" description="The wakeup enable register allows to enable/disable the module internal sources of wakeup on event-by-event basis." id="MCSPI_WAKEUPEN" offset="0x120" width="32">
    
  <bitfield begin="31" description=" Reads returns 0" end="1" id="RESERVED_1" rwaccess="RW" width="31"></bitfield>
    
  <bitfield begin="0" description=" WakeUp functionality in slave mode when an active control signal is detected on the SPIEN line programmed in the field MCSPI_CH0CONF[SPIENSLV]" end="0" id="WKEN" rwaccess="RW" width="1">
    <bitenum description="The event is allowed to wakeup the system if the global control bit MCSPI_SYSCONF[EnaWakeUp] is set." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="The event is not allowed to wakeup the system, even if the global control bit MCSPI_SYSCONF[EnaWakeUp] is set." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_SYST" description="This register is used to check the correctness of the system interconnect either internally to peripheral bus, or externally to device IO pads, when the module is configured in system test (SYSTEST) mode." id="MCSPI_SYST" offset="0x124" width="32">
    
  <bitfield begin="31" description=" Reads returns 0" end="12" id="RESERVED_1" rwaccess="RW" width="20"></bitfield>
    
  <bitfield begin="11" description=" Set status bit" end="11" id="SSB" rwaccess="RW" width="1">
    <bitenum description="Force to 1 all status bits of MCSPI_IRQSTATUS register. Writing 1 into this bit sets to 1 all status bits contained in the MCSPI_IRQSTATUS register." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No action. Writing 0 does not clear already set status bits; This bit must be cleared prior attempting to clear a status bit of the MCSPI_IRQSTATUS register." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="10" description=" Set the direction of the SPIEN[[br]][3:0] lines and SPICLK line " end="10" id="SPIENDIR" rwaccess="RW" width="1">
    <bitenum description="input (as in slave mode)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="output (as in master mode)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description=" Set the direction of the SPIDAT[1]" end="9" id="SPIDATDIR1" rwaccess="RW" width="1">
    <bitenum description="input" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="output" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description=" Set the direction of the SPIDAT[0]" end="8" id="SPIDATDIR0" rwaccess="RW" width="1">
    <bitenum description="input" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="output" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" SWAKEUP output (signal data value of internal signal to system). [[br]]The signal is driven high or low according to the value written into this register bit. " end="7" id="WAKD" rwaccess="RW" width="1">
    <bitenum description="The pin is driven high." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="The pin is driven low." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" SPICLK line (signal data value) If MCSPI_SYST[SPIENDIR] = 1 (input mode direction), this bit returns the value on the CLKSPI line (high or low), and a write into this bit has no effect. [[br]]If MCSPI_SYST[SPIENDIR] = 0 (output mode direction), the CLKSPI line is driven high or low according to the value written into this register." end="6" id="SPICLK" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description=" SPIDAT[1] line (signal data value) If MCSPI_SYST[SPIDATDIR1] = 0 (output mode direction), the SPIDAT[1] line is driven high or low according to the value written into this register. [[br]]If MCSPI_SYST[SPIDATDIR1] = 1 (input mode direction), this bit returns the value on the SPIDAT[1] line (high or low), and a write into this bit has no effect. [[br]]" end="5" id="SPIDAT_1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description=" SPIDAT[0] line (signal data value) If MCSPI_SYST[SPIDATDIR0] = 0 (output mode direction), the SPIDAT[0] line is driven high or low according to the value written into this register. [[br]]If MCSPI_SYST[SPIDATDIR0] = 1 (input mode direction), this bit returns the value on the SPIDAT[0] line (high or low), and a write into this bit has no effect. [[br]]" end="4" id="SPIDAT_0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description=" SPIEN[3] line (signal data value) If MCSPI_SYST[SPIENDIR] = 0 (output mode direction), the SPIENT[3] line is driven high or low according to the value written into this register. [[br]]If MCSPI_SYST[SPIENDIR] = 1 (input mode direction), this bit returns the value on the SPIEN[3] line (high or low), and a write into this bit has no effect." end="3" id="SPIEN_3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description=" SPIEN[2] line (signal data value) If MCSPI_SYST[SPIENDIR] = 0 (output mode direction), the SPIENT[2] line is driven high or low according to the value written into this register. [[br]]If MCSPI_SYST[SPIENDIR] = 1 (input mode direction), this bit returns the value on the SPIEN[2] line (high or low), and a write into this bit has no effect." end="2" id="SPIEN_2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description=" SPIEN[1] line (signal data value) If MCSPI_SYST[SPIENDIR] = 0 (output mode direction), the SPIENT[1] line is driven high or low according to the value written into this register. [[br]]If MCSPI_SYST[SPIENDIR] = 1 (input mode direction), this bit returns the value on the SPIEN[1] line (high or low), and a write into this bit has no effect." end="1" id="SPIEN_1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description=" SPIEN[0] line (signal data value) If MCSPI_SYST[SPIENDIR] = 0 (output mode direction), the SPIENT[0] line is driven high or low according to the value written into this register. [[br]]If MCSPI_SYST[SPIENDIR] = 1 (input mode direction), this bit returns the value on the SPIEN[0] line (high or low), and a write into this bit has no effect." end="0" id="SPIEN_0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_MODULCTRL" description="This register is dedicated to the configuration of the serial port interface." id="MCSPI_MODULCTRL" offset="0x128" width="32">
    
  <bitfield begin="31" description=" Reads returns 0" end="9" id="RESERVED_1" rwaccess="RW" width="23"></bitfield>
    
  <bitfield begin="8" description=" FIFO DMA Address [[br]]256-bit aligned This register is used when a FIFO is managed by the module and DMA connected to the controller provides only 256 bit aligned address. [[br]]If this bit is set the enabled channel which uses the FIFO has its datas managed through MCSPI_DAFTX and MCSPI_DAFRX registers instead of MCSPI_TX(i) and MCSPI_RX(i) registers. " end="8" id="FDAA" rwaccess="RW" width="1">
    <bitenum description="FIFO data managed by MCSPI_DAFTX and MCSPI_DAFRX registers." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO data managed by MCSPI_TX(i) and MCSPI_RX(i) registers." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" Multiple word ocp access: This register can only be used when a channel is enabled using a FIFO. [[br]]It allows the system to perform multiple SPI word access for a single [[br]]32-bit OCP word access. [[br]]This is possible for WL less than 16. " end="7" id="MOA" rwaccess="RW" width="1">
    <bitenum description="Multiple word access enabled with FIFO" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Multiple word access disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" Initial spi delay for first transfer: This register is an option only available in SINGLE master mode, The controller waits for a delay to transmit the first spi word after channel enabled and corresponding TX register filled. [[br]]This Delay is based on SPI output frequency clock, No clock output provided to the boundary and chip select is not active in 4 pin mode within this period. [[br]] " end="4" id="INITDLY" rwaccess="RW" width="3">
    <bitenum description="32ClkDly : The controller wait 32 spi bus clock" id="en_5_0x4" token="en_5_0x4" value="0x4"></bitenum>
    <bitenum description="16ClkDly : The controller wait 16 spi bus clock" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="8ClkDly : The controller wait 8 spi bus clock" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="4ClkDly : The controller wait 4 spi bus clock" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No delay for first spi transfer." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Enables the system test mode" end="3" id="SYSTEM_TEST" rwaccess="RW" width="1">
    <bitenum description="System test mode (SYSTEST)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Functional mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Master/ Slave " end="2" id="MS" rwaccess="RW" width="1">
    <bitenum description="Slave - The module receives the SPICLK and SPIEN[3:0]" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Master - The module generates the SPICLK and SPIEN[3:0]" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Pin mode selection: This register is used to configure the SPI pin mode, in master or slave mode. [[br]]If asserted the controller only use SIMO,SOMI and SPICLK clock pin for spi transfers. " end="1" id="PIN34" rwaccess="RW" width="1">
    <bitenum description="3PinMode : SPIEN is used as a chip select." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="4PinMode : SPIEN is not used.In this mode all related option to chip select have no meaning." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Single channel / Multi Channel (master mode only)" end="0" id="SINGLE" rwaccess="RW" width="1">
    <bitenum description="Only one channel will be used in master mode. This bit must be set in Force SPIEN mode." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="More than one channel will be used in master mode." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH0CONF" description="This register is dedicated to the configuration of the channel 0" id="MCSPI_CH0CONF" offset="0x12C" width="32">
    
  <bitfield begin="31" description=" read returns 0" end="30" id="RESERVED_1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description=" Clock divider granularity This register defines the granularity of channel clock divider: power of two or one clock cycle granularity. [[br]]When this bit is set the register MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum of 4096 clock divider ratio. [[br]]Then The clock divider ratio is a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values " end="29" id="CLKG" rwaccess="RW" width="1">
    <bitenum description="One clock cycle ganularity" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Clock granularity of power of two" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description=" FIFO enabled for receive:Only one channel can have this bit field set." end="28" id="FFER" rwaccess="RW" width="1">
    <bitenum description="The buffer is used to receive data." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="The buffer is not used to receive data." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description=" FIFO enabled for Transmit:Only one channel can have this bit field set." end="27" id="FFEW" rwaccess="RW" width="1">
    <bitenum description="The buffer is used to transmit data." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="The buffer is not used to transmit data." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="26" description=" Chip Select Time Control This [[br]]2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. " end="25" id="TCS0" rwaccess="RW" width="2">
    <bitenum description="3.5 clock cycle" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="2.5 clock cycle" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="1.5 clock cycle" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="0.5 clock cycle" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="24" description=" Start bit polarity" end="24" id="SBPOL" rwaccess="RW" width="1">
    <bitenum description="Start bit polarity is held to 1 during SPI transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Start bit polarity is held to 0 during SPI transfer." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description=" Start bit enable for SPI transfer" end="23" id="SBE" rwaccess="RW" width="1">
    <bitenum description="Start bit D/CX added before SPI transfer polarity is defined by MCSPI_CH0CONF[SBPOL]" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Default SPI transfer length as specified by WL bit field" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="22" description=" Channel 0 only and slave mode only: SPI slave select signal detection. [[br]]Reserved bits for other cases. " end="21" id="SPIENSLV" rwaccess="RW" width="2">
    <bitenum description="Detection enabled only on SPIEN[3]" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Detection enabled only on SPIEN[2]" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Detection enabled only on SPIEN[1]" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Detection enabled only on SPIEN[0]" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description=" Manual SPIEN assertion to keep SPIEN active between SPI words. [[br]](single channel master mode only)  " end="20" id="FORCE" rwaccess="RW" width="1">
    <bitenum description="Writing 1 into this bit drives high the SPIEN line when MCSPI_CHCONF(i)[EPOL]=0, and drives it low when MCSPI_CHCONF(i)[EPOL]=1" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing 0 into this bit drives low the SPIEN line when MCSPI_CHCONF(i)[EPOL]=0, and drives it high when MCSPI_CHCONF(i)[EPOL]=1." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description=" Turbo mode" end="19" id="TURBO" rwaccess="RW" width="1">
    <bitenum description="Turbo is activated to maximize the throughput for multi SPI words transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Turbo is deactivated (recommended for single SPI word transfer)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="18" description=" Input Select" end="18" id="IS" rwaccess="RW" width="1">
    <bitenum description="Data Line1 (SPIDAT[1]) selected for reception" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line0 (SPIDAT[0]) selected for reception." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description=" Transmission Enable for data line 1 (SPIDATAGZEN[1]) " end="17" id="DPE1" rwaccess="RW" width="1">
    <bitenum description="No transmission on Data Line1 (SPIDAT[1])" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line1 (SPIDAT[1]) selected for transmission" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description=" Transmission Enable for data line 0 (SPIDATAGZEN[0]) " end="16" id="DPE0" rwaccess="RW" width="1">
    <bitenum description="No transmission on Data Line0 (SPIDAT[0])" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line0 (SPIDAT[0]) selected for transmission" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" DMA Read request The DMA Read request line is asserted when the channel is enabled and a new data is available in the receive  register of the channel. [[br]]The DMA Read request line  is deasserted on read completion of the receive  register of the channel. " end="15" id="DMAR" rwaccess="RW" width="1">
    <bitenum description="DMA Read Request enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="DMA Read Request disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description=" DMA Write request. [[br]]The DMA Write request line is asserted when The channel is enabled and the transmitter register of the channel is empty. [[br]]The DMA Write request line is deasserted on load completion of the transmitter register of the channel. " end="14" id="DMAW" rwaccess="RW" width="1">
    <bitenum description="DMA Write Request enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="DMA Write Request disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description=" Transmit/Receive modes" end="12" id="TRM" rwaccess="RW" width="2">
    <bitenum description="Reserved" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Transmit only mode" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Receive only mode" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Transmit and Receive mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description=" SPI word length" end="7" id="WL" rwaccess="RW" width="5">
    <bitenum description="32bits : The SPI word is 32-bits long" id="en_32_0x1F" token="en_32_0x1F" value="0x1F"></bitenum>
    <bitenum description="31bits : The SPI word is 31-bits long" id="en_31_0x1E" token="en_31_0x1E" value="0x1E"></bitenum>
    <bitenum description="30bits : The SPI word is 30-bits long" id="en_30_0x1D" token="en_30_0x1D" value="0x1D"></bitenum>
    <bitenum description="29bits : The SPI word is 29-bits long" id="en_29_0x1C" token="en_29_0x1C" value="0x1C"></bitenum>
    <bitenum description="28bits : The SPI word is 28-bits long" id="en_28_0x1B" token="en_28_0x1B" value="0x1B"></bitenum>
    <bitenum description="27bits : The SPI word is 27-bits long" id="en_27_0x1A" token="en_27_0x1A" value="0x1A"></bitenum>
    <bitenum description="26bits : The SPI word is 26-bits long" id="en_26_0x19" token="en_26_0x19" value="0x19"></bitenum>
    <bitenum description="25bits : The SPI word is 25-bits long" id="en_25_0x18" token="en_25_0x18" value="0x18"></bitenum>
    <bitenum description="24bits : The SPI word is 24-bits long" id="en_24_0x17" token="en_24_0x17" value="0x17"></bitenum>
    <bitenum description="23bits : The SPI word is 23-bits long" id="en_23_0x16" token="en_23_0x16" value="0x16"></bitenum>
    <bitenum description="22bits : The SPI word is 22-bits long" id="en_22_0x15" token="en_22_0x15" value="0x15"></bitenum>
    <bitenum description="21bits : The SPI word is 21-bits long" id="en_21_0x14" token="en_21_0x14" value="0x14"></bitenum>
    <bitenum description="20bits : The SPI word is 20-bits long" id="en_20_0x13" token="en_20_0x13" value="0x13"></bitenum>
    <bitenum description="19bits : The SPI word is 19-bits long" id="en_19_0x12" token="en_19_0x12" value="0x12"></bitenum>
    <bitenum description="18bits : The SPI word is 18-bits long" id="en_18_0x11" token="en_18_0x11" value="0x11"></bitenum>
    <bitenum description="17bits : The SPI word is 17-bits long" id="en_17_0x10" token="en_17_0x10" value="0x10"></bitenum>
    <bitenum description="16bits : The SPI word is 16-bits long" id="en_16_0xF" token="en_16_0xF" value="0xF"></bitenum>
    <bitenum description="15bits : The SPI word is 15-bits long" id="en_15_0xE" token="en_15_0xE" value="0xE"></bitenum>
    <bitenum description="14bits : The SPI word is 14-bits long" id="en_14_0xD" token="en_14_0xD" value="0xD"></bitenum>
    <bitenum description="13bits : The SPI word is 13-bits long" id="en_13_0xC" token="en_13_0xC" value="0xC"></bitenum>
    <bitenum description="12bits : The SPI word is 12-bits long" id="en_12_0xB" token="en_12_0xB" value="0xB"></bitenum>
    <bitenum description="11bits : The SPI word is 11-bits long" id="en_11_0xA" token="en_11_0xA" value="0xA"></bitenum>
    <bitenum description="10bits : The SPI word is 10-bits long" id="en_10_0x9" token="en_10_0x9" value="0x9"></bitenum>
    <bitenum description="9bits : The SPI word is 9-bits long" id="en_9_0x8" token="en_9_0x8" value="0x8"></bitenum>
    <bitenum description="8bits : The SPI word is 8-bits long" id="en_8_0x7" token="en_8_0x7" value="0x7"></bitenum>
    <bitenum description="7bits : The SPI word is 7-bits long" id="en_7_0x6" token="en_7_0x6" value="0x6"></bitenum>
    <bitenum description="6bits : The SPI word is 6-bits long" id="en_6_0x5" token="en_6_0x5" value="0x5"></bitenum>
    <bitenum description="5bits : The SPI word is 5-bits long" id="en_5_0x4" token="en_5_0x4" value="0x4"></bitenum>
    <bitenum description="4bits : The SPI word is 4-bits long" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Reserved" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Reserved" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Reserved" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" SPIEN polarity" end="6" id="EPOL" rwaccess="RW" width="1">
    <bitenum description="SPIEN is held low during the active state." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="SPIEN is held high during the active state." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Frequency divider for SPICLK. [[br]](only when the module is a Master SPI device). [[br]]A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a [[br]]4-bit value, and results in a new clock SPICLK available to shift-in and shift-out data. [[br]]By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared, Otherwise this register is the 4 LSB bit of a [[br]]12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. " end="2" id="CLKD" rwaccess="RW" width="4">
    <bitenum description="32768" id="en_16_0xF" token="en_16_0xF" value="0xF"></bitenum>
    <bitenum description="16384" id="en_15_0xE" token="en_15_0xE" value="0xE"></bitenum>
    <bitenum description="8192" id="en_14_0xD" token="en_14_0xD" value="0xD"></bitenum>
    <bitenum description="4096" id="en_13_0xC" token="en_13_0xC" value="0xC"></bitenum>
    <bitenum description="2048" id="en_12_0xB" token="en_12_0xB" value="0xB"></bitenum>
    <bitenum description="1024" id="en_11_0xA" token="en_11_0xA" value="0xA"></bitenum>
    <bitenum description="512" id="en_10_0x9" token="en_10_0x9" value="0x9"></bitenum>
    <bitenum description="256" id="en_9_0x8" token="en_9_0x8" value="0x8"></bitenum>
    <bitenum description="128" id="en_8_0x7" token="en_8_0x7" value="0x7"></bitenum>
    <bitenum description="64" id="en_7_0x6" token="en_7_0x6" value="0x6"></bitenum>
    <bitenum description="32" id="en_6_0x5" token="en_6_0x5" value="0x5"></bitenum>
    <bitenum description="16" id="en_5_0x4" token="en_5_0x4" value="0x4"></bitenum>
    <bitenum description="8" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="4" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="2" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="1" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" SPICLK polarity" end="1" id="POL" rwaccess="RW" width="1">
    <bitenum description="SPICLK is held low during the active state" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="SPICLK is held high during the active state" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" SPICLK phase" end="0" id="PHA" rwaccess="RW" width="1">
    <bitenum description="Data are latched on even numbered edges of SPICLK." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data are latched on odd numbered edges of SPICLK." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH0STAT" description="This register provides status information about transmitter and receiver registers of channel 0" id="MCSPI_CH0STAT" offset="0x130" width="32">
    
  <bitfield begin="31" description=" Read returns 0" end="7" id="RESERVED_1" rwaccess="R" width="25"></bitfield>
    
  <bitfield begin="6" description=" Channel &quot;i&quot; FIFO Receive Buffer Full Status" end="6" id="RXFFF" rwaccess="R" width="1">
    <bitenum description="FIFO Receive Buffer is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Receive Buffer is not full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Channel &quot;i&quot; FIFO Receive Buffer Empty Status" end="5" id="RXFFE" rwaccess="R" width="1">
    <bitenum description="FIFO Receive Buffer is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Receive Buffer is not empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Channel &quot;i&quot; FIFO Transmit Buffer Full Status" end="4" id="TXFFF" rwaccess="R" width="1">
    <bitenum description="FIFO Transmit Buffer is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Transmit Buffer is not full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Channel &quot;i&quot; FIFO Transmit Buffer Empty Status" end="3" id="TXFFE" rwaccess="R" width="1">
    <bitenum description="FIFO Transmit Buffer is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Transmit Buffer is not empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Channel &quot;i&quot; End of transfer Status. [[br]]The definitions of beginning and end of transfer vary with master versus slave and the transfer format (Transmit/Receive modes, Turbo mode). [[br]]See dedicated chapters for details. " end="2" id="EOT" rwaccess="R" width="1">
    <bitenum description="This flag is automatically set to one at the end of an SPI transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="This flag is automatically cleared when the shift register is loaded with the data from the transmitter register (beginning of transfer)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Channel &quot;i&quot; Transmitter Register Status" end="1" id="TXS" rwaccess="R" width="1">
    <bitenum description="Register is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Register is full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Channel &quot;i&quot; Receiver Register Status" end="0" id="RXS" rwaccess="R" width="1">
    <bitenum description="Register is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Register is empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH0CTRL" description="This register is dedicated to enable the channel 0" id="MCSPI_CH0CTRL" offset="0x134" width="32">
    
  <bitfield begin="31" description=" Read returns 0" end="16" id="RESERVED_1" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description=" Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). [[br]]Then the max value reached is 4096 clock divider ratio. " end="8" id="EXTCLK" rwaccess="RW" width="8">
    <bitenum description="Clock ratio is CLKD + 1 + 4080" id="en_3_0xFF" token="en_3_0xFF" value="0xFF"></bitenum>
    <bitenum description="Clock ratio is CLKD + 1 + 16" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Clock ratio is CLKD + 1" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" Read returns 0" end="1" id="RESERVED_2" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="0" description=" Channel Enable" end="0" id="EN" rwaccess="RW" width="1">
    <bitenum description="Channel &quot;i&quot; is active" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Channel &quot;i&quot; is not active" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_TX0" description="This register contains a single SPI word to transmit on the serial link, what ever SPI word length is." id="MCSPI_TX0" offset="0x138" width="32">
    
  <bitfield begin="31" description=" Channel 0 Data to transmit" end="0" id="TDATA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_RX0" description="This register contains a single SPI word received through the serial link, what ever SPI word length is." id="MCSPI_RX0" offset="0x13C" width="32">
    
  <bitfield begin="31" description=" Channel 0 Received Data" end="0" id="RDATA" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH1CONF" description="This register is dedicated to the configuration of the channel." id="MCSPI_CH1CONF" offset="0x140" width="32">
    
  <bitfield begin="31" description=" read returns 0" end="30" id="RESERVED_1" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="29" description=" Clock divider granularity This register defines the granularity of channel clock divider: power of two or one clock cycle granularity. [[br]]When this bit is set the register MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum of 4096 clock divider ratio. [[br]]Then The clock divider ratio is a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values " end="29" id="CLKG" rwaccess="RW" width="1">
    <bitenum description="One clock cycle ganularity" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Clock granularity of power of two" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description=" FIFO enabled for receive:Only one channel can have this bit field set." end="28" id="FFER" rwaccess="RW" width="1">
    <bitenum description="The buffer is used to receive data." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="The buffer is not used to receive data." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description=" FIFO enabled for Transmit:Only one channel can have this bit field set." end="27" id="FFEW" rwaccess="RW" width="1">
    <bitenum description="The buffer is used to transmit data." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="The buffer is not used to transmit data." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="26" description=" Chip Select Time Control This [[br]]2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. " end="25" id="TCS1" rwaccess="RW" width="2">
    <bitenum description="3.5 clock cycle" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="2.5 clock cycle" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="1.5 clock cycle" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="0.5 clock cycle" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="24" description=" Start bit polarity" end="24" id="SBPOL" rwaccess="RW" width="1">
    <bitenum description="Start bit polarity is held to 1 during SPI transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Start bit polarity is held to 0 during SPI transfer." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description=" Start bit enable for SPI transfer" end="23" id="SBE" rwaccess="RW" width="1">
    <bitenum description="Start bit D/CX added before SPI transfer polarity is defined by MCSPI_CH1CONF[SBPOL]" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Default SPI transfer length as specified by WL bit field" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="22" description=" read returns 0" end="21" id="RESERVED_2" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="20" description=" Manual SPIEN assertion to keep SPIEN active between SPI words. [[br]](single channel master mode only)  " end="20" id="FORCE" rwaccess="RW" width="1">
    <bitenum description="Writing 1 into this bit drives high the SPIEN line when MCSPI_CHCONF(i)[EPOL]=0, and drives it low when MCSPI_CHCONF(i)[EPOL]=1" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing 0 into this bit drives low the SPIEN line when MCSPI_CHCONF(i)[EPOL]=0, and drives it high when MCSPI_CHCONF(i)[EPOL]=1." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description=" Turbo mode" end="19" id="TURBO" rwaccess="RW" width="1">
    <bitenum description="Turbo is activated to maximize the throughput for multi SPI words transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Turbo is deactivated (recommended for single SPI word transfer)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="18" description=" Input Select" end="18" id="IS" rwaccess="RW" width="1">
    <bitenum description="Data Line1 (SPIDAT[1]) selected for reception" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line0 (SPIDAT[0]) selected for reception." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description=" Transmission Enable for data line 1 (SPIDATAGZEN[1]) " end="17" id="DPE1" rwaccess="RW" width="1">
    <bitenum description="No transmission on Data Line1 (SPIDAT[1])" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line1 (SPIDAT[1]) selected for transmission" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description=" Transmission Enable for data line 0 (SPIDATAGZEN[0]) " end="16" id="DPE0" rwaccess="RW" width="1">
    <bitenum description="No transmission on Data Line0 (SPIDAT[0])" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line0 (SPIDAT[0]) selected for transmission" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" DMA Read request The DMA Read request line is asserted when the channel is enabled and a new data is available in the receive  register of the channel. [[br]]The DMA Read request line  is deasserted on read completion of the receive  register of the channel. " end="15" id="DMAR" rwaccess="RW" width="1">
    <bitenum description="DMA Read Request enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="DMA Read Request disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description=" DMA Write request. [[br]]The DMA Write request line is asserted when The channel is enabled and the transmitter register of the channel is empty. [[br]]The DMA Write request line is deasserted on load completion of the transmitter register of the channel. " end="14" id="DMAW" rwaccess="RW" width="1">
    <bitenum description="DMA Write Request enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="DMA Write Request disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description=" Transmit/Receive modes" end="12" id="TRM" rwaccess="RW" width="2">
    <bitenum description="Reserved" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Transmit only mode" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Receive only mode" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Transmit and Receive mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description=" SPI word length" end="7" id="WL" rwaccess="RW" width="5">
    <bitenum description="32bits : The SPI word is 32-bits long" id="en_32_0x1F" token="en_32_0x1F" value="0x1F"></bitenum>
    <bitenum description="31bits : The SPI word is 31-bits long" id="en_31_0x1E" token="en_31_0x1E" value="0x1E"></bitenum>
    <bitenum description="30bits : The SPI word is 30-bits long" id="en_30_0x1D" token="en_30_0x1D" value="0x1D"></bitenum>
    <bitenum description="29bits : The SPI word is 29-bits long" id="en_29_0x1C" token="en_29_0x1C" value="0x1C"></bitenum>
    <bitenum description="28bits : The SPI word is 28-bits long" id="en_28_0x1B" token="en_28_0x1B" value="0x1B"></bitenum>
    <bitenum description="27bits : The SPI word is 27-bits long" id="en_27_0x1A" token="en_27_0x1A" value="0x1A"></bitenum>
    <bitenum description="26bits : The SPI word is 26-bits long" id="en_26_0x19" token="en_26_0x19" value="0x19"></bitenum>
    <bitenum description="25bits : The SPI word is 25-bits long" id="en_25_0x18" token="en_25_0x18" value="0x18"></bitenum>
    <bitenum description="24bits : The SPI word is 24-bits long" id="en_24_0x17" token="en_24_0x17" value="0x17"></bitenum>
    <bitenum description="23bits : The SPI word is 23-bits long" id="en_23_0x16" token="en_23_0x16" value="0x16"></bitenum>
    <bitenum description="22bits : The SPI word is 22-bits long" id="en_22_0x15" token="en_22_0x15" value="0x15"></bitenum>
    <bitenum description="21bits : The SPI word is 21-bits long" id="en_21_0x14" token="en_21_0x14" value="0x14"></bitenum>
    <bitenum description="20bits : The SPI word is 20-bits long" id="en_20_0x13" token="en_20_0x13" value="0x13"></bitenum>
    <bitenum description="19bits : The SPI word is 19-bits long" id="en_19_0x12" token="en_19_0x12" value="0x12"></bitenum>
    <bitenum description="18bits : The SPI word is 18-bits long" id="en_18_0x11" token="en_18_0x11" value="0x11"></bitenum>
    <bitenum description="17bits : The SPI word is 17-bits long" id="en_17_0x10" token="en_17_0x10" value="0x10"></bitenum>
    <bitenum description="16bits : The SPI word is 16-bits long" id="en_16_0xF" token="en_16_0xF" value="0xF"></bitenum>
    <bitenum description="15bits : The SPI word is 15-bits long" id="en_15_0xE" token="en_15_0xE" value="0xE"></bitenum>
    <bitenum description="14bits : The SPI word is 14-bits long" id="en_14_0xD" token="en_14_0xD" value="0xD"></bitenum>
    <bitenum description="13bits : The SPI word is 13-bits long" id="en_13_0xC" token="en_13_0xC" value="0xC"></bitenum>
    <bitenum description="12bits : The SPI word is 12-bits long" id="en_12_0xB" token="en_12_0xB" value="0xB"></bitenum>
    <bitenum description="11bits : The SPI word is 11-bits long" id="en_11_0xA" token="en_11_0xA" value="0xA"></bitenum>
    <bitenum description="10bits : The SPI word is 10-bits long" id="en_10_0x9" token="en_10_0x9" value="0x9"></bitenum>
    <bitenum description="9bits : The SPI word is 9-bits long" id="en_9_0x8" token="en_9_0x8" value="0x8"></bitenum>
    <bitenum description="8bits : The SPI word is 8-bits long" id="en_8_0x7" token="en_8_0x7" value="0x7"></bitenum>
    <bitenum description="7bits : The SPI word is 7-bits long" id="en_7_0x6" token="en_7_0x6" value="0x6"></bitenum>
    <bitenum description="6bits : The SPI word is 6-bits long" id="en_6_0x5" token="en_6_0x5" value="0x5"></bitenum>
    <bitenum description="5bits : The SPI word is 5-bits long" id="en_5_0x4" token="en_5_0x4" value="0x4"></bitenum>
    <bitenum description="4bits : The SPI word is 4-bits long" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Reserved" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Reserved" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Reserved" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" SPIEN polarity" end="6" id="EPOL" rwaccess="RW" width="1">
    <bitenum description="SPIEN is held low during the active state." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="SPIEN is held high during the active state." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Frequency divider for SPICLK. [[br]](only when the module is a Master SPI device). [[br]]A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a [[br]]4-bit value, and results in a new clock SPICLK available to shift-in and shift-out data. [[br]]By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared, Otherwise this register is the 4 LSB bit of a [[br]]12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. " end="2" id="CLKD" rwaccess="RW" width="4">
    <bitenum description="32768" id="en_16_0xF" token="en_16_0xF" value="0xF"></bitenum>
    <bitenum description="16384" id="en_15_0xE" token="en_15_0xE" value="0xE"></bitenum>
    <bitenum description="8192" id="en_14_0xD" token="en_14_0xD" value="0xD"></bitenum>
    <bitenum description="4096" id="en_13_0xC" token="en_13_0xC" value="0xC"></bitenum>
    <bitenum description="2048" id="en_12_0xB" token="en_12_0xB" value="0xB"></bitenum>
    <bitenum description="1024" id="en_11_0xA" token="en_11_0xA" value="0xA"></bitenum>
    <bitenum description="512" id="en_10_0x9" token="en_10_0x9" value="0x9"></bitenum>
    <bitenum description="256" id="en_9_0x8" token="en_9_0x8" value="0x8"></bitenum>
    <bitenum description="128" id="en_8_0x7" token="en_8_0x7" value="0x7"></bitenum>
    <bitenum description="64" id="en_7_0x6" token="en_7_0x6" value="0x6"></bitenum>
    <bitenum description="32" id="en_6_0x5" token="en_6_0x5" value="0x5"></bitenum>
    <bitenum description="16" id="en_5_0x4" token="en_5_0x4" value="0x4"></bitenum>
    <bitenum description="8" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="4" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="2" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="1" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" SPICLK polarity" end="1" id="POL" rwaccess="RW" width="1">
    <bitenum description="SPICLK is held low during the active state" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="SPICLK is held high during the active state" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" SPICLK phase" end="0" id="PHA" rwaccess="RW" width="1">
    <bitenum description="Data are latched on even numbered edges of SPICLK." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data are latched on odd numbered edges of SPICLK." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH1STAT" description="This register provides status information about transmitter and receiver registers of channel 1" id="MCSPI_CH1STAT" offset="0x144" width="32">
    
  <bitfield begin="31" description=" Read returns 0" end="7" id="RESERVED_1" rwaccess="R" width="25"></bitfield>
    
  <bitfield begin="6" description=" Channel &quot;i&quot; FIFO Receive Buffer Full Status" end="6" id="RXFFF" rwaccess="R" width="1">
    <bitenum description="FIFO Receive Buffer is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Receive Buffer is not full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Channel &quot;i&quot; FIFO Receive Buffer Empty Status" end="5" id="RXFFE" rwaccess="R" width="1">
    <bitenum description="FIFO Receive Buffer is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Receive Buffer is not empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Channel &quot;i&quot; FIFO Transmit Buffer Full Status" end="4" id="TXFFF" rwaccess="R" width="1">
    <bitenum description="FIFO Transmit Buffer is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Transmit Buffer is not full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Channel &quot;i&quot; FIFO Transmit Buffer Empty Status" end="3" id="TXFFE" rwaccess="R" width="1">
    <bitenum description="FIFO Transmit Buffer is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Transmit Buffer is not empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Channel &quot;i&quot; End of transfer Status. [[br]]The definitions of beginning and end of transfer vary with master versus slave and the transfer format (Transmit/Receive modes, Turbo mode). [[br]]See dedicated chapters for details. " end="2" id="EOT" rwaccess="R" width="1">
    <bitenum description="This flag is automatically set to one at the end of an SPI transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="This flag is automatically cleared when the shift register is loaded with the data from the transmitter register (beginning of transfer)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Channel &quot;i&quot; Transmitter Register Status" end="1" id="TXS" rwaccess="R" width="1">
    <bitenum description="Register is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Register is full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Channel &quot;i&quot; Receiver Register Status" end="0" id="RXS" rwaccess="R" width="1">
    <bitenum description="Register is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Register is empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH1CTRL" description="This register is dedicated to enable the channel 1" id="MCSPI_CH1CTRL" offset="0x148" width="32">
    
  <bitfield begin="31" description=" Read returns 0" end="16" id="RESERVED_1" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description=" Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). [[br]]Then the max value reached is 4096 clock divider ratio. " end="8" id="EXTCLK" rwaccess="RW" width="8">
    <bitenum description="Clock ratio is CLKD + 1 + 4080" id="en_3_0xFF" token="en_3_0xFF" value="0xFF"></bitenum>
    <bitenum description="Clock ratio is CLKD + 1 + 16" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Clock ratio is CLKD + 1" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" Read returns 0" end="1" id="RESERVED_2" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="0" description=" Channel Enable" end="0" id="EN" rwaccess="RW" width="1">
    <bitenum description="Channel &quot;i&quot; is active" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Channel &quot;i&quot; is not active" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_TX1" description="This register contains a single SPI word to transmit on the serial link, what ever SPI word length is." id="MCSPI_TX1" offset="0x14C" width="32">
    
  <bitfield begin="31" description=" Channel 1 Data to transmit" end="0" id="TDATA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_RX1" description="This register contains a single SPI word received through the serial link, what ever SPI word length is." id="MCSPI_RX1" offset="0x150" width="32">
    
  <bitfield begin="31" description=" Channel 1 Received Data" end="0" id="RDATA" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH2CONF" description="This register is dedicated to the configuration of the channel 2" id="MCSPI_CH2CONF" offset="0x154" width="32">
    
  <bitfield begin="31" description=" read returns 0" end="30" id="RESERVED_1" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="29" description=" Clock divider granularity This register defines the granularity of channel clock divider: power of two or one clock cycle granularity. [[br]]When this bit is set the register MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum of 4096 clock divider ratio. [[br]]Then The clock divider ratio is a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values " end="29" id="CLKG" rwaccess="RW" width="1">
    <bitenum description="One clock cycle ganularity" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Clock granularity of power of two" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description=" FIFO enabled for receive:Only one channel can have this bit field set." end="28" id="FFER" rwaccess="RW" width="1">
    <bitenum description="The buffer is used to receive data." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="The buffer is not used to receive data." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description=" FIFO enabled for Transmit:Only one channel can have this bit field set." end="27" id="FFEW" rwaccess="RW" width="1">
    <bitenum description="The buffer is used to transmit data." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="The buffer is not used to transmit data." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="26" description=" Chip Select Time Control This [[br]]2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. " end="25" id="TCS2" rwaccess="RW" width="2">
    <bitenum description="3.5 clock cycle" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="2.5 clock cycle" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="1.5 clock cycle" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="0.5 clock cycle" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="24" description=" Start bit polarity" end="24" id="SBPOL" rwaccess="RW" width="1">
    <bitenum description="Start bit polarity is held to 1 during SPI transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Start bit polarity is held to 0 during SPI transfer." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description=" Start bit enable for SPI transfer" end="23" id="SBE" rwaccess="RW" width="1">
    <bitenum description="Start bit D/CX added before SPI transfer polarity is defined by MCSPI_CH2CONF[SBPOL]" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Default SPI transfer length as specified by WL bit field" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="22" description=" read returns 0" end="21" id="RESERVED_2" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="20" description=" Manual SPIEN assertion to keep SPIEN active between SPI words. [[br]](single channel master mode only)  " end="20" id="FORCE" rwaccess="RW" width="1">
    <bitenum description="Writing 1 into this bit drives high the SPIEN line when MCSPI_CHCONF(i)[EPOL]=0, and drives it low when MCSPI_CHCONF(i)[EPOL]=1" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing 0 into this bit drives low the SPIEN line when MCSPI_CHCONF(i)[EPOL]=0, and drives it high when MCSPI_CHCONF(i)[EPOL]=1." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description=" Turbo mode" end="19" id="TURBO" rwaccess="RW" width="1">
    <bitenum description="Turbo is activated to maximize the throughput for multi SPI words transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Turbo is deactivated (recommended for single SPI word transfer)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="18" description=" Input Select" end="18" id="IS" rwaccess="RW" width="1">
    <bitenum description="Data Line1 (SPIDAT[1]) selected for reception" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line0 (SPIDAT[0]) selected for reception." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description=" Transmission Enable for data line 1 (SPIDATAGZEN[1]) " end="17" id="DPE1" rwaccess="RW" width="1">
    <bitenum description="No transmission on Data Line1 (SPIDAT[1])" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line1 (SPIDAT[1]) selected for transmission" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description=" Transmission Enable for data line 0 (SPIDATAGZEN[0]) " end="16" id="DPE0" rwaccess="RW" width="1">
    <bitenum description="No transmission on Data Line0 (SPIDAT[0])" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line0 (SPIDAT[0]) selected for transmission" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" DMA Read request The DMA Read request line is asserted when the channel is enabled and a new data is available in the receive  register of the channel. [[br]]The DMA Read request line  is deasserted on read completion of the receive  register of the channel. " end="15" id="DMAR" rwaccess="RW" width="1">
    <bitenum description="DMA Read Request enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="DMA Read Request disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description=" DMA Write request. [[br]]The DMA Write request line is asserted when The channel is enabled and the transmitter register of the channel is empty. [[br]]The DMA Write request line is deasserted on load completion of the transmitter register of the channel. " end="14" id="DMAW" rwaccess="RW" width="1">
    <bitenum description="DMA Write Request enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="DMA Write Request disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description=" Transmit/Receive modes" end="12" id="TRM" rwaccess="RW" width="2">
    <bitenum description="Reserved" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Transmit only mode" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Receive only mode" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Transmit and Receive mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description=" SPI word length" end="7" id="WL" rwaccess="RW" width="5">
    <bitenum description="32bits : The SPI word is 32-bits long" id="en_32_0x1F" token="en_32_0x1F" value="0x1F"></bitenum>
    <bitenum description="31bits : The SPI word is 31-bits long" id="en_31_0x1E" token="en_31_0x1E" value="0x1E"></bitenum>
    <bitenum description="30bits : The SPI word is 30-bits long" id="en_30_0x1D" token="en_30_0x1D" value="0x1D"></bitenum>
    <bitenum description="29bits : The SPI word is 29-bits long" id="en_29_0x1C" token="en_29_0x1C" value="0x1C"></bitenum>
    <bitenum description="28bits : The SPI word is 28-bits long" id="en_28_0x1B" token="en_28_0x1B" value="0x1B"></bitenum>
    <bitenum description="27bits : The SPI word is 27-bits long" id="en_27_0x1A" token="en_27_0x1A" value="0x1A"></bitenum>
    <bitenum description="26bits : The SPI word is 26-bits long" id="en_26_0x19" token="en_26_0x19" value="0x19"></bitenum>
    <bitenum description="25bits : The SPI word is 25-bits long" id="en_25_0x18" token="en_25_0x18" value="0x18"></bitenum>
    <bitenum description="24bits : The SPI word is 24-bits long" id="en_24_0x17" token="en_24_0x17" value="0x17"></bitenum>
    <bitenum description="23bits : The SPI word is 23-bits long" id="en_23_0x16" token="en_23_0x16" value="0x16"></bitenum>
    <bitenum description="22bits : The SPI word is 22-bits long" id="en_22_0x15" token="en_22_0x15" value="0x15"></bitenum>
    <bitenum description="21bits : The SPI word is 21-bits long" id="en_21_0x14" token="en_21_0x14" value="0x14"></bitenum>
    <bitenum description="20bits : The SPI word is 20-bits long" id="en_20_0x13" token="en_20_0x13" value="0x13"></bitenum>
    <bitenum description="19bits : The SPI word is 19-bits long" id="en_19_0x12" token="en_19_0x12" value="0x12"></bitenum>
    <bitenum description="18bits : The SPI word is 18-bits long" id="en_18_0x11" token="en_18_0x11" value="0x11"></bitenum>
    <bitenum description="17bits : The SPI word is 17-bits long" id="en_17_0x10" token="en_17_0x10" value="0x10"></bitenum>
    <bitenum description="16bits : The SPI word is 16-bits long" id="en_16_0xF" token="en_16_0xF" value="0xF"></bitenum>
    <bitenum description="15bits : The SPI word is 15-bits long" id="en_15_0xE" token="en_15_0xE" value="0xE"></bitenum>
    <bitenum description="14bits : The SPI word is 14-bits long" id="en_14_0xD" token="en_14_0xD" value="0xD"></bitenum>
    <bitenum description="13bits : The SPI word is 13-bits long" id="en_13_0xC" token="en_13_0xC" value="0xC"></bitenum>
    <bitenum description="12bits : The SPI word is 12-bits long" id="en_12_0xB" token="en_12_0xB" value="0xB"></bitenum>
    <bitenum description="11bits : The SPI word is 11-bits long" id="en_11_0xA" token="en_11_0xA" value="0xA"></bitenum>
    <bitenum description="10bits : The SPI word is 10-bits long" id="en_10_0x9" token="en_10_0x9" value="0x9"></bitenum>
    <bitenum description="9bits : The SPI word is 9-bits long" id="en_9_0x8" token="en_9_0x8" value="0x8"></bitenum>
    <bitenum description="8bits : The SPI word is 8-bits long" id="en_8_0x7" token="en_8_0x7" value="0x7"></bitenum>
    <bitenum description="7bits : The SPI word is 7-bits long" id="en_7_0x6" token="en_7_0x6" value="0x6"></bitenum>
    <bitenum description="6bits : The SPI word is 6-bits long" id="en_6_0x5" token="en_6_0x5" value="0x5"></bitenum>
    <bitenum description="5bits : The SPI word is 5-bits long" id="en_5_0x4" token="en_5_0x4" value="0x4"></bitenum>
    <bitenum description="4bits : The SPI word is 4-bits long" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Reserved" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Reserved" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Reserved" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" SPIEN polarity" end="6" id="EPOL" rwaccess="RW" width="1">
    <bitenum description="SPIEN is held low during the active state." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="SPIEN is held high during the active state." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Frequency divider for SPICLK. [[br]](only when the module is a Master SPI device). [[br]]A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a [[br]]4-bit value, and results in a new clock SPICLK available to shift-in and shift-out data. [[br]]By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared, Otherwise this register is the 4 LSB bit of a [[br]]12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. " end="2" id="CLKD" rwaccess="RW" width="4">
    <bitenum description="32768" id="en_16_0xF" token="en_16_0xF" value="0xF"></bitenum>
    <bitenum description="16384" id="en_15_0xE" token="en_15_0xE" value="0xE"></bitenum>
    <bitenum description="8192" id="en_14_0xD" token="en_14_0xD" value="0xD"></bitenum>
    <bitenum description="4096" id="en_13_0xC" token="en_13_0xC" value="0xC"></bitenum>
    <bitenum description="2048" id="en_12_0xB" token="en_12_0xB" value="0xB"></bitenum>
    <bitenum description="1024" id="en_11_0xA" token="en_11_0xA" value="0xA"></bitenum>
    <bitenum description="512" id="en_10_0x9" token="en_10_0x9" value="0x9"></bitenum>
    <bitenum description="256" id="en_9_0x8" token="en_9_0x8" value="0x8"></bitenum>
    <bitenum description="128" id="en_8_0x7" token="en_8_0x7" value="0x7"></bitenum>
    <bitenum description="64" id="en_7_0x6" token="en_7_0x6" value="0x6"></bitenum>
    <bitenum description="32" id="en_6_0x5" token="en_6_0x5" value="0x5"></bitenum>
    <bitenum description="16" id="en_5_0x4" token="en_5_0x4" value="0x4"></bitenum>
    <bitenum description="8" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="4" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="2" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="1" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" SPICLK polarity" end="1" id="POL" rwaccess="RW" width="1">
    <bitenum description="SPICLK is held low during the active state" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="SPICLK is held high during the active state" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" SPICLK phase" end="0" id="PHA" rwaccess="RW" width="1">
    <bitenum description="Data are latched on even numbered edges of SPICLK." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data are latched on odd numbered edges of SPICLK." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH2STAT" description="This register provides status information about transmitter and receiver registers of channel 2" id="MCSPI_CH2STAT" offset="0x158" width="32">
    
  <bitfield begin="31" description=" Read returns 0" end="7" id="RESERVED_1" rwaccess="R" width="25"></bitfield>
    
  <bitfield begin="6" description=" Channel &quot;i&quot; FIFO Receive Buffer Full Status" end="6" id="RXFFF" rwaccess="R" width="1">
    <bitenum description="FIFO Receive Buffer is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Receive Buffer is not full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Channel &quot;i&quot; FIFO Receive Buffer Empty Status" end="5" id="RXFFE" rwaccess="R" width="1">
    <bitenum description="FIFO Receive Buffer is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Receive Buffer is not empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Channel &quot;i&quot; FIFO Transmit Buffer Full Status" end="4" id="TXFFF" rwaccess="R" width="1">
    <bitenum description="FIFO Transmit Buffer is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Transmit Buffer is not full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Channel &quot;i&quot; FIFO Transmit Buffer Empty Status" end="3" id="TXFFE" rwaccess="R" width="1">
    <bitenum description="FIFO Transmit Buffer is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Transmit Buffer is not empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Channel &quot;i&quot; End of transfer Status. [[br]]The definitions of beginning and end of transfer vary with master versus slave and the transfer format (Transmit/Receive modes, Turbo mode). [[br]]See dedicated chapters for details. " end="2" id="EOT" rwaccess="R" width="1">
    <bitenum description="This flag is automatically set to one at the end of an SPI transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="This flag is automatically cleared when the shift register is loaded with the data from the transmitter register (beginning of transfer)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Channel &quot;i&quot; Transmitter Register Status" end="1" id="TXS" rwaccess="R" width="1">
    <bitenum description="Register is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Register is full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Channel &quot;i&quot; Receiver Register Status" end="0" id="RXS" rwaccess="R" width="1">
    <bitenum description="Register is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Register is empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH2CTRL" description="This register is dedicated to enable the channel 2" id="MCSPI_CH2CTRL" offset="0x15C" width="32">
    
  <bitfield begin="31" description=" Read returns 0" end="16" id="RESERVED_1" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description=" Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). [[br]]Then the max value reached is 4096 clock divider ratio. " end="8" id="EXTCLK" rwaccess="RW" width="8">
    <bitenum description="Clock ratio is CLKD + 1 + 4080" id="en_3_0xFF" token="en_3_0xFF" value="0xFF"></bitenum>
    <bitenum description="Clock ratio is CLKD + 1 + 16" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Clock ratio is CLKD + 1" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" Read returns 0" end="1" id="RESERVED_2" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="0" description=" Channel Enable" end="0" id="EN" rwaccess="RW" width="1">
    <bitenum description="Channel &quot;i&quot; is active" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Channel &quot;i&quot; is not active" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_TX2" description="This register contains a single SPI word to transmit on the serial link, what ever SPI word length is." id="MCSPI_TX2" offset="0x160" width="32">
    
  <bitfield begin="31" description=" Channel 2 Data to transmit" end="0" id="TDATA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_RX2" description="This register contains a single SPI word received through the serial link, what ever SPI word length is." id="MCSPI_RX2" offset="0x164" width="32">
    
  <bitfield begin="31" description=" Channel 2 Received Data" end="0" id="RDATA" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH3CONF" description="This register is dedicated to the configuration of the channel 3" id="MCSPI_CH3CONF" offset="0x168" width="32">
    
  <bitfield begin="31" description=" read returns 0" end="30" id="RESERVED_1" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="29" description=" Clock divider granularity This register defines the granularity of channel clock divider: power of two or one clock cycle granularity. [[br]]When this bit is set the register MCSPI_CHCTRL[EXTCLK] must be configured to reach a maximum of 4096 clock divider ratio. [[br]]Then The clock divider ratio is a concatenation of MCSPI_CHCONF[CLKD] and  MCSPI_CHCTRL[EXTCLK] values " end="29" id="CLKG" rwaccess="RW" width="1">
    <bitenum description="One clock cycle ganularity" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Clock granularity of power of two" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description=" FIFO enabled for receive:Only one channel can have this bit field set." end="28" id="FFER" rwaccess="RW" width="1">
    <bitenum description="The buffer is used to receive data." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="The buffer is not used to receive data." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description=" FIFO enabled for Transmit:Only one channel can have this bit field set." end="27" id="FFEW" rwaccess="RW" width="1">
    <bitenum description="The buffer is used to transmit data." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="The buffer is not used to transmit data." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="26" description=" Chip Select Time Control This [[br]]2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. " end="25" id="TCS3" rwaccess="RW" width="2">
    <bitenum description="3.5 clock cycle" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="2.5 clock cycle" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="1.5 clock cycle" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="0.5 clock cycle" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="24" description=" Start bit polarity" end="24" id="SBPOL" rwaccess="RW" width="1">
    <bitenum description="Start bit polarity is held to 1 during SPI transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Start bit polarity is held to 0 during SPI transfer." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description=" Start bit enable for SPI transfer" end="23" id="SBE" rwaccess="RW" width="1">
    <bitenum description="Start bit D/CX added before SPI transfer polarity is defined by MCSPI_CH3CONF[SBPOL]" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Default SPI transfer length as specified by WL bit field" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="22" description=" read returns 0" end="21" id="RESERVED_2" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="20" description=" Manual SPIEN assertion to keep SPIEN active between SPI words. [[br]](single channel master mode only)  " end="20" id="FORCE" rwaccess="RW" width="1">
    <bitenum description="Writing 1 into this bit drives high the SPIEN line when MCSPI_CHCONF(i)[EPOL]=0, and drives it low when MCSPI_CHCONF(i)[EPOL]=1" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Writing 0 into this bit drives low the SPIEN line when MCSPI_CHCONF(i)[EPOL]=0, and drives it high when MCSPI_CHCONF(i)[EPOL]=1." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description=" Turbo mode" end="19" id="TURBO" rwaccess="RW" width="1">
    <bitenum description="Turbo is activated to maximize the throughput for multi SPI words transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Turbo is deactivated (recommended for single SPI word transfer)" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="18" description=" Input Select" end="18" id="IS" rwaccess="RW" width="1">
    <bitenum description="Data Line1 (SPIDAT[1]) selected for reception" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line0 (SPIDAT[0]) selected for reception." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description=" Transmission Enable for data line 1 (SPIDATAGZEN[1]) " end="17" id="DPE1" rwaccess="RW" width="1">
    <bitenum description="No transmission on Data Line1 (SPIDAT[1])" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line1 (SPIDAT[1]) selected for transmission" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description=" Transmission Enable for data line 0 (SPIDATAGZEN[0]) " end="16" id="DPE0" rwaccess="RW" width="1">
    <bitenum description="No transmission on Data Line0 (SPIDAT[0])" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data Line0 (SPIDAT[0]) selected for transmission" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" DMA Read request The DMA Read request line is asserted when the channel is enabled and a new data is available in the receive  register of the channel. [[br]]The DMA Read request line  is deasserted on read completion of the receive  register of the channel. " end="15" id="DMAR" rwaccess="RW" width="1">
    <bitenum description="DMA Read Request enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="DMA Read Request disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description=" DMA Write request. [[br]]The DMA Write request line is asserted when The channel is enabled and the transmitter register of the channel is empty. [[br]]The DMA Write request line is deasserted on load completion of the transmitter register of the channel. " end="14" id="DMAW" rwaccess="RW" width="1">
    <bitenum description="DMA Write Request enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="DMA Write Request disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description=" Transmit/Receive modes" end="12" id="TRM" rwaccess="RW" width="2">
    <bitenum description="Reserved" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Transmit only mode" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Receive only mode" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Transmit and Receive mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description=" SPI word length" end="7" id="WL" rwaccess="RW" width="5">
    <bitenum description="32bits : The SPI word is 32-bits long" id="en_32_0x1F" token="en_32_0x1F" value="0x1F"></bitenum>
    <bitenum description="31bits : The SPI word is 31-bits long" id="en_31_0x1E" token="en_31_0x1E" value="0x1E"></bitenum>
    <bitenum description="30bits : The SPI word is 30-bits long" id="en_30_0x1D" token="en_30_0x1D" value="0x1D"></bitenum>
    <bitenum description="29bits : The SPI word is 29-bits long" id="en_29_0x1C" token="en_29_0x1C" value="0x1C"></bitenum>
    <bitenum description="28bits : The SPI word is 28-bits long" id="en_28_0x1B" token="en_28_0x1B" value="0x1B"></bitenum>
    <bitenum description="27bits : The SPI word is 27-bits long" id="en_27_0x1A" token="en_27_0x1A" value="0x1A"></bitenum>
    <bitenum description="26bits : The SPI word is 26-bits long" id="en_26_0x19" token="en_26_0x19" value="0x19"></bitenum>
    <bitenum description="25bits : The SPI word is 25-bits long" id="en_25_0x18" token="en_25_0x18" value="0x18"></bitenum>
    <bitenum description="24bits : The SPI word is 24-bits long" id="en_24_0x17" token="en_24_0x17" value="0x17"></bitenum>
    <bitenum description="23bits : The SPI word is 23-bits long" id="en_23_0x16" token="en_23_0x16" value="0x16"></bitenum>
    <bitenum description="22bits : The SPI word is 22-bits long" id="en_22_0x15" token="en_22_0x15" value="0x15"></bitenum>
    <bitenum description="21bits : The SPI word is 21-bits long" id="en_21_0x14" token="en_21_0x14" value="0x14"></bitenum>
    <bitenum description="20bits : The SPI word is 20-bits long" id="en_20_0x13" token="en_20_0x13" value="0x13"></bitenum>
    <bitenum description="19bits : The SPI word is 19-bits long" id="en_19_0x12" token="en_19_0x12" value="0x12"></bitenum>
    <bitenum description="18bits : The SPI word is 18-bits long" id="en_18_0x11" token="en_18_0x11" value="0x11"></bitenum>
    <bitenum description="17bits : The SPI word is 17-bits long" id="en_17_0x10" token="en_17_0x10" value="0x10"></bitenum>
    <bitenum description="16bits : The SPI word is 16-bits long" id="en_16_0xF" token="en_16_0xF" value="0xF"></bitenum>
    <bitenum description="15bits : The SPI word is 15-bits long" id="en_15_0xE" token="en_15_0xE" value="0xE"></bitenum>
    <bitenum description="14bits : The SPI word is 14-bits long" id="en_14_0xD" token="en_14_0xD" value="0xD"></bitenum>
    <bitenum description="13bits : The SPI word is 13-bits long" id="en_13_0xC" token="en_13_0xC" value="0xC"></bitenum>
    <bitenum description="12bits : The SPI word is 12-bits long" id="en_12_0xB" token="en_12_0xB" value="0xB"></bitenum>
    <bitenum description="11bits : The SPI word is 11-bits long" id="en_11_0xA" token="en_11_0xA" value="0xA"></bitenum>
    <bitenum description="10bits : The SPI word is 10-bits long" id="en_10_0x9" token="en_10_0x9" value="0x9"></bitenum>
    <bitenum description="9bits : The SPI word is 9-bits long" id="en_9_0x8" token="en_9_0x8" value="0x8"></bitenum>
    <bitenum description="8bits : The SPI word is 8-bits long" id="en_8_0x7" token="en_8_0x7" value="0x7"></bitenum>
    <bitenum description="7bits : The SPI word is 7-bits long" id="en_7_0x6" token="en_7_0x6" value="0x6"></bitenum>
    <bitenum description="6bits : The SPI word is 6-bits long" id="en_6_0x5" token="en_6_0x5" value="0x5"></bitenum>
    <bitenum description="5bits : The SPI word is 5-bits long" id="en_5_0x4" token="en_5_0x4" value="0x4"></bitenum>
    <bitenum description="4bits : The SPI word is 4-bits long" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Reserved" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Reserved" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Reserved" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" SPIEN polarity" end="6" id="EPOL" rwaccess="RW" width="1">
    <bitenum description="SPIEN is held low during the active state." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="SPIEN is held high during the active state." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Frequency divider for SPICLK. [[br]](only when the module is a Master SPI device). [[br]]A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a [[br]]4-bit value, and results in a new clock SPICLK available to shift-in and shift-out data. [[br]]By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared, Otherwise this register is the 4 LSB bit of a [[br]]12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. " end="2" id="CLKD" rwaccess="RW" width="4">
    <bitenum description="32768" id="en_16_0xF" token="en_16_0xF" value="0xF"></bitenum>
    <bitenum description="16384" id="en_15_0xE" token="en_15_0xE" value="0xE"></bitenum>
    <bitenum description="8192" id="en_14_0xD" token="en_14_0xD" value="0xD"></bitenum>
    <bitenum description="4096" id="en_13_0xC" token="en_13_0xC" value="0xC"></bitenum>
    <bitenum description="2048" id="en_12_0xB" token="en_12_0xB" value="0xB"></bitenum>
    <bitenum description="1024" id="en_11_0xA" token="en_11_0xA" value="0xA"></bitenum>
    <bitenum description="512" id="en_10_0x9" token="en_10_0x9" value="0x9"></bitenum>
    <bitenum description="256" id="en_9_0x8" token="en_9_0x8" value="0x8"></bitenum>
    <bitenum description="128" id="en_8_0x7" token="en_8_0x7" value="0x7"></bitenum>
    <bitenum description="64" id="en_7_0x6" token="en_7_0x6" value="0x6"></bitenum>
    <bitenum description="32" id="en_6_0x5" token="en_6_0x5" value="0x5"></bitenum>
    <bitenum description="16" id="en_5_0x4" token="en_5_0x4" value="0x4"></bitenum>
    <bitenum description="8" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="4" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="2" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="1" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" SPICLK polarity" end="1" id="POL" rwaccess="RW" width="1">
    <bitenum description="SPICLK is held low during the active state" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="SPICLK is held high during the active state" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" SPICLK phase" end="0" id="PHA" rwaccess="RW" width="1">
    <bitenum description="Data are latched on even numbered edges of SPICLK." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Data are latched on odd numbered edges of SPICLK." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH3STAT" description="This register provides status information about transmitter and receiver registers of channel 3" id="MCSPI_CH3STAT" offset="0x16C" width="32">
    
  <bitfield begin="31" description=" Read returns 0" end="7" id="RESERVED_1" rwaccess="R" width="25"></bitfield>
    
  <bitfield begin="6" description=" Channel &quot;i&quot; FIFO Receive Buffer Full Status" end="6" id="RXFFF" rwaccess="R" width="1">
    <bitenum description="FIFO Receive Buffer is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Receive Buffer is not full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Channel &quot;i&quot; FIFO Receive Buffer Empty Status" end="5" id="RXFFE" rwaccess="R" width="1">
    <bitenum description="FIFO Receive Buffer is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Receive Buffer is not empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Channel &quot;i&quot; FIFO Transmit Buffer Full Status" end="4" id="TXFFF" rwaccess="R" width="1">
    <bitenum description="FIFO Transmit Buffer is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Transmit Buffer is not full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Channel &quot;i&quot; FIFO Transmit Buffer Empty Status" end="3" id="TXFFE" rwaccess="R" width="1">
    <bitenum description="FIFO Transmit Buffer is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="FIFO Transmit Buffer is not empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Channel &quot;i&quot; End of transfer Status. [[br]]The definitions of beginning and end of transfer vary with master versus slave and the transfer format (Transmit/Receive modes, Turbo mode). [[br]]See dedicated chapters for details. " end="2" id="EOT" rwaccess="R" width="1">
    <bitenum description="This flag is automatically set to one at the end of an SPI transfer." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="This flag is automatically cleared when the shift register is loaded with the data from the transmitter register (beginning of transfer)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Channel &quot;i&quot; Transmitter Register Status" end="1" id="TXS" rwaccess="R" width="1">
    <bitenum description="Register is empty" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Register is full" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Channel &quot;i&quot; Receiver Register Status" end="0" id="RXS" rwaccess="R" width="1">
    <bitenum description="Register is full" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Register is empty" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_CH3CTRL" description="This register is dedicated to enable the channel 3" id="MCSPI_CH3CTRL" offset="0x170" width="32">
    
  <bitfield begin="31" description=" Read returns 0" end="16" id="RESERVED_1" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description=" Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). [[br]]Then the max value reached is 4096 clock divider ratio. " end="8" id="EXTCLK" rwaccess="RW" width="8">
    <bitenum description="Clock ratio is CLKD + 1 + 4080" id="en_3_0xFF" token="en_3_0xFF" value="0xFF"></bitenum>
    <bitenum description="Clock ratio is CLKD + 1 + 16" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Clock ratio is CLKD + 1" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" Read returns 0" end="1" id="RESERVED_2" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="0" description=" Channel Enable" end="0" id="EN" rwaccess="RW" width="1">
    <bitenum description="Channel &quot;i&quot; is active" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Channel &quot;i&quot; is not active" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_TX3" description="This register contains a single SPI word to transmit on the serial link, what ever SPI word length is." id="MCSPI_TX3" offset="0x174" width="32">
    
  <bitfield begin="31" description=" Channel 3 Data to transmit" end="0" id="TDATA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_RX3" description="This register contains a single SPI word received through the serial link, what ever SPI word length is." id="MCSPI_RX3" offset="0x178" width="32">
    
  <bitfield begin="31" description=" Channel 3 Received Data" end="0" id="RDATA" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_XFERLEVEL" description="This register provides transfer levels needed while using FIFO buffer during transfer." id="MCSPI_XFERLEVEL" offset="0x17C" width="32">
    
  <bitfield begin="31" description=" Spi word counterThis register holds the programmable value of number of SPI word to be transferred on channel which is using the FIFO buffer.When transfer had started, a read back in this register returns the current SPI word transfer index." end="16" id="WCNT" rwaccess="RW" width="16">
    <bitenum description="65535word : 65535 spi word" id="en_4_0xFFFF" token="en_4_0xFFFF" value="0xFFFF"></bitenum>
    <bitenum description="65534word : 65534 spi word" id="en_3_0xFFFE" token="en_3_0xFFFE" value="0xFFFE"></bitenum>
    <bitenum description="1word : one word" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Counter not used" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" Buffer Almost Full This register holds the programmable almost full level value used to determine almost full buffer condition. [[br]]If the user wants an interrupt or a DMA read request to be issued during a receive operation when the data buffer holds at least n bytes, then the buffer MCSPI_MODULCTRL[AFL] must be set with n-1.The size of this register is defined by the generic parameter FFNBYTE. " end="8" id="AFL" rwaccess="RW" width="8">
    <bitenum description="256bytes : 256bytes" id="en_4_0xFF" token="en_4_0xFF" value="0xFF"></bitenum>
    <bitenum description="255bytes : 255bytes" id="en_3_0xFE" token="en_3_0xFE" value="0xFE"></bitenum>
    <bitenum description="2bytes : 2 bytes" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="1byte : one byte" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" Buffer Almost EmptyThis register holds the programmable almost empty level value used to determine almost empty buffer condition. [[br]]If the user wants an interrupt or a DMA write request to be issued during a transmit operation when the data buffer is able to receive n bytes, then the buffer MCSPI_MODULCTRL[AEL] must be set with n-1. " end="0" id="AEL" rwaccess="RW" width="8">
    <bitenum description="256bytes : 256bytes" id="en_4_0xFF" token="en_4_0xFF" value="0xFF"></bitenum>
    <bitenum description="255bytes : 255 bytes" id="en_3_0xFE" token="en_3_0xFE" value="0xFE"></bitenum>
    <bitenum description="2bytes : 2 bytes" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="1byte : one byte" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MCSPI_DAFTX" description="This register contains the SPI words to transmit on the serial link when FIFO used and DMA address is aligned on 256 bit.This register is an image of one of MCSPI_TX(i) register corresponding to the channel which have its FIFO enabled." id="MCSPI_DAFTX" offset="0x180" width="32">
    
  <bitfield begin="31" description=" FIFO Data to transmit with DMA 256 bit aligned address. [[br]]This Register is only is used when MCSPI_MODULCTRL[FDAA] is set to &quot;1&quot; and only one of the MCSPI_CH(i)CONF[FFEW] of enabled channels is set. [[br]]If these conditions are not respected any access to this register return a null value." end="0" id="DAFTDATA" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="MCSPI_DAFRX" description="This register contains the SPI words to received on the serial link when FIFO used and DMA address is aligned on 256 bit.This register is an image of one of MCSPI_RX(i) register corresponding to the channel which have its FIFO enabled." id="MCSPI_DAFRX" offset="0x1A0" width="32">
    
  <bitfield begin="31" description=" FIFO Data to transmit with DMA 256 bit aligned address. [[br]]This Register is only is used when MCSPI_MODULCTRL[FDAA] is set to &quot;1&quot; and only one of the MCSPI_CH(i)CONF[FFEW] of enabled channels is set. [[br]]If these conditions are not respected any access to this register return a null value." end="0" id="DAFRDATA" rwaccess="R" width="32"></bitfield>
  </register>
</module>
