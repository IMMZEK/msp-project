<?xml version="1.0" encoding="UTF-8"?>
<!-- This file was autogenerated by Socrates Bitwise, Duolog Technologies Ltd. -->
<module id="RFCORE_XREG" HW_revision="" XML_version="1.0" description="Register fields should be considered static unless otherwise noted as dynamic." xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="setup_parser.xsd">
    <register acronym="FRMFILT0" width="32" description="The frame filtering function rejects unintended frames as specified by IEEE 802.15.4, section 7.5.6.2, third filtering
level. In addition, it provides filtering on:
- The eight different frame types (see the FRMFILT1 register)
- The reserved bits in the frame control field (FCF)
The function is controlled by:
- The FRMFILT0 and FRMFILT1 registers
- The PAN_ID, SHORT_ADDR, and EXT_ADDR values in RAM" id="FRMFILT0" offset="0x0" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="3" end="4" rwaccess="RW" description="Used for filtering on the reserved part of the frame control field (FCF)
FCF_RESERVED_MASK[2:0] is ANDed with FCF[9:7]. If the result is nonzero and frame filtering is enabled, the frame is rejected." id="FCF_RESERVED_MASK" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="2" end="2" rwaccess="RW" description="Used for filtering on the frame version field of the frame control field (FCF)
If FCF[13:12] (the frame version subfield) is higher than MAX_FRAME_VERSION[1:0] and frame filtering is enabled, the frame is rejected.
" id="MAX_FRAME_VERSION" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Should be set high when the device is a PAN coordinator, to accept frames with no destination address (as specified in Section 7.5.6.2 in IEEE 802.15.4)
0: Device is not a PAN coordinator
1: Device is a PAN coordinator
" id="PAN_COORDINATOR" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Enables frame filtering
When this bit is set, the radio performs frame filtering as specified in
section 7.5.6.2 of IEEE 802.15.4(b), third filtering level. FRMFILT0[6:1]
and FRMFILT1[7:1], together with the local address information, define
the behavior of the filtering algorithm.
0: Frame filtering off. (FRMFILT0[6:1], FRMFILT1[7:1] and
SRCMATCH[2:0] are don&apos;t care.)
1: Frame filtering on.
" id="FRAME_FILTER_EN" resetval="" >
        </bitfield>
    </register>
    <register acronym="FRMFILT1" width="32" description="The frame filtering function rejects unintended frames as specified by IEEE 802.15.4, section 7.5.6.2, third filtering
level. In addition, it provides filtering on:
- The eight different frame types (see the FRMFILT1 register)
- The reserved bits in the frame control field (FCF)
The function is controlled by:
- The FRMFILT0 and FRMFILT1 registers
- The PAN_ID, SHORT_ADDR, and EXT_ADDR values in RAM" id="FRMFILT1" offset="0x4" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RW" description="Defines whether reserved frames are accepted or not. Reserved frames have frame type = 100, 101, 110, or 111.
0: Reject
1: Accept
" id="ACCEPT_FT_4TO7_RESERVED" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="Defines whether MAC command frames are accepted or not. MAC
command frames have frame type = 011.
0: Reject
1: Accept" id="ACCEPT_FT_3_MAC_CMD" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="Defines whether acknowledgment frames are accepted or not.
Acknowledgement frames have frame type = 010.
0: Reject
1: Accept
" id="ACCEPT_FT_2_ACK" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="Defines whether data frames are accepted or not. Data frames have
frame type = 001.
0: Reject
1: Accept" id="ACCEPT_FT_1_DATA" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="Defines whether beacon frames are accepted or not. Beacon frames have frame type = 000.
0: Reject
1: Accept" id="ACCEPT_FT_0_BEACON" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="2" end="1" rwaccess="RW" description="These bits are used to modify the frame type field of a received frame before frame type filtering is performed. The modification does not influence the frame that is written to the RX FIFO.
00: Leave the frame type as it is.
01: Invert MSB of the frame type.
10: Set MSB of the frame type to 0.
11: Set MSB of the frame type to 1.
" id="MODIFY_FT_FILTER" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Reserved. Always write 0." id="FRM_RESERVED" resetval="" >
        </bitfield>
    </register>
    <register acronym="SRCMATCH" width="32" description="Source address matching and pending bits" id="SRCMATCH" offset="0x8" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="5" end="3" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="When this bit is set, the AUTOPEND function also requires that the received frame is a DATA REQUEST MAC command frame." id="PEND_DATAREQ_ONLY" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Automatic acknowledgment pending flag enable
When a frame is received, the pending bit in the (possibly) returned acknowledgment is set automatically when the following conditions are met:
- FRMFILT.FRAME_FILTER_EN is set.
- SRCMATCH.SRC_MATCH_EN is set.
- SRCMATCH.AUTOPEND is set.
- The received frame matches the current SRCMATCH.PEND_DATAREQ_ONLY setting.
- The received source address matches at least one source match table entry, which is enabled in SHORT_ADDR_EN and SHORT_PEND_EN or in EXT_ADDR_EN and EXT_PEND_EN.
" id="AUTOPEND" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Source address matching enable (requires that FRMFILT.FRAME_FILTER_EN = 1)" id="SRC_MATCH_EN" resetval="" >
        </bitfield>
    </register>
    <register acronym="SRCSHORTEN0" width="32" description="Short address matching" id="SRCSHORTEN0" offset="0xc" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="7:0 part of the 24-bit word SHORT_ADDR_EN that enables or disables source address matching for each of the 24 short address table entries
Optional safety feature: To ensure that an entry in the source matching table is not used while it is being updated, set the corresponding SHORT_ADDR_EN bit to 0 while updating.
" id="SHORT_ADDR_EN" resetval="" >
        </bitfield>
    </register>
    <register acronym="SRCSHORTEN1" width="32" description="Short address matching" id="SRCSHORTEN1" offset="0x10" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="15:8 part of the 24-bit word SHORT_ADDR_EN
See description of SRCSHORTEN0.SHORT_ADDR_EN.
" id="SHORT_ADDR_EN" resetval="" >
        </bitfield>
    </register>
    <register acronym="SRCSHORTEN2" width="32" description="Short address matching" id="SRCSHORTEN2" offset="0x14" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="23:16 part of the 24-bit word SHORT_ADDR_EN
See description of SRCSHORTEN0.SHORT_ADDR_EN.
" id="SHORT_ADDR_EN" resetval="" >
        </bitfield>
    </register>
    <register acronym="SRCEXTEN0" width="32" description="Extended address matching" id="SRCEXTEN0" offset="0x18" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="7:0 part of the 24-bit word EXT_ADDR_EN that enables or disables source address matching for each of the 12 extended address table entries
Write access: Extended address enable for table entry n (0 to 11) is mapped to EXT_ADDR_EN[2n]. All EXT_ADDR_EN[2n + 1] bits are read only.
Read access: Extended address enable for table entry n (0 to 11) is mapped to EXT_ADDR_EN[2n] and EXT_ADDR_EN[2n + 1].
Optional safety feature: To ensure that an entry in the source matching table is not used while it is being updated, set the corresponding EXT_ADDR_EN bit to 0 while updating.
" id="EXT_ADDR_EN" resetval="" >
        </bitfield>
    </register>
    <register acronym="SRCEXTEN1" width="32" description="Extended address matching" id="SRCEXTEN1" offset="0x1c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="15:8 part of the 24-bit word EXT_ADDR_EN
See description of SRCEXTEN0.EXT_ADDR_EN.
" id="EXT_ADDR_EN" resetval="" >
        </bitfield>
    </register>
    <register acronym="SRCEXTEN2" width="32" description="Extended address matching" id="SRCEXTEN2" offset="0x20" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="23:16 part of the 24-bit word EXT_ADDR_EN
See description of SRCEXTEN0.EXT_ADDR_EN.
" id="EXT_ADDR_EN" resetval="" >
        </bitfield>
    </register>
    <register acronym="FRMCTRL0" width="32" description="Frame handling" id="FRMCTRL0" offset="0x24" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RW" description="When AUTOCRC = 0: Don&apos;t care
When AUTOCRC = 1:
0: RSSI + The CRC_OK bit and the 7-bit correlation value are
appended at the end of each received frame
1: RSSI + The CRC_OK bit and the 7-bit SRCRESINDEX are
appended at the end of each received frame. " id="APPEND_DATA_MODE" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="In TX
1: A CRC-16 (ITU-T) is generated in hardware and appended to the
transmitted frame. There is no need to write the last 2 bytes to TXBUF.
0: No CRC-16 is appended to the frame. The last 2 bytes of the frame must be generated manually and written to TXBUF (if not,
TX_UNDERFLOW occurs).
In RX
1: The CRC-16 is checked in hardware, and replaced in the RXFIFO
by a 16-bit status word which contains a CRC OK bit. The status
word is controllable through APPEND_DATA_MODE.
0: The last 2 bytes of the frame (CRC-16 field) are stored in the
RX FIFO. The CRC (if any) must be done manually.
This setting does not influence acknowledgment transmission (including AUTOACK)." id="AUTOCRC" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="Defines whether the radio automatically transmits acknowledge frames or not. When autoack is enabled, all frames that are accepted by address filtering, have the acknowledge request flag set, and have a valid CRC are automatically acknowledged 12 symbol periods after being received.
0: Autoack disabled
1: Autoack enabled" id="AUTOACK" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="Defines whether the RSSI register contains the most-recent signal
strength or the peak signal strength since the energy scan was enabled.
0: Most-recent signal strength
1: Peak signal strength" id="ENERGY_SCAN" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="2" end="2" rwaccess="RW" description="Set RX modes.
00: Normal operation, use RX FIFO
01: Receive serial mode, output received data on to IOC; infinite RX
10: RX FIFO looping ignore overflow in RX FIFO; infinite reception
11: Same as normal operation except that symbol search is disabled. Can be used for RSSI or CCA measurements when finding symbol is not desired.
" id="RX_MODE" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="Set test modes for TX.
00: Normal operation, transmit TX FIFO
01: Reserved, should not be used
10: TX FIFO looping ignore underflow in TX FIFO and read cyclic; infinite transmission
11: Send random data from CRC; infinite transmission
" id="TX_MODE" resetval="" >
        </bitfield>
    </register>
    <register acronym="FRMCTRL1" width="32" description="Frame handling" id="FRMCTRL1" offset="0x28" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="5" end="3" rwaccess="RW" description="Reserved. Read as 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="Defines whether the pending data bit in outgoing acknowledgment frames is always set to 1 or controlled by the main FSM and the address filtering
0: Pending data bit is controlled by main FSM and address filtering.
1: Pending data bit is always 1.
" id="PENDING_OR" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Defines whether or not TX underflow should be ignored
0: Normal TX operation. TX underflow is detected and TX is aborted if underflow occurs.
1: Ignore TX underflow. Transmit the number of bytes given by the
frame-length field.
" id="IGNORE_TX_UNDERF" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Defines whether STXON sets bit 6 in the RXENABLE register or leaves it unchanged
0: Does not affect RXENABLE
1: Sets bit 6 in RXENABLE. Used for backward compatibility with the CC2420.
" id="SET_RXENMASK_ON_TX" resetval="" >
        </bitfield>
    </register>
    <register acronym="RXENABLE" width="32" description="RX enabling" id="RXENABLE" offset="0x2c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="RXENABLE enables the receiver. A nonzero value in this register causes FFCTRL to enable the receiver when in idle, after transmission and after acknowledgement transmission. 

The following strobes can modify RXENMASK:
SRXON: Set bit 7 in RXENMASK.
STXON: Set bit 6 in RXENMASK if SET_RXENMASK_ON_TX = 1.
SRFOFF: Clears all bits in RXENMASK.
SRXMASKBITSET: Set bit 5 in RXENMASK.
SRXMASKBITCLR: Clear bit 5 in RXENMASK.

There could be conflicts between the CSP and xreg_bus write operations if both operations try to modify RXENMASK simultaneously. To handle the case of simultaneous access to RXENMASK the following rules apply:
- If the two sources agree (they modify different parts of the register) both of their requests to modify RXENMASK are processed.
- If both operations try to modify the mask simultaneously, bus write operations to RXMASKSET and RXMASKCLR have priority over the CSP. This situation must be avoided.
" id="RXENMASK" resetval="" >
        </bitfield>
    </register>
    <register acronym="RXMASKSET" width="32" description="RX enabling" id="RXMASKSET" offset="0x30" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="When written, the written data is ORed with the RXENMASK and stored in RXENMASK." id="RXENMASKSET" resetval="" >
        </bitfield>
    </register>
    <register acronym="RXMASKCLR" width="32" description="RX disabling" id="RXMASKCLR" offset="0x34" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="When written, the written data is inverted and ANDed with the RXENMASK and stored in RXENMASK.
For example, if 1 is written to one or more bit positions in this register, the corresponding bits are cleared in RXENMASK.
" id="RXENMASKCLR" resetval="" >
        </bitfield>
    </register>
    <register acronym="FREQTUNE" width="32" description="Crystal oscillator frequency tuning" id="FREQTUNE" offset="0x38" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="4" end="4" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="4" end="0" rwaccess="RW" description="Tune crystal oscillator
The default setting 1111 leaves the XOSC untuned. Changing the setting from the default setting (1111) switches in extra capacitance to the oscillator, effectively lowering the XOSC frequency.  Hence, a higher setting gives a higher frequency.
" id="XOSC32M_TUNE" resetval="" >
        </bitfield>
    </register>
    <register acronym="FREQCTRL" width="32" description="Controls the RF frequency" id="FREQCTRL" offset="0x3c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Frequency control word
The frequency word in FREQ[6:0] is an offset value from 2394 (fRF = FREQ[6 0] + 2394). The RF-frequency is specified from 2405 to 2480 MHz in 1-MHz steps; hence, the only valid settings for FREQ[6:0] are 11 to 86 (11 + 2394 = 2405 and 86 + 2394 = 2480).  The device supports the frequency range from 2394 to 2507 MHz. Consequently, the usable settings for FREQ[6:0] are 0 to 113. Settings outside of  the usable range (114 to 127) give a frequency of 2507 MHz. 
IEEE 802.15.4-2006 specifies a frequency range from 2405 MHz to 2480 MHz with 16 channels 5 MHz apart. The channels are numbered 11 through 26. For an IEEE 802.15.4-2006 compliant system, the only valid settings are thus
FREQ[6:0] = 11 + 5 (channel number - 11)." id="FREQ" resetval="" >
        </bitfield>
    </register>
    <register acronym="TXPOWER" width="32" description="Controls the output power" id="TXPOWER" offset="0x40" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="4" end="4" rwaccess="NA" description="PA power control" id="PA_POWER" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="4" end="0" rwaccess="RW" description="PA bias control" id="PA_BIAS" resetval="" >
        </bitfield>
    </register>
    <register acronym="TXCTRL" width="32" description="Controls the TX settings" id="TXCTRL" offset="0x44" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="3" end="4" rwaccess="RW" description="Change the current in the DAC." id="DAC_CURR" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="2" end="2" rwaccess="RW" description="Adjusts the DC level to the TX mixer." id="DAC_DC" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="Transmit mixers core current
Current increases with increasing setting." id="TXMIX_CURRENT" resetval="" >
        </bitfield>
    </register>
    <register acronym="FSMSTAT0" width="32" description="Radio status register" id="FSMSTAT0" offset="0x48" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Frequency synthesis calibration has been performed since the last time the FS was turned on." id="CAL_DONE" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RO" description="Frequency synthesis calibration status
0: Calibration is complete or not started.
1: Calibration is in progress.
" id="CAL_RUNNING" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="6" end="0" rwaccess="RO" description="Gives the current state of the FIFO and frame control (FFCTRL) finite state-machine. " id="FSM_FFCTRL_STATE" resetval="" >
        </bitfield>
    </register>
    <register acronym="FSMSTAT1" width="32" description="Radio status register" id="FSMSTAT1" offset="0x4c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="FIFO is high when there is data in the RX FIFO.
FIFO is low during RX FIFO overflow." id="FIFO" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RO" description="FIFOP is set high when there are at more than FIFOP_THR bytes of data in the RX FIFO that has passed frame filtering.
FIFOP is set high when there is at least one complete frame in the RX FIFO.
FIFOP is high during RX FIFO overflow.
" id="FIFOP" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RO" description="In TX
0: When a complete frame with SFD was sent or no SFD was sent
1: SFD was sent.
In RX
0: When a complete frame was received or no SFD was received
1: SFD was received." id="SFD" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="1" end="4" rwaccess="RO" description="Clear channel assessment
Dependent on CCA_MODE settings. See CCACTRL1 for details." id="CCA" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RO" description="Contains a sampled value of the CCA
The value is updated when a SSAMPLECCA or STXONCCA strobe is issued." id="SAMPLED_CCA" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="1 when PLL is in lock; otherwise 0" id="LOCK_STATUS" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Status signal
Active when FFC is in one of the transmit states" id="TX_ACTIVE" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Status signal
Active when FFC is in one of the receive states" id="RX_ACTIVE" resetval="" >
        </bitfield>
    </register>
    <register acronym="FIFOPCTRL" width="32" description="FIFOP threshold" id="FIFOPCTRL" offset="0x50" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Threshold used when generating FIFOP signal" id="FIFOP_THR" resetval="" >
        </bitfield>
    </register>
    <register acronym="FSMCTRL" width="32" description="FSM options" id="FSMCTRL" offset="0x54" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="6" end="2" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Controls timing of transmission of acknowledge frames
0: The acknowledge frame is sent 12 symbol periods after the end
of the received frame which requests the aknowledge.
1: The acknowledge frame is sent at the first backoff-slot boundary
more than 12 symbol periods after the end of the received frame
which requests the aknowledge.
" id="SLOTTED_ACK" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Defines whether or not a 12-symbol time-out should be used after frame
reception has ended.
0: No time-out
1: 12-symbol-period time-out
" id="RX2RX_TIME_OFF" resetval="" >
        </bitfield>
    </register>
    <register acronym="CCACTRL0" width="32" description="CCA threshold" id="CCACTRL0" offset="0x58" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Clear-channel-assessment threshold value, signed 2&apos;s-complement
number for comparison with the RSSI.
The unit is 1 dB, offset is 73dB 

The CCA signal goes high when the received signal is below this value. The CCA signal is available on the CCA pin and in the FSMSTAT1 register.
The value must never be set lower than CCA_HYST - 128 to avoid erroneous behavior of the CCA signal.
Note: The reset value translates to an input level of approximately
-32 - 73 = -105 dBm, which is well below the sensitivity limit. This means that the CCA signal never indicates a clear channel.
This register should be updated to 0xF8, which translates to an input
level of about -8 - 73 = -81 dBm.
" id="CCA_THR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CCACTRL1" width="32" description="Other CCA Options" id="CCACTRL1" offset="0x5c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="3" end="5" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="2" end="3" rwaccess="RW" description="00: CCA always set to 1
01: CCA = 1 when RSSI &lt; CCA_THR - CCA_HYST; CCA = 0 when
RSSI &gt;= CCA_THR
10: CCA = 1 when not receiving a frame, else CCA = 0
11: CCA = 1 when RSSI &lt; CCA_THR - CCA_HYST and not
receiving a frame; CCA = 0 when RSSI &gt;= CCA_THR or when
receiving a frame
" id="CCA_MODE" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="3" end="0" rwaccess="RW" description="Sets the level of CCA hysteresis. Unsigned values given in dB" id="CCA_HYST" resetval="" >
        </bitfield>
    </register>
    <register acronym="RSSI" width="32" description="RSSI status register" id="RSSI" offset="0x60" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="RSSI estimate on a logarithmic scale, signed number on 2&apos;s complement
Unit is 1 dB, offset is 73dB.

The RSSI value is averaged over eight symbol periods. The RSSI_VALID status bit should be checked before reading RSSI_VAL for the first time.
The reset value of -128 also indicates that the RSSI value is invalid." id="RSSI_VAL" resetval="" >
        </bitfield>
    </register>
    <register acronym="RSSISTAT" width="32" description="RSSI valid status register" id="RSSISTAT" offset="0x64" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="7" end="1" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="RSSI value is valid.
Occurs eight symbol periods after entering RX." id="RSSI_VALID" resetval="" >
        </bitfield>
    </register>
    <register acronym="RXFIRST" width="32" description="First byte in RX FIFO" id="RXFIRST" offset="0x68" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="First byte of the RX FIFO
Note: Reading this register does not modify the contents of the FIFO." id="DATA" resetval="" >
        </bitfield>
    </register>
    <register acronym="RXFIFOCNT" width="32" description="Number of bytes in RX FIFO" id="RXFIFOCNT" offset="0x6c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Number of bytes in the RX FIFO (unsigned integer)" id="RXFIFOCNT" resetval="" >
        </bitfield>
    </register>
    <register acronym="TXFIFOCNT" width="32" description="Number of bytes in TX FIFO" id="TXFIFOCNT" offset="0x70" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Number of bytes in the TX FIFO (unsigned integer)" id="TXFIFOCNT" resetval="" >
        </bitfield>
    </register>
    <register acronym="RXFIRST_PTR" width="32" description="RX FIFO pointer" id="RXFIRST_PTR" offset="0x74" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="RAM address offset of the first byte in the RX FIFO" id="RXFIRST_PTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="RXLAST_PTR" width="32" description="RX FIFO pointer" id="RXLAST_PTR" offset="0x78" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="RAM address offset of the last byte + 1 byte in the RX FIFO" id="RXLAST_PTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="RXP1_PTR" width="32" description="RX FIFO pointer" id="RXP1_PTR" offset="0x7c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="RAM address offset of the first byte of the first frame in the RX FIFO" id="RXP1_PTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="TXFIRST_PTR" width="32" description="TX FIFO pointer" id="TXFIRST_PTR" offset="0x84" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="RAM address offset of the next byte to be transmitted from the TX FIFO" id="TXFIRST_PTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="TXLAST_PTR" width="32" description="TX FIFO pointer" id="TXLAST_PTR" offset="0x88" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="RAM address offset of the last byte + 1 byte of the TX FIFO" id="TXLAST_PTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFIRQM0" width="32" description="RF interrupt masks" id="RFIRQM0" offset="0x8c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Bit mask is masking out interrupt sources.
Bit position:
7: RXMASKZERO
6: RXPKTDONE
5: FRAME_ACCEPTED
4: SRC_MATCH_FOUND
3: SRC_MATCH_DONE
2: FIFOP
1: SFD
0: ACT_UNUSED
" id="RFIRQM" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFIRQM1" width="32" description="RF interrupt masks" id="RFIRQM1" offset="0x90" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="7: Reserved
6: Reserved" id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="6" end="0" rwaccess="RW" description="Bit mask is masking out interrupt sources.
Bit position:
5: CSP_WAIT
4: CSP_STOP
3: CSP_MANINT
2: RF_IDLE
1: TXDONE
0: TXACKDONE
" id="RFIRQM" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFERRM" width="32" description="RF error interrupt mask" id="RFERRM" offset="0x94" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="7: Reserved" id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Bit mask is masking out interrupt sources.
Bit position:
6: STROBE_ERR
5: TXUNDERF
4: TXOVERF
3: RXUNDERF
2: RXOVERF
1: RXABO
0: NLOCK
" id="RFERRM" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFRND" width="32" description="Random data" id="RFRND" offset="0x9c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="6" end="2" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Random bit from the Q channel of the receiver" id="QRND" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Random bit from the I channel of the receiver" id="IRND" resetval="" >
        </bitfield>
    </register>
    <register acronym="MDMCTRL0" width="32" description="Controls modem" id="MDMCTRL0" offset="0xa0" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RW" description="Sets how many zero symbols must be detected before the sync word when searching for sync. Only one zero symbol is required to have a correlation value above the correlation threshold set in the MDMCTRL1 register.
00: Reserved
01: 1 zero symbol
10: 2 zero symbols
11: 3 zero symbols
" id="DEM_NUM_ZEROS" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="Defines the behavior or the frequency offset averaging filter.
0: Lock average level after preamble match. Restart frequency offset
calibration when searching for the next frame.
1: Continuously update average level." id="DEMOD_AVG_MODE" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="4" end="1" rwaccess="RW" description="The number of preamble bytes (two zero-symbols) to be sent in TX mode before the SFD, encoded in steps of 2 symbols (1 byte). The reset value of 2 is compliant with IEEE 802.15.4.
0000: 2 leading-zero bytes
0001: 3 leading-zero bytes
0010: 4 leading-zero bytes
...
1111: 17 leading-zero bytes
" id="PREAMBLE_LENGTH" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Defines the kind of TX filter that is used. The normal TX filter is as defined by the IEEE 802.15.4 standard. Extra filtering may be applied to lower the out-of-band emissions.
0: Normal TX filtering
1: Enable extra filtering" id="TX_FILTER" resetval="" >
        </bitfield>
    </register>
    <register acronym="MDMCTRL1" width="32" description="Controls modem" id="MDMCTRL1" offset="0xa4" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="Defines requirements for SFD detection:
0: The correlation value of one of the zero symbols of the preamble must be above the correlation threshold.
1: The correlation value of one zero symbol of the preamble and both
symbols in the SFD must be above the correlation threshold." id="CORR_THR_SFD" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="5" end="0" rwaccess="RW" description="Demodulator correlator threshold value, required before SFD search. Threshold value adjusts how the receiver synchronizes to data from the radio. If the threshold is set too low, sync can more easily be found on noise. If set too high, the sensitivity is reduced, but sync is not likely to be found on noise. In combination with DEM_NUM_ZEROS, the system can be tuned so sensitivity is high with less sync found on noise." id="CORR_THR" resetval="" >
        </bitfield>
    </register>
    <register acronym="FREQEST" width="32" description="Estimated RF frequency offset" id="FREQEST" offset="0xa8" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Signed 2&apos;s-complement value. Contains an estimate of the frequency offset between carrier and the receiver LO. The offset frequency is FREQEST x 7800 Hz. DEM_AVG_MODE controls when this estimate is updated. If DEM_AVG_MODE = 0, it is updated until sync is found. Then the frequency offset estimate is frozen until the end of the received frame. If DEM_AVG_MODE = 1, it is updated as long as the demodulator is enabled. To calculate the correct value, one must use an offset (FREQEST_offset), which can be found in the device data sheet. Real FREQEST value = FREQEST - FREQEST_offset." id="FREQEST" resetval="" >
        </bitfield>
    </register>
    <register acronym="RXCTRL" width="32" description="Tune receive section" id="RXCTRL" offset="0xac" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="2" end="4" rwaccess="RW" description="Adjusts front-end LNA2/mixer PTAT current output (from M = 3 to M = 6), default: M = 5" id="GBIAS_LNA2_REF" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="2" end="2" rwaccess="RW" description="Adjusts front-end LNA PTAT current output (from M = 3 to M = 6), default: M = 5" id="GBIAS_LNA_REF" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="Control of the output current from the receiver mixers 
The current increases with increasing setting set." id="MIX_CURRENT" resetval="" >
        </bitfield>
    </register>
    <register acronym="FSCTRL" width="32" description="Tune frequency synthesizer" id="FSCTRL" offset="0xb0" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RW" description="Prescaler current setting" id="PRE_CURRENT" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="2" end="4" rwaccess="RW" description="Adjusts current in mixer and PA buffers
Used when TX_ACTIVE = 1" id="LODIV_BUF_CURRENT_TX" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="2" end="2" rwaccess="RW" description="Adjusts current in mixer and PA buffers
Used when TX_ACTIVE = 0" id="LODIV_BUF_CURRENT_RX" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="Adjusts divider currents, except mixer and PA buffers" id="LODIV_CURRENT" resetval="" >
        </bitfield>
    </register>
    <register acronym="FSCAL0" width="32" description="Tune frequency calibration" id="FSCAL0" offset="0xb4" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RW" description="Force on the current comparator in the VCO. This signal is ORed with the signal coming from the calibration module." id="VCO_CURR_COMP_EN_OV" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="Set this bit to manually disable charge pump by masking the up and down pulses from the phase detector." id="CHP_DISABLE" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="4" end="2" rwaccess="RW" description="Digital bit vector defining the charge-pump output current on an exponential scale

If FFC_BW_BOOST = 0, the read value is the value stored in CHP_CURRENT.
If FFC_BW_BOOST = 1, the read value is CHP_CURRENT + 4.

If the addition causes overflow, the signal is saturated.
" id="CHP_CURRENT" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="Control signal
Defines the synthesizer boost mode
00: No BW_BOOST
01: BW_BOOST is high during calibration and approximately 30 us into the settling.
10: BW_BOOST is always on (or high).
11: Reserved
" id="BW_BOOST_MODE" resetval="" >
        </bitfield>
    </register>
    <register acronym="FSCAL1" width="32" description="Tune frequency calibration" id="FSCAL1" offset="0xb8" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RW" description="Override current calibration " id="VCO_CURR_CAL_OE" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="5" end="2" rwaccess="RW" description="Calibration result
Override value if VCO_CURR_CAL_OE = 1" id="VCO_CURR_CAL" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="Defines current in VCO core
Sets the multiplier between calibrated current and VCO current. " id="VCO_CURR" resetval="" >
        </bitfield>
    </register>
    <register acronym="FSCAL2" width="32" description="Tune frequency calibration" id="FSCAL2" offset="0xbc" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="Override the calibration result with the value from VCO_CAPARR[5:0]." id="VCO_CAPARR_OE" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="6" end="0" rwaccess="RW" description="VCO capacitor array setting
Programmed during calibration
Override value when VCO_CAPARR_OE = 1" id="VCO_CAPARR" resetval="" >
        </bitfield>
    </register>
    <register acronym="FSCAL3" width="32" description="Tune frequency calibration" id="FSCAL3" offset="0xc0" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="Enables the VCO DAC when 1" id="VCO_DAC_EN_OV" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="4" end="2" rwaccess="RW" description="Bit vector for programming varactor control voltage from VC DAC" id="VCO_VC_DAC" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="Calibration accuracy setting for the cap_array calibration part of the calibration
00: 80 XOSC periods
01: 100 XOSC periods 
10: 125 XOSC periods 
11: 250 XOSC periods 
" id="VCO_CAPARR_CAL_CTRL" resetval="" >
        </bitfield>
    </register>
    <register acronym="AGCCTRL0" width="32" description="AGC dynamic range control" id="AGCCTRL0" offset="0xc4" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="0: The AGC performs no adjustment of attenuation in the AAF.
1: The AGC adjusts the gain in the AAF to achieve extra dynamic range for the receiver." id="AGC_DR_XTND_EN" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="6" end="0" rwaccess="RW" description="If the measured error between the AGC reference magnitude and the actual magnitude in dB is larger than this threshold, the extra attenuation is enabled in the front end. This threshold must be set higher than 0x0C.
This feature is enabled by AGC_DR_XTND_EN.
" id="AGC_DR_XTND_THR" resetval="" >
        </bitfield>
    </register>
    <register acronym="AGCCTRL1" width="32" description="AGC reference level" id="AGCCTRL1" offset="0xc8" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="6" end="0" rwaccess="RW" description="Target value for the AGC control loop, given in 1-dB steps" id="AGC_REF" resetval="" >
        </bitfield>
    </register>
    <register acronym="AGCCTRL2" width="32" description="AGC gain override" id="AGCCTRL2" offset="0xcc" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RW" description="Overrride value for LNA 1
Used only when LNA_CURRENT_OE = 1
When read, this register returns the current applied gain setting.
00: 0-dB gain (reference level)
01: 3-dB gain
10: Reserved
11: 6-dB gain
" id="LNA1_CURRENT" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="3" end="3" rwaccess="RW" description="Overrride value for LNA 2
Used only when LNA_CURRENT_OE = 1
When read, this register returns the current applied gain setting.
000: 0-dB gain (reference level)
001: 3-dB gain
010: 6-dB gain
011: 9-dB gain
100: 12-dB gain
101: 15-dB gain
110: 18-dB gain
111: 21-dB gain
" id="LNA2_CURRENT" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="2" end="1" rwaccess="RW" description="Overrride value for LNA 3
Used only when LNA_CURRENT_OE = 1
When read, this register returns the current applied gain setting.
00: 0-dB gain (reference level)
01: 3-dB gain
10: 6-dB gain
11: 9-dB gain
" id="LNA3_CURRENT" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Write 1 to override the AGC LNA current setting with the values above
(LNA1_CURRENT, LNA2_CURRENT, and LNA3_CURRENT)." id="LNA_CURRENT_OE" resetval="" >
        </bitfield>
    </register>
    <register acronym="AGCCTRL3" width="32" description="AGC control" id="AGCCTRL3" offset="0xd0" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="2" end="5" rwaccess="RW" description="Timing for AGC to wait for analog gain to settle after a gain change.
During this period, the energy measurement in the AGC is paused.
00: 15 periods
01: 20 periods
10: 25 periods
11: 30 periods" id="AGC_SETTLE_WAIT" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="2" end="3" rwaccess="RW" description="Window size for the accumulate-and-dump function in the AGC.
00: 16 samples
01: 32 samples
10: 64 samples
11: 128 samples
" id="AGC_WIN_SIZE" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="2" end="1" rwaccess="RW" description="Overrides the control signals of the AGC to AAF when AAF_RP_OE = 1.
When read, it returns the applied signal to the AAF.
00: 9-dB attenuation in AAF
01: 6-dB attenuation in AAF
10: 3-dB attenuation in AAF
11: 0-dB attenuation in AAF (reference level)
 
" id="AAF_RP" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Override the AAF control signals of the AGC with the values stored in AAF_RP." id="AAF_RP_OE" resetval="" >
        </bitfield>
    </register>
    <register acronym="ADCTEST0" width="32" description="ADC tuning" id="ADCTEST0" offset="0xd4" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RW" description="Quantizer threshold control for test and debug" id="ADC_VREF_ADJ" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="2" end="4" rwaccess="RW" description="Quantizer threshold control for test and debug" id="ADC_QUANT_ADJ" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="3" end="1" rwaccess="RW" description="Gm-control for test and debug" id="ADC_GM_ADJ" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Enables DAC2 for enhanced ADC stability" id="ADC_DAC2_EN" resetval="" >
        </bitfield>
    </register>
    <register acronym="ADCTEST1" width="32" description="ADC tuning" id="ADCTEST1" offset="0xd8" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="4" end="4" rwaccess="RW" description="ADC test mode selector" id="ADC_TEST_CTRL" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="2" end="2" rwaccess="RW" description="Used to adjust capacitor values in ADC" id="ADC_C2_ADJ" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="Used to adjust capacitor values in ADC" id="ADC_C3_ADJ" resetval="" >
        </bitfield>
    </register>
    <register acronym="ADCTEST2" width="32" description="ADC tuning" id="ADCTEST2" offset="0xdc" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="2" end="5" rwaccess="RW" description="Test mode to enable output of ADC data from demodulator. When enabled, raw ADC data is clocked out on the GPIO pins.
00: Test mode disabled
01: Data from the I and Q ADCs are output (data rate 76 MHz)
10: Data from the I ADC is output. Two and two ADC samples grouped (data rate 38 MHz)
11: Data from the Q ADC is output. Two and two ADC samples grouped (data rate 38 MHz)
" id="ADC_TEST_MODE" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="2" end="3" rwaccess="RW" description="Controls series resistance of AAF" id="AAF_RS" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="2" end="1" rwaccess="RW" description="Adjust feed forward" id="ADC_FF_ADJ" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Control of DAC DWA scheme
0 = DWA (scrambling) disabled
1 = DWA enabled" id="ADC_DAC_ROT" resetval="" >
        </bitfield>
    </register>
    <register acronym="MDMTEST0" width="32" description="Test register for modem" id="MDMTEST0" offset="0xe0" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="4" end="4" rwaccess="RW" description="Enables the possibility to transmit a baseband tone by picking samples from the sine tables with a controllable phase step between the samples.
The step size is controlled by TX_TONE. If MDMTEST1.MOD_IF is 0, the tone is superpositioned on the modulated data, effectively giving modulation with an IF. If MDMTEST1.MOD_IF is 1, only the tone is transmitted.
0000: -6 MHz 
0001: -4 MHz
0010: -3 MHz
0011: -2 MHz
0100: -1 MHz
0101: -500 kHz
0110: -4 kHz
0111: 0
1000: 4 kHz
1001: 500 kHz
1010: 1 MHz
1011: 2 MHz
1100: 3 MHz
1101: 4 MHz
1110: 6 MHz
Others: Reserved
" id="TX_TONE" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="2" end="2" rwaccess="RW" description="Controls the numbers of samples to be accumulated between each dump of the accumulate-and-dump filter used in DC removal
00: 32 samples
01: 64 samples
10: 128 samples
11: 256 samples
" id="DC_WIN_SIZE" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="Selects the mode of operation
00: The input signal to the DC blocker is passed to the output without any attempt to remove DC.
01: Enable DC cancellation. Normal operation
10: Freeze estimates of DC when sync is found. Resume estimating DC when searching for the next frame.
11: Reserved
" id="DC_BLOCK_MODE" resetval="" >
        </bitfield>
    </register>
    <register acronym="MDMTEST1" width="32" description="Test Register for Modem" id="MDMTEST1" offset="0xe4" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="0: Use the normal IF frequency (MDMTEST0.TX_TONE) for automatic IF compensation of channel frequency on TX.
1: Use mirror IF frequency for automatic compensation of channel frequency on TX.
" id="USEMIRROR_IF" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="0: Modulation is performed at an IF set by MDMTEST0.TX_TONE. The tone set by MDMTEST0.TX_TONE is superimposed on the data.
1: Modulate a tone set by MDMTEST0.TX_TONE.  A tone is transmitted with frequency set by MDMTEST0.TX_TONE.
" id="MOD_IF" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="1: Enable ramping of DAC output amplitude during startup and finish.
0: Disable ramping of DAC output amplitude.
" id="RAMP_AMP" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="0: Packet sniffer module disabled
1: Packet sniffer module enabled. The received and transmitted data can be observed on GPIO pins.
" id="RFC_SNIFF_EN" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Must be written as 0 for correct operation.
" id="Reserved" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Enables loopback of modulated data into the receiver chain
0: An STXCAL instruction calibrates for TX. Use STXON to continue to active TX.
1: An STXCAL instruction enables the loopback mode. 
" id="LOOPBACK_EN" resetval="" >
        </bitfield>
    </register>
    <register acronym="DACTEST0" width="32" description="DAC override value" id="DACTEST0" offset="0xe8" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Q-branch DAC override value when DAC_SRC = 001

If DAC_SRC is set to be ADC data, CORDIC magnitude, or channel filtered data, then DAC_Q_O controls the part of the word in question that is actually multiplexed to the DAC, as described below.
000111: Bits 7:0
001000: Bits 8:1
001001: Bits 9:2
...

If an invalid setting is chosen, the DAC outputs only zeros (minimum value).
" id="DAC_Q_O" resetval="" >
        </bitfield>
    </register>
    <register acronym="DACTEST1" width="32" description="DAC override value" id="DACTEST1" offset="0xec" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="I-branch DAC override value when DAC_SRC = 001

If DAC_SRC is set  to be ADC data, CORDIC magnitude, channel filtered data, or DC filtered data, then DAC_I_O controls the part of the word in question that is actually multiplexed to the DAC as described below.
000111: Bits 7:0
001000: Bits 8:1
001001: Bits 9:2
...

If an invalid setting is chosen, then the DAC outputs only zeros (minimum value).
" id="DAC_I_O" resetval="" >
        </bitfield>
    </register>
    <register acronym="DACTEST2" width="32" description="DAC test setting" id="DACTEST2" offset="0xf0" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="Enable and disable dynamic element matching
Drives RFR_DAC_DEM_EN" id="DAC_DEM_EN" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="2" end="3" rwaccess="RW" description="Adjustment of output stage
Drives RFR_DAC_CASC_CTRL" id="DAC_CASC_CTRL" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="3" end="0" rwaccess="RW" description="The TX DACs data source is selected by DAC_SRC according to:
000: Normal operation (from modulator)
001: The DAC_I_O and DAC_Q_O override values
010: ADC data after decimation, magnitude controlled by DAC_I_O and DAC_Q_O
011: I/Q after decimation, channel and DC filtering, magnitude controlled by DAC_I_O and DAC_Q_O
100: CORDIC magnitude output and front-end gain is output,  magnitude controlled by DAC_I_O and DAC_Q_O
101: RSSI I output on the I DAC
111: Reserved
" id="DAC_SRC" resetval="" >
        </bitfield>
    </register>
    <register acronym="ATEST" width="32" description="Analog test control" id="ATEST" offset="0xf4" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="6" end="0" rwaccess="RW" description="Controls the analog test mode:
00 0000: Disabled
00 0001: Enables the temperature sensor (see also the CCTEST_TR0 register description).
Other values reserved." id="ATEST_CTRL" resetval="" >
        </bitfield>
    </register>
    <register acronym="PTEST0" width="32" description="Override power-down register" id="PTEST0" offset="0xf8" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Prescaler power-down signal
When PD_OVERRIDE = 1" id="PRE_PD" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="Charge pump power-down signal
When PD_OVERRIDE = 1" id="CHP_PD" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="ADC power-down signal
When PD_OVERRIDE = 1" id="ADC_PD" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="DAC power-down signal
When PD_OVERRIDE = 1" id="DAC_PD" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="2" end="2" rwaccess="RW" description="Low-noise amplifier power-down signal
Defines LNA/mixer power-down modes:
00: Power up 
01: LNA off, mixer/regulator on
10: LNA/mixer off, regulator on
11: PD
 When PD_OVERRIDE = 1
" id="LNA_PD" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Transmit mixer power-down signal
When PD_OVERRIDE = 1" id="TXMIX_PD" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Antialiasing filter power-down signal
When PD_OVERRIDE = 1" id="AAF_PD" resetval="" >
        </bitfield>
    </register>
    <register acronym="PTEST1" width="32" description="Override power-down register" id="PTEST1" offset="0xfc" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="4" end="4" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="Override enabling and disabling of various modules (for debug and testing only)
It is impossible to override hard-coded BIAS_PD[1:0] depenancy." id="PD_OVERRIDE" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="Power amplifier power-down signal
When PD_OVERRIDE = 1" id="PA_PD" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="VCO power-down signal
When PD_OVERRIDE = 1" id="VCO_PD" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="LO power-down signal
When PD_OVERRIDE = 1" id="LODIV_PD" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_0" width="32" description="CSP program" id="CSPPROG_0" offset="0x100" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_1" width="32" description="CSP program" id="CSPPROG_1" offset="0x104" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_2" width="32" description="CSP program" id="CSPPROG_2" offset="0x108" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_3" width="32" description="CSP program" id="CSPPROG_3" offset="0x10c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_4" width="32" description="CSP program" id="CSPPROG_4" offset="0x110" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_5" width="32" description="CSP program" id="CSPPROG_5" offset="0x114" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_6" width="32" description="CSP program" id="CSPPROG_6" offset="0x118" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_7" width="32" description="CSP program" id="CSPPROG_7" offset="0x11c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_8" width="32" description="CSP program" id="CSPPROG_8" offset="0x120" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_9" width="32" description="CSP program" id="CSPPROG_9" offset="0x124" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_10" width="32" description="CSP program" id="CSPPROG_10" offset="0x128" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_11" width="32" description="CSP program" id="CSPPROG_11" offset="0x12c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_12" width="32" description="CSP program" id="CSPPROG_12" offset="0x130" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_13" width="32" description="CSP program" id="CSPPROG_13" offset="0x134" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_14" width="32" description="CSP program" id="CSPPROG_14" offset="0x138" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_15" width="32" description="CSP program" id="CSPPROG_15" offset="0x13c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_16" width="32" description="CSP program" id="CSPPROG_16" offset="0x140" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_17" width="32" description="CSP program" id="CSPPROG_17" offset="0x144" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_18" width="32" description="CSP program" id="CSPPROG_18" offset="0x148" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_19" width="32" description="CSP program" id="CSPPROG_19" offset="0x14c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_20" width="32" description="CSP program" id="CSPPROG_20" offset="0x150" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_21" width="32" description="CSP program" id="CSPPROG_21" offset="0x154" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_22" width="32" description="CSP program" id="CSPPROG_22" offset="0x158" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPPROG_23" width="32" description="CSP program" id="CSPPROG_23" offset="0x15c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Byte N of the CSP program memory" id="CSP_INSTR" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPCTRL" width="32" description="CSP control bit" id="CSPCTRL" offset="0x180" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="7" end="1" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="CSP MCU control input" id="MCU_CTRL" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPSTAT" width="32" description="CSP status register" id="CSPSTAT" offset="0x184" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RO" description="1: CSP is running.
0: CSP is idle.
" id="CSP_RUNNING" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="5" end="0" rwaccess="RO" description="CSP program counter" id="CSP_PC" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPX" width="32" description="CSP X data register" id="CSPX" offset="0x188" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Used by CSP instructions WAITX, RANDXY, INCX, DECX,
and conditional instructions." id="CSPX" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPY" width="32" description="CSP Y data register" id="CSPY" offset="0x18c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Used by CSP instructions RANDXY, INCY, DECY, and conditional instructions." id="CSPY" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPZ" width="32" description="CSP Z data register" id="CSPZ" offset="0x190" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Used by CSP instructions INCZ, DECZ, and conditional instructions." id="CSPZ" resetval="" >
        </bitfield>
    </register>
    <register acronym="CSPT" width="32" description="CSP T data register" id="CSPT" offset="0x194" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Content is decremented each time the MAC Timer overflows while the CSP program is running. The SCP program stops when decremented to 0. Setting CSPT = 0xFF prevents the register from being decremented." id="CSPT" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFC_OBS_CTRL0" width="32" description="RF observation mux control" id="RFC_OBS_CTRL0" offset="0x1ac" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="The signal chosen by RFC_OBS_MUX0 is XORed with this bit." id="RFC_OBS_POL0" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="6" end="0" rwaccess="RW" description="Controls which observable signal from RF Core is to be muxed out to rfc_obs_sigs[0].
00 0000: 0 - Constant value
00 0001: 1 - Constant value
00 1000: rfc_sniff_data - Data from packet sniffer. Sample data on rising edges of sniff_clk.
00 1001: rfc_sniff_clk - 250kHz clock for packet sniffer data.
00 1100: rssi_valid - Pin is high when the RSSI value has been updated at least once since RX was started. Cleared when leaving RX.
00 1101: demod_cca - Clear channel assessment. See FSMSTAT1 register for details on how to configure the behavior of this signal.
00 1110: sampled_cca - A sampled version of the CCA bit from demodulator. The value is updated whenever a SSAMPLECCA or STXONCCA strobe is issued.
00 1111: sfd_sync - Pin is high when a SFD has been received or transmitted. Cleared when leaving RX/TX respectively. Not to be confused with the SFD exception.
01 0000: tx_active - Indicates that FFCTRL is in one of the TX states. Active-high.
Note: This signal might have glitches, because it has no output flip-flop and is based
on the current state register of the FFCTRL FSM.
01 0001: rx_active - Indicates that FFCTRL is in one of the RX states. Active-high.
Note: This signal might have glitches, because it has no output flip-flop and is based
on the current state register of the FFCTRL FSM.
01 0010: ffctrl_fifo - Pin is high when one or more bytes are in the RXFIFO. Low during RXFIFO overflow.
01 0011: ffctrl_fifop - Pin is high when the number of bytes in the RXFIFO exceeds the programmable threshold or at least one complete frame is in the RXFIFO. Also high
during RXFIFO overflow. Not to be confused with the FIFOP exception.
01 0100: packet_done - A complete frame has been received. I.e., the number of bytes set by the frame-length field has been received.
01 0110: rfc_xor_rand_i_q - XOR between I and Q random outputs. Updated at 8 MHz.
01 0111: rfc_rand_q - Random data output from the Q channel of the receiver. Updated at 8 MHz.
01 1000: rfc_rand_i - Random data output from the I channel of the receiver. Updated at 8 MHz
01 1001: lock_status - 1 when PLL is in lock, otherwise 0
10 1000: pa_pd - Power amplifier power-down signal
10 1010: lna_pd - LNA power-down signal
Others: Reserved" id="RFC_OBS_MUX0" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFC_OBS_CTRL1" width="32" description="RF observation mux control" id="RFC_OBS_CTRL1" offset="0x1b0" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="The signal chosen by RFC_OBS_MUX1 is XORed with this bit." id="RFC_OBS_POL1" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="6" end="0" rwaccess="RW" description="Controls which observable signal from RF Core is to be muxed out to rfc_obs_sigs[1].
See description of RFC_OBS_CTRL0 for details." id="RFC_OBS_MUX1" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFC_OBS_CTRL2" width="32" description="RF observation mux control" id="RFC_OBS_CTRL2" offset="0x1b4" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="The signal chosen by RFC_OBS_MUX2 is XORed with this bit." id="RFC_OBS_POL2" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="6" end="0" rwaccess="RW" description="Controls which observable signal from RF Core is to be muxed out to rfc_obs_sigs[2].
See description of RFC_OBS_CTRL0 for details." id="RFC_OBS_MUX2" resetval="" >
        </bitfield>
    </register>
    <register acronym="TXFILTCFG" width="32" description="TX filter configuration" id="TXFILTCFG" offset="0x1e8" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="4" end="4" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="4" end="0" rwaccess="RW" description="Drives signal rfr_txfilt_fc" id="FC" resetval="" >
        </bitfield>
    </register>
</module>
