<module name="PLLCTRL0" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="PLLCTRL0_PID" acronym="PLLCTRL0_PID" offset="0x0" width="32" description="Peripheral Identification Register The peripheral identification register is a constant register that contains the ID and ID revision number for that module. The stores version information used to identify the module.">
    <bitfield id="PID_MSB16" width="16" begin="31" end="16" resetval="0x4481" description="" range="" rwaccess="R"/>
    <bitfield id="PID_MISC" width="5" begin="15" end="11" resetval="0xB" description="RTL Version." range="" rwaccess="R"/>
    <bitfield id="PID_MAJOR" width="3" begin="10" end="8" resetval="0x4" description="Major Revision." range="" rwaccess="R"/>
    <bitfield id="PID_CUSTOM" width="2" begin="7" end="6" resetval="0x0" description="Indicates a special version for a particular device." range="" rwaccess="R"/>
    <bitfield id="PID_MINOR" width="6" begin="5" end="0" resetval="0x0" description="Minor Revision." range="" rwaccess="R"/>
  </register>
  <register id="PLLCTRL0_SHIFTDIV" acronym="PLLCTRL0_SHIFTDIV" offset="0xD0" width="32" description="Shift Clock Divider Register This register is used in burnin mode. It contains the divider value for the burnin shift clock. This value is typically scanned in by the config scan chain. This register can be read/writable by software.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DIV_VALUE" width="8" begin="7" end="0" resetval="0x0" description="Divider value" range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_CS0" acronym="PLLCTRL0_CS0" offset="0xD4" width="32" description="PLL Catscan Register This register is used to write catscan registers.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CS_CLK_START" width="1" begin="0" end="0" resetval="0x0" description="Starts catscan counter that when reaches 0 will stop the clocks." range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_DFTFCNTR" acronym="PLLCTRL0_DFTFCNTR" offset="0xD8" width="32" description="DFT Frequency Counter Register This register is the frequency counter register. It is used to validate the pll. The function is to have a 16-bit down counter for the pll input clock and a 16-bit up counter for the pll clock,or divided clock, to determine actual pll multiply factor. The down counter will stop at 0 and stop the up counter, if down counter is 0 it will not count and will stop the other counter immediately. The up counter will count to ffff and stop, it will also stop the down counter when this happens. If started at ffff will not count and will stop the other counter immediately. The start bit being set to 1 starts the counting. Due to synchronizing effects the counters will be off by a couple cycles when they start or stop.">
    <bitfield id="PLLREFCNT" width="16" begin="31" end="16" resetval="0x0" description="Counter values for pll refclock(down counter), clock source always pll input clock." range="" rwaccess="RW"/>
    <bitfield id="PLLCNT" width="16" begin="15" end="0" resetval="0x0" description="Counter values for pll derived clock(up counter), counting clock configurable, see DFTCNTRCNTL." range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_DFTFCNTRCNTL" acronym="PLLCTRL0_DFTFCNTRCNTL" offset="0xDC" width="32" description="DFT Frequency Counter Control Register This register controls the start of the frequency counters via the start bit. The status bit is not meaningfull if the start bit is not enabled. If the start bit is enabled the status bit indicates if the counters have stopped and can be read reliably.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CLKMUX" width="4" begin="7" end="4" resetval="0x0" description="Clock source used by pll counter." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="3" end="2" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="STATUS" width="1" begin="1" end="1" resetval="0x0" description="Status of counter" range="" rwaccess="R"/>
    <bitfield id="START" width="1" begin="0" end="0" resetval="0x0" description="Enable counter" range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_FUSERR" acronym="PLLCTRL0_FUSERR" offset="0xE0" width="32" description="E-fusefarm Error Register This register is used to capture the C027 fusefarm outputs error code efc_error[4:0] through signal ferror_pi[4:0]. Users should check for any fusefarm error (by reading this register) during device software initialization.">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ERR" width="5" begin="4" end="0" resetval="0xX" description="Fusefarm Error Output" range="" rwaccess="R"/>
  </register>
  <register id="PLLCTRL0_RSTYPE" acronym="PLLCTRL0_RSTYPE" offset="0xE4" width="32" description="Reset Type Status Register This register latches the cause of the last reset. If multiple reset sources are asserted simultaneously, this register records whichever reset source that de-asserts last. If multiple reset sources are asserted and de-asserted simultaneously, this register latches the highest priority reset source.">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="EMU1" width="1" begin="29" end="29" resetval="0xX" description="0 = reset was not the last reset to occur" range="" rwaccess="R"/>
    <bitfield id="EMU0" width="1" begin="28" end="28" resetval="0xX" description="Emulation chip 0 reset" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="12" begin="27" end="16" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="RSTREQ" width="8" begin="15" end="8" resetval="0xX" description="Chip Reset request" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="5" begin="7" end="3" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="PLLCNTL" width="1" begin="2" end="2" resetval="0xX" description="Pll mmr controlled software Reset" range="" rwaccess="R"/>
    <bitfield id="RSTIN" width="1" begin="1" end="1" resetval="0xX" description="External Warm Reset device pin" range="" rwaccess="R"/>
    <bitfield id="POR" width="1" begin="0" end="0" resetval="0xX" description="Power On Reset" range="" rwaccess="R"/>
  </register>
  <register id="PLLCTRL0_RSCTRL" acronym="PLLCTRL0_RSCTRL" offset="0xE8" width="32" description="Reset Control Register This register contains a key that enables writes to the upper part of the . This key also enables writes to the and registers. The key value is 0x5a69. A valid key will be stored as 0x000c, any other key value is invalid. When the , or the is written the key is invalidated. So every write must be setup with a valid key being written prior.">
    <bitfield id="RESERVED" width="15" begin="31" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SWRST" width="1" begin="16" end="16" resetval="0x1" description="Software reset" range="" rwaccess="RW"/>
    <bitfield id="KEY" width="16" begin="15" end="0" resetval="0x3" description="Key used to enable writes to and" range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_RSCFG" acronym="PLLCTRL0_RSCFG" offset="0xEC" width="32" description="Reset Configuration Register This register is used to configure what type of reset is generated, chip_0_rst_po_n and chip_1_rst_po_n or just chip_1_rst_pi_n. It is also used to set which reset is blocked. When chip_0_rst_n_po is set both chip_0_rst_n_po and chip_1_rst_n_po are asserted. When chip_1_rst_n_po is set only chip_1_rst_n_po is asserted.">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PLLCNTLBLOCK" width="1" begin="29" end="29" resetval="0x0" description="Reset only on POR, blocks reset from affecting all pll_ctrll mmr registers." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="28" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RSTBLOCK" width="8" begin="23" end="16" resetval="0x0" description="pll_ctrl input reset_req_pi_n[N]" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PLLCTRLSOFT" width="1" begin="13" end="13" resetval="0x0" description="Pll_ctrl software reset" range="" rwaccess="RW"/>
    <bitfield id="RSTPITYPE" width="1" begin="12" end="12" resetval="0x0" description="Pll_ctrl input reset_n_pi(device warm reset) behaves like" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="11" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RSTREQTYPE" width="8" begin="7" end="0" resetval="0x0" description="pll_ctrl input reset_req_pi_n[N]" range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_RSISO" acronym="PLLCTRL0_RSISO" offset="0xF0" width="32" description="Reset Isolation Register The reset isolation register is used to indicate which sysclk_po clocks must maintain their frequency without pausing through non-por resets. Setting any of these bit effectively blocks all pll_ctrl mmr&#8217;s in order to maintain current values of pll multiplier, divide ratio&#8217;s and etc. The pll_ctrl output pll_ctrl_rst_n_po will not be blocked by the isolation register setting. The slave pll_ctrl will need to block reset there with it&#8217;s reset iso registers.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SYSCLKISO" width="16" begin="15" end="0" resetval="0x0" description="Indicates sysclk_po[N] is reset isolation, effectively also blocks reset to all pll_ctrl mmr registers" range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_PLLCTL" acronym="PLLCTRL0_PLLCTL" offset="0x100" width="32" description="PLL Control Register The register contains bits to control PLL operations. Note that PLLs are placed outside of the PLLCTRL module.">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="EXCLKSRC" width="1" begin="9" end="9" resetval="0x0" description="Selects between using bypass clock or an external clock source." range="" rwaccess="RW"/>
    <bitfield id="CLKMODE" width="1" begin="8" end="8" resetval="0xX" description="Reference Clock Selection." range="" rwaccess="RW"/>
    <bitfield id="PLLSELB" width="1" begin="7" end="7" resetval="0x0" description="Selects PLL A versus PLL B." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PLLENSRC" width="1" begin="5" end="5" resetval="0x1" description="PLLEN Mux Control Source" range="" rwaccess="RW"/>
    <bitfield id="PLLDIS" width="1" begin="4" end="4" resetval="0xX" description="Asserts DISABLE to PLL if Supported" range="" rwaccess="RW"/>
    <bitfield id="PLLRST" width="1" begin="3" end="3" resetval="0xX" description="Asserts RESET to PLL if Supported." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="2" end="2" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PLLPWRDN" width="1" begin="1" end="1" resetval="0x1" description="Selects PLL Power Down for the PLL selected by PLLSELB." range="" rwaccess="RW"/>
    <bitfield id="PLLEN" width="1" begin="0" end="0" resetval="0x0" description="PLL Mode Enable" range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_PLLM" acronym="PLLCTRL0_PLLM" offset="0x110" width="32" description="PLL Multiplier Control Register This register configures the multiplier control to the PLL.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="_" width="8" begin="7" end="0" resetval="0xX" description="PLL Multiplier Select" range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_PLLDIV1" acronym="PLLCTRL0_PLLDIV1" offset="0x118" width="32" description="PLL Controller Divider 1 Register for SYSCLK1 This register controls value of the divider 1 for SYSCLK1. It divides down the sysrefclk (SYSCLK reference clock from either the BYPASS or PLL path). The &#8220;n&#8221; in the following table should be replaced with the appropriate divider number (e.g. use D1EN for and SYSCLK1).">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DN_EN" width="1" begin="15" end="15" resetval="0x1" description="Divider Dn Enable" range="" rwaccess="R"/>
    <bitfield id="HALF_RATIO" width="1" begin="14" end="14" resetval="0x0" description="Ratio is in half steps." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="13" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RATIO" width="8" begin="7" end="0" resetval="0xX" description="Divider Dn Ratio (SYSCLKn divider)" range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_PLLDIV2" acronym="PLLCTRL0_PLLDIV2" offset="0x11C" width="32" description="PLL Controller Divider 2 Register for SYSCLK2 This register controls value of the divider 2 for SYSCLK2. It divides down the sysrefclk (SYSCLK reference clock from either the BYPASS or PLL path). The &#8220;n&#8221; in the following table should be replaced with the appropriate divider number (e.g. use D1EN for and SYSCLK1).">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DN_EN" width="1" begin="15" end="15" resetval="0x1" description="Divider Dn Enable" range="" rwaccess="R"/>
    <bitfield id="HALF_RATIO" width="1" begin="14" end="14" resetval="0x0" description="Ratio is in half steps." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="13" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RATIO" width="8" begin="7" end="0" resetval="0xX" description="Divider Dn Ratio (SYSCLKn divider)" range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_BPDIV" acronym="PLLCTRL0_BPDIV" offset="0x12C" width="32" description="Bypass Divider Register for SYSCLKBP This register controls value of the BPDIV for SYSCLKBP. It divides down the refclk (CLKIN or OSCIN).">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BPDEN" width="1" begin="15" end="15" resetval="0xX" description="Bypass Divider Enable" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="7" begin="14" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RATIO" width="8" begin="7" end="0" resetval="0xX" description="Bypass Divider Ratio (SYSCLKBP divider)" range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_WAKEUP" acronym="PLLCTRL0_WAKEUP" offset="0x130" width="32" description="Wakeup Register This register controls whether different events in the system are enabled to wake up the device after entering oscillator power down through OSCPWRDN.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WKEN" width="16" begin="15" end="0" resetval="0x0" description="Input wakeupin_i[0 to 15]." range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_PLLCMD" acronym="PLLCTRL0_PLLCMD" offset="0x138" width="32" description="PLL Controller Command Register The PLL Controller Command Register contains command bits for various PLLCTRL operations. The register bits always read back what was previously written, but no action should be initiated based on a read. They are not self-modified by the PLLCTRL except through reset, where the bits return to default. A write of 1 to a defined bit triggers the action, a write of 0 is ignored. The status of the command can be viewed in the register.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="OSCPWRDN" width="1" begin="1" end="1" resetval="0x0" description="Oscillator Power Down Command" range="" rwaccess="RW"/>
    <bitfield id="GOSET" width="1" begin="0" end="0" resetval="0x0" description="GO bit for SYSCLKx phase alignment." range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_PLLSTAT" acronym="PLLCTRL0_PLLSTAT" offset="0x13C" width="32" description="PLL Controller Status Register The fields in this register shows the PLL Controller status.">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="STABLE" width="1" begin="2" end="2" resetval="0xX" description="OSCIN Stable" range="" rwaccess="R"/>
    <bitfield id="LOCK" width="1" begin="1" end="1" resetval="0x0" description="PLL Core STATUS" range="" rwaccess="R"/>
    <bitfield id="GOSET" width="1" begin="0" end="0" resetval="0x0" description="Reflects the status of GO transition." range="" rwaccess="R"/>
  </register>
  <register id="PLLCTRL0_ALNCTL" acronym="PLLCTRL0_ALNCTL" offset="0x140" width="32" description="PLL Controller Clock Align Control Register The bits in this register correspond to the SYSCLK[x-1]. For example, bit 0 corresponds to SYSCLK1, bit 1 corresponds to SYSCLK2&#8230;etc. Only bit fields corresponding to existing SYSCLKx are defined. For example, bit 31 is not defined because SYSCLK32 does not exist. By setting the ALN bits, the selected SYSCLKx will always be phase aligned to other clocks also selected in this register. This is useful for aligning selected clocks for these operations: GO operation: Align selected clocks after changing divider ratios Clock Gating Operation: Align selected clocks before starting a clock-gated SYSCLK again It is user&#8217;s responsibility to ensure that is not written to when GO operation is in progress (i.e. when .GOSTAT = 1). Otherwise operation is undefined.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ALN" width="15" begin="15" end="1" resetval="0x1" description="SYSCLKx needs to be aligned with other clocks selected in this register." range="" rwaccess="RW"/>
    <bitfield id="ALN1" width="1" begin="0" end="0" resetval="0x1" description="SYSCLK1 needs to be aligned with other clocks selected in this register." range="" rwaccess="RW"/>
  </register>
  <register id="PLLCTRL0_DCHANGE" acronym="PLLCTRL0_DCHANGE" offset="0x144" width="32" description="PLLDIV Divider Ratio Change Status Register The register bits in this register correspond to the SYSCLKx. For example, bit SYS1 corresponds to SYSCLK1. Only bit fields corresponding to existing SYSCLKx are defined. For example, bit 31 is not defined because SYSCLK32 does not exist. Whenever a different ratio is written to the PLLDIV[] registers, the PLLCTRL flags the change in the status register. During GO operation, the PLLCTRL will only change the divide ratio of the SYSCLK with the bit set in . Note that register determines if that clock also needs to be aligned to other clocks.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="SYS" width="15" begin="15" end="1" resetval="0x0" description="SYSCLKx divide ratio has been modified." range="" rwaccess="R"/>
    <bitfield id="SYS1" width="1" begin="0" end="0" resetval="0x0" description="SYSCLK1 divide ratio has been modified." range="" rwaccess="R"/>
  </register>
  <register id="PLLCTRL0_SYSTAT" acronym="PLLCTRL0_SYSTAT" offset="0x150" width="32" description="SYSCLK Status Register This register shows the enable/disable status of SYSCLKx. Clock gating is controlled in three ways - register setting in PLLDIVx, module input, or DFT/CATScan control. Note that this register does not reflect the temporary clock pause status to align clocks coming out of reset, clock-gating, or SYSCLK divide ratio change (GO operation).">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="SYS2_ON" width="1" begin="1" end="1" resetval="0xX" description="SYSCLK2 on" range="" rwaccess="R"/>
    <bitfield id="SYS1_ON" width="1" begin="0" end="0" resetval="0xX" description="SYSCLK1 on" range="" rwaccess="R"/>
  </register>
</module>
