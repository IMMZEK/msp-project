<module name="NSS_0_CFG_CPTS" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="CPTS_IDVER" acronym="CPTS_IDVER" offset="0x0" width="32" description="">
    <bitfield id="REV" width="32" begin="31" end="0" resetval="0x4E8A0107" description="TI internal data. Identifies revision of peripheral." range="" rwaccess="R"/>
  </register>
  <register id="CPTS_CONTROL" acronym="CPTS_CONTROL" offset="0x4" width="32" description="">
    <bitfield id="TS_SYNC_SEL" width="4" begin="31" end="28" resetval="0x0" description="TS_SYNC output timestamp counter bit select" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="12" begin="27" end="16" resetval="0x0" description="read as zero." range="" rwaccess="R"/>
    <bitfield id="HW8_TS_PUSH_EN" width="1" begin="15" end="15" resetval="0x0" description="Hardware push 8 enable" range="" rwaccess="RW"/>
    <bitfield id="HW7_TS_PUSH_EN" width="1" begin="14" end="14" resetval="0x0" description="Hardware push 7 enable" range="" rwaccess="RW"/>
    <bitfield id="HW6_TS_PUSH_EN" width="1" begin="13" end="13" resetval="0x0" description="Hardware push 6 enable" range="" rwaccess="RW"/>
    <bitfield id="HW5_TS_PUSH_EN" width="1" begin="12" end="12" resetval="0x0" description="Hardware push 5 enable" range="" rwaccess="RW"/>
    <bitfield id="HW4_TS_PUSH_EN" width="1" begin="11" end="11" resetval="0x0" description="Hardware push 4 enable" range="" rwaccess="RW"/>
    <bitfield id="HW3_TS_PUSH_EN" width="1" begin="10" end="10" resetval="0x0" description="Hardware push 3 enable" range="" rwaccess="RW"/>
    <bitfield id="HW2_TS_PUSH_EN" width="1" begin="9" end="9" resetval="0x0" description="Hardware push 2 enable" range="" rwaccess="RW"/>
    <bitfield id="HW1_TS_PUSH_EN" width="1" begin="8" end="8" resetval="0x0" description="Hardware push 1 enable" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0x0" description="Read as zero." range="" rwaccess="R"/>
    <bitfield id="TS_COMP_TOG" width="1" begin="6" end="6" resetval="0x0" description="Timestamp Compare Toggle mode" range="" rwaccess="RW"/>
    <bitfield id="_64_BIT_MODE" width="1" begin="5" end="5" resetval="0x0" description="64-Bit Mode" range="" rwaccess="RW"/>
    <bitfield id="SEQUENCE_EN" width="1" begin="4" end="4" resetval="0x0" description="Sequence Enable" range="" rwaccess="RW"/>
    <bitfield id="TSTAMP_EN" width="1" begin="3" end="3" resetval="0x0" description="Host Receive Timestamp Enable" range="" rwaccess="RW"/>
    <bitfield id="TS_COMP_POLARITY" width="1" begin="2" end="2" resetval="0x1" description="TS_COMP polarity" range="" rwaccess="RW"/>
    <bitfield id="INT_TEST" width="1" begin="1" end="1" resetval="0x0" description="Interrupt test - When set, this bit allows the raw interrupt to be written to facilitate interrupt test." range="" rwaccess="RW"/>
    <bitfield id="CPTS_EN" width="1" begin="0" end="0" resetval="0x0" description="Time sync enable &#8211; When disabled (cleared to zero), the RCLK domain is held in reset." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_RFTCLK_SEL" acronym="CPTS_RFTCLK_SEL" offset="0x8" width="32" description="">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Read as zero." range="" rwaccess="R"/>
    <bitfield id="RFTCLK_SEL" width="5" begin="4" end="0" resetval="0x0" description="Reference clock select: This RFTCLK_SEL value can be written only when the CPTS_EN bit and the TSTAMP_EN bit are cleared to zero in the" range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_PUSH" acronym="CPTS_TS_PUSH" offset="0xC" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="Read as zero." range="" rwaccess="R"/>
    <bitfield id="TS_PUSH" width="1" begin="0" end="0" resetval="0x0" description="Time stamp event push &#8211; When a logic high is written to this bit a time stamp event is pushed onto the event FIFO. The time stamp value is the time of the write of this register, not the time of the event read. The time stamp value can then be read on interrupt via the event registers. Software should not push a second time stamp event onto the event FIFO until the first time stamp value has been read from the event FIFO (there should be only one time stamp event in the event FIFO at any given time). This bit is write only and always reads zero." range="" rwaccess="W"/>
  </register>
  <register id="CPTS_TS_LOAD_LOW_VAL" acronym="CPTS_TS_LOAD_LOW_VAL" offset="0x10" width="32" description="">
    <bitfield id="TS_LOAD_VAL" width="32" begin="31" end="0" resetval="0x0" description="Time stamp load value&#8211; Writing the ts_load_en bit causes TS_LOAD_VAL[63:0] to be written into the time stamp. The time stamp value is read by initiating a time stamp push event, not by reading this register. When reading this register, the value read is not the time stamp, but is the value that was last written to this register." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_LOAD_EN" acronym="CPTS_TS_LOAD_EN" offset="0x14" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="Read as zero" range="" rwaccess="R"/>
    <bitfield id="TS_LOAD_EN" width="1" begin="0" end="0" resetval="0x0" description="Time stamp load enable &#8211; Writing a one to this bit enables the time stamp value to be written with the value in TS_LOAD_VAL[63:0]. This bit is write only and will be cleared by the hardware after one clock. The upper 32- bits of the timestamp are forced to zero in 32-bit mode." range="" rwaccess="W"/>
  </register>
  <register id="CPTS_TS_COMP_LOW_VAL" acronym="CPTS_TS_COMP_LOW_VAL" offset="0x18" width="32" description="">
    <bitfield id="TS_COMP_VAL" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp Comparison Low Value &#8211; Writing a non-zero value to the TS_Comp_Length[15:0] register causes a pulse of TS_Comp_Length RCLK periods on the TS_COMP output and a comparison event when the time_stamp counter value is equivalent to ts_comp_val." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_COMP_LEN" acronym="CPTS_TS_COMP_LEN" offset="0x1C" width="32" description="">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x0" description="Read as zero" range="" rwaccess="R"/>
    <bitfield id="TS_COMP_LENGTH" width="24" begin="23" end="0" resetval="0x0" description="Time stamp comparison length - Writing a non-zero value to this field enables the time stamp comparison event and output. This value should be zero when the TS_Comp_Low_Val and TS_Comp_High_Val registers are written." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_INTSTAT_RAW" acronym="CPTS_INTSTAT_RAW" offset="0x20" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="TS_PEND_RAW" width="1" begin="0" end="0" resetval="0x0" description="TS_PEND_RAW int read (before enable). Writable when int_test = 1 A one in this bit indicates that there are one or more events in the event FIFO." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_INTSTAT_MASKED" acronym="CPTS_INTSTAT_MASKED" offset="0x24" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="TS_PEND" width="1" begin="0" end="0" resetval="0x0" description="TS_PEND masked interrupt read (after enable)" range="" rwaccess="R"/>
  </register>
  <register id="CPTS_INT_ENABLE" acronym="CPTS_INT_ENABLE" offset="0x28" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="RESERVED" range="" rwaccess="R"/>
    <bitfield id="TS_PEND_EN" width="1" begin="0" end="0" resetval="0x0" description="TS_PEND masked interrupt enable." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_COMP_NUDGE" acronym="CPTS_TS_COMP_NUDGE" offset="0x2C" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Read as zero." range="" rwaccess="R"/>
    <bitfield id="TS_COMP_NUDGE" width="8" begin="7" end="0" resetval="0x0" description="Timestamp Comparison Nudge Value. This two&#8217;s complement number is added to the ts_comp_length[23:0] value to increase or decrease the TS_COMP length by the ts_comp_nudge amount. Only a single high or low time is adjusted and the ts_comp_nudge value is cleared to zero when the nudge has occurred." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_EVENT_POP" acronym="CPTS_EVENT_POP" offset="0x30" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="Read as zero." range="" rwaccess="R"/>
    <bitfield id="EVENT_POP" width="1" begin="0" end="0" resetval="0x0" description="Event pop - When a logic high is written to this bit an event is popped off the event FIFO. The event FIFO pop occurs as part of the interrupt process after the event has been read from the Event_0-3 registers. Popping an event discards the event and causes the next event, if any, to be moved to the top of the FIFO ready to be read by software on interrupt." range="" rwaccess="W"/>
  </register>
  <register id="CPTS_EVENT_0" acronym="CPTS_EVENT_0" offset="0x34" width="32" description="">
    <bitfield id="TIME_STAMP" width="32" begin="31" end="0" resetval="0x-" description="Time Stamp &#8211; The timestamp is valid for transmit, receive, and time stamp push event types. The timestamp value is not valid for counter roll event types." range="" rwaccess="R"/>
  </register>
  <register id="CPTS_EVENT_1" acronym="CPTS_EVENT_1" offset="0x38" width="32" description="">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x-" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PORT_NUMBER" width="5" begin="28" end="24" resetval="0x-" description="Port number - indicates the port number (encoded) of an Ethernet event or the encoded hardware timestamp number." range="" rwaccess="R"/>
    <bitfield id="EVENT_TYPE" width="4" begin="23" end="20" resetval="0x-" description="Event type" range="" rwaccess="R"/>
    <bitfield id="MESSAGE_TYPE" width="4" begin="19" end="16" resetval="0x-" description="Message type &#8211; The message type value that was contained in an Ethernet transmit or receive time sync packet. This field is valid only for Ethernet transmit or receive events." range="" rwaccess="R"/>
    <bitfield id="SEQUENCE_ID" width="16" begin="15" end="0" resetval="0x-" description="Sequence ID &#8211; The 16-bit sequence id is the value that was contained in an Ethernet transmit or receive time sync packet. This field is valid only for Ethernet transmit or receive events." range="" rwaccess="R"/>
  </register>
  <register id="CPTS_EVENT_2" acronym="CPTS_EVENT_2" offset="0x3C" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x-" description="RESERVED" range="" rwaccess="R"/>
    <bitfield id="DOMAIN" width="8" begin="7" end="0" resetval="0x-" description="Domain &#8211; The 8-bit domain is the value that was contained in an Ethernet transmit or receive time sync packet. This field is valid only for Ethernet transmit or receive events." range="" rwaccess="R"/>
  </register>
  <register id="CPTS_EVENT_3" acronym="CPTS_EVENT_3" offset="0x40" width="32" description="">
    <bitfield id="TIME_STAMP" width="32" begin="31" end="0" resetval="0x-" description="Time Stamp &#8211; The timestamp upper 32-bits are valid for transmit, receive, and time stamp push event types. This value is zero in 32-bit mode." range="" rwaccess="R"/>
  </register>
  <register id="CPTS_TS_LOAD_HIGH_VAL" acronym="CPTS_TS_LOAD_HIGH_VAL" offset="0x44" width="32" description="">
    <bitfield id="TS_LOAD_VAL" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp Load high Value &#8211; Writing the ts_load_en bit causes the value contained in this register (and the CPTS_TS_LOAD_VAL[63:0]) to be written into the time stamp. The time stamp value is read by initiating a time stamp push event, not by reading this register. When reading this register, the value read is not the time stamp, but is the value that was last written to this register. This value is unused in 32-bit mode" range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_COMP_HIGH_VAL" acronym="CPTS_TS_COMP_HIGH_VAL" offset="0x48" width="32" description="">
    <bitfield id="TS_COMP_VAL" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp Comparison High Value &#8211; Writing a non-zero value to the TS_Comp_Length[15:0] register causes a pulse of TS_Comp_Length RCLK periods on the TS_COMP output and a comparison event when the time_stamp counter value is equivalent to ts_comp_val[63:0]. This value is unused in 32-bit mode. The upper 32-bits in this register should be written before the lower 32-bits in the TS_Comp_Low_Val register." range="" rwaccess="RW"/>
  </register>
</module>
