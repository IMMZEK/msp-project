<module name="DSI1_A" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="DSI_REVISION" acronym="DSI_REVISION" offset="0x0" width="32" description="IP Revision">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="See" description="IP Revision" range="" rwaccess="R"/>
  </register>
  <register id="DSI_SYSCONFIG" acronym="DSI_SYSCONFIG" offset="0x10" width="32" description="System configuration register">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="CLOCKACTIVITY" width="2" begin="9" end="8" resetval="0x0" description="Clock activity during wake-up mode period" range="" rwaccess="RW">
      <bitenum value="0" id="OCPFuncOff" token="CLOCKACTIVITY_0" description="Interface and functional clocks can be switched off."/>
      <bitenum value="1" id="FuncOff" token="CLOCKACTIVITY_1" description="Functional clocks can be switched off and Interface clocks are maintained during wake-up period."/>
      <bitenum value="2" id="OCPOff" token="CLOCKACTIVITY_2" description="Interface clocks can be switched off and functional clocks are maintained during wake-up period."/>
      <bitenum value="3" id="OCPFuncOn" token="CLOCKACTIVITY_3" description="Interface and functional clocks are maintained during wake-up period."/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SIDLEMODE" width="2" begin="4" end="3" resetval="0x2" description="Slave interface power management, Idle req/ack control" range="" rwaccess="RW">
      <bitenum value="0" id="fIdle" token="SIDLEMODE_0" description="Force-idle. An idle request is acknowledged unconditionally."/>
      <bitenum value="1" id="nIdle" token="SIDLEMODE_1" description="No-idle. An idle request is never acknowledged."/>
      <bitenum value="2" id="sIdle" token="SIDLEMODE_2" description="Smart-idle. Acknowledgment to an idle request is given based on the internal activity of the module."/>
      <bitenum value="3" id="Res" token="SIDLEMODE_3" description="Reserved"/>
    </bitfield>
    <bitfield id="ENWAKEUP" width="1" begin="2" end="2" resetval="0" description="Wake-up mode enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="WakeUpDis" token="ENWAKEUP_0" description="Wakeup is disabled."/>
      <bitenum value="1" id="WakeUpEnb" token="ENWAKEUP_1" description="Wakeup is enabled."/>
    </bitfield>
    <bitfield id="SOFT_RESET" width="1" begin="1" end="1" resetval="0" description="Software reset. Set the bit to 1 to trigger a module reset. The bit is automatically reset by the hardware. During reads returns 0." range="" rwaccess="RW">
      <bitenum value="0" id="Normal" token="SOFT_RESET_0" description="Normal mode"/>
      <bitenum value="1" id="Reset" token="SOFT_RESET_1" description="The module is reset."/>
    </bitfield>
    <bitfield id="AUTO_IDLE" width="1" begin="0" end="0" resetval="1" description="Internal interface gating strategy" range="" rwaccess="RW">
      <bitenum value="0" id="Free" token="AUTO_IDLE_0" description="Interface clock is free-running."/>
      <bitenum value="1" id="Gated" token="AUTO_IDLE_1" description="Automatic Interface clock-gating strategy is applied based on the interface activity."/>
    </bitfield>
  </register>
  <register id="DSI_SYSSTATUS" acronym="DSI_SYSSTATUS" offset="0x14" width="32" description="System status register .">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="RESET_DONE" width="1" begin="0" end="0" resetval="1" description="Internal reset monitoring" range="" rwaccess="R">
      <bitenum value="0" id="ResetOngoing" token="RESET_DONE_0_r" description="Internal module reset is ongoing."/>
      <bitenum value="1" id="ResetCompleted" token="RESET_DONE_1_r" description="Reset completed."/>
    </bitfield>
  </register>
  <register id="DSI_IRQSTATUS" acronym="DSI_IRQSTATUS" offset="0x18" width="32" description="Interrupt status register &#8211; All virtual channels + DSI PHY + PLL">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="TE1_LINE_IRQ" width="1" begin="22" end="22" resetval="0" description="The VSYNC and corresponding HSYNC pulses defined in DSI_TE_HSYNC_NUMBER for the line TE1 have been received by the DSI protocol engine and have triggeedr the start of the data transfer to the peripheral." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="TE1_LINE_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="TE1_LINE_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="TE0_LINE_IRQ" width="1" begin="21" end="21" resetval="0" description="The VSYNC and corresponding HSYNC pulses defined in DSI_TE_HSYNC_NUMBER for the line TE0 have been received by the DSI protocol engine and have triggered the start of the data transfer to the peripheral." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="TE0_LINE_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="TE0_LINE_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="TA_TO_IRQ" width="1" begin="20" end="20" resetval="0" description="Turnaround time-out" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="TA_TO_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="TA_TO_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="19" end="19" resetval="0" description="Reserved. Keep at reset value. . ." range="" rwaccess="RW"/>
    <bitfield id="SYNC_LOST_IRQ" width="1" begin="18" end="18" resetval="0" description="Synchronization with video port is lost (video mode only)." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="SYNC_LOST_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="SYNC_LOST_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ACK_TRIGGER_IRQ" width="1" begin="17" end="17" resetval="0" description="Acknowledge trigger" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ACK_TRIGGER_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="ACK_TRIGGER_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="TE_TRIGGER_IRQ" width="1" begin="16" end="16" resetval="0" description="Tearing effect trigger" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="TE_TRIGGER_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="TE_TRIGGER_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="LP_RX_TO_IRQ" width="1" begin="15" end="15" resetval="0" description="Interrupt for low-power RX time-out" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="LP_RX_TO_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="LP_RX_TO_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="HS_TX_TO_IRQ" width="1" begin="14" end="14" resetval="0" description="Interrupt for high-speed TX time-out" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="HS_TX_TO_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="HS_TX_TO_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="13" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="COMPLEXIO_ERR_IRQ" width="1" begin="10" end="10" resetval="0" description="Error signaling from DSI PHY: status of the DSI PHY errors received from the DSI PHY (events are defined inDSI_COMPLEXIO_IRQSTATUS)." range="" rwaccess="R">
      <bitenum value="0" id="False" token="COMPLEXIO_ERR_IRQ_0_r" description="Reads: Event is false."/>
      <bitenum value="1" id="True" token="COMPLEXIO_ERR_IRQ_1_r" description="Reads: Event is true (pending)."/>
    </bitfield>
    <bitfield id="PLL_RECAL_IRQ" width="1" begin="9" end="9" resetval="0" description="PLL recal event (assertion of DSIRecal signal from the DSI PLL control module)" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="PLL_RECAL_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="PLL_RECAL_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="PLL_UNLOCK_IRQ" width="1" begin="8" end="8" resetval="0" description="PLL unclock event (deassertion of DSILock signal from the DSI PLL control module)" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="PLL_UNLOCK_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="PLL_UNLOCK_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="PLL_LOCK_IRQ" width="1" begin="7" end="7" resetval="0" description="PLL clock event (assertion of DSILock signal from the DSI PLL control module)" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="PLL_LOCK_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="PLL_LOCK_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="RESYNCHRONIZATION_IRQ" width="1" begin="5" end="5" resetval="0" description="Video mode resynchronization indicates to software users that the video port works but the configuration of the timings for the display controller (DISPC) and DSI protocol engine may need to be modified to avoid resynchronization from occurring." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="RESYNCHRONIZATION_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="RESYNCHRONIZATION_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="WAKEUP_IRQ" width="1" begin="4" end="4" resetval="0" description="Wakeup" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="WAKEUP_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="WAKEUP_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="VIRTUAL_CHANNEL3_IRQ" width="1" begin="3" end="3" resetval="0" description="Virtual channel 3" range="" rwaccess="R">
      <bitenum value="0" id="False" token="VIRTUAL_CHANNEL3_IRQ_0_r" description="Reads: Event is false."/>
      <bitenum value="1" id="True" token="VIRTUAL_CHANNEL3_IRQ_1_r" description="Reads: Event is true (pending)."/>
    </bitfield>
    <bitfield id="VIRTUAL_CHANNEL2_IRQ" width="1" begin="2" end="2" resetval="0" description="Virtual channel 2" range="" rwaccess="R">
      <bitenum value="0" id="False" token="VIRTUAL_CHANNEL2_IRQ_0_r" description="Reads: Event is false."/>
      <bitenum value="1" id="True" token="VIRTUAL_CHANNEL2_IRQ_1_r" description="Reads: Event is true (pending)."/>
    </bitfield>
    <bitfield id="VIRTUAL_CHANNEL1_IRQ" width="1" begin="1" end="1" resetval="0" description="Virtual channel 1" range="" rwaccess="R">
      <bitenum value="0" id="False" token="VIRTUAL_CHANNEL1_IRQ_0_r" description="Reads: Event is false."/>
      <bitenum value="1" id="True" token="VIRTUAL_CHANNEL1_IRQ_1_r" description="Reads: Event is true (pending)."/>
    </bitfield>
    <bitfield id="VIRTUAL_CHANNEL0_IRQ" width="1" begin="0" end="0" resetval="0" description="Virtual channel 0" range="" rwaccess="R">
      <bitenum value="0" id="False" token="VIRTUAL_CHANNEL0_IRQ_0_r" description="Reads: Event is false."/>
      <bitenum value="1" id="True" token="VIRTUAL_CHANNEL0_IRQ_1_r" description="Reads: Event is true (pending)."/>
    </bitfield>
  </register>
  <register id="DSI_IRQENABLE" acronym="DSI_IRQENABLE" offset="0x1C" width="32" description="Interrupt enable register &#8211; This register associates 1 bit for each virtual channel to enable or disable each virtual channel individually.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="TE1_LINE_IRQ_EN" width="1" begin="22" end="22" resetval="0" description="The VSYNC and corresponding HSYNC pulses defined in DSI_TE_HSYNC_NUMBER for the line TE1 have been received by the DSI protocol engine and have triggered the start of the data transfer to the peripheral." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE1_LINE_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="TE1_LINE_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="TE0_LINE_IRQ_EN" width="1" begin="21" end="21" resetval="0" description="The VSYNC and corresponding HSYNC pulses defined in DSI_TE_HSYNC_NUMBER for the line TE0 have been received by the DSI protocol engine and have triggered the start of the data transfer to the peripheral." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE0_LINE_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="TE0_LINE_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="TA_TO_IRQ_EN" width="1" begin="20" end="20" resetval="0" description="Turnaround time-out" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TA_TO_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="TA_TO_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="19" end="19" resetval="0" description="Reserved. Keep at reset value. . ." range="" rwaccess="RW"/>
    <bitfield id="SYNC_LOST_IRQ_EN" width="1" begin="18" end="18" resetval="0" description="Synchronization with video port is lost (video mode only)" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="SYNC_LOST_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="SYNC_LOST_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="ACK_TRIGGER_IRQ_EN" width="1" begin="17" end="17" resetval="0" description="Acknowledge trigger" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ACK_TRIGGER_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="ACK_TRIGGER_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="TE_TRIGGER_IRQ_EN" width="1" begin="16" end="16" resetval="0" description="Tearing effect trigger" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_TRIGGER_IRQ_EN_0" description="Event is masked.."/>
      <bitenum value="1" id="Enable" token="TE_TRIGGER_IRQ_EN_1" description="Event generates an interrupt when it occurs.."/>
    </bitfield>
    <bitfield id="LP_RX_TO_IRQ_EN" width="1" begin="15" end="15" resetval="0" description="Interrupt for low-power RX time-out" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="LP_RX_TO_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="LP_RX_TO_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="HS_TX_TO_IRQ_EN" width="1" begin="14" end="14" resetval="0" description="Interrupt for high-speed TX time-out" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="HS_TX_TO_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="HS_TX_TO_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="13" end="10" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PLL_RECAL_IRQ_EN" width="1" begin="9" end="9" resetval="0" description="PLL recal event (assertion of DSIRecal signal from the DSI PLL control module)" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="PLL_RECAL_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="PLL_RECAL_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="PLL_UNLOCK_IRQ_EN" width="1" begin="8" end="8" resetval="0" description="PLL unclock event (deassertion of DSILock signal from the DSI PLL control module)" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="PLL_UNLOCK_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="PLL_UNLOCK_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="PLL_LOCK_IRQ_EN" width="1" begin="7" end="7" resetval="0" description="PLL clock event (assertion of DSILock signal from the DSI PLL control module)" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="PLL_LOCK_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="PLL_LOCK_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="RESYNCHRONIZATION_IRQ_EN" width="1" begin="5" end="5" resetval="0" description="Video mode resynchronization" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="RESYNCHRONIZATION_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="RESYNCHRONIZATION_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="WAKEUP_IRQ_EN" width="1" begin="4" end="4" resetval="0" description="Wakeup" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="WAKEUP_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="WAKEUP_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="DSI_CTRL" acronym="DSI_CTRL" offset="0x40" width="32" description="Global control register &#8211; This register controls the DSI protocol engine module. This register mustnot be modified dynamically (except IF_EN bit fields).">
    <bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="DISPC_UPDATE_SYNC" width="1" begin="24" end="24" resetval="0" description="Determines whether the Dispc_Update_Sync signal from the display controller is used" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="DISPC_UPDATE_SYNC_0" description="Dispc_Update_Sync signal is not used."/>
      <bitenum value="1" id="Enable" token="DISPC_UPDATE_SYNC_1" description="Dispc_Update_Sync signal is used."/>
    </bitfield>
    <bitfield id="HSA_BLANKING_MODE" width="1" begin="23" end="23" resetval="0" description="Blanking mode" range="" rwaccess="RW">
      <bitenum value="0" id="COMMAND_PACKET_TX_FIFO" token="HSA_BLANKING_MODE_0" description="Packets in TX FIFO are sent during HSA blanking period of video mode or LPS is used."/>
      <bitenum value="1" id="HS_BLANKING_PACKET_ONLY" token="HSA_BLANKING_MODE_1" description="LONG BLANKING PACKETS only are used during HSA blanking period of video mode."/>
    </bitfield>
    <bitfield id="HBP_BLANKING_MODE" width="1" begin="22" end="22" resetval="0" description="Blanking mode" range="" rwaccess="RW">
      <bitenum value="0" id="COMMAND_PACKET_TX_FIFO" token="HBP_BLANKING_MODE_0" description="Packets in TX FIFO are sent during HBP blanking period of video mode or LPS is used."/>
      <bitenum value="1" id="HS_BLANKING_PACKET_ONLY" token="HBP_BLANKING_MODE_1" description="LONG BLANKING PACKETS only are used during HBP blanking period of video mode."/>
    </bitfield>
    <bitfield id="HFP_BLANKING_MODE" width="1" begin="21" end="21" resetval="0" description="Blanking mode" range="" rwaccess="RW">
      <bitenum value="0" id="COMMAND_PACKET_TX_FIFO" token="HFP_BLANKING_MODE_0" description="Packets in TX FIFO are sent during HFP blanking period of video mode or LPS is used."/>
      <bitenum value="1" id="HS_BLANKING_PACKET_ONLY" token="HFP_BLANKING_MODE_1" description="LONG BLANKING PACKETS only are used during HFP blanking period of video mode."/>
    </bitfield>
    <bitfield id="BLANKING_MODE" width="1" begin="20" end="20" resetval="0" description="Blanking mode" range="" rwaccess="RW">
      <bitenum value="0" id="LPS" token="BLANKING_MODE_0" description="LPS is used during blanking periods of video mode (except HSA, HBP, HFP defined in HSA_BLANKING_MODE, HBP_BLANKING_MODE, and HFP_BLANKING_MODE, respectively) when there is no command mode data in TX FIFO ready to be sent. Thus, blanking periods can be different during the frame depending on the TX FIFO."/>
      <bitenum value="1" id="HS" token="BLANKING_MODE_1" description="LONG BLANKING PACKETS are used during blanking periods of video mode (except HSA, HBP, HFP defined in HSA_BLANKING_MODE, HBP_BLANKING_MODE, and HFP_BLANKING_MODE, respectively) regardless of the packets present in the TX FIFO ready to be sent."/>
    </bitfield>
    <bitfield id="EOT_ENABLE" width="1" begin="19" end="19" resetval="0" description="Enable EOT packets at the end of HS transmission." range="" rwaccess="RW">
      <bitenum value="0" id="EOT_OFF" token="EOT_ENABLE_0" description="No EOT packets"/>
      <bitenum value="1" id="EOT_ON" token="EOT_ENABLE_1" description="EOT packet is sent at all HS-to-LP transitions."/>
    </bitfield>
    <bitfield id="VP_HSYNC_END" width="1" begin="18" end="18" resetval="0" description="HSYNC end pulse" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="VP_HSYNC_END_0" description="Disabled. No HSYNC END short packet is generated."/>
      <bitenum value="1" id="Enable" token="VP_HSYNC_END_1" description="Enabled. While the HSYNC END pulse is detected, the associated short packet HSYNC END is generated."/>
    </bitfield>
    <bitfield id="VP_HSYNC_START" width="1" begin="17" end="17" resetval="0" description="HSYNC start pulse." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="VP_HSYNC_START_0" description="Disabled. No HSYNC START short packet is generated."/>
      <bitenum value="1" id="Enable" token="VP_HSYNC_START_1" description="Enabled. While the HSYNC start pulse is detected, the associated short packet HSYNC START is generated."/>
    </bitfield>
    <bitfield id="VP_VSYNC_END" width="1" begin="16" end="16" resetval="0" description="VSYNC end pulse" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="VP_VSYNC_END_0" description="Disabled. No VSYNC END short packet is generated."/>
      <bitenum value="1" id="Enable" token="VP_VSYNC_END_1" description="Enabled. While the VSYNC END pulse is detected, the associated short packet VSYNC END is generated."/>
    </bitfield>
    <bitfield id="VP_VSYNC_START" width="1" begin="15" end="15" resetval="0" description="VSYNC start pulse" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="VP_VSYNC_START_0" description="Disabled. No VSYNC START short packet is generated."/>
      <bitenum value="1" id="Enable" token="VP_VSYNC_START_1" description="Enabled. While the VSYNC START pulse is detected, the associated short packet VSYNC START is generated."/>
    </bitfield>
    <bitfield id="TRIGGER_RESET_MODE" width="1" begin="14" end="14" resetval="0" description="Selection of the trigger reset modeThe principal is to wait for the current video frame to be transferred on the link. Any data received after the VSYNC are ignored. enum=Synchronized ." range="" rwaccess="RW">
      <bitenum value="0" id="Synchronized" token="TRIGGER_RESET_MODE_0" description="Synchronized: The mode is valid only if there is virtual channel using the video mode and it is active."/>
      <bitenum value="1" id="Immediate" token="TRIGGER_RESET_MODE_1" description="Immediate: All pending requests in TX FIFO are taken into account for transfer scheduling, the RX FIFO is ignored, and the data from video port are ignored as soon as possible. Only the current transfer on DSI link and already scheduled ones are transmitted. All the other transfers are discarded."/>
    </bitfield>
    <bitfield id="LINE_BUFFER" width="2" begin="13" end="12" resetval="0x0" description="Number of line buffers to be used while receiving data on the video port. The valid values are from 0 toDSI_GNQ[17:16] VP1_NB_LINE_BUFFER." range="" rwaccess="RW">
      <bitenum value="0" id="f0" token="LINE_BUFFER_0" description="No line buffer"/>
      <bitenum value="1" id="f1" token="LINE_BUFFER_1" description="One line buffer"/>
      <bitenum value="2" id="f2" token="LINE_BUFFER_2" description="Two line buffers"/>
    </bitfield>
    <bitfield id="VP_VSYNC_POL" width="1" begin="11" end="11" resetval="0" description="VP vertical synchronization signal polarity" range="" rwaccess="RW">
      <bitenum value="0" id="Low" token="VP_VSYNC_POL_0" description="VSYNC signal on the video port is active low."/>
      <bitenum value="1" id="High" token="VP_VSYNC_POL_1" description="VSYNC signal on the video port is active high."/>
    </bitfield>
    <bitfield id="VP_HSYNC_POL" width="1" begin="10" end="10" resetval="0" description="VP horizontal synchronization signal polarity" range="" rwaccess="RW">
      <bitenum value="0" id="Low" token="VP_HSYNC_POL_0" description="HSYNC signal on the video port is active low."/>
      <bitenum value="1" id="High" token="VP_HSYNC_POL_1" description="HSYNC signal on the video port is active high."/>
    </bitfield>
    <bitfield id="VP_DE_POL" width="1" begin="9" end="9" resetval="0" description="VP data enable signal polarity" range="" rwaccess="RW">
      <bitenum value="0" id="Low" token="VP_DE_POL_0" description="DE signal on the video port is active low."/>
      <bitenum value="1" id="High" token="VP_DE_POL_1" description="DE signal on the video port is active high."/>
    </bitfield>
    <bitfield id="VP_CLK_POL" width="1" begin="8" end="8" resetval="1" description="VP pixel clock polarity" range="" rwaccess="RW">
      <bitenum value="0" id="Falling" token="VP_CLK_POL_0" description="The DSI protocol engine module captures the data on the VP on the pixel clock falling edge. The module connected to the VP must drive the data on the pixel clock rising edge."/>
      <bitenum value="1" id="Rising" token="VP_CLK_POL_1" description="The DSI protocol engine module captures the data on the VP on the pixel clock raising edge. The module connected to the VP must drive the data on the pixel clock falling edge."/>
    </bitfield>
    <bitfield id="VP_DATA_BUS_WIDTH" width="2" begin="7" end="6" resetval="0x0" description="Defines the size of the video port data bus" range="" rwaccess="RW">
      <bitenum value="0" id="f16" token="VP_DATA_BUS_WIDTH_0" description="16-bit data width (LSB of the 24-bit video port data bus)"/>
      <bitenum value="1" id="f18" token="VP_DATA_BUS_WIDTH_1" description="18-bit data width (LSB of the 24-bit video port data bus)"/>
      <bitenum value="2" id="f24" token="VP_DATA_BUS_WIDTH_2" description="24-bit data width (LSB of the 24-bit video port data bus)"/>
    </bitfield>
    <bitfield id="TRIGGER_RESET" width="1" begin="5" end="5" resetval="0" description="Send the reset trigger to the peripheral." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TRIGGER_RESET_0" description="Reads: Reset trigger generation is complete. It is reset by hardware when it completes. Writes: Cancellation of the request for reset trigger generation (may be too late because it is already ongoing)"/>
      <bitenum value="1" id="Enable" token="TRIGGER_RESET_1" description="Reads: Generation of the reset trigger has been requested by the user (may be ongoing but not yet complete). Writes: Request for reset trigger to be sent to the peripheral"/>
    </bitfield>
    <bitfield id="VP_CLK_RATIO" width="1" begin="4" end="4" resetval="0" description="The field indicates the clock ratio between VP_CLK and VP_PCLK. The clock VP_PCLK is generated from VP_CLK. It is divided down.The information is used only when the video port is used to provide data in command mode. In the case of video mode, it is not used. ." range="" rwaccess="RW">
      <bitenum value="0" id="RATIO2" token="VP_CLK_RATIO_0" description="The clock VP_PCLK is the clock VP_CLK divided by 2. The duty cycle of VP_PCLK is 50/50."/>
      <bitenum value="1" id="RATIO3ANDHIGHER" token="VP_CLK_RATIO_1" description="The clock VP_PCLK is the clock VP_CLK divided by 3 or more. The duty cycle of VP_PCLK is not 50/50 for odd ratio numbers (3 , 5, 7, ...)."/>
    </bitfield>
    <bitfield id="TX_FIFO_ARBITRATION" width="1" begin="3" end="3" resetval="0" description="Defines the arbitration scheme for granting the virtual channel pending ready requests in the TX FIFO" range="" rwaccess="RW">
      <bitenum value="0" id="RoundRobin" token="TX_FIFO_ARBITRATION_0" description="Round-robin scheme is used."/>
      <bitenum value="1" id="Sequential" token="TX_FIFO_ARBITRATION_1" description="Sequential scheme is used."/>
    </bitfield>
    <bitfield id="ECC_RX_EN" width="1" begin="2" end="2" resetval="0" description="Enables the Error Correction Code check for the received header (short and long packets for all virtual channel ids)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_RX_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="ECC_RX_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="CS_RX_EN" width="1" begin="1" end="1" resetval="0" description="Enables the checksum check for the received payload (long packet only for all virtual channel ids)" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="CS_RX_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="CS_RX_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="IF_EN" width="1" begin="0" end="0" resetval="0" description="Enables the module. When the module is disabled, the signals from the DSI PHY are gated (no updates of the interrupt status register).It is not possible to change the bit fields in the register except when IF_EN is enabled. All the other registers can be changed except those that require [0] VC_EN to be equal to 0 to be modified. ." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="IF_EN_0" description="The interface is disabled. If one of the virtual channels uses the video mode with the video port to receive data, the DSI protocol engine is disabled when the next VSYNC is received and all the data in the FIFO for the other virtual channels in command mode are sent to the peripherals (if BTA_EN is enabled, the DSI protocol must wait for the response and BTA from the peripheral before disabling all the internal logic, because an acknowledge is requested)."/>
      <bitenum value="1" id="Enable" token="IF_EN_1" description="The interface is enabled immediately, and the data acquisition on the video port starts on the next VSYNC (video mode) or first data received in the slave port FIFO (command mode)."/>
    </bitfield>
  </register>
  <register id="DSI_GNQ" acronym="DSI_GNQ" offset="0x44" width="32" description="Generic parameter register &#8211; This register provide a way to read the generic parameters used in the design.">
    <bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0x00" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="NB_VIDEO_PORTS" width="1" begin="24" end="24" resetval="1" description="Number of video ports" range="" rwaccess="R">
      <bitenum value="0" id="Single_VP" token="NB_VIDEO_PORTS_0_r" description="Only video port 1 is present."/>
      <bitenum value="1" id="Dual_VP" token="NB_VIDEO_PORTS_1_r" description="Video port 1 and video port 2 are present."/>
    </bitfield>
    <bitfield id="VP2_NB_LINE_BUFFER" width="2" begin="23" end="22" resetval="0x2" description="Determines the number of video buffer lines associated to video port 2" range="" rwaccess="R">
      <bitenum value="0" id="f0" token="VP2_NB_LINE_BUFFER_0_r" description="No line buffer"/>
      <bitenum value="1" id="f1" token="VP2_NB_LINE_BUFFER_1_r" description="One line buffer of the size defined in LINE_BUFFER_SIZE"/>
      <bitenum value="2" id="f2" token="VP2_NB_LINE_BUFFER_2_r" description="Two line buffers of the size defined in LINE_BUFFER_SIZE"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="VP2_LINE_BUFFER_SIZE" width="3" begin="20" end="18" resetval="0x4" description="Determines the video line buffer size associated to video port 2" range="" rwaccess="R">
      <bitenum value="1" id="f1" token="VP2_LINE_BUFFER_SIZE_1_r" description="512 x 24 bits, 682 x 18 bits, 768 x 16 bits (memory of 384 x 32 bits)"/>
      <bitenum value="2" id="f2" token="VP2_LINE_BUFFER_SIZE_2_r" description="682 x 24 bits, 910 x 18 bits, 1024 x 16 bits (memory of 512 x 32 bits)"/>
      <bitenum value="3" id="f3" token="VP2_LINE_BUFFER_SIZE_3_r" description="853 x 24 bits, 1137 x 18 bits, 1280 x 16 bits (memory of 640 x 32 bits)"/>
      <bitenum value="4" id="f4" token="VP2_LINE_BUFFER_SIZE_4_r" description="1024 x 24 bits, 1365 x 18 bits, 1536 x 16 bits (memory of 768 x 32 bits)"/>
      <bitenum value="5" id="f5" token="VP2_LINE_BUFFER_SIZE_5_r" description="1194 x 24 bits, 1592 x 18 bits, 1792 x 16 bits (memory of 896 x 32 bits)"/>
      <bitenum value="6" id="f6" token="VP2_LINE_BUFFER_SIZE_6_r" description="1365 x 24 bits, 1820 x 18 bits, 2048 x 16 bits (memory of 1024 x 32 bits)"/>
    </bitfield>
    <bitfield id="VP1_NB_LINE_BUFFER" width="2" begin="17" end="16" resetval="0x2" description="Determines the number of video buffer lines associated to video port 1" range="" rwaccess="R">
      <bitenum value="0" id="f0" token="VP1_NB_LINE_BUFFER_0_r" description="No line buffer"/>
      <bitenum value="1" id="f1" token="VP1_NB_LINE_BUFFER_1_r" description="1 line buffer of the size defined in LINE_BUFFER_SIZE"/>
      <bitenum value="2" id="f2" token="VP1_NB_LINE_BUFFER_2_r" description="2 line buffers of the size defined in LINE_BUFFER_SIZE"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="15" end="15" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="VP1_LINE_BUFFER_SIZE" width="3" begin="14" end="12" resetval="0x7" description="Determines the video line buffer size associated to video port 1" range="" rwaccess="R">
      <bitenum value="1" id="f1" token="VP1_LINE_BUFFER_SIZE_1_r" description="512 x 24 bits, 682 x 18 bits, 768 x16 bits (memory of 384 x 32 bits)"/>
      <bitenum value="2" id="f2" token="VP1_LINE_BUFFER_SIZE_2_r" description="682 x 24 bits, 910 x 18 bits, 1024 x16 bits (memory of 512 x 32 bits)"/>
      <bitenum value="3" id="f3" token="VP1_LINE_BUFFER_SIZE_3_r" description="853 x 24 bits, 1137 x 18 bits, 1280 x16 bits (memory of 640 x 32 bits)"/>
      <bitenum value="4" id="f4" token="VP1_LINE_BUFFER_SIZE_4_r" description="1024 x 24 bits, 1365 x 18 bits, 1536 x16 bits (memory of 768 x 32 bits)"/>
      <bitenum value="5" id="f5" token="VP1_LINE_BUFFER_SIZE_5_r" description="1194 x 24 bits, 1592 x 18 bits, 1792 x16 bits (memory of 896 x 32 bits)"/>
      <bitenum value="6" id="f6" token="VP1_LINE_BUFFER_SIZE_6_r" description="1365 x 24 bits, 1820 x 18 bits, 2048 x16 bits (memory of 1024 x 32 bits)"/>
      <bitenum value="7" id="f7" token="VP1_LINE_BUFFER_SIZE_7_r" description="1920 x 24 bits, 2560 x 18 bits, 2880 x16 bits (memory of 1440 x 32 bits)"/>
    </bitfield>
    <bitfield id="NB_DATA_LANES" width="3" begin="11" end="9" resetval="0x4" description="Determines the number of data lanes supported by the DSI protocol engine" range="" rwaccess="R">
      <bitenum value="1" id="f1" token="NB_DATA_LANES_1_r" description="One data lane"/>
      <bitenum value="2" id="f2" token="NB_DATA_LANES_2_r" description="Two data lanes"/>
      <bitenum value="3" id="f3" token="NB_DATA_LANES_3_r" description="Three data lanes"/>
      <bitenum value="4" id="f4" token="NB_DATA_LANES_4_r" description="Four data lanes"/>
    </bitfield>
    <bitfield id="NB_DMA_REQUEST" width="3" begin="8" end="6" resetval="0x4" description="Determines the number of DMA_REQ signals" range="" rwaccess="R">
      <bitenum value="0" id="f0" token="NB_DMA_REQUEST_0_r" description="No DMA request"/>
      <bitenum value="1" id="f1" token="NB_DMA_REQUEST_1_r" description="One DMA request"/>
      <bitenum value="2" id="f2" token="NB_DMA_REQUEST_2_r" description="Two DMA requests"/>
      <bitenum value="3" id="f3" token="NB_DMA_REQUEST_3_r" description="Three DMA requests"/>
      <bitenum value="4" id="f4" token="NB_DMA_REQUEST_4_r" description="Four DMA requests"/>
    </bitfield>
    <bitfield id="RX_FIFODEPTH" width="3" begin="5" end="3" resetval="0x6" description="Determines the data RX FIFO depth (32-bit words) on the slave port" range="" rwaccess="R">
      <bitenum value="4" id="f32" token="RX_FIFODEPTH_4_r" description="32x 33 bits"/>
      <bitenum value="5" id="f64" token="RX_FIFODEPTH_5_r" description="64x 33 bits"/>
      <bitenum value="6" id="f128" token="RX_FIFODEPTH_6_r" description="128 x 33 bits"/>
      <bitenum value="7" id="f256" token="RX_FIFODEPTH_7_r" description="256 x 33 bits"/>
    </bitfield>
    <bitfield id="TX_FIFODEPTH" width="3" begin="2" end="0" resetval="0x6" description="Determines the data TX FIFO depth (33-bit words) on the slave port" range="" rwaccess="R">
      <bitenum value="4" id="f32" token="TX_FIFODEPTH_4_r" description="32x 33 bits"/>
      <bitenum value="5" id="f64" token="TX_FIFODEPTH_5_r" description="64x 33 bits"/>
      <bitenum value="6" id="f128" token="TX_FIFODEPTH_6_r" description="128 x 33 bits"/>
      <bitenum value="7" id="f256" token="TX_FIFODEPTH_7_r" description="256 x 33 bits"/>
    </bitfield>
  </register>
  <register id="DSI_COMPLEXIO_CFG1" acronym="DSI_COMPLEXIO_CFG1" offset="0x48" width="32" description="Complexio configuration register for the DSI PHY.">
    <bitfield id="SHADOWING" width="1" begin="31" end="31" resetval="0" description="Shadowing configuration" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="SHADOWING_0" description="Disabled. The writes to the through registers are done like the other SCP registers."/>
      <bitenum value="1" id="Enable" token="SHADOWING_1" description="Enabled. The writes to the through registers are done only when the GOBIT is set and when the signal DISPCUpdataSync from the display controller module is active."/>
    </bitfield>
    <bitfield id="GOBIT" width="1" begin="30" end="30" resetval="0" description="Allows the synchronized update of the shadow registers when the signal DISPCUpdateSync is active." range="" rwaccess="RW">
      <bitenum value="0" id="Reset" token="GOBIT_0" description="Resets the GOBIT. The hardware has finished the update of the shadow SCP registers. The bit is reset by hardware. The software can reset the bit if the user decides to abort it. There is no guarantee that the software reset is done before the transfer of the values to the DSI PHY."/>
      <bitenum value="1" id="Set" token="GOBIT_1" description="Set the GOBIT. Only when the transfer of the new values for the three first registers is completed (3, 2, 1, or 0 transfers are performed based on the number of registers to update), the GOBIT is reset. The DISPCUpdateSync signal is used to synchronize the update. The bit must be set only when it is in reset state."/>
    </bitfield>
    <bitfield id="RESET_DONE" width="1" begin="29" end="29" resetval="1" description="Internal reset monitoring of the power domain using the TXBYTECLKHS clock from the DSI PHY" range="" rwaccess="R">
      <bitenum value="0" id="ResetOngoing" token="RESET_DONE_0_r" description="Internal module reset is ongoing."/>
      <bitenum value="1" id="ResetCompleted" token="RESET_DONE_1_r" description="Reset completed."/>
    </bitfield>
    <bitfield id="PWR_CMD" width="2" begin="28" end="27" resetval="0x0" description="Command for power control of the DSI PHY" range="" rwaccess="RW">
      <bitenum value="0" id="STATE_OFF" token="PWR_CMD_0" description="Command to change to OFF state"/>
      <bitenum value="1" id="STATE_ON" token="PWR_CMD_1" description="Command to change to ON state"/>
      <bitenum value="2" id="STATE_ULP" token="PWR_CMD_2" description="Command to change to ULTRALOW-POWER state"/>
    </bitfield>
    <bitfield id="PWR_STATUS" width="2" begin="26" end="25" resetval="0x0" description="Status of the power control of the DSI PHY" range="" rwaccess="R">
      <bitenum value="0" id="STATE_OFF" token="PWR_STATUS_0_r" description="DSI PHY in OFF state"/>
      <bitenum value="1" id="STATE_ON" token="PWR_STATUS_1_r" description="DSI PHY in ON state"/>
      <bitenum value="2" id="STATE_ULP" token="PWR_STATUS_2_r" description="DSI PHY in ULTRALOW-POWER state"/>
    </bitfield>
    <bitfield id="RESERVED" width="5" begin="24" end="20" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DATA4_POL" width="1" begin="19" end="19" resetval="0" description="&#177; differential pin order of the fourth data lane" range="" rwaccess="RW">
      <bitenum value="0" id="&#177;_pin_order_(DSI.DX_=_+_and_DSi.DY_=_&#8211;)" token="DATA4_POL_0" description="&#177; pin order (DSI.DX = + and DSi.DY = &#8211;)"/>
      <bitenum value="1" id="&#177;_pin_order_(DSI.DX=_&#8211;_and_DSi.DY_=_+)" token="DATA4_POL_1" description="&#177; pin order (DSI.DX= &#8211; and DSi.DY = +)"/>
    </bitfield>
    <bitfield id="DATA4_POSITION" width="3" begin="18" end="16" resetval="0x0" description="Position and order of the fourth data lane" range="" rwaccess="RW">
      <bitenum value="0" id="Not_used/connected" token="DATA4_POSITION_0" description="Not used/connected"/>
      <bitenum value="1" id="1" token="DATA4_POSITION_1" description="The fourth data lane is at the first position (first lane is lane 0)."/>
      <bitenum value="2" id="2" token="DATA4_POSITION_2" description="The fourth data lane is at the second position (second lane is lane 1)."/>
      <bitenum value="3" id="3" token="DATA4_POSITION_3" description="The fourth data lane is at the third position (third lane is lane 2)."/>
      <bitenum value="4" id="4" token="DATA4_POSITION_4" description="The fourth data lane is at the fourth position (fourth lane is lane 3)."/>
      <bitenum value="5" id="5" token="DATA4_POSITION_5" description="The fourth data lane is at the fifth position (fifth lane is lane 4)."/>
    </bitfield>
    <bitfield id="DATA3_POL" width="1" begin="15" end="15" resetval="0" description="&#177; differential pin order of the third data lane" range="" rwaccess="RW">
      <bitenum value="0" id="&#177;_pin_order_(DSI.DX_=_+_and_DSi.DY_=_&#8211;)" token="DATA3_POL_0" description="&#177; pin order (DSI.DX = + and DSi.DY = &#8211;)"/>
      <bitenum value="1" id="&#177;_pin_order_(DSI.DX_=_&#8211;_and_DSi.DY_=_+)" token="DATA3_POL_1" description="&#177; pin order (DSI.DX = &#8211; and DSi.DY = +)"/>
    </bitfield>
    <bitfield id="DATA3_POSITION" width="3" begin="14" end="12" resetval="0x0" description="Position and order of the third data lane" range="" rwaccess="RW">
      <bitenum value="0" id="Not_used/connected" token="DATA3_POSITION_0" description="Not used/connected"/>
      <bitenum value="1" id="1" token="DATA3_POSITION_1" description="The third data lane is at the first position (first lane is lane 0)."/>
      <bitenum value="2" id="2" token="DATA3_POSITION_2" description="The third data lane is at the second position (second lane is lane 1)."/>
      <bitenum value="3" id="3" token="DATA3_POSITION_3" description="The third data lane is at the third position (third lane is lane 2)."/>
      <bitenum value="4" id="4" token="DATA3_POSITION_4" description="The third data lane is at the fourth position 4 (fourth lane is lane 3)."/>
      <bitenum value="5" id="5" token="DATA3_POSITION_5" description="The third data lane is at the fifth position (fifth lane is lane 4)."/>
    </bitfield>
    <bitfield id="DATA2_POL" width="1" begin="11" end="11" resetval="0" description="&#177; differential pin order of the seond data lane" range="" rwaccess="RW">
      <bitenum value="0" id="PlusMinus" token="DATA2_POL_0" description="&#177; pin order (DSI.DX = + and DSi.DY = &#8211;)"/>
      <bitenum value="1" id="MinusPlus" token="DATA2_POL_1" description="&#177; pin order (DSI.DX = &#8211; and DSi.DY = +)"/>
    </bitfield>
    <bitfield id="DATA2_POSITION" width="3" begin="10" end="8" resetval="0x0" description="Position and order of the second data lane" range="" rwaccess="RW">
      <bitenum value="0" id="Not_used" token="DATA2_POSITION_0" description="Not used/connected"/>
      <bitenum value="1" id="Position_1" token="DATA2_POSITION_1" description="The second data lane is at the first position (first lane is lane 0)."/>
      <bitenum value="2" id="Position_2" token="DATA2_POSITION_2" description="The second data lane is at the second position (second lane is lane 1)."/>
      <bitenum value="3" id="Position_3" token="DATA2_POSITION_3" description="The second data lane is at the third position (third lane is lane 2)."/>
      <bitenum value="4" id="Position_4" token="DATA2_POSITION_4" description="The second data lane is at the fourth position (fourth lane is lane 3)."/>
      <bitenum value="5" id="Position_5" token="DATA2_POSITION_5" description="The second data lane is at the fifth position (fifth lane is lane 4)."/>
    </bitfield>
    <bitfield id="DATA1_POL" width="1" begin="7" end="7" resetval="0" description="&#177; pin differential pin order of the first data lane" range="" rwaccess="RW">
      <bitenum value="0" id="PlusMinus" token="DATA1_POL_0" description="&#177; pin order (DSI.DX = + and DSi.DY = &#8211;)"/>
      <bitenum value="1" id="MinusPlus" token="DATA1_POL_1" description="&#177; pin order (DSI.DX = &#8211; and DSi.DY = +)"/>
    </bitfield>
    <bitfield id="DATA1_POSITION" width="3" begin="6" end="4" resetval="0x0" description="Position and order of the first data lane. The first data lane s always present." range="" rwaccess="RW">
      <bitenum value="0" id="Not_used/connected" token="DATA1_POSITION_0" description="Not used/connected"/>
      <bitenum value="1" id="Position_1" token="DATA1_POSITION_1" description="The first data lane is at the first position (first lane is lane 0)."/>
      <bitenum value="2" id="Position_2" token="DATA1_POSITION_2" description="The first data lane is at the second position (second lane is lane 1)."/>
      <bitenum value="3" id="Position_3" token="DATA1_POSITION_3" description="The first data lane is at the third position (third lane is lane 2)."/>
      <bitenum value="4" id="Position_4" token="DATA1_POSITION_4" description="The first data lane is at the fourth position (fourth lane is lane 3)."/>
      <bitenum value="5" id="Position_5" token="DATA1_POSITION_5" description="The first data lane is at the fifth position (fifth lane is lane 4)."/>
    </bitfield>
    <bitfield id="CLOCK_POL" width="1" begin="3" end="3" resetval="0" description="&#177; differential pin order of the clock lane" range="" rwaccess="RW">
      <bitenum value="0" id="PlusMinus" token="CLOCK_POL_0" description="&#177; pin order (DSI.DX = + and DSi.DY = &#8211;)"/>
      <bitenum value="1" id="MinusPlus" token="CLOCK_POL_1" description="&#177; pin order (DSI.DX = &#8211; and DSi.DY = +)"/>
    </bitfield>
    <bitfield id="CLOCK_POSITION" width="3" begin="2" end="0" resetval="0x0" description="Position and order of the clock lane; 0, 5, 6, and 7 are reserved. The clock lane is always present but cannot be at the fifth position even if the DSI PHY consists of five lanes." range="" rwaccess="RW">
      <bitenum value="0" id="Not_used/connected" token="CLOCK_POSITION_0" description="Not used/connected"/>
      <bitenum value="1" id="Position_1" token="CLOCK_POSITION_1" description="Clock lane is at the first position (first lane is lane 0)."/>
      <bitenum value="2" id="Position_2" token="CLOCK_POSITION_2" description="Clock lane is at the second position (second lane is lane 1)."/>
      <bitenum value="3" id="Position_3" token="CLOCK_POSITION_3" description="Clock lane is at the third position (third lane is lane 2)."/>
      <bitenum value="4" id="Position_4" token="CLOCK_POSITION_4" description="Clock lane is at the fourth position (fourth lane is lane 3)."/>
      <bitenum value="5" id="Position_4" token="CLOCK_POSITION_5" description="Reserved"/>
      <bitenum value="6" id="Position_4" token="CLOCK_POSITION_6" description="Reserved"/>
      <bitenum value="7" id="Position_4" token="CLOCK_POSITION_7" description="Reserved"/>
    </bitfield>
  </register>
  <register id="DSI_COMPLEXIO_IRQSTATUS" acronym="DSI_COMPLEXIO_IRQSTATUS" offset="0x4C" width="32" description="Interrupt status register &#8211; All errors from DSI PHY">
    <bitfield id="ULPSACTIVENOT_ALL1_IRQ" width="1" begin="31" end="31" resetval="0" description="All the ULPSActiveNOT signals corresponding to the lanes with TXULPSExit being high are high." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ULPSACTIVENOT_ALL1_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ULPSACTIVENOT_ALL1_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ULPSACTIVENOT_ALL0_IRQ" width="1" begin="30" end="30" resetval="0" description="All signals ULPSActiveNOT are 0" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ULPSACTIVENOT_ALL0_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ULPSACTIVENOT_ALL0_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP1_5_IRQ" width="1" begin="29" end="29" resetval="0" description="Contention LP1 error for the fifth lane" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ERRCONTENTIONLP1_5_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="ERRCONTENTIONLP1_5_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP0_5_IRQ" width="1" begin="28" end="28" resetval="0" description="Contention LP0 error for the fifth lane" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ERRCONTENTIONLP0_5_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="ERRCONTENTIONLP0_5_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP1_4_IRQ" width="1" begin="27" end="27" resetval="0" description="Contention LP1 error for the fourth lane" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ERRCONTENTIONLP1_4_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="ERRCONTENTIONLP1_4_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP0_4_IRQ" width="1" begin="26" end="26" resetval="0" description="Contention LP0 error for the fourth lane" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ERRCONTENTIONLP0_4_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="ERRCONTENTIONLP0_4_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP1_3_IRQ" width="1" begin="25" end="25" resetval="0" description="Contention LP1 error for the third lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRCONTENTIONLP1_3_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRCONTENTIONLP1_3_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP0_3_IRQ" width="1" begin="24" end="24" resetval="0" description="Contention LP0 error for the third lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRCONTENTIONLP0_3_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRCONTENTIONLP0_3_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP1_2_IRQ" width="1" begin="23" end="23" resetval="0" description="Contention LP1 error for the second lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRCONTENTIONLP1_2_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRCONTENTIONLP1_2_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP0_2_IRQ" width="1" begin="22" end="22" resetval="0" description="Contention LP0 error for the second lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRCONTENTIONLP0_2_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRCONTENTIONLP0_2_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP1_1_IRQ" width="1" begin="21" end="21" resetval="0" description="Contention LP1 error for the first lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRCONTENTIONLP1_1_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRCONTENTIONLP1_1_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP0_1_IRQ" width="1" begin="20" end="20" resetval="0" description="Contention LP0 error for the first lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRCONTENTIONLP0_1_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRCONTENTIONLP0_1_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="STATEULPS5_IRQ" width="1" begin="19" end="19" resetval="0" description="the fifth lane in ULTRALOW-POWER State" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="STATEULPS5_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="STATEULPS5_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="STATEULPS4_IRQ" width="1" begin="18" end="18" resetval="0" description="the fourth lane in ultralow-power mode" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="STATEULPS4_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="STATEULPS4_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="STATEULPS3_IRQ" width="1" begin="17" end="17" resetval="0" description="the third lane in ULTRALOW-POWER state" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="STATEULPS3_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="STATEULPS3_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="STATEULPS2_IRQ" width="1" begin="16" end="16" resetval="0" description="the second lane in ULTRALOW-POWER state" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="STATEULPS2_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="STATEULPS2_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="STATEULPS1_IRQ" width="1" begin="15" end="15" resetval="0" description="the first lane in ULTRALOW-POWER state" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="STATEULPS1_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="STATEULPS1_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTROL5_IRQ" width="1" begin="14" end="14" resetval="0" description="Control error for the fifth lane" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ERRCONTROL5_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="ERRCONTROL5_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTROL4_IRQ" width="1" begin="13" end="13" resetval="0" description="Control error for the fourth lane" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ERRCONTROL4_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="ERRCONTROL4_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTROL3_IRQ" width="1" begin="12" end="12" resetval="0" description="Control error for the third lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRCONTROL3_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRCONTROL3_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTROL2_IRQ" width="1" begin="11" end="11" resetval="0" description="Control error for the second lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRCONTROL2_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRCONTROL2_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRCONTROL1_IRQ" width="1" begin="10" end="10" resetval="0" description="Control error for the first lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRCONTROL1_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRCONTROL1_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRESC5_IRQ" width="1" begin="9" end="9" resetval="0" description="Escape entry error for the fifth lane" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ERRESC5_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="ERRESC5_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRESC4_IRQ" width="1" begin="8" end="8" resetval="0" description="Escape entry error for the fourth lane" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ERRESC4_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="ERRESC4_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRESC3_IRQ" width="1" begin="7" end="7" resetval="0" description="Escape entry error for the third lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRESC3_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRESC3_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRESC2_IRQ" width="1" begin="6" end="6" resetval="0" description="Escape entry error for the second lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRESC2_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRESC2_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRESC1_IRQ" width="1" begin="5" end="5" resetval="0" description="Escape entry error for the first lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRESC1_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRESC1_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRSYNCESC5_IRQ" width="1" begin="4" end="4" resetval="0" description="Low power Data transmission synchronization error for the fifth lane" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ERRSYNCESC5_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="ERRSYNCESC5_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRSYNCESC4_IRQ" width="1" begin="3" end="3" resetval="0" description="Low power Data transmission synchronization error for the fourth lane" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ERRSYNCESC4_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="1" token="ERRSYNCESC4_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRSYNCESC3_IRQ" width="1" begin="2" end="2" resetval="0" description="Low power Data transmission synchronization error for the third lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRSYNCESC3_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRSYNCESC3_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRSYNCESC2_IRQ" width="1" begin="1" end="1" resetval="0" description="Low power Data transmission synchronization error for the second lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRSYNCESC2_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRSYNCESC2_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ERRSYNCESC1_IRQ" width="1" begin="0" end="0" resetval="0" description="Low power Data transmission synchronization error for the first lane" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ERRSYNCESC1_IRQ_0" description="Reads: Event is false. Writes: Status bit unchanged."/>
      <bitenum value="1" id="True" token="ERRSYNCESC1_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
  </register>
  <register id="DSI_COMPLEXIO_IRQENABLE" acronym="DSI_COMPLEXIO_IRQENABLE" offset="0x50" width="32" description="INTERRUPT ENABLE REGISTER - All errors from DSI PHY">
    <bitfield id="ULPSACTIVENOT_ALL1_IRQ_EN" width="1" begin="31" end="31" resetval="0" description="All the ULPSActiveNOT signals corresponding to the lanes with TXULPSExit being high are high." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ULPSACTIVENOT_ALL1_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ULPSACTIVENOT_ALL1_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ULPSACTIVENOT_ALL0_IRQ_EN" width="1" begin="30" end="30" resetval="0" description="All signals ULPSActiveNOT are 0" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ULPSACTIVENOT_ALL0_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ULPSACTIVENOT_ALL0_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP1_5_IRQ_EN" width="1" begin="29" end="29" resetval="0" description="Contention LP1 error for the fifth lane" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="ERRCONTENTIONLP1_5_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="ERRCONTENTIONLP1_5_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP0_5_IRQ_EN" width="1" begin="28" end="28" resetval="0" description="Contention LP0 error for the fifth lane" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="ERRCONTENTIONLP0_5_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="ERRCONTENTIONLP0_5_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP1_4_IRQ_EN" width="1" begin="27" end="27" resetval="0" description="Contention LP1 error for the fourth lane" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="ERRCONTENTIONLP1_4_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="ERRCONTENTIONLP1_4_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP0_4_IRQ_EN" width="1" begin="26" end="26" resetval="0" description="Contention LP0 error for the fourth lane" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="ERRCONTENTIONLP0_4_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="ERRCONTENTIONLP0_4_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP1_3_IRQ_EN" width="1" begin="25" end="25" resetval="0" description="Contention LP1 error for the third lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRCONTENTIONLP1_3_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRCONTENTIONLP1_3_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP0_3_IRQ_EN" width="1" begin="24" end="24" resetval="0" description="Contention LP0 error for the third lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRCONTENTIONLP0_3_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRCONTENTIONLP0_3_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP1_2_IRQ_EN" width="1" begin="23" end="23" resetval="0" description="Contention LP1 error for the second lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRCONTENTIONLP1_2_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRCONTENTIONLP1_2_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP0_2_IRQ_EN" width="1" begin="22" end="22" resetval="0" description="Contention LP0 error for the second lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRCONTENTIONLP0_2_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRCONTENTIONLP0_2_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP1_1_IRQ_EN" width="1" begin="21" end="21" resetval="0" description="Contention LP1 error for the first lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRCONTENTIONLP1_1_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRCONTENTIONLP1_1_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTENTIONLP0_1_IRQ_EN" width="1" begin="20" end="20" resetval="0" description="Contention LP0 error for the first lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRCONTENTIONLP0_1_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRCONTENTIONLP0_1_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="STATEULPS5_IRQ_EN" width="1" begin="19" end="19" resetval="0" description="the fifth lane in ULTRALOW-POWER state" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="STATEULPS5_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="STATEULPS5_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="STATEULPS4_IRQ_EN" width="1" begin="18" end="18" resetval="0" description="the fourth lane in ULTRALOW-POWER state" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="STATEULPS4_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="STATEULPS4_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="STATEULPS3_IRQ_EN" width="1" begin="17" end="17" resetval="0" description="the third lane in ULTRALOW-POWER state" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="STATEULPS3_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="STATEULPS3_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="STATEULPS2_IRQ_EN" width="1" begin="16" end="16" resetval="0" description="the second lane in ULTRALOW-POWER state" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="STATEULPS2_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="STATEULPS2_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="STATEULPS1_IRQ_EN" width="1" begin="15" end="15" resetval="0" description="the first lane in ULTRALOW-POWER state" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="STATEULPS1_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="STATEULPS1_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTROL5_IRQ_EN" width="1" begin="14" end="14" resetval="0" description="Control error for the fifth lane" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="ERRCONTROL5_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="ERRCONTROL5_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTROL4_IRQ_EN" width="1" begin="13" end="13" resetval="0" description="Control error for the fourth lane" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="ERRCONTROL4_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="ERRCONTROL4_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTROL3_IRQ_EN" width="1" begin="12" end="12" resetval="0" description="Control error for the third lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRCONTROL3_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRCONTROL3_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTROL2_IRQ_EN" width="1" begin="11" end="11" resetval="0" description="Control error for the second lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRCONTROL2_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRCONTROL2_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRCONTROL1_IRQ_EN" width="1" begin="10" end="10" resetval="0" description="Control error for the first lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRCONTROL1_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRCONTROL1_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRESC5_IRQ_EN" width="1" begin="9" end="9" resetval="0" description="Escape entry error for the fifth lane" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="ERRESC5_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="ERRESC5_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRESC4_IRQ_EN" width="1" begin="8" end="8" resetval="0" description="Escape entry error for the fourth lane" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="ERRESC4_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="ERRESC4_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRESC3_IRQ_EN" width="1" begin="7" end="7" resetval="0" description="Escape entry error for the third lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRESC3_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRESC3_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRESC2_IRQ_EN" width="1" begin="6" end="6" resetval="0" description="Escape entry error for the second lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRESC2_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRESC2_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRESC1_IRQ_EN" width="1" begin="5" end="5" resetval="0" description="Escape entry error for the first lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRESC1_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRESC1_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRSYNCSESC5_IRQ_EN" width="1" begin="4" end="4" resetval="0" description="Low power Data transmission synchronization error for the fifth lane" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="ERRSYNCSESC5_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="ERRSYNCSESC5_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRSYNCSESC4_IRQ_EN" width="1" begin="3" end="3" resetval="0" description="Low power Data transmission synchronization error for the fourth lane" range="" rwaccess="RW">
      <bitenum value="0" id="Event_is_masked" token="ERRSYNCSESC4_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="1" token="ERRSYNCSESC4_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRSYNCSESC3_IRQ_EN" width="1" begin="2" end="2" resetval="0" description="Low power Data transmission synchronization error for the third lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRSYNCSESC3_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRSYNCSESC3_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRSYNCSESC2_IRQ_EN" width="1" begin="1" end="1" resetval="0" description="Low power Data transmission synchronization error for the second lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRSYNCSESC2_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRSYNCSESC2_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="ERRSYNCSESC1_IRQ_EN" width="1" begin="0" end="0" resetval="0" description="Low power Data transmission synchronization error for the first lane" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ERRSYNCSESC1_IRQ_EN_0" description="Event is masked"/>
      <bitenum value="1" id="Enable" token="ERRSYNCSESC1_IRQ_EN_1" description="Event generates an interrupt when it occurs"/>
    </bitfield>
  </register>
  <register id="DSI_CLK_CTRL" acronym="DSI_CLK_CTRL" offset="0x54" width="32" description="CLOCK CONTROL This register controls the CLOCK GENERATION. The register can be modified only when IF_EN is reset.">
    <bitfield id="PLL_PWR_CMD" width="2" begin="31" end="30" resetval="0x0" description="Command for power control of the DSI PLL Control module" range="" rwaccess="RW">
      <bitenum value="0" id="STATE_OFF" token="PLL_PWR_CMD_0" description="Command to change to OFF state"/>
      <bitenum value="1" id="STATE_ON_HSCLK" token="PLL_PWR_CMD_1" description="Command to change to ON state for PLL only (HSDIVISER is OFF)"/>
      <bitenum value="2" id="STATE_ON_ALL" token="PLL_PWR_CMD_2" description="Command to change to ON state for both PLL and HSDIVISER"/>
      <bitenum value="3" id="STATE_ON_DIV" token="PLL_PWR_CMD_3" description="Command to change to ON state for both PLL and HSDIVISER (no clock output to the DSI PHY)"/>
    </bitfield>
    <bitfield id="PLL_PWR_STATUS" width="2" begin="29" end="28" resetval="0x0" description="Status of the power control of the DSI PLL Control module" range="" rwaccess="R">
      <bitenum value="0" id="STATE_OFF" token="PLL_PWR_STATUS_0_r" description="DSI PLL Control module in OFF state"/>
      <bitenum value="1" id="STATE_ON_HSCLK" token="PLL_PWR_STATUS_1_r" description="DSI PLL Control module in ON state for PLL only (HSDIVISER is OFF)"/>
      <bitenum value="2" id="STATE_ON_ALL" token="PLL_PWR_STATUS_2_r" description="DSI PLL Control module in ON state for both PLL and HSDIVISER"/>
      <bitenum value="3" id="STATE_ON_DIV" token="PLL_PWR_STATUS_3_r" description="DSI PLL Control module in ON state for both PLL and HSDIVISER (no clock output to the DSI PHY)"/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="27" end="22" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="LP_RX_SYNCHRO_ENABLE" width="1" begin="21" end="21" resetval="0" description="Defines if the functional is higher or lower than 30 MHz. The information is used to define synchronization to be used for RxValidEsc." range="" rwaccess="RW">
      <bitenum value="0" id="LowSpeed" token="LP_RX_SYNCHRO_ENABLE_0" description="The DSI functional clock is equal or slower than 30 MHz. The synchronization is falling/rising."/>
      <bitenum value="1" id="HighSpeed" token="LP_RX_SYNCHRO_ENABLE_1" description="The DSI functional clock is higher than 30 MHz. The synchronization is rising/rising."/>
    </bitfield>
    <bitfield id="LP_CLK_ENABLE" width="1" begin="20" end="20" resetval="0" description="Controls the gating of the TXCLKESC clock." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="LP_CLK_ENABLE_0" description="Disabled. The clock is not generated. The value of LP_CLK_DIVISOR is not used and does not need to be programmed."/>
      <bitenum value="1" id="Enable" token="LP_CLK_ENABLE_1" description="Enabled. The clock is generated. The value of LP_CLK_DIVISOR is used and needs to be programmed."/>
    </bitfield>
    <bitfield id="HS_MANUAL_STOP_CTRL" width="1" begin="19" end="19" resetval="0" description="In case HS_AUTO_STOP_ENABLE=0, the bit field allows manual control of the assertion/de-assertion of the signal DSIStopClk by the user." range="" rwaccess="RW">
      <bitenum value="0" id="Deassertion" token="HS_MANUAL_STOP_CTRL_0" description="DSIStopClk de-assertion unconditionally."/>
      <bitenum value="1" id="Assertion" token="HS_MANUAL_STOP_CTRL_1" description="DSIStopClk assertion unconditionally."/>
    </bitfield>
    <bitfield id="HS_AUTO_STOP_ENABLE" width="1" begin="18" end="18" resetval="0" description="Enables the automatic assertion/de-assertion of DSIStopClk signal." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="HS_AUTO_STOP_ENABLE_0" description="Auto mode disabled."/>
      <bitenum value="1" id="Enable" token="HS_AUTO_STOP_ENABLE_1" description="Auto mode enabled."/>
    </bitfield>
    <bitfield id="LP_CLK_NULL_PACKET_SIZE" width="2" begin="17" end="16" resetval="0x0" description="Indicates the size of LP NULL Packets to be sent automatically when after the last LP packet transfer. It is used by the receiver to drain its internal pipeline. The valid values are from 0 to 3 bytes for the payload size." range="" rwaccess="RW"/>
    <bitfield id="LP_CLK_NULL_PACKET_ENABLE" width="1" begin="15" end="15" resetval="0" description="Enables the generation of NULL packet in low speed." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="LP_CLK_NULL_PACKET_ENABLE_0" description="Disabled. The NULL packet is not sent in LP mode after the last LP packet."/>
      <bitenum value="1" id="Enable" token="LP_CLK_NULL_PACKET_ENABLE_1" description="Enabled. The NULL packet is sent in LP mode after the last LP packet."/>
    </bitfield>
    <bitfield id="CIO_CLK_ICG" width="1" begin="14" end="14" resetval="0" description="Gates SCPClk clock provided to DSI_PHY_DSS_x and PLL-CTRL module." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="CIO_CLK_ICG_0" description="Disabled. SCPClk is not generated. It remains at 0."/>
      <bitenum value="1" id="Enable" token="CIO_CLK_ICG_1" description="Enabled. SCPClk is generated (OCP_CLK/4)"/>
    </bitfield>
    <bitfield id="DDR_CLK_ALWAYS_ON" width="1" begin="13" end="13" resetval="0" description="Defines if the DDR clock is also sent when there is no HS packets sent to the peripheral (low-power mode). So TXRequest for the clock lane is not de-asserted." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="DDR_CLK_ALWAYS_ON_0" description="Disabled. The DDR clock is only provided when HS packets are sent."/>
      <bitenum value="1" id="Enable" token="DDR_CLK_ALWAYS_ON_1" description="Enabled. The DDR clock is always sent to the peripheral regardless of the state of the data lanes (HS or LS mode)."/>
    </bitfield>
    <bitfield id="LP_CLK_DIVISOR" width="13" begin="12" end="0" resetval="0x0001" description="Defines the ratio to be used for the generation of the low-power mode clock from DSI functional clock. The supported values are from 1 to 8191(the value 0 is invalid). The output frequency shall be in the range between 20 MHz and 32 kHz." range="" rwaccess="RW"/>
  </register>
  <register id="DSI_TIMING1" acronym="DSI_TIMING1" offset="0x58" width="32" description="TIMING1 REGISTER This register controls the DSI Protocol Engine module timers. Any bit field can be modified while [0] IF_EN is set to '1'. It is used to indicate the number of DSI1_A_CLK and DSI1_A_CLK functional clocks cycles for the timers FORCE_TX_STOP_TIMER and TA_TO_TIMER">
    <bitfield id="TA_TO" width="1" begin="31" end="31" resetval="0" description="Enables the turn-around timer" range="" rwaccess="RW">
      <bitenum value="0" id="Deassertion" token="TA_TO_0" description="Turn-around counter is disabled."/>
      <bitenum value="1" id="Assertion" token="TA_TO_1" description="Turn-around counter is enabled (required to receive TA interrupt in case the turn-around procedure is not successful)."/>
    </bitfield>
    <bitfield id="TA_TO_X16" width="1" begin="30" end="30" resetval="1" description="Multiplication factor for the number of DSI_CLK functional clocks cycles defined in TA_TO_COUNTER bit field" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TA_TO_X16_0" description="The number of DSI_CLK functional clock cycles defined in TA_TO_COUNTER is multiplied by 1x"/>
      <bitenum value="1" id="Enable" token="TA_TO_X16_1" description="The number of DSI_CLK functional clock cycles defined in TA_TO_COUNTER is multiplied by 16x"/>
    </bitfield>
    <bitfield id="TA_TO_X8" width="1" begin="29" end="29" resetval="1" description="Multiplication factor for the number of DSI_CLK functional clock cycles defined in TA_TO_COUNTER bit field" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TA_TO_X8_0" description="The number of DSI_CLK functional clock cycles defined in TA_TO_COUNTER is multiplied by 1x"/>
      <bitenum value="1" id="Enable" token="TA_TO_X8_1" description="The number of DSI_CLK functional clock cycles defined in TA_TO_COUNTER is multiplied by 8x"/>
    </bitfield>
    <bitfield id="TA_TO_COUNTER" width="13" begin="28" end="16" resetval="0x1FFF" description="Turn around counter. It indicates the number of DSI_CLK function clock to wait for the change of the Direction PPI signal according to the TurnRequest signal The value is from 0 to 8191." range="" rwaccess="RW"/>
    <bitfield id="FORCE_TX_STOP_MODE_IO" width="1" begin="15" end="15" resetval="0" description="Control of ForceTxStopMode signal" range="" rwaccess="RW">
      <bitenum value="0" id="Deassertion" token="FORCE_TX_STOP_MODE_IO_0" description="Deassertion of ForceTxStopMode. The hardware reset the bit at the end of the ForceTXStopMode assertion. The software can reset the bit in order to stop the assertion of the ForceTXStopMode signal prior to the completion of the period."/>
      <bitenum value="1" id="Assertion" token="FORCE_TX_STOP_MODE_IO_1" description="Assertion of ForceTxStopMode"/>
    </bitfield>
    <bitfield id="STOP_STATE_X16_IO" width="1" begin="14" end="14" resetval="1" description="Multiplication factor for the number of DSI_CLK functional clock cycles defined in STOP_STATE_COUNTER_IO bit field" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="STOP_STATE_X16_IO_0" description="The number of DSI_CLK functional clock cycles defined in STOP_STATE _COUNTER_IO is multiplied by 1x"/>
      <bitenum value="1" id="Enable" token="STOP_STATE_X16_IO_1" description="The number of DSI_CLK functional clock cycles defined in STOP_STATE _COUNTER_IO is multiplied by 16x"/>
    </bitfield>
    <bitfield id="STOP_STATE_X4_IO" width="1" begin="13" end="13" resetval="1" description="Multiplication factor for the number of DSI_CLK functional clock cycles defined in STOP_STATE_COUNTER_IO bit field" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="STOP_STATE_X4_IO_0" description="The number of DSI_CLK functional clock cycles defined in STOP_STATE _COUNTER is multiplied by 1x"/>
      <bitenum value="1" id="Enable" token="STOP_STATE_X4_IO_1" description="The number of DSI_CLK functional clock cycles defined in STOP_STATE _COUNTER_IO is multiplied by 4x"/>
    </bitfield>
    <bitfield id="STOP_STATE_COUNTER_IO" width="13" begin="12" end="0" resetval="0x1FFF" description="Stop state counter. It indicates the number of DSI_CLK function clock to assert ForceTXStopMode signal. The value is from 0 to 8191." range="" rwaccess="RW"/>
  </register>
  <register id="DSI_TIMING2" acronym="DSI_TIMING2" offset="0x5C" width="32" description="TIMING2 REGISTER This register controls the DSI Protocol Engine module timers. Any bit field can be modified while [0] IF_EN is set to '1'. It is used to indicate the number of DSI_FCLK clock cycles for the timer LP_RX_TIMER and the number of BYTE_CLK functional clock cycles for the timer HS_TX_TIMER">
    <bitfield id="HS_TX_TO" width="1" begin="31" end="31" resetval="0" description="Enables the HS TX timer." range="" rwaccess="RW">
      <bitenum value="0" id="Deassertion" token="HS_TX_TO_0" description="Time-out counter is disabled."/>
      <bitenum value="1" id="Assertion" token="HS_TX_TO_1" description="Time-out counter is enabled (required to receive TA interrupt in case the turn-around procedure is not successful)."/>
    </bitfield>
    <bitfield id="HS_TX_TO_X64" width="1" begin="30" end="30" resetval="1" description="Multiplication factor for the number of BYTE_CLK functional clock cycles defined in HS_TX_COUNTER bit field. BYTE_CLK is a high speed transmit byte clock signal generated by the DSI_PHY_DSS_x." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="HS_TX_TO_X64_0" description="The number of BYTE_CLK functional clock cycles defined in HS_TX_TO_COUNTER is multiplied by 1x"/>
      <bitenum value="1" id="Enable" token="HS_TX_TO_X64_1" description="The number of BYTE_CLK functional clock cycles defined in HS_TX_TO_COUNTER is multiplied by 64x"/>
    </bitfield>
    <bitfield id="HS_TX_TO_X16" width="1" begin="29" end="29" resetval="1" description="Multiplication factor for the number of BYTE_CLK functional clock cycles defined in HS_TX_COUNTER bit" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="HS_TX_TO_X16_0" description="The number of BYTE_CLK functional clock cycles defined in HS_TX_TO_COUNTER is multiplied by 1x"/>
      <bitenum value="1" id="Enable" token="HS_TX_TO_X16_1" description="The number of BYTE_CLK functional clock cycles defined in HS_TX_TO_COUNTER is multiplied by 16x"/>
    </bitfield>
    <bitfield id="HS_TX_TO_COUNTER" width="13" begin="28" end="16" resetval="0x1FFF" description="HS_TX_TIMER counter. It indicates the number of BYTE_CLK function clock for the HS TX timer. The value is from 0 to 8191." range="" rwaccess="RW"/>
    <bitfield id="LP_RX_TO" width="1" begin="15" end="15" resetval="0" description="Enables the LP RX timer." range="" rwaccess="RW">
      <bitenum value="0" id="Deassertion" token="LP_RX_TO_0" description="Turn-around counter is disabled."/>
      <bitenum value="1" id="Assertion" token="LP_RX_TO_1" description="Turn-around counter is enabled (required to receive TA interrupt in case the turn-around procedure is not successful)."/>
    </bitfield>
    <bitfield id="LP_RX_TO_X16" width="1" begin="14" end="14" resetval="1" description="Multiplication factor for the number of DSI_FCLK clock cycles defined in LP_RX_COUNTER bit field" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="LP_RX_TO_X16_0" description="The number of DSI_FCLK clock cycles defined in LP_RX_TO_COUNTER is multiplied by 1x"/>
      <bitenum value="1" id="Enable" token="LP_RX_TO_X16_1" description="The number of DSI_FCLK clock cycles defined in LP_RX_TO_COUNTER is multiplied by 16x"/>
    </bitfield>
    <bitfield id="LP_RX_TO_X4" width="1" begin="13" end="13" resetval="1" description="Multiplication factor for the number of DSI_FCLK clock cycles defined in LP_RX_COUNTER bit" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="LP_RX_TO_X4_0" description="The number of DSI_FCLK clock cycles defined in LP_RX_TO_COUNTER is multiplied by 1x"/>
      <bitenum value="1" id="Enable" token="LP_RX_TO_X4_1" description="The number of DSI_FCLK clock cycles defined in LP_RX_TO_COUNTER is multiplied by 4x"/>
    </bitfield>
    <bitfield id="LP_RX_TO_COUNTER" width="13" begin="12" end="0" resetval="0x1FFF" description="LP_RX_TIMER counter. It indicates the number of DSI_FCLK clock for the LP RX timer. The value is from 0 to 8191." range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VM_TIMING1" acronym="DSI_VM_TIMING1" offset="0x60" width="32" description="VIDEO MODE TIMING REGISTER This register defines the video mode timing.">
    <bitfield id="HSA" width="8" begin="31" end="24" resetval="0x00" description="Defines the horizontal Sync active period used in video mode in number of byte clock cycles (TXBYTECLKHS clock) The supported values are from 0 to 255." range="" rwaccess="RW"/>
    <bitfield id="HFP" width="12" begin="23" end="12" resetval="0x000" description="Defines the horizontal front porch used in video mode in number of byte clock cycles (TXBYTECLKHS clock) The supported values are from 0 to 4095" range="" rwaccess="RW"/>
    <bitfield id="HBP" width="12" begin="11" end="0" resetval="0x000" description="Defines the horizontal back porch used in video mode in number of byte clock cycles (TXBYTECLKHS clock) The supported values are from 0 to 4095" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VM_TIMING2" acronym="DSI_VM_TIMING2" offset="0x64" width="32" description="VIDEO MODE TIMING REGISTER This register defines the video mode timing.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="WINDOW_SYNC" width="4" begin="27" end="24" resetval="0x0" description="Number of BYTE clock cycles for the synchronization window. An interrupt for synchronization lost is generated when the received synchornization on video port is not inside the window. DSI does not change its own timings if the synch is inside the window. The valid values are from 4 to 15." range="" rwaccess="RW"/>
    <bitfield id="VSA" width="8" begin="23" end="16" resetval="0x00" description="Defines the vertical Sync active period used in video mode in number of lines. The supported values are from 0 to 255 It is used to generate the short packet for End of Vertical synchronization." range="" rwaccess="RW"/>
    <bitfield id="VFP" width="8" begin="15" end="8" resetval="0x00" description="Defines the vertical front porch used in video mode in number of lines. The supported values are from 0 to 255" range="" rwaccess="RW"/>
    <bitfield id="VBP" width="8" begin="7" end="0" resetval="0x00" description="Defines the vertical back porch used in video mode in number of lines. The supported values are from 0 to 255" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VM_TIMING3" acronym="DSI_VM_TIMING3" offset="0x68" width="32" description="VIDEO MODE TIMING REGISTER This register defines the video mode timing.">
    <bitfield id="TL" width="16" begin="31" end="16" resetval="0x0000" description="Defines the number of length of the line in video mode in number of byte clock cycles (TXBYTECLKHS clock) The supported values are from 0 to 8192. The values from 8193 to 65535 are not supported." range="" rwaccess="RW"/>
    <bitfield id="VACT" width="16" begin="15" end="0" resetval="0x0000" description="Defines the number of active lines used in video mode. The supported values are from 0 to 65535" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_CLK_TIMING" acronym="DSI_CLK_TIMING" offset="0x6C" width="32" description="CLOCK TIMING REGISTER This register controls the DSI Protocol Engine module timers. This register shall not be modified while .IF_EN is set to '1'.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="DDR_CLK_PRE" width="8" begin="15" end="8" resetval="0x01" description="Indicates the number of TXBYTECLKHS clock cycles between the start of the DDR clock and the assertion of the data request signal. The values from 1 to 255 are valid. The value 0 is reserved. The value is not used ifDSI_CLK_CTRL[13] DDR_CLK_ALWAYS_ON is set to '1' since the DDR clock is always present." range="" rwaccess="RW"/>
    <bitfield id="DDR_CLK_POST" width="8" begin="7" end="0" resetval="0x01" description="Indicates the number of TXBYTECLKHS clock cycles after the de-assertion of the data request signal and the stop of the DDR clock. The values from 1 to 255 are valid. The value 0 is reserved. The value is not used ifDSI_CLK_CTRL[13] DDR_CLK_ALWAYS_ON is set to '1' since the DDR clock is always present." range="" rwaccess="RW"/>
  </register>
  <register id="DSI_TX_FIFO_VC_SIZE" acronym="DSI_TX_FIFO_VC_SIZE" offset="0x70" width="32" description="Defines the corresponding memory entries allocated for each virtual channel. The virtual channel shall be disabled in order to allocate/un-allocate some entries in the TX FIFO.">
    <bitfield id="VC3_FIFO_SIZE" width="4" begin="31" end="28" resetval="0x0" description="Size of the FIFO allocated for virtual channel 3. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="VC3_FIFO_ADD" width="3" begin="26" end="24" resetval="0x0" description="Address of the space allocated in the FIFO for virtual channel 3. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="VC2_FIFO_SIZE" width="4" begin="23" end="20" resetval="0x0" description="Size of the FIFO allocated for virtual channel 2. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="19" end="19" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="VC2_FIFO_ADD" width="3" begin="18" end="16" resetval="0x0" description="Address of the space allocated in the FIFO for virtual channel 2. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="VC1_FIFO_SIZE" width="4" begin="15" end="12" resetval="0x0" description="Size of the FIFO allocated for virtual channel 1. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="11" end="11" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="VC1_FIFO_ADD" width="3" begin="10" end="8" resetval="0x0" description="Address of the space allocated in the FIFO for virtual channel 1. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="VC0_FIFO_SIZE" width="4" begin="7" end="4" resetval="0x0" description="Size of the FIFO allocated for virtual channel 0. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="VC0_FIFO_ADD" width="3" begin="2" end="0" resetval="0x0" description="Address of the space allocated in the FIFO for virtual channel 0. For a complete description, refer to," range="" rwaccess="RW"/>
  </register>
  <register id="DSI_RX_FIFO_VC_SIZE" acronym="DSI_RX_FIFO_VC_SIZE" offset="0x74" width="32" description="Defines the corresponding memory entries allocated for each virtual channel and the addresses. The virtual channel shall be disabled in order to allocate/un-allocate some entries in the RX FIFO.">
    <bitfield id="VC3_FIFO_SIZE" width="4" begin="31" end="28" resetval="0x0" description="Size of the FIFO allocated for virtual channel 3. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="VC3_FIFO_ADD" width="3" begin="26" end="24" resetval="0x0" description="Address of the space allocated in the FIFO for virtual channel 3. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="VC2_FIFO_SIZE" width="4" begin="23" end="20" resetval="0x0" description="Size of the FIFO allocated for virtual channel 2. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="19" end="19" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="VC2_FIFO_ADD" width="3" begin="18" end="16" resetval="0x0" description="Address of the space allocated in the FIFO for virtual channel 2. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="VC1_FIFO_SIZE" width="4" begin="15" end="12" resetval="0x0" description="Size of the FIFO allocated for virtual channel 1. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="11" end="11" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="VC1_FIFO_ADD" width="3" begin="10" end="8" resetval="0x0" description="Address of the space allocated in the FIFO for virtual channel 1. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="VC0_FIFO_SIZE" width="4" begin="7" end="4" resetval="0x0" description="Size of the FIFO allocated for virtual channel 0. For a complete description, refer to," range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="VC0_FIFO_ADD" width="3" begin="2" end="0" resetval="0x0" description="Address of the space allocated in the FIFO for virtual channel 0. For a complete description, refer to," range="" rwaccess="RW"/>
  </register>
  <register id="DSI_COMPLEXIO_CFG2" acronym="DSI_COMPLEXIO_CFG2" offset="0x78" width="32" description="COMPLEXIO CONFIGURATION REGISTER for the DSI PHY This register contains the lane configuration for the ULPS for each lane.">
    <bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="LP_BUSY" width="1" begin="17" end="17" resetval="0" description="Indicates when there are still pending operations for VCs configured for LP mode. Forced to 1 when at least one VC is enabled and configured for LP mode." range="" rwaccess="R">
      <bitenum value="0" id="False" token="LP_BUSY_0_r" description="LP logic is idle"/>
      <bitenum value="1" id="True" token="LP_BUSY_1_r" description="LP logic is active"/>
    </bitfield>
    <bitfield id="HS_BUSY" width="1" begin="16" end="16" resetval="0" description="Indicates when there are still pending operations for VCs configured for HS mode. Forced to 1 when at least one VC is enabled and configured for HS mode." range="" rwaccess="R">
      <bitenum value="0" id="False" token="HS_BUSY_0_r" description="HS logic is idle"/>
      <bitenum value="1" id="True" token="HS_BUSY_1_r" description="HS logic is active"/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="LANE5_ULPS_SIG2" width="1" begin="9" end="9" resetval="0" description="Enables the ULPS for the lane 5. The hardware shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the DSI protocol engine and the DSI protocol engine has control of the bus (BTA has not been sent). The state of the signal TxRequestEsc is changed if lane 5 is a data lane. The state of the signal TxUlpsClk is changed if lane 5 is a clock lane. There will be a latency depending on the frequency of TxClkExc. This bit should be read back to confirm a write has been effective." range="" rwaccess="RW">
      <bitenum value="0" id="READ:_WRITE:_0" token="LANE5_ULPS_SIG2_0" description="READ: Inactive state effective. WRITE: Request to change to inactive state"/>
      <bitenum value="1" id="READ:_WRITE:_1" token="LANE5_ULPS_SIG2_1" description="READ: Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc."/>
    </bitfield>
    <bitfield id="LANE4_ULPS_SIG2" width="1" begin="8" end="8" resetval="0" description="Enables the ULPS for the lane 4. The hardware shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the DSI protocol engine and the DSI protocol engine has control of the bus (BTA has not been sent). The state of the signal TxRequestEsc is changed if lane 4 is a data lane. The state of the signal TxUlpsClk is changed if lane 4 is a clock lane. There will be a latency depending on the frequency of TxClkExc. This bit should be read back to confirm a write has been effective." range="" rwaccess="RW">
      <bitenum value="0" id="READ:_WRITE:_0" token="LANE4_ULPS_SIG2_0" description="READ: Inactive state effective. WRITE: Request to change to inactive state"/>
      <bitenum value="1" id="READ:_WRITE:_1" token="LANE4_ULPS_SIG2_1" description="READ: Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc."/>
    </bitfield>
    <bitfield id="LANE3_ULPS_SIG2" width="1" begin="7" end="7" resetval="0" description="Enables the ULPS for the lane 3. The hardware shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the DSI protocol engine and the DSI protocol engine has control of the bus (BTA has not been sent). The state of the signal TxRequestEsc is changed if lane 3 is a data lane. The state of the signal TxUlpsClk is changed if lane 3 is a clock lane. There will be a latency depending on the frequency of TxClkExc. This bit should be read back to confirm a write has been effective." range="" rwaccess="RW">
      <bitenum value="0" id="Inactive" token="LANE3_ULPS_SIG2_0" description="READ: Inactive state effective. WRITE: Request to change to inactive state"/>
      <bitenum value="1" id="Active" token="LANE3_ULPS_SIG2_1" description="READ: Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc."/>
    </bitfield>
    <bitfield id="LANE2_ULPS_SIG2" width="1" begin="6" end="6" resetval="0" description="Enables the ULPS for the lane 2. The hardware shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the DSI protocol engine and the DSI protocol engine has control of the bus (BTA has not been sent). The state of the signal TxRequestEsc is changed if lane 2 is a data lane. The state of the signal TxUlpsClk is changed if lane 2 is a clock lane. There will be a latency depending on the frequency of TxClkExc. This bit should be read back to confirm a write has been effective." range="" rwaccess="RW">
      <bitenum value="0" id="Inactive" token="LANE2_ULPS_SIG2_0" description="READ: Inactive state effective. WRITE: Request to change to inactive state"/>
      <bitenum value="1" id="Active" token="LANE2_ULPS_SIG2_1" description="READ: Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc."/>
    </bitfield>
    <bitfield id="LANE1_ULPS_SIG2" width="1" begin="5" end="5" resetval="0" description="Enables the ULPS for the lane 1. The hardware shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the DSI protocol engine and the DSI protocol engine has control of the bus (BTA has not been sent). The state of the signal TxRequestEsc is changed if lane 1 is a data lane. The state of the signal TxUlpsClk is changed if lane 1 is a clock lane. There will be a latency depending on the frequency of TxClkExc. This bit should be read back to confirm a write has been effective." range="" rwaccess="RW">
      <bitenum value="0" id="Inactive" token="LANE1_ULPS_SIG2_0" description="READ: Inactive state effective. WRITE: Request to change to inactive state"/>
      <bitenum value="1" id="Active" token="LANE1_ULPS_SIG2_1" description="READ: Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc."/>
    </bitfield>
    <bitfield id="LANE5_ULPS_SIG1" width="1" begin="4" end="4" resetval="0" description="Enables the ULPS for the lane 5. The hardware shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the DSI protocol engine and the DSI protocol engine has control of the bus (BTA has not been sent). The state of the signal TxULPSExit is changed if the lane 5 is a clock lane. There will be a latency depending on the frequency of TxClkExc. This bit should be read back to confirm a write has been effective." range="" rwaccess="RW">
      <bitenum value="0" id="READ:_WRITE:_0" token="LANE5_ULPS_SIG1_0" description="READ: Inactive state effective. WRITE: Request to change to inactive state"/>
      <bitenum value="1" id="READ:_WRITE:_1" token="LANE5_ULPS_SIG1_1" description="READ: Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc"/>
    </bitfield>
    <bitfield id="LANE4_ULPS_SIG1" width="1" begin="3" end="3" resetval="0" description="Enables the ULPS for the lane 4. The hardware shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the DSI protocol engine and the DSI protocol engine has control of the bus (BTA has not been sent). The state of the signal TxULPSExit is changed if the lane 4 is a clock lane. There will be a latency depending on the frequency of TxClkExc. This bit should be read back to confirm a write has been effective." range="" rwaccess="RW">
      <bitenum value="0" id="READ:_WRITE:_0" token="LANE4_ULPS_SIG1_0" description="READ: Inactive state effective. WRITE: Request to change to inactive state"/>
      <bitenum value="1" id="READ:_WRITE:_1" token="LANE4_ULPS_SIG1_1" description="READ: Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc"/>
    </bitfield>
    <bitfield id="LANE3_ULPS_SIG1" width="1" begin="2" end="2" resetval="0" description="Enables the ULPS for the lane 3. The hardware shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the DSI protocol engine and the DSI protocol engine has control of the bus (BTA has not been sent). The state of the signal TxULPSExit is changed if the lane 3 is a clock lane. There will be a latency depending on the frequency of TxClkExc. This bit should be read back to confirm a write has been effective." range="" rwaccess="RW">
      <bitenum value="0" id="Inactive" token="LANE3_ULPS_SIG1_0" description="READ: Inactive state effective. WRITE: Request to change to inactive state"/>
      <bitenum value="1" id="Active" token="LANE3_ULPS_SIG1_1" description="READ: Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc"/>
    </bitfield>
    <bitfield id="LANE2_ULPS_SIG1" width="1" begin="1" end="1" resetval="0" description="Enables the ULPS for the lane 2. The hardware shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the DSI protocol engine and the DSI protocol engine has control of the bus (BTA has not been sent). The state of the signal TxULPSExit is changed if the lane 2 is a clock lane. There will be a latency depending on the frequency of TxClkExc. This bit should be read back to confirm a write has been effective." range="" rwaccess="RW">
      <bitenum value="0" id="Inactive" token="LANE2_ULPS_SIG1_0" description="READ: Inactive state effective. WRITE: Request to change to inactive state"/>
      <bitenum value="1" id="Active" token="LANE2_ULPS_SIG1_1" description="READ: Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc"/>
    </bitfield>
    <bitfield id="LANE1_ULPS_SIG1" width="1" begin="0" end="0" resetval="0" description="Enables the ULPS for the lane 1. The hardware shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the DSI protocol engine and the DSI protocol engine has control of the bus (BTA has not been sent). The state of the signal TxULPSExit is changed if the lane 1 is a clock lane. There will be a latency depending on the frequency of TxClkExc. This bit should be read back to confirm a write has been effective." range="" rwaccess="RW">
      <bitenum value="0" id="Inactive" token="LANE1_ULPS_SIG1_0" description="READ: Inactive state effective. WRITE: Request to change to inactive state"/>
      <bitenum value="1" id="Active" token="LANE1_ULPS_SIG1_1" description="READ: Active state effective WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc"/>
    </bitfield>
  </register>
  <register id="DSI_RX_FIFO_VC_FULLNESS" acronym="DSI_RX_FIFO_VC_FULLNESS" offset="0x7C" width="32" description="Defines the fullness of each space allocated for each virtual channel.">
    <bitfield id="VC3_FIFO_FULLNESS" width="8" begin="31" end="24" resetval="0x00" description="Fullness of the FIFO allocated for virtual channel 3.The valid values are from 0 toDSI_GNQ[5:3] RX_FIFODEPTH-1 corresponding to 1x33-bit,...up to DSI_GNQ[5:3] RX_FIFODEPTH x33-bit." range="" rwaccess="R"/>
    <bitfield id="VC2_FIFO_FULLNESS" width="8" begin="23" end="16" resetval="0x00" description="Fullness of the FIFO allocated for virtual channel 2.The valid values are from 0 toDSI_GNQ[5:3] RX_FIFODEPTH-1 corresponding to 1x33-bit,...up to DSI_GNQ[5:3] RX_FIFODEPTH x33-bit." range="" rwaccess="R"/>
    <bitfield id="VC1_FIFO_FULLNESS" width="8" begin="15" end="8" resetval="0x00" description="Fullness of the FIFO allocated for virtual channel 1.The valid values are from 0 toDSI_GNQ[5:3] RX_FIFODEPTH-1 corresponding to 1x33-bit,...up to DSI_GNQ[5:3] RX_FIFODEPTH x33-bit." range="" rwaccess="R"/>
    <bitfield id="VC0_FIFO_FULLNESS" width="8" begin="7" end="0" resetval="0x00" description="Fullness of the FIFO allocated for virtual channel 0.The valid values are from 0 toDSI_GNQ[5:3] RX_FIFODEPTH-1 corresponding to 1x33-bit,...up to DSI_GNQ[5:3] RX_FIFODEPTH x33-bit." range="" rwaccess="R"/>
  </register>
  <register id="DSI_VM_TIMING4" acronym="DSI_VM_TIMING4" offset="0x80" width="32" description="VIDEO MODE TIMING REGISTER This register defines the video mode timing.">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="HSA_HS_INTERLEAVING" width="8" begin="23" end="16" resetval="0x00" description="Defines the number of TXBYTECLKHS clock cycles that can be used for interleaving High Speed command mode packet into Video Mode stream during HSA blanking period. The supported values are from 0 to 255." range="" rwaccess="RW"/>
    <bitfield id="HFP_HS_INTERLEAVING" width="8" begin="15" end="8" resetval="0x00" description="Defines the number of TXBYTECLKHS clock cycles that can be used for interleaving High Speed command mode packet into Video Mode stream during HFP blanking period. The supported values are from 0 to 255" range="" rwaccess="RW"/>
    <bitfield id="HBP_HS_INTERLEAVING" width="8" begin="7" end="0" resetval="0x00" description="Defines the number of TXBYTECLKHS clock cycles that can be used for interleaving High Speed command mode packet into Video Mode stream during HBP blanking period. The supported values are from 0 to 255" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_TX_FIFO_VC_EMPTINESS" acronym="DSI_TX_FIFO_VC_EMPTINESS" offset="0x84" width="32" description="Defines the emptiness of each space allocated for each virtual channel.">
    <bitfield id="VC3_FIFO_EMPTINESS" width="8" begin="31" end="24" resetval="0x00" description="Emptiness of the FIFO allocated for virtual channel 3.The valid values are from 0 toDSI_GNQ[2:0] TX_FIFODEPTH-1 corresponding to 1x33-bit,...up to DSI_GNQ[2:0] TX_FIFODEPTH x33-bit." range="" rwaccess="R"/>
    <bitfield id="VC2_FIFO_EMPTINESS" width="8" begin="23" end="16" resetval="0x00" description="Emptiness of the FIFO allocated for virtual channel 2.The valid values are from 0 toDSI_GNQ[2:0] TX_FIFODEPTH-1 corresponding to 1x33-bit,...up to DSI_GNQ[2:0] TX_FIFODEPTH x33-bit." range="" rwaccess="R"/>
    <bitfield id="VC1_FIFO_EMPTINESS" width="8" begin="15" end="8" resetval="0x00" description="Emptiness of the FIFO allocated for virtual channel 1.The valid values are from 0 toDSI_GNQ[2:0] TX_FIFODEPTH-1 corresponding to 1x33-bit,...up to DSI_GNQ[2:0] TX_FIFODEPTH x33-bit." range="" rwaccess="R"/>
    <bitfield id="VC0_FIFO_EMPTINESS" width="8" begin="7" end="0" resetval="0x00" description="Emptiness of the FIFO allocated for virtual channel 0.The valid values are from 0 toDSI_GNQ[2:0] TX_FIFODEPTH-1 corresponding to 1x33-bit,...up to DSI_GNQ[2:0] TX_FIFODEPTH x33-bit." range="" rwaccess="R"/>
  </register>
  <register id="DSI_VM_TIMING5" acronym="DSI_VM_TIMING5" offset="0x88" width="32" description="VIDEO MODE TIMING REGISTER This register defines the video mode timing.">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="HSA_LP_INTERLEAVING" width="8" begin="23" end="16" resetval="0x00" description="Defines the number of bytes of Low Power command mode packets that can be sent on PPI link during HSA blanking period. The supported values are from 0 to 255." range="" rwaccess="RW"/>
    <bitfield id="HFP_LP_INTERLEAVING" width="8" begin="15" end="8" resetval="0x00" description="Defines the number of bytes of Low Power command mode packets that can be sent on PPI link during HFP blanking period. The supported values are from 0 to 255" range="" rwaccess="RW"/>
    <bitfield id="HBP_LP_INTERLEAVING" width="8" begin="7" end="0" resetval="0x00" description="Defines the number of bytes of Low Power command mode packets that can be sent on PPI link during HBP blanking period. The supported values are from 0 to 255" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VM_TIMING6" acronym="DSI_VM_TIMING6" offset="0x8C" width="32" description="VIDEO MODE TIMING REGISTER This register defines the video mode timing.">
    <bitfield id="BL_HS_INTERLEAVING" width="16" begin="31" end="16" resetval="0x0000" description="Defines the number of TXBYTECLKHS clock cycles that can be used for interleaving High Speed command mode packet into Video Mode stream during blanking periods during VSA, VBP, VFP periods inside one video frame on PPI link. The supported values are from 0 to 65535 ." range="" rwaccess="RW"/>
    <bitfield id="BL_LP_INTERLEAVING" width="16" begin="15" end="0" resetval="0x0000" description="Defines the maximum number of bytes of Low Power command mode packets that can be sent on PPI link during blanking periods during VSA, VBP or VFP periods inside one video frame on PPI link. The supported values are from 0 to 65535" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VM_TIMING7" acronym="DSI_VM_TIMING7" offset="0x90" width="32" description="Defines the minimum number of HS bytes clock cycles that are required to allow for the delays in entering and exiting HS mode. The supported values are from 0 to 65535">
    <bitfield id="ENTER_HS_MODE_LATENCY" width="16" begin="31" end="16" resetval="0x0000" description="Defines the number of TXBYTECLKHS clock cycles necessary for entering to HS mode. It corresponds to the delay in number of HS clock cycles from assertion of TxRequestHS signal to 1 until assertion of TxReadyHS signal to 1. The supported values are from 0 to 65535 ." range="" rwaccess="RW"/>
    <bitfield id="EXIT_HS_MODE_LATENCY" width="16" begin="15" end="0" resetval="0x0000" description="Defines the number of TXBYTECLKHS clock cycles necessary for exiting from HS mode. It corresponds to the maximum delay in number of TXBYTECLKHS clock from de-assertion of TxRequestHS signal until PPI link is in LP-11 state from which a new entrance to HS mode can be initiated which does not take more than ENTER_HS_MODE_LATENCY clock cycles. The supported values are from 0 to 65535" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_STOPCLK_TIMING" acronym="DSI_STOPCLK_TIMING" offset="0x94" width="32" description="Number of functional clock cycles to wait for TXBYTECLKHS to stop/start after change in DSIStopClk signal">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="DSI_STOPCLK_LATENCY" width="8" begin="7" end="0" resetval="0x80" description="Clock gating latency from DSI Protocol to TXBYTECLKHS" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_CTRL2" acronym="DSI_CTRL2" offset="0x98" width="32" description="Additional control bits for use with Video Port 2">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="LINE_BUFFER" width="2" begin="13" end="12" resetval="0x0" description="Number of line buffers to be used while receiving data on the video port. The valid values are from 0 toDSI_GNQ[23:22] VP2_NB_LINE_BUFFER." range="" rwaccess="RW">
      <bitenum value="0" id="f0" token="LINE_BUFFER_0" description="No line buffer"/>
      <bitenum value="1" id="f1" token="LINE_BUFFER_1" description="1 line buffer"/>
      <bitenum value="2" id="f2" token="LINE_BUFFER_2" description="2 line buffers"/>
    </bitfield>
    <bitfield id="VP_VSYNC_POL" width="1" begin="11" end="11" resetval="0" description="VP vertical synchronization signal polarity" range="" rwaccess="RW">
      <bitenum value="0" id="Low" token="VP_VSYNC_POL_0" description="VSYNC signal on the video port is active low."/>
      <bitenum value="1" id="High" token="VP_VSYNC_POL_1" description="VSYNC signal on the video port is active high."/>
    </bitfield>
    <bitfield id="VP_HSYNC_POL" width="1" begin="10" end="10" resetval="0" description="VP horizontal synchronization signal polarity" range="" rwaccess="RW">
      <bitenum value="0" id="Low" token="VP_HSYNC_POL_0" description="HSYNC signal on the video port is active low."/>
      <bitenum value="1" id="High" token="VP_HSYNC_POL_1" description="HSYNC signal on the video port is active high."/>
    </bitfield>
    <bitfield id="VP_DE_POL" width="1" begin="9" end="9" resetval="0" description="VP data enable signal polarity" range="" rwaccess="RW">
      <bitenum value="0" id="Low" token="VP_DE_POL_0" description="DE signal on the video port is active low."/>
      <bitenum value="1" id="High" token="VP_DE_POL_1" description="DE signal on the video port is active high."/>
    </bitfield>
    <bitfield id="VP_CLK_POL" width="1" begin="8" end="8" resetval="1" description="VP pixel clock polarity" range="" rwaccess="RW">
      <bitenum value="0" id="Falling" token="VP_CLK_POL_0" description="The DSI Protocol Engine module captures the data on the VP on the pixel clock falling edge. The module connected to the VP shall drive the data on the pixel clock rising edge."/>
      <bitenum value="1" id="Rising" token="VP_CLK_POL_1" description="The DSI Protocol Engine module captures the data on the VP on the pixel clock raising edge. The module connected to the VP shall drive the data on the pixel clock falling edge."/>
    </bitfield>
    <bitfield id="VP_DATA_BUS_WIDTH" width="2" begin="7" end="6" resetval="0x0" description="Defines the size of the video port data bus" range="" rwaccess="RW">
      <bitenum value="0" id="f16" token="VP_DATA_BUS_WIDTH_0" description="16-bits data width (LSB of the 24-bit video port data bus)"/>
      <bitenum value="1" id="f18" token="VP_DATA_BUS_WIDTH_1" description="18-bits data width (LSB of the 24-bit video port data bus)"/>
      <bitenum value="2" id="f24" token="VP_DATA_BUS_WIDTH_2" description="24-bits data width (LSB of the 24-bit video port data bus)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="VP_CLK_RATIO" width="1" begin="4" end="4" resetval="0" description="The field indicates the clock ratio between VP_CLK and VP_PCLK. The clock VP_PCLK is generated from VP_CLK. It is divided down. The information is only used when the video port is used to provide data in command mode. In the case of video mode, it is not used." range="" rwaccess="RW">
      <bitenum value="0" id="RATIO2" token="VP_CLK_RATIO_0" description="The clock VP_PCLK is the clock VP_CLK divided by 2. The duty cycle of VP_PCLK is 50/50."/>
      <bitenum value="1" id="RATIO3ANDHIGHER" token="VP_CLK_RATIO_1" description="The clock VP_PCLK is the clock VP_CLK divided by 3 or more. The duty cycle of VP_PCLK is not 50/50 for odd ratio numbers (3,5,7,...)."/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="DSI_VM_TIMING8" acronym="DSI_VM_TIMING8" offset="0x9C" width="32" description="VIDEO MODE TIMING REGISTER This register defines the video mode timing.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="HFPX" width="2" begin="1" end="0" resetval="0x0" description="Extension to the HFP register. Additional bits added to MSB." range="" rwaccess="RW"/>
  </register>
  <register id="DSI_TE_HSYNC_WIDTH_j_0" acronym="DSI_TE_HSYNC_WIDTH_j_0" offset="0xA0" width="32" description="The register configures the TE HSYNC minimum pulse width for TE0 and TE1 CMOS signals The input TE signal is asynchronous and needs to be resynchronizred to DSI_CLK clock domain.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="MIN_HSYNC_PULSE_WIDTH" width="12" begin="19" end="8" resetval="0x001" description="Programmable min HSYNC pulse width Minimum HSYNC pulse width. Number of DSI_CLK clock cycles times 256 to determine when HSYNC pulse occurs. The value 0 is invalid." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="7" end="0" resetval="0x00" description="" range="" rwaccess="R"/>
  </register>
  <register id="DSI_TE_HSYNC_WIDTH_j_1" acronym="DSI_TE_HSYNC_WIDTH_j_1" offset="0xAC" width="32" description="The register configures the TE HSYNC minimum pulse width for TE0 and TE1 CMOS signals The input TE signal is asynchronous and needs to be resynchronizred to DSI_CLK clock domain.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="MIN_HSYNC_PULSE_WIDTH" width="12" begin="19" end="8" resetval="0x001" description="Programmable min HSYNC pulse width Minimum HSYNC pulse width. Number of DSI_CLK clock cycles times 256 to determine when HSYNC pulse occurs. The value 0 is invalid." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="7" end="0" resetval="0x00" description="" range="" rwaccess="R"/>
  </register>
  <register id="DSI_TE_VSYNC_WIDTH_j_0" acronym="DSI_TE_VSYNC_WIDTH_j_0" offset="0xA4" width="32" description="The register configures the TE VSYNC minimum pulse width for TE0 and TE1 CMOS signals The input TE signal is asynchronous and needs to be resynchronizred to DSI_CLK clock domain.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="MIN_VSYNC_PULSE_WIDTH" width="12" begin="19" end="8" resetval="0x001" description="Programmable min VSYNC pulse width Minimum VSYNC pulse width. Number of DSI_CLK cycles times 256 to determine when VSYNC pulse occurs. The value 0 is invalid. The value shall be greater than MIN_HSYNC_PULSE_WIDTH when DSI_TE_HSYNC_NUMBER is greater than 0" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="7" end="0" resetval="0x00" description="" range="" rwaccess="R"/>
  </register>
  <register id="DSI_TE_VSYNC_WIDTH_j_1" acronym="DSI_TE_VSYNC_WIDTH_j_1" offset="0xB0" width="32" description="The register configures the TE VSYNC minimum pulse width for TE0 and TE1 CMOS signals The input TE signal is asynchronous and needs to be resynchronizred to DSI_CLK clock domain.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="MIN_VSYNC_PULSE_WIDTH" width="12" begin="19" end="8" resetval="0x001" description="Programmable min VSYNC pulse width Minimum VSYNC pulse width. Number of DSI_CLK cycles times 256 to determine when VSYNC pulse occurs. The value 0 is invalid. The value shall be greater than MIN_HSYNC_PULSE_WIDTH when DSI_TE_HSYNC_NUMBER is greater than 0" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="7" end="0" resetval="0x00" description="" range="" rwaccess="R"/>
  </register>
  <register id="DSI_TE_HSYNC_NUMBER_j_0" acronym="DSI_TE_HSYNC_NUMBER_j_0" offset="0xA8" width="32" description="The register configures the number of HSYNC to synchronize the beginning of the transfer on DSI link based on the number of HSYNC pulse received on the TE line. The input TE signal is asynchronous and needs to be resynchronizred to DSI_CLK clock domain.">
    <bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="LINE_NUMBER" width="11" begin="10" end="0" resetval="0x000" description="Programmable line number Line number from 0 to 2047. Number of HSYNC after the VSYNC occurs before the beginning of the transfer. Any HSYNC before VSYNC is ignored." range="" rwaccess="RW"/>
  </register>
  <register id="DSI_TE_HSYNC_NUMBER_j_1" acronym="DSI_TE_HSYNC_NUMBER_j_1" offset="0xB4" width="32" description="The register configures the number of HSYNC to synchronize the beginning of the transfer on DSI link based on the number of HSYNC pulse received on the TE line. The input TE signal is asynchronous and needs to be resynchronizred to DSI_CLK clock domain.">
    <bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="LINE_NUMBER" width="11" begin="10" end="0" resetval="0x000" description="Programmable line number Line number from 0 to 2047. Number of HSYNC after the VSYNC occurs before the beginning of the transfer. Any HSYNC before VSYNC is ignored." range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VC_CTRL_i_0" acronym="DSI_VC_CTRL_i_0" offset="0x100" width="32" description="CONTROL REGISTER - Virtual channel This register controls the virtual channel.">
    <bitfield id="DCS_CMD_CODE" width="1" begin="31" end="31" resetval="0" description="DCS command code value to insert between header and video port or Interface slave data when enabled by DCS_CMD_ENABLE (only when TE mechanism is not used otherwise the bit field DCS_CMD_CODE is ignored by DSI protocol engine)." range="" rwaccess="RW">
      <bitenum value="0" id="DCS_Continue" token="DCS_CMD_CODE_0" description="DCS write memory continue code is inserted."/>
      <bitenum value="1" id="DCS_Start" token="DCS_CMD_CODE_1" description="DCS write memory start code is inserted."/>
    </bitfield>
    <bitfield id="DCS_CMD_ENABLE" width="1" begin="30" end="30" resetval="0" description="Enables automatic insertion of DCS command codes when data is sourced by the video port." range="" rwaccess="RW">
      <bitenum value="0" id="DCS_Disable" token="DCS_CMD_ENABLE_0" description="DCS command code is NOT inserted when command mode traffic is coming from the Video Port or Interface slave port."/>
      <bitenum value="1" id="DCS_Enable" token="DCS_CMD_ENABLE_1" description="DCS command code is inserted automatically when command mode traffic is coming from the Video Port or Interface slave port."/>
    </bitfield>
    <bitfield id="DMA_RX_REQ_NB" width="3" begin="29" end="27" resetval="0x0" description="Selection of the use of the DMA request (associated to the RX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="DMA_REQ0" token="DMA_RX_REQ_NB_0" description="DMA_req0 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 0)"/>
      <bitenum value="1" id="DMA_REQ1" token="DMA_RX_REQ_NB_1" description="DMA_req1 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 1)"/>
      <bitenum value="2" id="DMA_REQ2" token="DMA_RX_REQ_NB_2" description="DMA_req2 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 2)"/>
      <bitenum value="3" id="DMA_REQ3" token="DMA_RX_REQ_NB_3" description="DMA_req3 is selected (valid only if[8:6] NB_DMA_REQUEST is equal to 3)"/>
      <bitenum value="4" id="NO_DMA_REQ" token="DMA_RX_REQ_NB_4" description="No DMA req selected"/>
    </bitfield>
    <bitfield id="DMA_RX_THRESHOLD" width="3" begin="26" end="24" resetval="0x0" description="Defines the threshold value for the DMA request (associated to the RX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="f1" token="DMA_RX_THRESHOLD_0" description="1x 32 bits"/>
      <bitenum value="1" id="f2" token="DMA_RX_THRESHOLD_1" description="2 x 32 bits"/>
      <bitenum value="2" id="f4" token="DMA_RX_THRESHOLD_2" description="4 x 32 bits"/>
      <bitenum value="3" id="f8" token="DMA_RX_THRESHOLD_3" description="8 x 32 bits"/>
      <bitenum value="4" id="f16" token="DMA_RX_THRESHOLD_4" description="16 x 32 bits"/>
      <bitenum value="5" id="f32" token="DMA_RX_THRESHOLD_5" description="32 x 32 bits"/>
    </bitfield>
    <bitfield id="DMA_TX_REQ_NB" width="3" begin="23" end="21" resetval="0x0" description="Selection of the use of the DMA request (associated to the TX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="DMA_REQ0" token="DMA_TX_REQ_NB_0" description="DMA_req0 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 0)"/>
      <bitenum value="1" id="DMA_REQ1" token="DMA_TX_REQ_NB_1" description="DMA_req1 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 1)"/>
      <bitenum value="2" id="DMA_REQ2" token="DMA_TX_REQ_NB_2" description="DMA_req2 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 2)"/>
      <bitenum value="3" id="DMA_REQ3" token="DMA_TX_REQ_NB_3" description="DMA_req3 is selected (valid only if[8:6] NB_DMA_REQUEST is equal to 3)"/>
      <bitenum value="4" id="NO_DMA_REQ" token="DMA_TX_REQ_NB_4" description="No DMA req selected"/>
    </bitfield>
    <bitfield id="RX_FIFO_NOT_EMPTY" width="1" begin="20" end="20" resetval="0" description="FIFO status in command mode. Otherwise, this bit can be ignored." range="" rwaccess="R">
      <bitenum value="0" id="Empty" token="RX_FIFO_NOT_EMPTY_0_r" description="The RX FIFO is empty (the FIFO does not contain any data for the virtual channel)"/>
      <bitenum value="1" id="Not_Empty" token="RX_FIFO_NOT_EMPTY_1_r" description="The RX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)"/>
    </bitfield>
    <bitfield id="DMA_TX_THRESHOLD" width="3" begin="19" end="17" resetval="0x0" description="Defines the threshold value for the DMA request (associated to the TX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="f1" token="DMA_TX_THRESHOLD_0" description="1x 32 bits"/>
      <bitenum value="1" id="f2" token="DMA_TX_THRESHOLD_1" description="2 x 32 bits"/>
      <bitenum value="2" id="f4" token="DMA_TX_THRESHOLD_2" description="4 x 32 bits"/>
      <bitenum value="3" id="f8" token="DMA_TX_THRESHOLD_3" description="8 x 32 bits"/>
      <bitenum value="4" id="f16" token="DMA_TX_THRESHOLD_4" description="16 x 32 bits"/>
      <bitenum value="5" id="f32" token="DMA_TX_THRESHOLD_5" description="32 x 32 bits"/>
    </bitfield>
    <bitfield id="TX_FIFO_FULL" width="1" begin="16" end="16" resetval="0" description="FIFO status in command mode. Otherwise, this bit can be ignored." range="" rwaccess="R">
      <bitenum value="0" id="Not_Full" token="TX_FIFO_FULL_0_r" description="The TX FIFO is not full (the FIFO can accept at least one more 32-bit value)"/>
      <bitenum value="1" id="Full" token="TX_FIFO_FULL_1_r" description="The TX FIFO is full"/>
    </bitfield>
    <bitfield id="VC_BUSY" width="1" begin="15" end="15" resetval="0" description="Indicates if previously scheduled activities (packets, BTA) are still being processed. Forced to 1 if VC is enabled. Software should check this bit is 0 before changing channel configuration." range="" rwaccess="R">
      <bitenum value="0" id="Completed" token="VC_BUSY_0_r" description="No pending operations for this VC"/>
      <bitenum value="1" id="Completed" token="VC_BUSY_1_r" description="Pending operations for this VC"/>
    </bitfield>
    <bitfield id="PP_BUSY" width="1" begin="14" end="14" resetval="0" description="Ping-pong buffer busy status." range="" rwaccess="R">
      <bitenum value="0" id="PP_Free" token="PP_BUSY_0_r" description="Software is permitted to write a new header for VP command mode traffic."/>
      <bitenum value="1" id="PP_Busy" token="PP_BUSY_1_r" description="Software is NOT permitted to write a new header for VP command mode traffic."/>
    </bitfield>
    <bitfield id="VP_SOURCE" width="1" begin="13" end="13" resetval="0" description="Selection between video port 1 and video port 2. If DSI_GNQ[24] NB_VIDEO_PORTS = 0, the bit field is ignored since only video port 1 is present. ." range="" rwaccess="RW">
      <bitenum value="0" id="VIDEO_PORT_1" token="VP_SOURCE_0" description="The video port 1 is selected."/>
      <bitenum value="1" id="VIDEO_PORT_2" token="VP_SOURCE_1" description="The video port 2 is selected."/>
    </bitfield>
    <bitfield id="RGB565_ORDER" width="1" begin="12" end="12" resetval="0" description="Byte order for RBG565" range="" rwaccess="RW">
      <bitenum value="0" id="RGB565_DBI2" token="RGB565_ORDER_0" description="Byte order asfor DBI compliance"/>
      <bitenum value="1" id="RGB565_Video" token="RGB565_ORDER_1" description="Byte order as for video mode"/>
    </bitfield>
    <bitfield id="OCP_DATA_BUS_WIDTH" width="2" begin="11" end="10" resetval="0x0" description="Defines the size of the Interface data bus" range="" rwaccess="RW">
      <bitenum value="0" id="f16" token="OCP_DATA_BUS_WIDTH_0" description="16-bits data width (LSB of the 32-bit Interface port data bus)"/>
      <bitenum value="1" id="f24" token="OCP_DATA_BUS_WIDTH_1" description="24-bits data width (LSB of the 32-bit Interface port data bus)"/>
      <bitenum value="2" id="f1616" token="OCP_DATA_BUS_WIDTH_2" description="2x16-bits data width (first pixel on the LSB of the 32-bit Interface port data bus and second pixel on the MSB of the 32-bit Interface port data bus for the same Interface access)"/>
      <bitenum value="3" id="f32" token="OCP_DATA_BUS_WIDTH_3" description="32-bits data width"/>
    </bitfield>
    <bitfield id="MODE_SPEED" width="1" begin="9" end="9" resetval="0" description="Selection of the mode. The information is used by hardware only if MODE=COMMAND_MODE otherwise it is ignored." range="" rwaccess="RW">
      <bitenum value="0" id="LP" token="MODE_SPEED_0" description="Low-power mode (CMOS) is used to send short and long packets to the peripheral."/>
      <bitenum value="1" id="HS" token="MODE_SPEED_1" description="High Speed mode (SLVS) is used to send short and long packets to the peripheral."/>
    </bitfield>
    <bitfield id="ECC_TX_EN" width="1" begin="8" end="8" resetval="0" description="Enables the Error Correction Code generation for the transmit header (short and long packets)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_TX_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="ECC_TX_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="CS_TX_EN" width="1" begin="7" end="7" resetval="0" description="Enables the checksum generation for the transmit payload (long packet only)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="CS_TX_EN_0" description="Disabled. The value 0x00 is used."/>
      <bitenum value="1" id="Enable" token="CS_TX_EN_1" description="Enabled. The checksum value is calculated by HW."/>
    </bitfield>
    <bitfield id="BTA_EN" width="1" begin="6" end="6" resetval="0" description="Send the bus turn around to the peripheral. It can be used when the automatic mode is enabled (BTA_SHORT_EN=1 or/and BTA_LONG_EN=1). In that case only one BTA is sent to the peripheral. The manual mode is used to allow the user to define for which packets, the turn around is required for example getting acknowledge from the peripheral." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_EN_0" description="Reads: BTA generation is completed. It is reset by hardware when it is completed. Writes: Cancellation of the BTA generation (not guarantee since it could already on going, shall not be used)."/>
      <bitenum value="1" id="Enable" token="BTA_EN_1" description="Reads: BTA generation has been requested by user (it could be on going but not completed). Writes: Request for BTA generation."/>
    </bitfield>
    <bitfield id="TX_FIFO_NOT_EMPTY" width="1" begin="5" end="5" resetval="0" description="FIFO status" range="" rwaccess="R">
      <bitenum value="0" id="Empty" token="TX_FIFO_NOT_EMPTY_0_r" description="The TX FIFO is empty (the FIFO does not contain any data for the virtual channel)"/>
      <bitenum value="1" id="Not_Empty" token="TX_FIFO_NOT_EMPTY_1_r" description="The TX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)"/>
    </bitfield>
    <bitfield id="MODE" width="1" begin="4" end="4" resetval="0" description="Selection of the mode" range="" rwaccess="RW">
      <bitenum value="0" id="COMMAND_MODE" token="MODE_0" description="Command mode."/>
      <bitenum value="1" id="VIDEO_MODE" token="MODE_1" description="Video mode. The bit fields MODE_SPEED and SOURCE are not used by hardware. The bit field VP_SOURCE is used to select between video port 1 and video port 2 when two video ports are present."/>
    </bitfield>
    <bitfield id="BTA_LONG_EN" width="1" begin="3" end="3" resetval="0" description="Enables the automatic bus turn-around after completion of each long packet transmission." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_LONG_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="BTA_LONG_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="BTA_SHORT_EN" width="1" begin="2" end="2" resetval="0" description="Enables the automatic bus turn-around after completion of each short packet transmission." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_SHORT_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="BTA_SHORT_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="SOURCE" width="1" begin="1" end="1" resetval="0" description="Selection of the source between Interface and the Video port(s) (used by the hardware only if MODE=COMMAND MODE (0x0) otherwise it is ignored). The number of available video ports is defined in DSI_GNQ[24] NB_VIDEO_PORTS bit." range="" rwaccess="RW">
      <bitenum value="0" id="OCP_SLAVE_PORT" token="SOURCE_0" description="All the data are provided by the slave port. Any transfer on the video port is ignored for this virtual channel."/>
      <bitenum value="1" id="VIDEO_PORT" token="SOURCE_1" description="If MODE=VIDEO_MODE. the data received on the video port 1 or video port 2, selected using VP_SOURCE (pixels and enabled synchronization events using[17] VP_HSYNC_START, [18] VP_HSYNC_END, [15] VP_VSYNC_START, [16] VP_VSYNC_END for video port 1 and [] VP_HSYNC_START, [] VP_HSYNC_END, [] VP_VSYNC_START, [] VP_VSYNC_END for video port 2) are sent on the virtual channel (only one virtual channel can be associated with the video port, it is the software responsibility to ensure that no more than one virtual channel is enabled with the video port as the main source for data). If MODE=COMMAND_MODE, the VP.STALL signal is used by the protocol engine to indicate when new data are required. The synchronization signals are not generated by the display controller. Regardless of the MODE, no data can be provided on the Interface slave port."/>
    </bitfield>
    <bitfield id="VC_EN" width="1" begin="0" end="0" resetval="0" description="Enables the virtual channel." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="VC_EN_0" description="Disabled. The virtual channel shall be disabled for any register change in the DSI_VC_... registers to the corresponding VC ID (except for setting the[6] BTA_EN, [23:0] TE_SIZE and [31] TE_START bit fields, and DSI_VC_LONG_,,, DSI_VC_SHORT_..., DSI_VC_IRQ... registers)."/>
      <bitenum value="1" id="Enable" token="VC_EN_1" description="Enabled. No change is allowed to the virtual channel registers expect resetting the VC_EN."/>
    </bitfield>
  </register>
  <register id="DSI_VC_CTRL_i_1" acronym="DSI_VC_CTRL_i_1" offset="0x120" width="32" description="CONTROL REGISTER - Virtual channel This register controls the virtual channel.">
    <bitfield id="DCS_CMD_CODE" width="1" begin="31" end="31" resetval="0" description="DCS command code value to insert between header and video port or Interface slave data when enabled by DCS_CMD_ENABLE (only when TE mechanism is not used otherwise the bit field DCS_CMD_CODE is ignored by DSI protocol engine)." range="" rwaccess="RW">
      <bitenum value="0" id="DCS_Continue" token="DCS_CMD_CODE_0" description="DCS write memory continue code is inserted."/>
      <bitenum value="1" id="DCS_Start" token="DCS_CMD_CODE_1" description="DCS write memory start code is inserted."/>
    </bitfield>
    <bitfield id="DCS_CMD_ENABLE" width="1" begin="30" end="30" resetval="0" description="Enables automatic insertion of DCS command codes when data is sourced by the video port." range="" rwaccess="RW">
      <bitenum value="0" id="DCS_Disable" token="DCS_CMD_ENABLE_0" description="DCS command code is NOT inserted when command mode traffic is coming from the Video Port or Interface slave port."/>
      <bitenum value="1" id="DCS_Enable" token="DCS_CMD_ENABLE_1" description="DCS command code is inserted automatically when command mode traffic is coming from the Video Port or Interface slave port."/>
    </bitfield>
    <bitfield id="DMA_RX_REQ_NB" width="3" begin="29" end="27" resetval="0x0" description="Selection of the use of the DMA request (associated to the RX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="DMA_REQ0" token="DMA_RX_REQ_NB_0" description="DMA_req0 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 0)"/>
      <bitenum value="1" id="DMA_REQ1" token="DMA_RX_REQ_NB_1" description="DMA_req1 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 1)"/>
      <bitenum value="2" id="DMA_REQ2" token="DMA_RX_REQ_NB_2" description="DMA_req2 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 2)"/>
      <bitenum value="3" id="DMA_REQ3" token="DMA_RX_REQ_NB_3" description="DMA_req3 is selected (valid only if[8:6] NB_DMA_REQUEST is equal to 3)"/>
      <bitenum value="4" id="NO_DMA_REQ" token="DMA_RX_REQ_NB_4" description="No DMA req selected"/>
    </bitfield>
    <bitfield id="DMA_RX_THRESHOLD" width="3" begin="26" end="24" resetval="0x0" description="Defines the threshold value for the DMA request (associated to the RX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="f1" token="DMA_RX_THRESHOLD_0" description="1x 32 bits"/>
      <bitenum value="1" id="f2" token="DMA_RX_THRESHOLD_1" description="2 x 32 bits"/>
      <bitenum value="2" id="f4" token="DMA_RX_THRESHOLD_2" description="4 x 32 bits"/>
      <bitenum value="3" id="f8" token="DMA_RX_THRESHOLD_3" description="8 x 32 bits"/>
      <bitenum value="4" id="f16" token="DMA_RX_THRESHOLD_4" description="16 x 32 bits"/>
      <bitenum value="5" id="f32" token="DMA_RX_THRESHOLD_5" description="32 x 32 bits"/>
    </bitfield>
    <bitfield id="DMA_TX_REQ_NB" width="3" begin="23" end="21" resetval="0x0" description="Selection of the use of the DMA request (associated to the TX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="DMA_REQ0" token="DMA_TX_REQ_NB_0" description="DMA_req0 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 0)"/>
      <bitenum value="1" id="DMA_REQ1" token="DMA_TX_REQ_NB_1" description="DMA_req1 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 1)"/>
      <bitenum value="2" id="DMA_REQ2" token="DMA_TX_REQ_NB_2" description="DMA_req2 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 2)"/>
      <bitenum value="3" id="DMA_REQ3" token="DMA_TX_REQ_NB_3" description="DMA_req3 is selected (valid only if[8:6] NB_DMA_REQUEST is equal to 3)"/>
      <bitenum value="4" id="NO_DMA_REQ" token="DMA_TX_REQ_NB_4" description="No DMA req selected"/>
    </bitfield>
    <bitfield id="RX_FIFO_NOT_EMPTY" width="1" begin="20" end="20" resetval="0" description="FIFO status in command mode. Otherwise, this bit can be ignored." range="" rwaccess="R">
      <bitenum value="0" id="Empty" token="RX_FIFO_NOT_EMPTY_0_r" description="The RX FIFO is empty (the FIFO does not contain any data for the virtual channel)"/>
      <bitenum value="1" id="Not_Empty" token="RX_FIFO_NOT_EMPTY_1_r" description="The RX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)"/>
    </bitfield>
    <bitfield id="DMA_TX_THRESHOLD" width="3" begin="19" end="17" resetval="0x0" description="Defines the threshold value for the DMA request (associated to the TX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="f1" token="DMA_TX_THRESHOLD_0" description="1x 32 bits"/>
      <bitenum value="1" id="f2" token="DMA_TX_THRESHOLD_1" description="2 x 32 bits"/>
      <bitenum value="2" id="f4" token="DMA_TX_THRESHOLD_2" description="4 x 32 bits"/>
      <bitenum value="3" id="f8" token="DMA_TX_THRESHOLD_3" description="8 x 32 bits"/>
      <bitenum value="4" id="f16" token="DMA_TX_THRESHOLD_4" description="16 x 32 bits"/>
      <bitenum value="5" id="f32" token="DMA_TX_THRESHOLD_5" description="32 x 32 bits"/>
    </bitfield>
    <bitfield id="TX_FIFO_FULL" width="1" begin="16" end="16" resetval="0" description="FIFO status in command mode. Otherwise, this bit can be ignored." range="" rwaccess="R">
      <bitenum value="0" id="Not_Full" token="TX_FIFO_FULL_0_r" description="The TX FIFO is not full (the FIFO can accept at least one more 32-bit value)"/>
      <bitenum value="1" id="Full" token="TX_FIFO_FULL_1_r" description="The TX FIFO is full"/>
    </bitfield>
    <bitfield id="VC_BUSY" width="1" begin="15" end="15" resetval="0" description="Indicates if previously scheduled activities (packets, BTA) are still being processed. Forced to 1 if VC is enabled. Software should check this bit is 0 before changing channel configuration." range="" rwaccess="R">
      <bitenum value="0" id="Completed" token="VC_BUSY_0_r" description="No pending operations for this VC"/>
      <bitenum value="1" id="Completed" token="VC_BUSY_1_r" description="Pending operations for this VC"/>
    </bitfield>
    <bitfield id="PP_BUSY" width="1" begin="14" end="14" resetval="0" description="Ping-pong buffer busy status." range="" rwaccess="R">
      <bitenum value="0" id="PP_Free" token="PP_BUSY_0_r" description="Software is permitted to write a new header for VP command mode traffic."/>
      <bitenum value="1" id="PP_Busy" token="PP_BUSY_1_r" description="Software is NOT permitted to write a new header for VP command mode traffic."/>
    </bitfield>
    <bitfield id="VP_SOURCE" width="1" begin="13" end="13" resetval="0" description="Selection between video port 1 and video port 2. If DSI_GNQ[24] NB_VIDEO_PORTS = 0, the bit field is ignored since only video port 1 is present. ." range="" rwaccess="RW">
      <bitenum value="0" id="VIDEO_PORT_1" token="VP_SOURCE_0" description="The video port 1 is selected."/>
      <bitenum value="1" id="VIDEO_PORT_2" token="VP_SOURCE_1" description="The video port 2 is selected."/>
    </bitfield>
    <bitfield id="RGB565_ORDER" width="1" begin="12" end="12" resetval="0" description="Byte order for RBG565" range="" rwaccess="RW">
      <bitenum value="0" id="RGB565_DBI2" token="RGB565_ORDER_0" description="Byte order asfor DBI compliance"/>
      <bitenum value="1" id="RGB565_Video" token="RGB565_ORDER_1" description="Byte order as for video mode"/>
    </bitfield>
    <bitfield id="OCP_DATA_BUS_WIDTH" width="2" begin="11" end="10" resetval="0x0" description="Defines the size of the Interface data bus" range="" rwaccess="RW">
      <bitenum value="0" id="f16" token="OCP_DATA_BUS_WIDTH_0" description="16-bits data width (LSB of the 32-bit Interface port data bus)"/>
      <bitenum value="1" id="f24" token="OCP_DATA_BUS_WIDTH_1" description="24-bits data width (LSB of the 32-bit Interface port data bus)"/>
      <bitenum value="2" id="f1616" token="OCP_DATA_BUS_WIDTH_2" description="2x16-bits data width (first pixel on the LSB of the 32-bit Interface port data bus and second pixel on the MSB of the 32-bit Interface port data bus for the same Interface access)"/>
      <bitenum value="3" id="f32" token="OCP_DATA_BUS_WIDTH_3" description="32-bits data width"/>
    </bitfield>
    <bitfield id="MODE_SPEED" width="1" begin="9" end="9" resetval="0" description="Selection of the mode. The information is used by hardware only if MODE=COMMAND_MODE otherwise it is ignored." range="" rwaccess="RW">
      <bitenum value="0" id="LP" token="MODE_SPEED_0" description="Low-power mode (CMOS) is used to send short and long packets to the peripheral."/>
      <bitenum value="1" id="HS" token="MODE_SPEED_1" description="High Speed mode (SLVS) is used to send short and long packets to the peripheral."/>
    </bitfield>
    <bitfield id="ECC_TX_EN" width="1" begin="8" end="8" resetval="0" description="Enables the Error Correction Code generation for the transmit header (short and long packets)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_TX_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="ECC_TX_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="CS_TX_EN" width="1" begin="7" end="7" resetval="0" description="Enables the checksum generation for the transmit payload (long packet only)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="CS_TX_EN_0" description="Disabled. The value 0x00 is used."/>
      <bitenum value="1" id="Enable" token="CS_TX_EN_1" description="Enabled. The checksum value is calculated by HW."/>
    </bitfield>
    <bitfield id="BTA_EN" width="1" begin="6" end="6" resetval="0" description="Send the bus turn around to the peripheral. It can be used when the automatic mode is enabled (BTA_SHORT_EN=1 or/and BTA_LONG_EN=1). In that case only one BTA is sent to the peripheral. The manual mode is used to allow the user to define for which packets, the turn around is required for example getting acknowledge from the peripheral." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_EN_0" description="Reads: BTA generation is completed. It is reset by hardware when it is completed. Writes: Cancellation of the BTA generation (not guarantee since it could already on going, shall not be used)."/>
      <bitenum value="1" id="Enable" token="BTA_EN_1" description="Reads: BTA generation has been requested by user (it could be on going but not completed). Writes: Request for BTA generation."/>
    </bitfield>
    <bitfield id="TX_FIFO_NOT_EMPTY" width="1" begin="5" end="5" resetval="0" description="FIFO status" range="" rwaccess="R">
      <bitenum value="0" id="Empty" token="TX_FIFO_NOT_EMPTY_0_r" description="The TX FIFO is empty (the FIFO does not contain any data for the virtual channel)"/>
      <bitenum value="1" id="Not_Empty" token="TX_FIFO_NOT_EMPTY_1_r" description="The TX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)"/>
    </bitfield>
    <bitfield id="MODE" width="1" begin="4" end="4" resetval="0" description="Selection of the mode" range="" rwaccess="RW">
      <bitenum value="0" id="COMMAND_MODE" token="MODE_0" description="Command mode."/>
      <bitenum value="1" id="VIDEO_MODE" token="MODE_1" description="Video mode. The bit fields MODE_SPEED and SOURCE are not used by hardware. The bit field VP_SOURCE is used to select between video port 1 and video port 2 when two video ports are present."/>
    </bitfield>
    <bitfield id="BTA_LONG_EN" width="1" begin="3" end="3" resetval="0" description="Enables the automatic bus turn-around after completion of each long packet transmission." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_LONG_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="BTA_LONG_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="BTA_SHORT_EN" width="1" begin="2" end="2" resetval="0" description="Enables the automatic bus turn-around after completion of each short packet transmission." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_SHORT_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="BTA_SHORT_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="SOURCE" width="1" begin="1" end="1" resetval="0" description="Selection of the source between Interface and the Video port(s) (used by the hardware only if MODE=COMMAND MODE (0x0) otherwise it is ignored). The number of available video ports is defined in DSI_GNQ[24] NB_VIDEO_PORTS bit." range="" rwaccess="RW">
      <bitenum value="0" id="OCP_SLAVE_PORT" token="SOURCE_0" description="All the data are provided by the slave port. Any transfer on the video port is ignored for this virtual channel."/>
      <bitenum value="1" id="VIDEO_PORT" token="SOURCE_1" description="If MODE=VIDEO_MODE. the data received on the video port 1 or video port 2, selected using VP_SOURCE (pixels and enabled synchronization events using[17] VP_HSYNC_START, [18] VP_HSYNC_END, [15] VP_VSYNC_START, [16] VP_VSYNC_END for video port 1 and [] VP_HSYNC_START, [] VP_HSYNC_END, [] VP_VSYNC_START, [] VP_VSYNC_END for video port 2) are sent on the virtual channel (only one virtual channel can be associated with the video port, it is the software responsibility to ensure that no more than one virtual channel is enabled with the video port as the main source for data). If MODE=COMMAND_MODE, the VP.STALL signal is used by the protocol engine to indicate when new data are required. The synchronization signals are not generated by the display controller. Regardless of the MODE, no data can be provided on the Interface slave port."/>
    </bitfield>
    <bitfield id="VC_EN" width="1" begin="0" end="0" resetval="0" description="Enables the virtual channel." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="VC_EN_0" description="Disabled. The virtual channel shall be disabled for any register change in the DSI_VC_... registers to the corresponding VC ID (except for setting the[6] BTA_EN, [23:0] TE_SIZE and [31] TE_START bit fields, and DSI_VC_LONG_,,, DSI_VC_SHORT_..., DSI_VC_IRQ... registers)."/>
      <bitenum value="1" id="Enable" token="VC_EN_1" description="Enabled. No change is allowed to the virtual channel registers expect resetting the VC_EN."/>
    </bitfield>
  </register>
  <register id="DSI_VC_CTRL_i_2" acronym="DSI_VC_CTRL_i_2" offset="0x140" width="32" description="CONTROL REGISTER - Virtual channel This register controls the virtual channel.">
    <bitfield id="DCS_CMD_CODE" width="1" begin="31" end="31" resetval="0" description="DCS command code value to insert between header and video port or Interface slave data when enabled by DCS_CMD_ENABLE (only when TE mechanism is not used otherwise the bit field DCS_CMD_CODE is ignored by DSI protocol engine)." range="" rwaccess="RW">
      <bitenum value="0" id="DCS_Continue" token="DCS_CMD_CODE_0" description="DCS write memory continue code is inserted."/>
      <bitenum value="1" id="DCS_Start" token="DCS_CMD_CODE_1" description="DCS write memory start code is inserted."/>
    </bitfield>
    <bitfield id="DCS_CMD_ENABLE" width="1" begin="30" end="30" resetval="0" description="Enables automatic insertion of DCS command codes when data is sourced by the video port." range="" rwaccess="RW">
      <bitenum value="0" id="DCS_Disable" token="DCS_CMD_ENABLE_0" description="DCS command code is NOT inserted when command mode traffic is coming from the Video Port or Interface slave port."/>
      <bitenum value="1" id="DCS_Enable" token="DCS_CMD_ENABLE_1" description="DCS command code is inserted automatically when command mode traffic is coming from the Video Port or Interface slave port."/>
    </bitfield>
    <bitfield id="DMA_RX_REQ_NB" width="3" begin="29" end="27" resetval="0x0" description="Selection of the use of the DMA request (associated to the RX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="DMA_REQ0" token="DMA_RX_REQ_NB_0" description="DMA_req0 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 0)"/>
      <bitenum value="1" id="DMA_REQ1" token="DMA_RX_REQ_NB_1" description="DMA_req1 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 1)"/>
      <bitenum value="2" id="DMA_REQ2" token="DMA_RX_REQ_NB_2" description="DMA_req2 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 2)"/>
      <bitenum value="3" id="DMA_REQ3" token="DMA_RX_REQ_NB_3" description="DMA_req3 is selected (valid only if[8:6] NB_DMA_REQUEST is equal to 3)"/>
      <bitenum value="4" id="NO_DMA_REQ" token="DMA_RX_REQ_NB_4" description="No DMA req selected"/>
    </bitfield>
    <bitfield id="DMA_RX_THRESHOLD" width="3" begin="26" end="24" resetval="0x0" description="Defines the threshold value for the DMA request (associated to the RX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="f1" token="DMA_RX_THRESHOLD_0" description="1x 32 bits"/>
      <bitenum value="1" id="f2" token="DMA_RX_THRESHOLD_1" description="2 x 32 bits"/>
      <bitenum value="2" id="f4" token="DMA_RX_THRESHOLD_2" description="4 x 32 bits"/>
      <bitenum value="3" id="f8" token="DMA_RX_THRESHOLD_3" description="8 x 32 bits"/>
      <bitenum value="4" id="f16" token="DMA_RX_THRESHOLD_4" description="16 x 32 bits"/>
      <bitenum value="5" id="f32" token="DMA_RX_THRESHOLD_5" description="32 x 32 bits"/>
    </bitfield>
    <bitfield id="DMA_TX_REQ_NB" width="3" begin="23" end="21" resetval="0x0" description="Selection of the use of the DMA request (associated to the TX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="DMA_REQ0" token="DMA_TX_REQ_NB_0" description="DMA_req0 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 0)"/>
      <bitenum value="1" id="DMA_REQ1" token="DMA_TX_REQ_NB_1" description="DMA_req1 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 1)"/>
      <bitenum value="2" id="DMA_REQ2" token="DMA_TX_REQ_NB_2" description="DMA_req2 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 2)"/>
      <bitenum value="3" id="DMA_REQ3" token="DMA_TX_REQ_NB_3" description="DMA_req3 is selected (valid only if[8:6] NB_DMA_REQUEST is equal to 3)"/>
      <bitenum value="4" id="NO_DMA_REQ" token="DMA_TX_REQ_NB_4" description="No DMA req selected"/>
    </bitfield>
    <bitfield id="RX_FIFO_NOT_EMPTY" width="1" begin="20" end="20" resetval="0" description="FIFO status in command mode. Otherwise, this bit can be ignored." range="" rwaccess="R">
      <bitenum value="0" id="Empty" token="RX_FIFO_NOT_EMPTY_0_r" description="The RX FIFO is empty (the FIFO does not contain any data for the virtual channel)"/>
      <bitenum value="1" id="Not_Empty" token="RX_FIFO_NOT_EMPTY_1_r" description="The RX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)"/>
    </bitfield>
    <bitfield id="DMA_TX_THRESHOLD" width="3" begin="19" end="17" resetval="0x0" description="Defines the threshold value for the DMA request (associated to the TX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="f1" token="DMA_TX_THRESHOLD_0" description="1x 32 bits"/>
      <bitenum value="1" id="f2" token="DMA_TX_THRESHOLD_1" description="2 x 32 bits"/>
      <bitenum value="2" id="f4" token="DMA_TX_THRESHOLD_2" description="4 x 32 bits"/>
      <bitenum value="3" id="f8" token="DMA_TX_THRESHOLD_3" description="8 x 32 bits"/>
      <bitenum value="4" id="f16" token="DMA_TX_THRESHOLD_4" description="16 x 32 bits"/>
      <bitenum value="5" id="f32" token="DMA_TX_THRESHOLD_5" description="32 x 32 bits"/>
    </bitfield>
    <bitfield id="TX_FIFO_FULL" width="1" begin="16" end="16" resetval="0" description="FIFO status in command mode. Otherwise, this bit can be ignored." range="" rwaccess="R">
      <bitenum value="0" id="Not_Full" token="TX_FIFO_FULL_0_r" description="The TX FIFO is not full (the FIFO can accept at least one more 32-bit value)"/>
      <bitenum value="1" id="Full" token="TX_FIFO_FULL_1_r" description="The TX FIFO is full"/>
    </bitfield>
    <bitfield id="VC_BUSY" width="1" begin="15" end="15" resetval="0" description="Indicates if previously scheduled activities (packets, BTA) are still being processed. Forced to 1 if VC is enabled. Software should check this bit is 0 before changing channel configuration." range="" rwaccess="R">
      <bitenum value="0" id="Completed" token="VC_BUSY_0_r" description="No pending operations for this VC"/>
      <bitenum value="1" id="Completed" token="VC_BUSY_1_r" description="Pending operations for this VC"/>
    </bitfield>
    <bitfield id="PP_BUSY" width="1" begin="14" end="14" resetval="0" description="Ping-pong buffer busy status." range="" rwaccess="R">
      <bitenum value="0" id="PP_Free" token="PP_BUSY_0_r" description="Software is permitted to write a new header for VP command mode traffic."/>
      <bitenum value="1" id="PP_Busy" token="PP_BUSY_1_r" description="Software is NOT permitted to write a new header for VP command mode traffic."/>
    </bitfield>
    <bitfield id="VP_SOURCE" width="1" begin="13" end="13" resetval="0" description="Selection between video port 1 and video port 2. If DSI_GNQ[24] NB_VIDEO_PORTS = 0, the bit field is ignored since only video port 1 is present. ." range="" rwaccess="RW">
      <bitenum value="0" id="VIDEO_PORT_1" token="VP_SOURCE_0" description="The video port 1 is selected."/>
      <bitenum value="1" id="VIDEO_PORT_2" token="VP_SOURCE_1" description="The video port 2 is selected."/>
    </bitfield>
    <bitfield id="RGB565_ORDER" width="1" begin="12" end="12" resetval="0" description="Byte order for RBG565" range="" rwaccess="RW">
      <bitenum value="0" id="RGB565_DBI2" token="RGB565_ORDER_0" description="Byte order asfor DBI compliance"/>
      <bitenum value="1" id="RGB565_Video" token="RGB565_ORDER_1" description="Byte order as for video mode"/>
    </bitfield>
    <bitfield id="OCP_DATA_BUS_WIDTH" width="2" begin="11" end="10" resetval="0x0" description="Defines the size of the Interface data bus" range="" rwaccess="RW">
      <bitenum value="0" id="f16" token="OCP_DATA_BUS_WIDTH_0" description="16-bits data width (LSB of the 32-bit Interface port data bus)"/>
      <bitenum value="1" id="f24" token="OCP_DATA_BUS_WIDTH_1" description="24-bits data width (LSB of the 32-bit Interface port data bus)"/>
      <bitenum value="2" id="f1616" token="OCP_DATA_BUS_WIDTH_2" description="2x16-bits data width (first pixel on the LSB of the 32-bit Interface port data bus and second pixel on the MSB of the 32-bit Interface port data bus for the same Interface access)"/>
      <bitenum value="3" id="f32" token="OCP_DATA_BUS_WIDTH_3" description="32-bits data width"/>
    </bitfield>
    <bitfield id="MODE_SPEED" width="1" begin="9" end="9" resetval="0" description="Selection of the mode. The information is used by hardware only if MODE=COMMAND_MODE otherwise it is ignored." range="" rwaccess="RW">
      <bitenum value="0" id="LP" token="MODE_SPEED_0" description="Low-power mode (CMOS) is used to send short and long packets to the peripheral."/>
      <bitenum value="1" id="HS" token="MODE_SPEED_1" description="High Speed mode (SLVS) is used to send short and long packets to the peripheral."/>
    </bitfield>
    <bitfield id="ECC_TX_EN" width="1" begin="8" end="8" resetval="0" description="Enables the Error Correction Code generation for the transmit header (short and long packets)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_TX_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="ECC_TX_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="CS_TX_EN" width="1" begin="7" end="7" resetval="0" description="Enables the checksum generation for the transmit payload (long packet only)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="CS_TX_EN_0" description="Disabled. The value 0x00 is used."/>
      <bitenum value="1" id="Enable" token="CS_TX_EN_1" description="Enabled. The checksum value is calculated by HW."/>
    </bitfield>
    <bitfield id="BTA_EN" width="1" begin="6" end="6" resetval="0" description="Send the bus turn around to the peripheral. It can be used when the automatic mode is enabled (BTA_SHORT_EN=1 or/and BTA_LONG_EN=1). In that case only one BTA is sent to the peripheral. The manual mode is used to allow the user to define for which packets, the turn around is required for example getting acknowledge from the peripheral." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_EN_0" description="Reads: BTA generation is completed. It is reset by hardware when it is completed. Writes: Cancellation of the BTA generation (not guarantee since it could already on going, shall not be used)."/>
      <bitenum value="1" id="Enable" token="BTA_EN_1" description="Reads: BTA generation has been requested by user (it could be on going but not completed). Writes: Request for BTA generation."/>
    </bitfield>
    <bitfield id="TX_FIFO_NOT_EMPTY" width="1" begin="5" end="5" resetval="0" description="FIFO status" range="" rwaccess="R">
      <bitenum value="0" id="Empty" token="TX_FIFO_NOT_EMPTY_0_r" description="The TX FIFO is empty (the FIFO does not contain any data for the virtual channel)"/>
      <bitenum value="1" id="Not_Empty" token="TX_FIFO_NOT_EMPTY_1_r" description="The TX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)"/>
    </bitfield>
    <bitfield id="MODE" width="1" begin="4" end="4" resetval="0" description="Selection of the mode" range="" rwaccess="RW">
      <bitenum value="0" id="COMMAND_MODE" token="MODE_0" description="Command mode."/>
      <bitenum value="1" id="VIDEO_MODE" token="MODE_1" description="Video mode. The bit fields MODE_SPEED and SOURCE are not used by hardware. The bit field VP_SOURCE is used to select between video port 1 and video port 2 when two video ports are present."/>
    </bitfield>
    <bitfield id="BTA_LONG_EN" width="1" begin="3" end="3" resetval="0" description="Enables the automatic bus turn-around after completion of each long packet transmission." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_LONG_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="BTA_LONG_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="BTA_SHORT_EN" width="1" begin="2" end="2" resetval="0" description="Enables the automatic bus turn-around after completion of each short packet transmission." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_SHORT_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="BTA_SHORT_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="SOURCE" width="1" begin="1" end="1" resetval="0" description="Selection of the source between Interface and the Video port(s) (used by the hardware only if MODE=COMMAND MODE (0x0) otherwise it is ignored). The number of available video ports is defined in DSI_GNQ[24] NB_VIDEO_PORTS bit." range="" rwaccess="RW">
      <bitenum value="0" id="OCP_SLAVE_PORT" token="SOURCE_0" description="All the data are provided by the slave port. Any transfer on the video port is ignored for this virtual channel."/>
      <bitenum value="1" id="VIDEO_PORT" token="SOURCE_1" description="If MODE=VIDEO_MODE. the data received on the video port 1 or video port 2, selected using VP_SOURCE (pixels and enabled synchronization events using[17] VP_HSYNC_START, [18] VP_HSYNC_END, [15] VP_VSYNC_START, [16] VP_VSYNC_END for video port 1 and [] VP_HSYNC_START, [] VP_HSYNC_END, [] VP_VSYNC_START, [] VP_VSYNC_END for video port 2) are sent on the virtual channel (only one virtual channel can be associated with the video port, it is the software responsibility to ensure that no more than one virtual channel is enabled with the video port as the main source for data). If MODE=COMMAND_MODE, the VP.STALL signal is used by the protocol engine to indicate when new data are required. The synchronization signals are not generated by the display controller. Regardless of the MODE, no data can be provided on the Interface slave port."/>
    </bitfield>
    <bitfield id="VC_EN" width="1" begin="0" end="0" resetval="0" description="Enables the virtual channel." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="VC_EN_0" description="Disabled. The virtual channel shall be disabled for any register change in the DSI_VC_... registers to the corresponding VC ID (except for setting the[6] BTA_EN, [23:0] TE_SIZE and [31] TE_START bit fields, and DSI_VC_LONG_,,, DSI_VC_SHORT_..., DSI_VC_IRQ... registers)."/>
      <bitenum value="1" id="Enable" token="VC_EN_1" description="Enabled. No change is allowed to the virtual channel registers expect resetting the VC_EN."/>
    </bitfield>
  </register>
  <register id="DSI_VC_CTRL_i_3" acronym="DSI_VC_CTRL_i_3" offset="0x160" width="32" description="CONTROL REGISTER - Virtual channel This register controls the virtual channel.">
    <bitfield id="DCS_CMD_CODE" width="1" begin="31" end="31" resetval="0" description="DCS command code value to insert between header and video port or Interface slave data when enabled by DCS_CMD_ENABLE (only when TE mechanism is not used otherwise the bit field DCS_CMD_CODE is ignored by DSI protocol engine)." range="" rwaccess="RW">
      <bitenum value="0" id="DCS_Continue" token="DCS_CMD_CODE_0" description="DCS write memory continue code is inserted."/>
      <bitenum value="1" id="DCS_Start" token="DCS_CMD_CODE_1" description="DCS write memory start code is inserted."/>
    </bitfield>
    <bitfield id="DCS_CMD_ENABLE" width="1" begin="30" end="30" resetval="0" description="Enables automatic insertion of DCS command codes when data is sourced by the video port." range="" rwaccess="RW">
      <bitenum value="0" id="DCS_Disable" token="DCS_CMD_ENABLE_0" description="DCS command code is NOT inserted when command mode traffic is coming from the Video Port or Interface slave port."/>
      <bitenum value="1" id="DCS_Enable" token="DCS_CMD_ENABLE_1" description="DCS command code is inserted automatically when command mode traffic is coming from the Video Port or Interface slave port."/>
    </bitfield>
    <bitfield id="DMA_RX_REQ_NB" width="3" begin="29" end="27" resetval="0x0" description="Selection of the use of the DMA request (associated to the RX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="DMA_REQ0" token="DMA_RX_REQ_NB_0" description="DMA_req0 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 0)"/>
      <bitenum value="1" id="DMA_REQ1" token="DMA_RX_REQ_NB_1" description="DMA_req1 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 1)"/>
      <bitenum value="2" id="DMA_REQ2" token="DMA_RX_REQ_NB_2" description="DMA_req2 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 2)"/>
      <bitenum value="3" id="DMA_REQ3" token="DMA_RX_REQ_NB_3" description="DMA_req3 is selected (valid only if[8:6] NB_DMA_REQUEST is equal to 3)"/>
      <bitenum value="4" id="NO_DMA_REQ" token="DMA_RX_REQ_NB_4" description="No DMA req selected"/>
    </bitfield>
    <bitfield id="DMA_RX_THRESHOLD" width="3" begin="26" end="24" resetval="0x0" description="Defines the threshold value for the DMA request (associated to the RX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="f1" token="DMA_RX_THRESHOLD_0" description="1x 32 bits"/>
      <bitenum value="1" id="f2" token="DMA_RX_THRESHOLD_1" description="2 x 32 bits"/>
      <bitenum value="2" id="f4" token="DMA_RX_THRESHOLD_2" description="4 x 32 bits"/>
      <bitenum value="3" id="f8" token="DMA_RX_THRESHOLD_3" description="8 x 32 bits"/>
      <bitenum value="4" id="f16" token="DMA_RX_THRESHOLD_4" description="16 x 32 bits"/>
      <bitenum value="5" id="f32" token="DMA_RX_THRESHOLD_5" description="32 x 32 bits"/>
    </bitfield>
    <bitfield id="DMA_TX_REQ_NB" width="3" begin="23" end="21" resetval="0x0" description="Selection of the use of the DMA request (associated to the TX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="DMA_REQ0" token="DMA_TX_REQ_NB_0" description="DMA_req0 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 0)"/>
      <bitenum value="1" id="DMA_REQ1" token="DMA_TX_REQ_NB_1" description="DMA_req1 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 1)"/>
      <bitenum value="2" id="DMA_REQ2" token="DMA_TX_REQ_NB_2" description="DMA_req2 is selected (valid only if[8:6] NB_DMA_REQUEST is greater than 2)"/>
      <bitenum value="3" id="DMA_REQ3" token="DMA_TX_REQ_NB_3" description="DMA_req3 is selected (valid only if[8:6] NB_DMA_REQUEST is equal to 3)"/>
      <bitenum value="4" id="NO_DMA_REQ" token="DMA_TX_REQ_NB_4" description="No DMA req selected"/>
    </bitfield>
    <bitfield id="RX_FIFO_NOT_EMPTY" width="1" begin="20" end="20" resetval="0" description="FIFO status in command mode. Otherwise, this bit can be ignored." range="" rwaccess="R">
      <bitenum value="0" id="Empty" token="RX_FIFO_NOT_EMPTY_0_r" description="The RX FIFO is empty (the FIFO does not contain any data for the virtual channel)"/>
      <bitenum value="1" id="Not_Empty" token="RX_FIFO_NOT_EMPTY_1_r" description="The RX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)"/>
    </bitfield>
    <bitfield id="DMA_TX_THRESHOLD" width="3" begin="19" end="17" resetval="0x0" description="Defines the threshold value for the DMA request (associated to the TX FIFO)" range="" rwaccess="RW">
      <bitenum value="0" id="f1" token="DMA_TX_THRESHOLD_0" description="1x 32 bits"/>
      <bitenum value="1" id="f2" token="DMA_TX_THRESHOLD_1" description="2 x 32 bits"/>
      <bitenum value="2" id="f4" token="DMA_TX_THRESHOLD_2" description="4 x 32 bits"/>
      <bitenum value="3" id="f8" token="DMA_TX_THRESHOLD_3" description="8 x 32 bits"/>
      <bitenum value="4" id="f16" token="DMA_TX_THRESHOLD_4" description="16 x 32 bits"/>
      <bitenum value="5" id="f32" token="DMA_TX_THRESHOLD_5" description="32 x 32 bits"/>
    </bitfield>
    <bitfield id="TX_FIFO_FULL" width="1" begin="16" end="16" resetval="0" description="FIFO status in command mode. Otherwise, this bit can be ignored." range="" rwaccess="R">
      <bitenum value="0" id="Not_Full" token="TX_FIFO_FULL_0_r" description="The TX FIFO is not full (the FIFO can accept at least one more 32-bit value)"/>
      <bitenum value="1" id="Full" token="TX_FIFO_FULL_1_r" description="The TX FIFO is full"/>
    </bitfield>
    <bitfield id="VC_BUSY" width="1" begin="15" end="15" resetval="0" description="Indicates if previously scheduled activities (packets, BTA) are still being processed. Forced to 1 if VC is enabled. Software should check this bit is 0 before changing channel configuration." range="" rwaccess="R">
      <bitenum value="0" id="Completed" token="VC_BUSY_0_r" description="No pending operations for this VC"/>
      <bitenum value="1" id="Completed" token="VC_BUSY_1_r" description="Pending operations for this VC"/>
    </bitfield>
    <bitfield id="PP_BUSY" width="1" begin="14" end="14" resetval="0" description="Ping-pong buffer busy status." range="" rwaccess="R">
      <bitenum value="0" id="PP_Free" token="PP_BUSY_0_r" description="Software is permitted to write a new header for VP command mode traffic."/>
      <bitenum value="1" id="PP_Busy" token="PP_BUSY_1_r" description="Software is NOT permitted to write a new header for VP command mode traffic."/>
    </bitfield>
    <bitfield id="VP_SOURCE" width="1" begin="13" end="13" resetval="0" description="Selection between video port 1 and video port 2. If DSI_GNQ[24] NB_VIDEO_PORTS = 0, the bit field is ignored since only video port 1 is present. ." range="" rwaccess="RW">
      <bitenum value="0" id="VIDEO_PORT_1" token="VP_SOURCE_0" description="The video port 1 is selected."/>
      <bitenum value="1" id="VIDEO_PORT_2" token="VP_SOURCE_1" description="The video port 2 is selected."/>
    </bitfield>
    <bitfield id="RGB565_ORDER" width="1" begin="12" end="12" resetval="0" description="Byte order for RBG565" range="" rwaccess="RW">
      <bitenum value="0" id="RGB565_DBI2" token="RGB565_ORDER_0" description="Byte order asfor DBI compliance"/>
      <bitenum value="1" id="RGB565_Video" token="RGB565_ORDER_1" description="Byte order as for video mode"/>
    </bitfield>
    <bitfield id="OCP_DATA_BUS_WIDTH" width="2" begin="11" end="10" resetval="0x0" description="Defines the size of the Interface data bus" range="" rwaccess="RW">
      <bitenum value="0" id="f16" token="OCP_DATA_BUS_WIDTH_0" description="16-bits data width (LSB of the 32-bit Interface port data bus)"/>
      <bitenum value="1" id="f24" token="OCP_DATA_BUS_WIDTH_1" description="24-bits data width (LSB of the 32-bit Interface port data bus)"/>
      <bitenum value="2" id="f1616" token="OCP_DATA_BUS_WIDTH_2" description="2x16-bits data width (first pixel on the LSB of the 32-bit Interface port data bus and second pixel on the MSB of the 32-bit Interface port data bus for the same Interface access)"/>
      <bitenum value="3" id="f32" token="OCP_DATA_BUS_WIDTH_3" description="32-bits data width"/>
    </bitfield>
    <bitfield id="MODE_SPEED" width="1" begin="9" end="9" resetval="0" description="Selection of the mode. The information is used by hardware only if MODE=COMMAND_MODE otherwise it is ignored." range="" rwaccess="RW">
      <bitenum value="0" id="LP" token="MODE_SPEED_0" description="Low-power mode (CMOS) is used to send short and long packets to the peripheral."/>
      <bitenum value="1" id="HS" token="MODE_SPEED_1" description="High Speed mode (SLVS) is used to send short and long packets to the peripheral."/>
    </bitfield>
    <bitfield id="ECC_TX_EN" width="1" begin="8" end="8" resetval="0" description="Enables the Error Correction Code generation for the transmit header (short and long packets)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_TX_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="ECC_TX_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="CS_TX_EN" width="1" begin="7" end="7" resetval="0" description="Enables the checksum generation for the transmit payload (long packet only)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="CS_TX_EN_0" description="Disabled. The value 0x00 is used."/>
      <bitenum value="1" id="Enable" token="CS_TX_EN_1" description="Enabled. The checksum value is calculated by HW."/>
    </bitfield>
    <bitfield id="BTA_EN" width="1" begin="6" end="6" resetval="0" description="Send the bus turn around to the peripheral. It can be used when the automatic mode is enabled (BTA_SHORT_EN=1 or/and BTA_LONG_EN=1). In that case only one BTA is sent to the peripheral. The manual mode is used to allow the user to define for which packets, the turn around is required for example getting acknowledge from the peripheral." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_EN_0" description="Reads: BTA generation is completed. It is reset by hardware when it is completed. Writes: Cancellation of the BTA generation (not guarantee since it could already on going, shall not be used)."/>
      <bitenum value="1" id="Enable" token="BTA_EN_1" description="Reads: BTA generation has been requested by user (it could be on going but not completed). Writes: Request for BTA generation."/>
    </bitfield>
    <bitfield id="TX_FIFO_NOT_EMPTY" width="1" begin="5" end="5" resetval="0" description="FIFO status" range="" rwaccess="R">
      <bitenum value="0" id="Empty" token="TX_FIFO_NOT_EMPTY_0_r" description="The TX FIFO is empty (the FIFO does not contain any data for the virtual channel)"/>
      <bitenum value="1" id="Not_Empty" token="TX_FIFO_NOT_EMPTY_1_r" description="The TX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)"/>
    </bitfield>
    <bitfield id="MODE" width="1" begin="4" end="4" resetval="0" description="Selection of the mode" range="" rwaccess="RW">
      <bitenum value="0" id="COMMAND_MODE" token="MODE_0" description="Command mode."/>
      <bitenum value="1" id="VIDEO_MODE" token="MODE_1" description="Video mode. The bit fields MODE_SPEED and SOURCE are not used by hardware. The bit field VP_SOURCE is used to select between video port 1 and video port 2 when two video ports are present."/>
    </bitfield>
    <bitfield id="BTA_LONG_EN" width="1" begin="3" end="3" resetval="0" description="Enables the automatic bus turn-around after completion of each long packet transmission." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_LONG_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="BTA_LONG_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="BTA_SHORT_EN" width="1" begin="2" end="2" resetval="0" description="Enables the automatic bus turn-around after completion of each short packet transmission." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_SHORT_EN_0" description="Disabled"/>
      <bitenum value="1" id="Enable" token="BTA_SHORT_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="SOURCE" width="1" begin="1" end="1" resetval="0" description="Selection of the source between Interface and the Video port(s) (used by the hardware only if MODE=COMMAND MODE (0x0) otherwise it is ignored). The number of available video ports is defined in DSI_GNQ[24] NB_VIDEO_PORTS bit." range="" rwaccess="RW">
      <bitenum value="0" id="OCP_SLAVE_PORT" token="SOURCE_0" description="All the data are provided by the slave port. Any transfer on the video port is ignored for this virtual channel."/>
      <bitenum value="1" id="VIDEO_PORT" token="SOURCE_1" description="If MODE=VIDEO_MODE. the data received on the video port 1 or video port 2, selected using VP_SOURCE (pixels and enabled synchronization events using[17] VP_HSYNC_START, [18] VP_HSYNC_END, [15] VP_VSYNC_START, [16] VP_VSYNC_END for video port 1 and [] VP_HSYNC_START, [] VP_HSYNC_END, [] VP_VSYNC_START, [] VP_VSYNC_END for video port 2) are sent on the virtual channel (only one virtual channel can be associated with the video port, it is the software responsibility to ensure that no more than one virtual channel is enabled with the video port as the main source for data). If MODE=COMMAND_MODE, the VP.STALL signal is used by the protocol engine to indicate when new data are required. The synchronization signals are not generated by the display controller. Regardless of the MODE, no data can be provided on the Interface slave port."/>
    </bitfield>
    <bitfield id="VC_EN" width="1" begin="0" end="0" resetval="0" description="Enables the virtual channel." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="VC_EN_0" description="Disabled. The virtual channel shall be disabled for any register change in the DSI_VC_... registers to the corresponding VC ID (except for setting the[6] BTA_EN, [23:0] TE_SIZE and [31] TE_START bit fields, and DSI_VC_LONG_,,, DSI_VC_SHORT_..., DSI_VC_IRQ... registers)."/>
      <bitenum value="1" id="Enable" token="VC_EN_1" description="Enabled. No change is allowed to the virtual channel registers expect resetting the VC_EN."/>
    </bitfield>
  </register>
  <register id="DSI_VC_TE_i_0" acronym="DSI_VC_TE_i_0" offset="0x104" width="32" description="CONTROL REGISTER - Virtual channel This register controls the tearing effect logic. It defines the size of the transfer when TE occurs and enables the automatic TE mode.">
    <bitfield id="TE_START" width="1" begin="31" end="31" resetval="0" description="Manual control of the start of the transfer. The user can use the TE interrupt in order to know that the TE trigger has been received prior to set the TE_START bit field. It is not mandatory to use the TE interrupt." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_START_0" description="Indicates the end of the transfer. The bit can be used by user to cancel the transfer if not already started. The FIFO shall be flushed by software to ensure there is no data remaining in it."/>
      <bitenum value="1" id="Enable" token="TE_START_1" description="Starts the transfer of the data. The size is defined in TE_SIZE. The bit field is set until the transfer is completed. It is reset by hardware when the transfer is completed."/>
    </bitfield>
    <bitfield id="TE_EN" width="1" begin="30" end="30" resetval="0" description="Tearing Effect Control" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_EN_0" description="Disables the automatic transfer. The user shall use the interruption in order to know when TE PHY trigger is received or when the TE is detected on the input CMOS signals. The hardware reset the bit field when the transfer is completed (TE_SIZE=0)."/>
      <bitenum value="1" id="Enable" token="TE_EN_1" description="Enables the automatic transfer of the data using the TE PHY trigger or one of the TE input signals as a synchronization event. The bit field TE_LINE defines if the CMOS signal is used or if the PHY trigger is used."/>
    </bitfield>
    <bitfield id="TE_LINE" width="1" begin="29" end="29" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_LINE_0" description="Disabled the TE CMOS signaling for the automatic data transfer. The DSI PHY trigger is used for the automatic data transfer."/>
      <bitenum value="1" id="Enable" token="TE_LINE_1" description="Enables the TE CMOS signaling for the automatic data transfer. The DSI PHY trigger is not used for the automatic data transfer."/>
    </bitfield>
    <bitfield id="TE_LINE_NB" width="1" begin="28" end="28" resetval="0" description="Selection between TE0 and TE1 CMOS signals." range="" rwaccess="RW">
      <bitenum value="0" id="TE0" token="TE_LINE_NB_0" description="TE0 CMOS input line is selected"/>
      <bitenum value="1" id="TE1" token="TE_LINE_NB_1" description="TE1 CMOS input line is selected"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TE_SIZE" width="24" begin="23" end="0" resetval="0x000000" description="Defines the number of byte (payload data excluding the check -sum) to be sent. The write into the registerDSI_VC_LONG_PACKET_HEADER_i shall be performed by the user before sending data from the register DSI_VC_LONG_PACKET_PAYLOAD_i. The register value is decremented for every byte sent of the DSI link. At the end of the transfer (TE_SIZE=0), the bit field TE_EN is reset by hardware. The DMA request will be asserted when the trigger is received in order to receive data in the TX FIFO. It should not be deasserted until all data (TE_SIZE) have been received in the FIFO." range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VC_TE_i_1" acronym="DSI_VC_TE_i_1" offset="0x124" width="32" description="CONTROL REGISTER - Virtual channel This register controls the tearing effect logic. It defines the size of the transfer when TE occurs and enables the automatic TE mode.">
    <bitfield id="TE_START" width="1" begin="31" end="31" resetval="0" description="Manual control of the start of the transfer. The user can use the TE interrupt in order to know that the TE trigger has been received prior to set the TE_START bit field. It is not mandatory to use the TE interrupt." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_START_0" description="Indicates the end of the transfer. The bit can be used by user to cancel the transfer if not already started. The FIFO shall be flushed by software to ensure there is no data remaining in it."/>
      <bitenum value="1" id="Enable" token="TE_START_1" description="Starts the transfer of the data. The size is defined in TE_SIZE. The bit field is set until the transfer is completed. It is reset by hardware when the transfer is completed."/>
    </bitfield>
    <bitfield id="TE_EN" width="1" begin="30" end="30" resetval="0" description="Tearing Effect Control" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_EN_0" description="Disables the automatic transfer. The user shall use the interruption in order to know when TE PHY trigger is received or when the TE is detected on the input CMOS signals. The hardware reset the bit field when the transfer is completed (TE_SIZE=0)."/>
      <bitenum value="1" id="Enable" token="TE_EN_1" description="Enables the automatic transfer of the data using the TE PHY trigger or one of the TE input signals as a synchronization event. The bit field TE_LINE defines if the CMOS signal is used or if the PHY trigger is used."/>
    </bitfield>
    <bitfield id="TE_LINE" width="1" begin="29" end="29" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_LINE_0" description="Disabled the TE CMOS signaling for the automatic data transfer. The DSI PHY trigger is used for the automatic data transfer."/>
      <bitenum value="1" id="Enable" token="TE_LINE_1" description="Enables the TE CMOS signaling for the automatic data transfer. The DSI PHY trigger is not used for the automatic data transfer."/>
    </bitfield>
    <bitfield id="TE_LINE_NB" width="1" begin="28" end="28" resetval="0" description="Selection between TE0 and TE1 CMOS signals." range="" rwaccess="RW">
      <bitenum value="0" id="TE0" token="TE_LINE_NB_0" description="TE0 CMOS input line is selected"/>
      <bitenum value="1" id="TE1" token="TE_LINE_NB_1" description="TE1 CMOS input line is selected"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TE_SIZE" width="24" begin="23" end="0" resetval="0x000000" description="Defines the number of byte (payload data excluding the check -sum) to be sent. The write into the registerDSI_VC_LONG_PACKET_HEADER_i shall be performed by the user before sending data from the register DSI_VC_LONG_PACKET_PAYLOAD_i. The register value is decremented for every byte sent of the DSI link. At the end of the transfer (TE_SIZE=0), the bit field TE_EN is reset by hardware. The DMA request will be asserted when the trigger is received in order to receive data in the TX FIFO. It should not be deasserted until all data (TE_SIZE) have been received in the FIFO." range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VC_TE_i_2" acronym="DSI_VC_TE_i_2" offset="0x144" width="32" description="CONTROL REGISTER - Virtual channel This register controls the tearing effect logic. It defines the size of the transfer when TE occurs and enables the automatic TE mode.">
    <bitfield id="TE_START" width="1" begin="31" end="31" resetval="0" description="Manual control of the start of the transfer. The user can use the TE interrupt in order to know that the TE trigger has been received prior to set the TE_START bit field. It is not mandatory to use the TE interrupt." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_START_0" description="Indicates the end of the transfer. The bit can be used by user to cancel the transfer if not already started. The FIFO shall be flushed by software to ensure there is no data remaining in it."/>
      <bitenum value="1" id="Enable" token="TE_START_1" description="Starts the transfer of the data. The size is defined in TE_SIZE. The bit field is set until the transfer is completed. It is reset by hardware when the transfer is completed."/>
    </bitfield>
    <bitfield id="TE_EN" width="1" begin="30" end="30" resetval="0" description="Tearing Effect Control" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_EN_0" description="Disables the automatic transfer. The user shall use the interruption in order to know when TE PHY trigger is received or when the TE is detected on the input CMOS signals. The hardware reset the bit field when the transfer is completed (TE_SIZE=0)."/>
      <bitenum value="1" id="Enable" token="TE_EN_1" description="Enables the automatic transfer of the data using the TE PHY trigger or one of the TE input signals as a synchronization event. The bit field TE_LINE defines if the CMOS signal is used or if the PHY trigger is used."/>
    </bitfield>
    <bitfield id="TE_LINE" width="1" begin="29" end="29" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_LINE_0" description="Disabled the TE CMOS signaling for the automatic data transfer. The DSI PHY trigger is used for the automatic data transfer."/>
      <bitenum value="1" id="Enable" token="TE_LINE_1" description="Enables the TE CMOS signaling for the automatic data transfer. The DSI PHY trigger is not used for the automatic data transfer."/>
    </bitfield>
    <bitfield id="TE_LINE_NB" width="1" begin="28" end="28" resetval="0" description="Selection between TE0 and TE1 CMOS signals." range="" rwaccess="RW">
      <bitenum value="0" id="TE0" token="TE_LINE_NB_0" description="TE0 CMOS input line is selected"/>
      <bitenum value="1" id="TE1" token="TE_LINE_NB_1" description="TE1 CMOS input line is selected"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TE_SIZE" width="24" begin="23" end="0" resetval="0x000000" description="Defines the number of byte (payload data excluding the check -sum) to be sent. The write into the registerDSI_VC_LONG_PACKET_HEADER_i shall be performed by the user before sending data from the register DSI_VC_LONG_PACKET_PAYLOAD_i. The register value is decremented for every byte sent of the DSI link. At the end of the transfer (TE_SIZE=0), the bit field TE_EN is reset by hardware. The DMA request will be asserted when the trigger is received in order to receive data in the TX FIFO. It should not be deasserted until all data (TE_SIZE) have been received in the FIFO." range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VC_TE_i_3" acronym="DSI_VC_TE_i_3" offset="0x164" width="32" description="CONTROL REGISTER - Virtual channel This register controls the tearing effect logic. It defines the size of the transfer when TE occurs and enables the automatic TE mode.">
    <bitfield id="TE_START" width="1" begin="31" end="31" resetval="0" description="Manual control of the start of the transfer. The user can use the TE interrupt in order to know that the TE trigger has been received prior to set the TE_START bit field. It is not mandatory to use the TE interrupt." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_START_0" description="Indicates the end of the transfer. The bit can be used by user to cancel the transfer if not already started. The FIFO shall be flushed by software to ensure there is no data remaining in it."/>
      <bitenum value="1" id="Enable" token="TE_START_1" description="Starts the transfer of the data. The size is defined in TE_SIZE. The bit field is set until the transfer is completed. It is reset by hardware when the transfer is completed."/>
    </bitfield>
    <bitfield id="TE_EN" width="1" begin="30" end="30" resetval="0" description="Tearing Effect Control" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_EN_0" description="Disables the automatic transfer. The user shall use the interruption in order to know when TE PHY trigger is received or when the TE is detected on the input CMOS signals. The hardware reset the bit field when the transfer is completed (TE_SIZE=0)."/>
      <bitenum value="1" id="Enable" token="TE_EN_1" description="Enables the automatic transfer of the data using the TE PHY trigger or one of the TE input signals as a synchronization event. The bit field TE_LINE defines if the CMOS signal is used or if the PHY trigger is used."/>
    </bitfield>
    <bitfield id="TE_LINE" width="1" begin="29" end="29" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="TE_LINE_0" description="Disabled the TE CMOS signaling for the automatic data transfer. The DSI PHY trigger is used for the automatic data transfer."/>
      <bitenum value="1" id="Enable" token="TE_LINE_1" description="Enables the TE CMOS signaling for the automatic data transfer. The DSI PHY trigger is not used for the automatic data transfer."/>
    </bitfield>
    <bitfield id="TE_LINE_NB" width="1" begin="28" end="28" resetval="0" description="Selection between TE0 and TE1 CMOS signals." range="" rwaccess="RW">
      <bitenum value="0" id="TE0" token="TE_LINE_NB_0" description="TE0 CMOS input line is selected"/>
      <bitenum value="1" id="TE1" token="TE_LINE_NB_1" description="TE1 CMOS input line is selected"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TE_SIZE" width="24" begin="23" end="0" resetval="0x000000" description="Defines the number of byte (payload data excluding the check -sum) to be sent. The write into the registerDSI_VC_LONG_PACKET_HEADER_i shall be performed by the user before sending data from the register DSI_VC_LONG_PACKET_PAYLOAD_i. The register value is decremented for every byte sent of the DSI link. At the end of the transfer (TE_SIZE=0), the bit field TE_EN is reset by hardware. The DMA request will be asserted when the trigger is received in order to receive data in the TX FIFO. It should not be deasserted until all data (TE_SIZE) have been received in the FIFO." range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VC_LONG_PACKET_HEADER_i_0" acronym="DSI_VC_LONG_PACKET_HEADER_i_0" offset="0x108" width="32" description="LONG PACKET HEADER INFORMATION -Virtual channel This register sets the 32-bit DATA_ID + Word count + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1. DATA_ID is located at bit[7:0] WC is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)">
    <bitfield id="HEADER" width="32" begin="31" end="0" resetval="0x0000 0000" description="Packet header information: DATA ID + WORD COUNT +ECC" range="" rwaccess="W"/>
  </register>
  <register id="DSI_VC_LONG_PACKET_HEADER_i_1" acronym="DSI_VC_LONG_PACKET_HEADER_i_1" offset="0x128" width="32" description="LONG PACKET HEADER INFORMATION -Virtual channel This register sets the 32-bit DATA_ID + Word count + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1. DATA_ID is located at bit[7:0] WC is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)">
    <bitfield id="HEADER" width="32" begin="31" end="0" resetval="0x0000 0000" description="Packet header information: DATA ID + WORD COUNT +ECC" range="" rwaccess="W"/>
  </register>
  <register id="DSI_VC_LONG_PACKET_HEADER_i_2" acronym="DSI_VC_LONG_PACKET_HEADER_i_2" offset="0x148" width="32" description="LONG PACKET HEADER INFORMATION -Virtual channel This register sets the 32-bit DATA_ID + Word count + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1. DATA_ID is located at bit[7:0] WC is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)">
    <bitfield id="HEADER" width="32" begin="31" end="0" resetval="0x0000 0000" description="Packet header information: DATA ID + WORD COUNT +ECC" range="" rwaccess="W"/>
  </register>
  <register id="DSI_VC_LONG_PACKET_HEADER_i_3" acronym="DSI_VC_LONG_PACKET_HEADER_i_3" offset="0x168" width="32" description="LONG PACKET HEADER INFORMATION -Virtual channel This register sets the 32-bit DATA_ID + Word count + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1. DATA_ID is located at bit[7:0] WC is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)">
    <bitfield id="HEADER" width="32" begin="31" end="0" resetval="0x0000 0000" description="Packet header information: DATA ID + WORD COUNT +ECC" range="" rwaccess="W"/>
  </register>
  <register id="DSI_VC_LONG_PACKET_PAYLOAD_i_0" acronym="DSI_VC_LONG_PACKET_PAYLOAD_i_0" offset="0x10C" width="32" description="LONG PACKET PAYLOAD INFORMATION -Virtual channel This register sets the payload information (excluding checksum). The hardware shall capture the word count in the packet header (in DSI_VC_LONG_PACKET_HEADER) in order to determine the last valid data (the virtual channel id can be different than VC). Byte1 is bit[7:0] Byte2 is bit[15:8] Byte3 is bit[23:16] Byte4 is bit[31:24] Byten is sent before Byten+1 (Least significant byte first and least significant bit first)">
    <bitfield id="PAYLOAD" width="32" begin="31" end="0" resetval="0x0000 0000" description="Packet payload information (excluding checksum)" range="" rwaccess="W"/>
  </register>
  <register id="DSI_VC_LONG_PACKET_PAYLOAD_i_1" acronym="DSI_VC_LONG_PACKET_PAYLOAD_i_1" offset="0x12C" width="32" description="LONG PACKET PAYLOAD INFORMATION -Virtual channel This register sets the payload information (excluding checksum). The hardware shall capture the word count in the packet header (in DSI_VC_LONG_PACKET_HEADER) in order to determine the last valid data (the virtual channel id can be different than VC). Byte1 is bit[7:0] Byte2 is bit[15:8] Byte3 is bit[23:16] Byte4 is bit[31:24] Byten is sent before Byten+1 (Least significant byte first and least significant bit first)">
    <bitfield id="PAYLOAD" width="32" begin="31" end="0" resetval="0x0000 0000" description="Packet payload information (excluding checksum)" range="" rwaccess="W"/>
  </register>
  <register id="DSI_VC_LONG_PACKET_PAYLOAD_i_2" acronym="DSI_VC_LONG_PACKET_PAYLOAD_i_2" offset="0x14C" width="32" description="LONG PACKET PAYLOAD INFORMATION -Virtual channel This register sets the payload information (excluding checksum). The hardware shall capture the word count in the packet header (in DSI_VC_LONG_PACKET_HEADER) in order to determine the last valid data (the virtual channel id can be different than VC). Byte1 is bit[7:0] Byte2 is bit[15:8] Byte3 is bit[23:16] Byte4 is bit[31:24] Byten is sent before Byten+1 (Least significant byte first and least significant bit first)">
    <bitfield id="PAYLOAD" width="32" begin="31" end="0" resetval="0x0000 0000" description="Packet payload information (excluding checksum)" range="" rwaccess="W"/>
  </register>
  <register id="DSI_VC_LONG_PACKET_PAYLOAD_i_3" acronym="DSI_VC_LONG_PACKET_PAYLOAD_i_3" offset="0x16C" width="32" description="LONG PACKET PAYLOAD INFORMATION -Virtual channel This register sets the payload information (excluding checksum). The hardware shall capture the word count in the packet header (in DSI_VC_LONG_PACKET_HEADER) in order to determine the last valid data (the virtual channel id can be different than VC). Byte1 is bit[7:0] Byte2 is bit[15:8] Byte3 is bit[23:16] Byte4 is bit[31:24] Byten is sent before Byten+1 (Least significant byte first and least significant bit first)">
    <bitfield id="PAYLOAD" width="32" begin="31" end="0" resetval="0x0000 0000" description="Packet payload information (excluding checksum)" range="" rwaccess="W"/>
  </register>
  <register id="DSI_VC_SHORT_PACKET_HEADER_i_0" acronym="DSI_VC_SHORT_PACKET_HEADER_i_0" offset="0x110" width="32" description="SHORT PACKET HEADER INFORMATION -Virtual channel This register sets the 24-bit DATA_ID + Short Packet Data Field + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1. DATA_ID is located at bit[7:0] Short Packet Data field is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)">
    <bitfield id="HEADER" width="32" begin="31" end="0" resetval="0x0000 0000" description="Writes: Packet header information: DATA ID + DATA FIELD +ECC written into the TX FIFO Reads: 32-bit values read from the RX FIFO" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VC_SHORT_PACKET_HEADER_i_1" acronym="DSI_VC_SHORT_PACKET_HEADER_i_1" offset="0x130" width="32" description="SHORT PACKET HEADER INFORMATION -Virtual channel This register sets the 24-bit DATA_ID + Short Packet Data Field + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1. DATA_ID is located at bit[7:0] Short Packet Data field is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)">
    <bitfield id="HEADER" width="32" begin="31" end="0" resetval="0x0000 0000" description="Writes: Packet header information: DATA ID + DATA FIELD +ECC written into the TX FIFO Reads: 32-bit values read from the RX FIFO" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VC_SHORT_PACKET_HEADER_i_2" acronym="DSI_VC_SHORT_PACKET_HEADER_i_2" offset="0x150" width="32" description="SHORT PACKET HEADER INFORMATION -Virtual channel This register sets the 24-bit DATA_ID + Short Packet Data Field + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1. DATA_ID is located at bit[7:0] Short Packet Data field is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)">
    <bitfield id="HEADER" width="32" begin="31" end="0" resetval="0x0000 0000" description="Writes: Packet header information: DATA ID + DATA FIELD +ECC written into the TX FIFO Reads: 32-bit values read from the RX FIFO" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VC_SHORT_PACKET_HEADER_i_3" acronym="DSI_VC_SHORT_PACKET_HEADER_i_3" offset="0x170" width="32" description="SHORT PACKET HEADER INFORMATION -Virtual channel This register sets the 24-bit DATA_ID + Short Packet Data Field + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1. DATA_ID is located at bit[7:0] Short Packet Data field is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)">
    <bitfield id="HEADER" width="32" begin="31" end="0" resetval="0x0000 0000" description="Writes: Packet header information: DATA ID + DATA FIELD +ECC written into the TX FIFO Reads: 32-bit values read from the RX FIFO" range="" rwaccess="RW"/>
  </register>
  <register id="DSI_VC_IRQSTATUS_i_0" acronym="DSI_VC_IRQSTATUS_i_0" offset="0x118" width="32" description="INTERRUPT STATUS REGISTER - Virtual channel This register regroups all the events related to the virtual channel.">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="PP_BUSY_CHANGE_IRQ" width="1" begin="8" end="8" resetval="0" description="Video port ping-pong buffer busy status. PP_BUSY has changed from 1 to 0." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="PP_BUSY_CHANGE_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="PP_BUSY_CHANGE_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_TX_UDF_IRQ" width="1" begin="7" end="7" resetval="0" description="FIFO underflow status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data for the virtual channel has underflowed, which means that the data for the current packet have not been received in time because the transfer of the packets is already started (transfer started because the packet size is bigger than space allocated in the FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_TX_UDF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_TX_UDF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ECC_NO_CORRECTION_IRQ" width="1" begin="6" end="6" resetval="0" description="ECC error status (short and long packets). No correction of the header because of more than 1-bit error." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ECC_NO_CORRECTION_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="ECC_NO_CORRECTION_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="BTA_IRQ" width="1" begin="5" end="5" resetval="0" description="Virtual channel - BTA status." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="BTA_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="BTA_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_RX_OVF_IRQ" width="1" begin="4" end="4" resetval="0" description="FIFO overflow error status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the DSI link for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_RX_OVF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_RX_OVF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_TX_OVF_IRQ" width="1" begin="3" end="3" resetval="0" description="FIFO overflow error status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_TX_OVF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_TX_OVF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="PACKET_SENT_IRQ" width="1" begin="2" end="2" resetval="0" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="PACKET_SENT_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="PACKET_SENT_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ECC_CORRECTION_IRQ" width="1" begin="1" end="1" resetval="0" description="Virtual channel &#8211; ECC has been used to correct the only 1-bit error status (short and long packet)." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ECC_CORRECTION_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="ECC_CORRECTION_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="CS_IRQ" width="1" begin="0" end="0" resetval="0" description="Virtual channel &#8211; Checksum mismatch status" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="CS_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="CS_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
  </register>
  <register id="DSI_VC_IRQSTATUS_i_1" acronym="DSI_VC_IRQSTATUS_i_1" offset="0x138" width="32" description="INTERRUPT STATUS REGISTER - Virtual channel This register regroups all the events related to the virtual channel.">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="PP_BUSY_CHANGE_IRQ" width="1" begin="8" end="8" resetval="0" description="Video port ping-pong buffer busy status. PP_BUSY has changed from 1 to 0." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="PP_BUSY_CHANGE_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="PP_BUSY_CHANGE_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_TX_UDF_IRQ" width="1" begin="7" end="7" resetval="0" description="FIFO underflow status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data for the virtual channel has underflowed, which means that the data for the current packet have not been received in time because the transfer of the packets is already started (transfer started because the packet size is bigger than space allocated in the FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_TX_UDF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_TX_UDF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ECC_NO_CORRECTION_IRQ" width="1" begin="6" end="6" resetval="0" description="ECC error status (short and long packets). No correction of the header because of more than 1-bit error." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ECC_NO_CORRECTION_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="ECC_NO_CORRECTION_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="BTA_IRQ" width="1" begin="5" end="5" resetval="0" description="Virtual channel - BTA status." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="BTA_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="BTA_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_RX_OVF_IRQ" width="1" begin="4" end="4" resetval="0" description="FIFO overflow error status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the DSI link for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_RX_OVF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_RX_OVF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_TX_OVF_IRQ" width="1" begin="3" end="3" resetval="0" description="FIFO overflow error status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_TX_OVF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_TX_OVF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="PACKET_SENT_IRQ" width="1" begin="2" end="2" resetval="0" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="PACKET_SENT_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="PACKET_SENT_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ECC_CORRECTION_IRQ" width="1" begin="1" end="1" resetval="0" description="Virtual channel &#8211; ECC has been used to correct the only 1-bit error status (short and long packet)." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ECC_CORRECTION_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="ECC_CORRECTION_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="CS_IRQ" width="1" begin="0" end="0" resetval="0" description="Virtual channel &#8211; Checksum mismatch status" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="CS_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="CS_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
  </register>
  <register id="DSI_VC_IRQSTATUS_i_2" acronym="DSI_VC_IRQSTATUS_i_2" offset="0x158" width="32" description="INTERRUPT STATUS REGISTER - Virtual channel This register regroups all the events related to the virtual channel.">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="PP_BUSY_CHANGE_IRQ" width="1" begin="8" end="8" resetval="0" description="Video port ping-pong buffer busy status. PP_BUSY has changed from 1 to 0." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="PP_BUSY_CHANGE_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="PP_BUSY_CHANGE_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_TX_UDF_IRQ" width="1" begin="7" end="7" resetval="0" description="FIFO underflow status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data for the virtual channel has underflowed, which means that the data for the current packet have not been received in time because the transfer of the packets is already started (transfer started because the packet size is bigger than space allocated in the FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_TX_UDF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_TX_UDF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ECC_NO_CORRECTION_IRQ" width="1" begin="6" end="6" resetval="0" description="ECC error status (short and long packets). No correction of the header because of more than 1-bit error." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ECC_NO_CORRECTION_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="ECC_NO_CORRECTION_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="BTA_IRQ" width="1" begin="5" end="5" resetval="0" description="Virtual channel - BTA status." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="BTA_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="BTA_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_RX_OVF_IRQ" width="1" begin="4" end="4" resetval="0" description="FIFO overflow error status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the DSI link for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_RX_OVF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_RX_OVF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_TX_OVF_IRQ" width="1" begin="3" end="3" resetval="0" description="FIFO overflow error status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_TX_OVF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_TX_OVF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="PACKET_SENT_IRQ" width="1" begin="2" end="2" resetval="0" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="PACKET_SENT_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="PACKET_SENT_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ECC_CORRECTION_IRQ" width="1" begin="1" end="1" resetval="0" description="Virtual channel &#8211; ECC has been used to correct the only 1-bit error status (short and long packet)." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ECC_CORRECTION_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="ECC_CORRECTION_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="CS_IRQ" width="1" begin="0" end="0" resetval="0" description="Virtual channel &#8211; Checksum mismatch status" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="CS_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="CS_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
  </register>
  <register id="DSI_VC_IRQSTATUS_i_3" acronym="DSI_VC_IRQSTATUS_i_3" offset="0x178" width="32" description="INTERRUPT STATUS REGISTER - Virtual channel This register regroups all the events related to the virtual channel.">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="PP_BUSY_CHANGE_IRQ" width="1" begin="8" end="8" resetval="0" description="Video port ping-pong buffer busy status. PP_BUSY has changed from 1 to 0." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="PP_BUSY_CHANGE_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="PP_BUSY_CHANGE_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_TX_UDF_IRQ" width="1" begin="7" end="7" resetval="0" description="FIFO underflow status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data for the virtual channel has underflowed, which means that the data for the current packet have not been received in time because the transfer of the packets is already started (transfer started because the packet size is bigger than space allocated in the FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_TX_UDF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_TX_UDF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ECC_NO_CORRECTION_IRQ" width="1" begin="6" end="6" resetval="0" description="ECC error status (short and long packets). No correction of the header because of more than 1-bit error." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ECC_NO_CORRECTION_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="ECC_NO_CORRECTION_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="BTA_IRQ" width="1" begin="5" end="5" resetval="0" description="Virtual channel - BTA status." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="BTA_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="BTA_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_RX_OVF_IRQ" width="1" begin="4" end="4" resetval="0" description="FIFO overflow error status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the DSI link for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_RX_OVF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_RX_OVF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="FIFO_TX_OVF_IRQ" width="1" begin="3" end="3" resetval="0" description="FIFO overflow error status. The FIFO used on the L3_MAIN interconnect slave port for buffering the data for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="FIFO_TX_OVF_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="FIFO_TX_OVF_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="PACKET_SENT_IRQ" width="1" begin="2" end="2" resetval="0" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="PACKET_SENT_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="PACKET_SENT_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="ECC_CORRECTION_IRQ" width="1" begin="1" end="1" resetval="0" description="Virtual channel &#8211; ECC has been used to correct the only 1-bit error status (short and long packet)." range="" rwaccess="RW">
      <bitenum value="0" id="False" token="ECC_CORRECTION_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="ECC_CORRECTION_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
    <bitfield id="CS_IRQ" width="1" begin="0" end="0" resetval="0" description="Virtual channel &#8211; Checksum mismatch status" range="" rwaccess="RW">
      <bitenum value="0" id="False" token="CS_IRQ_0" description="Reads: Event is false. Writes: Status bit is unchanged."/>
      <bitenum value="1" id="True" token="CS_IRQ_1" description="Reads: Event is true (pending). Writes: Status bit is reset."/>
    </bitfield>
  </register>
  <register id="DSI_VC_IRQENABLE_i_0" acronym="DSI_VC_IRQENABLE_i_0" offset="0x11C" width="32" description="Interrupt enable register &#8211; Virtual channel">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="PP_BUSY_CHANGE_IRQ_EN" width="1" begin="8" end="8" resetval="0" description="Video port ping-pong buffer busy status" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="PP_BUSY_CHANGE_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="PP_BUSY_CHANGE_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_TX_UDF_IRQ_EN" width="1" begin="7" end="7" resetval="0" description="FIFO underflow enable. The FIFO used for buffering the data received on the L3_MAIN interface slave port for the virtual channel has underflowed which means that the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_TX_UDF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_TX_UDF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="ECC_NO_CORRECTION_IRQ_EN" width="1" begin="6" end="6" resetval="0" description="ECC error (short and long packets). No correction of the header because of more than 1-bit error." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_NO_CORRECTION_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="ECC_NO_CORRECTION_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="BTA_IRQ_EN" width="1" begin="5" end="5" resetval="0" description="Virtual channel -Bus turn around reception" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="BTA_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_RX_OVF_IRQ_EN" width="1" begin="4" end="4" resetval="0" description="FIFO overflow enable. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the DSI link for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_RX_OVF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_RX_OVF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_TX_OVF_IRQ_EN" width="1" begin="3" end="3" resetval="0" description="FIFO overflow enable. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the Interface slave port for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_TX_OVF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_TX_OVF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="PACKET_SENT_IRQ_EN" width="1" begin="2" end="2" resetval="0" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="PACKET_SENT_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="PACKET_SENT_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="ECC_CORRECTION_IRQ_EN" width="1" begin="1" end="1" resetval="0" description="Virtual channel - ECC has been used to correct the only 1-bit error (short and long packet)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_CORRECTION_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="ECC_CORRECTION_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="CS_IRQ_EN" width="1" begin="0" end="0" resetval="0" description="Virtual channel - checksum of the payload mismatch detection" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="CS_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="CS_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
  </register>
  <register id="DSI_VC_IRQENABLE_i_1" acronym="DSI_VC_IRQENABLE_i_1" offset="0x13C" width="32" description="Interrupt enable register &#8211; Virtual channel">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="PP_BUSY_CHANGE_IRQ_EN" width="1" begin="8" end="8" resetval="0" description="Video port ping-pong buffer busy status" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="PP_BUSY_CHANGE_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="PP_BUSY_CHANGE_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_TX_UDF_IRQ_EN" width="1" begin="7" end="7" resetval="0" description="FIFO underflow enable. The FIFO used for buffering the data received on the L3_MAIN interface slave port for the virtual channel has underflowed which means that the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_TX_UDF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_TX_UDF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="ECC_NO_CORRECTION_IRQ_EN" width="1" begin="6" end="6" resetval="0" description="ECC error (short and long packets). No correction of the header because of more than 1-bit error." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_NO_CORRECTION_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="ECC_NO_CORRECTION_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="BTA_IRQ_EN" width="1" begin="5" end="5" resetval="0" description="Virtual channel -Bus turn around reception" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="BTA_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_RX_OVF_IRQ_EN" width="1" begin="4" end="4" resetval="0" description="FIFO overflow enable. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the DSI link for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_RX_OVF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_RX_OVF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_TX_OVF_IRQ_EN" width="1" begin="3" end="3" resetval="0" description="FIFO overflow enable. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the Interface slave port for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_TX_OVF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_TX_OVF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="PACKET_SENT_IRQ_EN" width="1" begin="2" end="2" resetval="0" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="PACKET_SENT_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="PACKET_SENT_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="ECC_CORRECTION_IRQ_EN" width="1" begin="1" end="1" resetval="0" description="Virtual channel - ECC has been used to correct the only 1-bit error (short and long packet)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_CORRECTION_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="ECC_CORRECTION_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="CS_IRQ_EN" width="1" begin="0" end="0" resetval="0" description="Virtual channel - checksum of the payload mismatch detection" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="CS_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="CS_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
  </register>
  <register id="DSI_VC_IRQENABLE_i_2" acronym="DSI_VC_IRQENABLE_i_2" offset="0x15C" width="32" description="Interrupt enable register &#8211; Virtual channel">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="PP_BUSY_CHANGE_IRQ_EN" width="1" begin="8" end="8" resetval="0" description="Video port ping-pong buffer busy status" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="PP_BUSY_CHANGE_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="PP_BUSY_CHANGE_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_TX_UDF_IRQ_EN" width="1" begin="7" end="7" resetval="0" description="FIFO underflow enable. The FIFO used for buffering the data received on the L3_MAIN interface slave port for the virtual channel has underflowed which means that the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_TX_UDF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_TX_UDF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="ECC_NO_CORRECTION_IRQ_EN" width="1" begin="6" end="6" resetval="0" description="ECC error (short and long packets). No correction of the header because of more than 1-bit error." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_NO_CORRECTION_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="ECC_NO_CORRECTION_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="BTA_IRQ_EN" width="1" begin="5" end="5" resetval="0" description="Virtual channel -Bus turn around reception" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="BTA_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_RX_OVF_IRQ_EN" width="1" begin="4" end="4" resetval="0" description="FIFO overflow enable. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the DSI link for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_RX_OVF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_RX_OVF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_TX_OVF_IRQ_EN" width="1" begin="3" end="3" resetval="0" description="FIFO overflow enable. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the Interface slave port for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_TX_OVF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_TX_OVF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="PACKET_SENT_IRQ_EN" width="1" begin="2" end="2" resetval="0" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="PACKET_SENT_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="PACKET_SENT_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="ECC_CORRECTION_IRQ_EN" width="1" begin="1" end="1" resetval="0" description="Virtual channel - ECC has been used to correct the only 1-bit error (short and long packet)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_CORRECTION_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="ECC_CORRECTION_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="CS_IRQ_EN" width="1" begin="0" end="0" resetval="0" description="Virtual channel - checksum of the payload mismatch detection" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="CS_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="CS_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
  </register>
  <register id="DSI_VC_IRQENABLE_i_3" acronym="DSI_VC_IRQENABLE_i_3" offset="0x17C" width="32" description="Interrupt enable register &#8211; Virtual channel">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="PP_BUSY_CHANGE_IRQ_EN" width="1" begin="8" end="8" resetval="0" description="Video port ping-pong buffer busy status" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="PP_BUSY_CHANGE_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="PP_BUSY_CHANGE_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_TX_UDF_IRQ_EN" width="1" begin="7" end="7" resetval="0" description="FIFO underflow enable. The FIFO used for buffering the data received on the L3_MAIN interface slave port for the virtual channel has underflowed which means that the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_TX_UDF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_TX_UDF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="ECC_NO_CORRECTION_IRQ_EN" width="1" begin="6" end="6" resetval="0" description="ECC error (short and long packets). No correction of the header because of more than 1-bit error." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_NO_CORRECTION_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="ECC_NO_CORRECTION_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="BTA_IRQ_EN" width="1" begin="5" end="5" resetval="0" description="Virtual channel -Bus turn around reception" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="BTA_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="BTA_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_RX_OVF_IRQ_EN" width="1" begin="4" end="4" resetval="0" description="FIFO overflow enable. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the DSI link for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_RX_OVF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_RX_OVF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="FIFO_TX_OVF_IRQ_EN" width="1" begin="3" end="3" resetval="0" description="FIFO overflow enable. The FIFO used on the L3_MAIN interconnect slave port for buffering the data received on the Interface slave port for the virtual channel has overflowed." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="FIFO_TX_OVF_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="FIFO_TX_OVF_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="PACKET_SENT_IRQ_EN" width="1" begin="2" end="2" resetval="0" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="PACKET_SENT_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="PACKET_SENT_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="ECC_CORRECTION_IRQ_EN" width="1" begin="1" end="1" resetval="0" description="Virtual channel - ECC has been used to correct the only 1-bit error (short and long packet)." range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="ECC_CORRECTION_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="ECC_CORRECTION_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="CS_IRQ_EN" width="1" begin="0" end="0" resetval="0" description="Virtual channel - checksum of the payload mismatch detection" range="" rwaccess="RW">
      <bitenum value="0" id="Disable" token="CS_IRQ_EN_0" description="Event is masked."/>
      <bitenum value="1" id="Enable" token="CS_IRQ_EN_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
  </register>
</module>
