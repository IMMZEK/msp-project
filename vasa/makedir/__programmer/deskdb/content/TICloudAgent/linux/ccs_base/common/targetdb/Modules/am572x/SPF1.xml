<module name="SPF1" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="SPF_IDVER" acronym="SPF_IDVER" offset="0x0" width="32" description="SPF revision register">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="0x-" description="SPF revision value" range="" rwaccess="R"/>
  </register>
  <register id="SPF_STATUS" acronym="SPF_STATUS" offset="0x4" width="32" description="Status register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_BUSY" width="1" begin="0" end="0" resetval="0x0" description="SPF is Busy/Idle, Busy Packet processing or logging in progress." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_CONTROL" acronym="SPF_CONTROL" offset="0x8" width="32" description="SPF control register">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_LOGOW_EN" width="1" begin="9" end="9" resetval="0x0" description="SPF Log Overwrite Enable. Setting this bit will cause SPF to overwrite previously logged data whether or not software has updated the software_working_pointer. Overwriting only occurs if there is new data but no space to write it in the space indicated by log_start_address and log_end_address." range="" rwaccess="RW"/>
    <bitfield id="SPF_LOG_EN" width="1" begin="8" end="8" resetval="0x0" description="SPF Log Enable. Setting this bit will allow SPF to log information about dropped packets to memory." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_RULE_LOG" width="1" begin="3" end="3" resetval="0x0" description="SPF Rule Engine Log Enable. Setting this bit will allow SPF to log data from rule engine. The default is log data from extractor." range="" rwaccess="RW"/>
    <bitfield id="SPF_EXT_BYPASS" width="1" begin="2" end="2" resetval="0x0" description="SPF Extractor Bypass Enable. The extractor will not provide any offset information to rule engine if this bit is set. The rule engine must load each of the base registers it intends to use to determine if the packet should be discarded." range="" rwaccess="RW"/>
    <bitfield id="SPF_DROP" width="1" begin="1" end="1" resetval="0x0" description="SPF Drop Enable. This bit must be set to activate packet drops." range="" rwaccess="RW"/>
    <bitfield id="SPF_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="SPF Enable. This bit must be set to enable any operation in SPF. The SPF instruction memory can only be accessed by host processor when the spf_enable is deasserted. Once spf_enable is set, writing a zero to this bit will only take effect when spf_busy signal is low. This ensures that spf stops only on packet boundaries." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_DROPCOUNT" acronym="SPF_DROPCOUNT" offset="0xC" width="32" description="Drop Count Register">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_DROPCNT" width="24" begin="23" end="0" resetval="0x0" description="SPF Drop counter indicates the number of packets dropped so far. This counter does not roll over and must be cleared by writing 0x00FFFFFF." range="" rwaccess="R"/>
  </register>
  <register id="SPF_SWRESET" acronym="SPF_SWRESET" offset="0x10" width="32" description="Software Reset Register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_SWRST" width="1" begin="0" end="0" resetval="0x0" description="SPF Software reset bit can be set to initiate a software reset. It stays high until the reset has not completed, this reset clears all registers to default value." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_PRESCALE" acronym="SPF_PRESCALE" offset="0x14" width="32" description="Rate Limit Prescale Register">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_PRESCALE" width="20" begin="19" end="0" resetval="0x0" description="The MAIN clock is divided by this value for use in Rate Limiters. It is used to create rolling time intervals for use in rate limiting feature." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_RATELIMi_0" acronym="SPF_RATELIMi_0" offset="0x18" width="32" description="Rate Limit Register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_RATELIM" width="8" begin="7" end="0" resetval="0x0" description="SPF Rate Limit Register. The number of packets corresponding to a filter that will be allowed per unit time interval. The filters are programmed in the rule engine and time interval is determined by theSPF_PRESCALE register." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_RATELIMi_1" acronym="SPF_RATELIMi_1" offset="0x1C" width="32" description="Rate Limit Register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_RATELIM" width="8" begin="7" end="0" resetval="0x0" description="SPF Rate Limit Register. The number of packets corresponding to a filter that will be allowed per unit time interval. The filters are programmed in the rule engine and time interval is determined by theSPF_PRESCALE register." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_RATELIMi_2" acronym="SPF_RATELIMi_2" offset="0x20" width="32" description="Rate Limit Register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_RATELIM" width="8" begin="7" end="0" resetval="0x0" description="SPF Rate Limit Register. The number of packets corresponding to a filter that will be allowed per unit time interval. The filters are programmed in the rule engine and time interval is determined by theSPF_PRESCALE register." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_RATELIMi_3" acronym="SPF_RATELIMi_3" offset="0x24" width="32" description="Rate Limit Register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_RATELIM" width="8" begin="7" end="0" resetval="0x0" description="SPF Rate Limit Register. The number of packets corresponding to a filter that will be allowed per unit time interval. The filters are programmed in the rule engine and time interval is determined by theSPF_PRESCALE register." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_CONSTj_0" acronym="SPF_CONSTj_0" offset="0x1C" width="32" description="Constant Register">
    <bitfield id="SPF_CONST" width="32" begin="31" end="0" resetval="0x0" description="SPF Constant Register. The contents of this register are used as input to any instruction that references it." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_CONSTj_1" acronym="SPF_CONSTj_1" offset="0x20" width="32" description="Constant Register">
    <bitfield id="SPF_CONST" width="32" begin="31" end="0" resetval="0x0" description="SPF Constant Register. The contents of this register are used as input to any instruction that references it." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_CONSTj_2" acronym="SPF_CONSTj_2" offset="0x24" width="32" description="Constant Register">
    <bitfield id="SPF_CONST" width="32" begin="31" end="0" resetval="0x0" description="SPF Constant Register. The contents of this register are used as input to any instruction that references it." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_CONSTj_3" acronym="SPF_CONSTj_3" offset="0x28" width="32" description="Constant Register">
    <bitfield id="SPF_CONST" width="32" begin="31" end="0" resetval="0x0" description="SPF Constant Register. The contents of this register are used as input to any instruction that references it." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_CONSTj_4" acronym="SPF_CONSTj_4" offset="0x2C" width="32" description="Constant Register">
    <bitfield id="SPF_CONST" width="32" begin="31" end="0" resetval="0x0" description="SPF Constant Register. The contents of this register are used as input to any instruction that references it." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_CONSTj_5" acronym="SPF_CONSTj_5" offset="0x30" width="32" description="Constant Register">
    <bitfield id="SPF_CONST" width="32" begin="31" end="0" resetval="0x0" description="SPF Constant Register. The contents of this register are used as input to any instruction that references it." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_CONSTj_6" acronym="SPF_CONSTj_6" offset="0x34" width="32" description="Constant Register">
    <bitfield id="SPF_CONST" width="32" begin="31" end="0" resetval="0x0" description="SPF Constant Register. The contents of this register are used as input to any instruction that references it." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_CONSTj_7" acronym="SPF_CONSTj_7" offset="0x38" width="32" description="Constant Register">
    <bitfield id="SPF_CONST" width="32" begin="31" end="0" resetval="0x0" description="SPF Constant Register. The contents of this register are used as input to any instruction that references it." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_INSTRW2" acronym="SPF_INSTRW2" offset="0x50" width="32" description="Instruction Word 2 Register">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_INSTR_W2" width="14" begin="13" end="0" resetval="0x0" description="SPF Rule Engine Instruction Word [75:64] is read from or written to this field." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_INSTRW1" acronym="SPF_INSTRW1" offset="0x54" width="32" description="Instruction Word 1 Register">
    <bitfield id="SPF_INSTR_W1" width="32" begin="31" end="0" resetval="0x0" description="SPF Rule Engine Instruction Word [63:32] is read from or written to this field." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_INSTRW0" acronym="SPF_INSTRW0" offset="0x58" width="32" description="Instruction Word 0 Register">
    <bitfield id="SPF_INSTR_W0" width="32" begin="31" end="0" resetval="0x0" description="SPF Rule Engine Instruction Word [31:0] is read from or written to this field." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_INSTR_CTL" acronym="SPF_INSTR_CTL" offset="0x5C" width="32" description="Instruction Control Register">
    <bitfield id="SPF_INSTR_WEN" width="1" begin="31" end="31" resetval="0x0" description="SPF Write enable bit specifies whether a write operation is to be performed. To read or write instructions, spf processing must be stopped. When the rule engine is processing instructions, the instruction memory cannot be accessed. This bit is set to perform a write and the data in the SPF_INSTR_W2, SPF_INSTR_W1 and SPF_INSTR_W0 registers is written to the instruction RAM at address specified in the SPF_INSTR_PTR field. This bit is always read as zero." range="" rwaccess="W"/>
    <bitfield id="SPF_INSTR_REN" width="1" begin="30" end="30" resetval="0x0" description="SPF Read enable bit specifies whether a read operation is to be performed. This bit is set to perform a read and read data is available in the SPF_INSTR_W2, SPF_INSTR_W1 and SPF_INSTR_W0 registers once read operation has completed. This bit is always read as zero." range="" rwaccess="W"/>
    <bitfield id="RESERVED" width="24" begin="29" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_INSTR_PTR" width="6" begin="5" end="0" resetval="0x0" description="The address in the instruction memory that is to be accessed." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_BEGIN" acronym="SPF_LOG_BEGIN" offset="0x60" width="32" description="Log Begin Address Register">
    <bitfield id="SPF_LOG_BEGIN" width="32" begin="31" end="0" resetval="0x0" description="SPF starts to write log data to memory starting from address given in this field." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_END" acronym="SPF_LOG_END" offset="0x64" width="32" description="Log End Address Register">
    <bitfield id="SPF_LOG_END" width="32" begin="31" end="0" resetval="0x00001000" description="This register along withSPF_LOG_BEGIN register defines the memory range for writing log data, the range(SPF_LOG_END SPF_LOG_BEGIN) should be multiple of 4 words(32 bits), as this is a look ahead register therefore the value progammed should be next word address. (i.e. last word address + 4)." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_HWPTR" acronym="SPF_LOG_HWPTR" offset="0x68" width="32" description="Log Hardware Pointer Register">
    <bitfield id="SPF_LOG_HWPTR" width="32" begin="31" end="0" resetval="0x0" description="This register indicated the address of next location in memory that the SPF will log information to." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_SWPTR" acronym="SPF_LOG_SWPTR" offset="0x6C" width="32" description="Log Software Pointer Register">
    <bitfield id="SPF_LOG_SWPTR" width="32" begin="31" end="0" resetval="0x0" description="This register specifies the address where software shall do next read, software must inform SPF about memory roll over by writingSPF_LOG_END into this register." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_MAP0" acronym="SPF_LOG_MAP0" offset="0x70" width="32" description="Filter Code Map Register 0">
    <bitfield id="SPF_LOGMAP3" width="8" begin="31" end="24" resetval="0x0" description="Mapping of drop code 3 to log threshold 3" range="" rwaccess="RW"/>
    <bitfield id="SPF_LOGMAP2" width="8" begin="23" end="16" resetval="0x0" description="Mapping of drop code 2 to log threshold 2" range="" rwaccess="RW"/>
    <bitfield id="SPF_LOGMAP1" width="8" begin="15" end="8" resetval="0x0" description="Mapping of drop code 1 to log threshold 1" range="" rwaccess="RW"/>
    <bitfield id="SPF_LOGMAP0" width="8" begin="7" end="0" resetval="0x0" description="Mapping of drop code 0 to log threshold 0" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_MAP1" acronym="SPF_LOG_MAP1" offset="0x74" width="32" description="Filter Code Map Register 1">
    <bitfield id="SPF_LOGMAP7" width="8" begin="31" end="24" resetval="0x0" description="Mapping of drop code 7 to log threshold 7" range="" rwaccess="RW"/>
    <bitfield id="SPF_LOGMAP6" width="8" begin="23" end="16" resetval="0x0" description="Mapping of drop code 6 to log threshold 6" range="" rwaccess="RW"/>
    <bitfield id="SPF_LOGMAP5" width="8" begin="15" end="8" resetval="0x0" description="Mapping of drop code 5 to log threshold 5" range="" rwaccess="RW"/>
    <bitfield id="SPF_LOGMAP4" width="8" begin="7" end="0" resetval="0x0" description="Mapping of drop code 4 to log threshold 4" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_THRESHk_0" acronym="SPF_LOG_THRESHk_0" offset="0x78" width="32" description="Log Threshold and Count Register">
    <bitfield id="SPF_COUNT" width="16" begin="31" end="16" resetval="0x0" description="Number of packets dropped for drop code k (8 is default)" range="" rwaccess="R"/>
    <bitfield id="SPF_THRESH" width="16" begin="15" end="0" resetval="0xA" description="Number of packets to be dropped before logging starts" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_THRESHk_1" acronym="SPF_LOG_THRESHk_1" offset="0x7C" width="32" description="Log Threshold and Count Register">
    <bitfield id="SPF_COUNT" width="16" begin="31" end="16" resetval="0x0" description="Number of packets dropped for drop code k (8 is default)" range="" rwaccess="R"/>
    <bitfield id="SPF_THRESH" width="16" begin="15" end="0" resetval="0xA" description="Number of packets to be dropped before logging starts" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_THRESHk_2" acronym="SPF_LOG_THRESHk_2" offset="0x80" width="32" description="Log Threshold and Count Register">
    <bitfield id="SPF_COUNT" width="16" begin="31" end="16" resetval="0x0" description="Number of packets dropped for drop code k (8 is default)" range="" rwaccess="R"/>
    <bitfield id="SPF_THRESH" width="16" begin="15" end="0" resetval="0xA" description="Number of packets to be dropped before logging starts" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_THRESHk_3" acronym="SPF_LOG_THRESHk_3" offset="0x84" width="32" description="Log Threshold and Count Register">
    <bitfield id="SPF_COUNT" width="16" begin="31" end="16" resetval="0x0" description="Number of packets dropped for drop code k (8 is default)" range="" rwaccess="R"/>
    <bitfield id="SPF_THRESH" width="16" begin="15" end="0" resetval="0xA" description="Number of packets to be dropped before logging starts" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_THRESHk_4" acronym="SPF_LOG_THRESHk_4" offset="0x88" width="32" description="Log Threshold and Count Register">
    <bitfield id="SPF_COUNT" width="16" begin="31" end="16" resetval="0x0" description="Number of packets dropped for drop code k (8 is default)" range="" rwaccess="R"/>
    <bitfield id="SPF_THRESH" width="16" begin="15" end="0" resetval="0xA" description="Number of packets to be dropped before logging starts" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_THRESHk_5" acronym="SPF_LOG_THRESHk_5" offset="0x8C" width="32" description="Log Threshold and Count Register">
    <bitfield id="SPF_COUNT" width="16" begin="31" end="16" resetval="0x0" description="Number of packets dropped for drop code k (8 is default)" range="" rwaccess="R"/>
    <bitfield id="SPF_THRESH" width="16" begin="15" end="0" resetval="0xA" description="Number of packets to be dropped before logging starts" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_THRESHk_6" acronym="SPF_LOG_THRESHk_6" offset="0x90" width="32" description="Log Threshold and Count Register">
    <bitfield id="SPF_COUNT" width="16" begin="31" end="16" resetval="0x0" description="Number of packets dropped for drop code k (8 is default)" range="" rwaccess="R"/>
    <bitfield id="SPF_THRESH" width="16" begin="15" end="0" resetval="0xA" description="Number of packets to be dropped before logging starts" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_THRESHk_7" acronym="SPF_LOG_THRESHk_7" offset="0x94" width="32" description="Log Threshold and Count Register">
    <bitfield id="SPF_COUNT" width="16" begin="31" end="16" resetval="0x0" description="Number of packets dropped for drop code k (8 is default)" range="" rwaccess="R"/>
    <bitfield id="SPF_THRESH" width="16" begin="15" end="0" resetval="0xA" description="Number of packets to be dropped before logging starts" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_LOG_THRESHk_8" acronym="SPF_LOG_THRESHk_8" offset="0x98" width="32" description="Log Threshold and Count Register">
    <bitfield id="SPF_COUNT" width="16" begin="31" end="16" resetval="0x0" description="Number of packets dropped for drop code k (8 is default)" range="" rwaccess="R"/>
    <bitfield id="SPF_THRESH" width="16" begin="15" end="0" resetval="0xA" description="Number of packets to be dropped before logging starts" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_INTCNT" acronym="SPF_INTCNT" offset="0x9C" width="32" description="Interrupt Frequency Control Register">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_INTCNT" width="5" begin="4" end="0" resetval="0x0" description="Number of time thresholds must be met before a drop interrupt is triggered." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_INT_RAW" acronym="SPF_INT_RAW" offset="0xA0" width="32" description="Raw Interrupt Status register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_INT_RAW" width="1" begin="0" end="0" resetval="0x0" description="Status of Raw interrupt signal" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_INT_MASKED" acronym="SPF_INT_MASKED" offset="0xA4" width="32" description="Interrupt Status register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_INT_MASKED" width="1" begin="0" end="0" resetval="0x0" description="Status of interrupt signal with mask" range="" rwaccess="RW"/>
  </register>
  <register id="SPF_MASK_SET" acronym="SPF_MASK_SET" offset="0xA8" width="32" description="Interrupt Mask Set Register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_MASKSET" width="1" begin="0" end="0" resetval="0x0" description="Write a 1 to this bit to enable the interrupt." range="" rwaccess="RW"/>
  </register>
  <register id="SPF_MASK_CLR" acronym="SPF_MASK_CLR" offset="0xAC" width="32" description="Interrupt Mask Clear Register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SPF_MASKCLR" width="1" begin="0" end="0" resetval="0x0" description="Write a 1 to this bit to disable the interrupt." range="" rwaccess="RW"/>
  </register>
</module>
