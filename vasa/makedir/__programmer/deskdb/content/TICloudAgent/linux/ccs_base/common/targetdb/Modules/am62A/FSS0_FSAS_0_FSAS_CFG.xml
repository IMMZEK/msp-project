<module name="FSS0_FSAS_0_FSAS_CFG" acronym="" XML_version="1.0" HW_revision="n/a" description="">
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_REVISION" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_REVISION" offset="0x0" width="32" description="IP Revision Identifier (X.Y.R) Used by software to track features, bugs, and compatibility">
		<bitfield id="MODID" width="16" begin="31" end="16" resetval="0x26704" description="Module ID field" range="31 - 16" rwaccess="R"/> 
		<bitfield id="REVRTL" width="5" begin="15" end="11" resetval="0x4" description="RTL revision. Will vary depending on release." range="15 - 11" rwaccess="R"/> 
		<bitfield id="REVMAJ" width="3" begin="10" end="8" resetval="0x1" description="Major revision" range="10 - 8" rwaccess="R"/> 
		<bitfield id="CUSTOM" width="2" begin="7" end="6" resetval="0x0" description="Custom" range="7 - 6" rwaccess="R"/> 
		<bitfield id="REVMIN" width="6" begin="5" end="0" resetval="0x1" description="Minor revision" range="5 - 0" rwaccess="R"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_SYSCONFIG" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_SYSCONFIG" offset="0x4" width="32" description="Controls various parameters of the cotroller state.">
		<bitfield id="OSPI_32B_DISABLE_MODE" width="1" begin="8" end="8" resetval="0x0" description=" 0 OSPI 32bit mode enabled. 1 OSPI 32bit mode disabled" range="8" rwaccess="R/W"/> 
		<bitfield id="DISXIP" width="1" begin="7" end="7" resetval="0x0" description=" 0 XIP Prefetch Enabled. 1 XIP prefetch disabled" range="7" rwaccess="R/W"/> 
		<bitfield id="OSPI_DDR_DISABLE_MODE" width="1" begin="6" end="6" resetval="0x0" description=" 0 OSPI DDR mode enabled. 1 OSPI DDR mode disabled" range="6" rwaccess="R/W"/> 
		<bitfield id="ECC_DISABLE_ADR" width="1" begin="3" end="3" resetval="0x0" description=" 0 Block address within ECC calculation, 1 Block address not within ECC calculation" range="3" rwaccess="R/W"/> 
		<bitfield id="FSS_AES_EN_IPCFG" width="1" begin="2" end="2" resetval="0x0" description=" 1 select security, 0 disable security" range="2" rwaccess="R"/> 
		<bitfield id="ECC_EN" width="1" begin="0" end="0" resetval="0x0" description=" 0 ECC disabled. 1 ECC enabled" range="0" rwaccess="R/W"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_FRAG_ADR" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_FRAG_ADR" offset="0x8" width="32" description="This FRAG_ADR is the address of a request that frag_hi or frag_lo boundary occurs">
		<bitfield id="FRAG_ADDR" width="32" begin="31" end="0" resetval="0x0" description="This address is used to determine the boundary of frag_hi and flag_lo" range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_FRAG_CTL" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_FRAG_CTL" offset="0xC" width="32" description="The FRAG_CTL determins which frag region is fragmented">
		<bitfield id="FRAG_HI" width="1" begin="1" end="1" resetval="0x1" description="When set any address greater than or equal to frag_addr will be fragmented to 16 bits" range="1" rwaccess="R/W"/> 
		<bitfield id="FRAG_LO" width="1" begin="0" end="0" resetval="0x1" description="When set any address less than frag_addr will be fragmented to 16 bits" range="0" rwaccess="R/W"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_EOI" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_EOI" offset="0x10" width="32" description="The End of Interrupt (EOI) MISC Register allows the CPU to acknowledge completion of an interrupt by writing to the EOI for MISC interrupt sources. An eoi_write signal will be generated and another interrupt will be triggered if interrupt sources remain.  This register will be reset one cycle after it has been written to.">
		<bitfield id="EOI_VECTOR" width="1" begin="0" end="0" resetval="0x0" description="Write with bit position of targeted interrupt. (E.g. Ext FSS ECC is bit 0).  Upon write, level interrupt will clear and if un-serviced will issue another pulse interrupt" range="0" rwaccess="R/W"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_STATUS_RAW" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_STATUS_RAW" offset="0x14" width="32" description="The IRQ_STATUS_RAW register allows the interrupt sources to be manually set when writing a 1 to a specific bit.  Write 0: No action Write 1: Set event Read 0: No event pending Read 1: Event pending">
		<bitfield id="ECC_WRITE_NONALIGN" width="1" begin="2" end="2" resetval="0x0" description="Write is not aligned to 32B boundary or not a multiple of 32B" range="2" rwaccess="R/W1TS"/> 
		<bitfield id="ECC_ERROR_2BIT" width="1" begin="1" end="1" resetval="0x0" description="ECC error on 2 bits. Not correctable" range="1" rwaccess="R/W1TS"/> 
		<bitfield id="ECC_ERROR_1BIT" width="1" begin="0" end="0" resetval="0x0" description="ECC error on 1 bits. correctable" range="0" rwaccess="R/W1TS"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_STATUS" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_STATUS" offset="0x18" width="32" description="The IRQ_STATUS register allows the interrupt sources to be manually cleared when writing a 1 to a specific bit.   Write 0: No action Write 1: Clear event Read 0: No event pending Read 1: Event pending">
		<bitfield id="ECC_WRITE_NONALIGN" width="1" begin="2" end="2" resetval="0x0" description="Write is not aligned to 32B boundary or not a multiple of 32B" range="2" rwaccess="R/W1TC"/> 
		<bitfield id="ECC_ERROR_2BIT" width="1" begin="1" end="1" resetval="0x0" description="ECC error on 2 bits. Not correctable" range="1" rwaccess="R/W1TC"/> 
		<bitfield id="ECC_ERROR_1BIT" width="1" begin="0" end="0" resetval="0x0" description="ECC error on 1 bits. correctable" range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ENABLE_SET" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ENABLE_SET" offset="0x1C" width="32" description="The IRQ_ENABLE_SET register allows the interrupt sources to be manually enabled when writing a 1 to a specific bit.  Write 0: No action Write 1: Enable event Read 0: Event is disabled Read 1: Event is enabled">
		<bitfield id="ECC_WRITE_NONALIGN" width="1" begin="2" end="2" resetval="0x0" description="Write is not aligned to 32B boundary or not a multiple of 32B" range="2" rwaccess="R/W1TS"/> 
		<bitfield id="ECC_ERROR_2BIT" width="1" begin="1" end="1" resetval="0x0" description="ECC error on 2 bits. Not correctable" range="1" rwaccess="R/W1TS"/> 
		<bitfield id="ECC_ERROR_1BIT" width="1" begin="0" end="0" resetval="0x0" description="ECC error on 1 bits. correctable" range="0" rwaccess="R/W1TS"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ENABLE_CLR" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ENABLE_CLR" offset="0x20" width="32" description="The IRQ_ENABLE_CLR register allows the interrupt sources to be manually disabled when writing a 1 to a specific bit.  Write 0: No action Write 1: Disable event Read 0: Event is disabled Read 1: Event is enabled">
		<bitfield id="ECC_WRITE_NONALIGN" width="1" begin="2" end="2" resetval="0x0" description="Write is not aligned to 32B boundary or not a multiple of 32B" range="2" rwaccess="R/W1TC"/> 
		<bitfield id="ECC_ERROR_2BIT" width="1" begin="1" end="1" resetval="0x0" description="ECC error on 2 bits. Not correctable" range="1" rwaccess="R/W1TC"/> 
		<bitfield id="ECC_ERROR_1BIT" width="1" begin="0" end="0" resetval="0x0" description="ECC error on 1 bits. correctable" range="0" rwaccess="R/W1TC"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ECC_RGSTRT" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ECC_RGSTRT" offset="0x30" width="32" description="This defines the start of the ECC region in 4KBytes steps.">
		<bitfield id="R_START" width="20" begin="19" end="0" resetval="0x0" description="This defines the start of the ECC region in 4KBytes steps.  Address start = {start[19:0], 0x000} 0x0 means the start is 0x0000_0000  0x1 means the start is 0x0000_1000 0xA means the start is 0x0000_A000 Note the offset + size should be &#60;= 4GBytes, wrap around is not supported." range="19 - 0" rwaccess="R/W"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ECC_RGSIZ" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ECC_RGSIZ" offset="0x34" width="32" description="This defines the size of the ECC region in 4KBytes steps.">
		<bitfield id="R_SIZE" width="20" begin="19" end="0" resetval="0x0" description="This defines the size of the ECC region in 4KBytes steps 0x0 means the size is zero and disabled  0x1 means the size is 4KBytes 0xA means the size is 40KBytes 0xF_FFFF means the size is 4GBytes Note the offset + size should be &#60;= 4GBytes, wrap around is not supported." range="19 - 0" rwaccess="R/W"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ECC_BLOCK_ADR" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ECC_BLOCK_ADR" offset="0x70" width="32" description="The ERR_ECC_BLOCK_ADR register holds the current top of stack ECC error block address, this is only valid when the ecc_err_valid is set">
		<bitfield id="ECC_ERROR_BLOCK_ADDR" width="27" begin="31" end="5" resetval="0x0" description="ECC 32 byte aligned block address" range="31 - 5" rwaccess="R"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ECC_TYPE" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_ECC_TYPE" offset="0x74" width="32" description="The ERR_ECC_TYPE register holds the current top of stack ECC error info, this is only valid when the ecc_err_valid is set">
		<bitfield id="ECC_ERR_VALID" width="1" begin="31" end="31" resetval="0x0" description="When set indicates that there is valid ECC error information available, Writing a one to this register will pop the top of the stack" range="31" rwaccess="R/W1TC"/> 
		<bitfield id="ECC_ERR_ADR" width="1" begin="5" end="5" resetval="0x0" description="When set indicates that there was a single error detected within the address field" range="5" rwaccess="R"/> 
		<bitfield id="ECC_ERR_MAC" width="1" begin="4" end="4" resetval="0x0" description="When set indicates that there was a single error detected within the MAC field" range="4" rwaccess="R"/> 
		<bitfield id="ECC_ERR_DA1" width="1" begin="3" end="3" resetval="0x0" description="When set indicates that there was a single error detected within the High Data word" range="3" rwaccess="R"/> 
		<bitfield id="ECC_ERR_DA0" width="1" begin="2" end="2" resetval="0x0" description="When set indicates that there was a single error detected within the Low Data word" range="2" rwaccess="R"/> 
		<bitfield id="ECC_ERR_DED" width="1" begin="1" end="1" resetval="0x0" description="When set indicates that there was a double error detected for the block" range="1" rwaccess="R"/> 
		<bitfield id="ECC_ERR_SEC" width="1" begin="0" end="0" resetval="0x0" description="hen set indicates that there was a single error detected for the block" range="0" rwaccess="R"/>
	</register>
	<register id="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_WRT_TYPE" acronym="FSAS__FSAS_MMR_CFG__FSAS_GENREGS_WRT_TYPE" offset="0x78" width="32" description="The ERR_WRT_TYPE register holds the current top of stack write error info. this is only valid when the wrt_err_valid is set">
		<bitfield id="WRT_ERR_VALID" width="1" begin="31" end="31" resetval="0x0" description="When set indicates that there is valid write error information available, Writing a one to this register will pop the top of the stack" range="31" rwaccess="R/W1TC"/> 
		<bitfield id="WRT_ERR_BEN" width="1" begin="13" end="13" resetval="0x0" description="When set indicates that there was a write error due to a non-contiguous byte enables" range="13" rwaccess="R"/> 
		<bitfield id="WRT_ERR_ADR" width="1" begin="12" end="12" resetval="0x0" description="When set indicates that there was a write error due to a non-aligned address" range="12" rwaccess="R"/> 
		<bitfield id="WRT_ERR_ROUTEID" width="12" begin="11" end="0" resetval="0x0" description="Indicates the Route ID for the Master that caused the write error" range="11 - 0" rwaccess="R"/>
	</register>
</module>