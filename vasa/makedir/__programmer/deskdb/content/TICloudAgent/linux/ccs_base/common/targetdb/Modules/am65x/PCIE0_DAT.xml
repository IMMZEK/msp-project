<module name="PCIE0_DAT" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="PCIE_RC_PID" acronym="PCIE_RC_PID" offset="0x0" width="32" description="Peripheral Version and ID Register">
    <bitfield id="MODID" width="16" begin="31" end="16" resetval="0x6810" description="Module ID of the Peripheral" range="" rwaccess="R"/>
    <bitfield id="RTL" width="5" begin="15" end="11" resetval="0xX" description="RTL Version Number SR2.0: 16h SR1.0: 15h" range="" rwaccess="R"/>
    <bitfield id="MAJOR" width="3" begin="10" end="8" resetval="0x1" description="Major Revision Code" range="" rwaccess="R"/>
    <bitfield id="CUSTOM" width="2" begin="7" end="6" resetval="0x0" description="Custom Code" range="" rwaccess="R"/>
    <bitfield id="MINOR" width="6" begin="5" end="0" resetval="0x0" description="Minor Revision Code" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_CMD_STATUS" acronym="PCIE_RC_CMD_STATUS" offset="0x4" width="32" description="Command Status Register">
    <bitfield id="RSVD11" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RX_LANE_FLIP_EN" width="1" begin="7" end="7" resetval="0x0" description="Set to enable manual reversal for RX lanes. This drives the rx_lane_flip_en input of the PCIe core" range="" rwaccess="RW"/>
    <bitfield id="TX_LANE_FLIP_EN" width="1" begin="6" end="6" resetval="0x0" description="Set to enable manual reversal for TX lanes. This drives the tx_lane_flip_en input of the PCIe core" range="" rwaccess="RW"/>
    <bitfield id="DBI_CS2" width="1" begin="5" end="5" resetval="0x0" description="Set to enable writing to BAR mask registers that are overlaid on BAR registers." range="" rwaccess="RW"/>
    <bitfield id="APP_RETRY_EN" width="1" begin="4" end="4" resetval="0x0" description="Application Request Retry Enable. Setting this bit will enable all incoming PCIe transactions to be returned with a retry response. This feature can be used if initialization can take longer than PCIe stipulated time frame." range="" rwaccess="RW"/>
    <bitfield id="RSVD10" width="3" begin="3" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="LTSSM_EN" width="1" begin="0" end="0" resetval="0x0" description="Link Training Enable. Setting this bit will enable LTSSM in PCI Express Core and link negotiation with link partner will begin." range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_RSTCMD" acronym="PCIE_RC_RSTCMD" offset="0x14" width="32" description="Reset Command and Status Register">
    <bitfield id="RSVD22" width="3" begin="31" end="29" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="FLR_PF_DONE" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW"/>
    <bitfield id="RSVD21" width="19" begin="27" end="9" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="AXIM_FC" width="1" begin="8" end="8" resetval="0x1" description="AXI Master Flow control enable. 1 - Enable flow control for AXI HP master and AXI LP master interfaces. This is necessary to support the PCIe limiting the AXI masters to four 128-byte outstanding commands, when inbound PCIe TLP is greater than 512-bytes. 0 - Disable AXI HP master and AXI LP master interface flow control. The maximum PCIe TLP size will be 512-bytes, when flow control is disabled." range="" rwaccess="RW"/>
    <bitfield id="RSVD20" width="7" begin="7" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INIT_RST" width="1" begin="0" end="0" resetval="0x0" description="Write one to initiate a downstream hot reset sequence on downstream" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_PTMCFG" acronym="PCIE_RC_PTMCFG" offset="0x18" width="32" description="PTM Config register">
    <bitfield id="RSVD32" width="18" begin="31" end="14" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PTM_CLK_SEL" width="6" begin="13" end="8" resetval="0x0" description="Select ptm_local_clk bit input to CPTS. 0 will select ptm_local_clk[0], 1 will select ptm_local_clk[1] ... 63 will select ptm_local_clk[63]" range="" rwaccess="RW"/>
    <bitfield id="RSVD30" width="5" begin="7" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PTM_CONTEXT_VALID" width="1" begin="2" end="2" resetval="0x0" description="'1' indicates PTM context is valid-EP only" range="" rwaccess="R"/>
    <bitfield id="PTM_MANUAL_UPDATE" width="1" begin="1" end="1" resetval="0x0" description="Write '1' to enable PTM transaction.EP only. EP will initiate one PTM transaction when this field is updated. Always reads '0'" range="" rwaccess="RW1S"/>
    <bitfield id="PTM_AUTO_UPDATE" width="1" begin="0" end="0" resetval="0x0" description="Write '1' to enable PTM auto-update-EP only. EP will automatically initiate PTM transaction every 10ms" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PMCMD" acronym="PCIE_RC_PMCMD" offset="0x20" width="32" description="Power Management Command Register">
    <bitfield id="RSVD40" width="30" begin="31" end="2" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PM_XMT_TURNOFF" width="1" begin="1" end="1" resetval="0x0" description="Write one to transmit a PM_TURNOFF message. Reads zero. Applicable in RC mode only." range="" rwaccess="RW1S"/>
    <bitfield id="PM_XMT_PE" width="1" begin="0" end="0" resetval="0x0" description="Write one to transmit a PM_PME message for Physical Function 0. Reads zero. Applicable to EP mode only." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_IRQ_EOI" acronym="PCIE_RC_IRQ_EOI" offset="0x50" width="32" description="End of Interrupt Register The EOI register is used to re-trigger the pulse interrupt signal to ensure that any nested interrupt events are serviced. The software interrupt handler must write to the EOI register at the end of the current interrupt processing routine, so that new events can re-trigger the pulse interrupt signal again. For level interrupt signals the EOI register is not functional and must not be used.">
    <bitfield id="RSVD60" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="4" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="EOI" width="4" begin="3" end="0" resetval="0x0" description="EOI for interrupts. Write to indicate end-of-interrupt for the respective interrupt. EOI value has to be the following as indicated below to toggle the interrupts in the various interrupt registers EOI = 0 for LEGACY_A_IRQ, EOI = 1 for LEGACY_B_IRQ, EOI = 2 for LEGACY_C_IRQ, EOI = 3 for LEGACY_D_IRQ, EOI = 4 for MMR0_IRQ, EOI = 5 for MMR1_IRQ, EOI = 6 for MMR2_IRQ, EOI = 7 for MMR3_IRQ, EOI = 8 for MMR4_IRQ, EOI = 9 for MMR5_IRQ, EOI = 10 for MMR6_IRQ, EOI = 11 for MMR7_IRQ, EOI = 12 for ERR_IRQ, EOI = 13 for PMRST_IRQ, EOI = 14 for PTM_IRQ" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MMR_IRQ" acronym="PCIE_RC_MMR_IRQ" offset="0x54" width="32" description="Memory Mapped Interrupt IRQ Register">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MMR_IRQ" width="31" begin="30" end="0" resetval="0x0" description="This register is not used in RC mode." range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_LEGACY_IRQ_SET" acronym="PCIE_RC_LEGACY_IRQ_SET" offset="0x64" width="32" description="Legacy Interrupt Request Set Register">
    <bitfield id="RSVD70" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="LEGACY_IRQ_SET_0" width="1" begin="0" end="0" resetval="0x0" description="Write one to generate assert legacy PCI interrupt message for Physical Function0. On read, a one indicates currently asserted interrupt." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_LEGACY_IRQ_CLR" acronym="PCIE_RC_LEGACY_IRQ_CLR" offset="0x68" width="32" description="Legacy Interrupt Request Clear Register">
    <bitfield id="RSVD80" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="LEGACY_IRQ_CLR_0" width="1" begin="0" end="0" resetval="0x0" description="Write one to generate legacy PCI deassert interrupt message for Physical Function0. If MSI is disabled, legacy interrupt deassert message will be generated. On read, a one indicates currently asserted interrupt." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_LEGACY_IRQ_STATUS" acronym="PCIE_RC_LEGACY_IRQ_STATUS" offset="0x6C" width="32" description="Legacy Interrupt Status Register">
    <bitfield id="RSVD90" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="LEGACY_IRQ_STATUS_0" width="1" begin="0" end="0" resetval="0x0" description="Indicates whether legacy PCI interrupt for physical function 0 is asserted or not" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_GPR0" acronym="PCIE_RC_GPR0" offset="0x70" width="32" description="General Purpose 0 Register">
    <bitfield id="GENERIC0" width="32" begin="31" end="0" resetval="0x0" description="Generic Info field 0" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_GPR1" acronym="PCIE_RC_GPR1" offset="0x74" width="32" description="General Purpose 1 Register">
    <bitfield id="GENERIC1" width="32" begin="31" end="0" resetval="0x0" description="Generic Info field 1" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_GPR2" acronym="PCIE_RC_GPR2" offset="0x78" width="32" description="General Purpose 2 Register">
    <bitfield id="GENERIC2" width="32" begin="31" end="0" resetval="0x0" description="Generic Info field 2" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_GPR3" acronym="PCIE_RC_GPR3" offset="0x7C" width="32" description="General Purpose 3 Register">
    <bitfield id="GENERIC3" width="32" begin="31" end="0" resetval="0x0" description="Generic Info field 3" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MMR0_IRQ_STATUS_RAW" acronym="PCIE_RC_MMR0_IRQ_STATUS_RAW" offset="0x100" width="32" description="MMR 0 Interrupt Raw Status Register">
    <bitfield id="RSVD100" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR0_IRQ_STATUS_RAW" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates raw status of MMR vectors (24, 16, 8, 0) associated with the bit. Typically, writes to this register are only done for debug purposes." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR0_IRQ_STATUS" acronym="PCIE_RC_MMR0_IRQ_STATUS" offset="0x104" width="32" description="MMR 0 Interrupt Status Register">
    <bitfield id="RSVD110" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR0_IRQ_STATUS" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates status of MMR vector (24, 16, 8, 0) associated with the bit. Each of the bits can be written with one to clear the respective interrupt status bit." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR0_IRQ_ENABLE_SET" acronym="PCIE_RC_MMR0_IRQ_ENABLE_SET" offset="0x108" width="32" description="MMR 0 Interrupt Enable Set Register">
    <bitfield id="RSVD111" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR0_IRQ_EN_SET" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, enables the MMR interrupt (24, 16, 8, 0) associated with the bit" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR0_IRQ_ENABLE_CLR" acronym="PCIE_RC_MMR0_IRQ_ENABLE_CLR" offset="0x10C" width="32" description="MMR 0 Interrupt Enable Clear Register">
    <bitfield id="RSVD112" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR0_IRQ_EN_CLR" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, disables the MMR interrupt (24, 16, 8, 0) associated with the bit" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR1_IRQ_STATUS_RAW" acronym="PCIE_RC_MMR1_IRQ_STATUS_RAW" offset="0x110" width="32" description="MMR 1 Interrupt Raw Status Register">
    <bitfield id="RSVD120" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR1_IRQ_STATUS_RAW" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates raw status of MMR vectors (25, 17, 9, 1) associated with the bit. Typically, writes to this register are only done for debug purposes." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR1_IRQ_STATUS" acronym="PCIE_RC_MMR1_IRQ_STATUS" offset="0x114" width="32" description="MMR 1 Interrupt Status Register">
    <bitfield id="RSVD121" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR1_IRQ_STATUS" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates status of MMR vector (25, 17, 9, 1) associated with the bit. Each of the bits can be written with one to clear the respective interrupt status bit." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR1_IRQ_ENABLE_SET" acronym="PCIE_RC_MMR1_IRQ_ENABLE_SET" offset="0x118" width="32" description="MMR 1 Interrupt Enable Set Register">
    <bitfield id="RSVD122" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR1_IRQ_EN_SET" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, enables the MMR interrupt (25, 17, 9, 1) associated with the bit" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR1_IRQ_ENABLE_CLR" acronym="PCIE_RC_MMR1_IRQ_ENABLE_CLR" offset="0x11C" width="32" description="MMR 1 Interrupt Enable Clear Register">
    <bitfield id="RSVD123" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR1_IRQ_EN_CLR" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, disables the MMR interrupt (25, 17, 9, 1) associated with the bit" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR2_IRQ_STATUS_RAW" acronym="PCIE_RC_MMR2_IRQ_STATUS_RAW" offset="0x120" width="32" description="MMR 2 Interrupt Raw Status Register">
    <bitfield id="RSVD130" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR2_IRQ_STATUS_RAW" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates raw status of MMR vectors (26, 18, 10, 2) associated with the bit. Typically, writes to this register are only done for debug purposes." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR2_IRQ_STATUS" acronym="PCIE_RC_MMR2_IRQ_STATUS" offset="0x124" width="32" description="MMR 2 Interrupt Status Register">
    <bitfield id="RSVD131" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR2_IRQ_STATUS" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates status of MMR vector (26, 18, 10, 2) associated with the bit. Each of the bits can be written with one to clear the respective interrupt status bit." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR2_IRQ_ENABLE_SET" acronym="PCIE_RC_MMR2_IRQ_ENABLE_SET" offset="0x128" width="32" description="MMR 2 Interrupt Enable Set Register">
    <bitfield id="RSVD132" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR2_IRQ_EN_SET" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, enables the MMR interrupt (26, 18, 10, 2) associated with the bit" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR2_IRQ_ENABLE_CLR" acronym="PCIE_RC_MMR2_IRQ_ENABLE_CLR" offset="0x12C" width="32" description="MMR 2 Interrupt Enable Clear Register">
    <bitfield id="RSVD133" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR2_IRQ_EN_CLR" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, disables the MMR interrupt (26, 18, 10, 2) associated with the bit" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR3_IRQ_STATUS_RAW" acronym="PCIE_RC_MMR3_IRQ_STATUS_RAW" offset="0x130" width="32" description="MMR 3 Interrupt Raw Status Register">
    <bitfield id="RSVD140" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR3_IRQ_STATUS_RAW" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates raw status of MMR vectors (27, 19, 11, 3) associated with the bit. Typically, writes to this register are only done for debug purposes." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR3_IRQ_STATUS" acronym="PCIE_RC_MMR3_IRQ_STATUS" offset="0x134" width="32" description="MMR 3 Interrupt Status Register">
    <bitfield id="RSVD141" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR3_IRQ_STATUS" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates status of MMR vector (27, 19, 11, 3) associated with the bit. Each of the bits can be written with one to clear the respective interrupt status bit." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR3_IRQ_ENABLE_SET" acronym="PCIE_RC_MMR3_IRQ_ENABLE_SET" offset="0x138" width="32" description="MMR 3 Interrupt Enable Set Register">
    <bitfield id="RSVD142" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR3_IRQ_EN_SET" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, enables the MMR interrupt (27, 19, 11, 3) associated with the bit" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR3_IRQ_ENABLE_CLR" acronym="PCIE_RC_MMR3_IRQ_ENABLE_CLR" offset="0x13C" width="32" description="MMR 3 Interrupt Enable Clear Register">
    <bitfield id="RSVD143" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR3_IRQ_EN_CLR" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, disables the MMR interrupt (27, 19, 11, 3) associated with the bit" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR4_IRQ_STATUS_RAW" acronym="PCIE_RC_MMR4_IRQ_STATUS_RAW" offset="0x140" width="32" description="MMR 4 Interrupt Raw Status Register">
    <bitfield id="RSVD150" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR4_IRQ_STATUS_RAW" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates raw status of MMR vectors (28, 20, 12, 4) associated with the bit. Typically, writes to this register are only done for debug purposes." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR4_IRQ_STATUS" acronym="PCIE_RC_MMR4_IRQ_STATUS" offset="0x144" width="32" description="MMR 4 Interrupt Status Register">
    <bitfield id="RSVD151" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR4_IRQ_STATUS" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates status of MMR vector (28, 20, 12, 4) associated with the bit. Each of the bits can be written with one to clear the respective interrupt status bit." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR4_IRQ_ENABLE_SET" acronym="PCIE_RC_MMR4_IRQ_ENABLE_SET" offset="0x148" width="32" description="MMR 4 Interrupt Enable Set Register">
    <bitfield id="RSVD152" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR4_IRQ_EN_SET" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, enables the MMR interrupt (28, 20, 12, 4) associated with the bit" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR4_IRQ_ENABLE_CLR" acronym="PCIE_RC_MMR4_IRQ_ENABLE_CLR" offset="0x14C" width="32" description="MMR 4 Interrupt Enable Clear Register">
    <bitfield id="RSVD153" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR4_IRQ_EN_CLR" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, disables the MMR interrupt (28, 20, 12, 4) associated with the bit" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR5_IRQ_STATUS_RAW" acronym="PCIE_RC_MMR5_IRQ_STATUS_RAW" offset="0x150" width="32" description="MMR 5 Interrupt Raw Status Register">
    <bitfield id="RSVD160" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR5_IRQ_STATUS_RAW" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates raw status of MMR vectors (29, 21, 13, 5) associated with the bit. Typically, writes to this register are only done for debug purposes." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR5_IRQ_STATUS" acronym="PCIE_RC_MMR5_IRQ_STATUS" offset="0x154" width="32" description="MMR 5 Interrupt Status Register">
    <bitfield id="RSVD161" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR5_IRQ_STATUS" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates status of MMR vector (29, 21, 13, 5) associated with the bit. Each of the bits can be written with one to clear the respective interrupt status bit." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR5_IRQ_ENABLE_SET" acronym="PCIE_RC_MMR5_IRQ_ENABLE_SET" offset="0x158" width="32" description="MMR 5 Interrupt Enable Set Register">
    <bitfield id="RSVD162" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR5_IRQ_EN_SET" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, enables the MMR interrupt (29, 21, 13, 5) associated with the bit" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR5_IRQ_ENABLE_CLR" acronym="PCIE_RC_MMR5_IRQ_ENABLE_CLR" offset="0x15C" width="32" description="MMR 5 Interrupt Enable Clear Register">
    <bitfield id="RSVD163" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR5_IRQ_EN_CLR" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, disables the MMR interrupt (29, 21, 13, 5) associated with the bit" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR6_IRQ_STATUS_RAW" acronym="PCIE_RC_MMR6_IRQ_STATUS_RAW" offset="0x160" width="32" description="MMR 6 Interrupt Raw Status Register">
    <bitfield id="RSVD170" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR6_IRQ_STATUS_RAW" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates raw status of MMR vectors (30, 22, 14, 6) associated with the bit. Typically, writes to this register are only done for debug purposes." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR6_IRQ_STATUS" acronym="PCIE_RC_MMR6_IRQ_STATUS" offset="0x164" width="32" description="MMR 6 Interrupt Status Register">
    <bitfield id="RSVD171" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR6_IRQ_STATUS" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates status of MMR vector (30, 22, 14, 6) associated with the bit. Each of the bits can be written with one to clear the respective interrupt status bit." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR6_IRQ_ENABLE_SET" acronym="PCIE_RC_MMR6_IRQ_ENABLE_SET" offset="0x168" width="32" description="MMR 6 Interrupt Enable Set Register">
    <bitfield id="RSVD172" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR6_IRQ_EN_SET" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, enables the MMR interrupt (30, 22, 14, 6) associated with the bit" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR6_IRQ_ENABLE_CLR" acronym="PCIE_RC_MMR6_IRQ_ENABLE_CLR" offset="0x16C" width="32" description="MMR 6 Interrupt Enable Clear Register">
    <bitfield id="RSVD173" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR6_IRQ_EN_CLR" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, disables the MMR interrupt (30, 22, 14, 6) associated with the bit" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR7_IRQ_STATUS_RAW" acronym="PCIE_RC_MMR7_IRQ_STATUS_RAW" offset="0x170" width="32" description="MMR 7 Interrupt Raw Status Register">
    <bitfield id="RSVD180" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR7_IRQ_STATUS_RAW" width="4" begin="3" end="0" resetval="0x0" description="" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR7_IRQ_STATUS" acronym="PCIE_RC_MMR7_IRQ_STATUS" offset="0x174" width="32" description="MMR 7 Interrupt Status Register">
    <bitfield id="RSVD181" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR7_IRQ_STATUS" width="4" begin="3" end="0" resetval="0x0" description="Each bit indicates status of MMR vector (31, 23, 15, 7) associated with the bit. Each of the bits can be written with one to clear the respective interrupt status bit." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MMR7_IRQ_ENABLE_SET" acronym="PCIE_RC_MMR7_IRQ_ENABLE_SET" offset="0x178" width="32" description="MMR 7 Interrupt Enable Set Register">
    <bitfield id="RSVD182" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR7_IRQ_EN_SET" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, enables the MMR interrupt (31, 23, 15, 7) associated with the bit" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_MMR7_IRQ_ENABLE_CLR" acronym="PCIE_RC_MMR7_IRQ_ENABLE_CLR" offset="0x17C" width="32" description="MMR 7 Interrupt Enable Clear Register">
    <bitfield id="RSVD183" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMR7_IRQ_EN_CLR" width="4" begin="3" end="0" resetval="0x0" description="Each bit, when written to, disables the MMR interrupt (31, 23, 15, 7) associated with the bit" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_LEGACY_A_IRQ_STATUS_RAW" acronym="PCIE_RC_LEGACY_A_IRQ_STATUS_RAW" offset="0x180" width="32" description="Legacy A Raw Interrupt Status Register">
    <bitfield id="RSVD200" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTA_RAW" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt A raw status. RC mode only" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_LEGACY_A_IRQ_STATUS" acronym="PCIE_RC_LEGACY_A_IRQ_STATUS" offset="0x184" width="32" description="Legacy A Raw Interrupt Status Register">
    <bitfield id="RSVD210" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTA" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt A status. Set when interrupt is active. Write one to clear the interrupt event. RC mode only" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_LEGACY_A_IRQ_ENABLE_SET" acronym="PCIE_RC_LEGACY_A_IRQ_ENABLE_SET" offset="0x188" width="32" description="Legacy A Interrupt Enable Set Register">
    <bitfield id="RSVD220" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTA_EN_SET" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt A enable. Set to enable the interrupt. On read, one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_LEGACY_A_IRQ_ENABLE_CLR" acronym="PCIE_RC_LEGACY_A_IRQ_ENABLE_CLR" offset="0x18C" width="32" description="Legacy A Interrupt Enable Clear Register">
    <bitfield id="RSVD230" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTA_EN_CLR" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt A disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_LEGACY_B_IRQ_STATUS_RAW" acronym="PCIE_RC_LEGACY_B_IRQ_STATUS_RAW" offset="0x190" width="32" description="Legacy B Raw Interrupt Status Register">
    <bitfield id="RSVD300" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTB_RAW" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt B raw status. RC mode only" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_LEGACY_B_IRQ_STATUS" acronym="PCIE_RC_LEGACY_B_IRQ_STATUS" offset="0x194" width="32" description="Legacy B Interrupt Status Register">
    <bitfield id="RSVD310" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTA" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt B status. Set when interrupt is active. Write one to clear the interrupt event. RC mode only." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_LEGACY_B_IRQ_ENABLE_SET" acronym="PCIE_RC_LEGACY_B_IRQ_ENABLE_SET" offset="0x198" width="32" description="Legacy B Interrupt Enable Set Register">
    <bitfield id="RSVD320" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTB_EN_SET" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt B enable. Set to enable the interrupt. On read, one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_LEGACY_B_IRQ_ENABLE_CLR" acronym="PCIE_RC_LEGACY_B_IRQ_ENABLE_CLR" offset="0x19C" width="32" description="Legacy B Interrupt Enable Clear Register">
    <bitfield id="RSVD330" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTB_EN_CLR" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt B disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_LEGACY_C_IRQ_STATUS_RAW" acronym="PCIE_RC_LEGACY_C_IRQ_STATUS_RAW" offset="0x1A0" width="32" description="Legacy C Raw Interrupt Status Register">
    <bitfield id="RSVD400" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTC_RAW" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt C raw status. RC mode only" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_LEGACY_C_IRQ_STATUS" acronym="PCIE_RC_LEGACY_C_IRQ_STATUS" offset="0x1A4" width="32" description="Legacy C Interrupt Status Register">
    <bitfield id="RSVD410" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTA" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt C status. Set when interrupt is active. Write one to clear the interrupt event. RC mode only" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_LEGACY_C_IRQ_ENABLE_SET" acronym="PCIE_RC_LEGACY_C_IRQ_ENABLE_SET" offset="0x1A8" width="32" description="Legacy C Interrupt Enable Set Register">
    <bitfield id="RSVD420" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTC_EN_SET" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt C enable. Set to enable the interrupt. On read, one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_LEGACY_C_IRQ_ENABLE_CLR" acronym="PCIE_RC_LEGACY_C_IRQ_ENABLE_CLR" offset="0x1AC" width="32" description="Legacy C Interrupt Enable Clear Register">
    <bitfield id="RSVD430" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTC_EN_CLR" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt C disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_LEGACY_D_IRQ_STATUS_RAW" acronym="PCIE_RC_LEGACY_D_IRQ_STATUS_RAW" offset="0x1B0" width="32" description="Legacy D Raw Interrupt Status Register">
    <bitfield id="RSVD500" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTD_RAW" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt D raw status. RC mode only" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_LEGACY_D_IRQ_STATUS" acronym="PCIE_RC_LEGACY_D_IRQ_STATUS" offset="0x1B4" width="32" description="Legacy D Interrupt Status Register">
    <bitfield id="RSVD510" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTA" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt D status. Set when interrupt is active. Write one to clear the interrupt event. RC mode only" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_LEGACY_D_IRQ_ENABLE_SET" acronym="PCIE_RC_LEGACY_D_IRQ_ENABLE_SET" offset="0x1B8" width="32" description="Legacy D Interrupt Enable Set Register">
    <bitfield id="RSVD520" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTD_EN_SET" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt D enable. Set to enable the interrupt. On read, one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_LEGACY_D_IRQ_ENABLE_CLR" acronym="PCIE_RC_LEGACY_D_IRQ_ENABLE_CLR" offset="0x1BC" width="32" description="Legacy D Interrupt Enable Clear Register">
    <bitfield id="RSVD530" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTD_EN_CLR" width="1" begin="0" end="0" resetval="0x0" description="Legacy Interrupt D disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_ERR_IRQ_STATUS_RAW" acronym="PCIE_RC_ERR_IRQ_STATUS_RAW" offset="0x1C0" width="32" description="Raw ERR Interrupt Status Register">
    <bitfield id="RSVD600" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ERR_AER_RAW" width="1" begin="4" end="4" resetval="0x0" description="AER MSI error raw status. This interrupt is generated due to the assertion of the cfg_aer_rc_err_int or the cfg_aer_err_msi output of the PCIe controller core." range="" rwaccess="RW1S"/>
    <bitfield id="ERR_CORR_RAW" width="1" begin="3" end="3" resetval="0x0" description="Correctable error raw status. This interrupt is generated due to the assertion of the radm_correctable_err output of the PCIe controller core." range="" rwaccess="RW1S"/>
    <bitfield id="ERR_NONFATAL_RAW" width="1" begin="2" end="2" resetval="0x0" description="Nonfatal error raw status. This interrupt is generated due to the assertion of the radm_nonfatal_err output of the PCIe controller core." range="" rwaccess="RW1S"/>
    <bitfield id="ERR_FATAL_RAW" width="1" begin="1" end="1" resetval="0x0" description="Fatal error raw status. This interrupt is generated due to the assertion of the radm_fatal_err output of the PCIe controller core." range="" rwaccess="RW1S"/>
    <bitfield id="ERR_SYS_RAW" width="1" begin="0" end="0" resetval="0x0" description="System Error (FATAL, NONFATAL or CORRECTABLE error) raw status. This interrupt is generated due to the assertion of the cfg_sys_err_rc output of the PCIe controller core." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_ERR_IRQ_STATUS" acronym="PCIE_RC_ERR_IRQ_STATUS" offset="0x1C4" width="32" description="">
    <bitfield id="RSVD610" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ERR_AER" width="1" begin="4" end="4" resetval="0x0" description="AER MSI error status. This interrupt is generated due to the assertion of the cfg_aer_rc_err_int or the cfg_aer_err_msi output of the PCIe controller core. Write one to clear" range="" rwaccess="RW1C"/>
    <bitfield id="ERR_CORR" width="1" begin="3" end="3" resetval="0x0" description="Correctable error status. This interrupt is generated due to the assertion of the radm_correctable_err output of the PCIe controller core. Write one to clear" range="" rwaccess="RW1C"/>
    <bitfield id="ERR_NONFATAL" width="1" begin="2" end="2" resetval="0x0" description="Nonfatal error status. This interrupt is generated due to the assertion of the radm_nonfatal_err output of the PCIe controller core. Write one to clear." range="" rwaccess="RW1C"/>
    <bitfield id="ERR_FATAL" width="1" begin="1" end="1" resetval="0x0" description="Fatal error status. This interrupt is generated due to the assertion of the radm_fatal_err output of the PCIe controller core. Write one to clear." range="" rwaccess="RW1C"/>
    <bitfield id="ERR_SYS" width="1" begin="0" end="0" resetval="0x0" description="System Error (FATAL, NONFATAL or CORRECTABLE error). This interrupt is generated due to the assertion of the cfg_sys_err_rc output of the PCIe controller core. Write one to clear." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_ERR_IRQ_ENABLE_SET" acronym="PCIE_RC_ERR_IRQ_ENABLE_SET" offset="0x1C8" width="32" description="">
    <bitfield id="RSVD620" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ERR_AER_EN_SET" width="1" begin="4" end="4" resetval="0x0" description="AER MSI error interrupt enable. Set to enable. On read, one/zero means enabled/disabled respectively" range="" rwaccess="RW1S"/>
    <bitfield id="ERR_CORR_EN_SET" width="1" begin="3" end="3" resetval="0x0" description="Correctable error interrupt enable. Set to enable the interrupt. On read, one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
    <bitfield id="ERR_NONFATAL_EN_SET" width="1" begin="2" end="2" resetval="0x0" description="Nonfatal error interrupt enable. Set to enable the interrupt. On read, one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
    <bitfield id="ERR_FATAL_EN_SET" width="1" begin="1" end="1" resetval="0x0" description="Fatal error interrupt enable. Set to enable the interrupt. On read, one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
    <bitfield id="ERR_SYS_EN_SET" width="1" begin="0" end="0" resetval="0x0" description="System Error (FATAL, NONFATAL or CORRECTABLE error) interrupt enable. Set to enable the interrupt. On read, one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_ERR_IRQ_ENABLE_CLR" acronym="PCIE_RC_ERR_IRQ_ENABLE_CLR" offset="0x1CC" width="32" description="">
    <bitfield id="RSVD630" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ERR_AER_EN_CLR" width="1" begin="4" end="4" resetval="0x0" description="AER MSI error interrupt disable. Set to disable. On read, one/zero means enabled/disabled respectively." range="" rwaccess="RW1C"/>
    <bitfield id="ERR_CORR_EN_CLR" width="1" begin="3" end="3" resetval="0x0" description="Correctable error interrupt disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1C"/>
    <bitfield id="ERR_NONFATAL_EN_CLR" width="1" begin="2" end="2" resetval="0x0" description="Nonfatal error interrupt disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1C"/>
    <bitfield id="ERR_FATAL_EN_CLR" width="1" begin="1" end="1" resetval="0x0" description="Fatal error interrupt disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1C"/>
    <bitfield id="ERR_SYS_EN_CLR" width="1" begin="0" end="0" resetval="0x0" description="System Error (FATAL, NONFATAL or CORRECTABLE error) interrupt disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_PMRST_IRQ_STATUS_RAW" acronym="PCIE_RC_PMRST_IRQ_STATUS_RAW" offset="0x1D0" width="32" description="Power Management and Reset Interrupt Raw Status Register">
    <bitfield id="RSVD700" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="FLR_PF_ACTIVE_RAW" width="1" begin="4" end="4" resetval="0x0" description="Function Level Reset Active raw status" range="" rwaccess="RW1S"/>
    <bitfield id="LNK_RST_REQ_RAW" width="1" begin="3" end="3" resetval="0x0" description="Link Request Reset interrupt raw status" range="" rwaccess="RW1S"/>
    <bitfield id="PM_PME_RAW" width="1" begin="2" end="2" resetval="0x0" description="Power Management PME message received interrupt raw status" range="" rwaccess="RW1S"/>
    <bitfield id="PM_TO_ACK_RAW" width="1" begin="1" end="1" resetval="0x0" description="Power Management ACK received interrupt raw status" range="" rwaccess="RW1S"/>
    <bitfield id="PM_TURNOFF_RAW" width="1" begin="0" end="0" resetval="0x0" description="Power Management Turnoff message received raw status" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_PMRST_IRQ_STATUS" acronym="PCIE_RC_PMRST_IRQ_STATUS" offset="0x1D4" width="32" description="Power Management and Reset Interrupt Status Register">
    <bitfield id="RSVD710" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="FLR_PF_ACTIVE" width="1" begin="4" end="4" resetval="0x0" description="Function Level Reset Active status." range="" rwaccess="RW1C"/>
    <bitfield id="LNK_RST_REQ" width="1" begin="3" end="3" resetval="0x0" description="Link Request Reset interrupt status. Write one to clear" range="" rwaccess="RW1C"/>
    <bitfield id="PM_PME" width="1" begin="2" end="2" resetval="0x0" description="Power Management PME message received interrupt status. Write one to clear." range="" rwaccess="RW1C"/>
    <bitfield id="PM_TO_ACK" width="1" begin="1" end="1" resetval="0x0" description="Power Management ACK received interrupt status. Write one to clear." range="" rwaccess="RW1C"/>
    <bitfield id="PM_TURNOFF" width="1" begin="0" end="0" resetval="0x0" description="Power Management Turnoff message received status. Write one to clear." range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_PMRST_IRQ_ENABLE_SET" acronym="PCIE_RC_PMRST_IRQ_ENABLE_SET" offset="0x1D8" width="32" description="Power Management and Reset Interrupt Enable Set Register">
    <bitfield id="RSVD720" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="FLR_PF_ACTIVE_EN_SET" width="1" begin="4" end="4" resetval="0x0" description="Function Level Reset Active enable." range="" rwaccess="RW1S"/>
    <bitfield id="LNK_RST_REQ_EN_SET" width="1" begin="3" end="3" resetval="0x0" description="Link Request Reset interrupt enable. Set to enable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
    <bitfield id="PM_PME_EN_SET" width="1" begin="2" end="2" resetval="0x0" description="Power Management PME message received interrupt enable. Set to enable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
    <bitfield id="PM_TO_ACK_EN_SET" width="1" begin="1" end="1" resetval="0x0" description="Power Management ACK received interrupt enable. Set to enable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
    <bitfield id="PM_TURNOFF_EN_SET" width="1" begin="0" end="0" resetval="0x0" description="Power Management Turnoff message received enable. Set to enable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_PMRST_IRQ_ENABLE_CLR" acronym="PCIE_RC_PMRST_IRQ_ENABLE_CLR" offset="0x1DC" width="32" description="Power Management and Reset Interrupt Enable Clear Register">
    <bitfield id="RSVD730" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="FLR_PF_ACTIVE_EN_CLR" width="1" begin="4" end="4" resetval="0x0" description="Function Level Reset Active disable." range="" rwaccess="RW1C"/>
    <bitfield id="LNK_RST_REQ_EN_CLR" width="1" begin="3" end="3" resetval="0x0" description="Link Request Reset interrupt disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1C"/>
    <bitfield id="PM_PME_EN_CLR" width="1" begin="2" end="2" resetval="0x0" description="Power Management PME message received interrupt disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1C"/>
    <bitfield id="PM_TO_ACK_EN_CLR" width="1" begin="1" end="1" resetval="0x0" description="Power Management ACK received interrupt disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled." range="" rwaccess="RW1C"/>
    <bitfield id="PM_TURNOFF_EN_CLR" width="1" begin="0" end="0" resetval="0x0" description="Power Management Turnoff message received disable. Set to disable the interrupt. Read one/zero means interrupt is enabled/disabled" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_PTM_IRQ_STATUS_RAW" acronym="PCIE_RC_PTM_IRQ_STATUS_RAW" offset="0x1E0" width="32" description="Precision Time Measurement Raw Status Register">
    <bitfield id="RSVD800" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PTM_CLK_UPDATED_RAW" width="1" begin="0" end="0" resetval="0x0" description="Precision Time Measurement interrupt raw status" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_PTM_IRQ_STATUS" acronym="PCIE_RC_PTM_IRQ_STATUS" offset="0x1E4" width="32" description="Precision Time Measurement Status Register">
    <bitfield id="RSVD810" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PTM_CLK_UPDATED" width="1" begin="0" end="0" resetval="0x0" description="Precision Time Measurement interrupt status" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_PTM_IRQ_ENABLE_SET" acronym="PCIE_RC_PTM_IRQ_ENABLE_SET" offset="0x1E8" width="32" description="Precision Time Measurement Enable Set Register">
    <bitfield id="RSVD820" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PTM_CLK_UPDATED_EN_SET" width="1" begin="0" end="0" resetval="0x0" description="Precision Time Measurement interrupt enable set. Write one to set" range="" rwaccess="RW1S"/>
  </register>
  <register id="PCIE_RC_PTM_IRQ_ENABLE_CLR" acronym="PCIE_RC_PTM_IRQ_ENABLE_CLR" offset="0x1EC" width="32" description="Precision Time Measurement Enable Clear Register">
    <bitfield id="RSVD830" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PTM_CLK_UPDATED_EN_CLR" width="1" begin="0" end="0" resetval="0x0" description="Precision Time Measurement interrupt enable clear. Write one to clear" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_TYPE1_DEV_ID_VEND_ID_REG" acronym="PCIE_RC_TYPE1_DEV_ID_VEND_ID_REG" offset="0x1000" width="32" description="Device ID and Vendor ID Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="DEVICE_ID" width="16" begin="31" end="16" resetval="0xABCD" description="Device ID - Vendor Assigned Device Identifier For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VENDOR_ID" width="16" begin="15" end="0" resetval="0x16C3" description="Vendor ID - PCI-SIG assigned Manufacturer Identifier For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_TYPE1_STATUS_COMMAND_REG" acronym="PCIE_RC_TYPE1_STATUS_COMMAND_REG" offset="0x1004" width="32" description="Command and Status Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="DETECTED_PARITY_ERROR" width="1" begin="31" end="31" resetval="0x0" description="Poisoned TLP received by function on Primary Side For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="SIGNALED_SYS_ERROR" width="1" begin="30" end="30" resetval="0x0" description="Fatal or Non-Fatal Error Message sent by function For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="RCVD_MASTER_ABORT" width="1" begin="29" end="29" resetval="0x0" description="Unsupported request completion status received on Primary Side For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="RCVD_TARGET_ABORT" width="1" begin="28" end="28" resetval="0x0" description="Completer Abort received on Primary Side For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="SIGNALED_TARGET_ABORT" width="1" begin="27" end="27" resetval="0x0" description="Primary Side Completer Abort Error For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="DEV_SEL_TIMING" width="2" begin="26" end="25" resetval="0x0" description="Device Select Timing For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="MASTER_DPE" width="1" begin="24" end="24" resetval="0x0" description="Controls poisoned Completion and Request error reporting For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="FAST_B2B_CAP" width="1" begin="23" end="23" resetval="0x0" description="Fast Back to Back Transaction Capable and Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_22" width="1" begin="22" end="22" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="FAST_66MHZ_CAP" width="1" begin="21" end="21" resetval="0x0" description="PCI 66MHz Capability For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="CAP_LIST" width="1" begin="20" end="20" resetval="0x1" description="Extended Capability For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="INT_STATUS" width="1" begin="19" end="19" resetval="0x0" description="Emulation interrupt pending internally in function For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_17" width="2" begin="18" end="17" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="16" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESERV" width="5" begin="15" end="11" resetval="0x0" description="Reserved For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="INT_EN" width="1" begin="10" end="10" resetval="0x0" description="Interrupt Disable Controls generation of interrupts by an internal function For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_9" width="1" begin="9" end="9" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="SERREN" width="1" begin="8" end="8" resetval="0x0" description="Enables Error Reporting and Forwarding For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="IDSEL" width="1" begin="7" end="7" resetval="0x0" description="IDSEL Stepping/Wait Cycle Control For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PERREN" width="1" begin="6" end="6" resetval="0x0" description="Parity Error Response Controls Logging of Poisoned TLPs For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="VGAPS" width="1" begin="5" end="5" resetval="0x0" description="VGA Palette Snoop For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="MWI_EN" width="1" begin="4" end="4" resetval="0x0" description="Memory Write and Invalidate For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="SCO" width="1" begin="3" end="3" resetval="0x0" description="Special Cycle Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="BME" width="1" begin="2" end="2" resetval="0x0" description="Bus Master Enable Controls Forwarding of Memory and I/O Requests For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="MSE" width="1" begin="1" end="1" resetval="0x0" description="Enables Memory Access Response For a description of this standard PCIe register field, see the PCI Express Specification You cannot write to this register if your configuration has no MEM bars that is, the internal signal has_mem_bar=0 Note: The access attributes of this field are as follows: - Dbi: !has_mem_bar ? RO : RW" range="" rwaccess="RW"/>
    <bitfield id="IO_EN" width="1" begin="0" end="0" resetval="0x0" description="Enables IO Access Response For a description of this standard PCIe register field, see the PCI Express Specification You cannot write to this register if your configuration has no IO bars that is, the internal signal has_io_bar=0 Note: The access attributes of this field are as follows: - Dbi: !has_io_bar ? RO : RW" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_TYPE1_CLASS_CODE_REV_ID_REG" acronym="PCIE_RC_TYPE1_CLASS_CODE_REV_ID_REG" offset="0x1008" width="32" description="Class Code and Revision ID Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="BASE_CLASS_CODE" width="8" begin="31" end="24" resetval="0x0" description="Base Class Code to represent Device Type For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="SUBCLASS_CODE" width="8" begin="23" end="16" resetval="0x0" description="Subclass Code to represent Device Type For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PROGRAM_INTERFACE" width="8" begin="15" end="8" resetval="0x0" description="Class Code Programming Interface For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="REVISION_ID" width="8" begin="7" end="0" resetval="0x1" description="Vendor chosen Revision ID For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_TYPE1_BIST_HDR_TYPE_LAT_CACHE_LINE_SIZE_REG" acronym="PCIE_RC_TYPE1_BIST_HDR_TYPE_LAT_CACHE_LINE_SIZE_REG" offset="0x100C" width="32" description="BIST, Header Type, Cache Line Size, and Master Latency Timer Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="BIST" width="8" begin="31" end="24" resetval="0x0" description="Optional for BIST support For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="MULTI_FUNC" width="1" begin="23" end="23" resetval="0x0" description="Specifies whether device is multifunction For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="HEADER_TYPE" width="7" begin="22" end="16" resetval="0x1" description="Specifies Header Type For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="LATENCY_MASTER_TIMER" width="8" begin="15" end="8" resetval="0x0" description="Primary Latency Timer Does not apply to PCI Express For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="CACHE_LINE_SIZE" width="8" begin="7" end="0" resetval="0x0" description="Cache Line Size field Has no effect on PCIe device behavior For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_SEC_LAT_TIMER_SUB_BUS_SEC_BUS_PRI_BUS_REG" acronym="PCIE_RC_SEC_LAT_TIMER_SUB_BUS_SEC_BUS_PRI_BUS_REG" offset="0x1018" width="32" description="Primary, Secondary, Subordinate Bus Numbers and Latency Timer Registers. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="SEC_LAT_TIMER" width="8" begin="31" end="24" resetval="0x0" description="Latency Timer Not used in PCI-Express For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="SUB_BUS" width="8" begin="23" end="16" resetval="0x0" description="Subordinate Bus Number Not used in PCI-Express For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="SEC_BUS" width="8" begin="15" end="8" resetval="0x0" description="Secondary Bus Number Not used in PCI-Express For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PRIM_BUS" width="8" begin="7" end="0" resetval="0x0" description="Primary Bus Number Not used in PCI-Express For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_SEC_STAT_IO_LIMIT_IO_BASE_REG" acronym="PCIE_RC_SEC_STAT_IO_LIMIT_IO_BASE_REG" offset="0x101C" width="32" description="Secondary Status and I/O Base and Limit Registers. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="SEC_STAT_DPE" width="1" begin="31" end="31" resetval="0x0" description="Detected Parity Error Poisoned TLP Received on Secondary Side For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="SEC_STAT_RCVD_SYS_ERR" width="1" begin="30" end="30" resetval="0x0" description="Received System Error Fatal or non-fatal error received For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="SEC_STAT_RCVD_MSTR_ABRT" width="1" begin="29" end="29" resetval="0x0" description="Received Master Abort, secondary side For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="SEC_STAT_RCVD_TRGT_ABRT" width="1" begin="28" end="28" resetval="0x0" description="Received Target Abort, secondary side For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="SEC_STAT_SIG_TRGT_ABRT" width="1" begin="27" end="27" resetval="0x0" description="Signaled Target Abort, secondary side For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="RSVDP_25" width="2" begin="26" end="25" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="SEC_STAT_MDPE" width="1" begin="24" end="24" resetval="0x0" description="Master Data Parity Error For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="RSVDP_23" width="1" begin="23" end="23" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="SEC_STAT_RESERV" width="7" begin="22" end="16" resetval="0x0" description="Reserved For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="IO_LIMIT" width="4" begin="15" end="12" resetval="0x0" description="I/O Limit Address For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="IO_RESERV1" width="3" begin="11" end="9" resetval="0x0" description="Reserved For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="IO_DECODE_BIT8" width="1" begin="8" end="8" resetval="0x0" description="I/O 8-bit Decode For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="IO_BASE" width="4" begin="7" end="4" resetval="0x0" description="I/O Base Address For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="IO_RESERV" width="3" begin="3" end="1" resetval="0x0" description="Reserved For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="IO_DECODE" width="1" begin="0" end="0" resetval="0x0" description="I/O Decode For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_MEM_LIMIT_MEM_BASE_REG" acronym="PCIE_RC_MEM_LIMIT_MEM_BASE_REG" offset="0x1020" width="32" description="Memory Base and Memory Limit Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="MEM_LIMIT" width="12" begin="31" end="20" resetval="0x0" description="Memory Limit Address For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="MEM_LIMIT_RESERV" width="4" begin="19" end="16" resetval="0x0" description="Reserved For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="MEM_BASE" width="12" begin="15" end="4" resetval="0x0" description="Memory Base Address For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="MEM_BASE_RESERV" width="4" begin="3" end="0" resetval="0x0" description="Reserved For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PREF_MEM_LIMIT_PREF_MEM_BASE_REG" acronym="PCIE_RC_PREF_MEM_LIMIT_PREF_MEM_BASE_REG" offset="0x1024" width="32" description="Prefetchable Memory Base and Limit Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PREF_MEM_LIMIT" width="12" begin="31" end="20" resetval="0x0" description="Prefetchable Memory Limit Address For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PREF_RESERV1" width="3" begin="19" end="17" resetval="0x0" description="Reserved For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PREF_MEM_LIMIT_DECODE" width="1" begin="16" end="16" resetval="0x0" description="Prefetchable Memory Limit Decode For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PREF_MEM_BASE" width="12" begin="15" end="4" resetval="0x0" description="Prefetchable Memory Base Address For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PREF_RESERV" width="3" begin="3" end="1" resetval="0x0" description="Reserved For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PREF_MEM_DECODE" width="1" begin="0" end="0" resetval="0x0" description="Prefetchable Memory Decode For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PREF_BASE_UPPER_REG" acronym="PCIE_RC_PREF_BASE_UPPER_REG" offset="0x1028" width="32" description="Prefetchable Base Upper 32 Bits Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PREF_MEM_BASE_UPPER" width="32" begin="31" end="0" resetval="0x0" description="Prefetchable Memory Base Upper Address For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PREF_LIMIT_UPPER_REG" acronym="PCIE_RC_PREF_LIMIT_UPPER_REG" offset="0x102C" width="32" description="Prefetchable Limit Upper 32 Bits Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PREF_MEM_LIMIT_UPPER" width="32" begin="31" end="0" resetval="0x0" description="Prefetchable Memory Limit Upper Address For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IO_LIMIT_UPPER_IO_BASE_UPPER_REG" acronym="PCIE_RC_IO_LIMIT_UPPER_IO_BASE_UPPER_REG" offset="0x1030" width="32" description="I/O Base and Limit Upper 16 Bits Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="IO_LIMIT_UPPER" width="16" begin="31" end="16" resetval="0x0" description="Prefetchable I/O Limit Upper Address For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="IO_BASE_UPPER" width="16" begin="15" end="0" resetval="0x0" description="Prefetchable I/O Base Upper Address For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_TYPE1_CAP_PTR_REG" acronym="PCIE_RC_TYPE1_CAP_PTR_REG" offset="0x1034" width="32" description="Capability Pointer Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="CAP_POINTER" width="8" begin="7" end="0" resetval="0x40" description="Pointer to first item in the PCI Capability Structure For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_TYPE1_EXP_ROM_BASE_REG" acronym="PCIE_RC_TYPE1_EXP_ROM_BASE_REG" offset="0x1038" width="32" description="Expansion ROM BAR and Mask Register. For a description of this standard PCIe register, see the PCI Express Specification. The mask for this ROM BAR exists (if implemented) as a shadow register at this address. The assertion of CS2 (that is, assert the dbi_cs2 input, or the CS2 address bit for the AXI bridge) is required to write to the second register at this address.">
    <bitfield id="EXP_ROM_BASE_ADDRESS" width="21" begin="31" end="11" resetval="0x0" description="Expansion ROM BAR and Mask Register For a description of this standard PCIe register, see the PCI Express Specification The mask for this ROM BAR exists [if implemented] as a shadow register at this address The assertion of CS2 [that is, assert the dbi_cs2 input, or the CS2 address bit for the AXI bridge] is required to write to the second register at this address Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_1" width="10" begin="10" end="1" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="ROM_BAR_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Expansion ROM Enable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_BRIDGE_CTRL_INT_PIN_INT_LINE_REG" acronym="PCIE_RC_BRIDGE_CTRL_INT_PIN_INT_LINE_REG" offset="0x103C" width="32" description="Interrupt Line and Pin and Bridge Control Registers. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="BRIDGE_CTRL_RESERV" width="9" begin="31" end="23" resetval="0x0" description="Reserved For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="SBR" width="1" begin="22" end="22" resetval="0x0" description="Secondary Bus Hot Reset For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="MSTR_ABORT_MODE" width="1" begin="21" end="21" resetval="0x0" description="Master Abort Mode Does not apply to PCI Express For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="R"/>
    <bitfield id="VGA_16B_DEC" width="1" begin="20" end="20" resetval="0x0" description="VGA 16 bit decode For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="VGA_EN" width="1" begin="19" end="19" resetval="0x0" description="VGA Enable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="ISA_EN" width="1" begin="18" end="18" resetval="0x0" description="ISA Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="SERR_EN" width="1" begin="17" end="17" resetval="0x0" description="System Error Response Enable from Secondary to Primary For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PERE" width="1" begin="16" end="16" resetval="0x0" description="Parity Error Response Enable Controls Logging of Poisoned TLPs For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="INT_PIN" width="8" begin="15" end="8" resetval="0x1" description="PCI Compatible Interrupt Pin Register Field For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="INT_LINE" width="8" begin="7" end="0" resetval="0xFF" description="PCI Compatible Interrupt Line Routing Register Field For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_CAP_ID_NXT_PTR_REG" acronym="PCIE_RC_CAP_ID_NXT_PTR_REG" offset="0x1040" width="32" description="Power Management Capabilities Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PME_SUPPORT" width="5" begin="31" end="27" resetval="0xB" description="Power Management Event Support For a description of this standard PCIe register field, see the PCI Express Specification The read value from this field is the write value &amp;amp;amp;&amp;amp;amp; [sys_aux_pwr_det, 1'b1, D2_SUPPORT, D1_SUPPORT, 1'b1], where D1_SUPPORT and D2_SUPPORT are fields in this register The reset value PME_SUPPORT_n &amp;amp;amp;&amp;amp;amp; [sys_aux_pwr_det, 1'b1, D2_SUPPORT, D1_SUPPORT, 1'b1], where PME_SUPPORT_n is a configuration parameter Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="D2_SUPPORT" width="1" begin="26" end="26" resetval="0x0" description="D2 State Support For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="D1_SUPPORT" width="1" begin="25" end="25" resetval="0x1" description="D1 State Support For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="AUX_CURR" width="3" begin="24" end="22" resetval="0x7" description="Auxiliary Current Requirements For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="DSI" width="1" begin="21" end="21" resetval="0x0" description="Device Specific Initialization Bit For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="PME_CLK" width="1" begin="19" end="19" resetval="0x0" description="PCI Clock Requirement For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PM_SPEC_VER" width="3" begin="18" end="16" resetval="0x3" description="Power Management Spec Version For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PM_NEXT_POINTER" width="8" begin="15" end="8" resetval="0x50" description="Next Capability Pointer For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PM_CAP_ID" width="8" begin="7" end="0" resetval="0x1" description="Power Management Capability ID For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_CON_STATUS_REG" acronym="PCIE_RC_CON_STATUS_REG" offset="0x1044" width="32" description="Power Management Control and Status Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="DATA_REG_ADD_INFO" width="8" begin="31" end="24" resetval="0x0" description="Power Data Information Register For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="BUS_PWR_CLK_CON_EN" width="1" begin="23" end="23" resetval="0x0" description="Bus Power/Clock Control Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="B2_B3_SUPPORT" width="1" begin="22" end="22" resetval="0x0" description="B2B3 Support for D3hot For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_16" width="6" begin="21" end="16" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PME_STATUS" width="1" begin="15" end="15" resetval="0x0" description="PME Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="DATA_SCALE" width="2" begin="14" end="13" resetval="0x0" description="Data Scaling Factor For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="DATA_SELECT" width="4" begin="12" end="9" resetval="0x0" description="Data Select For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PME_ENABLE" width="1" begin="8" end="8" resetval="0x0" description="PME Enable For a description of this standard PCIe register field, see the PCI Express Specification The PMC registers this value under aux power Sometimes it might remember the old value, even if you try to clear it by writing '0' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_4" width="4" begin="7" end="4" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="NO_SOFT_RST" width="1" begin="3" end="3" resetval="0x1" description="No soft Reset For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="RSVDP_2" width="1" begin="2" end="2" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="POWER_STATE" width="2" begin="1" end="0" resetval="0x0" description="Power State For a description of this standard PCIe register field, see the PCI Express Specification You can write to this register However, the read-back value is the actual power state, not the write value Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PCI_MSI_CAP_ID_NEXT_CTRL_REG" acronym="PCIE_RC_PCI_MSI_CAP_ID_NEXT_CTRL_REG" offset="0x1050" width="32" description="MSI Capability ID, Next Pointer, Capability/Control Registers. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_27" width="5" begin="31" end="27" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCI_MSI_EXT_DATA_EN" width="1" begin="26" end="26" resetval="0x0" description="Extended Message Data Enable For a description of this standard PCIe register, see the PCI-SIG ECN for Extended MSI Data, Feb 24, 2016, affecting PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: PCI_MSI_CAP_ID_NEXT_CTRL_REGPCI_MSI_EXT_DATA_CAP ? RW : RO" range="" rwaccess="RW"/>
    <bitfield id="PCI_MSI_EXT_DATA_CAP" width="1" begin="25" end="25" resetval="0x0" description="Extended Message Data Capable For a description of this standard PCIe register, see the PCI-SIG ECN for Extended MSI Data, Feb 24, 2016, affecting PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCI_PVM_SUPPORT" width="1" begin="24" end="24" resetval="0x1" description="MSI Per Vector Masking Capable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCI_MSI_64_BIT_ADDR_CAP" width="1" begin="23" end="23" resetval="0x1" description="MSI 64-bit Address Capable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCI_MSI_MULTIPLE_MSG_EN" width="3" begin="22" end="20" resetval="0x0" description="MSI Multiple Message Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCI_MSI_MULTIPLE_MSG_CAP" width="3" begin="19" end="17" resetval="0x0" description="MSI Multiple Message Capable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCI_MSI_ENABLE" width="1" begin="16" end="16" resetval="0x0" description="MSI Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCI_MSI_CAP_NEXT_OFFSET" width="8" begin="15" end="8" resetval="0x70" description="MSI Capability Next Pointer For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCI_MSI_CAP_ID" width="8" begin="7" end="0" resetval="0x5" description="MSI Capability ID For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_MSI_CAP_OFF_04H_REG" acronym="PCIE_RC_MSI_CAP_OFF_04H_REG" offset="0x1054" width="32" description="MSI Message Lower Address Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PCI_MSI_CAP_OFF_04H" width="30" begin="31" end="2" resetval="0x0" description="MSI Message Lower Address Field For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_0" width="2" begin="1" end="0" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_MSI_CAP_OFF_08H_REG" acronym="PCIE_RC_MSI_CAP_OFF_08H_REG" offset="0x1058" width="32" description="For a 32 bit MSI Message, this register contains Data. For 64 bit it contains the Upper Address. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PCI_MSI_CAP_OFF_0AH" width="16" begin="31" end="16" resetval="0x0" description="For a 32 bit MSI Message, this field contains Ext MSI Data For 64-bit it contains upper 16 bits of the Upper Address For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: PCI_MSI_64_BIT_ADDR_CAP OR DEFAULT_EXT_MSI_DATA_CAPABLE ? R/W : R" range="" rwaccess="RW"/>
    <bitfield id="PCI_MSI_CAP_OFF_08H" width="16" begin="15" end="0" resetval="0x0" description="For a 32-bit MSI Message, this field contains Data For 64-bit it contains lower 16 bits of the Upper Address For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: PCI_MSI_64_BIT_ADDR_CAP ? R/W : R" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CAP_OFF_0CH_REG" acronym="PCIE_RC_MSI_CAP_OFF_0CH_REG" offset="0x105C" width="32" description="For a 64 bit MSI Message, this register contains Data. For 32 bit, it contains Mask Bits if PVM enabled. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PCI_MSI_CAP_OFF_0EH" width="16" begin="31" end="16" resetval="0x0" description="For a 64-bit MSI Message, this field contains Data For 32-bit, it contains the upper Mask Bits if PVM is enabled For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: [!MSI_64_EN &amp;amp;amp;&amp;amp;amp; MSI_PVM_EN_VALUE] ? RW: MSI_64_EN &amp;amp;amp;&amp;amp;amp; DEFAULT_EXT_MSI_DATA_CAPABLE ? RW : RO" range="" rwaccess="RW"/>
    <bitfield id="PCI_MSI_CAP_OFF_0CH" width="16" begin="15" end="0" resetval="0x0" description="For a 64-bit MSI Message, this field contains Data For 32-bit, it contains the lower Mask Bits if PVM is enabled For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: PCI_MSI_64_BIT_ADDR_CAP OR MSI_PVM_EN ? R/W : R" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CAP_OFF_10H_REG" acronym="PCIE_RC_MSI_CAP_OFF_10H_REG" offset="0x1060" width="32" description="Used for MSI when Vector Masking Capable. For 32 bit contains Pending Bits. For 64 bit, contains Mask Bits. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PCI_MSI_CAP_OFF_10H" width="32" begin="31" end="0" resetval="0x0" description="Used for MSI when Vector Masking Capable For 32-bit contains Pending Bits For 64-bit, contains Mask Bits For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: PCI_MSI_64_BIT_ADDR_CAP &amp;amp;amp;&amp;amp;amp; MSI_PVM_EN ? R/W : R" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CAP_OFF_14H_REG" acronym="PCIE_RC_MSI_CAP_OFF_14H_REG" offset="0x1064" width="32" description="Used for MSI 64 bit messaging when Vector Masking Capable. Contains Pending Bits. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PCI_MSI_CAP_OFF_14H" width="32" begin="31" end="0" resetval="0x0" description="Used for MSI 64-bit messaging when Vector Masking Capable Contains Pending Bits For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_REG" acronym="PCIE_RC_PCIE_CAP_ID_PCIE_NEXT_CAP_PTR_PCIE_CAP_REG" offset="0x1070" width="32" description="PCI Express Capabilities, ID, Next Pointer Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_31" width="1" begin="31" end="31" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RSVD" width="1" begin="30" end="30" resetval="0x0" description="Reserved For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_INT_MSG_NUM" width="5" begin="29" end="25" resetval="0x0" description="PCIE Interrupt Message Number For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_SLOT_IMP" width="1" begin="24" end="24" resetval="0x0" description="PCIe Slot Implemented Valid For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_DEV_PORT_TYPE" width="4" begin="23" end="20" resetval="0x4" description="PCIE Device/PortType For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_REG" width="4" begin="19" end="16" resetval="0x2" description="PCIE Capability Version Number For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_NEXT_PTR" width="8" begin="15" end="8" resetval="0xB0" description="PCIE Next Capability Pointer For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_ID" width="8" begin="7" end="0" resetval="0x10" description="PCIE Capability ID For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_DEVICE_CAPABILITIES_REG" acronym="PCIE_RC_DEVICE_CAPABILITIES_REG" offset="0x1074" width="32" description="Device Capabilities Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_16" width="16" begin="31" end="16" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_ROLE_BASED_ERR_REPORT" width="1" begin="15" end="15" resetval="0x1" description="Role-based Error Reporting Implemented For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="RSVDP_6" width="9" begin="14" end="6" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_EXT_TAG_SUPP" width="1" begin="5" end="5" resetval="0x0" description="Extended Tag Field Supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_PHANTOM_FUNC_SUPPORT" width="2" begin="4" end="3" resetval="0x0" description="Phantom Functions Supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_MAX_PAYLOAD_SIZE" width="3" begin="2" end="0" resetval="0x1" description="Max Payload Size Supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_DEVICE_CONTROL_DEVICE_STATUS" acronym="PCIE_RC_DEVICE_CONTROL_DEVICE_STATUS" offset="0x1078" width="32" description="Device Control and Status Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_22" width="10" begin="31" end="22" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_TRANS_PENDING" width="1" begin="21" end="21" resetval="0x0" description="Transactions Pending Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_AUX_POWER_DETECTED" width="1" begin="20" end="20" resetval="0x0" description="Aux Power Detected Status For a description of this standard PCIe register field, see the PCI Express Specification This bit is derived by sampling the sys_aux_pwr_det input" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_UNSUPPORTED_REQ_DETECTED" width="1" begin="19" end="19" resetval="0x0" description="Unsupported Request Detected Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_FATAL_ERR_DETECTED" width="1" begin="18" end="18" resetval="0x0" description="Fatal Error Detected Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_NON_FATAL_ERR_DETECTED" width="1" begin="17" end="17" resetval="0x0" description="Non-Fatal Error Detected Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_CORR_ERR_DETECTED" width="1" begin="16" end="16" resetval="0x0" description="Correctable Error Detected Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_INITIATE_FLR" width="1" begin="15" end="15" resetval="0x0" description="Initiate Function Level Reset [for endpoints] For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_MAX_READ_REQ_SIZE" width="3" begin="14" end="12" resetval="0x2" description="Max Read Request Size For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_EN_NO_SNOOP" width="1" begin="11" end="11" resetval="0x0" description="Enable No Snoop For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_AUX_POWER_PM_EN" width="1" begin="10" end="10" resetval="0x0" description="Aux Power PM Enable For a description of this standard PCIe register field, see the PCI Express Specification This bit is derived by sampling the sys_aux_pwr_det input Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_PHANTOM_FUNC_EN" width="1" begin="9" end="9" resetval="0x0" description="Phantom Functions Enable For a description of this standard PCIe register field, see the PCI Express Specification The write value is gated with the PCIE_CAP_PHANTOM_FUNC_SUPPORT field of" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_EXT_TAG_EN" width="1" begin="8" end="8" resetval="0x0" description="Extended Tag Field Enable For a description of this standard PCIe register field, see the PCI Express Specification The write value is gated with the PCIE_CAP_EXT_TAG_SUPP field of" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_MAX_PAYLOAD_SIZE_CS" width="3" begin="7" end="5" resetval="0x0" description="Max Payload Size Max_Payload_Size This field sets maximum TLP payload size for the Function Permissible values that can be programmed are indicated by the Max_Payload_Size Supported field [PCIE_CAP_MAX_PAYLOAD_SIZE] in the Device Capabilities register [" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_EN_REL_ORDER" width="1" begin="4" end="4" resetval="0x1" description="Enable Relaxed Ordering For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_UNSUPPORT_REQ_REP_EN" width="1" begin="3" end="3" resetval="0x0" description="Unsupported Request Reporting Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_FATAL_ERR_REPORT_EN" width="1" begin="2" end="2" resetval="0x0" description="Fatal Error Reporting Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_NON_FATAL_ERR_REPORT_EN" width="1" begin="1" end="1" resetval="0x0" description="Non-fatal Error Reporting Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_CORR_ERR_REPORT_EN" width="1" begin="0" end="0" resetval="0x0" description="Correctable Error Reporting Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_LINK_CAPABILITIES_REG" acronym="PCIE_RC_LINK_CAPABILITIES_REG" offset="0x107C" width="32" description="Link Capabilities Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PCIE_CAP_PORT_NUM" width="8" begin="31" end="24" resetval="0x0" description="Port Number For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="RSVDP_23" width="1" begin="23" end="23" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_ASPM_OPT_COMPLIANCE" width="1" begin="22" end="22" resetval="0x1" description="ASPM Optionality Compliance For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_LINK_BW_NOT_CAP" width="1" begin="21" end="21" resetval="0x1" description="Link Bandwidth Notification Capable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_DLL_ACTIVE_REP_CAP" width="1" begin="20" end="20" resetval="0x1" description="Data Link Layer Link Active Reporting Capable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_SURPRISE_DOWN_ERR_REP_CAP" width="1" begin="19" end="19" resetval="0x0" description="Surprise Down Error Reporting Capable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_CLOCK_POWER_MAN" width="1" begin="18" end="18" resetval="0x0" description="Clock Power Management For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_L1_EXIT_LATENCY" width="3" begin="17" end="15" resetval="0x6" description="L1 Exit Latency For a description of this standard PCIe register field, see the PCI Express Specification There are two each of these register fields, this one and a shadow one at the same address The Common Clock bit [PCIE_CAP_COMMON_CLK_CONFIG] of the Link Control Register [" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_L0S_EXIT_LATENCY" width="3" begin="14" end="12" resetval="0x3" description="LOs Exit Latency For a description of this standard PCIe register field, see the PCI Express Specification There are two each of these register fields, this one and a shadow one at the same address The Common Clock bit [PCIE_CAP_COMMON_CLK_CONFIG] of the Link Control Register [" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_ACTIVE_STATE_LINK_PM_SUPPORT" width="2" begin="11" end="10" resetval="0x3" description="Level of ASPM [Active State Power Management] Support For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_MAX_LINK_WIDTH" width="6" begin="9" end="4" resetval="0x2" description="Maximum Link Width For a description of this standard PCIe register field, see the PCI Express Specification In M-PCIe mode, the reset and dynamic values of this field are calculated by the controller Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_MAX_LINK_SPEED" width="4" begin="3" end="0" resetval="0x3" description="Maximum Link Speed For a description of this standard PCIe register field, see the PCI Express Specification In M-PCIe mode, the reset and dynamic values of this field are calculated by the controller Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_LINK_CONTROL_LINK_STATUS_REG" acronym="PCIE_RC_LINK_CONTROL_LINK_STATUS_REG" offset="0x1080" width="32" description="Link Control and Status Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PCIE_CAP_LINK_AUTO_BW_STATUS" width="1" begin="31" end="31" resetval="0x0" description="Link Autonomous Bandwidth Status For a description of this standard PCIe register field, see the PCI Express Specification The write value is gated with the PCIE_CAP_LINK_BW_NOT_CAP field in" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_LINK_BW_MAN_STATUS" width="1" begin="30" end="30" resetval="0x0" description="Link Bandwidth Management Status For a description of this standard PCIe register field, see the PCI Express Specification The write value is gated with the PCIE_CAP_LINK_BW_NOT_CAP field in" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_DLL_ACTIVE" width="1" begin="29" end="29" resetval="0x0" description="Data Link Layer Active For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_SLOT_CLK_CONFIG" width="1" begin="28" end="28" resetval="0x1" description="Slot Clock Configuration For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_LINK_TRAINING" width="1" begin="27" end="27" resetval="0x0" description="LTSSM is in Configuration or Recovery State For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_26" width="1" begin="26" end="26" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_NEGO_LINK_WIDTH" width="6" begin="25" end="20" resetval="0x1" description="Negotiated Link Width For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_LINK_SPEED" width="4" begin="19" end="16" resetval="0x1" description="Current Link Speed For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_DRS_SIGNALING_CONTROL" width="2" begin="15" end="14" resetval="0x0" description="DRS Signaling Control For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: LINK_CAPABILITIES2_REGDRS_SUPPORTED ? RW : RO" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_12" width="2" begin="13" end="12" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_LINK_AUTO_BW_INT_EN" width="1" begin="11" end="11" resetval="0x0" description="Link Autonomous Bandwidth Management Interrupt Enable For a description of this standard PCIe register field, see the PCI Express Specification The write value is gated with the PCIE_CAP_LINK_BW_NOT_CAP field in" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_LINK_BW_MAN_INT_EN" width="1" begin="10" end="10" resetval="0x0" description="Link Bandwidth Management Interrupt Enable For a description of this standard PCIe register field, see the PCI Express Specification The write value is gated with the PCIE_CAP_LINK_BW_NOT_CAP field in" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_HW_AUTO_WIDTH_DISABLE" width="1" begin="9" end="9" resetval="0x0" description="Hardware Autonomous Width Disable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_EN_CLK_POWER_MAN" width="1" begin="8" end="8" resetval="0x0" description="Enable Clock Power Management For a description of this standard PCIe register field, see the PCI Express Specification The write value is gated with the PCIE_CAP_CLOCK_POWER_MAN field in" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_EXTENDED_SYNCH" width="1" begin="7" end="7" resetval="0x0" description="Extended Synch For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_COMMON_CLK_CONFIG" width="1" begin="6" end="6" resetval="0x0" description="Common Clock Configuration For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_RETRAIN_LINK" width="1" begin="5" end="5" resetval="0x0" description="Initiate Link Retrain For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: see description" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_LINK_DISABLE" width="1" begin="4" end="4" resetval="0x0" description="Initiate Link Disable For a description of this standard PCIe register field, see the PCI Express Specification In a DSP that supports crosslink, the controller gates the write value with the CROSS_LINK_EN field in" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_RCB" width="1" begin="3" end="3" resetval="0x0" description="Read Completion Boundary [RCB] Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="RSVDP_2" width="1" begin="2" end="2" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_ACTIVE_STATE_LINK_PM_CONTROL" width="2" begin="1" end="0" resetval="0x0" description="Active State Power Management [ASPM] Control Software must not enable L0s in either direction on a given Link unless components on both sides of the Link each support L0s otherwise, the result is undefined For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_SLOT_CAPABILITIES_REG" acronym="PCIE_RC_SLOT_CAPABILITIES_REG" offset="0x1084" width="32" description="Slot Capabilities Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PCIE_CAP_PHY_SLOT_NUM" width="13" begin="31" end="19" resetval="0x0" description="Physical Slot Number For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_NO_CMD_CPL_SUPPORT" width="1" begin="18" end="18" resetval="0x0" description="No Command Completed Support For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_ELECTROMECH_INTERLOCK" width="1" begin="17" end="17" resetval="0x0" description="Electromechanical Interlock Present For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_SLOT_POWER_LIMIT_SCALE" width="2" begin="16" end="15" resetval="0x0" description="Slot Power Limit Scale For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_SLOT_POWER_LIMIT_VALUE" width="8" begin="14" end="7" resetval="0x0" description="Slot Power Limit Value For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_HOT_PLUG_CAPABLE" width="1" begin="6" end="6" resetval="0x0" description="Hot Plug Capable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_HOT_PLUG_SURPRISE" width="1" begin="5" end="5" resetval="0x0" description="Hot Plug Surprise possible For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_POWER_INDICATOR" width="1" begin="4" end="4" resetval="0x0" description="Power Indicator Present For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_ATTENTION_INDICATOR" width="1" begin="3" end="3" resetval="0x0" description="Attention Indicator Present For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_MRL_SENSOR" width="1" begin="2" end="2" resetval="0x0" description="MRL Present For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_POWER_CONTROLLER" width="1" begin="1" end="1" resetval="0x0" description="Power Controller Present For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_ATTENTION_INDICATOR_BUTTON" width="1" begin="0" end="0" resetval="0x0" description="Attention Button Present For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_SLOT_CONTROL_SLOT_STATUS" acronym="PCIE_RC_SLOT_CONTROL_SLOT_STATUS" offset="0x1088" width="32" description="Slot Control and Status Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_25" width="7" begin="31" end="25" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_DLL_STATE_CHANGED" width="1" begin="24" end="24" resetval="0x0" description="Data Link Layer State Changed For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_ELECTROMECH_INTERLOCK_STATUS" width="1" begin="23" end="23" resetval="0x0" description="Electromechanical Interlock Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_PRESENCE_DETECT_STATE" width="1" begin="22" end="22" resetval="0x1" description="Presence Detect State For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_MRL_SENSOR_STATE" width="1" begin="21" end="21" resetval="0x0" description="MRL Sensor State For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_CMD_CPLD" width="1" begin="20" end="20" resetval="0x0" description="Command Completed For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_PRESENCE_DETECTED_CHANGED" width="1" begin="19" end="19" resetval="0x0" description="Presence Detect Changed For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_MRL_SENSOR_CHANGED" width="1" begin="18" end="18" resetval="0x0" description="MRL Sensor Changed For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_POWER_FAULT_DETECTED" width="1" begin="17" end="17" resetval="0x0" description="Power Fault Detected For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_ATTENTION_BUTTON_PRESSED" width="1" begin="16" end="16" resetval="0x0" description="Attention Button Pressed For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="RSVDP_13" width="3" begin="15" end="13" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_DLL_STATE_CHANGED_EN" width="1" begin="12" end="12" resetval="0x0" description="Data Link Layer State Changed Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_ELECTROMECH_INTERLOCK_CTRL" width="1" begin="11" end="11" resetval="0x0" description="Electromechanical Interlock Control For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_POWER_CONTROLLER_CTRL" width="1" begin="10" end="10" resetval="0x0" description="Power Controller Control For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_POWER_INDICATOR_CTRL" width="2" begin="9" end="8" resetval="0x3" description="Power Indicator Control For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_ATTENTION_INDICATOR_CTRL" width="2" begin="7" end="6" resetval="0x3" description="Attention Indicator Control For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_HOT_PLUG_INT_EN" width="1" begin="5" end="5" resetval="0x0" description="Hot Plug Interrupt Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_CMD_CPL_INT_EN" width="1" begin="4" end="4" resetval="0x0" description="Command Completed Interrupt Enable For a description of this standard PCIe register field, see the PCI Express Specification Write value is gated with PCIE_CAP_NO_CMD_CPL_SUPPORT field in" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_PRESENCE_DETECT_CHANGE_EN" width="1" begin="3" end="3" resetval="0x0" description="Presence Detect Changed Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_MRL_SENSOR_CHANGED_EN" width="1" begin="2" end="2" resetval="0x0" description="MRL Sensor Changed Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_POWER_FAULT_DETECTED_EN" width="1" begin="1" end="1" resetval="0x0" description="Power Fault Detected Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_ATTENTION_BUTTON_PRESSED_EN" width="1" begin="0" end="0" resetval="0x0" description="Attention Button Pressed Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_ROOT_CONTROL_ROOT_CAPABILITIES_REG" acronym="PCIE_RC_ROOT_CONTROL_ROOT_CAPABILITIES_REG" offset="0x108C" width="32" description="Root Control and Capabilities Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_17" width="15" begin="31" end="17" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_CRS_SW_VISIBILITY" width="1" begin="16" end="16" resetval="0x1" description="CRS Software Visibility Capable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W [Sticky] else R [Sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="RSVDP_5" width="11" begin="15" end="5" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_CRS_SW_VISIBILITY_EN" width="1" begin="4" end="4" resetval="0x0" description="Configuration Request Retry Status [CRS] Software Visibility Enable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: ROOT_CONTROL_ROOT_CAPABILITIES_REGPCIE_CAP_CRS_SW_VISIBILITY ? RW : RO" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_PME_INT_EN" width="1" begin="3" end="3" resetval="0x0" description="PME Interrupt Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_SYS_ERR_ON_FATAL_ERR_EN" width="1" begin="2" end="2" resetval="0x0" description="System Error on Fatal Error Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_SYS_ERR_ON_NON_FATAL_ERR_EN" width="1" begin="1" end="1" resetval="0x0" description="System Error on Non-fatal Error Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_SYS_ERR_ON_CORR_ERR_EN" width="1" begin="0" end="0" resetval="0x0" description="System Error on Correctable Error Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_ROOT_STATUS_REG" acronym="PCIE_RC_ROOT_STATUS_REG" offset="0x1090" width="32" description="Root Status Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_18" width="14" begin="31" end="18" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_PME_PENDING" width="1" begin="17" end="17" resetval="0x0" description="PME Pending For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_PME_STATUS" width="1" begin="16" end="16" resetval="0x0" description="PME Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_PME_REQ_ID" width="16" begin="15" end="0" resetval="0x0" description="PME Requester ID For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_DEVICE_CAPABILITIES2_REG" acronym="PCIE_RC_DEVICE_CAPABILITIES2_REG" offset="0x1094" width="32" description="Device Capabilities 2 Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="RSVDP_24" width="7" begin="30" end="24" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_OBFF_SUPPORT" width="2" begin="19" end="18" resetval="0x0" description="[OBFF] Optimized Buffer Flush/fill Supported For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP2_10_BIT_TAG_REQ_SUPPORT" width="1" begin="17" end="17" resetval="0x0" description="10-Bit Tag Requester Supported For a description of this standard PCIe register field, see the PCI Express Base Specification 40" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP2_10_BIT_TAG_COMP_SUPPORT" width="1" begin="16" end="16" resetval="0x0" description="10-Bit Tag Completer Supported For a description of this standard PCIe register field, see the PCI Express Base Specification 40" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_TPH_CMPLT_SUPPORT_1" width="1" begin="13" end="13" resetval="0x0" description="TPH Completer Supported Bit 1 For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_TPH_CMPLT_SUPPORT_0" width="1" begin="12" end="12" resetval="0x0" description="TPH Completer Supported Bit 0 For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_LTR_SUPP" width="1" begin="11" end="11" resetval="0x0" description="LTR Mechanism Supported For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_NO_RO_EN_PR2PR_PAR" width="1" begin="10" end="10" resetval="0x1" description="No Relaxed Ordering Enabled PR-PR Passing For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_128_CAS_CPL_SUPP" width="1" begin="9" end="9" resetval="0x0" description="128 Bit CAS Completer Supported For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_64_ATOMIC_CPL_SUPP" width="1" begin="8" end="8" resetval="0x0" description="64 Bit AtomicOp Completer Supported For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_32_ATOMIC_CPL_SUPP" width="1" begin="7" end="7" resetval="0x0" description="32 Bit AtomicOp Completer Supported For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_ATOMIC_ROUTING_SUPP" width="1" begin="6" end="6" resetval="0x0" description="Atomic Operation Routing Supported For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_ARI_FORWARD_SUPPORT" width="1" begin="5" end="5" resetval="0x0" description="ARI Forwarding Supported For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_CPL_TIMEOUT_DISABLE_SUPPORT" width="1" begin="4" end="4" resetval="0x1" description="Completion Timeout Disable Supported For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_CPL_TIMEOUT_RANGE" width="4" begin="3" end="0" resetval="0xF" description="Completion Timeout Ranges Supported For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_DEVICE_CONTROL2_DEVICE_STATUS2_REG" acronym="PCIE_RC_DEVICE_CONTROL2_DEVICE_STATUS2_REG" offset="0x1098" width="32" description="Device Control 2 and Status 2 Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_ARI_FORWARD_SUPPORT_CS" width="1" begin="5" end="5" resetval="0x0" description="ARI Forwarding Enable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_CPL_TIMEOUT_DISABLE" width="1" begin="4" end="4" resetval="0x0" description="Completion Timeout Disable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_CPL_TIMEOUT_VALUE" width="4" begin="3" end="0" resetval="0x0" description="Completion Timeout Value For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_LINK_CAPABILITIES2_REG" acronym="PCIE_RC_LINK_CAPABILITIES2_REG" offset="0x109C" width="32" description="Link Capabilities 2 Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="RSVDP_25" width="6" begin="30" end="25" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="24" end="23" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="RSVDP_9" width="14" begin="22" end="9" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_CROSS_LINK_SUPPORT" width="1" begin="8" end="8" resetval="0x0" description="Cross Link Supported For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_SUPPORT_LINK_SPEED_VECTOR" width="7" begin="7" end="1" resetval="0x7" description="Supported Link Speeds Vector For a description of this standard PCIe register field, see the PCI Express Specification This field has a default of [PCIE_CAP_MAX_LINK_SPEED == 0100] ? 0001111 : [PCIE_CAP_MAX_LINK_SPEED == 0011] ? 0000111 : [PCIE_CAP_MAX_LINK_SPEED == 0010] ? 0000011 : 0000001 where PCIE_CAP_MAX_LINK_SPEED is a field in the PCIE_RC_LINK_CAPABILITIES_REG register" range="" rwaccess="R"/>
    <bitfield id="RSVDP_0" width="1" begin="0" end="0" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_LINK_CONTROL2_LINK_STATUS2_REG" acronym="PCIE_RC_LINK_CONTROL2_LINK_STATUS2_REG" offset="0x10A0" width="32" description="Link Control 2 and Status 2 Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="DRS_MESSAGE_RECEIVED" width="1" begin="31" end="31" resetval="0x0" description="DRS Message Received For a description of this standard PCIe register field, see the PCI Express Base Specification 40 Note: The access attributes of this field are as follows: - Dbi: RW1C" range="" rwaccess="R"/>
    <bitfield id="DOWNSTREAM_COMPO_PRESENCE" width="3" begin="30" end="28" resetval="0x0" description="Downstream Component Presence For a description of this standard PCIe register field, see the PCI Express Base Specification 40" range="" rwaccess="R"/>
    <bitfield id="RSVDP_26" width="2" begin="27" end="26" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="25" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_LINK_EQ_REQ" width="1" begin="21" end="21" resetval="0x0" description="Link Equalization Request 80GT/s For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="PCIE_CAP_EQ_CPL_P3" width="1" begin="20" end="20" resetval="0x0" description="Equalization 80GT/s Phase 3 Successful For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_EQ_CPL_P2" width="1" begin="19" end="19" resetval="0x0" description="Equalization 80GT/s Phase 2 Successful For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_EQ_CPL_P1" width="1" begin="18" end="18" resetval="0x0" description="Equalization 80GT/s Phase 1 Successful For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_EQ_CPL" width="1" begin="17" end="17" resetval="0x0" description="Equalization 80GT/s Complete For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_CURR_DEEMPHASIS" width="1" begin="16" end="16" resetval="0x1" description="Current De-emphasis Level For a description of this standard PCIe register field, see the PCI Express Specification In M-PCIe mode this register is always 0x0 In C-PCIe mode, its contents are derived by sampling the PIPE" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_COMPLIANCE_PRESET" width="4" begin="15" end="12" resetval="0x0" description="Sets Compliance Preset/De-emphasis for 5 GT/s and 8 GT/s For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_COMPLIANCE_SOS" width="1" begin="11" end="11" resetval="0x0" description="Sets Compliance Skip Ordered Sets transmission For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_ENTER_MODIFIED_COMPLIANCE" width="1" begin="10" end="10" resetval="0x0" description="Enter Modified Compliance For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_TX_MARGIN" width="3" begin="9" end="7" resetval="0x0" description="Controls Transmit Margin for Debug or Compliance For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_SEL_DEEMPHASIS" width="1" begin="6" end="6" resetval="0x0" description="Controls Selectable De-emphasis for 5 GT/s For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCIE_CAP_HW_AUTO_SPEED_DISABLE" width="1" begin="5" end="5" resetval="0x0" description="Hardware Autonomous Speed Disable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_ENTER_COMPLIANCE" width="1" begin="4" end="4" resetval="0x0" description="Enter Compliance Mode For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="PCIE_CAP_TARGET_LINK_SPEED" width="4" begin="3" end="0" resetval="0x3" description="Target Link Speed For a description of this standard PCIe register field, see the PCI Express Specification In M-PCIe mode, the contents of this field are derived from other registers Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PCI_MSIX_CAP_ID_NEXT_CTRL_REG" acronym="PCIE_RC_PCI_MSIX_CAP_ID_NEXT_CTRL_REG" offset="0x10B0" width="32" description="MSI-X Capability ID, Next Pointer, Control Registers. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PCI_MSIX_ENABLE" width="1" begin="31" end="31" resetval="0x0" description="MSI-X Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="PCI_MSIX_FUNCTION_MASK" width="1" begin="30" end="30" resetval="0x0" description="Function Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_27" width="3" begin="29" end="27" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PCI_MSIX_TABLE_SIZE" width="11" begin="26" end="16" resetval="0x100" description="MSI-X Table Size For a description of this standard PCIe register field, see the PCI Express Specification SRIOV Note: All VFs in a single PF have the same value for 'MSI-X Table Size' [PCI_MSIX_TABLE_SIZE field in VF_PCI_MSIX_CAP_ID_NEXT_CTRL_REG] To write this common value, you must perform a DBI_CS2 write [that is, assert the dbi_cs2 input, or the CS2 address bit for the AXI bridge] while accessing the PCI_MSIX_TABLE_SIZE field in the PF" range="" rwaccess="R"/>
    <bitfield id="PCI_MSIX_CAP_NEXT_OFFSET" width="8" begin="15" end="8" resetval="0x0" description="MSI-X Next Capability Pointer For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCI_MSIX_CAP_ID" width="8" begin="7" end="0" resetval="0x11" description="MSI-X Capability ID For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_MSIX_TABLE_OFFSET_REG" acronym="PCIE_RC_MSIX_TABLE_OFFSET_REG" offset="0x10B4" width="32" description="MSI-X Table Offset and BIR Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PCI_MSIX_TABLE_OFFSET" width="29" begin="31" end="3" resetval="0x400" description="MSI-X Table Offset For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1 &amp;amp;amp;&amp;amp;amp; MSIX_CAP_ENABLE=1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCI_MSIX_BIR" width="3" begin="2" end="0" resetval="0x0" description="MSI-X Table Bar Indicator Register Field For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1 &amp;amp;amp;&amp;amp;amp; MSIX_CAP_ENABLE=1 ] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_MSIX_PBA_OFFSET_REG" acronym="PCIE_RC_MSIX_PBA_OFFSET_REG" offset="0x10B8" width="32" description="MSI-X PBA Offset and BIR Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PCI_MSIX_PBA_OFFSET" width="29" begin="31" end="3" resetval="0x800" description="MSI-X PBA Offset For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1 &amp;amp;amp;&amp;amp;amp; MSIX_CAP_ENABLE=1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PCI_MSIX_PBA" width="3" begin="2" end="0" resetval="0x0" description="MSI-X PBA BIR For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1 &amp;amp;amp;&amp;amp;amp; MSIX_CAP_ENABLE=1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_AER_EXT_CAP_HDR_OFF" acronym="PCIE_RC_AER_EXT_CAP_HDR_OFF" offset="0x1100" width="32" description="Advanced Error Reporting Extended Capability Header. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="NEXT_OFFSET" width="12" begin="31" end="20" resetval="0x148" description="Next Capability Offset For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CAP_VERSION" width="4" begin="19" end="16" resetval="0x2" description="Capability Version For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CAP_ID" width="16" begin="15" end="0" resetval="0x1" description="AER Extended Capability ID For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_UNCORR_ERR_STATUS_OFF" acronym="PCIE_RC_UNCORR_ERR_STATUS_OFF" offset="0x1104" width="32" description="Uncorrectable Error Status Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_26" width="6" begin="31" end="26" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="TLP_PRFX_BLOCKED_ERR_STATUS" width="1" begin="25" end="25" resetval="0x0" description="TLP Prefix Blocked Error Status For a description of this standard PCIe register field, see the PCI Express Specification Note: Not supported" range="" rwaccess="RW1C"/>
    <bitfield id="RSVDP_23" width="2" begin="24" end="23" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="INTERNAL_ERR_STATUS" width="1" begin="22" end="22" resetval="0x0" description="Uncorrectable Internal Error Status For a description of this standard PCIe register field, see the PCI Express Specification The controller sets this bit when your application asserts app_err_bus[9] It does not set this bit when it detects internal uncorrectable internal errors such as parity and ECC failures You should use the outputs from these errors to drive the app_err_bus[9] input" range="" rwaccess="RW1C"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="UNSUPPORTED_REQ_ERR_STATUS" width="1" begin="20" end="20" resetval="0x0" description="Unsupported Request Error Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="ECRC_ERR_STATUS" width="1" begin="19" end="19" resetval="0x0" description="ECRC Error Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="MALF_TLP_ERR_STATUS" width="1" begin="18" end="18" resetval="0x0" description="Malformed TLP Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="REC_OVERFLOW_ERR_STATUS" width="1" begin="17" end="17" resetval="0x0" description="Receiver Overflow Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="UNEXP_CMPLT_ERR_STATUS" width="1" begin="16" end="16" resetval="0x0" description="Unexpected Completion Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="CMPLT_ABORT_ERR_STATUS" width="1" begin="15" end="15" resetval="0x0" description="Completer Abort Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="CMPLT_TIMEOUT_ERR_STATUS" width="1" begin="14" end="14" resetval="0x0" description="Completion Timeout Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="FC_PROTOCOL_ERR_STATUS" width="1" begin="13" end="13" resetval="0x0" description="Flow Control Protocol Error Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="POIS_TLP_ERR_STATUS" width="1" begin="12" end="12" resetval="0x0" description="Poisoned TLP Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="RSVDP_6" width="6" begin="11" end="6" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="SURPRISE_DOWN_ERR_STATUS" width="1" begin="5" end="5" resetval="0x0" description="Surprise Down Error Status [Optional] For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="DL_PROTOCOL_ERR_STATUS" width="1" begin="4" end="4" resetval="0x0" description="Data Link Protocol Error Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="RSVDP_0" width="4" begin="3" end="0" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_UNCORR_ERR_MASK_OFF" acronym="PCIE_RC_UNCORR_ERR_MASK_OFF" offset="0x1108" width="32" description="Uncorrectable Error Mask Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_26" width="6" begin="31" end="26" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="TLP_PRFX_BLOCKED_ERR_MASK" width="1" begin="25" end="25" resetval="0x0" description="TLP Prefix Blocked Error Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: Not supported Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="ATOMIC_EGRESS_BLOCKED_ERR_MASK" width="1" begin="24" end="24" resetval="0x0" description="AtomicOp Egress Block Mask [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="RSVDP_23" width="1" begin="23" end="23" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="INTERNAL_ERR_MASK" width="1" begin="22" end="22" resetval="0x1" description="Uncorrectable Internal Error Mask [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="UNSUPPORTED_REQ_ERR_MASK" width="1" begin="20" end="20" resetval="0x0" description="Unsupported Request Error Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="ECRC_ERR_MASK" width="1" begin="19" end="19" resetval="0x0" description="ECRC Error Mask [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MALF_TLP_ERR_MASK" width="1" begin="18" end="18" resetval="0x0" description="Malformed TLP Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="REC_OVERFLOW_ERR_MASK" width="1" begin="17" end="17" resetval="0x0" description="Receiver Overflow Mask [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="UNEXP_CMPLT_ERR_MASK" width="1" begin="16" end="16" resetval="0x0" description="Unexpected Completion Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CMPLT_ABORT_ERR_MASK" width="1" begin="15" end="15" resetval="0x0" description="Completer Abort Error Mask [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CMPLT_TIMEOUT_ERR_MASK" width="1" begin="14" end="14" resetval="0x0" description="Completion Timeout Error Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FC_PROTOCOL_ERR_MASK" width="1" begin="13" end="13" resetval="0x0" description="Flow Control Protocol Error Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="POIS_TLP_ERR_MASK" width="1" begin="12" end="12" resetval="0x0" description="Poisoned TLP Error Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_6" width="6" begin="11" end="6" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="SURPRISE_DOWN_ERR_MASK" width="1" begin="5" end="5" resetval="0x0" description="Surprise Down Error Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: LINK_CAPABILITIES_REGPCIE_CAP_SURPRISE_DOWN_ERR_REP_CAP ? RW : RO Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="DL_PROTOCOL_ERR_MASK" width="1" begin="4" end="4" resetval="0x0" description="Data Link Protocol Error Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_0" width="4" begin="3" end="0" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_UNCORR_ERR_SEV_OFF" acronym="PCIE_RC_UNCORR_ERR_SEV_OFF" offset="0x110C" width="32" description="Uncorrectable Error Severity Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_26" width="6" begin="31" end="26" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="TLP_PRFX_BLOCKED_ERR_SEVERITY" width="1" begin="25" end="25" resetval="0x0" description="TLP Prefix Blocked Error Severity [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: Not supported Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="ATOMIC_EGRESS_BLOCKED_ERR_SEVERITY" width="1" begin="24" end="24" resetval="0x0" description="AtomicOp Egress Blocked Severity [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="RSVDP_23" width="1" begin="23" end="23" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="INTERNAL_ERR_SEVERITY" width="1" begin="22" end="22" resetval="0x1" description="Uncorrectable Internal Error Severity [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="UNSUPPORTED_REQ_ERR_SEVERITY" width="1" begin="20" end="20" resetval="0x0" description="Unsupported Request Error Severity For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="ECRC_ERR_SEVERITY" width="1" begin="19" end="19" resetval="0x0" description="ECRC Error Severity [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MALF_TLP_ERR_SEVERITY" width="1" begin="18" end="18" resetval="0x1" description="Malformed TLP Severity For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="REC_OVERFLOW_ERR_SEVERITY" width="1" begin="17" end="17" resetval="0x1" description="Receiver Overflow Error Severity [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="UNEXP_CMPLT_ERR_SEVERITY" width="1" begin="16" end="16" resetval="0x0" description="Unexpected Completion Error Severity For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CMPLT_ABORT_ERR_SEVERITY" width="1" begin="15" end="15" resetval="0x0" description="Completer Abort Error Severity [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CMPLT_TIMEOUT_ERR_SEVERITY" width="1" begin="14" end="14" resetval="0x0" description="Completion Timeout Error Severity For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FC_PROTOCOL_ERR_SEVERITY" width="1" begin="13" end="13" resetval="0x1" description="Flow Control Protocol Error Severity [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="POIS_TLP_ERR_SEVERITY" width="1" begin="12" end="12" resetval="0x0" description="Poisoned TLP Severity For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_6" width="6" begin="11" end="6" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="SURPRISE_DOWN_ERR_SVRITY" width="1" begin="5" end="5" resetval="0x1" description="Surprise Down Error Severity [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: LINK_CAPABILITIES_REGPCIE_CAP_SURPRISE_DOWN_ERR_REP_CAP ? RW : RO Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="DL_PROTOCOL_ERR_SEVERITY" width="1" begin="4" end="4" resetval="0x1" description="Data Link Protocol Error Severity For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_0" width="4" begin="3" end="0" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_CORR_ERR_STATUS_OFF" acronym="PCIE_RC_CORR_ERR_STATUS_OFF" offset="0x1110" width="32" description="Correctable Error Status Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_16" width="16" begin="31" end="16" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="HEADER_LOG_OVERFLOW_STATUS" width="1" begin="15" end="15" resetval="0x0" description="Header Log Overflow Error Status [Optional] For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="CORRECTED_INT_ERR_STATUS" width="1" begin="14" end="14" resetval="0x0" description="Corrected Internal Error Status [Optional] For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="ADVISORY_NON_FATAL_ERR_STATUS" width="1" begin="13" end="13" resetval="0x0" description="Advisory Non-Fatal Error Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="RPL_TIMER_TIMEOUT_STATUS" width="1" begin="12" end="12" resetval="0x0" description="Replay Timer Timeout Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="RSVDP_9" width="3" begin="11" end="9" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="REPLAY_NO_ROLEOVER_STATUS" width="1" begin="8" end="8" resetval="0x0" description="REPLAY_NUM Rollover Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="BAD_DLLP_STATUS" width="1" begin="7" end="7" resetval="0x0" description="Bad DLLP Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="BAD_TLP_STATUS" width="1" begin="6" end="6" resetval="0x0" description="Bad TLP Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="RSVDP_1" width="5" begin="5" end="1" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RX_ERR_STATUS" width="1" begin="0" end="0" resetval="0x0" description="Receiver Error Status [Optional] For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_CORR_ERR_MASK_OFF" acronym="PCIE_RC_CORR_ERR_MASK_OFF" offset="0x1114" width="32" description="Correctable Error Mask Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_16" width="16" begin="31" end="16" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="HEADER_LOG_OVERFLOW_MASK" width="1" begin="15" end="15" resetval="0x1" description="Header Log Overflow Error Mask [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CORRECTED_INT_ERR_MASK" width="1" begin="14" end="14" resetval="0x1" description="Corrected Internal Error Mask [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="ADVISORY_NON_FATAL_ERR_MASK" width="1" begin="13" end="13" resetval="0x1" description="Advisory Non-Fatal Error Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RPL_TIMER_TIMEOUT_MASK" width="1" begin="12" end="12" resetval="0x0" description="Replay Timer Timeout Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_9" width="3" begin="11" end="9" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="REPLAY_NO_ROLEOVER_MASK" width="1" begin="8" end="8" resetval="0x0" description="REPLAY_NUM Rollover Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="BAD_DLLP_MASK" width="1" begin="7" end="7" resetval="0x0" description="Bad DLLP Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="BAD_TLP_MASK" width="1" begin="6" end="6" resetval="0x0" description="Bad TLP Mask For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_1" width="5" begin="5" end="1" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RX_ERR_MASK" width="1" begin="0" end="0" resetval="0x0" description="Receiver Error Mask [Optional] For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_ADV_ERR_CAP_CTRL_OFF" acronym="PCIE_RC_ADV_ERR_CAP_CTRL_OFF" offset="0x1118" width="32" description="Advanced Error Capabilities and Control Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_12" width="20" begin="31" end="12" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="11" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MULTIPLE_HEADER_EN" width="1" begin="10" end="10" resetval="0x0" description="Multiple Header Recording Enable For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="MULTIPLE_HEADER_CAP" width="1" begin="9" end="9" resetval="0x0" description="Multiple Header Recording Capable For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="ECRC_CHECK_EN" width="1" begin="8" end="8" resetval="0x0" description="ECRC Check Enable For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="ECRC_CHECK_CAP" width="1" begin="7" end="7" resetval="0x1" description="ECRC Check Capable For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="ECRC_GEN_EN" width="1" begin="6" end="6" resetval="0x0" description="ECRC Generation Enable For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="ECRC_GEN_CAP" width="1" begin="5" end="5" resetval="0x1" description="ECRC Generation Capable For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="FIRST_ERR_POINTER" width="5" begin="4" end="0" resetval="0x0" description="First Error Pointer For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_HDR_LOG_0_OFF" acronym="PCIE_RC_HDR_LOG_0_OFF" offset="0x111C" width="32" description="Header Log Register 0. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="FIRST_DWORD_FOURTH_BYTE" width="8" begin="31" end="24" resetval="0x0" description="Byte 3 of Header log register of First 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="FIRST_DWORD_THIRD_BYTE" width="8" begin="23" end="16" resetval="0x0" description="Byte 2 of Header log register of First 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="FIRST_DWORD_SECOND_BYTE" width="8" begin="15" end="8" resetval="0x0" description="Byte 1 of Header log register of First 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="FIRST_DWORD_FIRST_BYTE" width="8" begin="7" end="0" resetval="0x0" description="Byte 0 of Header log register of First 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_HDR_LOG_1_OFF" acronym="PCIE_RC_HDR_LOG_1_OFF" offset="0x1120" width="32" description="Header Log Register 1. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="SECOND_DWORD_FOURTH_BYTE" width="8" begin="31" end="24" resetval="0x0" description="Byte 3 of Header log register of Second 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="SECOND_DWORD_THIRD_BYTE" width="8" begin="23" end="16" resetval="0x0" description="Byte 2 of Header log register of Second 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="SECOND_DWORD_SECOND_BYTE" width="8" begin="15" end="8" resetval="0x0" description="Byte 1 of Header log register of Second 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="SECOND_DWORD_FIRST_BYTE" width="8" begin="7" end="0" resetval="0x0" description="Byte 0 of Header log register of Second 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_HDR_LOG_2_OFF" acronym="PCIE_RC_HDR_LOG_2_OFF" offset="0x1124" width="32" description="Header Log Register 2. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="THIRD_DWORD_FOURTH_BYTE" width="8" begin="31" end="24" resetval="0x0" description="Byte 3 of Header log register of Third 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="THIRD_DWORD_THIRD_BYTE" width="8" begin="23" end="16" resetval="0x0" description="Byte 2 of Header log register of Third 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="THIRD_DWORD_SECOND_BYTE" width="8" begin="15" end="8" resetval="0x0" description="Byte 1 of Header log register of Third 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="THIRD_DWORD_FIRST_BYTE" width="8" begin="7" end="0" resetval="0x0" description="Byte 0 of Header log register of Third 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_HDR_LOG_3_OFF" acronym="PCIE_RC_HDR_LOG_3_OFF" offset="0x1128" width="32" description="Header Log Register 3. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="FOURTH_DWORD_FOURTH_BYTE" width="8" begin="31" end="24" resetval="0x0" description="Byte 3 of Header log register of Fourth 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="FOURTH_DWORD_THIRD_BYTE" width="8" begin="23" end="16" resetval="0x0" description="Byte 2 of Header log register of Fourth 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="FOURTH_DWORD_SECOND_BYTE" width="8" begin="15" end="8" resetval="0x0" description="Byte 1 of Header log register of Fourth 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="FOURTH_DWORD_FIRST_BYTE" width="8" begin="7" end="0" resetval="0x0" description="Byte 0 of Header log register of Fourth 32 bit Data Word For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_ROOT_ERR_CMD_OFF" acronym="PCIE_RC_ROOT_ERR_CMD_OFF" offset="0x112C" width="32" description="Root Error Command Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_3" width="29" begin="31" end="3" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="FATAL_ERR_REPORTING_EN" width="1" begin="2" end="2" resetval="0x0" description="Fatal Error Reporting Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="NON_FATAL_ERR_REPORTING_EN" width="1" begin="1" end="1" resetval="0x0" description="Non-Fatal Error Reporting Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="CORR_ERR_REPORTING_EN" width="1" begin="0" end="0" resetval="0x0" description="Correctable Error Reporting Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_ROOT_ERR_STATUS_OFF" acronym="PCIE_RC_ROOT_ERR_STATUS_OFF" offset="0x1130" width="32" description="Root Error Status Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="ADV_ERR_INT_MSG_NUM" width="5" begin="31" end="27" resetval="0x0" description="Advanced Error Interrupt Message Number For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="RSVDP_7" width="20" begin="26" end="7" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="FATAL_ERR_MSG_RX" width="1" begin="6" end="6" resetval="0x0" description="One or more Fatal Error Messages Received For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="NON_FATAL_ERR_MSG_RX" width="1" begin="5" end="5" resetval="0x0" description="One or more Non-Fatal Error Messages Received For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="FIRST_UNCORR_FATAL" width="1" begin="4" end="4" resetval="0x0" description="First Uncorrectable Error is Fatal For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="MUL_ERR_FATAL_NON_FATAL_RX" width="1" begin="3" end="3" resetval="0x0" description="Multiple Fatal or Non-Fatal Errors Received For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="ERR_FATAL_NON_FATAL_RX" width="1" begin="2" end="2" resetval="0x0" description="Fatal or Non-Fatal Error Received For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="MUL_ERR_COR_RX" width="1" begin="1" end="1" resetval="0x0" description="Multiple Correctable Errors Received For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
    <bitfield id="ERR_COR_RX" width="1" begin="0" end="0" resetval="0x0" description="Correctable Error Received For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_ERR_SRC_ID_OFF" acronym="PCIE_RC_ERR_SRC_ID_OFF" offset="0x1134" width="32" description="Error Source Identification Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="ERR_FATAL_NON_FATAL_SOURCE_ID" width="16" begin="31" end="16" resetval="0x0" description="Source of Fatal/Non-Fatal Error For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="ERR_COR_SOURCE_ID" width="16" begin="15" end="0" resetval="0x0" description="Source of Correctable Error For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_TLP_PREFIX_LOG_1_OFF" acronym="PCIE_RC_TLP_PREFIX_LOG_1_OFF" offset="0x1138" width="32" description="TLP Prefix Log Register 1. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="CFG_TLP_PFX_LOG_1_FOURTH_BYTE" width="8" begin="31" end="24" resetval="0x0" description="Byte 3 of Error TLP Prefix Log 1 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_1_THIRD_BYTE" width="8" begin="23" end="16" resetval="0x0" description="Byte 2 of Error TLP Prefix Log 1 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_1_SECOND_BYTE" width="8" begin="15" end="8" resetval="0x0" description="Byte 1 of Error TLP Prefix Log 1 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_1_FIRST_BYTE" width="8" begin="7" end="0" resetval="0x0" description="Byte 0 of Error TLP Prefix Log 1 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_TLP_PREFIX_LOG_2_OFF" acronym="PCIE_RC_TLP_PREFIX_LOG_2_OFF" offset="0x113C" width="32" description="TLP Prefix Log Register 2. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="CFG_TLP_PFX_LOG_2_FOURTH_BYTE" width="8" begin="31" end="24" resetval="0x0" description="Byte 3 Error TLP Prefix Log 2 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_2_THIRD_BYTE" width="8" begin="23" end="16" resetval="0x0" description="Byte 2 Error TLP Prefix Log 2 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_2_SECOND_BYTE" width="8" begin="15" end="8" resetval="0x0" description="Byte 1 Error TLP Prefix Log 2 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_2_FIRST_BYTE" width="8" begin="7" end="0" resetval="0x0" description="Byte 0 Error TLP Prefix Log 2 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_TLP_PREFIX_LOG_3_OFF" acronym="PCIE_RC_TLP_PREFIX_LOG_3_OFF" offset="0x1140" width="32" description="TLP Prefix Log Register 3. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="CFG_TLP_PFX_LOG_3_FOURTH_BYTE" width="8" begin="31" end="24" resetval="0x0" description="Byte 3 Error TLP Prefix Log 3 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_3_THIRD_BYTE" width="8" begin="23" end="16" resetval="0x0" description="Byte 2 Error TLP Prefix Log 3 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_3_SECOND_BYTE" width="8" begin="15" end="8" resetval="0x0" description="Byte 1 Error TLP Prefix Log 3 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_3_FIRST_BYTE" width="8" begin="7" end="0" resetval="0x0" description="Byte 0 Error TLP Prefix Log 3 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_TLP_PREFIX_LOG_4_OFF" acronym="PCIE_RC_TLP_PREFIX_LOG_4_OFF" offset="0x1144" width="32" description="TLP Prefix Log Register 4. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="CFG_TLP_PFX_LOG_4_FOURTH_BYTE" width="8" begin="31" end="24" resetval="0x0" description="Byte 3 Error TLP Prefix Log 4 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_4_THIRD_BYTE" width="8" begin="23" end="16" resetval="0x0" description="Byte 2 Error TLP Prefix Log 4 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_4_SECOND_BYTE" width="8" begin="15" end="8" resetval="0x0" description="Byte 1 Error TLP Prefix Log 4 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CFG_TLP_PFX_LOG_4_FIRST_BYTE" width="8" begin="7" end="0" resetval="0x0" description="Byte 0 Error TLP Prefix Log 4 For a description of this standard PCIe register field, see the PCI Express Specification Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC_BASE" acronym="PCIE_RC_VC_BASE" offset="0x1148" width="32" description="VC Extended Capability Header. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="VC_NEXT_OFFSET" width="12" begin="31" end="20" resetval="0x198" description="Next Capability Offset For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC_CAP_VERSION" width="4" begin="19" end="16" resetval="0x1" description="Capability Version For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC_PCIE_EXTENDED_CAP_ID" width="16" begin="15" end="0" resetval="0x2" description="VC Extended Capability ID For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC_CAPABILITIES_REG_1" acronym="PCIE_RC_VC_CAPABILITIES_REG_1" offset="0x114C" width="32" description="Port VC Capability Register 1. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_12" width="20" begin="31" end="12" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_TBL_ENTRY_SIZE" width="2" begin="11" end="10" resetval="0x0" description="Port Arbitration Table Entry Size For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="VC_REFERENCE_CLOCK" width="2" begin="9" end="8" resetval="0x0" description="Reference Clock For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_7" width="1" begin="7" end="7" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_LOW_PRI_EXT_VC_CNT" width="3" begin="6" end="4" resetval="0x0" description="Low Priority Extended VC Count For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="RSVDP_3" width="1" begin="3" end="3" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_EXT_VC_CNT" width="3" begin="2" end="0" resetval="0x3" description="Extended VC Count For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC_CAPABILITIES_REG_2" acronym="PCIE_RC_VC_CAPABILITIES_REG_2" offset="0x1150" width="32" description="Port VC Capability Register 2. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="VC_ARBI_TABLE_OFFSET" width="8" begin="31" end="24" resetval="0x0" description="VC Arbitration Table Offset For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_4" width="20" begin="23" end="4" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_ARBI_CAP" width="4" begin="3" end="0" resetval="0x1" description="VC Arbitration Capability For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W else R Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC_STATUS_CONTROL_REG" acronym="PCIE_RC_VC_STATUS_CONTROL_REG" offset="0x1154" width="32" description="Port VC Control and Status Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_17" width="15" begin="31" end="17" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_ARBI_TABLE_STATUS" width="1" begin="16" end="16" resetval="0x0" description="VC Arbitration Table Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_4" width="12" begin="15" end="4" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_ARBI_SELECT" width="3" begin="3" end="1" resetval="0x0" description="VC Arbitration Select For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="VC_LOAD_VC_ARBI_TABLE" width="1" begin="0" end="0" resetval="0x0" description="Requests Hardware to Load VC Arbitration Table For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_CAP_REG_VC0" acronym="PCIE_RC_RESOURCE_CAP_REG_VC0" offset="0x1158" width="32" description="VC Resource Capability Register (0). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="VC_PORT_ARBI_TABLE_VC0" width="8" begin="31" end="24" resetval="0x0" description="Port Arbitration Table Offset For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_22" width="2" begin="23" end="22" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_MAX_TIME_SLOT_VC0" width="6" begin="21" end="16" resetval="0x0" description="Maximum Time Slots-1 supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="VC_REJECT_SNOOP_TRANS_VC0" width="1" begin="15" end="15" resetval="0x0" description="Reject Snoop Transactions For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="RSVDP_8" width="7" begin="14" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_CAP_VC0" width="8" begin="7" end="0" resetval="0x0" description="Port Arbitration Capability For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_CON_REG_VC0" acronym="PCIE_RC_RESOURCE_CON_REG_VC0" offset="0x115C" width="32" description="VC Resource Control Register (0). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="VC_ENABLE_VC0" width="1" begin="31" end="31" resetval="0x1" description="VC Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_27" width="4" begin="30" end="27" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_ID_VC" width="3" begin="26" end="24" resetval="0x0" description="VC ID For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_18" width="6" begin="23" end="18" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_SELECT_VC0" width="1" begin="17" end="17" resetval="0x0" description="Port Arbitration Select For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="VC_LOAD_PORT_ARBI_TABLE_VC0" width="1" begin="16" end="16" resetval="0x0" description="Load Port Arbitration Table For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_8" width="8" begin="15" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_TC_MAP_VC0_BIT1" width="7" begin="7" end="1" resetval="0x7F" description="Bits 7:1 of TC to VC Mapping For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="VC_TC_MAP_VC0" width="1" begin="0" end="0" resetval="0x1" description="Bit 0 of TC to VC Mapping For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_STATUS_REG_VC0" acronym="PCIE_RC_RESOURCE_STATUS_REG_VC0" offset="0x1160" width="32" description="VC Resource Status Register (0). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_18" width="14" begin="31" end="18" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_NEGO_PENDING_VC0" width="1" begin="17" end="17" resetval="0x1" description="VC Negotiation Pending For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_TABLE_STATUS_VC0" width="1" begin="16" end="16" resetval="0x0" description="Port Arbitration Table Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_0" width="16" begin="15" end="0" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_CAP_REG_VC1" acronym="PCIE_RC_RESOURCE_CAP_REG_VC1" offset="0x1164" width="32" description="VC Resource Capability Register (1). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="VC_PORT_ARBI_TABLE_VC1" width="8" begin="31" end="24" resetval="0x0" description="VC1 Port Arbitration Table Offset For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_22" width="2" begin="23" end="22" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_MAX_TIME_SLOT_VC1" width="6" begin="21" end="16" resetval="0x0" description="VC1 Maximum Time Slots-1 supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="VC_REJECT_SNOOP_TRANS_VC1" width="1" begin="15" end="15" resetval="0x0" description="VC1 Reject Snoop Transactions For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="RSVDP_8" width="7" begin="14" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_CAP_VC1" width="8" begin="7" end="0" resetval="0x0" description="VC1 Port Arbitration Capability For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_CON_REG_VC1" acronym="PCIE_RC_RESOURCE_CON_REG_VC1" offset="0x1168" width="32" description="VC Resource Control Register (1). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="VC_ENABLE_VC1" width="1" begin="31" end="31" resetval="0x0" description="VC1 VC Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_27" width="4" begin="30" end="27" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_ID_VC1" width="3" begin="26" end="24" resetval="0x0" description="VC1 VC ID For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_20" width="4" begin="23" end="20" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_SELECT_VC1" width="3" begin="19" end="17" resetval="0x0" description="VC1 Port Arbitration Select For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="VC_LOAD_PORT_ARBI_TABLE_VC1" width="1" begin="16" end="16" resetval="0x0" description="VC1 Load Port Arbitration Table For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_8" width="8" begin="15" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_TC_MAP_VC1_BIT1" width="7" begin="7" end="1" resetval="0x0" description="VC1 Bits 7:1 of TC to VC Mapping For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="VC_TC_MAP_VC1" width="1" begin="0" end="0" resetval="0x0" description="VC1 Bit 0 of TC to VC Mapping For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_STATUS_REG_VC1" acronym="PCIE_RC_RESOURCE_STATUS_REG_VC1" offset="0x116C" width="32" description="VC Resource Status Register (1). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_18" width="14" begin="31" end="18" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_NEGO_PENDING_VC1" width="1" begin="17" end="17" resetval="0x1" description="VC1 VC Negotiation Pending For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_TABLE_STATUS_VC1" width="1" begin="16" end="16" resetval="0x0" description="VC1 Port Arbitration Table Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_0" width="16" begin="15" end="0" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_CAP_REG_VC2" acronym="PCIE_RC_RESOURCE_CAP_REG_VC2" offset="0x1170" width="32" description="VC Resource Capability Register (2). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="VC_PORT_ARBI_TABLE_VC2" width="8" begin="31" end="24" resetval="0x0" description="VC2 Port Arbitration Table Offset For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_22" width="2" begin="23" end="22" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_MAX_TIME_SLOT_VC2" width="6" begin="21" end="16" resetval="0x0" description="VC2 Maximum Time Slots-1 supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="VC_REJECT_SNOOP_TRANS_VC2" width="1" begin="15" end="15" resetval="0x0" description="VC2 Reject Snoop Transactions For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="RSVDP_8" width="7" begin="14" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_CAP_VC2" width="8" begin="7" end="0" resetval="0x0" description="VC2 Port Arbitration Capability For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_CON_REG_VC2" acronym="PCIE_RC_RESOURCE_CON_REG_VC2" offset="0x1174" width="32" description="VC Resource Control Register (2). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="VC_ENABLE_VC2" width="1" begin="31" end="31" resetval="0x0" description="VC2 VC Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_27" width="4" begin="30" end="27" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_ID_VC2" width="3" begin="26" end="24" resetval="0x0" description="VC2 VC ID For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_20" width="4" begin="23" end="20" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_SELECT_VC2" width="3" begin="19" end="17" resetval="0x0" description="VC2 Port Arbitration Select For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="VC_LOAD_PORT_ARBI_TABLE_VC2" width="1" begin="16" end="16" resetval="0x0" description="VC2 Load Port Arbitration Table For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_8" width="8" begin="15" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_TC_MAP_VC2_BIT1" width="7" begin="7" end="1" resetval="0x0" description="VC2 Bits 7:1 of TC to VC Mapping For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="VC_TC_MAP_VC2" width="1" begin="0" end="0" resetval="0x0" description="VC2 Bit 0 of TC to VC Mapping For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_STATUS_REG_VC2" acronym="PCIE_RC_RESOURCE_STATUS_REG_VC2" offset="0x1178" width="32" description="VC Resource Status Register (2). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_18" width="14" begin="31" end="18" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_NEGO_PENDING_VC2" width="1" begin="17" end="17" resetval="0x1" description="VC2 VC Negotiation Pending For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_TABLE_STATUS_VC2" width="1" begin="16" end="16" resetval="0x0" description="VC2 Port Arbitration Table Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_0" width="16" begin="15" end="0" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_CAP_REG_VC3" acronym="PCIE_RC_RESOURCE_CAP_REG_VC3" offset="0x117C" width="32" description="VC Resource Capability Register (3). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="VC_PORT_ARBI_TABLE_VC3" width="8" begin="31" end="24" resetval="0x0" description="VC3 Port Arbitration Table Offset For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_22" width="2" begin="23" end="22" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_MAX_TIME_SLOT_VC3" width="6" begin="21" end="16" resetval="0x0" description="VC3 Maximum Time Slots-1 supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="VC_REJECT_SNOOP_TRANS_VC3" width="1" begin="15" end="15" resetval="0x0" description="VC3 Reject Snoop Transactions For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="RSVDP_8" width="7" begin="14" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_CAP_VC3" width="8" begin="7" end="0" resetval="0x0" description="VC3 Port Arbitration Capability For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_CON_REG_VC3" acronym="PCIE_RC_RESOURCE_CON_REG_VC3" offset="0x1180" width="32" description="VC Resource Control Register (3). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="VC_ENABLE_VC3" width="1" begin="31" end="31" resetval="0x0" description="VC3 VC Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_27" width="4" begin="30" end="27" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_ID_VC3" width="3" begin="26" end="24" resetval="0x0" description="VC3 VC ID For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_20" width="4" begin="23" end="20" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_SELECT_VC3" width="3" begin="19" end="17" resetval="0x0" description="VC3 Port Arbitration Select For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="VC_LOAD_PORT_ARBI_TABLE_VC3" width="1" begin="16" end="16" resetval="0x0" description="VC3 Load Port Arbitration Table For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_8" width="8" begin="15" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_TC_MAP_VC3_BIT1" width="7" begin="7" end="1" resetval="0x0" description="VC3 Bits 7:1 of TC to VC Mapping For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="VC_TC_MAP_VC3" width="1" begin="0" end="0" resetval="0x0" description="VC3 Bit 0 of TC to VC Mapping For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_RESOURCE_STATUS_REG_VC3" acronym="PCIE_RC_RESOURCE_STATUS_REG_VC3" offset="0x1184" width="32" description="VC Resource Status Register (3). For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_18" width="14" begin="31" end="18" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="VC_NEGO_PENDING_VC3" width="1" begin="17" end="17" resetval="0x1" description="VC3 VC Negotiation Pending For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="VC_PORT_ARBI_TABLE_STATUS_VC3" width="1" begin="16" end="16" resetval="0x0" description="VC3 Port Arbitration Table Status For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="R"/>
    <bitfield id="RSVDP_0" width="16" begin="15" end="0" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_SPCIE_CAP_HEADER_REG" acronym="PCIE_RC_SPCIE_CAP_HEADER_REG" offset="0x1198" width="32" description="SPCIE Capability Header. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="NEXT_OFFSET" width="12" begin="31" end="20" resetval="0x1A8" description="Next Capability Offset For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CAP_VERSION" width="4" begin="19" end="16" resetval="0x1" description="Capability Version For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="EXTENDED_CAP_ID" width="16" begin="15" end="0" resetval="0x19" description="Secondary PCI Express Extended Capability ID For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_LINK_CONTROL3_REG" acronym="PCIE_RC_LINK_CONTROL3_REG" offset="0x119C" width="32" description="Link Control 3 Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_2" width="30" begin="31" end="2" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="EQ_REQ_INT_EN" width="1" begin="1" end="1" resetval="0x0" description="Link Equalization Request Interrupt Enable For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="PERFORM_EQ" width="1" begin="0" end="0" resetval="0x0" description="Perform Equalization For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_LANE_ERR_STATUS_REG" acronym="PCIE_RC_LANE_ERR_STATUS_REG" offset="0x11A0" width="32" description="Lane Error Status Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_LANE_ERR_STATUS" width="30" begin="31" end="2" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="LANE_ERR_STATUS" width="2" begin="1" end="0" resetval="0x0" description="Lane Error Status Bits per Lane For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_SPCIE_CAP_OFF_0CH_REG" acronym="PCIE_RC_SPCIE_CAP_OFF_0CH_REG" offset="0x11A4" width="32" description="Lane Equalization Control Register for lanes 1 and 0. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_31" width="1" begin="31" end="31" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="USP_RX_PRESET_HINT1" width="3" begin="30" end="28" resetval="0x7" description="Upstream Port 80 GT/s Receiver Preset Hint 1 The write value is gated with the PCIE_CAP_CROSS_LINK_SUPPORT field of" range="" rwaccess="R"/>
    <bitfield id="USP_TX_PRESET1" width="4" begin="27" end="24" resetval="0xF" description="Upstream Port 80 GT/s Transmitter Preset 1 The write value is gated with the PCIE_CAP_CROSS_LINK_SUPPORT field of" range="" rwaccess="R"/>
    <bitfield id="RSVDP_23" width="1" begin="23" end="23" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="DSP_RX_PRESET_HINT1" width="3" begin="22" end="20" resetval="0x7" description="Downstream Port 80 GT/s Receiver Preset Hint 1 For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky]" range="" rwaccess="R"/>
    <bitfield id="DSP_TX_PRESET1" width="4" begin="19" end="16" resetval="0xF" description="Downstream Port 80 GT/s Transmitter Preset 1 For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky]" range="" rwaccess="R"/>
    <bitfield id="RSVDP_15" width="1" begin="15" end="15" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="USP_RX_PRESET_HINT0" width="3" begin="14" end="12" resetval="0x7" description="Upstream Port 80 GT/s Receiver Preset Hint 0 The write value is gated with the PCIE_CAP_CROSS_LINK_SUPPORT field of" range="" rwaccess="R"/>
    <bitfield id="USP_TX_PRESET0" width="4" begin="11" end="8" resetval="0xF" description="Upstream Port 80 GT/s Transmitter Preset 0 The write value is gated with the PCIE_CAP_CROSS_LINK_SUPPORT field of" range="" rwaccess="R"/>
    <bitfield id="RSVDP_7" width="1" begin="7" end="7" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="DSP_RX_PRESET_HINT0" width="3" begin="6" end="4" resetval="0x7" description="Downstream Port 80 GT/s Receiver Preset Hint 0 For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky]" range="" rwaccess="R"/>
    <bitfield id="DSP_TX_PRESET0" width="4" begin="3" end="0" resetval="0xF" description="Downstream Port 80 GT/s Transmitter Preset 0 For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_L1SUB_CAP_HEADER_REG" acronym="PCIE_RC_L1SUB_CAP_HEADER_REG" offset="0x11A8" width="32" description="L1 Substates Extended Capability Header. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="NEXT_OFFSET" width="12" begin="31" end="20" resetval="0x1B8" description="Next Capability Offset For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="CAP_VERSION" width="4" begin="19" end="16" resetval="0x1" description="Capability Version For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="EXTENDED_CAP_ID" width="16" begin="15" end="0" resetval="0x1E" description="L1SUB Extended Capability ID For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_L1SUB_CAPABILITY_REG" acronym="PCIE_RC_L1SUB_CAPABILITY_REG" offset="0x11AC" width="32" description="L1 Substates Capability Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_24" width="8" begin="31" end="24" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PWR_ON_VALUE_SUPPORT" width="5" begin="23" end="19" resetval="0x5" description="Port T Power On Value For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_18" width="1" begin="18" end="18" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PWR_ON_SCALE_SUPPORT" width="2" begin="17" end="16" resetval="0x0" description="Port T Power On Scale For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="COMM_MODE_SUPPORT" width="8" begin="15" end="8" resetval="0xA" description="Port Common Mode Restore Time For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_5" width="3" begin="7" end="5" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="L1_PMSUB_SUPPORT" width="1" begin="4" end="4" resetval="0x1" description="L1 PM Substates ECN Supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="L1_1_ASPM_SUPPORT" width="1" begin="3" end="3" resetval="0x1" description="ASPM L11 Supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="L1_2_ASPM_SUPPORT" width="1" begin="2" end="2" resetval="0x0" description="ASPM L12 Supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="L1_1_PCIPM_SUPPORT" width="1" begin="1" end="1" resetval="0x1" description="PCI-PM L11 Supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="L1_2_PCIPM_SUPPORT" width="1" begin="0" end="0" resetval="0x1" description="PCI-PM L12 Supported For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_L1SUB_CONTROL1_REG" acronym="PCIE_RC_L1SUB_CONTROL1_REG" offset="0x11B0" width="32" description="L1 Substates Control 1 Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="L1_2_TH_SCA" width="3" begin="31" end="29" resetval="0x0" description="LTR L12 Threshold Scale For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_26" width="3" begin="28" end="26" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="L1_2_TH_VAL" width="10" begin="25" end="16" resetval="0x0" description="LTR L12 Threshold Value For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="T_COMMON_MODE" width="8" begin="15" end="8" resetval="0xA" description="Common Mode Restore Time For a description of this standard PCIe register field, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_4" width="4" begin="7" end="4" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="L1_1_ASPM_EN" width="1" begin="3" end="3" resetval="0x0" description="ASPM L11 Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="L1_2_ASPM_EN" width="1" begin="2" end="2" resetval="0x0" description="ASPM L12 Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="L1_1_PCIPM_EN" width="1" begin="1" end="1" resetval="0x0" description="PCI-PM L11 Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="L1_2_PCIPM_EN" width="1" begin="0" end="0" resetval="0x0" description="PCI-PM L12 Enable For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_L1SUB_CONTROL2_REG" acronym="PCIE_RC_L1SUB_CONTROL2_REG" offset="0x11B4" width="32" description="L1 Substates Control 2 Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="T_POWER_ON_VALUE" width="5" begin="7" end="3" resetval="0x5" description="T Power On Value For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_2" width="1" begin="2" end="2" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="T_POWER_ON_SCALE" width="2" begin="1" end="0" resetval="0x0" description="T Power On Scale For a description of this standard PCIe register field, see the PCI Express Specification" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PTM_EXT_CAP_HDR_OFF" acronym="PCIE_RC_PTM_EXT_CAP_HDR_OFF" offset="0x11B8" width="32" description="Precision Time Measurement Capability Header. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="PTM_NEXT_OFFSET" width="12" begin="31" end="20" resetval="0x1C4" description="Precision Time Measurement PCI Express Extended Capability Next Offset For a description of this standard PCIe register, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PTM_CAP_VERSION" width="4" begin="19" end="16" resetval="0x1" description="Precision Time Measurement PCI Express Extended Capability Version For a description of this standard PCIe register, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PTM_CAP_ID" width="16" begin="15" end="0" resetval="0x1F" description="Precision Time Measurement PCI Express Extended Capability ID For a description of this standard PCIe register, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_CAP_OFF" acronym="PCIE_RC_PTM_CAP_OFF" offset="0x11BC" width="32" description="PTM Capability Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_16" width="16" begin="31" end="16" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PTM_CLK_GRAN" width="8" begin="15" end="8" resetval="0x4" description="PTM Local Clock Granularity For a description of this standard PCIe register, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky]" range="" rwaccess="R"/>
    <bitfield id="RSVDP_3" width="5" begin="7" end="3" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PTM_ROOT_CAPABLE" width="1" begin="2" end="2" resetval="0x1" description="PTM Root Capable For a description of this standard PCIe register, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PTM_RES_CAPABLE" width="1" begin="1" end="1" resetval="0x1" description="PTM Responder Capable For a description of this standard PCIe register, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PTM_REQ_CAPABLE" width="1" begin="0" end="0" resetval="0x1" description="PTM Requester Capable For a description of this standard PCIe register, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_CONTROL_OFF" acronym="PCIE_RC_PTM_CONTROL_OFF" offset="0x11C0" width="32" description="PTM Control Register. For a description of this standard PCIe register, see the PCI Express Specification.">
    <bitfield id="RSVDP_16" width="16" begin="31" end="16" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="EFF_GRAN" width="8" begin="15" end="8" resetval="0x0" description="PTM Effective Granularity For a description of this standard PCIe register, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: HWINIT" range="" rwaccess="R"/>
    <bitfield id="RSVDP_2" width="6" begin="7" end="2" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="ROOT_SELECT" width="1" begin="1" end="1" resetval="0x0" description="PTM Root Select When set this Time Source is the PTM Root For a description of this standard PCIe register, see the PCI Express Specification Note: The access attributes of this field are as follows: - Dbi: HWINIT" range="" rwaccess="R"/>
    <bitfield id="PTM_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="PTM Enable When set, this function is permitted to participate in the PTM mechanism For a description of this standard PCIe register, see the PCI Express Specification" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PTM_RES_CAP_HDR_OFF" acronym="PCIE_RC_PTM_RES_CAP_HDR_OFF" offset="0x11C4" width="32" description="Precision Time Measurement Responder Capability Header (VSEC).">
    <bitfield id="PTM_RES_EXT_CAP_NEXT_OFFS" width="12" begin="31" end="20" resetval="0x0" description="Precision Time Measurement Responder VSEC Next Pointer Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PTM_RES_EXT_CAP_VER" width="4" begin="19" end="16" resetval="0x1" description="Precision Time Measurement Responder VSEC Version Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PTM_RES_EXT_CAP_ID" width="16" begin="15" end="0" resetval="0xB" description="Precision Time Measurement Responder VSEC ID Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_HDR_OFF" acronym="PCIE_RC_PTM_RES_HDR_OFF" offset="0x11C8" width="32" description="Precision Time Measurement Responder Vendor Specific Header. .">
    <bitfield id="PTM_RES_VSEC_LENGTH" width="12" begin="31" end="20" resetval="0x54" description="PTM Responder VSEC Length Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PTM_RES_VSEC_REV" width="4" begin="19" end="16" resetval="0x1" description="PTM Responder VSEC Revision Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PTM_RES_VSEC_ID" width="16" begin="15" end="0" resetval="0x4" description="PTM Responder VSEC ID Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_CONTROL_OFF" acronym="PCIE_RC_PTM_RES_CONTROL_OFF" offset="0x11CC" width="32" description="PTM Responder Control Register. .">
    <bitfield id="RSVDP_1" width="30" begin="31" end="2" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PTM_RES_PDEL_BYTE_REV" width="1" begin="1" end="1" resetval="0x0" description="PTM Requester Propagation Delay Byte Reversal - Reverse the order of bytes in the PTM Propagation Delay data word of the PTM ResponseD Message, for compatibility with previous revisions. Note: This register field is sticky." range="" rwaccess="RW"/>
    <bitfield id="PTM_RES_CCONTEXT_VALID" width="1" begin="0" end="0" resetval="0x0" description="PTM Responder Control Context Valid - PTM Local Timing is valid This bit is set over the DBI A speed change or aux_clk_active will set this bit low Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_STATUS_OFF" acronym="PCIE_RC_PTM_RES_STATUS_OFF" offset="0x11D0" width="32" description="PTM Responder Status Register. .">
    <bitfield id="RSVDP_2" width="30" begin="31" end="2" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PTM_RES_REQUEST_RECEIVED" width="1" begin="1" end="1" resetval="0x0" description="PTM 1st Request Received - PTM Responder has received the first PTM Request Message Upon receipt of a second PTM Request Message a ResponseD message with timing information will be sent from the Responder, if the context is valid If the context is invalid a Response message will be sent instead Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="PTM_RES_CONTEXT_VALID" width="1" begin="0" end="0" resetval="0x0" description="PTM Responder Status Context Valid - PTM Local Timing Context is Valid Value set from upstream port Requester in a Switch Shadows the same in the control register in all other products Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_LOCAL_LSB_OFF" acronym="PCIE_RC_PTM_RES_LOCAL_LSB_OFF" offset="0x11D4" width="32" description="PTM Responder Local Clock LSB. .">
    <bitfield id="PTM_RES_LOCAL_LSB" width="32" begin="31" end="0" resetval="0x0" description="PTM Responder Local Clock LSB - Lower 32 bits of local timer value Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_LOCAL_MSB_OFF" acronym="PCIE_RC_PTM_RES_LOCAL_MSB_OFF" offset="0x11D8" width="32" description="PTM Responder Local Clock MSB. .">
    <bitfield id="PTM_RES_LOCAL_MSB" width="32" begin="31" end="0" resetval="0x0" description="PTM Responder Local Clock MSB - Upper 32 bits of local timer value Note: The access attributes of this field are as follows: - Dbi: if [DBI_RO_WR_EN == 1] then R/W[sticky] else R[sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_T2_LSB_OFF" acronym="PCIE_RC_PTM_RES_T2_LSB_OFF" offset="0x11DC" width="32" description="PTM Responder T2 Timestamp LSB. .">
    <bitfield id="PTM_RES_T2_LSB" width="32" begin="31" end="0" resetval="0x0" description="PTM Responder T2 Timestamp LSB - Lower 32 bits of the T2 Timestamp value Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_T2_MSB_OFF" acronym="PCIE_RC_PTM_RES_T2_MSB_OFF" offset="0x11E0" width="32" description="PTM Responder T2 Timestamp MSB. .">
    <bitfield id="PTM_RES_T2_MSB" width="32" begin="31" end="0" resetval="0x0" description="PTM Responder T2 Timestamp MSB - Upper 32 bits of the T2 Timestamp value Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_T2P_LSB_OFF" acronym="PCIE_RC_PTM_RES_T2P_LSB_OFF" offset="0x11E4" width="32" description="PTM Responder T2 Previous Timestamp LSB. .">
    <bitfield id="PTM_RES_T2P_LSB" width="32" begin="31" end="0" resetval="0x0" description="PTM Responder T2 Previous Timestamp LSB - Lower 32 bits of the previously stored T2 Timestamp value Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_T2P_MSB_OFF" acronym="PCIE_RC_PTM_RES_T2P_MSB_OFF" offset="0x11E8" width="32" description="PTM Responder T2 Previous Timestamp MSB. .">
    <bitfield id="PTM_RES_T2P_MSB" width="32" begin="31" end="0" resetval="0x0" description="PTM Responder T2 Previous Timestamp MSB - Upper 32 bits of the previously stored T2 Timestamp value Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_T3_LSB_OFF" acronym="PCIE_RC_PTM_RES_T3_LSB_OFF" offset="0x11EC" width="32" description="PTM Responder T3 Timestamp LSB. .">
    <bitfield id="PTM_RES_T3_LSB" width="32" begin="31" end="0" resetval="0x0" description="PTM Responder T3 Timestamp LSB - Lower 32 bits of the T3 Timestamp value Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_T3_MSB_OFF" acronym="PCIE_RC_PTM_RES_T3_MSB_OFF" offset="0x11F0" width="32" description="PTM Responder T3 Timestamp MSB. .">
    <bitfield id="PTM_RES_T3_MSB" width="32" begin="31" end="0" resetval="0x0" description="PTM Responder T3 Timestamp MSB - Upper 32 bits of the T2 Timestamp value Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_T3P_LSB_OFF" acronym="PCIE_RC_PTM_RES_T3P_LSB_OFF" offset="0x11F4" width="32" description="PTM Responder T3 Previous Timestamp LSB. .">
    <bitfield id="PTM_RES_T3P_LSB" width="32" begin="31" end="0" resetval="0x0" description="PTM Responder T3 Previous Timestamp LSB - Lower 32 bits of the previously stored T3 Timestamp value Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_T3P_MSB_OFF" acronym="PCIE_RC_PTM_RES_T3P_MSB_OFF" offset="0x11F8" width="32" description="PTM Responder T3 Previous Timestamp MSB. .">
    <bitfield id="PTM_RES_T3P_MSB" width="32" begin="31" end="0" resetval="0x0" description="PTM Responder T3 Previous Timestamp MSB - Upper 32 bits of the previously stored T3 Timestamp value Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PTM_RES_TX_LATENCY_OFF" acronym="PCIE_RC_PTM_RES_TX_LATENCY_OFF" offset="0x11FC" width="32" description="PTM Responder TX Latency. .">
    <bitfield id="RSVDP_12" width="20" begin="31" end="12" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PTM_RES_TX_LATENCY" width="12" begin="11" end="0" resetval="0x14" description="PTM Responder TX Latency - Responder Transmit path latency [12 bit wide] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PTM_RES_RX_LATENCY_OFF" acronym="PCIE_RC_PTM_RES_RX_LATENCY_OFF" offset="0x1200" width="32" description="PTM Responder RX Latency. .">
    <bitfield id="RSVDP_12" width="20" begin="31" end="12" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="PTM_RES_RX_LATENCY" width="12" begin="11" end="0" resetval="0x36" description="PTM Responder RX Latency - Responder Receive path latency [12 bit wide] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_ACK_LATENCY_TIMER_OFF" acronym="PCIE_RC_ACK_LATENCY_TIMER_OFF" offset="0x1700" width="32" description="Ack Latency Timer and Replay Timer Register.">
    <bitfield id="REPLAY_TIME_LIMIT" width="16" begin="31" end="16" resetval="0xC23" description="Replay Timer Limit The replay timer expires when it reaches this limit The controller initiates a replay upon reception of a NAK or when the replay timer expires You can modify the effective timer limit with the TIMER_MOD_REPLAY_TIMER field of thePCIE_RC_TIMER_CTRL_MAX_FUNC_NUM_OFF register After reset, the controller updates the default according to the Negotiated Link Width, Max_Payload_Size, and speed The value is determined from Tables 3-4, 3-5, and 3-6 of the PCIe 30 specification If there is a change in the payload size or link speed, the controller will override any value that you have written to this register field, and reset the field back to the specification-defined value It will not change the value in the TIMER_MOD_REPLAY_TIMER field of the PCIE_RC_TIMER_CTRL_MAX_FUNC_NUM_OFF register" range="" rwaccess="RW"/>
    <bitfield id="ROUND_TRIP_LATENCY_TIME_LIMIT" width="16" begin="15" end="0" resetval="0x40B" description="Ack Latency Timer Limit The Ack latency timer expires when it reaches this limit You can modify the effective timer limit with the TIMER_MOD_ACK_NAK field of thePCIE_RC_TIMER_CTRL_MAX_FUNC_NUM_OFF register After reset, the controller updates the default according to the Negotiated Link Width, Max_Payload_Size, and speed The value is determined from Tables 3-7, 3-8, and 3-9 of the PCIe 30 specification The limit must reflect the round trip latency from requester to completer If there is a change in the payload size or link width, the controller will override any value that you have written to this register field, and reset the field back to the specification-defined value It will not change the value in the TIMER_MOD_ACK_NAK field of the PCIE_RC_TIMER_CTRL_MAX_FUNC_NUM_OFF register" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_VENDOR_SPEC_DLLP_OFF" acronym="PCIE_RC_VENDOR_SPEC_DLLP_OFF" offset="0x1704" width="32" description="Vendor Specific DLLP Register.">
    <bitfield id="VENDOR_SPEC_DLLP" width="32" begin="31" end="0" resetval="0xFFFFFFFF" description="Vendor Specific DLLP Register Used to send a specific PCI Express DLLP Your application writes the 8-bit DLLP Type and 24-bits of Payload data into this register, then sets the field VENDOR_SPECIFIC_DLLP_REQ of" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PORT_FORCE_OFF" acronym="PCIE_RC_PORT_FORCE_OFF" offset="0x1708" width="32" description="Port Force Link Register.">
    <bitfield id="RSVDP_24" width="8" begin="31" end="24" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="DO_DESKEW_FOR_SRIS" width="1" begin="23" end="23" resetval="0x0" description="Use the transitions from TS2 to Logical Idle Symbol, SKP OS to Logical Idle Symbol, and FTS Sequence to SKP OS to do deskew for SRIS instead of using received SKP OS if DO_DESKEW_FOR_SRIS is set to 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_22" width="1" begin="22" end="22" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="LINK_STATE" width="6" begin="21" end="16" resetval="0x0" description="Forced LTSSM State The LTSSM state that the controller is forced to when you set the FORCE_EN bit [Force Link] LTSSM state encoding is defined by the lts_state variable in workspace/src/Layer1/smlh_ltssmv Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FORCE_EN" width="1" begin="15" end="15" resetval="0x0" description="Force Link The controller supports a testing and debug capability to allow your software to force the LTSSM state machine into a specific state, and to force the controller to transmit a specific Link Command Asserting this bit triggers the following actions: - Forces the LTSSM to the state specified by the Forced LTSSM State field - Forces the controller to transmit the command specified by the Forced Link Command field This is a self-clearing register field Reading from this register field always returns a '0'" range="" rwaccess="RW1C"/>
    <bitfield id="RSVDP_12" width="3" begin="14" end="12" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="FORCED_LTSSM" width="4" begin="11" end="8" resetval="0x0" description="Forced Link Command The link command that the controller is forced to transmit when you set FORCE_EN bit [Force Link] Link command encoding is defined by the ltssm_cmd variable in workspace/src/Layer1/smlh_ltssmv Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LINK_NUM" width="8" begin="7" end="0" resetval="0x4" description="Link Number Not used for endpoint Not used for M-PCIe Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_ACK_F_ASPM_CTRL_OFF" acronym="PCIE_RC_ACK_F_ASPM_CTRL_OFF" offset="0x170C" width="32" description="Ack Frequency and L0-L1 ASPM Control Register.">
    <bitfield id="RSVDP_31" width="1" begin="31" end="31" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="ENTER_ASPM" width="1" begin="30" end="30" resetval="0x0" description="ASPM L1 Entry Control - 1: Core enters ASPM L1 after a period in which it has been idle - 0: Core enters ASPM L1 only after idle period during which both receive and transmit are in L0s Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="L1_ENTRANCE_LATENCY" width="3" begin="29" end="27" resetval="0x3" description="L1 Entrance Latency Value range is: - 000: 1 us - 001: 2 us - 010: 4 us - 011: 8 us - 100: 16 us - 101: 32 us - 110 or 111: 64 us Note: Programming this timer with a value greater that 32us has no effect unless extended sync is used, or all of the credits are infinite Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="L0S_ENTRANCE_LATENCY" width="3" begin="26" end="24" resetval="0x3" description="L0s Entrance Latency Values correspond to: - 000: 1 us - 001: 2 us - 010: 3 us - 011: 4 us - 100: 5 us - 101: 6 us - 110 or 111: 7 us This field is applicable to STALL while in L0 for M-PCIe Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="COMMON_CLK_N_FTS" width="8" begin="23" end="16" resetval="0xF0" description="Common Clock N_FTS This is the N_FTS when common clock is used The number of Fast Training Sequence ordered sets to be transmitted when transitioning from L0s to L0 The maximum number of FTS ordered-sets that a component can request is 255 This field is only writable [sticky] when all of the following configuration parameter equations are true: - CX_NFTS !=CX_COMM_NFTS - DEFAULT_L0S_EXIT_LATENCY !=DEFAULT_COMM_L0S_EXIT_LATENCY - DEFAULT_L1_EXIT_LATENCY !=DEFAULT_COMM_L1_EXIT_LATENCY The controller does not support a value of zero a value of zero can cause the LTSSM to go into the recovery state when exiting from L0s This field is reserved [fixed to '0'] for M-PCIe Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="ACK_N_FTS" width="8" begin="15" end="8" resetval="0xF0" description="N_FTS The number of Fast Training Sequence ordered sets to be transmitted when transitioning from L0s to L0 The maximum number of FTS ordered-sets that a component can request is 255 The controller does not support a value of zero a value of zero can cause the LTSSM to go into the recovery state when exiting from L0s This field is reserved [fixed to '0'] for M-PCIe Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="ACK_FREQ" width="8" begin="7" end="0" resetval="0x0" description="Ack Frequency The controller accumulates the number of pending ACKs specified here [up to 255] before sending an ACK DLLP - 0: Indicates that this Ack frequency control feature is turned off The controller schedules a low-priority ACK DLLP for every TLP that it receives - 1- 255: Indicates that the controller will schedule a high-priority ACK after receiving this number of TLPs It might schedule the ACK before receiving this number of TLPs, but never later For a typical system, you do not have to modify the default setting Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PORT_LINK_CTRL_OFF" acronym="PCIE_RC_PORT_LINK_CTRL_OFF" offset="0x1710" width="32" description="Port Link Control Register.">
    <bitfield id="RSVDP_28" width="4" begin="31" end="28" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="TRANSMIT_LANE_REVERSALE_ENABLE" width="1" begin="27" end="27" resetval="0x0" description="TRANSMIT_LANE_REVERSALE_ENABLE is an internally reserved field Do not use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="EXTENDED_SYNCH" width="1" begin="26" end="26" resetval="0x0" description="EXTENDED_SYNCH is an internally reserved field Do not use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CORRUPT_LCRC_ENABLE" width="1" begin="25" end="25" resetval="0x0" description="CORRUPT_LCRC_ENABLE is an internally reserved field Do not use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="BEACON_ENABLE" width="1" begin="24" end="24" resetval="0x0" description="BEACON_ENABLE is an internally reserved field Do not use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="LINK_CAPABLE" width="6" begin="21" end="16" resetval="0x3" description="Link Mode Enable Sets the number of lanes in the link that you want to connect to the link partner When you have unused lanes in your system, then you must change the value in this register to reflect the number of lanes You must also change the value in the 'Predetermined Number of Lanes' field of the 'Link Width and Speed Change Control Register' - 000001: x 1 - 000011: x 2 - 000111: x 4 - 001111: x 8 - 011111: x 16 - 111111: x32 [not supported] This field is reserved [fixed to '0'] for M-PCIe Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_12" width="4" begin="15" end="12" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="LINK_RATE" width="4" begin="11" end="8" resetval="0x1" description="LINK_RATE is an internally reserved field Do not use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FAST_LINK_MODE" width="1" begin="7" end="7" resetval="0x0" description="Fast Link Mode Sets all internal LTSSM millisecond timers to Fast Mode for speeding up simulation Forces the LTSSM training [link initialization] to use shorter time-outs and to link up faster The default scaling factor can be changed using the DEFAULT_FAST_LINK_SCALING_FACTOR parameter or through the FAST_LINK_SCALING_FACTOR field in the" range="" rwaccess="RW"/>
    <bitfield id="LINK_DISABLE" width="1" begin="6" end="6" resetval="0x0" description="LINK_DISABLE is an internally reserved field Do not use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="DLL_LINK_EN" width="1" begin="5" end="5" resetval="0x1" description="DLL Link Enable Enables link initialization When DLL Link Enable =0, the controller does not transmit InitFC DLLPs and does not establish a link Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_4" width="1" begin="4" end="4" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RESET_ASSERT" width="1" begin="3" end="3" resetval="0x0" description="Reset Assert Triggers a recovery and forces the LTSSM to the hot reset state [downstream port only] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LOOPBACK_ENABLE" width="1" begin="2" end="2" resetval="0x0" description="Loopback Enable Turns on loopback For M-PCIe, to force the master to enter Digital Loopback mode, you must set this field to '1' during Configurationstart state[initial discovery/configuration] M-PCIe doesn't support loopback mode from L0 state - only from Configurationstart Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SCRAMBLE_DISABLE" width="1" begin="1" end="1" resetval="0x0" description="Scramble Disable Turns off data scrambling Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VENDOR_SPECIFIC_DLLP_REQ" width="1" begin="0" end="0" resetval="0x0" description="Vendor Specific DLLP Request When software writes a '1' to this bit, the controller transmits the DLLP contained in the VENDOR_SPEC_DLLP field of" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_LANE_SKEW_OFF" acronym="PCIE_RC_LANE_SKEW_OFF" offset="0x1714" width="32" description="Lane Skew Register.">
    <bitfield id="DISABLE_LANE_TO_LANE_DESKEW" width="1" begin="31" end="31" resetval="0x0" description="Disable Lane-to-Lane Deskew Causes the controller to disable the internal Lane-to-Lane deskew logic Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="IMPLEMENT_NUM_LANES" width="4" begin="30" end="27" resetval="0x1" description="Implementation-specific Number of Lanes Set the implementation-specific number of lanes Allowed values are: - 4'b 0000: 1 lane - 4'b 0001: 2 lanes - 4'b 0011: 4 lanes - 4'b 0111: 8 lanes - 4'b 1111: 16 lanes The number of lanes to be used when in Loopback Master The number of lanes programmed must be equal to or less than the valid number of lanes set in LINK_CAPABLE field You must configure this field before initiating Loopback by writing in the LOOPBACK_ENABLE field The controller will transition from LoopbackEntry to LoopbackActive after receiving two consecutive TS1 Ordered Sets with the Loopback bit asserted on the implementation specific number of lanes configured in this field Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LANE_SKEW_OFF_26" width="1" begin="26" end="26" resetval="0x0" description="Reserved Read/Write regsiter for future use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="ACK_NAK_DISABLE" width="1" begin="25" end="25" resetval="0x0" description="Ack/Nak Disable Prevents the controller from sending ACK and NAK DLLPs Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FLOW_CTRL_DISABLE" width="1" begin="24" end="24" resetval="0x0" description="Flow Control Disable Prevents the controller from sending FC DLLPs Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INSERT_LANE_SKEW" width="24" begin="23" end="0" resetval="0x0" description="Insert Lane Skew for Transmit [not supported for x16] Optional feature that causes the controller to insert skew between Lanes for test purposes There are three bits per Lane The value is in units of one symbol time For example, the value 010b for a Lane forces a skew of two symbol times for that Lane The maximum skew value for any Lane is 5 symbol times Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_TIMER_CTRL_MAX_FUNC_NUM_OFF" acronym="PCIE_RC_TIMER_CTRL_MAX_FUNC_NUM_OFF" offset="0x1718" width="32" description="Timer Control and Max Function Number Register.">
    <bitfield id="RSVDP_31" width="1" begin="31" end="31" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="FAST_LINK_SCALING_FACTOR" width="2" begin="30" end="29" resetval="0x0" description="Fast Link Timer Scaling Factor Sets the scaling factor of LTSSM timer when FAST_LINK_MODE field inPCIE_RC_PORT_LINK_CTRL_OFF is set to '1' - 0: Scaling Factor is 1024 [1ms is 1us] - 1: Scaling Factor is 256 [1ms is 4us] - 2: Scaling Factor is 64 [1ms is 16us] - 3: Scaling Factor is 16 [1ms is 64us] Default is set by the hidden configuration parameter DEFAULT_FAST_LINK_SCALING_FACTOR which defaults to '0' Not used for M-PCIe Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="UPDATE_FREQ_TIMER" width="5" begin="28" end="24" resetval="0x0" description="UPDATE_FREQ_TIMER is an internally reserved field Do not use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TIMER_MOD_ACK_NAK" width="5" begin="23" end="19" resetval="0x0" description="Ack Latency Timer Modifier Increases the timer value for the Ack latency timer in increments of 64 clock cycles A value of '0' represents no modification to the timer value For more details, see the ROUND_TRIP_LATENCY_TIME_LIMIT field of the" range="" rwaccess="RW"/>
    <bitfield id="TIMER_MOD_REPLAY_TIMER" width="5" begin="18" end="14" resetval="0x2" description="Replay Timer Limit Modifier Increases the time-out value for the replay timer in increments of 64 clock cycles at Gen1 or Gen2 speed, and in increments of 256 clock cycles at Gen3 speed A value of '0' represents no modification to the timer limit For more details, see the REPLAY_TIME_LIMIT field of the" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_8" width="6" begin="13" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="MAX_FUNC_NUM" width="8" begin="7" end="0" resetval="0x0" description="Maximum function number that can be used in a request Configuration requests targeted at function numbers above this value are returned with UR [unsupported request] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_SYMBOL_TIMER_FILTER_1_OFF" acronym="PCIE_RC_SYMBOL_TIMER_FILTER_1_OFF" offset="0x171C" width="32" description="Symbol Timer Register and Filter Mask 1 Register. The Filter Mask 1 Register modifies the RADM filtering and error handling rules. In each case, '0' applies the associated filtering rule and '1' masks the associated filtering rule.">
    <bitfield id="MASK_RADM_1" width="16" begin="31" end="16" resetval="0x8" description="Filter Mask 1. The Filter Mask 1 Register modifies the RADM filtering and error handling rules. In each case, '0' applies the associated filtering rule and '1' masks the associated filtering rule. [31]: CX_FLT_MASK_RC_CFG_DISCARD 0: For RADM RC filter to not allow CFG transaction being received 1: For RADM RC filter to allow CFG transaction being received [30]: CX_FLT_MASK_RC_IO_DISCARD 0: For RADM RC filter to not allow IO transaction being received 1: For RADM RC filter to allow IO transaction being received [29]: CX_FLT_MASK_MSG_DROP 0: Drop MSG TLP [except for Vendor MSG]. Send decoded message on the SII. 1: Do not Drop MSG [except for Vendor MSG]. Send message TLPs to your application on TRGT1 and send decoded message on the SII. The default for this bit is the inverse of FLT_DROP_MSG. That is, if FLT_DROP_MSG = 1, then the default of this bit is '0' [drop message TLPs]. This bit only controls message TLPs other than Vendor MSGs. Vendor MSGs are controlled by Filter Mask Register 2, bits [1:0]. The controller never passes ATS Invalidate messages to the SII interface regardless of this filter rule setting. The controller passes all ATS Invalidate messages to TRGT1 [or AXI bridge master], as they are too big for the SII. [28]: CX_FLT_MASK_CPL_ECRC_DISCARD Only used when completion queue is advertised with infinite credits and is in store-and-forward mode. 0: Discard completions with ECRC errors 1: Allow completions with ECRC errors to be passed up Reserved field for SW. [27]: CX_FLT_MASK_ECRC_DISCARD 0: Discard TLPs with ECRC errors 1: Allow TLPs with ECRC errors to be passed up [26]: CX_FLT_MASK_CPL_LEN_MATCH 0: Enforce length match for completions; a violation results in cpl_abort, and possibly AER of unexp_cpl_err 1: MASK length match for completions [25]: CX_FLT_MASK_CPL_ATTR_MATCH 0: Enforce attribute match for completions; a violation results in a malformed TLP error, and possibly AER of unexp_cpl_err, cpl_rcvd_ur, cpl_rcvd_ca 1: Mask attribute match for completions [24]: CX_FLT_MASK_CPL_TC_MATCH 0: Enforce Traffic Class match for completions; a violation results in a malformed TLP error, and possibly AER of unexp_cpl_err, cpl_rcvd_ur, cpl_rcvd_ca 1: Mask Traffic Class match for completions [23]: CX_FLT_MASK_CPL_FUNC_MATCH 0: Enforce function match for completions; a violation results in cpl_abort, and possibly AER of unexp_cpl_err, cpl_rcvd_ur, cpl_rcvd_ca 1: Mask function match for completions [22]: CX_FLT_MASK_CPL_REQID_MATCH 0: Enforce Req Id match for completions; a violation result in cpl_abort, and possibly AER of unexp_cpl_err, cpl_rcvd_ur, cpl_rcvd_ca 1: Mask Req Id match for completions [21]: CX_FLT_MASK_CPL_TAGERR_MATCH 0: Enforce Tag Error Rules for completions; a violation result in cpl_abort, and possibly AER of unexp_cpl_err, cpl_rcvd_ur, cpl_rcvd_c&#1072; 1: Mask Tag Error Rules for completions [20]: CX_FLT_MASK_LOCKED_RD_AS_UR 0: Treat locked Read TLPs as UR for EP; Supported for RC 1: Treat locked Read TLPs as Supported for EP; UR for RC [19]: CX_FLT_MASK_CFG_TYPE1_RE_AS_UR 0: Treat CFG type1 TLPs as UR for EP; Supported for RC 1: Treat CFG type1 TLPs as Supported for EP; UR for RC When CX_SRIOV_ENABLE is set then this bit is set to allow the filter to process Type 1 Config requests, if the EP consumes more than one bus number. [18]: CX_FLT_MASK_UR_OUTSIDE_BAR 0: Treat out-of-bar TLPs as UR 1: Do not treat out-of-bar TLPs as UR [17]: CX_FLT_MASK_UR_POIS 0: Treat poisoned request TLPs as UR 1: Do not treat poisoned request TLPs as UR The native controller always passes poisoned completions to your application except when you are using the DMA read channel. [16]: CX_FLT_MASK_UR_FUNC_MISMATCH 0: Treat Function MisMatched TLPs as UR 1: Do not treat Function MisMatched TLPs as UR Note: This register field is sticky." range="" rwaccess="RW"/>
    <bitfield id="DISABLE_FC_WD_TIMER" width="1" begin="15" end="15" resetval="0x0" description="Disable FC Watchdog Timer. Note: This register field is sticky." range="" rwaccess="RW"/>
    <bitfield id="EIDLE_TIMER" width="4" begin="14" end="11" resetval="0x0" description="EIDLE_TIMER is an internally reserved field. Do not use. Note: This register field is sticky." range="" rwaccess="RW"/>
    <bitfield id="SKP_INT_VAL" width="11" begin="10" end="0" resetval="0x500" description="SKP Interval Value. The number of symbol times to wait between transmitting SKP ordered sets. Note that the controller actually waits the number of symbol times in this register plus 1 between transmitting SKP ordered sets. Your application must program this register accordingly. For example, if 1536 were programmed into this register [in a 250 MHz controller], then the controller actually transmits SKP ordered sets once every 1537 symbol times. The value programmed to this register is actually clock ticks and not symbol times. In a 125 MHz controller, programming the value programmed to this register should be scaled down by a factor of 2 [because one clock tick = two symbol times in this case]. Note: This value is not used at Gen3 speed. The skip interval is hardcoded to 370 blocks For M-PCIe configurations, if the 2K_PPM_DISABLED field in the M-PCIe Configuration Attribute is changed, then this field is changed automatically as follows: 2K_PPM_DISABLED = 1: 1280/CX_NB 2K_PPM_DISABLED = 0: 228/CX_NB You need to set this field again, if necessary, when 2K_PPM_DISABLED is changed. Note: This register field is sticky." range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_FILTER_MASK_2_OFF" acronym="PCIE_RC_FILTER_MASK_2_OFF" offset="0x1720" width="32" description="Filter Mask 2 Register. This register modifies the RADM filtering and error handling rules. In each case, '0' applies the associated filtering rule and '1' masks the associated filtering rule.">
    <bitfield id="MASK_RADM_2" width="32" begin="31" end="0" resetval="0x0" description="Filter Mask 2. This field modifies the RADM filtering and error handling rules. In each case, '0' applies the associated filtering rule and '1' masks the associated filtering rule." range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_AMBA_MUL_OB_DECOMP_NP_SUB_REQ_CTRL_OFF" acronym="PCIE_RC_AMBA_MUL_OB_DECOMP_NP_SUB_REQ_CTRL_OFF" offset="0x1724" width="32" description="AMBA Multiple Outbound Decomposed NP SubRequests Control Register.">
    <bitfield id="RSVDP_1" width="31" begin="31" end="1" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="OB_RD_SPLIT_BURST_EN" width="1" begin="0" end="0" resetval="0x1" description="Enable AMBA Multiple Outbound Decomposed NP SubRequests This bit when set to '0' disables the possibility of having multiple outstanding non-posted requests that were derived from decomposition of an outbound AMBA request You should not clear this register unless your application master is requesting an amount of read data greater than Max_Read_Request_Size, and the remote device [or switch] is reordering completions that have different tags Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PL_DEBUG0_OFF" acronym="PCIE_RC_PL_DEBUG0_OFF" offset="0x1728" width="32" description="Debug Register 0">
    <bitfield id="DEB_REG_0" width="32" begin="31" end="0" resetval="0x0" description="This field contains bits [31:0] of the cxpl_debug_info[63:0] bus. The value on cxpl_debug_info[31:0] is as follows:" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PL_DEBUG1_OFF" acronym="PCIE_RC_PL_DEBUG1_OFF" offset="0x172C" width="32" description="Debug Register 1">
    <bitfield id="DEB_REG_1" width="32" begin="31" end="0" resetval="0x0" description="This field contains bits [63:32] of the cxpl_debug_info[63:0] bus. The value on cxpl_debug_info[63:32] is as follows:" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_TX_P_FC_CREDIT_STATUS_OFF" acronym="PCIE_RC_TX_P_FC_CREDIT_STATUS_OFF" offset="0x1730" width="32" description="Transmit Posted FC Credit Status">
    <bitfield id="RSVDP_20" width="12" begin="31" end="20" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="TX_P_HEADER_FC_CREDIT" width="8" begin="19" end="12" resetval="0x0" description="Transmit Posted Header FC Credits The posted Header credits advertised by the receiver at the other end of the link, updated with each UpdateFC DLLP Default value depends on the number of advertised credits for header and data [12'b0, xtlh_xadm_ph_cdts, xtlh_xadm_pd_cdts] When the number of advertised completion credits [both header and data] are infinite, then the default would be [12'b0, 8'hFF, 12'hFFF]" range="" rwaccess="R"/>
    <bitfield id="TX_P_DATA_FC_CREDIT" width="12" begin="11" end="0" resetval="0x0" description="Transmit Posted Data FC Credits The posted Data credits advertised by the receiver at the other end of the link, updated with each UpdateFC DLLP Default value depends on the number of advertised credits for header and data [12'b0, xtlh_xadm_ph_cdts, xtlh_xadm_pd_cdts] When the number of advertised completion credits [both header and data] are infinite, then the default would be [12'b0, 8'hFF, 12'hFFF]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_TX_NP_FC_CREDIT_STATUS_OFF" acronym="PCIE_RC_TX_NP_FC_CREDIT_STATUS_OFF" offset="0x1734" width="32" description="Transmit Non-Posted FC Credit Status">
    <bitfield id="RSVDP_20" width="12" begin="31" end="20" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="TX_NP_HEADER_FC_CREDIT" width="8" begin="19" end="12" resetval="0x0" description="Transmit Non-Posted Header FC Credits The non-posted Header credits advertised by the receiver at the other end of the link, updated with each UpdateFC DLLP Default value depends on the number of advertised credits for header and data [12'b0, xtlh_xadm_nph_cdts, xtlh_xadm_npd_cdts] When the number of advertised completion credits [both header and data] are infinite, then the default would be [12'b0, 8'hFF, 12'hFFF]" range="" rwaccess="R"/>
    <bitfield id="TX_NP_DATA_FC_CREDIT" width="12" begin="11" end="0" resetval="0x0" description="Transmit Non-Posted Data FC Credits The non-posted Data credits advertised by the receiver at the other end of the link, updated with each UpdateFC DLLP Default value depends on the number of advertised credits for header and data [12'b0, xtlh_xadm_nph_cdts, xtlh_xadm_npd_cdts] When the number of advertised completion credits [both header and data] are infinite, then the default would be [12'b0, 8'hFF, 12'hFFF]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_TX_CPL_FC_CREDIT_STATUS_OFF" acronym="PCIE_RC_TX_CPL_FC_CREDIT_STATUS_OFF" offset="0x1738" width="32" description="Transmit Completion FC Credit Status">
    <bitfield id="RSVDP_20" width="12" begin="31" end="20" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="TX_CPL_HEADER_FC_CREDIT" width="8" begin="19" end="12" resetval="0x0" description="Transmit Completion Header FC Credits The Completion Header credits advertised by the receiver at the other end of the link, updated with each UpdateFC DLLP Default value depends on the number of advertised credits for header and data [12'b0, xtlh_xadm_cplh_cdts, xtlh_xadm_cpld_cdts] When the number of advertised completion credits [both header and data] are infinite, then the default would be [12'b0, 8'hFF, 12'hFFF]" range="" rwaccess="R"/>
    <bitfield id="TX_CPL_DATA_FC_CREDIT" width="12" begin="11" end="0" resetval="0x0" description="Transmit Completion Data FC Credits The Completion Data credits advertised by the receiver at the other end of the link, updated with each UpdateFC DLLP Default value depends on the number of advertised credits for header and data [12'b0, xtlh_xadm_cplh_cdts, xtlh_xadm_cpld_cdts] When the number of advertised completion credits [both header and data] are infinite, then the default would be [12'b0, 8'hFF, 12'hFFF]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_QUEUE_STATUS_OFF" acronym="PCIE_RC_QUEUE_STATUS_OFF" offset="0x173C" width="32" description="Queue Status">
    <bitfield id="TIMER_MOD_FLOW_CONTROL_EN" width="1" begin="31" end="31" resetval="0x0" description="FC Latency Timer Override Enable When this bit is set, the value from the 'FC Latency Timer Override Value' field in this register will override the FC latency timer value that the controller calculates according to the PCIe specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_29" width="2" begin="30" end="29" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="TIMER_MOD_FLOW_CONTROL" width="13" begin="28" end="16" resetval="0x0" description="FC Latency Timer Override Value When you set the 'FC Latency Timer Override Enable' in this register, the value in this field will override the FC latency timer value that the controller calculates according to the PCIe specification Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RX_SERIALIZATION_Q_READ_ERR" width="1" begin="15" end="15" resetval="0x0" description="Receive Serialization Read Error Indicates the serialization queue has attempted to read an incorrectly formatted TLP" range="" rwaccess="RW1C"/>
    <bitfield id="RX_SERIALIZATION_Q_WRITE_ERR" width="1" begin="14" end="14" resetval="0x0" description="Receive Serialization Queue Write Error Indicates insufficient buffer space available to write to the serialization queue" range="" rwaccess="RW1C"/>
    <bitfield id="RX_SERIALIZATION_Q_NON_EMPTY" width="1" begin="13" end="13" resetval="0x0" description="Receive Serialization Queue Not Empty Indicates there is data in the serialization queue" range="" rwaccess="R"/>
    <bitfield id="RSVDP_4" width="9" begin="12" end="4" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RX_QUEUE_OVERFLOW" width="1" begin="3" end="3" resetval="0x0" description="Receive Credit Queue Overflow Indicates insufficient buffer space available to write to the P/NP/CPL credit queue" range="" rwaccess="RW1C"/>
    <bitfield id="RX_QUEUE_NON_EMPTY" width="1" begin="2" end="2" resetval="0x0" description="Receive Credit Queue Not Empty Indicates there is data in one or more of the receive buffers" range="" rwaccess="R"/>
    <bitfield id="TX_RETRY_BUFFER_NE" width="1" begin="1" end="1" resetval="0x0" description="Transmit Retry Buffer Not Empty Indicates that there is data in the transmit retry buffer" range="" rwaccess="R"/>
    <bitfield id="RX_TLP_FC_CREDIT_NON_RETURN" width="1" begin="0" end="0" resetval="0x0" description="Received TLP FC Credits Not Returned Indicates that the controller has received a TLP but has not yet sent an UpdateFC DLLP indicating that the credits for that TLP have been restored by the receiver at the other end of the link" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC_TX_ARBI_1_OFF" acronym="PCIE_RC_VC_TX_ARBI_1_OFF" offset="0x1740" width="32" description="VC Transmit Arbitration Register 1">
    <bitfield id="WRR_WEIGHT_VC_3" width="8" begin="31" end="24" resetval="0x0" description="WRR Weight for VC3 Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="WRR_WEIGHT_VC_2" width="8" begin="23" end="16" resetval="0x0" description="WRR Weight for VC2 Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="WRR_WEIGHT_VC_1" width="8" begin="15" end="8" resetval="0x0" description="WRR Weight for VC1 Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="WRR_WEIGHT_VC_0" width="8" begin="7" end="0" resetval="0xF" description="WRR Weight for VC0 Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC_TX_ARBI_2_OFF" acronym="PCIE_RC_VC_TX_ARBI_2_OFF" offset="0x1744" width="32" description="VC Transmit Arbitration Register 2">
    <bitfield id="WRR_WEIGHT_VC_7" width="8" begin="31" end="24" resetval="0x0" description="WRR Weight for VC7 Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="WRR_WEIGHT_VC_6" width="8" begin="23" end="16" resetval="0x0" description="WRR Weight for VC6 Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="WRR_WEIGHT_VC_5" width="8" begin="15" end="8" resetval="0x0" description="WRR Weight for VC5 Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
    <bitfield id="WRR_WEIGHT_VC_4" width="8" begin="7" end="0" resetval="0x0" description="WRR Weight for VC4 Note: The access attributes of this field are as follows: - Dbi: R" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC0_P_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC0_P_RX_Q_CTRL_OFF" offset="0x1748" width="32" description="Segmented-Buffer VC0 Posted Receive Queue Control.">
    <bitfield id="VC_ORDERING_RX_Q" width="1" begin="31" end="31" resetval="0x0" description="VC Ordering for Receive Queues Determines the VC ordering rule for the receive queues, used only in the segmented-buffer configuration: - 1: Strict ordering, higher numbered VCs have higher priority - 0: Round robin Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TLP_TYPE_ORDERING_VC0" width="1" begin="30" end="30" resetval="0x1" description="TLP Type Ordering for VC0 Determines the TLP type ordering rule for VC0 receive queues, used only in the segmented-buffer configuration: - 1: PCIe ordering rules [recommended] - 0: Strict ordering: posted, completion, then non-posted Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="29" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_P_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC0 Scale Posted Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_P_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC0 Scale Posted Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_P_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x1" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_P_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x47" description="VC0 Posted Header Credits The number of initial posted header credits for VC0, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC0_P_DATA_CREDIT" width="12" begin="11" end="0" resetval="0xA0" description="VC0 Posted Data Credits The number of initial posted data credits for VC0, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC0_NP_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC0_NP_RX_Q_CTRL_OFF" offset="0x174C" width="32" description="Segmented-Buffer VC0 Non-Posted Receive Queue Control.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_NP_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC0 Scale Non-Posted Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_NP_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC0 Scale Non-Posted Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_NP_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x1" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_NP_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x47" description="VC0 Non-Posted Header Credits The number of initial non-posted header credits for VC0, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC0_NP_DATA_CREDIT" width="12" begin="11" end="0" resetval="0x3B" description="VC0 Non-Posted Data Credits The number of initial non-posted data credits for VC0, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC0_CPL_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC0_CPL_RX_Q_CTRL_OFF" offset="0x1750" width="32" description="Segmented-Buffer VC0 Completion Receive Queue Control.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_CPL_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC0 Scale CPL Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_CPL_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC0 Scale CPL Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_CPL_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x4" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC0_CPL_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x0" description="VC0 Completion Header Credits The number of initial Completion header credits for VC0, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC0_CPL_DATA_CREDIT" width="12" begin="11" end="0" resetval="0x0" description="VC0 Completion Data Credits The number of initial Completion data credits for VC0, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC1_P_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC1_P_RX_Q_CTRL_OFF" offset="0x1754" width="32" description="Segmented-Buffer VC#i Posted Receive Queue Control.">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TLP_TYPE_ORDERING_VC1" width="1" begin="30" end="30" resetval="0x1" description="TLP Type Ordering for VC#i Determines the TLP type ordering rule for VC#i receive queues, used only in the segmented-buffer configuration: - 1: PCIe ordering rules [recommended] - 0: Strict ordering: posted, completion, then non-posted Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="29" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_P_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC1 Scale Posted Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_P_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC1 Scale Posted Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_P_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x1" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_P_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x47" description="VC1 Posted Header Credits The number of initial posted header credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC1_P_DATA_CREDIT" width="12" begin="11" end="0" resetval="0xA0" description="VC1 Posted Data Credits The number of initial posted data credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC1_NP_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC1_NP_RX_Q_CTRL_OFF" offset="0x1758" width="32" description="Segmented-Buffer VC#i Non-Posted Receive Queue Control.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_NP_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC1 Scale Non-Posted Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_NP_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC1 Scale Non-Posted Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_NP_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x1" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_NP_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x47" description="VC#i Non-Posted Header Credits The number of initial non-posted header credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC1_NP_DATA_CREDIT" width="12" begin="11" end="0" resetval="0x3B" description="VC#i Non-Posted Data Credits The number of initial non-posted data credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC1_CPL_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC1_CPL_RX_Q_CTRL_OFF" offset="0x175C" width="32" description="Segmented-Buffer VC#i Completion Receive Queue Control.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_CPL_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC1 Scale CPL Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_CPL_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC1 Scale CPL Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_CPL_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x4" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC1_CPL_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x0" description="VC#i Completion Header Credits The number of initial Completion header credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC1_CPL_DATA_CREDIT" width="12" begin="11" end="0" resetval="0x0" description="VC#i Completion Data Credits The number of initial Completion data credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC2_P_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC2_P_RX_Q_CTRL_OFF" offset="0x1760" width="32" description="Segmented-Buffer VC#i Posted Receive Queue Control.">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TLP_TYPE_ORDERING_VC2" width="1" begin="30" end="30" resetval="0x1" description="TLP Type Ordering for VC#i Determines the TLP type ordering rule for VC#i receive queues, used only in the segmented-buffer configuration: - 1: PCIe ordering rules [recommended] - 0: Strict ordering: posted, completion, then non-posted Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="29" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_P_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC2 Scale Posted Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_P_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC2 Scale Posted Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_P_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x1" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_P_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x47" description="VC2 Posted Header Credits The number of initial posted header credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC2_P_DATA_CREDIT" width="12" begin="11" end="0" resetval="0xA0" description="VC2 Posted Data Credits The number of initial posted data credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC2_NP_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC2_NP_RX_Q_CTRL_OFF" offset="0x1764" width="32" description="Segmented-Buffer VC#i Non-Posted Receive Queue Control.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_NP_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC2 Scale Non-Posted Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_NP_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC2 Scale Non-Posted Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_NP_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x1" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_NP_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x47" description="VC#i Non-Posted Header Credits The number of initial non-posted header credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC2_NP_DATA_CREDIT" width="12" begin="11" end="0" resetval="0x3B" description="VC#i Non-Posted Data Credits The number of initial non-posted data credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC2_CPL_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC2_CPL_RX_Q_CTRL_OFF" offset="0x1768" width="32" description="Segmented-Buffer VC#i Completion Receive Queue Control.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_CPL_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC2 Scale CPL Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_CPL_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC2 Scale CPL Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_CPL_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x4" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC2_CPL_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x0" description="VC#i Completion Header Credits The number of initial Completion header credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC2_CPL_DATA_CREDIT" width="12" begin="11" end="0" resetval="0x0" description="VC#i Completion Data Credits The number of initial Completion data credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC3_P_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC3_P_RX_Q_CTRL_OFF" offset="0x176C" width="32" description="Segmented-Buffer VC#i Posted Receive Queue Control.">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TLP_TYPE_ORDERING_VC3" width="1" begin="30" end="30" resetval="0x1" description="TLP Type Ordering for VC#i Determines the TLP type ordering rule for VC#i receive queues, used only in the segmented-buffer configuration: - 1: PCIe ordering rules [recommended] - 0: Strict ordering: posted, completion, then non-posted Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="29" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_P_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC3 Scale Posted Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_P_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC3 Scale Posted Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_P_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x1" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_P_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x47" description="VC3 Posted Header Credits The number of initial posted header credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC3_P_DATA_CREDIT" width="12" begin="11" end="0" resetval="0xA0" description="VC3 Posted Data Credits The number of initial posted data credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC3_NP_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC3_NP_RX_Q_CTRL_OFF" offset="0x1770" width="32" description="Segmented-Buffer VC#i Non-Posted Receive Queue Control.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_NP_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC3 Scale Non-Posted Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_NP_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC3 Scale Non-Posted Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_NP_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x1" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_NP_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x47" description="VC#i Non-Posted Header Credits The number of initial non-posted header credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC3_NP_DATA_CREDIT" width="12" begin="11" end="0" resetval="0x3B" description="VC#i Non-Posted Data Credits The number of initial non-posted data credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_VC3_CPL_RX_Q_CTRL_OFF" acronym="PCIE_RC_VC3_CPL_RX_Q_CTRL_OFF" offset="0x1774" width="32" description="Segmented-Buffer VC#i Completion Receive Queue Control.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_CPL_DATA_SCALE" width="2" begin="27" end="26" resetval="0x1" description="VC3 Scale CPL Data Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_CPL_HDR_SCALE" width="2" begin="25" end="24" resetval="0x1" description="VC3 Scale CPL Header Credites Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_CPL_TLP_Q_MODE" width="3" begin="23" end="21" resetval="0x4" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="VC3_CPL_HEADER_CREDIT" width="8" begin="19" end="12" resetval="0x0" description="VC#i Completion Header Credits The number of initial Completion header credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="VC3_CPL_DATA_CREDIT" width="12" begin="11" end="0" resetval="0x0" description="VC#i Completion Data Credits The number of initial Completion data credits for VC#i, used only in the segmented-buffer configuration Note: The access attributes of this field are as follows: - Dbi: R [sticky] Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_GEN2_CTRL_OFF" acronym="PCIE_RC_GEN2_CTRL_OFF" offset="0x180C" width="32" description="Link Width and Speed Change Control Register.">
    <bitfield id="RSVDP_22" width="10" begin="31" end="22" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="GEN1_EI_INFERENCE" width="1" begin="21" end="21" resetval="0x0" description="Electrical Idle Inference Mode at Gen1 Rate Programmable mode to determine inferred electrical idle [EI] in RecoverySpeed or LoopbackActive [as slave] state at Gen1 speed by looking for a '1' value on RxElecIdle instead of looking for a '0' on RxValid If the PHY fails to deassert the RxValid signal in RecoverySpeed or LoopbackActive [because of corrupted EIOS for example], then EI cannot be inferred successfully in the controller by just detecting the condition RxValid= 0 - 0: Use RxElecIdle signal to infer Electrical Idle - 1: Use RxValid signal to infer Electrical Idle Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SEL_DEEMPHASIS" width="1" begin="20" end="20" resetval="0x0" description="Used to set the de-emphasis level for upstream ports This bit selects the level of de-emphasis the link operates at - 0: -6 dB - 1: -35 dB This field is reserved [fixed to '0'] for M-PCIe Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CONFIG_TX_COMP_RX" width="1" begin="19" end="19" resetval="0x0" description="Config Tx Compliance Receive Bit When set to 1, signals LTSSM to transmit TS ordered sets with the compliance receive bit assert [equal to '1'] This field is reserved [fixed to '0'] for M-PCIe Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CONFIG_PHY_TX_CHANGE" width="1" begin="18" end="18" resetval="0x0" description="Config PHY Tx Swing Controls the PHY transmitter voltage swing level The controller drives the mac_phy_txswing output from this register bit field - 0: Full Swing - 1: Low Swing This field is reserved [fixed to '0'] for M-PCIe Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="DIRECT_SPEED_CHANGE" width="1" begin="17" end="17" resetval="0x0" description="Directed Speed Change Writing '1' to this field instructs the LTSSM to initiate a speed change to Gen2 or Gen3 after the link is initialized at Gen1 speed When the speed change occurs, the controller will clear the contents of this field and a read to this field by your software will return a '0' To manually initiate the speed change: - Write to PCIE_RC_LINK_CONTROL2_LINK_STATUS2_REG PCIE_CAP_TARGET_LINK_SPEED in the local device - Deassert this field - Assert this field If you set the default of this field using the DEFAULT_GEN2_SPEED_CHANGE configuration parameter to '1', then the speed change is initiated automatically after link up, and the controller clears the contents of this field If you want to prevent this automatic speed change, then write a lower speed value to the Target Link Speed field of the Link Control 2 register [LINK_CONTROL2_LINK_STATUS2_OFF PCIE_CAP_TARGET_LINK_SPEED] through the DBI before link up This field is reserved [fixed to '0'] for M-PCIe Note: The access attributes of this field are as follows: - Dbi: R/W" range="" rwaccess="RW"/>
    <bitfield id="AUTO_LANE_FLIP_CTRL_EN" width="1" begin="16" end="16" resetval="0x1" description="Enable Auto flipping of the lanes You must set the CX_AUTO_LANE_FLIP_CTRL_EN configuration parameter to include the hardware for this feature in the controller This field is reserved [fixed to '0'] for M-PCIe Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="PRE_DET_LANE" width="3" begin="15" end="13" resetval="0x0" description="Predetermined Lane for Auto Flip This field defines which physical lane is connected to logical Lane0 by the flip operation performed in Detect Allowed values are: - 3'b 000: Connect logical Lane0 to physical lane 0 or CX_NL-1 or CX_NL/ 2-1 or CX_NL/ 4-1 or CX_NL/ 8-1, depending on which lane is detected - 3'b 001: Connect logical Lane0 to physical lane 1 - 3'b 010: Connect logical Lane0 to physical lane 3 - 3'b 011: Connect logical Lane0 to physical lane 7 - 3'b 100: Connect logical Lane0 to physical lane 15 This field is used to restrict the receiver detect procedure to a particular lane when the default detect and polling procedure performed on all lanes cannot be successful A notable example of when it is useful to program this field to a value different from the default, is when a lane is asymmetrically broken, that is, it is detected in Detect LTSSM state but it cannot exit Electrical Idle in Polling LTSSM state Note: This field is reserved [fixed to '0'] for M-PCIe Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="NUM_OF_LANES" width="5" begin="12" end="8" resetval="0x2" description="Predetermined Number of Lanes Defines the number of lanes which are connected and not bad Used to limit the effective link width to ignore 'broken' or 'unused' lanes that detect a receiver Indicates the number of lanes to check for exit from Electrical Idle in PollingActive and L2Idle It is possible that the LTSSM might detect a receiver on a bad or broken lane during the Detect Substate However, it is also possible that such a lane might also fail to exit Electrical Idle and therefore prevent a valid link from being configured This value is referred to as the 'Predetermined Number of Lanes' in section 42621 of the PCI Express Base 30 Specification, revision 10 Encoding is as follows: - 0x 01: 1 lane - 0x 02: 2 lanes - 0x 03: 3 lanes - When you have unused lanes in your system, then you must change the value in this register to reflect the number of lanes You must also change the value in the 'Link Mode Enable' field of PCIE_RC_PORT_LINK_CTRL_OFF The value in this register is normally the same as the encoded value in PCIE_RC_PORT_LINK_CTRL_OFF If you find that one of your used lanes is bad then you must reduce the value in this register This field is reserved [fixed to '0'] for M-PCIe Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FAST_TRAINING_SEQ" width="8" begin="7" end="0" resetval="0xF0" description="Sets the Number of Fast Training Sequences [N_FTS] that the controller advertises as its N_FTS during Gen2 or Gen3 link training This value is used to inform the link partner about the PHY's ability to recover synchronization after a low power state Do not set N_FTS to zero doing so can cause the LTSSM to go into the recovery state when exiting from L0s This field is reserved [fixed to '0'] for M-PCIe Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PHY_STATUS_OFF" acronym="PCIE_RC_PHY_STATUS_OFF" offset="0x1810" width="32" description="PHY Status Register. Memory mapped register from phy_cfg_status GPIO input pins.">
    <bitfield id="PHY_STATUS" width="32" begin="31" end="0" resetval="0x0" description="PHY Status Data received directly from the phy_cfg_status bus These is a GPIO register reflecting the values on the static phy_cfg_status input signals The usage is left completely to the user and does not in any way influence controller functionality You can use it for any static sideband status signalling requirements that you have for your PHY This field is reserved [fixed to '0'] for M-PCIe Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PHY_CONTROL_OFF" acronym="PCIE_RC_PHY_CONTROL_OFF" offset="0x1814" width="32" description="PHY Control Register. Memory mapped register to cfg_phy_control GPIO output pins.">
    <bitfield id="PHY_CONTROL" width="32" begin="31" end="0" resetval="0x0" description="PHY Control Data sent directly to the cfg_phy_control bus These is a GPIO register driving the values on the static cfg_phy_control output signals The usage is left completely to the user and does not in any way influence controller functionality You can use it for any static sideband control signalling requirements that you have for your PHY This field is reserved [fixed to '0'] for M-PCIe Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_TRGT_MAP_CTRL_OFF" acronym="PCIE_RC_TRGT_MAP_CTRL_OFF" offset="0x181C" width="32" description="Programmable Target Map Control Register.">
    <bitfield id="RESERVED" width="11" begin="31" end="21" resetval="0x0" description="Reserved Note: The access attributes of this field are as follows: - Dbi: R [sticky]" range="" rwaccess="R"/>
    <bitfield id="TARGET_MAP_INDEX" width="5" begin="20" end="16" resetval="0x0" description="The number of the PF Function on which the Target Values are set This register does not respect the Byte Enable setting any write will affect all register bits" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0x0" description="Reserved Note: The access attributes of this field are as follows: - Dbi: R [sticky]" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="6" begin="12" end="7" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TARGET_MAP_ROM" width="1" begin="6" end="6" resetval="0x1" description="Target Value for the ROM page of the PF Function selected by the index number This register does not respect the Byte Enable setting any write will affect all register bits" range="" rwaccess="RW"/>
    <bitfield id="TARGET_MAP_PF" width="6" begin="5" end="0" resetval="0x0" description="Target Values for each BAR on the PF Function selected by the index number This register does not respect the Byte Enable setting any write will affect all register bits" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_ADDR_OFF" acronym="PCIE_RC_MSI_CTRL_ADDR_OFF" offset="0x1820" width="32" description="Integrated MSI Reception Module (iMRM) Address Register.">
    <bitfield id="MSI_CTRL_ADDR" width="32" begin="31" end="0" resetval="0x0" description="Integrated MSI Reception Module Address System specified address for MSI memory write transaction termination Within the AXI Bridge, every received Memory Write request is examined to see if it targets the MSI Address that has been specified in this register and also to see if it satisfies the definition of an MSI interrupt request When these conditions are satisfied the Memory Write request is marked as an MSI request Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_UPPER_ADDR_OFF" acronym="PCIE_RC_MSI_CTRL_UPPER_ADDR_OFF" offset="0x1824" width="32" description="Integrated MSI Reception Module Upper Address Register.">
    <bitfield id="MSI_CTRL_UPPER_ADDR" width="32" begin="31" end="0" resetval="0x0" description="Integrated MSI Reception Module Upper Address System specified upper address for MSI memory write transaction termination Allows functions to support a 64-bit MSI address Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_0_EN_OFF" acronym="PCIE_RC_MSI_CTRL_INT_0_EN_OFF" offset="0x1828" width="32" description="Integrated MSI Reception Module Interrupt#i Enable Register.">
    <bitfield id="MSI_CTRL_INT_0_EN" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Enable Specifies which interrupts are enabled When an MSI is received from a disabled interrupt, no status bit gets set in MSI controller interrupt status register Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_0_MASK_OFF" acronym="PCIE_RC_MSI_CTRL_INT_0_MASK_OFF" offset="0x182C" width="32" description="Integrated MSI Reception Module Interrupt#i Mask Register.">
    <bitfield id="MSI_CTRL_INT_0_MASK" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Mask Allows enabled interrupts to be masked When an MSI is received for a masked interrupt, the corresponding status bit gets set in the interrupt status register but the msi_ctrl_int output is not set HIGH Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_0_STATUS_OFF" acronym="PCIE_RC_MSI_CTRL_INT_0_STATUS_OFF" offset="0x1830" width="32" description="Integrated MSI Reception Module Interrupt#i Status Register.">
    <bitfield id="MSI_CTRL_INT_0_STATUS" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Status When an MSI is detected for EP#i, one bit in this register is set The decoding of the data payload of the MSI Memory Write request determines which bit gets set A status is bit is cleared by writing a 1 to the bit Each bit corresponds to a single MSI Interrupt Vector" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_1_EN_OFF" acronym="PCIE_RC_MSI_CTRL_INT_1_EN_OFF" offset="0x1834" width="32" description="Integrated MSI Reception Module Interrupt#i Enable Register.">
    <bitfield id="MSI_CTRL_INT_1_EN" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Enable Specifies which interrupts are enabled When an MSI is received from a disabled interrupt, no status bit gets set in MSI controller interrupt status register Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_1_MASK_OFF" acronym="PCIE_RC_MSI_CTRL_INT_1_MASK_OFF" offset="0x1838" width="32" description="Integrated MSI Reception Module Interrupt#i Mask Register.">
    <bitfield id="MSI_CTRL_INT_1_MASK" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Mask Allows enabled interrupts to be masked When an MSI is received for a masked interrupt, the corresponding status bit gets set in the interrupt status register but the msi_ctrl_int output is not set HIGH Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_1_STATUS_OFF" acronym="PCIE_RC_MSI_CTRL_INT_1_STATUS_OFF" offset="0x183C" width="32" description="Integrated MSI Reception Module Interrupt#i Status Register.">
    <bitfield id="MSI_CTRL_INT_1_STATUS" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Status When an MSI is detected for EP#i, one bit in this register is set The decoding of the data payload of the MSI Memory Write request determines which bit gets set A status is bit is cleared by writing a 1 to the bit Each bit corresponds to a single MSI Interrupt Vector" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_2_EN_OFF" acronym="PCIE_RC_MSI_CTRL_INT_2_EN_OFF" offset="0x1840" width="32" description="Integrated MSI Reception Module Interrupt#i Enable Register.">
    <bitfield id="MSI_CTRL_INT_2_EN" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Enable Specifies which interrupts are enabled When an MSI is received from a disabled interrupt, no status bit gets set in MSI controller interrupt status register Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_2_MASK_OFF" acronym="PCIE_RC_MSI_CTRL_INT_2_MASK_OFF" offset="0x1844" width="32" description="Integrated MSI Reception Module Interrupt#i Mask Register.">
    <bitfield id="MSI_CTRL_INT_2_MASK" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Mask Allows enabled interrupts to be masked When an MSI is received for a masked interrupt, the corresponding status bit gets set in the interrupt status register but the msi_ctrl_int output is not set HIGH Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_2_STATUS_OFF" acronym="PCIE_RC_MSI_CTRL_INT_2_STATUS_OFF" offset="0x1848" width="32" description="Integrated MSI Reception Module Interrupt#i Status Register.">
    <bitfield id="MSI_CTRL_INT_2_STATUS" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Status When an MSI is detected for EP#i, one bit in this register is set The decoding of the data payload of the MSI Memory Write request determines which bit gets set A status is bit is cleared by writing a 1 to the bit Each bit corresponds to a single MSI Interrupt Vector" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_3_EN_OFF" acronym="PCIE_RC_MSI_CTRL_INT_3_EN_OFF" offset="0x184C" width="32" description="Integrated MSI Reception Module Interrupt#i Enable Register.">
    <bitfield id="MSI_CTRL_INT_3_EN" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Enable Specifies which interrupts are enabled When an MSI is received from a disabled interrupt, no status bit gets set in MSI controller interrupt status register Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_3_MASK_OFF" acronym="PCIE_RC_MSI_CTRL_INT_3_MASK_OFF" offset="0x1850" width="32" description="Integrated MSI Reception Module Interrupt#i Mask Register.">
    <bitfield id="MSI_CTRL_INT_3_MASK" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Mask Allows enabled interrupts to be masked When an MSI is received for a masked interrupt, the corresponding status bit gets set in the interrupt status register but the msi_ctrl_int output is not set HIGH Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_3_STATUS_OFF" acronym="PCIE_RC_MSI_CTRL_INT_3_STATUS_OFF" offset="0x1854" width="32" description="Integrated MSI Reception Module Interrupt#i Status Register.">
    <bitfield id="MSI_CTRL_INT_3_STATUS" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Status When an MSI is detected for EP#i, one bit in this register is set The decoding of the data payload of the MSI Memory Write request determines which bit gets set A status is bit is cleared by writing a 1 to the bit Each bit corresponds to a single MSI Interrupt Vector" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_4_EN_OFF" acronym="PCIE_RC_MSI_CTRL_INT_4_EN_OFF" offset="0x1858" width="32" description="Integrated MSI Reception Module Interrupt#i Enable Register.">
    <bitfield id="MSI_CTRL_INT_4_EN" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Enable Specifies which interrupts are enabled When an MSI is received from a disabled interrupt, no status bit gets set in MSI controller interrupt status register Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_4_MASK_OFF" acronym="PCIE_RC_MSI_CTRL_INT_4_MASK_OFF" offset="0x185C" width="32" description="Integrated MSI Reception Module Interrupt#i Mask Register.">
    <bitfield id="MSI_CTRL_INT_4_MASK" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Mask Allows enabled interrupts to be masked When an MSI is received for a masked interrupt, the corresponding status bit gets set in the interrupt status register but the msi_ctrl_int output is not set HIGH Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_4_STATUS_OFF" acronym="PCIE_RC_MSI_CTRL_INT_4_STATUS_OFF" offset="0x1860" width="32" description="Integrated MSI Reception Module Interrupt#i Status Register.">
    <bitfield id="MSI_CTRL_INT_4_STATUS" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Status When an MSI is detected for EP#i, one bit in this register is set The decoding of the data payload of the MSI Memory Write request determines which bit gets set A status is bit is cleared by writing a 1 to the bit Each bit corresponds to a single MSI Interrupt Vector" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_5_EN_OFF" acronym="PCIE_RC_MSI_CTRL_INT_5_EN_OFF" offset="0x1864" width="32" description="Integrated MSI Reception Module Interrupt#i Enable Register.">
    <bitfield id="MSI_CTRL_INT_5_EN" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Enable Specifies which interrupts are enabled When an MSI is received from a disabled interrupt, no status bit gets set in MSI controller interrupt status register Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_5_MASK_OFF" acronym="PCIE_RC_MSI_CTRL_INT_5_MASK_OFF" offset="0x1868" width="32" description="Integrated MSI Reception Module Interrupt#i Mask Register.">
    <bitfield id="MSI_CTRL_INT_5_MASK" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Mask Allows enabled interrupts to be masked When an MSI is received for a masked interrupt, the corresponding status bit gets set in the interrupt status register but the msi_ctrl_int output is not set HIGH Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_5_STATUS_OFF" acronym="PCIE_RC_MSI_CTRL_INT_5_STATUS_OFF" offset="0x186C" width="32" description="Integrated MSI Reception Module Interrupt#i Status Register.">
    <bitfield id="MSI_CTRL_INT_5_STATUS" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Status When an MSI is detected for EP#i, one bit in this register is set The decoding of the data payload of the MSI Memory Write request determines which bit gets set A status is bit is cleared by writing a 1 to the bit Each bit corresponds to a single MSI Interrupt Vector" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_6_EN_OFF" acronym="PCIE_RC_MSI_CTRL_INT_6_EN_OFF" offset="0x1870" width="32" description="Integrated MSI Reception Module Interrupt#i Enable Register.">
    <bitfield id="MSI_CTRL_INT_6_EN" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Enable Specifies which interrupts are enabled When an MSI is received from a disabled interrupt, no status bit gets set in MSI controller interrupt status register Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_6_MASK_OFF" acronym="PCIE_RC_MSI_CTRL_INT_6_MASK_OFF" offset="0x1874" width="32" description="Integrated MSI Reception Module Interrupt#i Mask Register.">
    <bitfield id="MSI_CTRL_INT_6_MASK" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Mask Allows enabled interrupts to be masked When an MSI is received for a masked interrupt, the corresponding status bit gets set in the interrupt status register but the msi_ctrl_int output is not set HIGH Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_6_STATUS_OFF" acronym="PCIE_RC_MSI_CTRL_INT_6_STATUS_OFF" offset="0x1878" width="32" description="Integrated MSI Reception Module Interrupt#i Status Register.">
    <bitfield id="MSI_CTRL_INT_6_STATUS" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Status When an MSI is detected for EP#i, one bit in this register is set The decoding of the data payload of the MSI Memory Write request determines which bit gets set A status is bit is cleared by writing a 1 to the bit Each bit corresponds to a single MSI Interrupt Vector" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_7_EN_OFF" acronym="PCIE_RC_MSI_CTRL_INT_7_EN_OFF" offset="0x187C" width="32" description="Integrated MSI Reception Module Interrupt#i Enable Register.">
    <bitfield id="MSI_CTRL_INT_7_EN" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Enable Specifies which interrupts are enabled When an MSI is received from a disabled interrupt, no status bit gets set in MSI controller interrupt status register Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_7_MASK_OFF" acronym="PCIE_RC_MSI_CTRL_INT_7_MASK_OFF" offset="0x1880" width="32" description="Integrated MSI Reception Module Interrupt#i Mask Register.">
    <bitfield id="MSI_CTRL_INT_7_MASK" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Mask Allows enabled interrupts to be masked When an MSI is received for a masked interrupt, the corresponding status bit gets set in the interrupt status register but the msi_ctrl_int output is not set HIGH Each bit corresponds to a single MSI Interrupt Vector Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSI_CTRL_INT_7_STATUS_OFF" acronym="PCIE_RC_MSI_CTRL_INT_7_STATUS_OFF" offset="0x1884" width="32" description="Integrated MSI Reception Module Interrupt#i Status Register.">
    <bitfield id="MSI_CTRL_INT_7_STATUS" width="32" begin="31" end="0" resetval="0x0" description="MSI Interrupt#i Status When an MSI is detected for EP#i, one bit in this register is set The decoding of the data payload of the MSI Memory Write request determines which bit gets set A status is bit is cleared by writing a 1 to the bit Each bit corresponds to a single MSI Interrupt Vector" range="" rwaccess="RW1C"/>
  </register>
  <register id="PCIE_RC_MSI_GPIO_IO_OFF" acronym="PCIE_RC_MSI_GPIO_IO_OFF" offset="0x1888" width="32" description="Integrated MSI Reception Module General Purpose IO Register.">
    <bitfield id="MSI_GPIO_REG" width="32" begin="31" end="0" resetval="0x0" description="MSI GPIO Register The contents of this register drives the top-level GPIO msi_ctrl_io[31:0] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_CLOCK_GATING_CTRL_OFF" acronym="PCIE_RC_CLOCK_GATING_CTRL_OFF" offset="0x188C" width="32" description="RADM clock gating enable control register. Using this register you can disable the RADM clock gating feature. The DWC_pcie_clk_rst.v modules uses the en_radm_clk_g output to gate core_clk and create the radm_clk_g clock input. The controller de-asserts the en_radm_clk_g output when there is no Rx traffic, Rx queues and pre/post-queue pipelines are empty, RADM completion LUT is empty, and there are no FLR actions pending. You must set the RADM_CLK_GATING_EN field to enable this functionality; otherwise the en_radm_clk_g output will always be set to '1'.">
    <bitfield id="RSVDP_1" width="31" begin="31" end="1" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RADM_CLK_GATING_EN" width="1" begin="0" end="0" resetval="0x1" description="Enable Radm clock gating feature - 0: Disable - 1: Enable[default]" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_GEN3_RELATED_OFF" acronym="PCIE_RC_GEN3_RELATED_OFF" offset="0x1890" width="32" description="Gen3 Control Register. There is no Gen3-specific N_FTS field. The N_FTS field in the 'Link Width and Speed Change Control Register' is used for both Gen2 and Gen3 speed modes. There is no Gen3-specific 'Directed Speed Change' field. The 'Directed Speed Change' field in the 'Link Width and Speed Change Control Register' is used to change to Gen2 or Gen3 speed. A speed change to Gen3 occurs if (1) the 'Directed Speed Change' field is set to '1' and (2) the 'Target Link Speed' field in the Link Control 2 Register is set to Gen3. Gen3 support is advertised by both sides of the link during link training. M-PCIe doesn't have Conventional PCIe Gen3 feature. The registers of this section do not exist.">
    <bitfield id="RSVDP_26" width="6" begin="31" end="26" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="25" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="GEN3_EQ_INVREQ_EVAL_DIFF_DISABLE" width="1" begin="23" end="23" resetval="0x0" description="Eq InvalidRequest and RxEqEval Different Time Assertion Disable Disable the assertion of Eq InvalidRequest and RxEqEval at different time Note: When CX_GEN4_SPEED, this register is shared for Gen3 and Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="22" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_19" width="2" begin="20" end="19" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="GEN3_DC_BALANCE_DISABLE" width="1" begin="18" end="18" resetval="0x0" description="DC Balance Disable Disable DC Balance feature Note: When CX_GEN4_SPEED, this register is shared for Gen3 and Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="GEN3_DLLP_XMT_DELAY_DISABLE" width="1" begin="17" end="17" resetval="0x0" description="DLLP Transmission Delay Disable Disable delay transmission of DLLPs before equalization Note: When CX_GEN4_SPEED, this register is shared for Gen3 and Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="GEN3_EQUALIZATION_DISABLE" width="1" begin="16" end="16" resetval="0x0" description="Equalization Disable Disable equalization feature Note: When CX_GEN4_SPEED, this register is shared for Gen3 and Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_14" width="2" begin="15" end="14" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RXEQ_RGRDLESS_RXTS" width="1" begin="13" end="13" resetval="0x1" description="When set to '1', the controller as Gen3 EQ master asserts RxEqEval to instruct the PHY to do Rx adaptation and evaluation after a 500ns timeout from a new preset request - 0: mac_phy_rxeqeval asserts after 1us and 2 TS1 received from remote partner - 1: mac_phy_rxeqeval asserts after 500ns regardless of TS's received or not Note: When CX_GEN4_SPEED, this register is shadow register for Gen3 and Gen4 data rate If RATE_SHADOW_SEL==00b, this register is for Gen3 data rate If RATE_SHADOW_SEL==01b, this register is for Gen4 data rate Note: The access attributes of this field are as follows: - Dbi: see description Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RXEQ_PH01_EN" width="1" begin="12" end="12" resetval="0x0" description="Rx Equalization Phase 0/Phase 1 Hold Enable When this bit is set the upstream port holds phase 0 [the downstream port holds phase 1] for 10ms Holding phase 0 or phase 1 can be used to allow sufficient time for Rx Equalization to be performed by the PHY This bit is used during Virtex-7 Gen3 equalization The programmable bits [RXEQ_PH01_EN, EQ_PHASE_2_3] can be used to obtain the following variations of the equalization procedure: - 00: Tx equalization only in phase 2/ 3 - 01: No Tx equalization, no Rx equalization - 10: Tx equalization in phase 2/3, Rx equalization in phase 0/ 1 - 11: No Tx equalization, Rx equalization in phase 0/1 Note: When CX_GEN4_SPEED, this register is shadow register for Gen3 and Gen4 data rate If RATE_SHADOW_SEL==00b, this register is for Gen3 data rate If RATE_SHADOW_SEL==01b, this register is for Gen4 data rate Note: The access attributes of this field are as follows: - Dbi: see description Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="EQ_REDO" width="1" begin="11" end="11" resetval="0x0" description="Equalization Redo Disable Disable autonomous mechanism for requesting to redo the equalization process Note: When CX_GEN4_SPEED, this register is shared for Gen3 and Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="EQ_EIEOS_CNT" width="1" begin="10" end="10" resetval="0x0" description="Equalization EIEOS Count Reset Disable Disable requesting reset of EIEOS count during equalization Note: When CX_GEN4_SPEED, this register is shared for Gen3 and Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="EQ_PHASE_2_3" width="1" begin="9" end="9" resetval="0x0" description="Equalization Phase 2 and Phase 3 Disable This applies to downstream ports only Note: When CX_GEN4_SPEED, this register is shadow register for Gen3 and Gen4 data rate If RATE_SHADOW_SEL==00b, this register is for Gen3 data rate If RATE_SHADOW_SEL==01b, this register is for Gen4 data rate Note: The access attributes of this field are as follows: - Dbi: see description Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="DISABLE_SCRAMBLER_GEN_3" width="1" begin="8" end="8" resetval="0x0" description="Disable Scrambler for Gen3 and Gen4 Data Rate The Gen3 and Gen4 scrambler/descrambler within the controller needs to be disabled when the scrambling function is implemented outside of the controller [for example within the PHY] Note: When CX_GEN4_SPEED, this register is shared for Gen3 and Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_1" width="7" begin="7" end="1" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="GEN3_ZRXDC_NONCOMPL" width="1" begin="0" end="0" resetval="0x1" description="Gen3 Receiver Impedance ZRX-DC Not Compliant Receivers that operate at 80 GT/s with an impedance other than the range defined by the ZRX-DC parameter for 25 GT/s [40-60 Ohms] must meet additional behavior requirements in the following LTSSM states: Polling, Rx_L0s, L1, L2, and Disabled - 0: The receiver complies with the ZRX-DC parameter for 25 GT/s when operating at 8 GT/s or higher - 1: The receiver does not comply with the ZRX-DC parameter for 25 GT/s when operating at 8 GT/s or higher Note: When CX_GEN4_SPEED, this register is shared for Gen3 and Gen4 data rates Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_GEN3_EQ_CONTROL_OFF" acronym="PCIE_RC_GEN3_EQ_CONTROL_OFF" offset="0x18A8" width="32" description="Gen3 EQ Control Register. This register controls equalization for Phase2 in an upstream port (USP), or Phase3 in a downstream port (DSP). M-PCIe doesn't have Conventional PCIe Gen3 feature. The registers of this section do not exist.">
    <bitfield id="RSVDP_27" width="5" begin="31" end="27" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="GEN3_REQ_SEND_CONSEC_EIEOS_FOR_PSET_MAP" width="1" begin="26" end="26" resetval="0x1" description="Request controller to send back-to-back EIEOS in RecoveryRcvrLock state until presets to coefficients mapping is complete - 0: Do not request - 1: request Note: Gen3 and Gen4 share the same register bit and have the same feature Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="GEN3_EQ_PSET_REQ_AS_COEF" width="1" begin="25" end="25" resetval="0x0" description="GEN3_EQ_PSET_REQ_AS_COEF is an internally reserved field Do not use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="GEN3_EQ_FOM_INC_INITIAL_EVAL" width="1" begin="24" end="24" resetval="0x0" description="Include Initial FOM Include or not the FOM feedback from the initial preset evaluation performed in the EQ Master, when finding the highest FOM among all preset evaluations - 0: Do not include - 1: Include Note: When CX_GEN4_SPEED, this register is shadow register for Gen3 and Gen4 data rate If RATE_SHADOW_SEL==00b, this register is for Gen3 data rate If RATE_SHADOW_SEL==01b, this register is for Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="GEN3_EQ_PSET_REQ_VEC" width="16" begin="23" end="8" resetval="0x0" description="Preset Request Vector Requesting of Presets during the initial part of the EQ Master Phase Encoding scheme is as follows: Bit [15:0] =0x 0: No preset is requested and evaluated in EQ Master Phase Bit [i] = 1: 'Preset=i' is requested and evaluated in EQ Master Phase - 0000000000000000: No preset be requested and evaluated in EQ Master Phase - 000000xxxxxxxxx 1: Preset 0 is requested and evaluated in EQ Master Phase - 000000xxxxxxxx1x: Preset 1 is requested and evaluated in EQ Master Phase - 000000xxxxxxx1xx: Preset 2 is requested and evaluated in EQ Master Phase - 000000xxxxxx1xxx: Preset 3 is requested and evaluated in EQ Master Phase - 000000xxxxx1xxxx: Preset 4 is requested and evaluated in EQ Master Phase - 000000xxxx1xxxxx: Preset 5 is requested and evaluated in EQ Master Phase - 000000xxx1xxxxxx: Preset 6 is requested and evaluated in EQ Master Phase - 000000xx1xxxxxxx: Preset 7 is requested and evaluated in EQ Master Phase - 000000x1xxxxxxxx: Preset 8 is requested and evaluated in EQ Master Phase - 00000x1xxxxxxxxx: Preset 9 is requested and evaluated in EQ Master Phase - 000001xxxxxxxxxx: Preset 10 is requested and evaluated in EQ Master Phase - All other encodings: Reserved Note: You must ensure 24 ms timeout does not occur in presets requests in EQ master phase, ie, you must set a proper value to the GEN3_EQ_PSET_REQ_VEC register so that the EQ tunning for Figure of Merit in the EQ master phase completes before 24 ms timeout Note: When CX_GEN4_SPEED, this register is shadow register for Gen3 and Gen4 data rate If RATE_SHADOW_SEL==00b, this register is for Gen3 data rate If RATE_SHADOW_SEL==01b, this register is for Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_7" width="1" begin="7" end="7" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="GEN3_LOWER_RATE_EQ_REDO_ENABLE" width="1" begin="6" end="6" resetval="0x1" description="Support EQ redo and lower rate change: - 0: not support - 1: support Note: Gen3 and Gen4 share the same register bit and have the same feature Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="GEN3_EQ_EVAL_2MS_DISABLE" width="1" begin="5" end="5" resetval="0x1" description="Phase2_3 2 ms Timeout Disable Determine behavior in Phase2 for USP [Phase3 if DSP] when the PHY does not respond within 2ms to the assertion of RxEqEval: - 0: abort the current evaluation, stop any attempt to modify the remote transmitter settings, Phase2 is terminated by the 24ms timeout - 1: ignore the 2ms timeout and continue as normal This is used to support PHYs that require more than 2ms to respond to the assertion of RxEqEval Note: When CX_GEN4_SPEED, this register is shadow register for Gen3 and Gen4 data rate If RATE_SHADOW_SEL==00b, this register is for Gen3 data rate If RATE_SHADOW_SEL==01b, this register is for Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="GEN3_EQ_PHASE23_EXIT_MODE" width="1" begin="4" end="4" resetval="0x0" description="Behavior After 24 ms Timeout [when optimal settings are not found] For a USP: Determine next LTSSM state from Phase2 after 24ms Timeout - 0: RecoverySpeed - 1: RecoveryEqualizationPhase3 When optimal settings are not found then: - Equalization Phase 2 Successful status bit is not set in the 'Link Status Register 2' when GEN3_EQ_PHASE23_EXIT_MODE = 0 - Equalization Phase 2 Successful status bit is set in the 'Link Status Register 2' when GEN3_EQ_PHASE23_EXIT_MODE = 1 - Equalization Phase 2 Complete status bit is set in the 'Link Status Register 2' For a DSP: Determine next LTSSM state from Phase3 after 24ms Timeout - 0: RecoverySpeed - 1: RecoveryEqualizationRcvrLock When optimal settings are not found then: - Equalization Phase 3 Successful status bit is not set in the 'Link Status Register 2' when GEN3_EQ_PHASE23_EXIT_MODE = 0 - Equalization Phase 3 Successful status bit is set in the 'Link Status Register 2' when GEN3_EQ_PHASE23_EXIT_MODE = 1 - Equalization Phase 3 Complete status bit is set in the 'Link Status Register 2' Note: GEN3_EQ_PHASE23_EXIT_MODE = 1 affects Direction Change feed back mode EQ requests for Figure Of Merit mode complete before 24 ms timeout Please see GEN3_EQ_PSET_REQ_VEC Register for more Note: When CX_GEN4_SPEED, this register is shadow register for Gen3 and Gen4 data rate If RATE_SHADOW_SEL==00b, this register is for Gen3 data rate If RATE_SHADOW_SEL==01b, this register is for Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="GEN3_EQ_FB_MODE" width="4" begin="3" end="0" resetval="0x0" description="Feedback Mode - 0000b: Direction Change - 0001b: Figure Of Merit - 0010b: Reserved - : Reserved - 1111b: Reserved Note: When CX_GEN4_SPEED, this register is a shadow register for Gen3 and Gen4 data rate If RATE_SHADOW_SEL==00b, this register is for Gen3 data rate If RATE_SHADOW_SEL==01b, this register is for Gen4 data rate Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_ORDER_RULE_CTRL_OFF" acronym="PCIE_RC_ORDER_RULE_CTRL_OFF" offset="0x18B4" width="32" description="Order Rule Control Register.">
    <bitfield id="RSVDP_16" width="16" begin="31" end="16" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="CPL_PASS_P" width="8" begin="15" end="8" resetval="0x0" description="Completion Passing Posted Ordering Rule Control Determines if CPL can pass halted P queue - 0: CPL can not pass P [recommended] - 1: CPL can pass P" range="" rwaccess="RW"/>
    <bitfield id="NP_PASS_P" width="8" begin="7" end="0" resetval="0x0" description="Non-Posted Passing Posted Ordering Rule Control Determines if NP can pass halted P queue - 0 : NP can not pass P [recommended] - 1 : NP can pass P" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PIPE_LOOPBACK_CONTROL_OFF" acronym="PCIE_RC_PIPE_LOOPBACK_CONTROL_OFF" offset="0x18B8" width="32" description="PIPE Loopback Control Register.">
    <bitfield id="PIPE_LOOPBACK" width="1" begin="31" end="31" resetval="0x0" description="PIPE Loopback Enable Indicates RMMI Loopback if M-PCIe Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_27" width="4" begin="30" end="27" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RXSTATUS_VALUE" width="3" begin="26" end="24" resetval="0x0" description="RXSTATUS_VALUE is an internally reserved field Do not use" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_22" width="2" begin="23" end="22" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RXSTATUS_LANE" width="6" begin="21" end="16" resetval="0x0" description="RXSTATUS_LANE is an internally reserved field Do not use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LPBK_RXVALID" width="16" begin="15" end="0" resetval="0x3" description="LPBK_RXVALID is an internally reserved field Do not use Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MISC_CONTROL_1_OFF" acronym="PCIE_RC_MISC_CONTROL_1_OFF" offset="0x18BC" width="32" description="DBI Read-Only Write Enable Register.">
    <bitfield id="RSVDP_6" width="26" begin="31" end="6" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="ARI_DEVICE_NUMBER" width="1" begin="5" end="5" resetval="0x0" description="When ARI is enabled, enables use of the device ID Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_4" width="1" begin="4" end="4" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="SIMPLIFIED_REPLAY_TIMER" width="1" begin="3" end="3" resetval="0x0" description="Enables Simplified Replay Timer [Gen4] Simplified Replay Timer Values are: - A value from 24,000 to 31,000 Symbol Times when Extended Synch is 0b - A value from 80,000 to 100,000 Symbol Times when Extended Synch is 1b Must not be changed while link is in use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="UR_CA_MASK_4_TRGT1" width="1" begin="2" end="2" resetval="0x0" description="This field only applies to request TLPs [with UR filtering status] that you have chosen to forward to the application [when you set DEFAULT_TARGET in this register] - When you set this field to '1', the core suppresses error logging, Error Message generation, and CPL generation [for non-posted requests] - You should set this if you have set the Default Target port logic register to '1' Default is CX_MASK_UR_CA_4_TRGT1 configuration parameter Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="DEFAULT_TARGET" width="1" begin="1" end="1" resetval="0x0" description="Default target a received IO or MEM request with UR/CA/CRS is sent to by the controller - 0: The controller drops all incoming I/O or MEM requests [after corresponding error reporting] A completion with UR status will be generated for non-posted requests - 1: The controller forwards all incoming I/O or MEM requests with UR/CA/CRS status to your application Default value is DEFAULT_TARGET configuration parameter Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="DBI_RO_WR_EN" width="1" begin="0" end="0" resetval="0x0" description="Write to RO Registers Using DBI When you set this field to '1', then some RO and HwInit bits are writable from the local application through the DBI Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MULTI_LANE_CONTROL_OFF" acronym="PCIE_RC_MULTI_LANE_CONTROL_OFF" offset="0x18C0" width="32" description="UpConfigure Multi-lane Control Register. Used when upsizing or downsizing the link width through Configuration state without bringing the link down.">
    <bitfield id="RSVDP_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="UPCONFIGURE_SUPPORT" width="1" begin="7" end="7" resetval="0x1" description="Upconfigure Support The controller sends this value as the Link Upconfigure Capability in TS2 Ordered Sets in ConfigurationComplete state This field is reserved [fixed to '0'] for M-PCIe Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="DIRECT_LINK_WIDTH_CHANGE" width="1" begin="6" end="6" resetval="0x0" description="Directed Link Width Change The controller always moves to Configuration state through Recovery state when this bit is set to '1' - If the upconfigure_capable variable is '1' and the PCIE_CAP_HW_AUTO_WIDTH_DISABLE bit in" range="" rwaccess="RW"/>
    <bitfield id="TARGET_LINK_WIDTH" width="6" begin="5" end="0" resetval="0x0" description="Target Link Width Values correspond to: - 6'b 000000: Core does not start upconfigure or autonomous width downsizing in the Configuration state - 6'b 000001: x 1 - 6'b 000010: x 2 - 6'b 000100: x 4 - 6'b 001000: x 8 - 6'b 010000: x 16 - 6'b 100000: x32 This field is reserved [fixed to '0'] for M-PCIe" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PHY_INTEROP_CTRL_OFF" acronym="PCIE_RC_PHY_INTEROP_CTRL_OFF" offset="0x18C4" width="32" description="PHY Interoperability Control Register. This register is reserved for internal use. You should not write to this register and change the default.">
    <bitfield id="RSVDP_11" width="21" begin="31" end="11" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="L1_CLK_SEL" width="1" begin="10" end="10" resetval="0x0" description="L1 Clock control bit - 1: Controller does not request aux_clk switch and core_clk gating in L 1 - 0: Controller requests aux_clk switch and core_clk gating in L1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="L1_NOWAIT_P1" width="1" begin="9" end="9" resetval="0x0" description="L1 entry control bit - 1: Core does not wait for PHY to acknowledge transition to P1 before entering L 1 - 0: Core waits for the PHY to acknowledge transition to P1 before entering L1 Note: The access attributes of this field are as follows: - Dbi: R/W [sticky] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="L1SUB_EXIT_MODE" width="1" begin="8" end="8" resetval="0x0" description="L1 Exit Control Using phy_mac_pclkack_n - 1: Core exits L1 without waiting for the PHY to assert phy_mac_pclkack_n - 0: Core waits for the PHY to assert phy_mac_pclkack_n before exiting L1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_7" width="1" begin="7" end="7" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="RXSTANDBY_CONTROL" width="7" begin="6" end="0" resetval="0x3F" description="Rxstandby Control Bits 05 determine if the controller asserts the RxStandby signal [mac_phy_rxstandby] in the indicated condition Bit 6 enables the controller to perform the RxStandby/RxStandbyStatus handshake - [0]: Rx EIOS and subsequent T TX-IDLE-MIN - [1]: Rate Change - [2]: Inactive lane for upconfigure/downconfigure - [3]: PowerDown=P1orP 2 - [4]: RxL0sIdle - [5]: EI Infer in L 0 - [6]: Execute RxStandby/RxStandbyStatus Handshake This field is reserved [fixed to '0'] for M-PCIe Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_TRGT_CPL_LUT_DELETE_ENTRY_OFF" acronym="PCIE_RC_TRGT_CPL_LUT_DELETE_ENTRY_OFF" offset="0x18C8" width="32" description="TRGT_CPL_LUT Delete Entry Control register. Using this register you can delete one entry in the target completion LUT. You should only use this register when you know that your application will never send the completion because of an FLR or any other reason. Note:: The target completion LUT (and associated target completion timeout event) is watching for completions (from your application on XALI0/1/2 or AXI master read channel) corresponding to previously received non-posted requests from the PCIe wire.">
    <bitfield id="DELETE_EN" width="1" begin="31" end="31" resetval="0x0" description="This is a one-shot bit A '1' write to this bit triggers the deletion of the target completion LUT entry that is specified in the LOOK_UP_ID field This is a self-clearing register field Reading from this register field always returns a '0'" range="" rwaccess="RW1C"/>
    <bitfield id="LOOK_UP_ID" width="31" begin="30" end="0" resetval="0x0" description="This number selects one entry to delete of the TRGT_CPL_LUT" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_LINK_FLUSH_CONTROL_OFF" acronym="PCIE_RC_LINK_FLUSH_CONTROL_OFF" offset="0x18CC" width="32" description="Link Reset Request Flush Control Register.">
    <bitfield id="RSVD_I_8" width="8" begin="31" end="24" resetval="0xFF" description="This is an internally reserved field Do not use Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_1" width="23" begin="23" end="1" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="AUTO_FLUSH_EN" width="1" begin="0" end="0" resetval="0x1" description="Enables automatic flushing of pending requests before sending the reset request to the application logic to reset the PCIe controller and the AXI Bridge The flushing process is initiated if any of the following events occur: - Hot reset request A downstream port [DSP] can 'hot reset' an upstream port [USP] by sending two consecutive TS1 ordered sets with the hot reset bit asserted - Warm [Soft] reset request Generated when exiting from D3 to D0 and cfg_pm_no_soft_rst= 0 - Link down reset request A high to low transition on smlh_req_rst_not indicates the link has gone down and the controller is requesting a reset If you disable automatic flushing, your application is responsible for resetting the PCIe controller and the AXI Bridge Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_AMBA_ERROR_RESPONSE_DEFAULT_OFF" acronym="PCIE_RC_AMBA_ERROR_RESPONSE_DEFAULT_OFF" offset="0x18D0" width="32" description="AXI Bridge Slave Error Response Register.">
    <bitfield id="RSVDP_16" width="16" begin="31" end="16" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="AMBA_ERROR_RESPONSE_MAP" width="6" begin="15" end="10" resetval="0x27" description="AXI Slave Response Error Map Allows you to selectively map the errors received from the PCIe completion [for non-posted requests] to the AXI slave responses, slv_rresp or slv_bresp The recommended setting is SLVERR CRS is always mapped to OKAY - [0] -- 0: UR [unsupported request] -&amp;amp;gt; DECERR -- 1: UR [unsupported request] -&amp;amp;gt; SLVERR - [1] -- 0: CRS [configuration retry status] -&amp;amp;gt; DECERR -- 1: CRS [configuration retry status] -&amp;amp;gt; SLVERR - [2] -- 0: CA [completer abort] -&amp;amp;gt; DECERR -- 1: CA [completer abort] -&amp;amp;gt; SLVERR - [3]: Reserved - [4]: Reserved - [5]: -- 0: Completion Timeout -&amp;amp;gt; DECERR -- 1: Completion Timeout -&amp;amp;gt; SLVERR The AXI bridge internally drops [processes internally but not passed to your application] a completion that has been marked by the Rx filter as UC or MLF, and does not pass its status directly down to the slave interface It waits for a timeout and then signals 'Completion Timeout' to the slave interface The controller sets the AXI slave read databus to 0xFFFF for all error responses Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_5" width="5" begin="9" end="5" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="AMBA_ERROR_RESPONSE_CRS" width="2" begin="4" end="3" resetval="0x0" description="CRS Slave Error Response Mapping Determines the AXI slave response for CRS completions AHB: - always returns OKAY AXI: - 00: OKAY - 01: OKAY with all FFFF_FFFF data for all CRS completions - 10: OKAY with FFFF_0001 data for CRS completions to vendor ID read requests, OKAY with FFFF_FFFF data for all other CRS completions - 11: SLVERR/DECERR [the AXI_ERROR_RESPONSE_MAP field determines the PCIe-to-AXI Slave error response mapping] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="AMBA_ERROR_RESPONSE_VENDORID" width="1" begin="2" end="2" resetval="0x0" description="Vendor ID Non-existent Slave Error Response Mapping Determines the AXI slave response for errors on reads to non-existent Vendor ID register AHB: - 0: OKAY [with FFFF data] The controller ignores the setting in the bit when bit 0 of this register is '0' - 1: ERROR AXI: - 0: OKAY [with FFFF data] - 1: SLVERR/DECERR [the AXI_ERROR_RESPONSE_MAP field determines the PCIe-to-AXI Slave error response mapping] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_1" width="1" begin="1" end="1" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="AMBA_ERROR_RESPONSE_GLOBAL" width="1" begin="0" end="0" resetval="0x0" description="Global Slave Error Response Mapping Determines the AXI slave response for all error scenarios on non-posted requests AHB: - 0: OKAY [with FFFF data for non-posted requests] and ignore the setting in bit [2] of this register - 1: ERROR for normal link [data] accesses and look at bit [2] for other scenarios AXI: - 0: OKAY [with FFFF data for non-posted requests] - 1: SLVERR/DECERR [the AXI_ERROR_RESPONSE_MAP field determines the PCIe-to-AXI Slave error response mapping] The error response mapping is not applicable to Non-existent Vendor ID register reads Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_AMBA_LINK_TIMEOUT_OFF" acronym="PCIE_RC_AMBA_LINK_TIMEOUT_OFF" offset="0x18D4" width="32" description="Link Down AXI Bridge Slave Timeout Register. If your application AXI master issues outbound requests to the AXI bridge slave interface before the PCIe link is operational, the controller starts a 'flush' timer. The timeout value of the timer is set by this register. The timer will timeout and then flush the bridge TX request queues after this amount of time. The timer counts when there are pending outbound AXI slave interface (or DMA) requests and the PCIe TX link is not transmitting any of these requests.">
    <bitfield id="RSVDP_9" width="23" begin="31" end="9" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="LINK_TIMEOUT_ENABLE_DEFAULT" width="1" begin="8" end="8" resetval="0x0" description="Disable Flush You can disable the flush feature by setting this field to '1' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LINK_TIMEOUT_PERIOD_DEFAULT" width="8" begin="7" end="0" resetval="0x32" description="Timeout Value [ms] The timer will timeout and then flush the bridge TX request queues after this amount of time The timer counts when there are pending outbound AXI slave interface requests and the PCIe TX link is not transmitting any of these requests The timer is clocked by core_clk For an M-PCIe configuration: - Time unit of this field is 4 ms - Margin of error for RateA clock is &amp;amp;lt; 1% - Margin of error for RateB clock is between 16% and 17% Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_AMBA_ORDERING_CTRL_OFF" acronym="PCIE_RC_AMBA_ORDERING_CTRL_OFF" offset="0x18D8" width="32" description="AMBA Ordering Control.">
    <bitfield id="RSVDP_5" width="27" begin="31" end="5" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="AX_MSTR_ORDR_P_EVENT_SEL" width="2" begin="4" end="3" resetval="0x0" description="AXI Master Posted Ordering Event Selector This field selects how the master interface determines when a P write is completed when enforcing the PCIe ordering rule, 'NP must not pass P' at the AXI Master Interface The AXI protocol does not support ordering between channels Therefore, NP reads can pass P on your AXI bus fabric This can result in an ordering violation when the read overtakes a P that is going to the same address Therefore, the bridge master does not issue any NP requests until all outstanding P writes reach their destination It does this by waiting for the all of the write responses on the B channel This can affect the performance of the master read channel For scenarios where the interconnect serializes the AXI master 'AW', 'W' and 'AR' channels,you can increase the performance by reducing the need to wait until the complete Posted transaction has effectively reached the application slave - 00: B'last event: wait for the all of the write responses on the B channel thereby ensuring that the complete Posted transaction has effectively reached the application slave [default] - 01: AW'last event: wait until the complete Posted transaction has left the AXI address channel at the bridge master - 10: W'last event: wait until the complete Posted transaction has left the AXI data channel at the bridge master - 11: Reserved Note 2: This setting will not affect: - MSI interrupt catcher and P data ordering This is always driven by the B'last event - DMA read engine TLP ordering This is always driven by the B'last event - NP write transactions which are always serialized with P write transactions" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_2" width="1" begin="2" end="2" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="AX_SNP_EN" width="1" begin="1" end="1" resetval="0x0" description="AXI Serialize Non-Posted Requests Enable This field enables the AXI Bridge to serialize same ID Non-Posted Read/Write Requests on the wire Serialization implies one outstanding same ID NP Read or Write on the wire and used to avoid AXI RAR and WAW hazards at the remote link partner" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_0" width="1" begin="0" end="0" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_COHERENCY_CONTROL_1_OFF" acronym="PCIE_RC_COHERENCY_CONTROL_1_OFF" offset="0x18E0" width="32" description="ACE Cache Coherency Control Register 1">
    <bitfield id="CFG_MEMTYPE_BOUNDARY_LOW_ADDR" width="30" begin="31" end="2" resetval="0x0" description="Boundary Lower Address For Memory Type Bits [31:0] of dword-aligned address of the boundary for Memory type The two lower address LSBs are '00' Addresses up to but not including this value are in the lower address space region addresses equal or greater than this value are in the upper address space region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RSVDP_1" width="1" begin="1" end="1" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="CFG_MEMTYPE_VALUE" width="1" begin="0" end="0" resetval="0x0" description="Sets the memory type for the lower and upper parts of the address space: - 0: lower = Peripheral upper = Memory - 1: lower = Memory type upper = Peripheral Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_COHERENCY_CONTROL_2_OFF" acronym="PCIE_RC_COHERENCY_CONTROL_2_OFF" offset="0x18E4" width="32" description="ACE Cache Coherency Control Register 2">
    <bitfield id="CFG_MEMTYPE_BOUNDARY_HIGH_ADDR" width="32" begin="31" end="0" resetval="0x0" description="Boundary Upper Address For Memory Type Bits [63:32] of the 64-bit dword-aligned address of the boundary for Memory type Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_COHERENCY_CONTROL_3_OFF" acronym="PCIE_RC_COHERENCY_CONTROL_3_OFF" offset="0x18E8" width="32" description="ACE Cache Coherency Control Register 3">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CFG_MSTR_AWCACHE_VALUE" width="4" begin="30" end="27" resetval="0x0" description="Master Write CACHE Signal Value Value of the individual bits in mstr_awcache when CFG_MSTR_AWCACHE_MODE is '1' Note: not applicable to message requests for message requests the value of mstr_awcache is always '0000' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="26" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CFG_MSTR_ARCACHE_VALUE" width="4" begin="22" end="19" resetval="0x0" description="Master Read CACHE Signal Value Value of the individual bits in mstr_arcache when CFG_MSTR_ARCACHE_MODE is '1' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="18" end="15" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CFG_MSTR_AWCACHE_MODE" width="4" begin="14" end="11" resetval="0x0" description="Master Write CACHE Signal Behavior Defines how the individual bits in mstr_awcache are controlled: - 0: set automatically by the AXI master - 1: set by the value of the corresponding bit of the CFG_MSTR_AWCACHE_VALUE field Note: for message requests the value of mstr_awcache is always '0000' regardless of the value of this bit Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="10" end="7" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CFG_MSTR_ARCACHE_MODE" width="4" begin="6" end="3" resetval="0x0" description="Master Read CACHE Signal Behavior Defines how the individual bits in mstr_arcache are controlled: - 0: set automatically by the AXI master - 1: set by the value of the corresponding bit of the CFG_MSTR_ARCACHE_VALUE field Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="2" end="0" resetval="0xX" description="" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_AXI_MSTR_MSG_ADDR_LOW_OFF" acronym="PCIE_RC_AXI_MSTR_MSG_ADDR_LOW_OFF" offset="0x18F0" width="32" description="Lower 20 bits of the programmable AXI address where Messages coming from wire are mapped to. Bits [11:0] of the register are tied to zero for the address to be 4k-aligned. In previous releases, the third and fourth DWORDs of a message (Msg/MsgD) TLP header were delivered though the AXI master address bus (mstr_awaddr). These DWORDS are now supplied through the mstr_awmisc_info_hdr_34dw[63:0] output; and the value on mstr_awaddr is driven to the value you have programmed into the and registers.">
    <bitfield id="CFG_AXIMSTR_MSG_ADDR_LOW" width="20" begin="31" end="12" resetval="0x0" description="Lower 20 bits of the programmable AXI address for Messages Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="12" begin="11" end="0" resetval="0x0" description="Reserved for future use Note: This register field is sticky" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_AXI_MSTR_MSG_ADDR_HIGH_OFF" acronym="PCIE_RC_AXI_MSTR_MSG_ADDR_HIGH_OFF" offset="0x18F4" width="32" description="Upper 32 bits of the programmable AXI address where Messages coming from wire are mapped to.">
    <bitfield id="CFG_AXIMSTR_MSG_ADDR_HIGH" width="32" begin="31" end="0" resetval="0x0" description="Upper 32 bits of the programmable AXI address for Messages Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_PCIE_VERSION_NUMBER_OFF" acronym="PCIE_RC_PCIE_VERSION_NUMBER_OFF" offset="0x18F8" width="32" description="PCIe Controller IIP Release Version Number. The version number is given in hex format. You should convert each pair of hex characters to ASCII to interpret. Using 4.70a (GA) as an example: - VERSION_NUMBER = 0x3437302a which translates to 470* - VERSION_TYPE = 0x67612a2a which translates to ga** Using 4.70a-ea01 as an example: - VERSION_NUMBER = 0x3437302a which translates to 470* - VERSION_TYPE = 0x65613031 which translates to ea01 GA is a general release available on www.designware.com EA is an early release available on a per-customer basis.">
    <bitfield id="VERSION_NUMBER" width="32" begin="31" end="0" resetval="0x3439302A" description="Version Number" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_PCIE_VERSION_TYPE_OFF" acronym="PCIE_RC_PCIE_VERSION_TYPE_OFF" offset="0x18FC" width="32" description="PCIe Controller IIP Release Version Type. The type is given in hex format. You should convert each pair of hex characters to ASCII to interpret. Using 4.70a (GA) as an example: - VERSION_NUMBER = 0x3437302a which translates to 470* - VERSION_TYPE = 0x67612a2a which translates to ga** Using 4.70a-ea01 as an example: - VERSION_NUMBER = 0x3437302a which translates to 470* - VERSION_TYPE = 0x65613031 which translates to ea01 GA is a general release available on www.designware.com EA is an early release available on a per-customer basis.">
    <bitfield id="VERSION_TYPE" width="32" begin="31" end="0" resetval="0xX" description="Version Type SR2.0: 6C703039h SR1.0: 67612A2Ah" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_MSIX_ADDRESS_MATCH_LOW_OFF" acronym="PCIE_RC_MSIX_ADDRESS_MATCH_LOW_OFF" offset="0x1940" width="32" description="MSI-X Address Match Low Register. When you enable the MSI-X Table RAM feature (MSIX_TABLE_EN=1), the controller implements the logic and RAM required to generate MSI-X requests. This register is only used in AXI configurations. When your local AXI application writes (MWr) to the address defined in this register (and ), the controller will load the register with the contents of the MWr and subsequently create and send MSI-X TLPs">
    <bitfield id="MSIX_ADDRESS_MATCH_LOW" width="30" begin="31" end="2" resetval="0x0" description="MSI-X Address Match Low Address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="1" end="1" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="MSIX_ADDRESS_MATCH_EN" width="1" begin="0" end="0" resetval="0x0" description="MSI-X Match Enable Enable the MSI-X Address Match feature when the AXI bridge is present Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSIX_ADDRESS_MATCH_HIGH_OFF" acronym="PCIE_RC_MSIX_ADDRESS_MATCH_HIGH_OFF" offset="0x1944" width="32" description="MSI-X Address Match High Register. When you enable the MSI-X Table RAM feature (MSIX_TABLE_EN=1), the controller implements the logic and RAM required to generate MSI-X requests. This register is only used in AXI configurations. When your local AXI application writes (MWr) to the address defined in this register (and ), the controller will load the register with the contents of the MWr and subsequently create and send MSI-X TLPs">
    <bitfield id="MSIX_ADDRESS_MATCH_HIGH" width="32" begin="31" end="0" resetval="0x0" description="MSI-X Address Match High Address Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSIX_DOORBELL_OFF" acronym="PCIE_RC_MSIX_DOORBELL_OFF" offset="0x1948" width="32" description="MSI-X Doorbell Register. When you enable the MSI-X Table RAM feature (MSIX_TABLE_EN=1), the controller implements the logic and RAM required to generate MSI-X requests. - For AXI configurations: when your local application writes (MWr) to the address defined in , the controller will load this register with the contents of the MWr and subsequently create and send MSI-X TLPs. - For AHB configurations: the MSI-X Table RAM feature is not supported. - For non-AMBA configurations: when your local application writes to this register, the controller will create and send MSI-X TLPs.">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="MSIX_DOORBELL_PF" width="5" begin="28" end="24" resetval="0x0" description="MSIX Doorbell Physical Function This register determines the Physical Function for the MSI-X transaction" range="" rwaccess="RW"/>
    <bitfield id="MSIX_DOORBELL_VF" width="8" begin="23" end="16" resetval="0x0" description="MSIX Doorbell Virtual Function This register determines the Virtual Function for the MSI-X transaction" range="" rwaccess="RW"/>
    <bitfield id="MSIX_DOORBELL_VF_ACTIVE" width="1" begin="15" end="15" resetval="0x0" description="MSIX Doorbell Virtual Function Active This register determines whether a Virtual Function is used to generate the MSI-X transaction" range="" rwaccess="RW"/>
    <bitfield id="MSIX_DOORBELL_TC" width="3" begin="14" end="12" resetval="0x0" description="MSIX Doorbell Traffic Class This register determines which traffic class to generate the MSI-X transaction with" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="11" end="11" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="MSIX_DOORBELL_VECTOR" width="11" begin="10" end="0" resetval="0x0" description="MSI-X Doorbell Vector This register determines which vector to generate the MSI-X transaction for" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_MSIX_RAM_CTRL_OFF" acronym="PCIE_RC_MSIX_RAM_CTRL_OFF" offset="0x194C" width="32" description="MSI-X RAM power mode and debug control register. When you enable the MSI-X Table RAM feature (MSIX_TABLE_EN=1), the controller implements the logic and RAM required to generate MSI-X requests.">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="MSIX_RAM_CTRL_DBG_PBA" width="1" begin="25" end="25" resetval="0x0" description="MSIX PBA RAM Debug Mode Use this bit to activate the debug mode and allow direct read/write access to the PBA Use can also use the dbg_pba input to activate debug mode Debug mode turns off the PF/VF/Offset-based addressing into the RAM and maps the entire table linearly from the base address of the BAR [indicated by the BIR] in function 0 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSIX_RAM_CTRL_DBG_TABLE" width="1" begin="24" end="24" resetval="0x0" description="MSIX Table RAM Debug Mode Use this bit to activate the debug mode and allow direct read/write access to the Table Use can also use the dbg_table input to activate debug mode Debug mode turns off the PF/VF/Offset-based addressing into the RAM and maps the entire table linearly from the base address of the BAR [indicated by the BIR] in function 0 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="7" begin="23" end="17" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="MSIX_RAM_CTRL_BYPASS" width="1" begin="16" end="16" resetval="0x0" description="MSIX RAM Control Bypass The bypass field, when set, disables the internal generation of low power signals for both RAMs It is up to the application to ensure the RAMs are in the proper power state before trying to access them Moreover, the application needs to observe all timing requirements of the RAM low power signals before trying to use the MSIX functionality Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="MSIX_RAM_CTRL_PBA_SD" width="1" begin="9" end="9" resetval="0x0" description="MSIX PBA RAM Shut Down Set this bit to drive the cfg_msix_pba_sd output to signal your external logic to place the MSIX PBA RAM in Shut Down low-power mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSIX_RAM_CTRL_PBA_DS" width="1" begin="8" end="8" resetval="0x0" description="MSIX PBA RAM Deep Sleep Set this bit to drive the cfg_msix_pba_ds output to signal your external logic to place the MSIX PBA RAM in Deep Sleep low-power mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="7" end="2" resetval="0x0" description="Reserved Note: This register field is sticky" range="" rwaccess="R"/>
    <bitfield id="MSIX_RAM_CTRL_TABLE_SD" width="1" begin="1" end="1" resetval="0x0" description="MSIX Table RAM Shut Down Set this bit to drive the cfg_msix_table_sd output to signal your external logic to place the MSIX Table RAM in Shut Down low-power mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSIX_RAM_CTRL_TABLE_DS" width="1" begin="0" end="0" resetval="0x0" description="MSIX Table RAM Deep Sleep Set this bit to drive the cfg_msix_table_ds output to signal your external logic to place the MSIX Table RAM in Deep Sleep low-power mode Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_AUX_CLK_FREQ_OFF" acronym="PCIE_RC_AUX_CLK_FREQ_OFF" offset="0x1B40" width="32" description="Auxiliary Clock Frequency Control Register.">
    <bitfield id="RSVDP_10" width="22" begin="31" end="10" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="AUX_CLK_FREQ" width="10" begin="9" end="0" resetval="0xA" description="The aux_clk frequency in MHz This value is used to provide a 1 us reference for counting time during low-power states with aux_clk when the PHY has removed the pipe_clk Frequencies lower than 1 MHz are possible but with a loss of accuracy in the time counted If the actual frequency [f] of aux_clk does not exactly match the programmed frequency [f_prog], then there is an error in the time counted by the controller that can be expressed in percentage as: err% = [f_prog/f-1]*100 For example if f=25 MHz and f_prog=3 MHz, then err% =[3/ 25-1]* 100 =20%, meaning that the time counted by the controller on aux_clk will be 20 0reater than the time in us programmed in the corresponding time register [for example T_POWER_ON] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_L1_SUBSTATES_OFF" acronym="PCIE_RC_L1_SUBSTATES_OFF" offset="0x1B44" width="32" description="L1 Substates Timing Register.">
    <bitfield id="RSVDP_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved for future use" range="" rwaccess="R"/>
    <bitfield id="L1SUB_T_PCLKACK" width="2" begin="7" end="6" resetval="0x3" description="Max delay [in 1us units] between a MAC request to remove the clock on mac_phy_pclkreq_n and a PHY response on phy_mac_pclkack_n If the PHY does not respond within this time the request is aborted Range is 03 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="L1SUB_T_L1_2" width="4" begin="5" end="2" resetval="0x4" description="Duration [in 1us units] of L12 Range is 015 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="L1SUB_T_POWER_OFF" width="2" begin="1" end="0" resetval="0x2" description="Duration [in 1us units] of L12Entry Range is 03 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_0" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_0" offset="0x6000" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_0" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_0" offset="0x6004" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_0" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_0" offset="0x6008" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_0" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_0" offset="0x600C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_0" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_0" offset="0x6010" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_0" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_0" offset="0x6014" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_0" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_0" offset="0x6018" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_0" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_0" offset="0x6100" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_0" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_0" offset="0x6104" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_0" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_0" offset="0x6108" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_0" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_0" offset="0x610C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_0" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_0" offset="0x6110" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_0" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_0" offset="0x6114" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_0" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_0" offset="0x6118" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_1" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_1" offset="0x6200" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_1" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_1" offset="0x6204" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_1" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_1" offset="0x6208" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_1" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_1" offset="0x620C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_1" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_1" offset="0x6210" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_1" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_1" offset="0x6214" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_1" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_1" offset="0x6218" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_1" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_1" offset="0x6300" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_1" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_1" offset="0x6304" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_1" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_1" offset="0x6308" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_1" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_1" offset="0x630C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_1" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_1" offset="0x6310" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_1" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_1" offset="0x6314" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_1" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_1" offset="0x6318" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_2" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_2" offset="0x6400" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_2" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_2" offset="0x6404" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_2" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_2" offset="0x6408" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_2" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_2" offset="0x640C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_2" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_2" offset="0x6410" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_2" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_2" offset="0x6414" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_2" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_2" offset="0x6418" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_2" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_2" offset="0x6500" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_2" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_2" offset="0x6504" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_2" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_2" offset="0x6508" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_2" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_2" offset="0x650C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_2" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_2" offset="0x6510" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_2" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_2" offset="0x6514" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_2" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_2" offset="0x6518" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_3" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_3" offset="0x6600" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_3" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_3" offset="0x6604" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_3" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_3" offset="0x6608" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_3" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_3" offset="0x660C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_3" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_3" offset="0x6610" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_3" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_3" offset="0x6614" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_3" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_3" offset="0x6618" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_3" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_3" offset="0x6700" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_3" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_3" offset="0x6704" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_3" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_3" offset="0x6708" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_3" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_3" offset="0x670C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_3" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_3" offset="0x6710" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_3" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_3" offset="0x6714" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_3" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_3" offset="0x6718" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_4" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_4" offset="0x6800" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_4" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_4" offset="0x6804" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_4" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_4" offset="0x6808" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_4" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_4" offset="0x680C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_4" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_4" offset="0x6810" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_4" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_4" offset="0x6814" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_4" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_4" offset="0x6818" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_4" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_4" offset="0x6900" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_4" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_4" offset="0x6904" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_4" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_4" offset="0x6908" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_4" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_4" offset="0x690C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_4" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_4" offset="0x6910" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_4" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_4" offset="0x6914" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_4" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_4" offset="0x6918" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_5" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_5" offset="0x6A00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_5" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_5" offset="0x6A04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_5" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_5" offset="0x6A08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_5" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_5" offset="0x6A0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_5" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_5" offset="0x6A10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_5" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_5" offset="0x6A14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_5" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_5" offset="0x6A18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_5" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_5" offset="0x6B00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_5" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_5" offset="0x6B04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_5" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_5" offset="0x6B08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_5" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_5" offset="0x6B0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_5" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_5" offset="0x6B10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_5" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_5" offset="0x6B14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_5" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_5" offset="0x6B18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_6" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_6" offset="0x6C00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_6" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_6" offset="0x6C04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_6" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_6" offset="0x6C08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_6" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_6" offset="0x6C0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_6" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_6" offset="0x6C10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_6" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_6" offset="0x6C14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_6" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_6" offset="0x6C18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_6" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_6" offset="0x6D00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_6" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_6" offset="0x6D04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_6" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_6" offset="0x6D08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_6" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_6" offset="0x6D0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_6" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_6" offset="0x6D10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_6" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_6" offset="0x6D14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_6" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_6" offset="0x6D18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_7" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_7" offset="0x6E00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_7" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_7" offset="0x6E04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_7" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_7" offset="0x6E08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_7" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_7" offset="0x6E0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_7" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_7" offset="0x6E10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_7" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_7" offset="0x6E14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_7" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_7" offset="0x6E18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_7" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_7" offset="0x6F00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_7" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_7" offset="0x6F04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_7" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_7" offset="0x6F08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_7" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_7" offset="0x6F0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_7" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_7" offset="0x6F10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_7" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_7" offset="0x6F14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_7" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_7" offset="0x6F18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_8" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_8" offset="0x7000" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_8" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_8" offset="0x7004" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_8" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_8" offset="0x7008" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_8" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_8" offset="0x700C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_8" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_8" offset="0x7010" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_8" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_8" offset="0x7014" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_8" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_8" offset="0x7018" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_8" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_8" offset="0x7100" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_8" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_8" offset="0x7104" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_8" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_8" offset="0x7108" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_8" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_8" offset="0x710C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_8" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_8" offset="0x7110" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_8" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_8" offset="0x7114" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_8" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_8" offset="0x7118" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_9" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_9" offset="0x7200" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_9" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_9" offset="0x7204" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_9" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_9" offset="0x7208" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_9" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_9" offset="0x720C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_9" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_9" offset="0x7210" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_9" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_9" offset="0x7214" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_9" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_9" offset="0x7218" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_9" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_9" offset="0x7300" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_9" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_9" offset="0x7304" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_9" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_9" offset="0x7308" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_9" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_9" offset="0x730C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_9" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_9" offset="0x7310" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_9" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_9" offset="0x7314" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_9" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_9" offset="0x7318" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_10" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_10" offset="0x7400" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_10" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_10" offset="0x7404" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_10" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_10" offset="0x7408" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_10" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_10" offset="0x740C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_10" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_10" offset="0x7410" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_10" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_10" offset="0x7414" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_10" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_10" offset="0x7418" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_10" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_10" offset="0x7500" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_10" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_10" offset="0x7504" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_10" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_10" offset="0x7508" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_10" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_10" offset="0x750C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_10" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_10" offset="0x7510" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_10" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_10" offset="0x7514" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_10" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_10" offset="0x7518" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_11" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_11" offset="0x7600" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_11" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_11" offset="0x7604" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_11" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_11" offset="0x7608" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_11" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_11" offset="0x760C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_11" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_11" offset="0x7610" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_11" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_11" offset="0x7614" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_11" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_11" offset="0x7618" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_11" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_11" offset="0x7700" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_11" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_11" offset="0x7704" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_11" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_11" offset="0x7708" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_11" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_11" offset="0x770C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_11" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_11" offset="0x7710" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_11" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_11" offset="0x7714" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_11" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_11" offset="0x7718" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_12" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_12" offset="0x7800" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_12" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_12" offset="0x7804" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_12" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_12" offset="0x7808" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_12" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_12" offset="0x780C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_12" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_12" offset="0x7810" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_12" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_12" offset="0x7814" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_12" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_12" offset="0x7818" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_12" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_12" offset="0x7900" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_12" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_12" offset="0x7904" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_12" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_12" offset="0x7908" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_12" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_12" offset="0x790C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_12" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_12" offset="0x7910" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_12" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_12" offset="0x7914" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_12" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_12" offset="0x7918" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_13" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_13" offset="0x7A00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_13" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_13" offset="0x7A04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_13" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_13" offset="0x7A08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_13" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_13" offset="0x7A0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_13" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_13" offset="0x7A10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_13" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_13" offset="0x7A14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_13" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_13" offset="0x7A18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_13" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_13" offset="0x7B00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_13" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_13" offset="0x7B04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_13" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_13" offset="0x7B08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_13" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_13" offset="0x7B0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_13" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_13" offset="0x7B10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_13" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_13" offset="0x7B14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_13" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_13" offset="0x7B18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_14" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_14" offset="0x7C00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_14" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_14" offset="0x7C04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_14" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_14" offset="0x7C08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_14" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_14" offset="0x7C0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_14" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_14" offset="0x7C10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_14" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_14" offset="0x7C14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_14" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_14" offset="0x7C18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_14" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_14" offset="0x7D00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_14" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_14" offset="0x7D04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_14" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_14" offset="0x7D08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_14" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_14" offset="0x7D0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_14" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_14" offset="0x7D10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_14" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_14" offset="0x7D14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_14" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_14" offset="0x7D18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_15" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_OUTBOUND_15" offset="0x7E00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - When the address of an outbound TLP is matched to this region and the FUNC_BYPASS field in the 'iATU Control 2 Register' is '0', then the function number used in generating the function part of the requester ID [RID] field of the TLP is taken from this 5-bit register The value in this register must be 0x0 unless multifunction operation in the controller is enabled [CX_NFUNC &amp;amp;gt; 1] - When you are using the AXI Bridge, then this field is swapped before AXI decomposition occurs so that the correct 'Max_Read_Request_Size' and 'Max_Payload_Size' values are used Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the ATTR field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TD field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TC field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the address of an outbound TLP is matched to this region, then the TYPE field of the TLP is changed to the value in this register Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_15" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_OUTBOUND_15" offset="0x7E04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode The iATU uses bits [27:12] of the untranslated address [on the XALI0/1/2 interface or AXI slave interface address] to form the BDF number of the outgoing CFG TLP This supports the Enhanced Configuration Address Mapping [ECAM] mechanism [Section 722 of the PCI Express Base 31 Specification, revision 10] by allowing all outgoing I/O and MEM TLPs [that have been translated to CFG] to be mapped from memory space into any 256 MB region of the PCIe configuration space Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="27" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HEADER_SUBSTITUTE_EN" width="1" begin="23" end="23" resetval="0x0" description="Header Substitute Enable When enabled and region address is matched, the iATU fully substitutes bytes 8-11 [for 3 DWORD header] or bytes 12-15 [for 4 DWORD header] of the outbound TLP header with the contents of the LWR_TARGET_RW field in IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i - 1: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register is used to fill bytes 8-to-11 [for 3 DWORD header] or bytes 12-to-15 [for 4 DWORD header] of the translated TLP header - 0: LWR_TARGET_RW in the iATU_LWR_TARGET_ADDR_OFF_OUTBOUND_i register forms the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INHIBIT_PAYLOAD" width="1" begin="22" end="22" resetval="0x0" description="Inhibit TLP Payload Data for TLP's in Matched Region assign iATU region to be TLP without data When enabled and region address is matched, the iATU marks all TLPs as having no payload data by forcing the TLP header Fmt[1] bit =0, regardless of the application inputs such as slv_wstrb - 1: Fmt[1] =0 so that only TLP type without data is sent For example, a Msg instead of MsgD will be sent - 0: Fmt[1] =0/1 so that TLPs with or without data can be sent Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SNP" width="1" begin="20" end="20" resetval="0x0" description="Serialize Non-Posted Requests In this mode, when the AXI Bridge is populated, same AXI ID Non-Posted Read/Write Requests are transmitted on the wire if there are no other same ID Non-Posted Requests outstanding Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUNC_BYPASS" width="1" begin="19" end="19" resetval="0x0" description="Function Number Translation Bypass In this mode, the function number of the translated TLP is taken from your application transmit interface and not from the CTRL_1_FUNC_NUM field of the 'iATU Control 1 Register' or the VF_NUMBER field of the 'iATU Control 3 Register' Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAG_SUBSTITUTE_EN" width="1" begin="16" end="16" resetval="0x0" description="TAG Substitute Enable When enabled and region address is matched, the iATU substitutes the TAG field of the outbound TLP header with the contents of the TAG field in this register The expected usage scenario is translation from AXI MWr to Vendor Defined Msg/MsgD Note [CX_TPH_ENABLE=1]: TAG substitution for MWr will not occur because this field [byte 6] in the TLP header is the ST field ST substitution can still take place using the MSG_CODE field in IATU_REGION_CTRL_2_OFF_OUTBOUND_i Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TAG" width="8" begin="15" end="8" resetval="0x0" description="TAG The substituted TAG field [byte 6] in the outgoing TLP header when TAG_SUBSTITUTE_EN is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs [Message Code] When the address of an outbound TLP is matched to this region, and the translated TLP TYPE field is Msg or MsgD then the message field of the TLP is changed to the value in this register Memory TLPs: [ST Steering Tag] When the ST field of an outbound TLP is matched to this region, and the translated TLP TYPE field targets memory space then the ST field of the TLP is changed to the value in this register Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_15" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_OUTBOUND_15" offset="0x7E08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_15" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_OUTBOUND_15" offset="0x7E0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_15" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_OUTBOUND_15" offset="0x7E10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_15" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_OUTBOUND_15" offset="0x7E14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW_OUTBOUND" width="32" begin="31" end="0" resetval="0x0" description="When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_ is '0' [normal operation]: - LWR_TARGET_RW[31:n] forms MSB's of the Lower Target part of the new address of the translated region - LWR_TARGET_RW[n-1:0] are not used [The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so the lower bits of the start address of the new address of the translated region [bits n-1:0] are always '0'] - n is log2[CX_ATU_MIN_REGION_SIZE] When HEADER_SUBSTITUTE_EN in IATU_REGION_CTRL_2_OFF_OUTBOUND_i is '1': - LWR_TARGET_RW[31:0] forms bytes 8-11 [for 3 dword header] or bytes 12-15 [for 4 dword header] of the outbound TLP header Usage scenarios include the transmission of Vendor Defined Messages where the controller determines the content of bytes 12 to 15 of the TLP header Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_15" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_OUTBOUND_15" offset="0x7E18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_15" acronym="PCIE_RC_IATU_REGION_CTRL_1_OFF_INBOUND_15" offset="0x7F00" width="32" description="iATU Region Control 1 Register.">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CTRL_1_FUNC_NUM" width="3" begin="22" end="20" resetval="0x0" description="Function Number - MEM-I/O: When the Address and BAR matching logic in the controller indicate that a MEM-I/O transaction matches a BAR in the function corresponding to this value, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set - CFG0/CFG 1: When the destination function number as specified in the routing ID of the TLP header matches the function, then address translation proceeds This check is only performed if the 'Function Number Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="19" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="INCREASE_REGION_SIZE" width="1" begin="13" end="13" resetval="0x0" description="Increase the maximum ATU Region size When set, the maximum ATU Region size is determined by CX_ATU_MAX_REGION_SIZE When clear, the maximum ATU Region size is 4 GB [default] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR" width="2" begin="10" end="9" resetval="0x0" description="When the ATTR field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'ATTR Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD" width="1" begin="8" end="8" resetval="0x0" description="When the TD field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TD Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC" width="3" begin="7" end="5" resetval="0x0" description="When the TC field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'TC Match Enable' bit of the 'iATU Control 2 Register' is set Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TYPE" width="5" begin="4" end="0" resetval="0x0" description="When the TYPE field of an inbound TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_15" acronym="PCIE_RC_IATU_REGION_CTRL_2_OFF_INBOUND_15" offset="0x7F04" width="32" description="iATU Region Control 2 Register.">
    <bitfield id="REGION_EN" width="1" begin="31" end="31" resetval="0x0" description="Region Enable This bit must be set to '1' for address translation to take place Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MATCH_MODE" width="1" begin="30" end="30" resetval="0x0" description="Match Mode Determines Inbound matching mode for TLPs The mode depends on the type of TLP that is received as follows: For MEM-I/O TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU operates using addresses as in the outbound direction The Region Base and Limit Registers must be setup - 1:BAR Match Mode BAR matching is used The 'BAR Number' field is relevant Not used for RC For CFG0 TLPs, this field is interpreted as follows: - 0: Routing ID Match Mode The iATU interprets the Routing ID [Bytes 8 to 11 of TLP header] as an address This corresponds to the upper 16 bits of the address in MEM-I/O transactions The Routing ID of the TLP must be within the base and limit of the iATU region for matching to proceed - 1: Accept Mode The iATU accepts all CFG0 transactions as address matches The routing ID in the CFG0 TLP is ignored This is useful as all received CFG0 TLPs should be processed regardless of the Bus number For MSG/MSGD TLPs, this field is interpreted as follows: - 0: Address Match Mode The iATU treats the third dword and fourth dword of the inbound MSG/MSGD TLP as an address and it is matched against the Region Base and Limit Registers - 1: Vendor ID Match Mode This mode is relevant for ID-routed Vendor Defined Messages The iATU ignores the Routing ID [Bus, Device, Function] in bits [31:16] of the third dword of the TLP header, but matches against the Vendor ID in bits [15:0] of the third dword of the TLP header Bits [15:0] of the Region Upper Base register should be programmed with the required Vendor ID The lower Base and Limit Register should be programmed to translate TLPs based on vendor specific information in the fourth dword of the TLP header - If SINGLE_ADDRESS_LOCATION_TRANSLATE_EN = 1 AND MSG_TYPE_MATCH_MODE = 1, then Match Mode is ignored Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="INVERT_MODE" width="1" begin="29" end="29" resetval="0x0" description="Invert Mode When set the address matching region is inverted Therefore, an address match occurs when the untranslated address is in the region outside the defined range [Base Address to Limit Address] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="CFG_SHIFT_MODE" width="1" begin="28" end="28" resetval="0x0" description="CFG Shift Mode This is useful for CFG transactions where the PCIe configuration mechanism maps bits [27:12] of the address to the bus/device and function number This allows a CFG configuration space to be located in any 256MB window of your application memory space using a 28-bit effective address Shifts bits [31:16] of the untranslated address to form bits [27:12] of the translated address Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="FUZZY_TYPE_MATCH_CODE" width="1" begin="27" end="27" resetval="0x0" description="Fuzzy Type Match Mode When enabled, the iATU relaxes the matching of the TLP TYPE field against the expected TYPE field so that - CfgRd0 and CfgRd1 TLPs are seen as identical Similarly with CfgWr0 and CfgWr 1 - MWr, MRd and MRdLk TLPs are seen as identical - The Routing field of Msg/MsgD TLPs is ignored - FetchAdd, Swap and CAS are seen as identical For example, CFG0 in the TYPE field in the 'iATU Control 1 Register' matches against an inbound CfgRd0, CfgRd1, CfgWr0 or CfgWr1 TLP Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RESPONSE_CODE" width="2" begin="25" end="24" resetval="0x0" description="Response Code Defines the type of response to give for accesses matching this region This overrides the normal RADM filter response Note that this feature is not available for any region where Single Address Location Translate is enabled - 00 - Normal RADM filter response is used - 01 - Unsupported request [UR] - 10 - Completer abort [CA] - 11 - Not used / undefined / reserved Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="SINGLE_ADDR_LOC_TRANS_EN" width="1" begin="23" end="23" resetval="0x0" description="Single Address Location Translate Enable When enabled, Rx TLPs can be translated to a single address location as determined by the target address register of the iATU region The main usage scenario is translation of Messages [such as Vendor Defined or ATS Messages] to MWr TLPs when the AXI bridge is enabled Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE_MATCH_EN" width="1" begin="21" end="21" resetval="0x0" description="Message Code Match Enable [Msg TLPS] Ensures that a successful message Code TLP field comparison match [see Message Code field of the 'iATU Control 2 Register'] occurs [in MSG transactions] for address translation to proceed ST Match Enable [Mem TLPs] Ensures that a successful ST TLP field comparison match [see ST field of the 'iATU Control 2 Register'] occurs [in MEM transactions] for address translation to proceed Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="20" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="FUNC_NUM_MATCH_EN" width="1" begin="19" end="19" resetval="0x0" description="Function Number Match Enable Ensures that a successful Function Number TLP field comparison match [see Function Number field of the 'iATU Control 1 Register'] occurs [in MEM-I/O and CFG0/CFG1 transactions] for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="18" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ATTR_MATCH_EN" width="1" begin="16" end="16" resetval="0x0" description="ATTR Match Enable Ensures that a successful ATTR TLP field comparison match [see ATTR field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TD_MATCH_EN" width="1" begin="15" end="15" resetval="0x0" description="TD Match Enable Ensures that a successful TD TLP field comparison match [see TD field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="TC_MATCH_EN" width="1" begin="14" end="14" resetval="0x0" description="TC Match Enable Ensures that a successful TC TLP field comparison match [see TC field of the 'iATU Control 1 Register'] occurs for address translation to proceed Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_TYPE_MATCH_MODE" width="1" begin="13" end="13" resetval="0x0" description="Message Type Match Mode When enabled, and if single address location translate enable is set, then inbound TLPs of type MSG/MSGd which match the type field of the iatu_region_ctrl_1_OFF_inbound register [=&amp;amp;gt;TYPE [4:3]=2'b10] will be translated Message type match mode overrides any value of MATCH_MODE field in this register Usage scenarios for this are translation of VDM or ATS messages when AXI bridge is configured on client interface Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="12" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BAR_NUM" width="3" begin="10" end="8" resetval="0x0" description="BAR Number When the BAR number of an inbound MEM or IO TLP ' that is matched by the normal internal BAR address matching mechanism ' is the same as this field, address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Match Mode' bit of the 'iATU Control 2 Register' is set - 000b - BAR 0 - 001b - BAR 1 - 010b - BAR 2 - 011b - BAR 3 - 100b - BAR 4 - 101b - BAR 5 - 110b - ROM - 111b - reserved - IO translation would require either 00100b or 00101b in the inbound TLP TYPE the BAR Number set in the range 000b - 101b and that BAR configured as an IO BAR Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="MSG_CODE" width="8" begin="7" end="0" resetval="0x0" description="MSG TLPs: [Message Code] When the TYPE field of an inbound Msg/MsgD TLP is matched to this value, then address translation proceeds [when all other enabled field-matches are successful] This check is only performed if the 'Message Code Match Enable' bit of the 'iATU Control 2 Register' is set Memory TLPs: [ST Steering Tag] When the ST field of an inbound TLP is matched to this value, then address translation proceeds This check is only performed if the 'ST Match Enable' bit of the 'iATU Control2 Register' is set The setting is independent of the setting of the TH field Only Valid when the CX_TPH_ENABLE configuration parameter is 1 Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_15" acronym="PCIE_RC_IATU_LWR_BASE_ADDR_OFF_INBOUND_15" offset="0x7F08" width="32" description="iATU Lower Base Address Register. The CX_ATU_MIN_REGION_SIZE configuration parameter (Value Range: 4 kB, 8 kB, 16 kB, 32 kB, 64 kB defaults to 64 kB) specifies the minimum size of an address translation region. For example, if set to 64 kB; the lower 16 bits of the Base, Limit and Target registers are zero and all address regions are aligned on 64 kB boundaries. More precisely, the lower log2(CX_ATU_MIN_REGION_SIZE) bits are zero.">
    <bitfield id="LWR_BASE_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms bits [31:n] of the start address of the address region to be translated n is log2[CX_ATU_MIN_REGION_SIZE] Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_BASE_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms bits [n- 1:0] of the start address of the address region to be translated The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller n is log2[CX_ATU_MIN_REGION_SIZE]" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_15" acronym="PCIE_RC_IATU_UPPER_BASE_ADDR_OFF_INBOUND_15" offset="0x7F0C" width="32" description="iATU Upper Base Address Register.">
    <bitfield id="UPPER_BASE_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start [and end] address of the address region to be translated Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
  <register id="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_15" acronym="PCIE_RC_IATU_LIMIT_ADDR_OFF_INBOUND_15" offset="0x7F10" width="32" description="iATU Limit Address Register.">
    <bitfield id="LIMIT_ADDR_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms upper bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LIMIT_ADDR_HW" width="16" begin="15" end="0" resetval="0xFFFF" description="Forms lower bits of the end address of the address region to be translated The end address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary, so these bits are always 0 A write to this location is ignored by the PCIe controller" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_15" acronym="PCIE_RC_IATU_LWR_TARGET_ADDR_OFF_INBOUND_15" offset="0x7F14" width="32" description="iATU Lower Target Address Register.">
    <bitfield id="LWR_TARGET_RW" width="16" begin="31" end="16" resetval="0x0" description="Forms MSB's of the Lower Target part of the new address of the translated region These bits are always '0' - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode Note: This register field is sticky" range="" rwaccess="RW"/>
    <bitfield id="LWR_TARGET_HW" width="16" begin="15" end="0" resetval="0x0" description="Forms the LSB's of the Lower Target part of the new address of the translated region The start address must be aligned to a CX_ATU_MIN_REGION_SIZE kB boundary [in address match mode] and to the Bar size boundary [in BAR match mode] so that these bits are always '0' If the BAR is smaller than the iATU region size, then the iATU target address must align to the iATU region size otherwise it must align to the BAR size A write to this location is ignored by the PCIe controller - Field size depends on log2[CX_ATU_MIN_REGION_SIZE] in address match mode - Field size depends on log2[BAR_MASK+1] in BAR match mode" range="" rwaccess="R"/>
  </register>
  <register id="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_15" acronym="PCIE_RC_IATU_UPPER_TARGET_ADDR_OFF_INBOUND_15" offset="0x7F18" width="32" description="iATU Upper Target Address Register.">
    <bitfield id="UPPER_TARGET_RW" width="32" begin="31" end="0" resetval="0x0" description="Forms bits [63:32] of the start address [Upper Target part] of the new address of the translated region In systems with a 32-bit address space, this register is not used and therefore writing to this register has no effect Note: This register field is sticky" range="" rwaccess="RW"/>
  </register>
</module>
