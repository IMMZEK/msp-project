<module name="SPI0" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="SPIGCR0" acronym="SPIGCR0" offset="0x0" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RESET" width="1" begin="0" end="0" resetval="0x0" description="Reset bit for the module. This bit needs to be set to 1 before any operation on SPI can be done." range="" rwaccess="RW"/>
  </register>
  <register id="SPIGCR1" acronym="SPIGCR1" offset="0x4" width="32" description="">
    <bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ENABLE" width="1" begin="24" end="24" resetval="0x0" description="SPI enable. This bit enables the SPI transfers. The other SPI configuration registers except SPIINT0[16] DMAREQEN bit should be configured before writing 1 to this bit. This will prevent the SPI from responding to bus operations erroneously while it is in the process of being configured. The SPIINT0[16] DMAREQEN bit should be enabled after setting SPIGCR1[24] ENABLE bit. If SPIINT0[16] DMAREQEN bit is enabled before setting SPIGCR1[24] ENABLE bit then the first DMA request that occurs before the SPI is ready for data transfer may get dropped. When" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="7" begin="23" end="17" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="LOOPBACK" width="1" begin="16" end="16" resetval="0x0" description="Internal loop-back test mode. The internal self-test option can be enabled by setting this bit. If the SPIm_SIMO and SPIm_SOMI pins are configured with SPI functionality, then the SPIm_SIMO pin is internally connected to the SPIm_SOMI pin. The transmit data is looped back as receive data and is stored in the receive field of the concerned buffer. Externally, during loop-back operation, the SPIm_CLK pin outputs an inactive value, SPIm_SIMO and SPIm_SOMI pins remain in high-impedance state. The SPI has to be initialized in master mode before the loop-back can be selected. If the SPI is initialized in slave mode or a data transfer is ongoing, errors may result." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="7" begin="15" end="9" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="POWERDOWN" width="1" begin="8" end="8" resetval="0x0" description="When active, the SPI state machine enters a power-down state." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="7" end="2" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CLKMOD" width="1" begin="1" end="1" resetval="0x0" description="Clock mode. Selects either an internal or external clock source. This bit also determines the I/O direction of the chip select (SPIm_SCSnx) pins in functional mode." range="" rwaccess="RW"/>
    <bitfield id="MASTER" width="1" begin="0" end="0" resetval="0x0" description="SPIm_SIMO/SPIm_SOMI pin direction determination. Determines the direction of the SPIm_SIMO and SPIm_SOMI pins. This bit determines whether the SPI is in Master mode or Slave mode." range="" rwaccess="RW"/>
  </register>
  <register id="SPIINT0" acronym="SPIINT0" offset="0x8" width="32" description="">
    <bitfield id="RESERVED" width="15" begin="31" end="17" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DMAREQEN" width="1" begin="16" end="16" resetval="0x0" description="DMA request enable. Enables the DMA request signal to be generated for both receive and transmit channels. Set SPIINT0[16] DMAREQEN bit only after setting the SPIGCR1[24] ENABLE bit to 1." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="TXINTENA" width="1" begin="9" end="9" resetval="0x0" description="An interrupt is to be generated every time data is written to the shift register, so that a new data can be written to TXBUF. Setting this bit will generate an interrupt if theSPIFLG[9] TXINTFLG bit is set to 1." range="" rwaccess="RW"/>
    <bitfield id="RXINTENA" width="1" begin="8" end="8" resetval="0x0" description="Receive interrupt enable. An interrupt is to be generated when the SPIFLG[8] RXINTFLG bit is set." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="OVRNINTENA" width="1" begin="6" end="6" resetval="0x0" description="Overrun interrupt enable. An interrupt is to be generated when the SPIFLG[6] OVRNINTFLG bit is set." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="BITERRENA" width="1" begin="4" end="4" resetval="0x0" description="Enables interrupt on bit error. An interrupt is to be generated when the SPIFLG[4] BITERRFLG bit is set." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="SPILVL" acronym="SPILVL" offset="0xC" width="32" description="">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="TXINTLVL" width="1" begin="9" end="9" resetval="0x0" description="Transmit interrupt level." range="" rwaccess="RW"/>
    <bitfield id="RXINTLVL" width="1" begin="8" end="8" resetval="0x0" description="Receive interrupt level." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="OVRNINTLVL" width="1" begin="6" end="6" resetval="0x0" description="Receive overrun interrupt level." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="BITERRLVL" width="1" begin="4" end="4" resetval="0x0" description="Bit error interrupt level." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="SPIFLG" acronym="SPIFLG" offset="0x10" width="32" description="">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="TXINTFLG" width="1" begin="9" end="9" resetval="0x0" description="Transmitter empty interrupt flag. Serves as an interrupt flag indicating that the transmit buffer (TXBUF) is empty and a new data can be written to it. This flag is set when a data is copied to the shift register either directly or from the TXBUF register. This bit is cleared by one of following ways:" range="" rwaccess="R"/>
    <bitfield id="RXINTFLG" width="1" begin="8" end="8" resetval="0x0" description="Receiver full interrupt flag. This flag is set when a word is received and copied into the buffer register (SPIBUF). This bit is cleared under the following ways:" range="" rwaccess="RW1C"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="OVRNINTFLG" width="1" begin="6" end="6" resetval="0x0" description="Receiver overrun flag. The bit is set when a receive operation completes before the previous character has been read from the receive buffer. The bit indicates that the last received character has been overwritten and therefore lost. This bit is cleared under the following conditions:" range="" rwaccess="RW1C"/>
    <bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="BITERRFLG" width="1" begin="4" end="4" resetval="0x0" description="This bit is set when a mismatch of internal transmit data and transmitted data is detected. The SPI samples the signal of the transmit pin (master: SPIm_SIMO, slave: SPIm_SOMI) at the receive point (half clock cycle after transmit point). If the sampled value differs from the transmitted value a bit error is detected and the flag is set. A possible reason for a bit error can be a too high bit rate/capacitive load or another master/slave trying to transmit at the same time. This flag can be cleared by one of the following ways:" range="" rwaccess="RW1C"/>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="SPIPC0" acronym="SPIPC0" offset="0x14" width="32" description="">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="SOMIFUN" width="1" begin="11" end="11" resetval="0x0" description="Slave out, master in pin function. This bit determines whether the SPIm_SOMI pin is Reserved or a SPI functional pin." range="" rwaccess="RW"/>
    <bitfield id="SIMOFUN" width="1" begin="10" end="10" resetval="0x0" description="Slave in, master out pin function. This bit determines whether the SPIm_SIMO pin is Reserved or a SPI functional pin." range="" rwaccess="RW"/>
    <bitfield id="CLKFUN" width="1" begin="9" end="9" resetval="0x0" description="SPI clock pin function. This bit determines whether the SPIm_CLK pin is Reserved or a SPI functional pin." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="7" begin="8" end="2" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="SCSFUN" width="2" begin="1" end="0" resetval="0x0" description="SPI chip select pin function. The bit in this field determines whether the SPIm_SCSnx pin is Reserved or a SPI functional pin. For more information about supported number of the chip select pins, see , SPI Overview." range="" rwaccess="RW"/>
  </register>
  <register id="SPIDAT0" acronym="SPIDAT0" offset="0x38" width="32" description="">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="TXDATA" width="16" begin="15" end="0" resetval="0x0" description="SPI transmit data (value = 0-FFFFh). When written, these bits will be copied to the shift register if it is empty. If the shift register is not empty, the TXBUF will hold the written values. SPIGCR1[24] ENABLE bit must be set to 1 before this register can be written to. Writing a 0 to the SPIGCR1[24] ENABLE bit forces the SPIDAT0[15-0] TXDATA field to 0." range="" rwaccess="RW"/>
  </register>
  <register id="SPIDAT1" acronym="SPIDAT1" offset="0x3C" width="32" description="">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CSHOLD" width="1" begin="28" end="28" resetval="0x0" description="Chip select hold mode. The SPIDAT1[28] CSHOLD bit is supported in master mode only. In slave mode, this bit is ignored. SPIDAT1[28] CSHOLD bit defines the behavior of the chip select lines at the end of a data transfer." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="WDEL" width="1" begin="26" end="26" resetval="0x0" description="Enable the delay counter at the end of the current transaction. The SPIDAT1[26] WDEL bit is supported in master mode only. In slave mode, this bit is ignored." range="" rwaccess="RW"/>
    <bitfield id="DFSEL" width="2" begin="25" end="24" resetval="0x0" description="Data word format select:" range="" rwaccess="RW"/>
    <bitfield id="CSNR" width="8" begin="23" end="16" resetval="0x0" description="Chip select number (value = 0-FFh). The SPIDAT1[23-16] CSNR field defines the chip select that will be activated during the data transfer. In slave mode, this field must be written as 00h; in master mode, the value of this field is driven on the chip select pins. Bits [23-18] are not used. Bits [17-16] are put out on SPIm_SCSn[1-0] during a transfer. For more information about supported number of the chip select pins, see , SPI Overview." range="" rwaccess="RW"/>
    <bitfield id="TXDATA" width="16" begin="15" end="0" resetval="0x0" description="Transfer data (value = 0-FFFFh). When written, these bits will be copied to the shift register if it is empty. If the shift register is not empty, the TXBUF will hold the written values." range="" rwaccess="RW"/>
  </register>
  <register id="SPIBUF" acronym="SPIBUF" offset="0x40" width="32" description="">
    <bitfield id="RXEMPTY" width="1" begin="31" end="31" resetval="0x1" description="Receive data buffer empty. When the host reads the SPIBUF field or the whole SPIBUF register, this will automatically set the SPIBUF[31] RXEMPTY bit. When a data transfer is completed, the received data is copied into SPIBUF register, the SPIBUF[31] RXEMPTY bit is cleared. This flag is set to 1 under following conditions: Write-clearing the" range="" rwaccess="RS"/>
    <bitfield id="RXOVR" width="1" begin="30" end="30" resetval="0x0" description="Receive data buffer overrun. When a data transfer is completed and the received data is copied into the RXBUF while it is already full, SPIBUF[30] RXOVR bit is set. An overrun always occurs to the RXBUF, and SPIBUF register contents never get overwritten until after it is read by the CPU/DMA. Reading" range="" rwaccess="RC"/>
    <bitfield id="TXFULL" width="1" begin="29" end="29" resetval="0x0" description="Transmit data buffer full. This flag is a read-only flag. Writing into SPIDAT0 or SPIDAT1 field while the TX shift register is full will automatically set the SPIBUF[29] TXFULL bit. Once the data is copied to the shift register, the SPIBUF[29] TXFULL bit will be cleared. Writing to the SPIDAT0/SPIDAT1 register when both TXBUF and the TX shift register are empty does not set the SPIBUF[29] TXFULL bit." range="" rwaccess="R"/>
    <bitfield id="BITERR" width="1" begin="28" end="28" resetval="0x0" description="Bit error. There was a mismatch of internal transmit data and transmitted data. The SPI samples the signal of the transmit pin (master: SIMO, slave: SOMI) at the receive point (half clock cycle after transmit point). If the sampled value differs from the transmitted value, a bit error is detected and the flag BITERR is set. A possible reason for a bit error can be noise, a too-high bit rate/capacitive load, or another master/slave trying to transmit at the same time." range="" rwaccess="RC"/>
    <bitfield id="RESERVED" width="12" begin="27" end="16" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RXDATA" width="16" begin="15" end="0" resetval="0x0" description="SPI receive data (value = 0-FFFFh). This is the received data, transferred from the receive shift-register at the end of a transfer completion. Irrespective of the programmed character length and the direction of shifting, the received data is stored right-justified in the register." range="" rwaccess="R"/>
  </register>
  <register id="SPIEMU" acronym="SPIEMU" offset="0x44" width="32" description="">
    <bitfield id="RXEMPTY" width="1" begin="31" end="31" resetval="0x1" description="Receive data buffer empty." range="" rwaccess="R"/>
    <bitfield id="RXOVR" width="1" begin="30" end="30" resetval="0x0" description="Receive data buffer overrun." range="" rwaccess="R"/>
    <bitfield id="TXFULL" width="1" begin="29" end="29" resetval="0x0" description="Transmit data buffer full." range="" rwaccess="R"/>
    <bitfield id="BITERR" width="1" begin="28" end="28" resetval="0x0" description="Mismatch of internal transmit data and transmitted data." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="12" begin="27" end="16" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RXDATA" width="16" begin="15" end="0" resetval="0x0" description="SPI receive data (value = 0-FFFFh). SPI emulation is a mirror of the SPIBUF register. The only difference between SPIEMU and SPIBUF registers is that a read from SPIEMU register does not clear any of the status flags." range="" rwaccess="R"/>
  </register>
  <register id="SPIDELAY" acronym="SPIDELAY" offset="0x48" width="32" description="">
    <bitfield id="C2TDELAY" width="8" begin="31" end="24" resetval="0x0" description="Chip-select-active-to-transmit-start delay (value = 0-FFh).SPIDELAY[31-24] C2TDELAY bit is used in master mode only. It defines a setup time for the slave device that delays the data transmission from the chip select active edge by a multiple of SPI module clock cycles. C2TDELAY can be configured between 2 and 257 SPI module clock cycles (See ). The setup time value is calculated as follows: t When the chip select signal becomes active, the slave has to prepare for data transfer within 320 ns." range="" rwaccess="RW"/>
    <bitfield id="T2CDELAY" width="8" begin="23" end="16" resetval="0x0" description="Transmit-end-to-chip-select-inactive delay (value = 0-FFh).SPIDELAY[23-16] T2CDELAY is used in master mode only. It defines a hold time for the slave device that delays the chip select deactivation by a multiple of SPI module clock cycles after the last bit is transferred. T2CDELAY can be configured between 2 and 256 SPI module clock cycles (See ). The hold time value is calculated as follows: t Note: If T2CDELAY = 0, then t After the last data bit (or parity bit) is being transferred the chip select signal is held active for 160 ns." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="SPIDEF" acronym="SPIDEF" offset="0x4C" width="32" description="">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CSDEF" width="2" begin="1" end="0" resetval="0x1" description="Chip Select Default pattern. In master mode, the bit in this field determines the SPIm_SCSnx pin state when no transmissions are currently performed. It allows the user to set a chip select pattern which deselects all the SPI slaves. For more information about supported number of the chip select pins, see , SPI Overview." range="" rwaccess="RW"/>
  </register>
  <register id="SPIFMT0" acronym="SPIFMT0" offset="0x50" width="32" description="">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="WDELAY" width="6" begin="29" end="24" resetval="0x0" description="Delay in between transmissions. Idle time that will be applied at the end of the current transmission if the SPIDAT1[26] WDEL bit is set in the current buffer. The delay to be applied is equal to: WDELAY &#215; P P" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="23" end="21" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="SHIFTDIR" width="1" begin="20" end="20" resetval="0x0" description="Shift direction." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="19" end="19" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DISCSTIMERS" width="1" begin="18" end="18" resetval="0x0" description="Disable chip select timers for this format register. The C2TDELAY and T2CDELAY timers are by default enabled for all the data format registers. Using this bit, these timers can be disabled for a particular data format if not required. When a master is handling multiple slaves, with varied set-up hold requirement, the application can selectively choose to include or not include the chip select delay timers for any slaves." range="" rwaccess="RW"/>
    <bitfield id="POLARITY" width="1" begin="17" end="17" resetval="0x0" description="SPI clock polarity." range="" rwaccess="RW"/>
    <bitfield id="PHASE" width="1" begin="16" end="16" resetval="0x0" description="SPI clock delay." range="" rwaccess="RW"/>
    <bitfield id="PRESCALE" width="8" begin="15" end="8" resetval="0x0" description="SPI prescaler (value = 0-FFh). It determines the bit transfer rate if the SPI is the network master and is directly derived from the SPI module clock. If the SPI is configured as slave, SPIFMTn[15-8] PRESCALE does not need to be configured. The clock rate can be calculated as: SPI clock frequency = SPI module clock/(PRESCALE + 1)" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CHARLEN" width="5" begin="4" end="0" resetval="0x0" description="SPI data word length (value = 0-1Fh). Legal values are 2h (data word length = 2 bit) to 10h (data word length = 16). Illegal values, such as 0 or 1Fh are not detected and their effect is indeterminate." range="" rwaccess="RW"/>
  </register>
  <register id="SPIFMT1" acronym="SPIFMT1" offset="0x54" width="32" description="">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="WDELAY" width="6" begin="29" end="24" resetval="0x0" description="Delay in between transmissions. Idle time that will be applied at the end of the current transmission if the SPIDAT1[26] WDEL bit is set in the current buffer. The delay to be applied is equal to: WDELAY &#215; P P" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="23" end="21" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="SHIFTDIR" width="1" begin="20" end="20" resetval="0x0" description="Shift direction." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="19" end="19" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DISCSTIMERS" width="1" begin="18" end="18" resetval="0x0" description="Disable chip select timers for this format register. The C2TDELAY and T2CDELAY timers are by default enabled for all the data format registers. Using this bit, these timers can be disabled for a particular data format if not required. When a master is handling multiple slaves, with varied set-up hold requirement, the application can selectively choose to include or not include the chip select delay timers for any slaves." range="" rwaccess="RW"/>
    <bitfield id="POLARITY" width="1" begin="17" end="17" resetval="0x0" description="SPI clock polarity." range="" rwaccess="RW"/>
    <bitfield id="PHASE" width="1" begin="16" end="16" resetval="0x0" description="SPI clock delay." range="" rwaccess="RW"/>
    <bitfield id="PRESCALE" width="8" begin="15" end="8" resetval="0x0" description="SPI prescaler (value = 0-FFh). It determines the bit transfer rate if the SPI is the network master and is directly derived from the SPI module clock. If the SPI is configured as slave, SPIFMTn[15-8] PRESCALE does not need to be configured. The clock rate can be calculated as: SPI clock frequency = SPI module clock/(PRESCALE + 1)" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CHARLEN" width="5" begin="4" end="0" resetval="0x0" description="SPI data word length (value = 0-1Fh). Legal values are 2h (data word length = 2 bit) to 10h (data word length = 16). Illegal values, such as 0 or 1Fh are not detected and their effect is indeterminate." range="" rwaccess="RW"/>
  </register>
  <register id="SPIFMT2" acronym="SPIFMT2" offset="0x58" width="32" description="">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="WDELAY" width="6" begin="29" end="24" resetval="0x0" description="Delay in between transmissions. Idle time that will be applied at the end of the current transmission if the SPIDAT1[26] WDEL bit is set in the current buffer. The delay to be applied is equal to: WDELAY &#215; P P" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="23" end="21" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="SHIFTDIR" width="1" begin="20" end="20" resetval="0x0" description="Shift direction." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="19" end="19" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DISCSTIMERS" width="1" begin="18" end="18" resetval="0x0" description="Disable chip select timers for this format register. The C2TDELAY and T2CDELAY timers are by default enabled for all the data format registers. Using this bit, these timers can be disabled for a particular data format if not required. When a master is handling multiple slaves, with varied set-up hold requirement, the application can selectively choose to include or not include the chip select delay timers for any slaves." range="" rwaccess="RW"/>
    <bitfield id="POLARITY" width="1" begin="17" end="17" resetval="0x0" description="SPI clock polarity." range="" rwaccess="RW"/>
    <bitfield id="PHASE" width="1" begin="16" end="16" resetval="0x0" description="SPI clock delay." range="" rwaccess="RW"/>
    <bitfield id="PRESCALE" width="8" begin="15" end="8" resetval="0x0" description="SPI prescaler (value = 0-FFh). It determines the bit transfer rate if the SPI is the network master and is directly derived from the SPI module clock. If the SPI is configured as slave, SPIFMTn[15-8] PRESCALE does not need to be configured. The clock rate can be calculated as: SPI clock frequency = SPI module clock/(PRESCALE + 1)" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CHARLEN" width="5" begin="4" end="0" resetval="0x0" description="SPI data word length (value = 0-1Fh). Legal values are 2h (data word length = 2 bit) to 10h (data word length = 16). Illegal values, such as 0 or 1Fh are not detected and their effect is indeterminate." range="" rwaccess="RW"/>
  </register>
  <register id="SPI_INTVEC0" acronym="SPI_INTVEC0" offset="0x60" width="32" description="">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTVECT0" width="5" begin="5" end="1" resetval="0x0" description="Interrupt vector for interrupt line INT0. SPI_INTVEC0[5-1] INTVECT0 field returns the vector of the pending interrupt at interrupt line INT0. If more than one interrupt is pending, SPI_INTVEC0[5-1] INTVECT0 field always references the highest priority interrupt source first. The interrupts available for SPI in the descending order of their priorities are as given below. The Vectors for each of these interrupts will be reflected on the The following are the SPI interrupt vectors for line INT0:" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="SPI_INTVEC1" acronym="SPI_INTVEC1" offset="0x64" width="32" description="">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTVECT1" width="5" begin="5" end="1" resetval="0x0" description="Interrupt vector for interrupt line INT1. SPI_INTVEC1[5-1] INTVECT1 field returns the vector of the pending interrupt at interrupt line INT1. If more than one interrupt is pending, SPI_INTVEC1[5-1] INTVECT1 field always references the highest priority interrupt source first. The interrupts available for SPI in the descending order of their priorities are as given below. The The following are the SPI interrupt vectors for line INT1:" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="SPIREV" acronym="SPIREV" offset="0x1FC" width="32" description="">
    <bitfield id="REV" width="32" begin="31" end="0" resetval="0x4A050300" description="TI internal data. Identifies revision of peripheral." range="" rwaccess="R"/>
  </register>
</module>
