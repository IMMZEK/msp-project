<module name="ISP_CCP2" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="CCP2_REVISION" acronym="CCP2_REVISION" offset="0x0" width="32" description="MODULE REVISION This register contains the IP revision code in binary coded digital. For example, 0x01 = revision 0.1 and 0x21 = revision 2.1">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Write 0's for future compatibility.Reads returns 0." range="" rwaccess="R"/>
    <bitfield id="REV" width="8" begin="7" end="0" resetval="TI internall data" description="IP revision [7:4] Major revision[3:0] Minor revision" range="" rwaccess="R"/>
  </register>
  <register id="CCP2_SYSCONFIG" acronym="CCP2_SYSCONFIG" offset="0x4" width="32" description="SYSTEM CONFIGURATION REGISTERThis register is the Interconnect-socket system configuration register.">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="MSTANDBY_MODE" width="2" begin="13" end="12" resetval="0x0" description="Sets the behavior of the master port power management signals" range="" rwaccess="RW">
      <bitenum value="0" token="MSTANDBY_MODE_0" description="Force-standby. MStandby is asserted only when the module is disabled."/>
      <bitenum value="1" token="MSTANDBY_MODE_1" description="No-standby. MStandby is never asserted."/>
      <bitenum value="2" token="MSTANDBY_MODE_2" description="Smart-standby: MStandby is asserted based on the activity of the module. The module tries to go to standby during the vertical blanking period."/>
    </bitfield>
    <bitfield id="RESERVED" width="10" begin="11" end="2" resetval="0x000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SOFT_RESET" width="1" begin="1" end="1" resetval="0x0" description="Software reset. Set the bit to 1 to trigger a module reset. The bit is automatically reset by the hardware. Read returns 0." range="" rwaccess="RW">
      <bitenum value="0" token="SOFT_RESET_0" description="Normal mode"/>
      <bitenum value="1" token="SOFT_RESET_1" description="The module is reset."/>
    </bitfield>
    <bitfield id="AUTO_IDLE" width="1" begin="0" end="0" resetval="0x1" description="Internal Interconnect clock-gating strategy" range="" rwaccess="RW">
      <bitenum value="0" token="AUTO_IDLE_0" description="Interconnect clock is free-running."/>
      <bitenum value="1" token="AUTO_IDLE_1" description="Automatic Interconnect clock-gating strategy is applied based on Interconnect interface activity."/>
    </bitfield>
  </register>
  <register id="CCP2_SYSSTATUS" acronym="CCP2_SYSSTATUS" offset="0x8" width="32" description="SYSTEM STATUS REGISTER This register provides status information about the module, excluding interrupt status information.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x00000000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="RESET_DONE" width="1" begin="0" end="0" resetval="0x1" description="Internal reset monitoring" range="" rwaccess="R">
      <bitenum value="0" token="RESET_DONE_0" description="Internal module reset is ongoing."/>
      <bitenum value="1" token="RESET_DONE_1" description="Reset complete"/>
    </bitfield>
  </register>
  <register id="CCP2_LC01_IRQENABLE" acronym="CCP2_LC01_IRQENABLE" offset="0xC" width="32" description="INTERRUPT ENABLE REGISTER - LOGICAL CHANNELS 0 and 1 This register regroups all the events related to logical channel 0 and logical channel 1. The events related to logical channel 0 trigger SINTERRUPTN[0]. The events related to logical channel 1 trigger SINTERRUPTN[1]. The channel is enabled for events to be generated on that channel.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC1_FS_IRQ" width="1" begin="27" end="27" resetval="0x0" description="Logical channel 1 - Frame start synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC1_FS_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC1_FS_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC1_LE_IRQ" width="1" begin="26" end="26" resetval="0x0" description="Logical channel 1 - Line end synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC1_LE_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC1_LE_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC1_LS_IRQ" width="1" begin="25" end="25" resetval="0x0" description="Logical channel 1 - Line start synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC1_LS_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC1_LS_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC1_FE_IRQ" width="1" begin="24" end="24" resetval="0x0" description="Logical channel 1 - Frame end synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC1_FE_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC1_FE_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC1_COUNT_IRQ" width="1" begin="23" end="23" resetval="0x0" description="Logical channel 1 - Frame counter reached" range="" rwaccess="RW">
      <bitenum value="0" token="LC1_COUNT_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC1_COUNT_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC1_FIFO_OVF_IRQ" width="1" begin="21" end="21" resetval="0x0" description="Logical channel 1 - FIFO overflow error" range="" rwaccess="RW">
      <bitenum value="0" token="LC1_FIFO_OVF_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC1_FIFO_OVF_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC1_CRC_IRQ" width="1" begin="20" end="20" resetval="0x0" description="Logical channel 1 - CRC error" range="" rwaccess="RW">
      <bitenum value="0" token="LC1_CRC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC1_CRC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC1_FSP_IRQ" width="1" begin="19" end="19" resetval="0x0" description="Logical channel 1 - FSP error" range="" rwaccess="RW">
      <bitenum value="0" token="LC1_FSP_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC1_FSP_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC1_FW_IRQ" width="1" begin="18" end="18" resetval="0x0" description="Logical channel 1 - Frame width error" range="" rwaccess="RW">
      <bitenum value="0" token="LC1_FW_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC1_FW_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC1_FSC_IRQ" width="1" begin="17" end="17" resetval="0x0" description="Logical channel 1 - False synchronization code error" range="" rwaccess="RW">
      <bitenum value="0" token="LC1_FSC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC1_FSC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC1_SSC_IRQ" width="1" begin="16" end="16" resetval="0x0" description="Logical channel 1 - Shifted synchronization code error.\This interrupt can be triggered if the PHY is set in parallel mode (CCP2_CTRL.IO_OUT_SEL = 1)." range="" rwaccess="RW">
      <bitenum value="0" token="LC1_SSC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC1_SSC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC0_FS_IRQ" width="1" begin="11" end="11" resetval="0x0" description="Logical channel 0 - Frame start synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC0_FS_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC0_FS_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC0_LE_IRQ" width="1" begin="10" end="10" resetval="0x0" description="Logical channel 0 - Line end synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC0_LE_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC0_LE_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC0_LS_IRQ" width="1" begin="9" end="9" resetval="0x0" description="Logical channel 0 - Line start synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC0_LS_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC0_LS_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC0_FE_IRQ" width="1" begin="8" end="8" resetval="0x0" description="Logical channel 0 - Frame end synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC0_FE_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC0_FE_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC0_COUNT_IRQ" width="1" begin="7" end="7" resetval="0x0" description="Logical channel 0 - Frame counter reached" range="" rwaccess="RW">
      <bitenum value="0" token="LC0_COUNT_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC0_COUNT_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC0_FIFO_OVF_IRQ" width="1" begin="5" end="5" resetval="0x0" description="Logical channel 0 - FIFO overflow error" range="" rwaccess="RW">
      <bitenum value="0" token="LC0_FIFO_OVF_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC0_FIFO_OVF_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC0_CRC_IRQ" width="1" begin="4" end="4" resetval="0x0" description="Logical channel 0 - CRC error" range="" rwaccess="RW">
      <bitenum value="0" token="LC0_CRC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC0_CRC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC0_FSP_IRQ" width="1" begin="3" end="3" resetval="0x0" description="Logical channel 0 - FSP error" range="" rwaccess="RW">
      <bitenum value="0" token="LC0_FSP_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC0_FSP_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC0_FW_IRQ" width="1" begin="2" end="2" resetval="0x0" description="Logical channel 0 - Frame width error" range="" rwaccess="RW">
      <bitenum value="0" token="LC0_FW_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC0_FW_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC0_FSC_IRQ" width="1" begin="1" end="1" resetval="0x0" description="Logical channel 0 - False synchronization code error" range="" rwaccess="RW">
      <bitenum value="0" token="LC0_FSC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC0_FSC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC0_SSC_IRQ" width="1" begin="0" end="0" resetval="0x0" description="Logical channel 0 - Shifted synchronization code errorThis interrupt can be triggered if the PHY is set in parallel mode (CCP2_CTRL.IO_OUT_SEL = 1)." range="" rwaccess="RW">
      <bitenum value="0" token="LC0_SSC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC0_SSC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
  </register>
  <register id="CCP2_LC01_IRQSTATUS" acronym="CCP2_LC01_IRQSTATUS" offset="0x10" width="32" description="INTERRUPT STATUS REGISTER - LOGICAL CHANNELS 0 and 1 This register regroups all the events related to logical channel 0 and logical channel 1. The events related to logical channel 0 trigger SINTERRUPTN[0]. The events related to logical channel 1 trigger SINTERRUPTN[1]. The channel is enabled for events to be generated on that channel.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC1_FS_IRQ" width="1" begin="27" end="27" resetval="0x0" description="Logical channel 1 - Frame start synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC1_FS_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC1_FS_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC1_LE_IRQ" width="1" begin="26" end="26" resetval="0x0" description="Logical channel 1 - Line end synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC1_LE_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC1_LE_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC1_LS_IRQ" width="1" begin="25" end="25" resetval="0x0" description="Logical channel 1 - Line start synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC1_LS_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC1_LS_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC1_FE_IRQ" width="1" begin="24" end="24" resetval="0x0" description="Logical channel 1 - Frame end synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC1_FE_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC1_FE_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC1_COUNT_IRQ" width="1" begin="23" end="23" resetval="0x0" description="Logical channel 1 - Frame counter reached status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC1_COUNT_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC1_COUNT_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC1_FIFO_OVF_IRQ" width="1" begin="21" end="21" resetval="0x0" description="Logical channel 1 - FIFO overflow error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC1_FIFO_OVF_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC1_FIFO_OVF_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC1_CRC_IRQ" width="1" begin="20" end="20" resetval="0x0" description="Logical channel 1 - CRC error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC1_CRC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC1_CRC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC1_FSP_IRQ" width="1" begin="19" end="19" resetval="0x0" description="Logical channel 1 - FSP error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC1_FSP_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC1_FSP_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC1_FW_IRQ" width="1" begin="18" end="18" resetval="0x0" description="Logical channel 1 - Frame width error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC1_FW_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC1_FW_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC1_FSC_IRQ" width="1" begin="17" end="17" resetval="0x0" description="Logical channel 1 - False synchronization code error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC1_FSC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC1_FSC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC1_SSC_IRQ" width="1" begin="16" end="16" resetval="0x0" description="Logical channel 1 - Shifted synchronization code error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC1_SSC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC1_SSC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC0_FS_IRQ" width="1" begin="11" end="11" resetval="0x0" description="Logical channel 0 - Frame start synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC0_FS_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC0_FS_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC0_LE_IRQ" width="1" begin="10" end="10" resetval="0x0" description="Logical channel 0 - Line end synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC0_LE_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC0_LE_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC0_LS_IRQ" width="1" begin="9" end="9" resetval="0x0" description="Logical channel 0 - Line start synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC0_LS_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC0_LS_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC0_FE_IRQ" width="1" begin="8" end="8" resetval="0x0" description="Logical channel 0 - Frame end synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC0_FE_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC0_FE_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC0_COUNT_IRQ" width="1" begin="7" end="7" resetval="0x0" description="Logical channel 0 - Frame counter reached status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC0_COUNT_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC0_COUNT_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC0_FIFO_OVF_IRQ" width="1" begin="5" end="5" resetval="0x0" description="Logical channel 0 - FIFO overflow error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC0_FIFO_OVF_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC0_FIFO_OVF_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC0_CRC_IRQ" width="1" begin="4" end="4" resetval="0x0" description="Logical channel 0 - CRC error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC0_CRC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC0_CRC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC0_FSP_IRQ" width="1" begin="3" end="3" resetval="0x0" description="Logical channel 0 - FSP error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC0_FSP_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC0_FSP_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC0_FW_IRQ" width="1" begin="2" end="2" resetval="0x0" description="Logical channel 0 - Frame width error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC0_FW_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC0_FW_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC0_FSC_IRQ" width="1" begin="1" end="1" resetval="0x0" description="Logical channel 0 - False synchronization code error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC0_FSC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC0_FSC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC0_SSC_IRQ" width="1" begin="0" end="0" resetval="0x0" description="Logical channel 0 - Shifted synchronization code error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC0_SSC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC0_SSC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
  </register>
  <register id="CCP2_LC23_IRQENABLE" acronym="CCP2_LC23_IRQENABLE" offset="0x14" width="32" description="INTERRUPT ENABLE REGISTER - LOGICAL CHANNELS 2 and 3 This register regroups all the events related to logical channel 2 and logical channel 3. The events related to logical channel 2 trigger SINTERRUPTN[2]. The events related to logical channel 3 trigger SINTERRUPTN[3]. The channel is enabled for events to be generated on that channel.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC3_FS_IRQ" width="1" begin="27" end="27" resetval="0x0" description="Logical channel 3 - Frame start synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC3_FS_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC3_FS_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC3_LE_IRQ" width="1" begin="26" end="26" resetval="0x0" description="Logical channel 3 - Line end synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC3_LE_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC3_LE_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC3_LS_IRQ" width="1" begin="25" end="25" resetval="0x0" description="Logical channel 3 - Line start synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC3_LS_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC3_LS_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC3_FE_IRQ" width="1" begin="24" end="24" resetval="0x0" description="Logical channel 3 - Frame end synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC3_FE_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC3_FE_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC3_COUNT_IRQ" width="1" begin="23" end="23" resetval="0x0" description="Logical channel 3 - Frame counter reached" range="" rwaccess="RW">
      <bitenum value="0" token="LC3_COUNT_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC3_COUNT_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC3_FIFO_OVF_IRQ" width="1" begin="21" end="21" resetval="0x0" description="Logical channel 3 - FIFO overflow error" range="" rwaccess="RW">
      <bitenum value="0" token="LC3_FIFO_OVF_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC3_FIFO_OVF_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC3_CRC_IRQ" width="1" begin="20" end="20" resetval="0x0" description="Logical channel 3 - CRC error" range="" rwaccess="RW">
      <bitenum value="0" token="LC3_CRC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC3_CRC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC3_FSP_IRQ" width="1" begin="19" end="19" resetval="0x0" description="Logical channel 3 - FSP error" range="" rwaccess="RW">
      <bitenum value="0" token="LC3_FSP_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC3_FSP_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC3_FW_IRQ" width="1" begin="18" end="18" resetval="0x0" description="Logical channel 3 - Frame width error" range="" rwaccess="RW">
      <bitenum value="0" token="LC3_FW_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC3_FW_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC3_FSC_IRQ" width="1" begin="17" end="17" resetval="0x0" description="Logical channel 3 - False synchronization code error" range="" rwaccess="RW">
      <bitenum value="0" token="LC3_FSC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC3_FSC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC3_SSC_IRQ" width="1" begin="16" end="16" resetval="0x0" description="Logical channel 3 - Shifted synchronization code errorThis interrupt can be triggered if the PHY is set in parallel mode (CCP2_CTRL.IO_OUT_SEL = 1)." range="" rwaccess="RW">
      <bitenum value="0" token="LC3_SSC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC3_SSC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC2_FS_IRQ" width="1" begin="11" end="11" resetval="0x0" description="Logical channel 2 - Frame start synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC2_FS_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC2_FS_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC2_LE_IRQ" width="1" begin="10" end="10" resetval="0x0" description="Logical channel 2 - Line end synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC2_LE_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC2_LE_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC2_LS_IRQ" width="1" begin="9" end="9" resetval="0x0" description="Logical channel 2 - Line start synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC2_LS_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC2_LS_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC2_FE_IRQ" width="1" begin="8" end="8" resetval="0x0" description="Logical channel 2 - Frame end synchronization code detection" range="" rwaccess="RW">
      <bitenum value="0" token="LC2_FE_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC2_FE_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC2_COUNT_IRQ" width="1" begin="7" end="7" resetval="0x0" description="Logical channel 2 - Frame counter reached" range="" rwaccess="RW">
      <bitenum value="0" token="LC2_COUNT_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC2_COUNT_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC2_FIFO_OVF_IRQ" width="1" begin="5" end="5" resetval="0x0" description="Logical channel 2 - FIFO overflow error" range="" rwaccess="RW">
      <bitenum value="0" token="LC2_FIFO_OVF_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC2_FIFO_OVF_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC2_CRC_IRQ" width="1" begin="4" end="4" resetval="0x0" description="Logical channel 2 - CRC error" range="" rwaccess="RW">
      <bitenum value="0" token="LC2_CRC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC2_CRC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC2_FSP_IRQ" width="1" begin="3" end="3" resetval="0x0" description="Logical channel 2 - FSP error" range="" rwaccess="RW">
      <bitenum value="0" token="LC2_FSP_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC2_FSP_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC2_FW_IRQ" width="1" begin="2" end="2" resetval="0x0" description="Logical channel 2 - Frame width error" range="" rwaccess="RW">
      <bitenum value="0" token="LC2_FW_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC2_FW_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC2_FSC_IRQ" width="1" begin="1" end="1" resetval="0x0" description="Logical channel 2 - False synchronization code error" range="" rwaccess="RW">
      <bitenum value="0" token="LC2_FSC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC2_FSC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LC2_SSC_IRQ" width="1" begin="0" end="0" resetval="0x0" description="Logical channel 2 - Shifted synchronization code errorThis interrupt can be triggered if the PHY is set in parallel mode (CCP2_CTRL.IO_OUT_SEL = 1)." range="" rwaccess="RW">
      <bitenum value="0" token="LC2_SSC_IRQ_0" description="Event is masked."/>
      <bitenum value="1" token="LC2_SSC_IRQ_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
  </register>
  <register id="CCP2_LC23_IRQSTATUS" acronym="CCP2_LC23_IRQSTATUS" offset="0x18" width="32" description="INTERRUPT STATUS REGISTER - LOGICAL CHANNELS 2 and 3 This register regroups all the events related to logical channel 2 and logical channel 3. The events related to logical channel 2 trigger SINTERRUPTN[2]. The events related to logical channel 3 trigger SINTERRUPTN[3]. The channel is enabled for events to be generated on that channel.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC3_FS_IRQ" width="1" begin="27" end="27" resetval="0x0" description="Logical channel 3 - Frame start synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC3_FS_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC3_FS_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC3_LE_IRQ" width="1" begin="26" end="26" resetval="0x0" description="Logical channel 3 - Line end synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC3_LE_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC3_LE_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC3_LS_IRQ" width="1" begin="25" end="25" resetval="0x0" description="Logical channel 3 - Line start synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC3_LS_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC3_LS_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC3_FE_IRQ" width="1" begin="24" end="24" resetval="0x0" description="Logical channel 3 - Frame end synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC3_FE_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC3_FE_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC3_COUNT_IRQ" width="1" begin="23" end="23" resetval="0x0" description="Logical channel 3 - Frame counter reached status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC3_COUNT_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC3_COUNT_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC3_FIFO_OVF_IRQ" width="1" begin="21" end="21" resetval="0x0" description="Logical channel 3 - FIFO overflow error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC3_FIFO_OVF_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC3_FIFO_OVF_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC3_CRC_IRQ" width="1" begin="20" end="20" resetval="0x0" description="Logical channel 3 - CRC error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC3_CRC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC3_CRC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC3_FSP_IRQ" width="1" begin="19" end="19" resetval="0x0" description="Logical channel 3 - FSP error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC3_FSP_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC3_FSP_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC3_FW_IRQ" width="1" begin="18" end="18" resetval="0x0" description="Logical channel 3 - Frame width error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC3_FW_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC3_FW_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC3_FSC_IRQ" width="1" begin="17" end="17" resetval="0x0" description="Logical channel 3 - False synchronization code error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC3_FSC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC3_FSC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC3_SSC_IRQ" width="1" begin="16" end="16" resetval="0x0" description="Logical channel 3 - Shifted synchronization code error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC3_SSC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC3_SSC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC2_FS_IRQ" width="1" begin="11" end="11" resetval="0x0" description="Logical channel 2 - Frame start synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC2_FS_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC2_FS_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC2_LE_IRQ" width="1" begin="10" end="10" resetval="0x0" description="Logical channel 2 - Line end synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC2_LE_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC2_LE_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC2_LS_IRQ" width="1" begin="9" end="9" resetval="0x0" description="Logical channel 2 - Line start synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC2_LS_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC2_LS_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC2_FE_IRQ" width="1" begin="8" end="8" resetval="0x0" description="Logical channel 2 - Frame end synchronization code detection status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC2_FE_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC2_FE_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC2_COUNT_IRQ" width="1" begin="7" end="7" resetval="0x0" description="Logical channel 2 - Frame counter reached status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC2_COUNT_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC2_COUNT_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LC2_FIFO_OVF_IRQ" width="1" begin="5" end="5" resetval="0x0" description="Logical channel 2 - FIFO overflow error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC2_FIFO_OVF_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC2_FIFO_OVF_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC2_CRC_IRQ" width="1" begin="4" end="4" resetval="0x0" description="Logical channel 2 - CRC error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC2_CRC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC2_CRC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC2_FSP_IRQ" width="1" begin="3" end="3" resetval="0x0" description="Logical channel 2 - FSP error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC2_FSP_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC2_FSP_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC2_FW_IRQ" width="1" begin="2" end="2" resetval="0x0" description="Logical channel 2 - Frame width error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC2_FW_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC2_FW_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC2_FSC_IRQ" width="1" begin="1" end="1" resetval="0x0" description="Logical channel 2 - False synchronization code error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC2_FSC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC2_FSC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LC2_SSC_IRQ" width="1" begin="0" end="0" resetval="0x0" description="Logical channel 2 - Shifted synchronization code error status" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LC2_SSC_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LC2_SSC_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
  </register>
  <register id="CCP2_LCM_IRQENABLE" acronym="CCP2_LCM_IRQENABLE" offset="0x2C" width="32" description="INTERRUPT ENABLE REGISTER - Memory channel. This register regroups all the events related to memory channel 2. The events related to the memory channel trigger SINTERRUPTN[8]. The channel is enabled for events to be generated on that channel.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x00000000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LCM_OCPERROR" width="1" begin="1" end="1" resetval="0x0" description="An Interconnect error occurred on the master read port." range="" rwaccess="RW">
      <bitenum value="0" token="LCM_OCPERROR_0" description="Event is masked."/>
      <bitenum value="1" token="LCM_OCPERROR_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
    <bitfield id="LCM_EOF" width="1" begin="0" end="0" resetval="0x0" description="Memory read channel - End of frame" range="" rwaccess="RW">
      <bitenum value="0" token="LCM_EOF_0" description="Event is masked."/>
      <bitenum value="1" token="LCM_EOF_1" description="Event generates an interrupt when it occurs."/>
    </bitfield>
  </register>
  <register id="CCP2_LCM_IRQSTATUS" acronym="CCP2_LCM_IRQSTATUS" offset="0x30" width="32" description="INTERRUPT STATUS REGISTER - Memory channel. This register regroups all the events related to memory channel. The events related to the memory channel trigger SINTERRUPTN[8]. The channel is enabled for events to be generated on that channel.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x00000000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="LCM_OCPERROR" width="1" begin="1" end="1" resetval="0x0" description="An Interconnect error occurred on the master read port." range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LCM_OCPERROR_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LCM_OCPERROR_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="LCM_EOF" width="1" begin="0" end="0" resetval="0x0" description="Memory read channel - End of frame" range="" rwaccess="RW 1toClr">
      <bitenum value="0" token="LCM_EOF_0" description="READS: Event is false. WRITES: Status bit unchanged"/>
      <bitenum value="1" token="LCM_EOF_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
  </register>
  <register id="CCP2_CTRL" acronym="CCP2_CTRL" offset="0x40" width="32" description="GLOBAL CONTROL REGISTER. This register controls the CCP2B RECEIVER module. This register is not modified dynamically (except IF_EN bit field).">
    <bitfield id="FRACDIV" width="17" begin="31" end="15" resetval="0x10000" description="Fractional clock divider control for the video port.The means video port clock is VPBASECLOCK * FRACDIV/65536. ." range="" rwaccess="RW"/>
    <bitfield id="POSTED" width="1" begin="14" end="14" resetval="0x0" description="Selects between posted and nonposted writes" range="" rwaccess="RW">
      <bitenum value="0" token="POSTED_0" description="Nonposted"/>
      <bitenum value="1" token="POSTED_1" description="Posted"/>
    </bitfield>
    <bitfield id="DBG_EN" width="1" begin="13" end="13" resetval="0x0" description="Enables the debug mode" range="" rwaccess="">
      <bitenum value="0" token="DBG_EN_0" description="Disable"/>
      <bitenum value="1" token="DBG_EN_1" description="Enable"/>
    </bitfield>
    <bitfield id="VP_CLK_POL" width="1" begin="12" end="12" resetval="0x0" description="VP clock polarity" range="" rwaccess="RW">
      <bitenum value="0" token="VP_CLK_POL_0" description="The CCP2B RECEIVER module writes the data on the VP on the pixel clock falling edge. The module connected to the VP samples the data on the pixel clock rising edge."/>
      <bitenum value="1" token="VP_CLK_POL_1" description="The CCP2B RECEIVER module writes the data on the VP on the pixel clock raising edge. The module connected to the VP samples the data on the pixel clock falling edge."/>
    </bitfield>
    <bitfield id="VP_ONLY_EN" width="1" begin="11" end="11" resetval="0x0" description="VP only enable" range="" rwaccess="RW">
      <bitenum value="0" token="VP_ONLY_EN_0" description="The VP is enabled and the Interconnect master port is enabled."/>
      <bitenum value="1" token="VP_ONLY_EN_1" description="The VP is enabled and the Interconnect master port is disabled. The embedded data and pixel data are output on the VP."/>
    </bitfield>
    <bitfield id="INV" width="1" begin="10" end="10" resetval="0x0" description="Strobe/clock inversion control signal" range="" rwaccess="RW">
      <bitenum value="0" token="INV_0" description="Not inverted"/>
      <bitenum value="1" token="INV_1" description="Inverted"/>
    </bitfield>
    <bitfield id="VP_CLK_FORCE_ON" width="1" begin="9" end="9" resetval="0x1" description="Controls video port clock gating during frame blanking periods." range="" rwaccess="RW">
      <bitenum value="0" token="VP_CLK_FORCE_ON_0" description="The video port clock is gated during vertical blanking periods."/>
      <bitenum value="1" token="VP_CLK_FORCE_ON_1" description="The video port clock is free-running during vertical blanking periods."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="8" end="8" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="BURST" width="3" begin="7" end="5" resetval="0x0" description="Forces the write burst size used by the moduleThe write burst size must never exceed the output FIFO size. The output FIFO size can be read with the CCP2_GNQ.FIFODEPTH bit field." range="" rwaccess="RW">
      <bitenum value="0" token="BURST_0" description="1 x 64-bit burst = single request"/>
      <bitenum value="1" token="BURST_1" description="2 x 64-bit bursts"/>
      <bitenum value="2" token="BURST_2" description="4 x 64-bit bursts"/>
      <bitenum value="3" token="BURST_3" description="8 x 64-bit bursts"/>
      <bitenum value="4" token="BURST_4" description="16 x 64-bit bursts"/>
    </bitfield>
    <bitfield id="MODE" width="1" begin="4" end="4" resetval="0x0" description="Selects the receiver operating mode" range="" rwaccess="RW">
      <bitenum value="0" token="MODE_0" description="MIPI&#174; CSI1-compatible mode. When this bit is set, all CCP2B settings are ignored. If the settings are not set correctly to MIPI&#174; CSI1 values, the behavior of the receiver is unpredictable."/>
      <bitenum value="1" token="MODE_1" description="CCP2B compatible mode"/>
    </bitfield>
    <bitfield id="FRAME" width="1" begin="3" end="3" resetval="0x0" description="Set the modality in which IF_EN works." range="" rwaccess="RW">
      <bitenum value="0" token="FRAME_0" description="When SW writes IF_EN = 0, the interface is disabled immediately."/>
      <bitenum value="1" token="FRAME_1" description="When SW writes IF_EN = 0, the interface is disabled after the next FEC synchronization code."/>
    </bitfield>
    <bitfield id="IO_OUT_SEL" width="1" begin="2" end="2" resetval="0x0" description="IO cell output mode selection" range="" rwaccess="RW">
      <bitenum value="0" token="IO_OUT_SEL_0" description="RESERVED"/>
      <bitenum value="1" token="IO_OUT_SEL_1" description="MUST BE SET TO 1, IO output is parallel: DATA32, DATATOG, SYNTOG. The SSC_IRQ error can be triggered in this configuration."/>
    </bitfield>
    <bitfield id="PHY_SEL" width="1" begin="1" end="1" resetval="0x0" description="Physical layer protocol selection. Applies for all logical channels" range="" rwaccess="RW">
      <bitenum value="0" token="PHY_SEL_0" description="Data/clock physical layer"/>
      <bitenum value="1" token="PHY_SEL_1" description="Data/strobe physical layer"/>
    </bitfield>
    <bitfield id="IF_EN" width="1" begin="0" end="0" resetval="0x0" description="Enables the physical interface to the module" range="" rwaccess="RW">
      <bitenum value="0" token="IF_EN_0" description="The interface is disabled. If FRAME = 0, it is disabled immediately. If FRAME = 1, it is disabled on the next FEC synchronization code. If FRAME=1, it is advised to disable the logical channels (CCP2_LCX_CTRL.CHAN_EN = 0) before writing IF_EN = 0."/>
      <bitenum value="1" token="IF_EN_1" description="The interface is enabled immediately, the data acquisition starts on the next FSC synchronization code. Writing 1 to this register when the current value is 0 clears the output FIFO. The pixel data of the following frame is written in the PING buffer; that is, the CCP2_LCX_CTRL.PING_PONG bits are also reset to 1."/>
    </bitfield>
  </register>
  <register id="CCP2_DBG" acronym="CCP2_DBG" offset="0x44" width="32" description="DEBUG REGISTER This register provides a way to debug the CCP2B RECEIVER module with no image sensor connected to the module. The debug mode is enabled by.DBG_EN. Each write to this register provides a full 32-bit word to the CCP2B RECEIVER, even when only 8 or 16 bits are written. The newly written value is merged with the previous value (check the example in , CCP2 Receiver Basic Programming Model).">
    <bitfield id="DBG" width="32" begin="31" end="0" resetval="0x00000000" description="32-bit input value.Write-only register. Read returns 0." range="" rwaccess="W"/>
  </register>
  <register id="CCP2_GNQ" acronym="CCP2_GNQ" offset="0x48" width="32" description="GENERIC PARAMETER REGISTER This register provide a way to read the generic parameters used in the design.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0000000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="OCPREADPORT" width="1" begin="5" end="5" resetval="1" description="The Interconnect master read port, the DPCM encoder and ALAW decompression are only present when this bit is set." range="" rwaccess="R"/>
    <bitfield id="FIFODEPTH" width="3" begin="4" end="2" resetval="0x2" description="Output FIFO size in multiple of 64 bits." range="" rwaccess="R">
      <bitenum value="0" token="FIFODEPTH_0_r" description="2x 64 bits"/>
      <bitenum value="1" token="FIFODEPTH_1_r" description="4x 64 bits"/>
      <bitenum value="2" token="FIFODEPTH_2_r" description="8x 64 bits"/>
      <bitenum value="3" token="FIFODEPTH_3_r" description="16x 64 bits"/>
      <bitenum value="4" token="FIFODEPTH_4_r" description="32x 64 bits"/>
      <bitenum value="5" token="FIFODEPTH_5_r" description="64x 64 bits"/>
    </bitfield>
    <bitfield id="NBCHANNELS" width="2" begin="1" end="0" resetval="0x2" description="Number of logical channels supported by the module." range="" rwaccess="R">
      <bitenum value="0" token="NBCHANNELS_0_r" description="1 logical channel"/>
      <bitenum value="1" token="NBCHANNELS_1_r" description="2 logical channels"/>
      <bitenum value="2" token="NBCHANNELS_2_r" description="4 logical channels"/>
      <bitenum value="3" token="NBCHANNELS_3_r" description="8 logical channels"/>
    </bitfield>
  </register>
  <register id="CCP2_CTRL1" acronym="CCP2_CTRL1" offset="0x4C" width="32" description="Global control register (2)">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="LEVH" width="7" begin="30" end="24" resetval="0x00" description="Controls generation of MFlag[1:0]:Allowed values 0..FIFO_SIZE ." range="" rwaccess="RW">
      <bitenum value="0" token="LEVH_0" description="FIFO_LEV=LEVL"/>
      <bitenum value="1" token="LEVH_1" description="Unused"/>
      <bitenum value="10" token="LEVH_10" description="LEVLFIFO_LEV and FIFO_LEV=LEVH"/>
      <bitenum value="11" token="LEVH_11" description="LEVHFIFO_LEV"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="23" end="23" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="LEVL" width="7" begin="22" end="16" resetval="0x00" description="Controls generation of MFlag[1:0]:Allowed values 0..FIFO_SIZE ." range="" rwaccess="RW">
      <bitenum value="0" token="LEVL_0" description="FIFO_LEV=LEVL"/>
      <bitenum value="1" token="LEVL_1" description="Unused"/>
      <bitenum value="10" token="LEVL_10" description="LEVLFIFO_LEV and FIFO_LEV=LEVH"/>
      <bitenum value="11" token="LEVL_11" description="LEVHFIFO_LEV"/>
    </bitfield>
    <bitfield id="RESERVED" width="14" begin="15" end="2" resetval="0x0000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="BLANKING" width="2" begin="1" end="0" resetval="0x0" description="Controls the number of clock pulses provided during vertical and horizontal clock periodsWhen the blanking period provided by the camera is lower than the value set here, the blanking period is shortened by the CCP2_RECEIVER to prevent internal FIFO overflow. Software must increase the sensor blanking period in that case. ." range="" rwaccess="RW">
      <bitenum value="0" token="BLANKING_0" description="4 video port clock cycles"/>
      <bitenum value="1" token="BLANKING_1" description="16 video port clock cycles"/>
      <bitenum value="2" token="BLANKING_2" description="64 video port clock cycles"/>
      <bitenum value="3" token="BLANKING_3" description="Free-running"/>
    </bitfield>
  </register>
  <register id="CCP2_LCx_CTRL_0" acronym="CCP2_LCx_CTRL_0" offset="0x50" width="32" description="CONTROL REGISTER - LOGICAL CHANNEL x. This register controls logical channel x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="COUNT" width="8" begin="31" end="24" resetval="0x00" description="Sets the number of frame to acquire. Once the frame acquisition starts, the COUNT value is decremented after every frame. When COUNT reaches 0, the COUNT_IRQ interrupt is triggered and CHAN_EN is set to '0'. Writes to this bit field are controlled by the COUNT_UNLOCK bit. COUNT can be overwritten dynamically with a new count value. 0: Infinite number of frames (no count).1: 1 frame to acquire...255: 255 frames to acquire." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="CRC_EN" width="1" begin="19" end="19" resetval="0" description="Enables the cyclic redundancy check." range="" rwaccess="RW">
      <bitenum value="0" token="CRC_EN_0" description="Disabled"/>
      <bitenum value="1" token="CRC_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="DPCM_PRED" width="1" begin="18" end="18" resetval="0" description="Selects the DPCM predictor to be used for the RAW6+DPCM10, RAW7+DPCM10 and RAW8+DPCM12 data formats.The RAW8+DPCM10 data format always use the simple predictor." range="" rwaccess="RW">
      <bitenum value="0" token="DPCM_PRED_0" description="The advanced predictor is used"/>
      <bitenum value="1" token="DPCM_PRED_1" description="The simple predictor is used."/>
    </bitfield>
    <bitfield id="PING_PONG" width="1" begin="17" end="17" resetval="1" description="Indicates whether the PING or PONG destination address (CCP2_LC0_DAT_PING_ADDR or CCP2_LC0_DAT_PONG_ADDR) was used to write the last frame. This bit field toggles after every FEC sync code." range="" rwaccess="R">
      <bitenum value="0" token="PING_PONG_0_r" description="PING buffer"/>
      <bitenum value="1" token="PING_PONG_1_r" description="PONG buffer"/>
    </bitfield>
    <bitfield id="COUNT_UNLOCK" width="1" begin="16" end="16" resetval="0" description="Unlock writes to the COUNT bit field." range="" rwaccess="W">
      <bitenum value="0" token="COUNT_UNLOCK_0_w" description="COUNT bit field is locked. Writes have no effect"/>
      <bitenum value="1" token="COUNT_UNLOCK_1_w" description="COUNT bit field is unlocked. Writes are possible."/>
    </bitfield>
    <bitfield id="ALPHA" width="8" begin="15" end="8" resetval="0x00" description="Alpha value for RGB888 and RBG444." range="" rwaccess="RW"/>
    <bitfield id="FORMAT" width="6" begin="7" end="2" resetval="0x00" description="Data format selection." range="" rwaccess="RW">
      <bitenum value="0" token="FORMAT_0" description="YUV422 BIG ENDIAN"/>
      <bitenum value="1" token="FORMAT_1" description="YUV422 LITTLE ENDIAN"/>
      <bitenum value="2" token="FORMAT_2" description="YUV420"/>
      <bitenum value="3" token="FORMAT_3" description="YUV422 + VP or RAW8 + VP"/>
      <bitenum value="4" token="FORMAT_4" description="RGB444 + EXP16"/>
      <bitenum value="5" token="FORMAT_5" description="RGB565"/>
      <bitenum value="6" token="FORMAT_6" description="RGB888"/>
      <bitenum value="7" token="FORMAT_7" description="RGB888 + EXP32"/>
      <bitenum value="8" token="FORMAT_8" description="RAW6 + EXP8"/>
      <bitenum value="9" token="FORMAT_9" description="RAW6 + DPCM10 + EXP16"/>
      <bitenum value="10" token="FORMAT_10" description="RAW6 + DPCM10 + VP"/>
      <bitenum value="11" token="FORMAT_11" description="RAW10 - RAW6 DPCMRAW10 data from sensor is DPCM compressed into RAW6 before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="12" token="FORMAT_12" description="RAW7 + EXP8"/>
      <bitenum value="13" token="FORMAT_13" description="RAW7 + DPCM10 + EXP16"/>
      <bitenum value="14" token="FORMAT_14" description="RAW7 + DPCM10 + VP"/>
      <bitenum value="15" token="FORMAT_15" description="RAW10 - RAW6 DPCM + EXP8RAW10 data from sensor is DPCM compressed into RAW6 and expanded to 8 bits before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="16" token="FORMAT_16" description="RAW8 This mode can be used to output RAW6 and RAW7 as well."/>
      <bitenum value="17" token="FORMAT_17" description="RAW8 + DPCM10 + EXP16"/>
      <bitenum value="18" token="FORMAT_18" description="RAW8 + DPCM10 + VP"/>
      <bitenum value="19" token="FORMAT_19" description="RAW10 - RAW7 DPCMRAW10 data from sensor is DPCM compressed into RAW7 before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="20" token="FORMAT_20" description="RAW10"/>
      <bitenum value="21" token="FORMAT_21" description="RAW10 + EXP16"/>
      <bitenum value="22" token="FORMAT_22" description="RAW10 + VP"/>
      <bitenum value="23" token="FORMAT_23" description="RAW10 - RAW7 DPCM + EXP8RAW10 data from sensor is DPCM compressed into RAW7 and expanded to 8 bits before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="24" token="FORMAT_24" description="RAW12"/>
      <bitenum value="25" token="FORMAT_25" description="RAW12 + EXP16"/>
      <bitenum value="26" token="FORMAT_26" description="RAW12 + VP"/>
      <bitenum value="27" token="FORMAT_27" description="RAW10 - RAW8 DPCMRAW10 data from sensor is DPCM compressed into RAW8 before it is send to memory."/>
      <bitenum value="28" token="FORMAT_28" description="JPEG8 + FSP"/>
      <bitenum value="29" token="FORMAT_29" description="JPEG8"/>
      <bitenum value="30" token="FORMAT_30" description="RAW10 - RAW8RAW10 data from sensor is right shifted to produce RAW8 before it is send to memory"/>
      <bitenum value="31" token="FORMAT_31" description="RAW8 DPCM12 - RAW12 + VPUsed predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="32" token="FORMAT_32" description="RAW10 - RAW8 ALAW"/>
      <bitenum value="33" token="FORMAT_33" description="RAW8 DPCM10 - ALAW"/>
    </bitfield>
    <bitfield id="REGION_EN" width="1" begin="1" end="1" resetval="0" description="Enables the setting of regions of interest in the frame: SOF region, EOF region and DAT region." range="" rwaccess="RW">
      <bitenum value="0" token="REGION_EN_0" description="Disabled"/>
      <bitenum value="1" token="REGION_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="CHAN_EN" width="1" begin="0" end="0" resetval="0x1 for LC0" description="Enables the logical channel" range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_CTRL_1" acronym="CCP2_LCx_CTRL_1" offset="0x80" width="32" description="CONTROL REGISTER - LOGICAL CHANNEL x. This register controls logical channel x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="COUNT" width="8" begin="31" end="24" resetval="0x00" description="Sets the number of frame to acquire. Once the frame acquisition starts, the COUNT value is decremented after every frame. When COUNT reaches 0, the COUNT_IRQ interrupt is triggered and CHAN_EN is set to '0'. Writes to this bit field are controlled by the COUNT_UNLOCK bit. COUNT can be overwritten dynamically with a new count value. 0: Infinite number of frames (no count).1: 1 frame to acquire...255: 255 frames to acquire." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="CRC_EN" width="1" begin="19" end="19" resetval="0" description="Enables the cyclic redundancy check." range="" rwaccess="RW">
      <bitenum value="0" token="CRC_EN_0" description="Disabled"/>
      <bitenum value="1" token="CRC_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="DPCM_PRED" width="1" begin="18" end="18" resetval="0" description="Selects the DPCM predictor to be used for the RAW6+DPCM10, RAW7+DPCM10 and RAW8+DPCM12 data formats.The RAW8+DPCM10 data format always use the simple predictor." range="" rwaccess="RW">
      <bitenum value="0" token="DPCM_PRED_0" description="The advanced predictor is used"/>
      <bitenum value="1" token="DPCM_PRED_1" description="The simple predictor is used."/>
    </bitfield>
    <bitfield id="PING_PONG" width="1" begin="17" end="17" resetval="1" description="Indicates whether the PING or PONG destination address (CCP2_LC0_DAT_PING_ADDR or CCP2_LC0_DAT_PONG_ADDR) was used to write the last frame. This bit field toggles after every FEC sync code." range="" rwaccess="R">
      <bitenum value="0" token="PING_PONG_0_r" description="PING buffer"/>
      <bitenum value="1" token="PING_PONG_1_r" description="PONG buffer"/>
    </bitfield>
    <bitfield id="COUNT_UNLOCK" width="1" begin="16" end="16" resetval="0" description="Unlock writes to the COUNT bit field." range="" rwaccess="W">
      <bitenum value="0" token="COUNT_UNLOCK_0_w" description="COUNT bit field is locked. Writes have no effect"/>
      <bitenum value="1" token="COUNT_UNLOCK_1_w" description="COUNT bit field is unlocked. Writes are possible."/>
    </bitfield>
    <bitfield id="ALPHA" width="8" begin="15" end="8" resetval="0x00" description="Alpha value for RGB888 and RBG444." range="" rwaccess="RW"/>
    <bitfield id="FORMAT" width="6" begin="7" end="2" resetval="0x00" description="Data format selection." range="" rwaccess="RW">
      <bitenum value="0" token="FORMAT_0" description="YUV422 BIG ENDIAN"/>
      <bitenum value="1" token="FORMAT_1" description="YUV422 LITTLE ENDIAN"/>
      <bitenum value="2" token="FORMAT_2" description="YUV420"/>
      <bitenum value="3" token="FORMAT_3" description="YUV422 + VP or RAW8 + VP"/>
      <bitenum value="4" token="FORMAT_4" description="RGB444 + EXP16"/>
      <bitenum value="5" token="FORMAT_5" description="RGB565"/>
      <bitenum value="6" token="FORMAT_6" description="RGB888"/>
      <bitenum value="7" token="FORMAT_7" description="RGB888 + EXP32"/>
      <bitenum value="8" token="FORMAT_8" description="RAW6 + EXP8"/>
      <bitenum value="9" token="FORMAT_9" description="RAW6 + DPCM10 + EXP16"/>
      <bitenum value="10" token="FORMAT_10" description="RAW6 + DPCM10 + VP"/>
      <bitenum value="11" token="FORMAT_11" description="RAW10 - RAW6 DPCMRAW10 data from sensor is DPCM compressed into RAW6 before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="12" token="FORMAT_12" description="RAW7 + EXP8"/>
      <bitenum value="13" token="FORMAT_13" description="RAW7 + DPCM10 + EXP16"/>
      <bitenum value="14" token="FORMAT_14" description="RAW7 + DPCM10 + VP"/>
      <bitenum value="15" token="FORMAT_15" description="RAW10 - RAW6 DPCM + EXP8RAW10 data from sensor is DPCM compressed into RAW6 and expanded to 8 bits before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="16" token="FORMAT_16" description="RAW8 This mode can be used to output RAW6 and RAW7 as well."/>
      <bitenum value="17" token="FORMAT_17" description="RAW8 + DPCM10 + EXP16"/>
      <bitenum value="18" token="FORMAT_18" description="RAW8 + DPCM10 + VP"/>
      <bitenum value="19" token="FORMAT_19" description="RAW10 - RAW7 DPCMRAW10 data from sensor is DPCM compressed into RAW7 before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="20" token="FORMAT_20" description="RAW10"/>
      <bitenum value="21" token="FORMAT_21" description="RAW10 + EXP16"/>
      <bitenum value="22" token="FORMAT_22" description="RAW10 + VP"/>
      <bitenum value="23" token="FORMAT_23" description="RAW10 - RAW7 DPCM + EXP8RAW10 data from sensor is DPCM compressed into RAW7 and expanded to 8 bits before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="24" token="FORMAT_24" description="RAW12"/>
      <bitenum value="25" token="FORMAT_25" description="RAW12 + EXP16"/>
      <bitenum value="26" token="FORMAT_26" description="RAW12 + VP"/>
      <bitenum value="27" token="FORMAT_27" description="RAW10 - RAW8 DPCMRAW10 data from sensor is DPCM compressed into RAW8 before it is send to memory."/>
      <bitenum value="28" token="FORMAT_28" description="JPEG8 + FSP"/>
      <bitenum value="29" token="FORMAT_29" description="JPEG8"/>
      <bitenum value="30" token="FORMAT_30" description="RAW10 - RAW8RAW10 data from sensor is right shifted to produce RAW8 before it is send to memory"/>
      <bitenum value="31" token="FORMAT_31" description="RAW8 DPCM12 - RAW12 + VPUsed predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="32" token="FORMAT_32" description="RAW10 - RAW8 ALAW"/>
      <bitenum value="33" token="FORMAT_33" description="RAW8 DPCM10 - ALAW"/>
    </bitfield>
    <bitfield id="REGION_EN" width="1" begin="1" end="1" resetval="0" description="Enables the setting of regions of interest in the frame: SOF region, EOF region and DAT region." range="" rwaccess="RW">
      <bitenum value="0" token="REGION_EN_0" description="Disabled"/>
      <bitenum value="1" token="REGION_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="CHAN_EN" width="1" begin="0" end="0" resetval="0x1 for LC0" description="Enables the logical channel" range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_CTRL_2" acronym="CCP2_LCx_CTRL_2" offset="0xB0" width="32" description="CONTROL REGISTER - LOGICAL CHANNEL x. This register controls logical channel x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="COUNT" width="8" begin="31" end="24" resetval="0x00" description="Sets the number of frame to acquire. Once the frame acquisition starts, the COUNT value is decremented after every frame. When COUNT reaches 0, the COUNT_IRQ interrupt is triggered and CHAN_EN is set to '0'. Writes to this bit field are controlled by the COUNT_UNLOCK bit. COUNT can be overwritten dynamically with a new count value. 0: Infinite number of frames (no count).1: 1 frame to acquire...255: 255 frames to acquire." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="CRC_EN" width="1" begin="19" end="19" resetval="0" description="Enables the cyclic redundancy check." range="" rwaccess="RW">
      <bitenum value="0" token="CRC_EN_0" description="Disabled"/>
      <bitenum value="1" token="CRC_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="DPCM_PRED" width="1" begin="18" end="18" resetval="0" description="Selects the DPCM predictor to be used for the RAW6+DPCM10, RAW7+DPCM10 and RAW8+DPCM12 data formats.The RAW8+DPCM10 data format always use the simple predictor." range="" rwaccess="RW">
      <bitenum value="0" token="DPCM_PRED_0" description="The advanced predictor is used"/>
      <bitenum value="1" token="DPCM_PRED_1" description="The simple predictor is used."/>
    </bitfield>
    <bitfield id="PING_PONG" width="1" begin="17" end="17" resetval="1" description="Indicates whether the PING or PONG destination address (CCP2_LC0_DAT_PING_ADDR or CCP2_LC0_DAT_PONG_ADDR) was used to write the last frame. This bit field toggles after every FEC sync code." range="" rwaccess="R">
      <bitenum value="0" token="PING_PONG_0_r" description="PING buffer"/>
      <bitenum value="1" token="PING_PONG_1_r" description="PONG buffer"/>
    </bitfield>
    <bitfield id="COUNT_UNLOCK" width="1" begin="16" end="16" resetval="0" description="Unlock writes to the COUNT bit field." range="" rwaccess="W">
      <bitenum value="0" token="COUNT_UNLOCK_0_w" description="COUNT bit field is locked. Writes have no effect"/>
      <bitenum value="1" token="COUNT_UNLOCK_1_w" description="COUNT bit field is unlocked. Writes are possible."/>
    </bitfield>
    <bitfield id="ALPHA" width="8" begin="15" end="8" resetval="0x00" description="Alpha value for RGB888 and RBG444." range="" rwaccess="RW"/>
    <bitfield id="FORMAT" width="6" begin="7" end="2" resetval="0x00" description="Data format selection." range="" rwaccess="RW">
      <bitenum value="0" token="FORMAT_0" description="YUV422 BIG ENDIAN"/>
      <bitenum value="1" token="FORMAT_1" description="YUV422 LITTLE ENDIAN"/>
      <bitenum value="2" token="FORMAT_2" description="YUV420"/>
      <bitenum value="3" token="FORMAT_3" description="YUV422 + VP or RAW8 + VP"/>
      <bitenum value="4" token="FORMAT_4" description="RGB444 + EXP16"/>
      <bitenum value="5" token="FORMAT_5" description="RGB565"/>
      <bitenum value="6" token="FORMAT_6" description="RGB888"/>
      <bitenum value="7" token="FORMAT_7" description="RGB888 + EXP32"/>
      <bitenum value="8" token="FORMAT_8" description="RAW6 + EXP8"/>
      <bitenum value="9" token="FORMAT_9" description="RAW6 + DPCM10 + EXP16"/>
      <bitenum value="10" token="FORMAT_10" description="RAW6 + DPCM10 + VP"/>
      <bitenum value="11" token="FORMAT_11" description="RAW10 - RAW6 DPCMRAW10 data from sensor is DPCM compressed into RAW6 before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="12" token="FORMAT_12" description="RAW7 + EXP8"/>
      <bitenum value="13" token="FORMAT_13" description="RAW7 + DPCM10 + EXP16"/>
      <bitenum value="14" token="FORMAT_14" description="RAW7 + DPCM10 + VP"/>
      <bitenum value="15" token="FORMAT_15" description="RAW10 - RAW6 DPCM + EXP8RAW10 data from sensor is DPCM compressed into RAW6 and expanded to 8 bits before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="16" token="FORMAT_16" description="RAW8 This mode can be used to output RAW6 and RAW7 as well."/>
      <bitenum value="17" token="FORMAT_17" description="RAW8 + DPCM10 + EXP16"/>
      <bitenum value="18" token="FORMAT_18" description="RAW8 + DPCM10 + VP"/>
      <bitenum value="19" token="FORMAT_19" description="RAW10 - RAW7 DPCMRAW10 data from sensor is DPCM compressed into RAW7 before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="20" token="FORMAT_20" description="RAW10"/>
      <bitenum value="21" token="FORMAT_21" description="RAW10 + EXP16"/>
      <bitenum value="22" token="FORMAT_22" description="RAW10 + VP"/>
      <bitenum value="23" token="FORMAT_23" description="RAW10 - RAW7 DPCM + EXP8RAW10 data from sensor is DPCM compressed into RAW7 and expanded to 8 bits before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="24" token="FORMAT_24" description="RAW12"/>
      <bitenum value="25" token="FORMAT_25" description="RAW12 + EXP16"/>
      <bitenum value="26" token="FORMAT_26" description="RAW12 + VP"/>
      <bitenum value="27" token="FORMAT_27" description="RAW10 - RAW8 DPCMRAW10 data from sensor is DPCM compressed into RAW8 before it is send to memory."/>
      <bitenum value="28" token="FORMAT_28" description="JPEG8 + FSP"/>
      <bitenum value="29" token="FORMAT_29" description="JPEG8"/>
      <bitenum value="30" token="FORMAT_30" description="RAW10 - RAW8RAW10 data from sensor is right shifted to produce RAW8 before it is send to memory"/>
      <bitenum value="31" token="FORMAT_31" description="RAW8 DPCM12 - RAW12 + VPUsed predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="32" token="FORMAT_32" description="RAW10 - RAW8 ALAW"/>
      <bitenum value="33" token="FORMAT_33" description="RAW8 DPCM10 - ALAW"/>
    </bitfield>
    <bitfield id="REGION_EN" width="1" begin="1" end="1" resetval="0" description="Enables the setting of regions of interest in the frame: SOF region, EOF region and DAT region." range="" rwaccess="RW">
      <bitenum value="0" token="REGION_EN_0" description="Disabled"/>
      <bitenum value="1" token="REGION_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="CHAN_EN" width="1" begin="0" end="0" resetval="0x1 for LC0" description="Enables the logical channel" range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_CTRL_3" acronym="CCP2_LCx_CTRL_3" offset="0xE0" width="32" description="CONTROL REGISTER - LOGICAL CHANNEL x. This register controls logical channel x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="COUNT" width="8" begin="31" end="24" resetval="0x00" description="Sets the number of frame to acquire. Once the frame acquisition starts, the COUNT value is decremented after every frame. When COUNT reaches 0, the COUNT_IRQ interrupt is triggered and CHAN_EN is set to '0'. Writes to this bit field are controlled by the COUNT_UNLOCK bit. COUNT can be overwritten dynamically with a new count value. 0: Infinite number of frames (no count).1: 1 frame to acquire...255: 255 frames to acquire." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="R"/>
    <bitfield id="CRC_EN" width="1" begin="19" end="19" resetval="0" description="Enables the cyclic redundancy check." range="" rwaccess="RW">
      <bitenum value="0" token="CRC_EN_0" description="Disabled"/>
      <bitenum value="1" token="CRC_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="DPCM_PRED" width="1" begin="18" end="18" resetval="0" description="Selects the DPCM predictor to be used for the RAW6+DPCM10, RAW7+DPCM10 and RAW8+DPCM12 data formats.The RAW8+DPCM10 data format always use the simple predictor." range="" rwaccess="RW">
      <bitenum value="0" token="DPCM_PRED_0" description="The advanced predictor is used"/>
      <bitenum value="1" token="DPCM_PRED_1" description="The simple predictor is used."/>
    </bitfield>
    <bitfield id="PING_PONG" width="1" begin="17" end="17" resetval="1" description="Indicates whether the PING or PONG destination address (CCP2_LC0_DAT_PING_ADDR or CCP2_LC0_DAT_PONG_ADDR) was used to write the last frame. This bit field toggles after every FEC sync code." range="" rwaccess="R">
      <bitenum value="0" token="PING_PONG_0_r" description="PING buffer"/>
      <bitenum value="1" token="PING_PONG_1_r" description="PONG buffer"/>
    </bitfield>
    <bitfield id="COUNT_UNLOCK" width="1" begin="16" end="16" resetval="0" description="Unlock writes to the COUNT bit field." range="" rwaccess="W">
      <bitenum value="0" token="COUNT_UNLOCK_0_w" description="COUNT bit field is locked. Writes have no effect"/>
      <bitenum value="1" token="COUNT_UNLOCK_1_w" description="COUNT bit field is unlocked. Writes are possible."/>
    </bitfield>
    <bitfield id="ALPHA" width="8" begin="15" end="8" resetval="0x00" description="Alpha value for RGB888 and RBG444." range="" rwaccess="RW"/>
    <bitfield id="FORMAT" width="6" begin="7" end="2" resetval="0x00" description="Data format selection." range="" rwaccess="RW">
      <bitenum value="0" token="FORMAT_0" description="YUV422 BIG ENDIAN"/>
      <bitenum value="1" token="FORMAT_1" description="YUV422 LITTLE ENDIAN"/>
      <bitenum value="2" token="FORMAT_2" description="YUV420"/>
      <bitenum value="3" token="FORMAT_3" description="YUV422 + VP or RAW8 + VP"/>
      <bitenum value="4" token="FORMAT_4" description="RGB444 + EXP16"/>
      <bitenum value="5" token="FORMAT_5" description="RGB565"/>
      <bitenum value="6" token="FORMAT_6" description="RGB888"/>
      <bitenum value="7" token="FORMAT_7" description="RGB888 + EXP32"/>
      <bitenum value="8" token="FORMAT_8" description="RAW6 + EXP8"/>
      <bitenum value="9" token="FORMAT_9" description="RAW6 + DPCM10 + EXP16"/>
      <bitenum value="10" token="FORMAT_10" description="RAW6 + DPCM10 + VP"/>
      <bitenum value="11" token="FORMAT_11" description="RAW10 - RAW6 DPCMRAW10 data from sensor is DPCM compressed into RAW6 before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="12" token="FORMAT_12" description="RAW7 + EXP8"/>
      <bitenum value="13" token="FORMAT_13" description="RAW7 + DPCM10 + EXP16"/>
      <bitenum value="14" token="FORMAT_14" description="RAW7 + DPCM10 + VP"/>
      <bitenum value="15" token="FORMAT_15" description="RAW10 - RAW6 DPCM + EXP8RAW10 data from sensor is DPCM compressed into RAW6 and expanded to 8 bits before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="16" token="FORMAT_16" description="RAW8 This mode can be used to output RAW6 and RAW7 as well."/>
      <bitenum value="17" token="FORMAT_17" description="RAW8 + DPCM10 + EXP16"/>
      <bitenum value="18" token="FORMAT_18" description="RAW8 + DPCM10 + VP"/>
      <bitenum value="19" token="FORMAT_19" description="RAW10 - RAW7 DPCMRAW10 data from sensor is DPCM compressed into RAW7 before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="20" token="FORMAT_20" description="RAW10"/>
      <bitenum value="21" token="FORMAT_21" description="RAW10 + EXP16"/>
      <bitenum value="22" token="FORMAT_22" description="RAW10 + VP"/>
      <bitenum value="23" token="FORMAT_23" description="RAW10 - RAW7 DPCM + EXP8RAW10 data from sensor is DPCM compressed into RAW7 and expanded to 8 bits before it is send to memory.Used predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="24" token="FORMAT_24" description="RAW12"/>
      <bitenum value="25" token="FORMAT_25" description="RAW12 + EXP16"/>
      <bitenum value="26" token="FORMAT_26" description="RAW12 + VP"/>
      <bitenum value="27" token="FORMAT_27" description="RAW10 - RAW8 DPCMRAW10 data from sensor is DPCM compressed into RAW8 before it is send to memory."/>
      <bitenum value="28" token="FORMAT_28" description="JPEG8 + FSP"/>
      <bitenum value="29" token="FORMAT_29" description="JPEG8"/>
      <bitenum value="30" token="FORMAT_30" description="RAW10 - RAW8RAW10 data from sensor is right shifted to produce RAW8 before it is send to memory"/>
      <bitenum value="31" token="FORMAT_31" description="RAW8 DPCM12 - RAW12 + VPUsed predictor is selected by the DPCM_PRED bit."/>
      <bitenum value="32" token="FORMAT_32" description="RAW10 - RAW8 ALAW"/>
      <bitenum value="33" token="FORMAT_33" description="RAW8 DPCM10 - ALAW"/>
    </bitfield>
    <bitfield id="REGION_EN" width="1" begin="1" end="1" resetval="0" description="Enables the setting of regions of interest in the frame: SOF region, EOF region and DAT region." range="" rwaccess="RW">
      <bitenum value="0" token="REGION_EN_0" description="Disabled"/>
      <bitenum value="1" token="REGION_EN_1" description="Enabled"/>
    </bitfield>
    <bitfield id="CHAN_EN" width="1" begin="0" end="0" resetval="0x1 for LC0" description="Enables the logical channel" range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_CODE_0" acronym="CCP2_LCx_CODE_0" offset="0x54" width="32" description="CODE REGISTER - LOGICAL CHANNEL x. This register sets the codes that are used in the 32-bit synchronization codes to recognize the logical channel, frame start, frame end, line start, and line end codes. This register applies for logical channel x only. The default values should not be modified. Updating this register with new codes under a flowing serial transmission on that channel causes unexpected results.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="CHAN_ID" width="4" begin="19" end="16" resetval="0x0 for LC00x1 for LC10x2 for LC20x3 for LC3" description="Logical channel x identifierThe channel identifier is located between bits 4 to 7 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="FEC" width="4" begin="15" end="12" resetval="0x3" description="Logical channel x frame end synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="FSC" width="4" begin="11" end="8" resetval="0x2" description="Logical channel x frame start synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="LEC" width="4" begin="7" end="4" resetval="0x1" description="Logical channel x line end synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="LSC" width="4" begin="3" end="0" resetval="0x0" description="Logical channel x line start synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_CODE_1" acronym="CCP2_LCx_CODE_1" offset="0x84" width="32" description="CODE REGISTER - LOGICAL CHANNEL x. This register sets the codes that are used in the 32-bit synchronization codes to recognize the logical channel, frame start, frame end, line start, and line end codes. This register applies for logical channel x only. The default values should not be modified. Updating this register with new codes under a flowing serial transmission on that channel causes unexpected results.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="CHAN_ID" width="4" begin="19" end="16" resetval="0x0 for LC00x1 for LC10x2 for LC20x3 for LC3" description="Logical channel x identifierThe channel identifier is located between bits 4 to 7 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="FEC" width="4" begin="15" end="12" resetval="0x3" description="Logical channel x frame end synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="FSC" width="4" begin="11" end="8" resetval="0x2" description="Logical channel x frame start synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="LEC" width="4" begin="7" end="4" resetval="0x1" description="Logical channel x line end synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="LSC" width="4" begin="3" end="0" resetval="0x0" description="Logical channel x line start synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_CODE_2" acronym="CCP2_LCx_CODE_2" offset="0xB4" width="32" description="CODE REGISTER - LOGICAL CHANNEL x. This register sets the codes that are used in the 32-bit synchronization codes to recognize the logical channel, frame start, frame end, line start, and line end codes. This register applies for logical channel x only. The default values should not be modified. Updating this register with new codes under a flowing serial transmission on that channel causes unexpected results.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="CHAN_ID" width="4" begin="19" end="16" resetval="0x0 for LC00x1 for LC10x2 for LC20x3 for LC3" description="Logical channel x identifierThe channel identifier is located between bits 4 to 7 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="FEC" width="4" begin="15" end="12" resetval="0x3" description="Logical channel x frame end synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="FSC" width="4" begin="11" end="8" resetval="0x2" description="Logical channel x frame start synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="LEC" width="4" begin="7" end="4" resetval="0x1" description="Logical channel x line end synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="LSC" width="4" begin="3" end="0" resetval="0x0" description="Logical channel x line start synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_CODE_3" acronym="CCP2_LCx_CODE_3" offset="0xE4" width="32" description="CODE REGISTER - LOGICAL CHANNEL x. This register sets the codes that are used in the 32-bit synchronization codes to recognize the logical channel, frame start, frame end, line start, and line end codes. This register applies for logical channel x only. The default values should not be modified. Updating this register with new codes under a flowing serial transmission on that channel causes unexpected results.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="CHAN_ID" width="4" begin="19" end="16" resetval="0x0 for LC00x1 for LC10x2 for LC20x3 for LC3" description="Logical channel x identifierThe channel identifier is located between bits 4 to 7 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="FEC" width="4" begin="15" end="12" resetval="0x3" description="Logical channel x frame end synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="FSC" width="4" begin="11" end="8" resetval="0x2" description="Logical channel x frame start synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="LEC" width="4" begin="7" end="4" resetval="0x1" description="Logical channel x line end synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
    <bitfield id="LSC" width="4" begin="3" end="0" resetval="0x0" description="Logical channel x line start synchronization code identifierThe synchronization code identifier is between bits 0 to 3 in the 32-bit synchronization codes." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_STAT_START_0" acronym="CCP2_LCx_STAT_START_0" offset="0x58" width="32" description="STATUS LINE START REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="EOF" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical position of the EOF status lines in reference to the FSC synchronization code. From 0 to 4095." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SOF" width="12" begin="11" end="0" resetval="0x000" description="Sets the vertical position of the EOF status lines in reference to the FSC synchronization code. Should always be 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_STAT_START_1" acronym="CCP2_LCx_STAT_START_1" offset="0x88" width="32" description="STATUS LINE START REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="EOF" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical position of the EOF status lines in reference to the FSC synchronization code. From 0 to 4095." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SOF" width="12" begin="11" end="0" resetval="0x000" description="Sets the vertical position of the EOF status lines in reference to the FSC synchronization code. Should always be 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_STAT_START_2" acronym="CCP2_LCx_STAT_START_2" offset="0xB8" width="32" description="STATUS LINE START REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="EOF" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical position of the EOF status lines in reference to the FSC synchronization code. From 0 to 4095." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SOF" width="12" begin="11" end="0" resetval="0x000" description="Sets the vertical position of the EOF status lines in reference to the FSC synchronization code. Should always be 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_STAT_START_3" acronym="CCP2_LCx_STAT_START_3" offset="0xE8" width="32" description="STATUS LINE START REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="EOF" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical position of the EOF status lines in reference to the FSC synchronization code. From 0 to 4095." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SOF" width="12" begin="11" end="0" resetval="0x000" description="Sets the vertical position of the EOF status lines in reference to the FSC synchronization code. Should always be 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_STAT_SIZE_0" acronym="CCP2_LCx_STAT_SIZE_0" offset="0x5C" width="32" description="STATUS LINE SIZE REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="EOF" width="12" begin="27" end="16" resetval="0x000" description="Sets the number of EOF status linesFrom 0 to 4095" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SOF" width="12" begin="11" end="0" resetval="0x000" description="Sets the number of SOF status line(s)From 0 to 4095" range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_STAT_SIZE_1" acronym="CCP2_LCx_STAT_SIZE_1" offset="0x8C" width="32" description="STATUS LINE SIZE REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="EOF" width="12" begin="27" end="16" resetval="0x000" description="Sets the number of EOF status linesFrom 0 to 4095" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SOF" width="12" begin="11" end="0" resetval="0x000" description="Sets the number of SOF status line(s)From 0 to 4095" range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_STAT_SIZE_2" acronym="CCP2_LCx_STAT_SIZE_2" offset="0xBC" width="32" description="STATUS LINE SIZE REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="EOF" width="12" begin="27" end="16" resetval="0x000" description="Sets the number of EOF status linesFrom 0 to 4095" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SOF" width="12" begin="11" end="0" resetval="0x000" description="Sets the number of SOF status line(s)From 0 to 4095" range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_STAT_SIZE_3" acronym="CCP2_LCx_STAT_SIZE_3" offset="0xEC" width="32" description="STATUS LINE SIZE REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="EOF" width="12" begin="27" end="16" resetval="0x000" description="Sets the number of EOF status linesFrom 0 to 4095" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SOF" width="12" begin="11" end="0" resetval="0x000" description="Sets the number of SOF status line(s)From 0 to 4095" range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_SOF_ADDR_0" acronym="CCP2_LCx_SOF_ADDR_0" offset="0x60" width="32" description="SOF STATUS LINE MEMORY ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the SOF data are stored. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_SOF_ADDR_1" acronym="CCP2_LCx_SOF_ADDR_1" offset="0x90" width="32" description="SOF STATUS LINE MEMORY ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the SOF data are stored. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_SOF_ADDR_2" acronym="CCP2_LCx_SOF_ADDR_2" offset="0xC0" width="32" description="SOF STATUS LINE MEMORY ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the SOF data are stored. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_SOF_ADDR_3" acronym="CCP2_LCx_SOF_ADDR_3" offset="0xF0" width="32" description="SOF STATUS LINE MEMORY ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the SOF data are stored. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_EOF_ADDR_0" acronym="CCP2_LCx_EOF_ADDR_0" offset="0x64" width="32" description="EOF STATUS LINE MEMORY ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the EOF data are stored. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_EOF_ADDR_1" acronym="CCP2_LCx_EOF_ADDR_1" offset="0x94" width="32" description="EOF STATUS LINE MEMORY ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the EOF data are stored. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_EOF_ADDR_2" acronym="CCP2_LCx_EOF_ADDR_2" offset="0xC4" width="32" description="EOF STATUS LINE MEMORY ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the EOF data are stored. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_EOF_ADDR_3" acronym="CCP2_LCx_EOF_ADDR_3" offset="0xF4" width="32" description="EOF STATUS LINE MEMORY ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the EOF data are stored. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_START_0" acronym="CCP2_LCx_DAT_START_0" offset="0x68" width="32" description="DATA START REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="VERT" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical position of the data in reference to the FSC synchronization code. From 0 to 4095 lines." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_START_1" acronym="CCP2_LCx_DAT_START_1" offset="0x98" width="32" description="DATA START REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="VERT" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical position of the data in reference to the FSC synchronization code. From 0 to 4095 lines." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_START_2" acronym="CCP2_LCx_DAT_START_2" offset="0xC8" width="32" description="DATA START REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="VERT" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical position of the data in reference to the FSC synchronization code. From 0 to 4095 lines." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_START_3" acronym="CCP2_LCx_DAT_START_3" offset="0xF8" width="32" description="DATA START REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="VERT" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical position of the data in reference to the FSC synchronization code. From 0 to 4095 lines." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_SIZE_0" acronym="CCP2_LCx_DAT_SIZE_0" offset="0x6C" width="32" description="DATA SIZE REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="VERT" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical size of the data windowFrom 0 to 4095 lines. If VERT = 0, no data are output." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_SIZE_1" acronym="CCP2_LCx_DAT_SIZE_1" offset="0x9C" width="32" description="DATA SIZE REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="VERT" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical size of the data windowFrom 0 to 4095 lines. If VERT = 0, no data are output." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_SIZE_2" acronym="CCP2_LCx_DAT_SIZE_2" offset="0xCC" width="32" description="DATA SIZE REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="VERT" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical size of the data windowFrom 0 to 4095 lines. If VERT = 0, no data are output." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_SIZE_3" acronym="CCP2_LCx_DAT_SIZE_3" offset="0xFC" width="32" description="DATA SIZE REGISTER - LOGICAL CHANNEL x. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="VERT" width="12" begin="27" end="16" resetval="0x000" description="Sets the vertical size of the data windowFrom 0 to 4095 lines. If VERT = 0, no data are output." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_PING_ADDR_0" acronym="CCP2_LCx_DAT_PING_ADDR_0" offset="0x70" width="32" description="DATA MEMORY PING ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the pixel data are stored. The destination is double-buffered; this register sets the PING address. Double-buffering is enabled when the addresses CCP2_LC0_DAT_PING_ADDR and CCP2_LC0_DAT_PONG_ADDR are different. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_PING_ADDR_1" acronym="CCP2_LCx_DAT_PING_ADDR_1" offset="0xA0" width="32" description="DATA MEMORY PING ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the pixel data are stored. The destination is double-buffered; this register sets the PING address. Double-buffering is enabled when the addresses CCP2_LC0_DAT_PING_ADDR and CCP2_LC0_DAT_PONG_ADDR are different. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_PING_ADDR_2" acronym="CCP2_LCx_DAT_PING_ADDR_2" offset="0xD0" width="32" description="DATA MEMORY PING ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the pixel data are stored. The destination is double-buffered; this register sets the PING address. Double-buffering is enabled when the addresses CCP2_LC0_DAT_PING_ADDR and CCP2_LC0_DAT_PONG_ADDR are different. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_PING_ADDR_3" acronym="CCP2_LCx_DAT_PING_ADDR_3" offset="0x100" width="32" description="DATA MEMORY PING ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the pixel data are stored. The destination is double-buffered; this register sets the PING address. Double-buffering is enabled when the addresses CCP2_LC0_DAT_PING_ADDR and CCP2_LC0_DAT_PONG_ADDR are different. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_PONG_ADDR_0" acronym="CCP2_LCx_DAT_PONG_ADDR_0" offset="0x74" width="32" description="DATA MEMORY PONG ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the pixel data are stored. The destination is double-buffered; this register sets the PONG address. Double-buffering is enabled when the addresses CCP2_LC0_DAT_PING_ADDR and CCP2_LC0_DAT_PONG_ADDR are different. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_PONG_ADDR_1" acronym="CCP2_LCx_DAT_PONG_ADDR_1" offset="0xA4" width="32" description="DATA MEMORY PONG ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the pixel data are stored. The destination is double-buffered; this register sets the PONG address. Double-buffering is enabled when the addresses CCP2_LC0_DAT_PING_ADDR and CCP2_LC0_DAT_PONG_ADDR are different. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_PONG_ADDR_2" acronym="CCP2_LCx_DAT_PONG_ADDR_2" offset="0xD4" width="32" description="DATA MEMORY PONG ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the pixel data are stored. The destination is double-buffered; this register sets the PONG address. Double-buffering is enabled when the addresses CCP2_LC0_DAT_PING_ADDR and CCP2_LC0_DAT_PONG_ADDR are different. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_PONG_ADDR_3" acronym="CCP2_LCx_DAT_PONG_ADDR_3" offset="0x104" width="32" description="DATA MEMORY PONG ADDRESS REGISTER - LOGICAL CHANNEL x. This register sets the 32-bit memory address where the pixel data are stored. The destination is double-buffered; this register sets the PONG address. Double-buffering is enabled when the addresses CCP2_LC0_DAT_PING_ADDR and CCP2_LC0_DAT_PONG_ADDR are different. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_OFST_0" acronym="CCP2_LCx_DAT_OFST_0" offset="0x78" width="32" description="DATA MEMORY ADDRESS OFFSET REGISTER - LOGICAL CHANNEL x. This register sets the offset, which is applied on the destination address after each line is written to memory. This register applies for both and . For example, it enables 2D data transfers of the pixel data into a frame buffer. In such case, the pixel data and frame buffer data have the same data format. Note that the 5 LSBs are ignored: the offset shall be a multiple of 32 bytes. The use of this register is limited to the following data formats: YUV422 little-endian, YUV422 big-endian, RGB565, RGB444 + EXP16, RGB888 + EXP32. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="OFST" width="27" begin="31" end="5" resetval="0x0000000" description="Line offset programmed in bytesIf OFST = 0, the data are written contiguously in memory. Otherwise, OFST sets the destination offset between the first pixel of the previous line and the first pixel of the current line." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_OFST_1" acronym="CCP2_LCx_DAT_OFST_1" offset="0xA8" width="32" description="DATA MEMORY ADDRESS OFFSET REGISTER - LOGICAL CHANNEL x. This register sets the offset, which is applied on the destination address after each line is written to memory. This register applies for both and . For example, it enables 2D data transfers of the pixel data into a frame buffer. In such case, the pixel data and frame buffer data have the same data format. Note that the 5 LSBs are ignored: the offset shall be a multiple of 32 bytes. The use of this register is limited to the following data formats: YUV422 little-endian, YUV422 big-endian, RGB565, RGB444 + EXP16, RGB888 + EXP32. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="OFST" width="27" begin="31" end="5" resetval="0x0000000" description="Line offset programmed in bytesIf OFST = 0, the data are written contiguously in memory. Otherwise, OFST sets the destination offset between the first pixel of the previous line and the first pixel of the current line." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_OFST_2" acronym="CCP2_LCx_DAT_OFST_2" offset="0xD8" width="32" description="DATA MEMORY ADDRESS OFFSET REGISTER - LOGICAL CHANNEL x. This register sets the offset, which is applied on the destination address after each line is written to memory. This register applies for both and . For example, it enables 2D data transfers of the pixel data into a frame buffer. In such case, the pixel data and frame buffer data have the same data format. Note that the 5 LSBs are ignored: the offset shall be a multiple of 32 bytes. The use of this register is limited to the following data formats: YUV422 little-endian, YUV422 big-endian, RGB565, RGB444 + EXP16, RGB888 + EXP32. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="OFST" width="27" begin="31" end="5" resetval="0x0000000" description="Line offset programmed in bytesIf OFST = 0, the data are written contiguously in memory. Otherwise, OFST sets the destination offset between the first pixel of the previous line and the first pixel of the current line." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCx_DAT_OFST_3" acronym="CCP2_LCx_DAT_OFST_3" offset="0x108" width="32" description="DATA MEMORY ADDRESS OFFSET REGISTER - LOGICAL CHANNEL x. This register sets the offset, which is applied on the destination address after each line is written to memory. This register applies for both and . For example, it enables 2D data transfers of the pixel data into a frame buffer. In such case, the pixel data and frame buffer data have the same data format. Note that the 5 LSBs are ignored: the offset shall be a multiple of 32 bytes. The use of this register is limited to the following data formats: YUV422 little-endian, YUV422 big-endian, RGB565, RGB444 + EXP16, RGB888 + EXP32. This register is shadowed; modifications are taken into account after the next FSC synchronization code.">
    <bitfield id="OFST" width="27" begin="31" end="5" resetval="0x0000000" description="Line offset programmed in bytesIf OFST = 0, the data are written contiguously in memory. Otherwise, OFST sets the destination offset between the first pixel of the previous line and the first pixel of the current line." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCM_CTRL" acronym="CCP2_LCM_CTRL" offset="0x1D0" width="32" description="Control register for the memory channel. It defines the data format of the source frame stored in memory and how this frame is processed.">
    <bitfield id="DST_PACK" width="1" begin="31" end="31" resetval="0x0" description="Data is packed before it is sent to memory.Applies to RAW6, RAW7, RAW10, and RAW12 only. ." range="" rwaccess="RW">
      <bitenum value="0" token="DST_PACK_0" description="Disabled"/>
      <bitenum value="1" token="DST_PACK_1" description="Enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="29" end="28" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="DST_FORMAT" width="3" begin="26" end="24" resetval="0x0" description="Output format selectionNot every combination of input and output formats is possible. See ," range="" rwaccess="RW">
      <bitenum value="0" token="DST_FORMAT_0" description="RAW6"/>
      <bitenum value="1" token="DST_FORMAT_1" description="RAW7"/>
      <bitenum value="2" token="DST_FORMAT_2" description="RAW8"/>
      <bitenum value="3" token="DST_FORMAT_3" description="RAW10"/>
      <bitenum value="4" token="DST_FORMAT_4" description="RAW12"/>
      <bitenum value="5" token="DST_FORMAT_5" description="RAW14"/>
      <bitenum value="6" token="DST_FORMAT_6" description="RAW16"/>
    </bitfield>
    <bitfield id="SRC_PACK" width="1" begin="23" end="23" resetval="0x0" description="Data stored in memory is packed and must be unpacked." range="" rwaccess="RW">
      <bitenum value="0" token="SRC_PACK_0" description="Disabled"/>
      <bitenum value="1" token="SRC_PACK_1" description="Enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="22" end="22" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="21" end="21" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="20" end="19" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SRC_FORMAT" width="3" begin="18" end="16" resetval="0x0" description="Data format of the data stored in memoryBecause there is no header embedded in the data sent to memory, the user is responsible for choosing the correct format." range="" rwaccess="RW">
      <bitenum value="0" token="SRC_FORMAT_0" description="RAW6"/>
      <bitenum value="1" token="SRC_FORMAT_1" description="RAW7"/>
      <bitenum value="2" token="SRC_FORMAT_2" description="RAW8"/>
      <bitenum value="3" token="SRC_FORMAT_3" description="RAW10"/>
      <bitenum value="4" token="SRC_FORMAT_4" description="RAW12"/>
      <bitenum value="5" token="SRC_FORMAT_5" description="RAW14"/>
      <bitenum value="6" token="SRC_FORMAT_6" description="RAW16"/>
    </bitfield>
    <bitfield id="RESERVED" width="8" begin="15" end="8" resetval="0x00" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="BURST_SIZE" width="3" begin="7" end="5" resetval="0x0" description="Defines the burst size of the master read port" range="" rwaccess="RW">
      <bitenum value="0" token="BURST_SIZE_0" description="1x 64-bit burst = single request"/>
      <bitenum value="1" token="BURST_SIZE_1" description="2x 64-bit bursts"/>
      <bitenum value="2" token="BURST_SIZE_2" description="4x 64-bit bursts"/>
      <bitenum value="3" token="BURST_SIZE_3" description="8x 64-bit bursts"/>
      <bitenum value="4" token="BURST_SIZE_4" description="16x 64-bit bursts"/>
      <bitenum value="5" token="BURST_SIZE_5" description="32x 64-bit bursts"/>
    </bitfield>
    <bitfield id="READ_THROTTLE" width="2" begin="4" end="3" resetval="0x0" description="Limit maximum data read speed for memory-to-memory operation." range="" rwaccess="RW">
      <bitenum value="0" token="READ_THROTTLE_0" description="Full speed. Throughput is limited by internal processing capabilities."/>
      <bitenum value="1" token="READ_THROTTLE_1" description="1/2 speed"/>
      <bitenum value="2" token="READ_THROTTLE_2" description="1/4 speed"/>
      <bitenum value="3" token="READ_THROTTLE_3" description="1/8 speed"/>
    </bitfield>
    <bitfield id="DST_PORT" width="1" begin="2" end="2" resetval="0x0" description="Select the destination port." range="" rwaccess="RW">
      <bitenum value="0" token="DST_PORT_0" description="Data is sent to video port; it is always sent without compression or packing. The.DST_PACK, and registers have no effect."/>
      <bitenum value="1" token="DST_PORT_1" description="Data is sent to memory."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="1" end="1" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="CHAN_EN" width="1" begin="0" end="0" resetval="0x0" description="Enables the read from the memory channelBefore enabling the memory read channel, the software must:- Disable the physical interface using the IF_EN bit- Wait until disabling of the physical interface is effective (depends on the FRAME bit)Read from memory starts when this bit is set; therefore, all CCP2_LCM_x registers must be configured correctly before the bit is set.This bit is cleared by hardware at the end of the frame." range="" rwaccess="RW">
      <bitenum value="0" token="CHAN_EN_0" description="Disabled"/>
      <bitenum value="1" token="CHAN_EN_1" description="Enabled"/>
    </bitfield>
  </register>
  <register id="CCP2_LCM_VSIZE" acronym="CCP2_LCM_VSIZE" offset="0x1D4" width="32" description="Memory channel vertical framing register">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="COUNT" width="13" begin="28" end="16" resetval="0x001" description="Defines the line count to be read from memoryFrom 1 to 8191 lines." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCM_HSIZE" acronym="CCP2_LCM_HSIZE" offset="0x1D8" width="32" description="Memory read channel horizontal framing register">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="COUNT" width="13" begin="28" end="16" resetval="0x001" description="Horizontal count of pixels to output after the skipped pixelsValid values: 1&#8211;8191" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SKIP" width="13" begin="12" end="0" resetval="0x000" description="Horizontal count of pixels to skip after the start of the line.Valid values: 0&#8211;81910 disables pixel skipping" range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCM_PREFETCH" acronym="CCP2_LCM_PREFETCH" offset="0x1DC" width="32" description="This register defines the amount of data to be fetched from memory. It must be consistent with the register (see , CCP2 Receiver Basic Programming Model).">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x00000" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="HWORDS" width="12" begin="14" end="3" resetval="0x001" description="64-bit words to read from memory for each line of the imagePossible values: 1 to 4095" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="2" end="0" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCM_SRC_ADDR" acronym="CCP2_LCM_SRC_ADDR" offset="0x1E0" width="32" description="Memory channel source address register This register sets the 32-bit memory address where the pixel data are stored. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 LSBs of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCM_SRC_OFST" acronym="CCP2_LCM_SRC_OFST" offset="0x1E4" width="32" description="Memory channel source offset register. This register sets the offset, which is applied on the source address after each line is read from memory. For example, it enables 2D data transfers of the pixel data from a frame buffer. In such case, the pixel data and frame buffer data have the same data format. The 5 LSBs are ignored; the offset is a multiple of 32 bytes.">
    <bitfield id="OFST" width="27" begin="31" end="5" resetval="0x0000000" description="Line offset programmed in bytesIf OFST = 0, the data are read contiguously from memory. Otherwise, OFST sets the source offset between the first pixel of the previous line and the first pixel of the current line." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCM_DST_ADDR" acronym="CCP2_LCM_DST_ADDR" offset="0x1E8" width="32" description="Memory channel destination address. This register sets the 32-bit memory address where the pixel data are stored. The 5 LSBs are ignored; the address is aligned on a 32-byte boundary.">
    <bitfield id="ADDR" width="27" begin="31" end="5" resetval="0x0000000" description="27 MSBs of the 32-bit address." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="5 least significant bits of the 32-bit addressWrite 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
  <register id="CCP2_LCM_DST_OFST" acronym="CCP2_LCM_DST_OFST" offset="0x1EC" width="32" description="Memory channel destination offset register. This register sets the offset, which is applied on the destination address after each line is written to memory. For example, it enables 2D data transfers of the pixel data into a frame buffer. In such case, the pixel data and frame buffer data have the same data format. The 5 LSBs are ignored; the offset is a multiple of 32 bytes.">
    <bitfield id="OFST" width="27" begin="31" end="5" resetval="0x0000000" description="Line offset programmed in bytesIf OFST = 0, the data are written contiguously to memory if possible. At the end of a line, only full 32-bit words are written, eventually creating gaps at the end of lines.Otherwise, OFST sets the destination offset between the first pixel of the previous line and the first pixel of the current line." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
  </register>
</module>
