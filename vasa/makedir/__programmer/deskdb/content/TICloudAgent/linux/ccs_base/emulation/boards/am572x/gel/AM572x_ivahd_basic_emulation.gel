/*******************************************************************/ 
/* This GEL file is loaded on the command line of Code Composer    */
/* The StartUp() function is called every time you start           */
/* Code Composer.  You can customize this function to              */
/* initialize wait states or to perform other initialization.      */
/*                                                                 */
/* AM572x Ivahd icont1 basic emulation config                      */
/*                                                                 */
/*                                                                 */
/*******************************************************************/

menuitem "Basic Emulation"
/**********************************************************************
 *
 *  FUNCTIONS
 *
 **********************************************************************/
hotmenu load_asm_program_SL2_1()
{
    GEL_TextOut("Load asm program in SL2_1 \n");
    *(int *)0x200 = 0xE1A00000;
    *(int *)0x204 = 0xE1A00000;
    *(int *)0x208 = 0xE1A00000;
    *(int *)0x20C = 0xE1A00000;
    *(int *)0x210 = 0xE1A00000;
    *(int *)0x214 = 0xE1A00000;
    *(int *)0x218 = 0xE1A00000;
    *(int *)0x21C = 0xE1A00000;
    *(int *)0x220 = 0xEAFFFFF9;

    PC = 0x200;
    
    GEL_TextOut("Load asm program in SL2_1 done \n");
}

hotmenu load_asm_program_SL2_2()
{
    GEL_TextOut("Load asm program in SL2_2 \n");
    *(int *)0x400 = 0xE1A00000;
    *(int *)0x404 = 0xE1A00000;
    *(int *)0x408 = 0xE1A00000;
    *(int *)0x40C = 0xE1A00000;
    *(int *)0x410 = 0xE1A00000;
    *(int *)0x414 = 0xE1A00000;
    *(int *)0x418 = 0xE1A00000;
    *(int *)0x41C = 0xE1A00000;
    *(int *)0x420 = 0xEAFFFFF9;

    PC = 0x400;
    
    GEL_TextOut("Load asm program in SL2_2 done\n");
}

hotmenu load_asm_program_iCont1_DMEM_1()
{
    GEL_TextOut("Load asm program in iCont1 DMEM_1 \n");
    *(int *)0x80200 = 0xE1A00000;
    *(int *)0x80204 = 0xE1A00000;
    *(int *)0x80208 = 0xE1A00000;
    *(int *)0x8020C = 0xE1A00000;
    *(int *)0x80210 = 0xE1A00000;
    *(int *)0x80214 = 0xE1A00000;
    *(int *)0x80218 = 0xE1A00000;
    *(int *)0x8021C = 0xE1A00000;
    *(int *)0x80220 = 0xEAFFFFF9;

    PC = 0x80200;
    
    GEL_TextOut("Load asm program in iCont1 DMEM_1 done\n");
}

hotmenu load_asm_program_iCont1_DMEM_2()
{
    GEL_TextOut("Load asm program in iCont1 DMEM_2 \n");
    *(int *)0x80400 = 0xE1A00000;
    *(int *)0x80404 = 0xE1A00000;
    *(int *)0x80408 = 0xE1A00000;
    *(int *)0x8040C = 0xE1A00000;
    *(int *)0x80410 = 0xE1A00000;
    *(int *)0x80414 = 0xE1A00000;
    *(int *)0x80418 = 0xE1A00000;
    *(int *)0x8041C = 0xE1A00000;
    *(int *)0x80420 = 0xEAFFFFF9;

    PC = 0x88400;
    
    GEL_TextOut("Load asm program in iCont1 DMEM_2 done\n");
}

hotmenu load_asm_program_iCont1_IMEM_1()
{
    GEL_TextOut("Load asm program in iCont1 IMEM_1 \n");
    *(int *)0x88200 = 0xE1A00000;
    *(int *)0x88204 = 0xE1A00000;
    *(int *)0x88208 = 0xE1A00000;
    *(int *)0x8820C = 0xE1A00000;
    *(int *)0x88210 = 0xE1A00000;
    *(int *)0x88214 = 0xE1A00000;
    *(int *)0x88218 = 0xE1A00000;
    *(int *)0x8821C = 0xE1A00000;
    *(int *)0x88220 = 0xEAFFFFF9;

    PC = 0x88200;
    
    GEL_TextOut("Load asm program in iCont1 IMEM_1 done\n");
}

hotmenu load_asm_program_iCont1_IMEM_2()
{
    GEL_TextOut("Load asm program in iCont1 IMEM_2 \n");
    *(int *)0x88400 = 0xE1A00000;
    *(int *)0x88404 = 0xE1A00000;
    *(int *)0x88408 = 0xE1A00000;
    *(int *)0x8840C = 0xE1A00000;
    *(int *)0x88410 = 0xE1A00000;
    *(int *)0x88414 = 0xE1A00000;
    *(int *)0x88418 = 0xE1A00000;
    *(int *)0x8841C = 0xE1A00000;
    *(int *)0x88420 = 0xEAFFFFF9;

    PC = 0x88400;
    
    GEL_TextOut("Load asm program in iCont1 IMEM_2 done\n");
}

hotmenu load_asm_program_iCont2_DMEM_1()
{
    GEL_TextOut("Load asm program in iCont2 DMEM_1 \n");
    *(int *)0x90200 = 0xE1A00000;
    *(int *)0x90204 = 0xE1A00000;
    *(int *)0x90208 = 0xE1A00000;
    *(int *)0x9020C = 0xE1A00000;
    *(int *)0x90210 = 0xE1A00000;
    *(int *)0x90214 = 0xE1A00000;
    *(int *)0x90218 = 0xE1A00000;
    *(int *)0x9021C = 0xE1A00000;
    *(int *)0x90220 = 0xEAFFFFF9;

    PC = 0x90200;
    
    GEL_TextOut("Load asm program in iCont2 DMEM_1 done\n");
}

hotmenu load_asm_program_iCont2_DMEM_2()
{
    GEL_TextOut("Load asm program in iCont2 DMEM_2 \n");
    *(int *)0x90400 = 0xE1A00000;
    *(int *)0x90404 = 0xE1A00000;
    *(int *)0x90408 = 0xE1A00000;
    *(int *)0x9040C = 0xE1A00000;
    *(int *)0x90410 = 0xE1A00000;
    *(int *)0x90414 = 0xE1A00000;
    *(int *)0x90418 = 0xE1A00000;
    *(int *)0x9041C = 0xE1A00000;
    *(int *)0x90420 = 0xEAFFFFF9;

    PC = 0x90400;
    
    GEL_TextOut("Load asm program in iCont2 DMEM_2 done\n");
}

hotmenu load_asm_program_iCont2_IMEM_1()
{
    GEL_TextOut("Load asm program in iCont2 IMEM_1 \n");
    *(int *)0x98200 = 0xE1A00000;
    *(int *)0x98204 = 0xE1A00000;
    *(int *)0x98208 = 0xE1A00000;
    *(int *)0x9820C = 0xE1A00000;
    *(int *)0x98210 = 0xE1A00000;
    *(int *)0x98214 = 0xE1A00000;
    *(int *)0x98218 = 0xE1A00000;
    *(int *)0x9821C = 0xE1A00000;
    *(int *)0x98220 = 0xEAFFFFF9;

    PC = 0x98200;
    
    GEL_TextOut("Load asm program in iCont2 IMEM_1 done\n");
}

hotmenu load_asm_program_iCont2_IMEM_2()
{
    GEL_TextOut("Load asm program in iCont2 IMEM_2 \n");
    *(int *)0x98400 = 0xE1A00000;
    *(int *)0x98404 = 0xE1A00000;
    *(int *)0x98408 = 0xE1A00000;
    *(int *)0x9840C = 0xE1A00000;
    *(int *)0x98410 = 0xE1A00000;
    *(int *)0x98414 = 0xE1A00000;
    *(int *)0x98418 = 0xE1A00000;
    *(int *)0x9841C = 0xE1A00000;
    *(int *)0x98420 = 0xEAFFFFF9;

    PC = 0x98400;
    
    GEL_TextOut("Load asm program in iCont2 IMEM_2 done\n");
}

hotmenu load_asm_program_ECD3_1()
{
    GEL_TextOut("Load asm program in ECD3_1 \n");
    *(int *)0xA0200 = 0xE1A00000;
    *(int *)0xA0204 = 0xE1A00000;
    *(int *)0xA0208 = 0xE1A00000;
    *(int *)0xA020C = 0xE1A00000;
    *(int *)0xA0210 = 0xE1A00000;
    *(int *)0xA0214 = 0xE1A00000;
    *(int *)0xA0218 = 0xE1A00000;
    *(int *)0xA021C = 0xE1A00000;
    *(int *)0xA0220 = 0xEAFFFFF9;

    PC = 0xA0200;
    
    GEL_TextOut("Load asm program in ECD3_1 done\n");
}

hotmenu load_asm_program_ECD3_2()
{
    GEL_TextOut("Load asm program in ECD3_2 \n");
    *(int *)0xA0400 = 0xE1A00000;
    *(int *)0xA0404 = 0xE1A00000;
    *(int *)0xA0408 = 0xE1A00000;
    *(int *)0xA040C = 0xE1A00000;
    *(int *)0xA0410 = 0xE1A00000;
    *(int *)0xA0414 = 0xE1A00000;
    *(int *)0xA0418 = 0xE1A00000;
    *(int *)0xA041C = 0xE1A00000;
    *(int *)0xA0420 = 0xEAFFFFF9;

    PC = 0xA0400;
    
    GEL_TextOut("Load asm program in ECD3_2 done\n");
}

hotmenu load_asm_program_CALC3_1()
{
    GEL_TextOut("Load asm program in CALC3_1 \n");
    *(int *)0xA8200 = 0xE1A00000;
    *(int *)0xA8204 = 0xE1A00000;
    *(int *)0xA8208 = 0xE1A00000;
    *(int *)0xA820C = 0xE1A00000;
    *(int *)0xA8210 = 0xE1A00000;
    *(int *)0xA8214 = 0xE1A00000;
    *(int *)0xA8218 = 0xE1A00000;
    *(int *)0xA821C = 0xE1A00000;
    *(int *)0xA8220 = 0xEAFFFFF9;

    PC = 0xA8200;
    
    GEL_TextOut("Load asm program in CALC3_1 done\n");
}

hotmenu load_asm_program_CALC3_2()
{
    GEL_TextOut("Load asm program in CALC3_2 \n");
    *(int *)0xA8400 = 0xE1A00000;
    *(int *)0xA8404 = 0xE1A00000;
    *(int *)0xA8408 = 0xE1A00000;
    *(int *)0xA840C = 0xE1A00000;
    *(int *)0xA8410 = 0xE1A00000;
    *(int *)0xA8414 = 0xE1A00000;
    *(int *)0xA8418 = 0xE1A00000;
    *(int *)0xA841C = 0xE1A00000;
    *(int *)0xA8420 = 0xEAFFFFF9;

    PC = 0xA8400;
    
    GEL_TextOut("Load asm program in CALC3_2 done\n");
}

hotmenu load_asm_program_MC3_1()
{
    GEL_TextOut("Load asm program in MC3_1 \n");
    *(int *)0xB0200 = 0xE1A00000;
    *(int *)0xB0204 = 0xE1A00000;
    *(int *)0xB0208 = 0xE1A00000;
    *(int *)0xB020C = 0xE1A00000;
    *(int *)0xB0210 = 0xE1A00000;
    *(int *)0xB0214 = 0xE1A00000;
    *(int *)0xB0218 = 0xE1A00000;
    *(int *)0xB021C = 0xE1A00000;
    *(int *)0xB0220 = 0xEAFFFFF9;

    PC = 0xB0200;
    
    GEL_TextOut("Load asm program in MC3_1 done\n");
}

hotmenu load_asm_program_MC3_2()
{
    GEL_TextOut("Load asm program in MC3_2 \n");
    *(int *)0xB0400 = 0xE1A00000;
    *(int *)0xB0404 = 0xE1A00000;
    *(int *)0xB0408 = 0xE1A00000;
    *(int *)0xB040C = 0xE1A00000;
    *(int *)0xB0410 = 0xE1A00000;
    *(int *)0xB0414 = 0xE1A00000;
    *(int *)0xB0418 = 0xE1A00000;
    *(int *)0xB041C = 0xE1A00000;
    *(int *)0xB0420 = 0xEAFFFFF9;

    PC = 0xB0400;
    
    GEL_TextOut("Load asm program in MC3_2 done\n");
}

hotmenu load_asm_program_IPE3_1()
{
    GEL_TextOut("Load asm program in IPE3_1 \n");
    *(int *)0xB8200 = 0xE1A00000;
    *(int *)0xB8204 = 0xE1A00000;
    *(int *)0xB8208 = 0xE1A00000;
    *(int *)0xB820C = 0xE1A00000;
    *(int *)0xB8210 = 0xE1A00000;
    *(int *)0xB8214 = 0xE1A00000;
    *(int *)0xB8218 = 0xE1A00000;
    *(int *)0xB821C = 0xE1A00000;
    *(int *)0xB8220 = 0xEAFFFFF9;

    PC = 0xB8200;
    
    GEL_TextOut("Load asm program in IPE3_1 done\n");
}

hotmenu load_asm_program_IPE3_2()
{
    GEL_TextOut("Load asm program in IPE3_2 \n");
    *(int *)0xB8400 = 0xE1A00000;
    *(int *)0xB8404 = 0xE1A00000;
    *(int *)0xB8408 = 0xE1A00000;
    *(int *)0xB840C = 0xE1A00000;
    *(int *)0xB8410 = 0xE1A00000;
    *(int *)0xB8414 = 0xE1A00000;
    *(int *)0xB8418 = 0xE1A00000;
    *(int *)0xB841C = 0xE1A00000;
    *(int *)0xB8420 = 0xEAFFFFF9;

    PC = 0xB8400;
    
    GEL_TextOut("Load asm program in IPE3_2 done\n");
}


hotmenu basic_asm_execution_control_SL2_1()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0x208);
    GEL_HWBreakPtAdd(0x218);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_SL2_1_SWbkpt_0x208 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_SL2_1_HWbkpt_0x218 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_SL2_2()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0x408);
    GEL_HWBreakPtAdd(0x418);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_SL2_2_SWbkpt_0x408 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_SL2_2_HWbkpt_0x418 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_iCont1_DMEM_1()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0x80208);
    GEL_HWBreakPtAdd(0x80218);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont1_DMEM_1_SWbkpt_0x80208 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont1_DMEM_1_HWbkpt_0x80218 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_iCont1_DMEM_2()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0x80408);
    GEL_HWBreakPtAdd(0x80418);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont1_DMEM_2_SWbkpt_0x80408 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont1_DMEM_2_HWbkpt_0x80418 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_iCont1_IMEM_1()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0x88208);
    GEL_HWBreakPtAdd(0x88218);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont1_IMEM_1_SWbkpt_0x88208 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont1_IMEM_1_HWbkpt_0x88218 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_iCont1_IMEM_2()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0x88408);
    GEL_HWBreakPtAdd(0x88418);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont1_IMEM_2_SWbkpt_0x88408 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont1_IMEM_2_HWbkpt_0x88418 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_iCont2_DMEM_1()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0x90208);
    GEL_HWBreakPtAdd(0x90218);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont2_DMEM_1_SWbkpt_0x90208 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont2_DMEM_1_HWbkpt_0x90218 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_iCont2_DMEM_2()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0x90408);
    GEL_HWBreakPtAdd(0x90418);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont2_DMEM_2_SWbkpt_0x90408 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont2_DMEM_2_HWbkpt_0x90418 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_iCont2_IMEM_1()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0x98208);
    GEL_HWBreakPtAdd(0x98218);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont2_IMEM_1_SWbkpt_0x98208 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont2_IMEM_1_HWbkpt_0x98218 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_iCont2_IMEM_2()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0x98408);
    GEL_HWBreakPtAdd(0x98418);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont2_IMEM_2_SWbkpt_0x98408 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_iCont2_IMEM_2_HWbkpt_0x98418 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_ECD3_1()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0xA0208);
    GEL_HWBreakPtAdd(0xA0218);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_ECD3_1_SWbkpt_0xA0208 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_ECD3_1_HWbkpt_0xA0218 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_ECD3_2()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0xA0408);
    GEL_HWBreakPtAdd(0xA0418);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_ECD3_2_SWbkpt_0xA0408 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_ECD3_2_HWbkpt_0xA0418 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_CALC3_1()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0xA8208);
    GEL_HWBreakPtAdd(0xA8218);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_CALC3_1_SWbkpt_0xA8208 %x\n", PC);
    GEL_Run();
    GEL_TextOut("basic_asm_execution_control_CALC3_1_HWbkpt_0xA8218 %x\n", PC);
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
}

hotmenu basic_asm_execution_control_CALC3_2()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0xA8418);
    GEL_Run();
    //GEL_TextOut("basic_asm_execution_control_sram_bkpt %x\n", PC);
}

hotmenu basic_asm_execution_control_MC3_1()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0xB0218);
    GEL_Run();
    //GEL_TextOut("basic_asm_execution_control_sram_bkpt %x\n", PC);
}

hotmenu basic_asm_execution_control_MC3_2()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0xB0418);
    GEL_Run();
    //GEL_TextOut("basic_asm_execution_control_sram_bkpt %x\n", PC);
}

hotmenu basic_asm_execution_control_IPE3_1()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0xB8218);
    GEL_Run();
    //GEL_TextOut("basic_asm_execution_control_sram_bkpt %x\n", PC);
}

hotmenu basic_asm_execution_control_IPE3_2()
{
    GEL_BreakPtReset(); // clears all SW bkpt.
    GEL_HWBreakPtReset(); // clears all HW bkpt.
    GEL_BreakPtAdd(0xB8418);
    GEL_Run();
    //GEL_TextOut("basic_asm_execution_control_sram_bkpt %x\n", PC);
}
