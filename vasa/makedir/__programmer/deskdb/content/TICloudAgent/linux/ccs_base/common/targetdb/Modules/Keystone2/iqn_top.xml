<?xml version="1.0" encoding="UTF-8"?>
<module id="IQN_TOP" HW_revision="" XML_version="1" description="">
  <!--  -->
  <register id="IQN2_Periperal_ID_Register" offset="0x00000" width="32" description="(1 of 1, stride 0)">
    <bitfield id="MINOR" width="6" begin="5" end="0" description="Minor revision Y code" rwaccess="R" />
    <bitfield id="CUSTOM" width="2" begin="7" end="6" description="Custom version code" rwaccess="R" />
    <bitfield id="MAJOR" width="3" begin="10" end="8" description="Major revision X code" rwaccess="R" />
    <bitfield id="RTL" width="5" begin="15" end="11" description="RTL Version R code" rwaccess="R" />
    <bitfield id="FUNC" width="12" begin="27" end="16" description="Function code assigned to IQN2" rwaccess="R" />
    <bitfield id="SCHEME" width="2" begin="31" end="30" description="Current scheme" rwaccess="R" />
  </register>
  <register id="IQN2_Scratch_Register" offset="0x00004" width="32" description="(1 of 1, stride 0)">
    <bitfield id="Scratch" width="32" begin="31" end="0" description="This is the VC Scratch Field used for debug testing basic read and write to mmrs." rwaccess="RW" />
  </register>
  <register id="IQN2_SW_Reset_Register" offset="0x00008" width="32" description="(1 of 1, stride 0)">
    <bitfield id="sw_reset" width="1" begin="0" end="0" description="These are software resets which reset various sections of IQN2." rwaccess="W" />
    <bitfield id="sw_reset_aid" width="1" begin="1" end="1" description="These are software resets which reset various sections of IQN2." rwaccess="W" />
    <bitfield id="sw_reset_dio" width="1" begin="2" end="2" description="These are software resets which reset various sections of IQN2." rwaccess="W" />
    <bitfield id="sw_reset_pktdma" width="1" begin="3" end="3" description="These are software resets which reset various sections of IQN2." rwaccess="W" />
    <bitfield id="sw_reset_ail0" width="1" begin="4" end="4" description="These are software resets which reset various sections of IQN2." rwaccess="W" />
    <bitfield id="sw_reset_ail1" width="1" begin="5" end="5" description="These are software resets which reset various sections of IQN2." rwaccess="W" />
    <bitfield id="sw_reset_ail2" width="1" begin="6" end="6" description="These are software resets which reset various sections of IQN2." rwaccess="W" />
    <bitfield id="sw_reset_ail3" width="1" begin="7" end="7" description="These are software resets which reset various sections of IQN2." rwaccess="W" />
  </register>
  <register id="iqn2_Emulation_Control_Register" offset="0x0000c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="FREERUN" width="1" begin="0" end="0" description="FREERUN bit" rwaccess="RW" />
    <bitfield id="SOFT" width="1" begin="1" end="1" description="SOFT bit. This bit is ignored by the IQN2. IQN2 always performs a graceful SOFT stop" rwaccess="RW" />
    <bitfield id="RT_SEL" width="1" begin="2" end="2" description="RT_SEL bit" rwaccess="RW" />
    <bitfield id="frc_shutdown" width="1" begin="3" end="3" description="Forces the shutdown controller to shut down the entire IQN cleanly." rwaccess="RW" />
    <bitfield id="shutdown_on" width="1" begin="8" end="8" description="Indicates the shutdown controller is processing a shutdown." rwaccess="R" />
    <bitfield id="shutdown_done" width="1" begin="9" end="9" description="Indicates the shutdown controller has finished shutting down and is holding the IQN2 in shutdown when set." rwaccess="R" />
  </register>
  <register id="Iqn2_data_trace_mux_select_Register" offset="0x00014" width="32" description="(1 of 1, stride 0)">
    <bitfield id="vc_dtmux" width="2" begin="1" end="0" description="Iqn2 data trace mux select Register selects which ail data trace to use" rwaccess="RW" />
  </register>
  <register id="SD_system_clock_control_Register" offset="0x00018" width="32" description="(1 of 1, stride 0)">
    <bitfield id="sysclk_sel" width="3" begin="2" end="0" description="SD system clock control Register selects which SERDES txbclk to use for sys_clk. bits 0 and 1 select which serdes lane to use. bit 2 selects 1/2 the txbclk speed when set" rwaccess="RW" />
    <bitfield id="at_dfe_clk_sel" width="1" begin="3" end="3" description="Selects dfe_pll_clk for the at and uat clock if =1. The selected sysclk derived from the SERDES TXBCLK is used when = 0. This should only be set when using DFE and not using the AIL" rwaccess="RW" />
  </register>
  <register id="CDMA_TX_takedown_status_lsb_Register" offset="0x00020" width="32" description="(1 of 1, stride 0)">
    <bitfield id="tdown_status_l" width="32" begin="31" end="0" description="CDMA TX takedown status lsb" rwaccess="R" />
  </register>
  <register id="CDMA_TX_takedown_status_msb_Register" offset="0x00024" width="32" description="(1 of 1, stride 0)">
    <bitfield id="tdown_status_h" width="16" begin="15" end="0" description="CDMA TX takedown status msb" rwaccess="R" />
  </register>
  <register id="CDMA_TX_enable_status_lsb_Register" offset="0x00028" width="32" description="(1 of 1, stride 0)">
    <bitfield id="enable_status_l" width="32" begin="31" end="0" description="CDMA TX enable status lsb" rwaccess="R" />
  </register>
  <register id="CDMA_TX_enable_status_msb_Register" offset="0x0002c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="enable_status_h" width="16" begin="15" end="0" description="CDMA TX enable status msb" rwaccess="R" />
  </register>
  <register id="CDMA_TX_packet_status_lsb_Register" offset="0x00030" width="32" description="(1 of 1, stride 0)">
    <bitfield id="pkt_status_l" width="32" begin="31" end="0" description="CDMA TX packet status lsb" rwaccess="R" />
  </register>
  <register id="CDMA_TX_packet_status_msb_Register" offset="0x00034" width="32" description="(1 of 1, stride 0)">
    <bitfield id="pkt_status_h" width="16" begin="15" end="0" description="CDMA TX packet status msb" rwaccess="R" />
  </register>
  <register id="CDMA_RX_takedown_status_lsb_Register" offset="0x00038" width="32" description="(1 of 1, stride 0)">
    <bitfield id="tdown_status_l" width="32" begin="31" end="0" description="CDMA RX takedown status lsb" rwaccess="R" />
  </register>
  <register id="CDMA_RX_takedown_status_msb_Register" offset="0x0003c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="tdown_status_h" width="16" begin="15" end="0" description="CDMA RX takedown status msb" rwaccess="R" />
  </register>
  <register id="CDMA_RX_enable_status_lsb_Register" offset="0x00040" width="32" description="(1 of 1, stride 0)">
    <bitfield id="enable_status_l" width="32" begin="31" end="0" description="CDMA RX enable status lsb" rwaccess="R" />
  </register>
  <register id="CDMA_RX_enable_status_msb_Register" offset="0x00044" width="32" description="(1 of 1, stride 0)">
    <bitfield id="enable_status_h" width="16" begin="15" end="0" description="CDMA RX enable status msb" rwaccess="R" />
  </register>
  <register id="CDMA_RX_packet_status_lsb_Register" offset="0x00048" width="32" description="(1 of 1, stride 0)">
    <bitfield id="pkt_status_l" width="32" begin="31" end="0" description="CDMA RX packet status lsb" rwaccess="R" />
  </register>
  <register id="CDMA_RX_packet_status_msb_Register" offset="0x0004c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="pkt_status_h" width="16" begin="15" end="0" description="CDMA RX packet status msb" rwaccess="R" />
  </register>
  <register id="IQN2SC_CLKCTL_Periperal_ID_Register" offset="0x00080" width="32" description="(1 of 1, stride 0)">
    <bitfield id="MINOR" width="6" begin="5" end="0" description="Minor revision Y code" rwaccess="R" />
    <bitfield id="CUSTOM" width="2" begin="7" end="6" description="Custom version code" rwaccess="R" />
    <bitfield id="MAJOR" width="3" begin="10" end="8" description="Major revision X code" rwaccess="R" />
    <bitfield id="RTL" width="5" begin="15" end="11" description="RTL Version R code" rwaccess="R" />
  </register>
  <register id="IQN2SC_AIL_Periperal_ID_Register" offset="0x00084" width="32" description="(1 of 1, stride 0)">
    <bitfield id="MINOR" width="6" begin="5" end="0" description="Minor revision Y code" rwaccess="R" />
    <bitfield id="CUSTOM" width="2" begin="7" end="6" description="Custom version code" rwaccess="R" />
    <bitfield id="MAJOR" width="3" begin="10" end="8" description="Major revision X code" rwaccess="R" />
    <bitfield id="RTL" width="5" begin="15" end="11" description="RTL Version R code" rwaccess="R" />
  </register>
  <register id="SERDES_transmit_status_Register" offset="0x00100" width="32" description="(1 of 4, stride 16)">
    <bitfield id="link_status_ok" width="1" begin="0" end="0" description="link clocks are ok to send and receive data. used in place of pll lock" rwaccess="R" />
  </register>
  <register id="SERDES_receive_status_Register" offset="0x0010c" width="32" description="(1 of 4, stride 16)">
    <bitfield id="RX_COMMA_DET" width="1" begin="0" end="0" description="STSRX 0 The receiver frame synchronizer must have knowledge that each Ser-des port had completed a requested byte alignment so that the byte alignment control logic can operate." rwaccess="R" />
    <bitfield id="RX_Loss_of_Signal" width="1" begin="1" end="1" description="STSRX 1 The receiver frame synchronizer must have knowledge that each Ser-des port had detected a loss of signal condition so that the receiver can suppress events due to a loss of frame synchronization." rwaccess="R" />
  </register>
  <register id="EE_EV0_ORGN_Raw_Status_Register" offset="0x04000" width="32" description="(1 of 1, stride 0)">
    <bitfield id="at_ee_sts" width="1" begin="0" end="0" description="AT origination status." rwaccess="R" />
    <bitfield id="aid_ee_sts" width="1" begin="1" end="1" description="AID origination status." rwaccess="R" />
    <bitfield id="dfe_ee_sts" width="1" begin="2" end="2" description="DFE origination status." rwaccess="R" />
    <bitfield id="dio_ee_sts" width="1" begin="3" end="3" description="DIO origination status." rwaccess="R" />
    <bitfield id="iqs_ee_sts" width="1" begin="4" end="4" description="IQS origination status." rwaccess="R" />
    <bitfield id="ail0_ee_sts" width="1" begin="5" end="5" description="AIL 0 origination status." rwaccess="R" />
    <bitfield id="ail1_ee_sts" width="1" begin="6" end="6" description="AIL 1 origination status." rwaccess="R" />
    <bitfield id="ail2_ee_ev1" width="1" begin="7" end="7" description="AIL 2 origination status." rwaccess="R" />
    <bitfield id="ail3_ee_ev1" width="1" begin="8" end="8" description="AIL 3 origination status." rwaccess="R" />
    <bitfield id="psr_ee_sts" width="1" begin="9" end="9" description="PSR origination status." rwaccess="R" />
  </register>
  <register id="EE_EV1_ORGN_Raw_Status_Register" offset="0x04004" width="32" description="(1 of 1, stride 0)">
    <bitfield id="at_ee_sts" width="1" begin="0" end="0" description="AT origination status." rwaccess="R" />
    <bitfield id="aid_ee_sts" width="1" begin="1" end="1" description="AID origination status." rwaccess="R" />
    <bitfield id="dfe_ee_sts" width="1" begin="2" end="2" description="DFE origination status." rwaccess="R" />
    <bitfield id="dio_ee_sts" width="1" begin="3" end="3" description="DIO origination status." rwaccess="R" />
    <bitfield id="iqs_ee_sts" width="1" begin="4" end="4" description="IQS origination status." rwaccess="R" />
    <bitfield id="ail0_ee_sts" width="1" begin="5" end="5" description="AIL 0 origination status." rwaccess="R" />
    <bitfield id="ail1_ee_sts" width="1" begin="6" end="6" description="AIL 1 origination status." rwaccess="R" />
    <bitfield id="ail2_ee_sts" width="1" begin="7" end="7" description="AIL 2 origination status." rwaccess="R" />
    <bitfield id="ail3_ee_sts" width="1" begin="8" end="8" description="AIL 3 origination status." rwaccess="R" />
    <bitfield id="psr_ee_sts" width="1" begin="9" end="9" description="PSR origination status." rwaccess="R" />
  </register>
  <register id="EE_EOI_EV_0_Register" offset="0x04010" width="32" description="(1 of 1, stride 0)">
    <bitfield id="eoi_0_vector_reg" width="8" begin="7" end="0" description="End Of Interrupt vector register for EV 0" rwaccess="RW" />
  </register>
  <register id="EE_EOI_EV_1_Register" offset="0x04014" width="32" description="(1 of 1, stride 0)">
    <bitfield id="eoi_1_vector_reg" width="8" begin="7" end="0" description="End Of Interrupt vector register for EV 1" rwaccess="RW" />
  </register>
  <register id="EE_EOI_CPPI_Register" offset="0x04018" width="32" description="(1 of 1, stride 0)">
    <bitfield id="eoi_cppi_vector_reg" width="8" begin="7" end="0" description="End Of Interrupt vector register for CPPI" rwaccess="RW" />
  </register>
  <register id="PSR_Egress_bw_limit_Configuration_Register" offset="0x08000" width="32" description="(1 of 1, stride 0)">
    <bitfield id="bw_limit" width="4" begin="11" end="8" description="Percent bandwidth limit setting for flushing a packet from a channel in the PKTDMA. 0 is 1/16 of VBUS bandwidth. Should be set to the maximum VBUS bandwidth expected to be used in normal operation rounded up to the next faster bandwidth setting. For" rwaccess="RW" />
  </register>
  <register id="PSR_Ingress_Configuration_Register" offset="0x08004" width="32" description="(1 of 1, stride 0)">
    <bitfield id="ps_data_ext" width="1" begin="0" end="0" description="Selects if the SI PS_FLAG bit 0 generates a PS_DATA cycle with the data coming from the dst_tag field of the INFO word." rwaccess="RW" />
  </register>
  <register id="PSR_Ingress_Channel_drop_or_flush_packet_on" offset="0x08200" width="32" description="(1 of 1, stride 0)">
    <bitfield id="drop_pkt" width="1" begin="1" end="1" description="Normally set to 1. Drops the corrupted packet when FLUSH during mid packet. FLUSH likely caused by PktDMA buffer overflow for a given channel. (FLUSH also caused by force_flush)" rwaccess="RW" />
    <bitfield id="force_flush" width="1" begin="2" end="2" description="(For TI use only) set to 0. Forces the channel into continuous FLUSH. FLUSH operation will EOP any mid-flight packet and discard all new traffic for a given channel. Only known use case of this field is to support partial resets of i.e. individual links" rwaccess="RW" />
  </register>
  <register id="PSR_Egress_Channel_Register" offset="0x08400" width="32" description="(1 of 1, stride 0)">
    <bitfield id="pack_ps_data" width="1" begin="0" end="0" description="Packs the PS_DATA into the dst_tag field of the INFO word when set. When not set PS_DATA is passed as a PS_DATA cycle with no modification of the INFO word dst_tag field. Only IQ data uses PS_DATA cycles and only OBSAI needing a 24 bit address passes" rwaccess="RW" />
    <bitfield id="arb_priority" width="3" begin="10" end="8" description="Arbitration priority for the channel on the PKTDMA PSI bus. 0 is highest priority." rwaccess="RW" />
  </register>
  <register id="ing_flush_a_Raw_Interrupt_Status" offset="0x08800" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Channel flush indication for ingress channels 0 through 31. An ingress flush error indicates a transfer to this PKTDMA channel was attempted when the channel was full which triggers a flush of the rest of the packet." rwaccess="R" />
  </register>
  <register id="ing_flush_a_Raw_Set" offset="0x08804" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Sets the corresponding bit in the raw_status register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_a_Raw_Clear" offset="0x08808" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Clears the corresponding bit in the raw_status register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_a_EV0_Enable_Status" offset="0x0880c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="When high enables the corresponding raw status bit to generate an interrupt." rwaccess="R" />
  </register>
  <register id="ing_flush_a_EV0_Enable_Set" offset="0x08810" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Sets the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_a_EV0_Enable_Clear" offset="0x08814" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Clears the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_a_EV1_Enable_Status" offset="0x08818" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="When high enables the corresponding raw status bit to generate an interrupt." rwaccess="R" />
  </register>
  <register id="ing_flush_a_EV1_Enable_Set" offset="0x0881c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Sets the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_a_EV1_Enable_Clear" offset="0x08820" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Clears the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_a_EV0_Enabled_Status" offset="0x08824" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="When high indicates the interrupt is active due to the corresponding bit in the raw status register." rwaccess="R" />
  </register>
  <register id="ing_flush_a_EV1_Enabled_Status" offset="0x08828" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="When high indicates the interrupt is active due to the corresponding bit in the raw status register." rwaccess="R" />
  </register>
  <register id="ing_flush_b_Raw_Interrupt_Status" offset="0x0882c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Channel flush indication for ingress channels 32 through 47. An ingress flush error indicates a transfer to this PKTDMA channel was attempted when the channel was full which triggers a flush of the rest of the packet." rwaccess="R" />
  </register>
  <register id="ing_flush_b_Raw_Set" offset="0x08830" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Sets the corresponding bit in the raw_status register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_b_Raw_Clear" offset="0x08834" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Clears the corresponding bit in the raw_status register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_b_EV0_Enable_Status" offset="0x08838" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="When high enables the corresponding raw status bit to generate an interrupt." rwaccess="R" />
  </register>
  <register id="ing_flush_b_EV0_Enable_Set" offset="0x0883c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Sets the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_b_EV0_Enable_Clear" offset="0x08840" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Clears the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_b_EV1_Enable_Status" offset="0x08844" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="When high enables the corresponding raw status bit to generate an interrupt." rwaccess="R" />
  </register>
  <register id="ing_flush_b_EV1_Enable_Set" offset="0x08848" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Sets the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_b_EV1_Enable_Clear" offset="0x0884c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Clears the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="ing_flush_b_EV0_Enabled_Status" offset="0x08850" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="When high indicates the interrupt is active due to the corresponding bit in the raw status register." rwaccess="R" />
  </register>
  <register id="ing_flush_b_EV1_Enabled_Status" offset="0x08854" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="When high indicates the interrupt is active due to the corresponding bit in the raw status register." rwaccess="R" />
  </register>
  <register id="egr_protocol_err_a_Raw_Interrupt_Status" offset="0x088b0" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Protocol error indication of an unsupported data type or a missing PS_DATA transfer when one was expected for egress channels 0 through 31" rwaccess="R" />
  </register>
  <register id="egr_protocol_err_a_Raw_Set" offset="0x088b4" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Sets the corresponding bit in the raw_status register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_a_Raw_Clear" offset="0x088b8" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Clears the corresponding bit in the raw_status register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_a_EV0_Enable_Status" offset="0x088bc" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="When high enables the corresponding raw status bit to generate an interrupt." rwaccess="R" />
  </register>
  <register id="egr_protocol_err_a_EV0_Enable_Set" offset="0x088c0" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Sets the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_a_EV0_Enable_Clear" offset="0x088c4" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Clears the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_a_EV1_Enable_Status" offset="0x088c8" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="When high enables the corresponding raw status bit to generate an interrupt." rwaccess="R" />
  </register>
  <register id="egr_protocol_err_a_EV1_Enable_Set" offset="0x088cc" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Sets the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_a_EV1_Enable_Clear" offset="0x088d0" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="Clears the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_a_EV0_Enabled_Status" offset="0x088d4" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="When high indicates the interrupt is active due to the corresponding bit in the raw status register." rwaccess="R" />
  </register>
  <register id="egr_protocol_err_a_EV1_Enabled_Status" offset="0x088d8" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="32" begin="31" end="0" description="When high indicates the interrupt is active due to the corresponding bit in the raw status register." rwaccess="R" />
  </register>
  <register id="egr_protocol_err_b_Raw_Interrupt_Status" offset="0x088dc" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Protocol error indication of an unsupported data type or a missing PS_DATA transfer when one was expected for egress channels 32 through 47" rwaccess="R" />
  </register>
  <register id="egr_protocol_err_b_Raw_Set" offset="0x088e0" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Sets the corresponding bit in the raw_status register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_b_Raw_Clear" offset="0x088e4" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Clears the corresponding bit in the raw_status register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_b_EV0_Enable_Status" offset="0x088e8" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="When high enables the corresponding raw status bit to generate an interrupt." rwaccess="R" />
  </register>
  <register id="egr_protocol_err_b_EV0_Enable_Set" offset="0x088ec" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Sets the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_b_EV0_Enable_Clear" offset="0x088f0" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Clears the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_b_EV1_Enable_Status" offset="0x088f4" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="When high enables the corresponding raw status bit to generate an interrupt." rwaccess="R" />
  </register>
  <register id="egr_protocol_err_b_EV1_Enable_Set" offset="0x088f8" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Sets the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_b_EV1_Enable_Clear" offset="0x088fc" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="Clears the corresponding bit in the enable register when written with a 1." rwaccess="W" />
  </register>
  <register id="egr_protocol_err_b_EV0_Enabled_Status" offset="0x08900" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="When high indicates the interrupt is active due to the corresponding bit in the raw status register." rwaccess="R" />
  </register>
  <register id="egr_protocol_err_b_EV1_Enabled_Status" offset="0x08904" width="32" description="(1 of 1, stride 0)">
    <bitfield id="err" width="16" begin="15" end="0" description="When high indicates the interrupt is active due to the corresponding bit in the raw status register." rwaccess="R" />
  </register>
  <register id="psr_orig_reg" offset="0x08960" width="32" description="(1 of 1, stride 0)">
    <bitfield id="ee_ing_flush_a" width="1" begin="0" end="0" description="If set a bit is set in the PSR ee_ing_flush_a register." rwaccess="R" />
    <bitfield id="ee_ing_flush_b" width="1" begin="1" end="1" description="If set a bit is set in the PSR ee_ing_flush_b register." rwaccess="R" />
    <bitfield id="ee_egr_protocol_err_a" width="1" begin="4" end="4" description="If set a bit is set in the PSR ee_egr_protocol_err_a register." rwaccess="R" />
    <bitfield id="ee_egr_protocol_err_b" width="1" begin="5" end="5" description="If set a bit is set in the PSR ee_egr_protocol_err_b register." rwaccess="R" />
  </register>
  <register id="pktdma_desc_starve_Raw_Interrupt_Status" offset="0x08c00" width="32" description="(1 of 1, stride 0)">
    <bitfield id="sop_err" width="1" begin="0" end="0" description="PKTDMA SOP Descriptor starvation error. There were not enough descriptors available for the PKTDMA to start the transfer of a packet." rwaccess="R" />
    <bitfield id="mop_err" width="1" begin="1" end="1" description="PKTDMA MOP Descriptor starvation error There were not enough descriptors available for the PKTDMA to complete the transfer of a packet it already started." rwaccess="R" />
  </register>
  <register id="pktdma_desc_starve_Raw_Set" offset="0x08c04" width="32" description="(1 of 1, stride 0)">
    <bitfield id="sop_err" width="1" begin="0" end="0" description="Sets the corresponding bit in the raw_status register when set. Write only, self-clears." rwaccess="W" />
    <bitfield id="mop_err" width="1" begin="1" end="1" description="Sets the corresponding bit in the raw_status register when set. Write only, self-clears." rwaccess="W" />
  </register>
  <register id="pktdma_desc_starve_Raw_Clear" offset="0x08c08" width="32" description="(1 of 1, stride 0)">
    <bitfield id="sop_err" width="1" begin="0" end="0" description="Clears the corresponding bit in the raw_status register when set. Write only, self-clears." rwaccess="W" />
    <bitfield id="mop_err" width="1" begin="1" end="1" description="Clears the corresponding bit in the raw_status register when set. Write only, self-clears." rwaccess="W" />
  </register>
  <register id="pktdma_desc_starve_EV0_Enable_Status" offset="0x08c0c" width="32" description="(1 of 1, stride 0)">
    <bitfield id="sop_err" width="1" begin="0" end="0" description="When set allows the corresponding bit in the raw_status register to generate the intr_sts interrupt. Read only." rwaccess="R" />
    <bitfield id="mop_err" width="1" begin="1" end="1" description="When set allows the corresponding bit in the raw_status register to generate the intr_sts interrupt. Read only." rwaccess="R" />
  </register>
  <register id="pktdma_desc_starve_EV0_Enable_Set" offset="0x08c10" width="32" description="(1 of 1, stride 0)">
    <bitfield id="sop_err" width="1" begin="0" end="0" description="Sets the corresponding bit in the enable register when set. Write only, self-clears." rwaccess="W" />
    <bitfield id="mop_err" width="1" begin="1" end="1" description="Sets the corresponding bit in the enable register when set. Write only, self-clears." rwaccess="W" />
  </register>
  <register id="pktdma_desc_starve_EV0_Enable_Clear" offset="0x08c14" width="32" description="(1 of 1, stride 0)">
    <bitfield id="sop_err" width="1" begin="0" end="0" description="Clears the corresponding bit in the enable register when set. Write only, self-clears." rwaccess="W" />
    <bitfield id="mop_err" width="1" begin="1" end="1" description="Clears the corresponding bit in the enable register when set. Write only, self-clears." rwaccess="W" />
  </register>
  <register id="pktdma_desc_starve_EV0_Enabled_Status" offset="0x08c18" width="32" description="(1 of 1, stride 0)">
    <bitfield id="sop_err" width="1" begin="0" end="0" description="AND-ed raw_status bits with the corresponding bit in the enable_status register. Read only." rwaccess="R" />
    <bitfield id="mop_err" width="1" begin="1" end="1" description="AND-ed raw_status bits with the corresponding bit in the enable_status register. Read only." rwaccess="R" />
  </register>
</module>
<!-- KeyStone2 Emupack version __KEYSTONE2_EMUPACK_VERSION__ -->
