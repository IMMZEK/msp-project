<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="CPSW_SL" id="CPSW_SL">
  
  
  <register acronym="CPSW_SL_IDVER" description="CPGMAC_SL ID/VERSION REGISTER" id="CPSW_SL_IDVER" offset="0x0" width="32">
    
  <bitfield begin="31" description=" Rx Identification Value" end="16" id="IDENT" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description=" Rx Z value (X.Y.Z)" end="11" id="Z" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description=" Rx X value (major)" end="8" id="X" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description=" Rx Y value (minor)" end="0" id="Y" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_SL_MACCTRL" description="CPGMAC_SL MAC CONTROL REGISTER" id="CPSW_SL_MACCTRL" offset="0x4" width="32">
    
  <bitfield begin="31" description=" " end="25" id="RESERVED_1" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="24" description=" RX Copy MAC Control Frames Enable - Enables MAC control frames to be transferred to memory. [[br]]MAC control frames are normally acted upon (if enabled), but not copied to memory. [[br]]MAC control frames that are pause frames will be acted upon if enabled in the MacControl register, regardless of the value of rx_cmf_en. [[br]]Frames transferred to memory due to rx_cmf_en will have the control bit set in their EOP buffer descriptor. " end="24" id="RX_CMF_EN" rwaccess="RW" width="1">
    <bitenum description="MAC control frames are transferred to memory." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="MAC control frames are filtered (but acted upon if enabled)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description=" RX Copy Short Frames Enable - Enables frames or fragments shorter than 64 bytes to be copied to memory. [[br]]Frames transferred to memory due to rx_csf_en will have the fragment or undersized bit set in their receive footer. [[br]]Fragments are short frames that contain CRC/align/code errors and undersized are short frames without errors. [[br]] " end="23" id="RX_CSF_EN" rwaccess="RW" width="1">
    <bitenum description="Short frames are transferred to memory." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Short frames are filtered" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="22" description=" RX Copy Error Frames Enable - Enables frames containing errors to be transferred to memory. [[br]]The appropriate error bit will be set in the frame receive footer. [[br]]Frames containing errors will be filtered when rx_cef _en is not set. " end="22" id="RX_CEF_EN" rwaccess="RW" width="1">
    <bitenum description="Frames containing errors are transferred to memory." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Frames containing errors are filtered." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="21" description=" Transmit Short Gap Limit Enable When set this bit limits the number of short gap packets transmitted to 100ppm. [[br]]Each time a short gap packet is sent, a counter is loaded with 10,000 and decremented on each wireside clock. [[br]]Another short gap packet will not be sent out until the counter decrements to zero. [[br]]This mode is included to preclude the host from filling up the FIFO and sending every packet out with short gap which would violate the maximum number of packets per second allowed. [[br]]" end="21" id="TX_SHORT_GAP_LIM_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description=" " end="19" id="RESERVED_2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="18" description=" Control Enable - Enables the fullduplex and gigabit mode to be selected from the FULLDUPLEX_IN and GIG_IN input signals and not from the fullduplex and gig bits in this register. [[br]]The FULLDUPLEX_MODE bit reflects the actual fullduplex mode selected. [[br]]" end="18" id="EXT_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description=" Gigabit Mode Force - This bit is used to force the CPGMAC_SL into gigabit mode if the input GMII_MTCLK has been stopped by the PHY. [[br]]" end="17" id="GIG_FORCE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description=" Connects to the speed_in input of the respective RMII gasket. [[br]]When using RMII mode:  " end="16" id="IFCTL_B" rwaccess="RW" width="1">
    <bitenum description="100Mbps operation" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="10Mbps operation" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" Connects to the speed_in input of the respective RMII gasket. [[br]]When using RMII mode:  " end="15" id="IFCTL_A" rwaccess="RW" width="1">
    <bitenum description="100Mbps operation" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="10Mbps operation" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description=" " end="13" id="RESERVED_3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="12" description=" Carrier Sense Flow Control Enable[[br]] When set this bit enables the GMII_MCRS (carrier sense) to be used as a hardware flow control in fullduplex mode." end="12" id="CRS_FLOW_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description=" Command Idle" end="11" id="CMD_IDLE" rwaccess="RW" width="1">
    <bitenum description="Idle Commanded (read idle in MacStatus)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Idle not commanded" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="10" description=" Transmit Short Gap Enable " end="10" id="TX_SHORT_GAP_EN" rwaccess="RW" width="1">
    <bitenum description="Transmit with a short IPG (when TX_SHORT_GAP input is asserted) is enabled." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Transmit with a short IPG is disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description=" " end="8" id="RESERVED_4" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="7" description=" Gigabit Mode " end="7" id="GIG" rwaccess="RW" width="1">
    <bitenum description="Gigabit mode (full duplex only) The GIG_OUT output is the value of this bit." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="10/100 mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description=" Transmit Pacing Enable " end="6" id="TX_PACE" rwaccess="RW" width="1">
    <bitenum description="Transmit Pacing Enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Transmit Pacing Disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" GMII Enable " end="5" id="GMII_EN" rwaccess="RW" width="1">
    <bitenum description="GMII RX and TX released from reset." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="GMII RX and TX held in reset." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Transmit Flow Control Enable - Determines if incoming pause frames are acted upon in full-duplex mode. [[br]]Incoming pause frames are not acted upon in half-duplex mode regardless of this bit setting. [[br]]The RX_MBP_Enable bits determine whether or not received pause frames are transferred to memory. [[br]] " end="4" id="TX_FLOW_EN" rwaccess="RW" width="1">
    <bitenum description="Transmit Flow Control Enabled. Full-duplex mode - Incoming pause frames are acted upon." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Transmit Flow Control Disabled. Full-duplex mode - Incoming pause frames are not acted upon." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Receive Flow Control Enable " end="3" id="RX_FLOW_EN" rwaccess="RW" width="1">
    <bitenum description="Receive Flow Control Enabled Half-duplex mode - Collisions are initiated when receive flow control is triggered. Full-duplex mode - Outgoing pause frames are sent when receive flow control is triggered." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Receive Flow Control Disabled Half-duplex mode - No flow control generated collisions are sent. Full-duplex mode - No outgoing pause frames are sent." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Manufacturing Test mode - This bit must be set to allow writes to the Backoff_Test and PauseTimer registers." end="2" id="MTEST" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description=" Loop Back Mode - Loopback mode forces internal fullduplex mode regardless of whether the fullduplex bit is set or not. [[br]]The loopback bit should be changed only when GMII_en is deasserted. " end="1" id="LOOPBACK" rwaccess="RW" width="1">
    <bitenum description="Loop Back Mode enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Not looped back" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Full Duplex mode - Gigabit mode forces fullduplex mode regardless of whether the fullduplex bit is set or not. [[br]]The FULLDUPLEX_OUT output is the value of this register bit  " end="0" id="FULLDUPLEX" rwaccess="RW" width="1">
    <bitenum description="Full duplex mode" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Half duplex mode" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CPSW_SL_MACSTS" description="CPGMAC_SL MAC STATUS REGISTER" id="CPSW_SL_MACSTS" offset="0x8" width="32">
    
  <bitfield begin="31" description=" CPGMAC_SL IDLE - The CPGMAC_SL is in the idle state (valid after an idle command)" end="31" id="IDLE" rwaccess="R" width="1">
    <bitenum description="The CPGMAC_SL is in the idle state." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="The CPGMAC_SL is not in the idle state." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description=" " end="5" id="RESERVED_1" rwaccess="R" width="26"></bitfield>
    
  <bitfield begin="4" description=" External GIG - This is the value of the EXT_GIG input bit." end="4" id="EXT_GIG" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description=" External Fullduplex - This is the value of the EXT_FULLDUPLEX input bit." end="3" id="EXT_FULLDUPLEX" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description=" " end="2" id="RESERVED_2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description=" Receive Flow Control Active - When asserted, indicates that receive flow control is enabled and triggered." end="1" id="RX_FLOW_ACT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description=" Transmit Flow Control Active - When asserted, this bit indicates that the pause time period is being observed for a received pause frame. [[br]]No new transmissions will begin while this bit is asserted except for the transmission of pause frames. [[br]]Any transmission in progress when this bit is asserted will complete. [[br]]" end="0" id="TX_FLOW_ACT" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_SL_SOFT_RESET" description="CPGMAC_SL SOFT RESET REGISTER" id="CPSW_SL_SOFT_RESET" offset="0xC" width="32">
    
  <bitfield begin="31" description=" " end="1" id="RESERVED_1" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description=" Software reset - Writing a one to this bit causes the CPGMAC_SL logic to be reset. [[br]]After writing a one to this bit, it may be polled to determine if the reset has occurred. [[br]]If a one is read, the reset has not yet occurred. [[br]]If a zero is read then reset has occurred. [[br]]" end="0" id="SOFT_RESET" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_SL_RX_MAXLEN" description="CPGMAC_SL RX MAXIMUM LENGTH REGISTER" id="CPSW_SL_RX_MAXLEN" offset="0x10" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"></bitfield>
    
  <bitfield begin="13" description=" RX Maximum Frame Length - This field determines the maximum length of a received frame. [[br]]The reset value is 1518 (dec). [[br]]Frames with byte counts greater than rx_maxlen are long frames. [[br]]Long frames with no errors are oversized frames. [[br]]Long frames with CRC, code, or alignment error are jabber frames. [[br]]The maximum value is 16,383. [[br]]" end="0" id="RX_MAXLEN" rwaccess="RW" width="14"></bitfield>
  </register>
  
  
  <register acronym="CPSW_SL_BOFFTEST" description="CPGMAC_SL BACKOFF TEST REGISTER" id="CPSW_SL_BOFFTEST" offset="0x14" width="32">
    
  <bitfield begin="31" description=" " end="31" id="RESERVED_1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description=" Pacing Register Current Value. [[br]]A non-zero value in this field indicates that transmit pacing is active. [[br]]A transmit frame collision or deferral causes paceval to loaded with decimal 31, good frame transmissions (with no collisions or deferrals) cause paceval to be decremented down to zero. [[br]]When paceval is nonzero, the transmitter delays 4 IPGs between new frame transmissions after each successfully transmitted frame that had no deferrals or collisions. [[br]]Transmit pacing helps reduce &quot;capture&quot; effects improving overall network bandwidth. [[br]]" end="26" id="PACEVAL" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="25" description=" Backoff Random Number Generator - This field allows the Backoff Random Number Generator to be read (or written in test mode only). [[br]]This field can be written only when mtest has previously been set. [[br]]Reading this field returns the generator's current value. [[br]]The value is reset to zero and begins counting on the clock after the deassertion of reset. [[br]]" end="16" id="RNDNUM" rwaccess="RW" width="10"></bitfield>
    
  <bitfield begin="15" description=" Collision Count - The number of collisions the current frame has experienced." end="12" id="COLL_COUNT" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="11" description=" " end="10" id="RESERVED_2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="9" description=" Backoff Count - This field allows the current value of the backoff counter to be observed for test purposes. [[br]]This field is loaded automatically according to the backoff algorithm, and is decremented by one for each slot time after the collision. [[br]]" end="0" id="TX_BACKOFF" rwaccess="R" width="10"></bitfield>
  </register>
  
  
  <register acronym="CPSW_SL_RX_PAUSE" description="CPGMAC_SL RECEIVE PAUSE TIMER REGISTER" id="CPSW_SL_RX_PAUSE" offset="0x18" width="32">
    
  <bitfield begin="31" description=" " end="16" id="RESERVED_1" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description=" RX Pause Timer Value - This field allows the contents of the receive pause timer to be observed (and written in test mode). [[br]]The receive pause timer is loaded with 0xFF00 when the CPGMAC_SL sends an outgoing pause frame (with pause time of 0xFFFF). [[br]]The receive pause timer is decremented at slot time intervals. [[br]]If the receive pause timer decrements to zero, then another outgoing pause frame will be sent and the load/decrement process will be repeated." end="0" id="RX_PAUSETIMER" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="CPSW_SL_TX_PAUSE" description="CPGMAC_SL TRANSMIT PAUSE TIMER REGISTER" id="CPSW_SL_TX_PAUSE" offset="0x1C" width="32">
    
  <bitfield begin="31" description=" " end="16" id="RESERVED_1" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description=" TX Pause Timer Value - This field allows the contents of the transmit pause timer to be observed (and written in test mode). [[br]]The transmit pause timer is loaded by a received (incoming) pause frame, and then decremented, at slottime intervals, down to zero at which time CPGMAC_SL transmit frames are again enabled." end="0" id="TX_PAUSETIMER" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="CPSW_SL_EMCTRL" description="CPGMAC_SL EMULATION CONTROL REGISTER" id="CPSW_SL_EMCTRL" offset="0x20" width="32">
    
  <bitfield begin="31" description=" " end="2" id="RESERVED_1" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description=" Emulation Soft Bit" end="1" id="SOFT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description=" Emulation Free Bit" end="0" id="FREE" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_SL_RX_PRI_MAP" description="CPGMAC_SL RX PKT PRIORITY TO HEADER PRIORITY MAPPING REGISTER" id="CPSW_SL_RX_PRI_MAP" offset="0x24" width="32">
    
  <bitfield begin="31" description=" " end="31" id="RESERVED_1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description=" Priority [[br]]7 - A packet priority of 0x7 is mapped (changed) to this value." end="28" id="PRI7" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="27" description=" " end="27" id="RESERVED_2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description=" Priority [[br]]6 - A packet priority of 0x6 is mapped (changed) to this value." end="24" id="PRI6" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="23" description=" " end="23" id="RESERVED_3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="22" description=" Priority [[br]]5 - A packet priority of 0x5 is mapped (changed) to this value." end="20" id="PRI5" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="19" description=" " end="19" id="RESERVED_4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description=" Priority [[br]]4 - A packet priority of 0x4 is mapped (changed) to this value." end="16" id="PRI4" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description=" " end="15" id="RESERVED_5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description=" Priority [[br]]3 - A packet priority of 0x3 is mapped (changed) to this value." end="12" id="PRI3" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="11" description=" " end="11" id="RESERVED_6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description=" Priority [[br]]2 - A packet priority of 0x2 is mapped (changed) to this value." end="8" id="PRI2" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description=" Priority [[br]]1 - A packet priority of 0x1 is mapped (changed) to this value." end="4" id="PRI1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_8" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description=" Priority [[br]]0 - A packet priority of 0x0 is mapped (changed) to this value." end="0" id="PRI0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="CPSW_SL_TX_GAP" description="TRANSMIT INTER-PACKET GAP REGISTER" id="CPSW_SL_TX_GAP" offset="0x28" width="32">
    
  <bitfield begin="31" description=" " end="9" id="RESERVED_1" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description=" Transmit Inter-Packet Gap" end="0" id="TX_GAP" rwaccess="RW" width="9"></bitfield>
  </register>
</module>
