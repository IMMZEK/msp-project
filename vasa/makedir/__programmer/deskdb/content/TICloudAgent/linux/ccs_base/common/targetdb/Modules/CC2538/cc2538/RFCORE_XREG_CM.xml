<?xml version="1.0" encoding="utf-8"?>
<!-- This file was autogenerated by Socrates Bitwise, Duolog Technologies Ltd. -->
<module id="RFCORE_XREG" HW_revision="" XML_version="1.0" description="Register fields should be considered static unless otherwise noted as dynamic." xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="setup_parser.xsd">
  <register acronym="FRMCTRL0" width="32" description="Frame handling" id="FRMCTRL0" offset="0x24">
    <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval=""></bitfield>
    <bitfield range="" begin="7" width="1" end="7" rwaccess="RW" description="When AUTOCRC = 0: Don't care When AUTOCRC = 1: 0: RSSI + The CRC_OK bit and the 7-bit correlation value are appended at the end of each received frame 1: RSSI + The CRC_OK bit and the 7-bit SRCRESINDEX are appended at the end of each received frame. " id="APPEND_DATA_MODE" resetval=""></bitfield>
    <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="In TX 1: A CRC-16 (ITU-T) is generated in hardware and appended to the transmitted frame. There is no need to write the last 2 bytes to TXBUF. 0: No CRC-16 is appended to the frame. The last 2 bytes of the frame must be generated manually and written to TXBUF (if not, TX_UNDERFLOW occurs). In RX 1: The CRC-16 is checked in hardware, and replaced in the RXFIFO by a 16-bit status word which contains a CRC OK bit. The status word is controllable through APPEND_DATA_MODE. 0: The last 2 bytes of the frame (CRC-16 field) are stored in the RX FIFO. The CRC (if any) must be done manually. This setting does not influence acknowledgment transmission (including AUTOACK)." id="AUTOCRC" resetval=""></bitfield>
    <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="Defines whether the radio automatically transmits acknowledge frames or not. When autoack is enabled, all frames that are accepted by address filtering, have the acknowledge request flag set, and have a valid CRC are automatically acknowledged 12 symbol periods after being received. 0: Autoack disabled 1: Autoack enabled" id="AUTOACK" resetval=""></bitfield>
    <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="Defines whether the RSSI register contains the most-recent signal strength or the peak signal strength since the energy scan was enabled. 0: Most-recent signal strength 1: Peak signal strength" id="ENERGY_SCAN" resetval=""></bitfield>
    <bitfield range="" begin="3" width="2" end="2" rwaccess="RW" description="Set RX modes. 00: Normal operation, use RX FIFO 01: Receive serial mode, output received data on to IOC; infinite RX 10: RX FIFO looping ignore overflow in RX FIFO; infinite reception 11: Same as normal operation except that symbol search is disabled. Can be used for RSSI or CCA measurements when finding symbol is not desired. " id="RX_MODE" resetval=""></bitfield>
    <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="Set test modes for TX. 00: Normal operation, transmit TX FIFO 01: Reserved, should not be used 10: TX FIFO looping ignore underflow in TX FIFO and read cyclic; infinite transmission 11: Send random data from CRC; infinite transmission " id="TX_MODE" resetval=""></bitfield>
  </register>
  <register acronym="RFRND" width="32" description="Random data" id="RFRND" offset="0x9c">
    <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval=""></bitfield>
    <bitfield range="" begin="7" width="6" end="2" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval=""></bitfield>
    <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Random bit from the Q channel of the receiver" id="QRND" resetval=""></bitfield>
    <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Random bit from the I channel of the receiver" id="IRND" resetval=""></bitfield>
  </register>
  <register acronym="ATEST" width="32" description="Analog test control" id="ATEST" offset="0xf4">
    <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval=""></bitfield>
    <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval=""></bitfield>
    <bitfield range="" begin="5" width="6" end="0" rwaccess="RW" description="Controls the analog test mode: 00 0000: Disabled 00 0001: Enables the temperature sensor (see also the CCTEST_TR0 register description). Other values reserved." id="ATEST_CTRL" resetval=""></bitfield>
  </register>
</module>