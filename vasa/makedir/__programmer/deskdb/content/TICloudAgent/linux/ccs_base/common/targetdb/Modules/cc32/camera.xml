<?xml version="1.0" encoding="UTF-8"?>
<module id="camera" HW_revision="">
    <register id="CC_REVISION" width="32" offset="0x0" description="This register contains the IP revision code ( Parallel Mode)">
        <bitfield id="REV" description="IP revision [7:4] Major revision [3:0] Minor revision Examples: 0x10 for 1.0 0x21 for 2.1" begin="7" end="0" width="8" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="CC_SYSCONFIG" width="32" offset="0x10" description="This register controls the various parameters of the OCP interface (CCP and Parallel Mode)">
        <bitfield id="S_IDLE_MODE" description="Slave interface power management req/ack control &amp;quot;&amp;quot;&amp;quot;00&amp;quot;&amp;quot; Force-idle. An idle request is acknoledged unconditionally&amp;quot; &amp;quot;&amp;quot;&amp;quot;01&amp;quot;&amp;quot; No-idle. An idle request is never acknowledged&amp;quot; &amp;quot;&amp;quot;&amp;quot;10&amp;quot;&amp;quot; reserved (Smart-idle not implemented)&amp;quot;" begin="4" end="3" width="2" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="CC_SYSSTATUS" width="32" offset="0x14" description="This register provides status information about the module excluding the interrupt status information (CCP and Parallel Mode)">
    </register>
    <register id="CC_IRQSTATUS" width="32" offset="0x18" description="The interrupt status regroups all the status of the module internal events that can generate an interrupt (CCP &amp; Parallel Mode)">
    </register>
    <register id="CC_IRQENABLE" width="32" offset="0x1C" description="The interrupt enable register allows to enable/disable the module internal sources of interrupt on an event-by-event basis (CCP &amp; Parallel Mode)">
    </register>
    <register id="CC_CTRL" width="32" offset="0x40" description="This register controls the various parameters of the Camera Core block (CCP &amp; Parallel Mode)">
        <bitfield id="PAR_MODE" description="Sets the Protocol Mode of the Camera Core module in parallel mode (when CCP_MODE = 0) &amp;quot;&amp;quot;&amp;quot;000&amp;quot;&amp;quot; Parallel NOBT 8-bit&amp;quot; &amp;quot;&amp;quot;&amp;quot;001&amp;quot;&amp;quot; Parallel NOBT 10-bit&amp;quot; &amp;quot;&amp;quot;&amp;quot;010&amp;quot;&amp;quot; Parallel NOBT 12-bit&amp;quot; &amp;quot;&amp;quot;&amp;quot;011&amp;quot;&amp;quot; reserved&amp;quot; &amp;quot;&amp;quot;&amp;quot;100&amp;quot;&amp;quot; Parallet BT 8-bit&amp;quot; &amp;quot;&amp;quot;&amp;quot;101&amp;quot;&amp;quot; Parallel BT 10-bit&amp;quot; &amp;quot;&amp;quot;&amp;quot;110&amp;quot;&amp;quot; reserved&amp;quot; &amp;quot;&amp;quot;&amp;quot;111&amp;quot;&amp;quot; FIFO test mode. Refer to Table 12 - FIFO Write and Read access&amp;quot;" begin="3" end="1" width="3" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="CC_CTRL_DMA" width="32" offset="0x44" description="This register controls the DMA interface of the Camera Core block (CCP &amp; Parallel Mode)">
        <bitfield id="FIFO_THRESHOLD" description="Sets the threshold of the FIFO the assertion of the dmarequest line takes place when the threshold is reached. &amp;quot;&amp;quot;&amp;quot;0000000&amp;quot;&amp;quot; threshold set to 1&amp;quot; &amp;quot;&amp;quot;&amp;quot;0000001&amp;quot;&amp;quot; threshold set to 2&amp;quot;  &amp;quot;&amp;quot;&amp;quot;1111111&amp;quot;&amp;quot; threshold set to 128&amp;quot;" begin="6" end="0" width="7" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="CC_CTRL_XCLK" width="32" offset="0x48" description="This register control the value of the clock divisor used to generate the external clock (Parallel Mode)">
        <bitfield id="XCLK_DIV" description="Sets the clock divisor value for CAM_XCLK generation. based on CAM_MCK (value of CAM_MCLK is 96MHz) &amp;quot;&amp;quot;&amp;quot;00000&amp;quot;&amp;quot; CAM_XCLK Stable Low Level&amp;quot; Divider not enabled &amp;quot;&amp;quot;&amp;quot;00001&amp;quot;&amp;quot; CAM_XCLK Stable High Level&amp;quot; Divider not enabled from 2 to 30 CAM_XCLK = CAM_MCLK / XCLK_DIV &amp;quot;&amp;quot;&amp;quot;11111&amp;quot;&amp;quot; Bypass - CAM_XCLK = CAM_MCLK&amp;quot;" begin="4" end="0" width="5" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="CC_FIFO_DATA" width="32" offset="0x4C" description="This register allows to write to the FIFO and read from the FIFO (CCP &amp; Parallel Mode)">
    </register>
    <register id="CC_TEST" width="32" offset="0x50" description="This register shows the status of some important variables of the camera core module (CCP &amp; Parallel Mode)">
        <bitfield id="FIFO_RD_POINTER" description="FIFO READ Pointer This field shows the value of the FIFO read pointer Expected value ranges from 0 to 127" begin="31" end="24" width="8" rwaccess="R/W">
        </bitfield>
        <bitfield id="FIFO_WR_POINTER" description="FIFO WRITE pointer This field shows the value of the FIFO write pointer Expected value ranges from 0 to 127" begin="23" end="16" width="8" rwaccess="R/W">
        </bitfield>
        <bitfield id="FIFO_LEVEL" description="FIFO level (how many 32-bit words the FIFO contains) This field shows the value of the FIFO level and can assume values from 0 to 128" begin="15" end="8" width="8" rwaccess="R/W">
        </bitfield>
        <bitfield id="FIFO_LEVEL_PEAK" description="FIFO level peak This field shows the max value of the FIFO level and can assume values from 0 to 128" begin="7" end="0" width="8" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="CC_GEN_PAR" width="32" offset="0x54" description="This register shows the values of the generic parameters of the module ****************************************************************************">
        <bitfield id="CC_FIFO_DEPTH" description="Camera Core FIFO DEPTH generic parameter" begin="2" end="0" width="3" rwaccess="R/W">
        </bitfield>
    </register>
</module>
