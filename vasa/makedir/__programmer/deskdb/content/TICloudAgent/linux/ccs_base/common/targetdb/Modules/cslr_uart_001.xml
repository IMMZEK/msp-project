<?xml version="1.0" encoding="UTF-8"?>
<module id="UART" HW_revision="1" XML_version="1" description="Universal Asynchronous Receive Transmit">
	<register id="RBR" acronym="RBR" offset="0x0000" width="32" description="Receiver Buffer Register">
		<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="DATA" width="8" begin="7" end="0" resetval="0" description="Received data" range="" rwaccess="R">
         
      </bitfield>
	</register>
	<register id="THR" acronym="THR" offset="0x0000" width="32" description="Transmitter Holding Register">
		<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="DATA" width="8" begin="7" end="0" resetval="0" description="Data to transmit" range="" rwaccess="W">
         
      </bitfield>
	</register>
	<register id="IER" acronym="IER" offset="0x0004" width="32" description="Interrupt Enable Register">
		<bitfield id="_RESV" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="EDSSI" width="1" begin="3" end="3" resetval="0" description="Enable Modem Status Interrupt " range="" rwaccess="RW">
			<bitenum id="DISABLE" value="0" token="DISABLE" description=""/>
			<bitenum id="ENABLE" value="1" token="ENABLE" description=""/>
		</bitfield>
		<bitfield id="ELSI" width="1" begin="2" end="2" resetval="0" description="Enable Receiver Line Status Interrupt " range="" rwaccess="RW">
			<bitenum id="DISABLE" value="0" token="DISABLE" description=""/>
			<bitenum id="ENABLE" value="1" token="ENABLE" description=""/>
		</bitfield>
		<bitfield id="ETBEI" width="1" begin="1" end="1" resetval="0" description="Enable Transmitter Holding Register Empty Interrupt" range="" rwaccess="RW">
			<bitenum id="DISABLE" value="0" token="DISABLE" description=""/>
			<bitenum id="ENABLE" value="1" token="ENABLE" description=""/>
		</bitfield>
		<bitfield id="ERBI" width="1" begin="0" end="0" resetval="0" description="Enable Receiver Data Available Interrupt and Character Timeout indication Interrupt" range="" rwaccess="RW">
			<bitenum id="DISABLE" value="0" token="DISABLE" description=""/>
			<bitenum id="ENABLE" value="1" token="ENABLE" description=""/>
		</bitfield>
	</register>
	<register id="IIR" acronym="IIR" offset="0x0008" width="32" description="Interrupt Identification Register">
		<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="FIFOEN" width="2" begin="7" end="6" resetval="0" description="FIFOs Enabled Always 00b in Non-FIFO mode Set to 11b when bit 0 of the FCR register is set" range="" rwaccess="R">
         
         
         
      </bitfield>
		<bitfield id="_RESV" width="2" begin="5" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="INTID" width="3" begin="3" end="1" resetval="0" description="Encodes the different types of interrupt" range="" rwaccess="R">
			<bitenum id="MODSTAT" value="0" token="MODSTAT" description="Modem Status (Priority 4) Lowest"/>
			<bitenum id="THRE" value="1" token="THRE" description="THR Empty (Priority 3)"/>
			<bitenum id="RDA" value="2" token="RDA" description="Received Data Available (Priority 2)"/>
			<bitenum id="RLS" value="3" token="RLS" description="Receiver Line Status (Priority 1) Highest"/>
			<bitenum id="CTI" value="6" token="CTI" description="Character Timeout Indication (Priority 2)"/>
		</bitfield>
		<bitfield id="IPEND" width="1" begin="0" end="0" resetval="1" description="Interrupt Pending This bit is used either in a hardwire prioritized (nirq) or polled interrupt system" range="" rwaccess="R">
			<bitenum id="NONE" value="1" token="NONE" description=" No interrupts pending"/>
		</bitfield>
	</register>
	<register id="FCR" acronym="FCR" offset="0x0008" width="32" description="FIFO Control Register">
		<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="RXFIFTL" width="2" begin="7" end="6" resetval="0" description="Receiver FIFO Trigger Level (In bytes)" range="" rwaccess="W">
			<bitenum id="CHAR1" value="0" token="CHAR1" description="1 byte"/>
			<bitenum id="CHAR4" value="1" token="CHAR4" description="4 byte"/>
			<bitenum id="CHAR8" value="2" token="CHAR8" description="8 byte"/>
			<bitenum id="CHAR14" value="3" token="CHAR14" description="14 byte"/>
		</bitfield>
		<bitfield id="_RESV" width="2" begin="5" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="DMAMODE1" width="1" begin="3" end="3" resetval="0" description="Setting this bit selects MODE 1 for DMA, provided FIFOs are enabled " range="" rwaccess="W">
			<bitenum id="DISABLE" value="0" token="DISABLE" description="Disable DMA"/>
			<bitenum id="ENABLE" value="1" token="ENABLE" description="Enables MODE1"/>
		</bitfield>
		<bitfield id="TXCLR" width="1" begin="2" end="2" resetval="0" description="Setting this bit clears the transmitter FIFO and resets the transmitter FIFO counter. The shift register is not cleared. The 1 that is written to this bit position is self-clearing" range="" rwaccess="W">
			<bitenum id="CLR" value="1" token="CLR" description="Clears Tx FIFO"/>
		</bitfield>
		<bitfield id="RXCLR" width="1" begin="1" end="1" resetval="0" description="Setting this bit resets the receiver FIFO counter. The shift register is not cleared. The 1 that is written to this bit position is self-clearing" range="" rwaccess="W">
			<bitenum id="CLR" value="1" token="CLR" description="Clears Rx FIFO"/>
		</bitfield>
		<bitfield id="FIFOEN" width="1" begin="0" end="0" resetval="0" description="Setting this bit enables the transmitter and receiver FIFOs. This bit must be set when other FCR bits are written to or they are not programmed. Clearing this bit clears the FIFO counters" range="" rwaccess="W">
			<bitenum id="DISABLE" value="0" token="DISABLE" description="Disable FIFOs"/>
			<bitenum id="ENABLE" value="1" token="ENABLE" description="Enable FIFOs"/>
		</bitfield>
	</register>
	<register id="LCR" acronym="LCR" offset="0x000C" width="32" description="Line Control Register">
		<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="DLAB" width="1" begin="7" end="7" resetval="0" description="Divisor Latch Access Bit This bit must be set to access the divisor latches of the baud generator during a read or write operation This bit must be cleared to access the receiver buffer register, the transmitter holding register, or the interrupt enable register" range="" rwaccess="RW">
         
         
         
      </bitfield>
		<bitfield id="BC" width="1" begin="6" end="6" resetval="0" description="Break Control Bit" range="" rwaccess="RW">
			<bitenum id="DISABLE" value="0" token="DISABLE" description="Break condition is disabled"/>
			<bitenum id="ENABLE" value="1" token="ENABLE" description="Break condition is transmitted to the receiving UART"/>
		</bitfield>
		<bitfield id="SP" width="1" begin="5" end="5" resetval="0" description="Stick Parity Bit When this bit is set and even parity is selected, the parity bit is transmitted and checked as cleared When this bit is set and odd parity is selected, the parity bit is transmitted and checked as set When this bit is cleared, stick parity is disabled" range="" rwaccess="RW">
         
         
         
         
      </bitfield>
		<bitfield id="EPS" width="1" begin="4" end="4" resetval="0" description="Even Parity Select When this bit is set and parity is enabled, even parity is selected (an even number of logic 1s is transmitted or checked in the data and parity bits) When this bit is cleared and parity is enabled, odd parity is selected (an odd number of logic 1s is transmitted or checked)" range="" rwaccess="RW">
         
         
         
      </bitfield>
		<bitfield id="PEN" width="1" begin="3" end="3" resetval="0" description="Parity Enable  0: no parity bit is transmitted or checked 1: a parity bit is generated in transmitted data and is checked in received data between the last data word bit and the first stop bit " range="" rwaccess="RW">
         
         
         
      </bitfield>
		<bitfield id="STB" width="1" begin="2" end="2" resetval="0" description="Number of Stop Bits Generated This bit specifies either one, one and a half, or two stop bits in each transmitted character. This bit is combined with the word length bits (LCR[1] and LCR[0]) determine the number of stop bits. The receiver clocks only the first stop bit regardless of the number of stop bits selected --------------------------------------------------------------------------------------------  Bit 2     Word Length                Number of Stop Bits Generated --------------------------------------------------------------------------------------------  0         Any word length                          1  1          5 bits                                        1.5  1          6 bits                                        2  1          7 bits                                        2  1          8 bits                                        2" range="" rwaccess="RW">
         
         
         
         
         
         
         
         
         
         
      </bitfield>
		<bitfield id="WLS" width="2" begin="1" end="0" resetval="0" description="Word Length Select Number of bits in each transmitted or received serial character" range="" rwaccess="RW">
			<bitenum id="BITS5" value="0" token="BITS5" description="5 bits"/>
			<bitenum id="BITS6" value="1" token="BITS6" description="6 bits"/>
			<bitenum id="BITS7" value="2" token="BITS7" description="7 bits"/>
			<bitenum id="BITS8" value="3" token="BITS8" description="8 bits"/>
		</bitfield>
	</register>
	<register id="MCR" acronym="MCR" offset="0x0010" width="32" description="Modem Control Register">
		<bitfield id="_RESV" width="26" begin="31" end="6" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="AFE" width="1" begin="5" end="5" resetval="0" description="Auto Flow Control Enable When this bit is set, the autoflow control is enabled The autoflow control can be configured by setting bit 1 and 5 of the MCR  ---------------------------------------------------------------------- Bit 5   Bit 1     Autoflow Control Configuration ----------------------------------------------------------------------  1        1           Auto-rts and auto-cts enabled  1        0           Auto-cts only enabled  0        X           Auto-rts and auto-cts disabled" range="" rwaccess="RW">
			<bitenum id="DISABLE" value="0" token="DISABLE" description="Disable AFC"/>
			<bitenum id="ENABLE" value="1" token="ENABLE" description="Enable AFC"/>
		</bitfield>
		<bitfield id="LOOP" width="1" begin="4" end="4" resetval="0" description="Loop Mode Bit for the diagnostic testing of loop back feature" range="" rwaccess="RW">
			<bitenum id="DISABLE" value="0" token="DISABLE" description="Disable loop back mode"/>
			<bitenum id="ENABLE" value="1" token="ENABLE" description="Enable loop back mode"/>
		</bitfield>
		<bitfield id="OUT2" width="1" begin="3" end="3" resetval="0" description="OUT2 control bit" range="" rwaccess="RW">
			<bitenum id="HIGH" value="0" token="HIGH" description="The associated output is forced high"/>
			<bitenum id="LOW" value="1" token="LOW" description="The associated output is forced low "/>
		</bitfield>
		<bitfield id="OUT1" width="1" begin="2" end="2" resetval="0" description="OUT1 control bit" range="" rwaccess="RW">
			<bitenum id="HIGH" value="0" token="HIGH" description="The associated output is forced high"/>
			<bitenum id="LOW" value="1" token="LOW" description="The associated output is forced low "/>
		</bitfield>
		<bitfield id="RTS" width="1" begin="1" end="1" resetval="0" description="RTS control bit" range="" rwaccess="RW">
			<bitenum id="HIGH" value="0" token="HIGH" description="The associated output is forced high"/>
			<bitenum id="DISABLE" value="0" token="DISABLE" description="Auto-rts is disabled"/>
			<bitenum id="ENABLE" value="1" token="ENABLE" description="Auto-rts is enabled"/>
			<bitenum id="LOW" value="1" token="LOW" description="The associated output is forced low "/>
		</bitfield>
		<bitfield id="DTR" width="1" begin="0" end="0" resetval="0" description="DTR control bit" range="" rwaccess="RW">
			<bitenum id="HIGH" value="0" token="HIGH" description="The associated output is forced high"/>
			<bitenum id="LOW" value="1" token="LOW" description="The associated output is forced low "/>
		</bitfield>
	</register>
	<register id="LSR" acronym="LSR" offset="0x0014" width="32" description="Line Status Register">
		<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="RXFIFOE" width="1" begin="7" end="7" resetval="0" description="Error in Receiver FIFO In the non-FIFO mode, this bit is set when there is a parity error, framing error, or break indicator in the receiver buffer register (RBR). It is cleared when the CPU reads the erroneous data In the FIFO mode, this bit is set when there is at least one parity error, framing error, or break indicator in the FIFO. It is cleared when the CPU reads the erroneous data and there are no more errors in the FIFO" range="" rwaccess="R">
         
         
         
      </bitfield>
		<bitfield id="TEMT" width="1" begin="6" end="6" resetval="1" description="Transmitter empty (TEMT) indicator bit This bit is set when both the THR and the TSR are empty. It is cleared when either the THR or the TSR contains a data character In the FIFO mode, this bit is set when both the transmitter FIFO and the shift register are empty" range="" rwaccess="R">
         
         
         
      </bitfield>
		<bitfield id="THRE" width="1" begin="5" end="5" resetval="1" description="Transmitter holding register empty (THRE) indicator bit This bit is set whenever the THR is empty, indicating that the UART is ready to accept a new character. If the THRE interrupt is enabled when this bit is set, an interrupt is generated. The THRE bit is set when the contents of the THR are transferred to the TSR. This bit is cleared at the same time when the CPU loads the THR In the FIFO mode, this bit is set when the transmitter FIFO is empty, and it is cleared when at least one byte is loaded into the FIFO" range="" rwaccess="R">
         
         
         
      </bitfield>
		<bitfield id="BI" width="1" begin="4" end="4" resetval="0" description="Break indicator bit This bit is set whenever the receive data input was held low for longer than a full-word transmission time. A full-word transmission time is defined as the total time to transmit the start, data, parity and stop bits. This bit is cleared after the CPU reads the erroneous data in the non- FIFO mode In the FIFO mode, this error is associated with the particular character in the FIFO to which it applies. This error is revealed to the CPU when its associated character is at the top of the FIFO. This bit is cleared after the CPU reads the erroneous data and the next data to be read from the FIFO has no parity error" range="" rwaccess="R">
         
         
         
      </bitfield>
		<bitfield id="FE" width="1" begin="3" end="3" resetval="0" description="Frame error bit This bit is set whenever the receive data character does not have a valid stop bit. This bit is cleared after the CPU reads the erroneous data in the non-FIFO mode In the FIFO mode, this error is associated with the particular character in the FIFO to which it applies. This error is revealed to the CPU when its associated character is at the top of the FIFO. This bit is cleared after the CPU reads the erroneous data and the next data to be read from the FIFO has no parity error The UART will try to resynchronize after a framing error. To accomplish this, it is assumed that the framing error is due to the next start bit, so it samples this start bit twice and then accepts the input data" range="" rwaccess="R">
         
         
         
         
      </bitfield>
		<bitfield id="PE" width="1" begin="2" end="2" resetval="0" description="Parity error bit This bit is set whenever the parity of the receive data character does not match the parity selected in the LCR[4]. This bit is cleared after the CPU reads the erroneous data in the non- FIFO mode In the FIFO mode, this error is associated with the particular character in the FIFO to which it applies. This error is revealed to the CPU when its associated character is at the top of the FIFO. This bit is cleared after the CPU reads the erroneous data and the next data to be read from the FIFO has no parity error" range="" rwaccess="R">
         
         
         
      </bitfield>
		<bitfield id="OE" width="1" begin="1" end="1" resetval="0" description="Overrun error bit This bit is set whenever a character is written to the RBR before the previous character was read by the CPU, in so doing the previous character is lost. This bit is cleared every time the CPU reads the contents of the LSR In the FIFO mode, if data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. An overrun error is indicated to the CPU as soon as it happens. The character in the shift register is overwritten, but it is not transferred to the FIFO" range="" rwaccess="R">
         
         
         
      </bitfield>
		<bitfield id="DR" width="1" begin="0" end="0" resetval="0" description="Data ready (DR) bit This bit is set whenever a complete incoming character has been received and transferred into the RBR or the FIFO This bit is cleared by reading all of the data in the RBR or the FIFO" range="" rwaccess="R">
         
         
         
      </bitfield>
	</register>
	<register id="MSR" acronym="MSR" offset="0x0018" width="32" description="Modem Status Register">
		<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="CD" width="1" begin="7" end="7" resetval="0" description="Complement of the Carrier Detect input When the UART is in the diagnostic test mode (loopback mode MCR[4] = 1), this bit is equal to the MCR bit 3 (OUT2)" range="" rwaccess="R">
         
         
      </bitfield>
		<bitfield id="RI" width="1" begin="6" end="6" resetval="0" description="Complement of the Ring Indicator input When the UART is in the diagnostic test mode (loopback mode MCR[4] = 1), this bit is equal to the MCR bit 2 (OUT1)" range="" rwaccess="R">
         
         
      </bitfield>
		<bitfield id="DSR" width="1" begin="5" end="5" resetval="0" description="Complement of the Data Set Ready input When the UART is in the diagnostic test mode (loopback mode MCR[4] = 1), this bit is equal to the MCR bit 0 (DTR)" range="" rwaccess="R">
         
         
      </bitfield>
		<bitfield id="CTS" width="1" begin="4" end="4" resetval="0" description="Complement of the Clear To Send input When the UART is in the diagnostic test mode (loopback mode MCR[4] = 1), this bit is equal to the MCR bit 1 (RTS)" range="" rwaccess="R">
         
         
      </bitfield>
		<bitfield id="DCD" width="1" begin="3" end="3" resetval="0" description="Change in DCD indicator bit DCD indicates that the DCD input has changed state since the last time it was read by the CPU. When DCD is set and the modem status interrupt is enabled, a modem status interrupt is generated" range="" rwaccess="R">
         
         
      </bitfield>
		<bitfield id="TERI" width="1" begin="2" end="2" resetval="0" description="Trailing edge of RI (TERI) indicator bit TERI indicates that the RI input has changed from a low to a high. When TERI is set and the modem status interrupt is enabled, a modem status interrupt is generated" range="" rwaccess="R">
         
         
      </bitfield>
		<bitfield id="DDSR" width="1" begin="1" end="1" resetval="0" description="Change in DSR indicator bit DDSR indicates that the DSR input has changed state since the last time it was read by the CPU. When DDSR is set and the modem status interrupt is enabled, a modem status interrupt is generated" range="" rwaccess="R">
         
         
      </bitfield>
		<bitfield id="DCTS" width="1" begin="0" end="0" resetval="0" description="Change in CTS indicator bit DCTS indicates that the CTS input has changed state since the last time it was read by the CPU. When DCTS is set (autoflow control is not enabled and the modem status interrupt is enabled), a modem status interrupt is generated. When autoflow control is enabled, no interrupt is generated" range="" rwaccess="R">
         
         
      </bitfield>
	</register>
	<register id="SCR" acronym="SCR" offset="0x001C" width="32" description="Scratch Register">
		<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="DATA" width="8" begin="7" end="0" resetval="0" description="Intended for the programmer's use as a scratch pad in the sense that it temporarily holds the programmer's data without affecting any other UART operation" range="" rwaccess="RW">
         
      </bitfield>
	</register>
	<register id="DLL" acronym="DLL" offset="0x0020" width="8" description="Divisor Latch (LSB)">
		<bitfield id="DLL" width="8" begin="7" end="0" resetval="0" description="LSB of 16-bit divisor for generation of the baud clock in the baud rate generator" range="" rwaccess="RW">
         
      </bitfield>
	</register>
	<register id="DLH" acronym="DLH" offset="0x0024" width="8" description="Divisor Latch (MSB)">
		<bitfield id="DLH" width="8" begin="7" end="0" resetval="0" description="MSB of 16-bit divisor for generation of the baud clock in the baud rate generator" range="" rwaccess="RW">
         
      </bitfield>
	</register>
	<register id="PID1" acronym="PID1" offset="0x0028" width="32" description="Peripheral ID Register 1 (Class/Revision)">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="CLS" width="8" begin="15" end="8" resetval="0x01" description="Class of Peripheral" range="" rwaccess="R">
         
      </bitfield>
		<bitfield id="REV" width="8" begin="7" end="0" resetval="0x01" description="Revision level of the UART" range="" rwaccess="R">
         
      </bitfield>
	</register>
	<register id="PID2" acronym="PID2" offset="0x002C" width="32" description="Peripheral ID Register 2 (Type)">
		<bitfield id="_RESV" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="TYP" width="8" begin="7" end="0" resetval="0x04" description="Type of peripheral" range="" rwaccess="R">
         
      </bitfield>
	</register>
	<register id="PWREMU_MGMT" acronym="PWREMU_MGMT" offset="0x0030" width="32" description="Power Management and Emulation Register">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="URST" width="1" begin="15" end="15" resetval="0" description="UART Reset bit Resets and enables the receiver and transmitter" range="" rwaccess="RW">
			<bitenum id="RESET" value="0" token="RESET" description="The receiver and transmitter are disabled and in reset state"/>
			<bitenum id="ENABLE" value="1" token="ENABLE" description="The receiver and transmitter are enabled"/>
		</bitfield>
		<bitfield id="_RESV" width="13" begin="14" end="2" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
		<bitfield id="SOFT" width="1" begin="1" end="1" resetval="1" description="This bit is always 1. Writing this bit doesn't affect this value" range="" rwaccess="RW">
         
      </bitfield>
		<bitfield id="FREE" width="1" begin="0" end="0" resetval="0" description="This bit determines emulation mode functionality of the UART. When FREE is 0, the UART stop immediately if a transmission isn't in progress. If a transmission is in progress, the UART stops after completion of the one word transmission. In suspended mode, the UART can handle vbus request, but doesn't generate any interrupt and event" range="" rwaccess="RW">
			<bitenum id="STOP" value="0" token="STOP" description="UART stops immediately"/>
			<bitenum id="RUN" value="1" token="RUN" description="UART runs free"/>
		</bitfield>
	</register>
</module>
