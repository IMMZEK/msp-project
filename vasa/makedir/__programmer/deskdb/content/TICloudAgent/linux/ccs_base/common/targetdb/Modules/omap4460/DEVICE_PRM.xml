<module name="DEVICE_PRM" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="PRM_RSTCTRL" acronym="PRM_RSTCTRL" offset="0x0" width="32" description="Global software cold and warm reset control. This register is auto-cleared. Only write 1 is possible. A read returns 0 only.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="RST_GLOBAL_COLD_software" width="1" begin="1" end="1" resetval="0" description="Global COLD software reset control. This bit is reset only upon a global cold source of reset." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RST_GLOBAL_COLD_software_0" description="Global COLD software reset is cleared."/>
      <bitenum value="1" id="1" token="RST_GLOBAL_COLD_software_1" description="Triggers a global COLD software reset. The software must ensure the SDRAM is properly put in sef-refresh mode before applying this reset."/>
    </bitfield>
    <bitfield id="RST_GLOBAL_WARM_software" width="1" begin="0" end="0" resetval="0" description="Global WARM software reset control. This bit is reset upon any global source of reset (warm and cold)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RST_GLOBAL_WARM_software_0" description="Global warm software reset is cleared."/>
      <bitenum value="1" id="1" token="RST_GLOBAL_WARM_software_1" description="Triggers a global warm software reset."/>
    </bitfield>
  </register>
  <register id="PRM_RSTST" acronym="PRM_RSTST" offset="0x4" width="32" description="This register logs the global reset sources. Each bit is set upon release of the domain reset signal. Must be cleared by software. [warm reset insensitive]">
    <bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="C2C_RST" width="1" begin="10" end="10" resetval="0" description="C2C warm reset event. This is a source of global warm reset." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="C2C_RST_0" description="No C2C warm reset."/>
      <bitenum value="1" id="1" token="C2C_RST_1" description="C2C warm reset has occurred."/>
    </bitfield>
    <bitfield id="ICEPICK_RST" width="1" begin="9" end="9" resetval="0" description="IcePick reset event. This is a source of global warm reset initiated by the emulation." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="ICEPICK_RST_0" description="No ICEPICK reset."/>
      <bitenum value="1" id="1" token="ICEPICK_RST_1" description="IcePick reset has occurred."/>
    </bitfield>
    <bitfield id="VDD_CORE_VOLT_MGR_RST" width="1" begin="8" end="8" resetval="0" description="VDD_CORE voltage manager reset event This is a source of global WARM reset." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VDD_CORE_VOLT_MGR_RST_0" description="No VDD_CORE voltage manager reset."/>
      <bitenum value="1" id="1" token="VDD_CORE_VOLT_MGR_RST_1" description="VDD_CORE voltage manager reset has occurred."/>
    </bitfield>
    <bitfield id="VDD_IVA_VOLT_MGR_RST" width="1" begin="7" end="7" resetval="0" description="VDD_IVA voltage manager reset event This is a source of global WARM reset." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VDD_IVA_VOLT_MGR_RST_0" description="No VDD_IVA voltage manager reset."/>
      <bitenum value="1" id="1" token="VDD_IVA_VOLT_MGR_RST_1" description="VDD_IVA voltage manager reset has occurred."/>
    </bitfield>
    <bitfield id="VDD_MPU_VOLT_MGR_RST" width="1" begin="6" end="6" resetval="0" description="VDD_MPU voltage manager reset event This is a source of global WARM reset." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VDD_MPU_VOLT_MGR_RST_0" description="No VDD_MPU voltage manager reset."/>
      <bitenum value="1" id="1" token="VDD_MPU_VOLT_MGR_RST_1" description="VDD_MPU voltage manager reset has occurred."/>
    </bitfield>
    <bitfield id="EXTERNAL_WARM_RST" width="1" begin="5" end="5" resetval="0" description="External warm reset event" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="EXTERNAL_WARM_RST_0" description="No global warm reset."/>
      <bitenum value="1" id="1" token="EXTERNAL_WARM_RST_1" description="Global external warm reset has occurred."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="4" end="4" resetval="0" description="" range="" rwaccess="RW W1toClr"/>
    <bitfield id="MPU_WDT_RST" width="1" begin="3" end="3" resetval="0" description="MPU Watchdog timer reset event. This is a source of global WARM reset." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="MPU_WDT_RST_0" description="No MPU watchdog reset."/>
      <bitenum value="1" id="1" token="MPU_WDT_RST_1" description="MPU wachtdog reset has occurred."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="2" end="2" resetval="0" description="" range="" rwaccess="RW W1toClr"/>
    <bitfield id="GLOBAL_WARM_SW_RST" width="1" begin="1" end="1" resetval="0" description="Global warm software reset event" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="GLOBAL_WARM_SW_RST_0" description="No global warm software reset"/>
      <bitenum value="1" id="1" token="GLOBAL_WARM_SW_RST_1" description="Global warm software reset has occurred."/>
    </bitfield>
    <bitfield id="GLOBAL_COLD_RST" width="1" begin="0" end="0" resetval="1" description="Power-on (cold) reset event" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="GLOBAL_COLD_RST_0" description="No power-on reset."/>
      <bitenum value="1" id="1" token="GLOBAL_COLD_RST_1" description="Power-on reset has occurred."/>
    </bitfield>
  </register>
  <register id="PRM_RSTTIME" acronym="PRM_RSTTIME" offset="0x8" width="32" description="Reset duration control. [warm reset insensitive]">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="RSTTIME2" width="5" begin="14" end="10" resetval="0x10" description="(Power domain) reset duration 2 (number of RM.SYSCLK clock cycles)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RSTTIME2_0" description="Reserved"/>
    </bitfield>
    <bitfield id="RSTTIME1" width="10" begin="9" end="0" resetval="0x06" description="(Global) reset duration 1 (number of Func_32k.clk clock cycles)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RSTTIME1_0" description="Reserved"/>
    </bitfield>
  </register>
  <register id="PRM_CLKREQCTRL" acronym="PRM_CLKREQCTRL" offset="0xC" width="32" description="This register allows controlling the CLKREQ signal towards SCRM.">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="CLKREQ_COND" width="3" begin="2" end="0" resetval="0x0" description="Control upon which condition CLKREQ signal is de-asserted." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLKREQ_COND_0" description="CLKREQ is never de-asserted"/>
      <bitenum value="1" id="1" token="CLKREQ_COND_1" description="CLKREQ is de-asserted when system clock is not required by any function in the device and if all voltage domains are in OFF state."/>
      <bitenum value="2" id="2" token="CLKREQ_COND_2" description="CLKREQ is de-asserted when system clock is not required by any function in the device and if all voltage domains are in RET or OFF state."/>
      <bitenum value="3" id="3" token="CLKREQ_COND_3" description="CLKREQ is de-asserted when system clock is not required by any function in the device and if all voltage domains are in SLEEP or RET or OFF state."/>
      <bitenum value="4" id="4" token="CLKREQ_COND_4" description="CLKREQ is de-asserted when system clock is not required by any function in the device. This is designed for low-power use-cases using the DPLL cascading scheme (ex: MP3)"/>
      <bitenum value="5" id="5" token="CLKREQ_COND_5_r" description="Reserved"/>
      <bitenum value="6" id="6" token="CLKREQ_COND_6_r" description="Reserved"/>
      <bitenum value="7" id="7" token="CLKREQ_COND_7_r" description="Reserved"/>
    </bitfield>
  </register>
  <register id="PRM_VOLTCTRL" acronym="PRM_VOLTCTRL" offset="0x10" width="32" description="This register provides voltage domain management controls.">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="VDD_IVA_I2C_DISABLE" width="1" begin="14" end="14" resetval="0" description="This bit allows disabling I2C interface with powerIC for IVA voltage (for debug purpose only). [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VDD_IVA_I2C_DISABLE_0" description="Normal mode: I2C is enabled."/>
      <bitenum value="1" id="1" token="VDD_IVA_I2C_DISABLE_1" description="Debug mode: I2C is disabled."/>
    </bitfield>
    <bitfield id="VDD_MPU_I2C_DISABLE" width="1" begin="13" end="13" resetval="0" description="This bit allows disabling I2C interface with powerIC for MPU voltage (for debug purpose only). [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VDD_MPU_I2C_DISABLE_0" description="Normal mode: I2C is enabled."/>
      <bitenum value="1" id="1" token="VDD_MPU_I2C_DISABLE_1" description="Debug mode: I2C is disabled."/>
    </bitfield>
    <bitfield id="VDD_CORE_I2C_DISABLE" width="1" begin="12" end="12" resetval="0" description="This bit allows disabling I2C interface with powerIC for CORE voltage (for debug purpose only). [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VDD_CORE_I2C_DISABLE_0" description="Normal mode: I2C is enabled."/>
      <bitenum value="1" id="1" token="VDD_CORE_I2C_DISABLE_1" description="Debug mode: I2C is disabled."/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="11" end="10" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="VDD_IVA_PRESENCE" width="1" begin="9" end="9" resetval="1" description="This bit control the presence of IVA voltage in device. [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VDD_IVA_PRESENCE_0" description="IVA voltage is not present as an individual voltage: IVA voltage is merged with MPU voltage if VDD_MPU_presence=1. IVA voltage is merged with CORE voltage if VDD_MPU_presence=0."/>
      <bitenum value="1" id="1" token="VDD_IVA_PRESENCE_1" description="IVA voltage is present on the device."/>
    </bitfield>
    <bitfield id="VDD_MPU_PRESENCE" width="1" begin="8" end="8" resetval="1" description="This bit control the presence of MPU voltage in device. [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VDD_MPU_PRESENCE_0" description="MPU voltage is not present as an individual voltage: MPU voltage is merged with IVA voltage if VDD_IVA_presence=1. MPU voltage is merged with CORE voltage if VDD_IVA_presence=0."/>
      <bitenum value="1" id="1" token="VDD_MPU_PRESENCE_1" description="MPU voltage is present on the device."/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="AUTO_CTRL_VDD_IVA_L" width="2" begin="5" end="4" resetval="0x0" description="This bit field specifies the state to which the hardware can automatically transition the VDD_IVA_L voltage domain." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AUTO_CTRL_VDD_IVA_L_0" description="Voltage domain transitions are disabled."/>
      <bitenum value="1" id="1" token="AUTO_CTRL_VDD_IVA_L_1" description="Voltage domain transitions to SLEEP are enabled."/>
      <bitenum value="2" id="2" token="AUTO_CTRL_VDD_IVA_L_2" description="Voltage domain transitions to RET are enabled."/>
      <bitenum value="3" id="3" token="AUTO_CTRL_VDD_IVA_L_3_r" description="reserved"/>
    </bitfield>
    <bitfield id="AUTO_CTRL_VDD_MPU_L" width="2" begin="3" end="2" resetval="0x0" description="This bit field specifies the state to which the hardware can automatically transition the VDD_MPU_L voltage domain." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AUTO_CTRL_VDD_MPU_L_0" description="Voltage domain transitions are disabled."/>
      <bitenum value="1" id="1" token="AUTO_CTRL_VDD_MPU_L_1" description="Voltage domain transitions to SLEEP are enabled."/>
      <bitenum value="2" id="2" token="AUTO_CTRL_VDD_MPU_L_2" description="Voltage domain transitions to RET are enabled."/>
      <bitenum value="3" id="3" token="AUTO_CTRL_VDD_MPU_L_3_r" description="reserved"/>
    </bitfield>
    <bitfield id="AUTO_CTRL_VDD_CORE_L" width="2" begin="1" end="0" resetval="0x0" description="This bit field specifies the state to which the hardware can automatically transition the VDD_CORE_L voltage domain." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AUTO_CTRL_VDD_CORE_L_0" description="Voltage domain transitions are disabled."/>
      <bitenum value="1" id="1" token="AUTO_CTRL_VDD_CORE_L_1" description="Voltage domain transitions to SLEEP are enabled."/>
      <bitenum value="2" id="2" token="AUTO_CTRL_VDD_CORE_L_2" description="Voltage domain transitions to RET are enabled."/>
      <bitenum value="3" id="3" token="AUTO_CTRL_VDD_CORE_L_3_r" description="reserved"/>
    </bitfield>
  </register>
  <register id="PRM_PWRREQCTRL" acronym="PRM_PWRREQCTRL" offset="0x14" width="32" description="This register allows controlling the signal towards power IC.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="PWRREQ_COND" width="2" begin="1" end="0" resetval="0x0" description="Control upon which condition from MPU, IVA and CORE voltage domainsPWRREQ is de-asserted." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PWRREQ_COND_0" description="is never de-asserted"/>
      <bitenum value="1" id="1" token="PWRREQ_COND_1" description="is de-asserted if all voltage domain are in SLEEP, RET or OFF state. Conversely, is asserted upon any voltage domain entering or staying in ON state."/>
      <bitenum value="2" id="2" token="PWRREQ_COND_2" description="is de-asserted if all voltage domain are in RET or OFF state. Conversely, is asserted upon any voltage domain entering or staying in ON or SLEEP state."/>
      <bitenum value="3" id="3" token="PWRREQ_COND_3" description="is de-asserted if all voltage domain are in OFF state. Conversely, is asserted upon any voltage domain entering or staying in ON or SLEEP or RET state."/>
    </bitfield>
  </register>
  <register id="PRM_PSCON_COUNT" acronym="PRM_PSCON_COUNT" offset="0x18" width="32" description="This register allows controlling 2 parameters for power state controller. [warm reset insensitive]">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="PONOUT_2_PGOODIN_TIME" width="8" begin="15" end="8" resetval="0x9A" description="The value 'NbCycles' set in this field determines the duration of the PONOUT to PGOODIN transition for power domain without DPS. The duration is computed as 8 x NbCycles of system clock cycles." range="" rwaccess="RW"/>
    <bitfield id="PCHARGE_TIME" width="8" begin="7" end="0" resetval="0x27" description="Number of system clock cycles for the SRAM precharge duration." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_IO_COUNT" acronym="PRM_IO_COUNT" offset="0x1C" width="32" description="This register allows controlling LPDDR2 I/O isolation removal setup. [warm reset insensitive]">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="ISO_2_ON_TIME" width="8" begin="7" end="0" resetval="0x3A" description="Determines the setup time of the LPDDR2 IOs going out of isolation. Counting on the system clock. Target is 1.5us." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_IO_PMCTRL" acronym="PRM_IO_PMCTRL" offset="0x20" width="32" description="This register allows overriding ISOCLK signal towards I/O pad ring.">
    <bitfield id="RESERVED" width="15" begin="31" end="17" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="GLOBAL_WUEN" width="1" begin="16" end="16" resetval="0" description="Global I/O wakeup enable. This is a gating condition to all individual I/O WUEN coming from control module. Gating is done in the Spinner logic." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="GLOBAL_WUEN_0" description="All individual I/O WUEN are gated in the Spinner logic (overriden to 0)."/>
      <bitenum value="1" id="1" token="GLOBAL_WUEN_1" description="All individual I/O WUEN from control module are going to IOs."/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="WUCLK_STATUS" width="1" begin="9" end="9" resetval="0" description="Gives value of WUCLKOUT signal coming back from I/O pad ring." range="" rwaccess="R"/>
    <bitfield id="WUCLK_CTRL" width="1" begin="8" end="8" resetval="0" description="Direct control on WUCLKIN signal to I/O pad ring." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="WUCLK_CTRL_0" description="WUCLKIN signal is driven to 0. I/O wakeup daisy chain is functional as well as I/O whose wakeup feature is enabled."/>
      <bitenum value="1" id="1" token="WUCLK_CTRL_1" description="WUCLKIN signal is driven to 1. I/O wakeup daisy chain is reset and is latching current pad states and WUEN inputs."/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IOON_STATUS" width="1" begin="5" end="5" resetval="1" description="Gives the functional status of the I/O ring." range="" rwaccess="R">
      <bitenum value="0" id="0" token="IOON_STATUS_0_r" description="Part or all of the IOs are not in the ON state, that is are in isolation state"/>
      <bitenum value="1" id="1" token="IOON_STATUS_1_r" description="All IOs are in the ON state"/>
    </bitfield>
    <bitfield id="ISOOVR_EXTEND" width="1" begin="4" end="4" resetval="0" description="Control non-EMIF I/O isolation extension upon a device wakeup from OFF mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ISOOVR_EXTEND_0" description="Non-EMIF I/O isolation is not extended. 'EMIF_ON' I/O transition happens as soon as automatic restore is completed"/>
      <bitenum value="1" id="1" token="ISOOVR_EXTEND_1" description="Non-EMIF I/O isolation is extended. 'EMIF_ON' I/O transition is stalled"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="3" end="2" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="ISOCLK_STATUS" width="1" begin="1" end="1" resetval="0" description="Gives value of ISOCLKOUT signal coming back from I/O pad ring." range="" rwaccess="R"/>
    <bitfield id="ISOCLK_OVERRIDE" width="1" begin="0" end="0" resetval="0" description="Override control on ISOCLKIN signal to I/O pad ring. Override should be used at boot time only when it is needed to change the mode of an I/O from 1.8-V default mode to 1.2-V mode. When not overriden, this signal is controlled by hardware only." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ISOCLK_OVERRIDE_0" description="ISOCLKIN signal is not overriden."/>
      <bitenum value="1" id="1" token="ISOCLK_OVERRIDE_1" description="ISOCLKIN signal is overriden to active value (1)."/>
    </bitfield>
  </register>
  <register id="PRM_VOLTSETUP_WARMRESET" acronym="PRM_VOLTSETUP_WARMRESET" offset="0x24" width="32" description="This register provides bit fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. These values are used for VDD_CORE_L domain transitions with OFF state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="STABLE_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for stabilization duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="STABLE_PRESCAL_0" description="Ramp-up counter is incremented every 32 system clock cycles"/>
      <bitenum value="1" id="1" token="STABLE_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="STABLE_PRESCAL_2" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
      <bitenum value="3" id="3" token="STABLE_PRESCAL_3" description="Ramp-up counter is incremented every 16384 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="STABLE_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the stabilization duration of all VDD_xxx_L regulators upon a global warm reset assertion. The duration is computed according to Stable_Prescal." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_CORE_OFF" acronym="PRM_VOLTSETUP_CORE_OFF" offset="0x28" width="32" description="This register provides bit fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. These values are used for VDD_CORE_L domain transitions with OFF state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_CORE_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_CORE_L regulators. The duration is computed according to Ramp_Up_Prescal. At cold reset, PRCM assumes that VDD_CORE_L will be at a valid ON voltage before SYS_NRESPWRON is de-asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_MPU_OFF" acronym="PRM_VOLTSETUP_MPU_OFF" offset="0x2C" width="32" description="This register provides bit fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. These values are used for VDD_MPU_L domain transitions to or from OFF state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_MPU_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_MPU_L regulators. The duration is computed according to Ramp_Up_Prescal. At cold reset, PRCM assumes that VDD_MPU_L will be at a valid ON voltage before SYS_NRESPWRON is de-asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_IVA_OFF" acronym="PRM_VOLTSETUP_IVA_OFF" offset="0x30" width="32" description="This register provides bit fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. These values are used for VDD_IVA_L domain transitions to or from OFF state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_IVA_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_IVA_L regulators. The duration is computed according to Ramp_Up_Prescal. At cold reset, PRCM assumes that VDD_IVA_L will be at a valid ON voltage before SYS_NRESPWRON is de-asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_CORE_RET_SLEEP" acronym="PRM_VOLTSETUP_CORE_RET_SLEEP" offset="0x34" width="32" description="This register provides bit fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. These values are used for VDD_CORE_L domain transitions between ON and RET or SLEEP state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_CORE_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_CORE_L regulators. The duration is computed according to Ramp_Up_Prescal." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_MPU_RET_SLEEP" acronym="PRM_VOLTSETUP_MPU_RET_SLEEP" offset="0x38" width="32" description="This register provides bit fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. These values are used for VDD_MPU_L domain transitions between ON and RET or SLEEP state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_MPU_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_MPU_L regulators. The duration is computed according to Ramp_Up_Prescal." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_IVA_RET_SLEEP" acronym="PRM_VOLTSETUP_IVA_RET_SLEEP" offset="0x3C" width="32" description="This register provides bit fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. These values are used for VDD_IVA_L domain transitions between ON and RET or SLEEP state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_IVA_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="1" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="2" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="3" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_IVA_L regulators. The duration is computed according to Ramp_Up_Prescal." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_CORE_CONFIG" acronym="PRM_VP_CORE_CONFIG" offset="0x40" width="32" description="This register allows the configuration of the Voltage Processor dedicated to CORE Voltage Domain (VDD_CORE_L).">
    <bitfield id="ERROROFFSET" width="8" begin="31" end="24" resetval="0x00" description="Offset value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="ERRORGAIN" width="8" begin="23" end="16" resetval="0x00" description="Gain value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="INITVOLTAGE" width="8" begin="15" end="8" resetval="0x00" description="Set the initial voltage level of the SMPS. It must be reconfigured before enable the SmartReflex around a new OPP." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="TIMEOUTEN" width="1" begin="3" end="3" resetval="0" description="Enable or disable the timeout capability of the Voltage Controller State Machine." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TIMEOUTEN_0" description="Timeout is disabled. Loop will wait indefinitely."/>
      <bitenum value="1" id="1" token="TIMEOUTEN_1" description="Timeout will occur when TIMEOUT cycles have elapsed."/>
    </bitfield>
    <bitfield id="INITVDD" width="1" begin="2" end="2" resetval="0" description="Initializes the voltage in the Voltage Processor." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="INITVDD_0" description="Reset the initialization bit."/>
      <bitenum value="1" id="1" token="INITVDD_1" description="The positive edge of InitVdd triggers a write of the value in the InitVoltage into the Voltage Processor."/>
    </bitfield>
    <bitfield id="FORCEUPDATE" width="1" begin="1" end="1" resetval="0" description="Forces an update of the SMPS." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FORCEUPDATE_0" description="Reset the force bit."/>
      <bitenum value="1" id="1" token="FORCEUPDATE_1" description="The positive edge of ForceUpdate triggers an update of the voltage to the SMPS."/>
    </bitfield>
    <bitfield id="VPENABLE" width="1" begin="0" end="0" resetval="0" description="Enables or disables the Voltage Processor updates on SR_SInterruptz." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VPENABLE_0" description="Disables the Voltage Processor."/>
      <bitenum value="1" id="1" token="VPENABLE_1" description="Enables the Voltage Processor."/>
    </bitfield>
  </register>
  <register id="PRM_VP_CORE_STATUS" acronym="PRM_VP_CORE_STATUS" offset="0x44" width="32" description="This register reflects the idle state of the Voltage Processor dedicated to the CORE Voltage Domain (VDD_CORE_L. This register is read only and automatically updated.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="VPINIDLE" width="1" begin="0" end="0" resetval="1" description="CORE Voltage Processor idle status." range="" rwaccess="R">
      <bitenum value="0" id="0" token="VPINIDLE_0_r" description="The Voltage Processor for CORE is processing. Warm reset sensitive"/>
      <bitenum value="1" id="1" token="VPINIDLE_1_r" description="The Voltage Processor for CORE is in idle state."/>
    </bitfield>
  </register>
  <register id="PRM_VP_CORE_VLIMITTO" acronym="PRM_VP_CORE_VLIMITTO" offset="0x48" width="32" description="This register allows the configuration of the voltage limits and timeout values of the Voltage Processor dedicated to the CORE Voltage Domain (VDD_CORE_L).">
    <bitfield id="VDDMAX" width="8" begin="31" end="24" resetval="0x00" description="Defines the maximum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="VDDMIN" width="8" begin="23" end="16" resetval="0x00" description="Defines the minimum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="TIMEOUT" width="16" begin="15" end="0" resetval="0x0000" description="Defines Voltage Controller maximum wait time for responses, measured in sysclk cycles." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_CORE_VOLTAGE" acronym="PRM_VP_CORE_VOLTAGE" offset="0x4C" width="32" description="This register indicates the current value of the SMPS voltage for the Voltage Processor dedicated to the CORE Voltage Domain (VDD_CORE_L).">
    <bitfield id="FORCEUPDATEWAIT" width="24" begin="31" end="8" resetval="0x000111" description="The time voltage processor needs to wait for SMPS to be settled after receiving SMPS acknowledge. This wait only be used during force_update operation." range="" rwaccess="RW"/>
    <bitfield id="VPVOLTAGE" width="8" begin="7" end="0" resetval="0x00" description="Indicates the current SMPS programmed voltage." range="" rwaccess="R"/>
  </register>
  <register id="PRM_VP_CORE_VSTEPMAX" acronym="PRM_VP_CORE_VSTEPMAX" offset="0x50" width="32" description="This register allows the programming of the maximum voltage step and waiting time of the Voltage Processor dedicated to CORE Voltage Domain (VDD_CORE_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPsoftwareAITTIMEMAX" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for positive voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMAX" width="8" begin="7" end="0" resetval="0x00" description="Maximum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_CORE_VSTEPMIN" acronym="PRM_VP_CORE_VSTEPMIN" offset="0x54" width="32" description="This register allows the programming of the minimum voltage step and waiting time of the Voltage Processor dedicated to the CORE Voltage Domain (VDD_CORE_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPsoftwareAITTIMEMIN" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for negative voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMIN" width="8" begin="7" end="0" resetval="0x00" description="Minimum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_MPU_CONFIG" acronym="PRM_VP_MPU_CONFIG" offset="0x58" width="32" description="This register allows the configuration of the Voltage Processor dedicated to MPU Voltage Domain (VDD_MPU_L).">
    <bitfield id="ERROROFFSET" width="8" begin="31" end="24" resetval="0x00" description="Offset value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="ERRORGAIN" width="8" begin="23" end="16" resetval="0x00" description="Gain value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="INITVOLTAGE" width="8" begin="15" end="8" resetval="0x00" description="Set the initial voltage level of the SMPS. It must be reconfigured before enable the SmartReflex around a new OPP." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="TIMEOUTEN" width="1" begin="3" end="3" resetval="0" description="Enable or disable the timeout capability of the Voltage Controller State Machine." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TIMEOUTEN_0" description="Timeout is disabled. Loop will wait indefinitely."/>
      <bitenum value="1" id="1" token="TIMEOUTEN_1" description="Timeout will occur when TIMEOUT cycles have elapsed."/>
    </bitfield>
    <bitfield id="INITVDD" width="1" begin="2" end="2" resetval="0" description="Initializes the voltage in the Voltage Processor." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="INITVDD_0" description="Reset the initialization bit."/>
      <bitenum value="1" id="1" token="INITVDD_1" description="The positive edge of InitVdd triggers a write of the value in the InitVoltage into the Voltage Processor."/>
    </bitfield>
    <bitfield id="FORCEUPDATE" width="1" begin="1" end="1" resetval="0" description="Forces an update of the SMPS." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FORCEUPDATE_0" description="Reset the force bit."/>
      <bitenum value="1" id="1" token="FORCEUPDATE_1" description="The positive edge of ForceUpdate triggers an update of the voltage to the SMPS."/>
    </bitfield>
    <bitfield id="VPENABLE" width="1" begin="0" end="0" resetval="0" description="Enables or disables the Voltage Processor updates on SR_SInterruptz." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VPENABLE_0" description="Disables the Voltage Processor."/>
      <bitenum value="1" id="1" token="VPENABLE_1" description="Enables the Voltage Processor."/>
    </bitfield>
  </register>
  <register id="PRM_VP_MPU_STATUS" acronym="PRM_VP_MPU_STATUS" offset="0x5C" width="32" description="This register reflects the idle state of the Voltage Processor dedicated to the MPU Voltage Domain (VDD_MPU_L. This register is read only and automatically updated.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="VPINIDLE" width="1" begin="0" end="0" resetval="1" description="Voltage Processor 1 idle status." range="" rwaccess="R">
      <bitenum value="0" id="0" token="VPINIDLE_0_r" description="The Voltage Processor 1 is processing."/>
      <bitenum value="1" id="1" token="VPINIDLE_1_r" description="The Voltage Processor 1 is in idle state."/>
    </bitfield>
  </register>
  <register id="PRM_VP_MPU_VLIMITTO" acronym="PRM_VP_MPU_VLIMITTO" offset="0x60" width="32" description="This register allows the configuration of the voltage limits and timeout values of the Voltage Processor dedicated to the MPU Voltage Domain (VDD_MPU_L).">
    <bitfield id="VDDMAX" width="8" begin="31" end="24" resetval="0x00" description="Defines the maximum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="VDDMIN" width="8" begin="23" end="16" resetval="0x00" description="Defines the minimum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="TIMEOUT" width="16" begin="15" end="0" resetval="0x0000" description="Defines Voltage Controller maximum wait time for responses, measured in sysclk cycles." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_MPU_VOLTAGE" acronym="PRM_VP_MPU_VOLTAGE" offset="0x64" width="32" description="This register indicates the current value of the SMPS voltage for the Voltage Processor dedicated to the MPU Voltage Domain (VDD_MPU_L).">
    <bitfield id="FORCEUPDATEWAIT" width="24" begin="31" end="8" resetval="0x000111" description="The time voltage processor needs to wait for SMPS to be settled after receiving SMPS acknowledge. This wait only be used during force_update operation." range="" rwaccess="RW"/>
    <bitfield id="VPVOLTAGE" width="8" begin="7" end="0" resetval="0x00" description="Indicates the current SMPS programmed voltage." range="" rwaccess="R"/>
  </register>
  <register id="PRM_VP_MPU_VSTEPMAX" acronym="PRM_VP_MPU_VSTEPMAX" offset="0x68" width="32" description="This register allows the programming of the maximum voltage step and waiting time of the Voltage Processor dedicated to MPU Voltage Domain (VDD_MPU_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPsoftwareAITTIMEMAX" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for positive voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMAX" width="8" begin="7" end="0" resetval="0x00" description="Maximum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_MPU_VSTEPMIN" acronym="PRM_VP_MPU_VSTEPMIN" offset="0x6C" width="32" description="This register allows the programming of the minimum voltage step and waiting time of the Voltage Processor dedicated to the MPU Voltage Domain (VDD_MPU_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPsoftwareAITTIMEMIN" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for negative voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMIN" width="8" begin="7" end="0" resetval="0x00" description="Minimum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_IVA_CONFIG" acronym="PRM_VP_IVA_CONFIG" offset="0x70" width="32" description="This register allows the configuration of the Voltage Processor dedicated to IVAVoltage Domain (VDD_IVA_L).">
    <bitfield id="ERROROFFSET" width="8" begin="31" end="24" resetval="0x00" description="Offset value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="ERRORGAIN" width="8" begin="23" end="16" resetval="0x00" description="Gain value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="INITVOLTAGE" width="8" begin="15" end="8" resetval="0x00" description="Set the initial voltage level of the SMPS. It must be reconfigured before enable the SmartReflex around a new OPP." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="TIMEOUTEN" width="1" begin="3" end="3" resetval="0" description="Enable or disable the timeout capability of the Voltage Controller State Machine." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TIMEOUTEN_0" description="Timeout is disabled. Loop will wait indefinitely."/>
      <bitenum value="1" id="1" token="TIMEOUTEN_1" description="Timeout will occur when TIMEOUT cycles have elapsed."/>
    </bitfield>
    <bitfield id="INITVDD" width="1" begin="2" end="2" resetval="0" description="Initializes the voltage in the Voltage Processor." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="INITVDD_0" description="Reset the initialization bit."/>
      <bitenum value="1" id="1" token="INITVDD_1" description="The positive edge of InitVdd triggers a write of the value in the InitVoltage into the Voltage Processor."/>
    </bitfield>
    <bitfield id="FORCEUPDATE" width="1" begin="1" end="1" resetval="0" description="Forces an update of the SMPS." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FORCEUPDATE_0" description="Reset the force bit."/>
      <bitenum value="1" id="1" token="FORCEUPDATE_1" description="The positive edge of ForceUpdate triggers an update of the voltage to the SMPS."/>
    </bitfield>
    <bitfield id="VPENABLE" width="1" begin="0" end="0" resetval="0" description="Enables or disables the Voltage Processor updates on SR_SInterruptz." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VPENABLE_0" description="Disables the Voltage Processor."/>
      <bitenum value="1" id="1" token="VPENABLE_1" description="Enables the Voltage Processor."/>
    </bitfield>
  </register>
  <register id="PRM_VP_IVA_STATUS" acronym="PRM_VP_IVA_STATUS" offset="0x74" width="32" description="This register reflects the idle state of the Voltage Processor dedicated to the MPU Voltage Domain (VDD_IVA_L. This register is read only and automatically updated.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="VPINIDLE" width="1" begin="0" end="0" resetval="1" description="Voltage Processor 1 idle status." range="" rwaccess="R">
      <bitenum value="0" id="0" token="VPINIDLE_0_r" description="The Voltage Processor 1 is processing."/>
      <bitenum value="1" id="1" token="VPINIDLE_1_r" description="The Voltage Processor 1 is in idle state."/>
    </bitfield>
  </register>
  <register id="PRM_VP_IVA_VLIMITTO" acronym="PRM_VP_IVA_VLIMITTO" offset="0x78" width="32" description="This register allows the configuration of the voltage limits and timeout values of the Voltage Processor dedicated to the IVA Voltage Domain (VDD_IVA_L).">
    <bitfield id="VDDMAX" width="8" begin="31" end="24" resetval="0x00" description="Defines the maximum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="VDDMIN" width="8" begin="23" end="16" resetval="0x00" description="Defines the minimum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="TIMEOUT" width="16" begin="15" end="0" resetval="0x0000" description="Defines Voltage Controller maximum wait time for responses, measured in sysclk cycles." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_IVA_VOLTAGE" acronym="PRM_VP_IVA_VOLTAGE" offset="0x7C" width="32" description="This register indicates the current value of the SMPS voltage for the Voltage Processor dedicated to the IVA Voltage Domain (VDD_IVA_L).">
    <bitfield id="FORCEUPDATEWAIT" width="24" begin="31" end="8" resetval="0x000111" description="The time voltage processor needs to wait for SMPS to be settled after receiving SMPS acknowledge. This wait only be used during force_update operation." range="" rwaccess="RW"/>
    <bitfield id="VPVOLTAGE" width="8" begin="7" end="0" resetval="0x00" description="Indicates the current SMPS programmed voltage." range="" rwaccess="R"/>
  </register>
  <register id="PRM_VP_IVA_VSTEPMAX" acronym="PRM_VP_IVA_VSTEPMAX" offset="0x80" width="32" description="This register allows the programming of the maximum voltage step and waiting time of the Voltage Processor dedicated to IVA Voltage Domain (VDD_IVA_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPsoftwareAITTIMEMAX" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for positive voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMAX" width="8" begin="7" end="0" resetval="0x00" description="Maximum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_IVA_VSTEPMIN" acronym="PRM_VP_IVA_VSTEPMIN" offset="0x84" width="32" description="This register allows the programming of the minimum voltage step and waiting time of the Voltage Processor dedicated to the IVA Voltage Domain (VDD_IVA_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPsoftwareAITTIMEMIN" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for negative voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMIN" width="8" begin="7" end="0" resetval="0x00" description="Minimum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_SMPS_SA" acronym="PRM_VC_SMPS_SA" offset="0x88" width="32" description="This register allows the setting of the I2C slave address of the Power IC device. [warm reset insensitive]">
    <bitfield id="RESERVED" width="9" begin="31" end="23" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="SA_VDD_MPU_L" width="7" begin="22" end="16" resetval="0x00" description="Set the I2C slave address value for the third (if any) Power IC device." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="15" end="15" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="SA_VDD_IVA_L" width="7" begin="14" end="8" resetval="0x00" description="Set the I2C slave address value for the second (if any) Power IC device." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SA_VDD_CORE_L" width="7" begin="6" end="0" resetval="0x00" description="Set the I2C slave address value for the first Power IC device." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_VAL_SMPS_RA_VOL" acronym="PRM_VC_VAL_SMPS_RA_VOL" offset="0x8C" width="32" description="This register allows the setting of the voltage configuration register address for the VDD channels. [warm reset insensitive]">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="VOLRA_VDD_MPU_L" width="8" begin="23" end="16" resetval="0x00" description="Voltage configuration register address value for VDD_MPU_L channel" range="" rwaccess="RW"/>
    <bitfield id="VOLRA_VDD_IVA_L" width="8" begin="15" end="8" resetval="0x00" description="Voltage configuration register address value for VDD_IVA_L channel (if VDD_IVA_L source is placed in same chip as VDD_MPU_L source and have different voltage configuration register)" range="" rwaccess="RW"/>
    <bitfield id="VOLRA_VDD_CORE_L" width="8" begin="7" end="0" resetval="0x00" description="Voltage configuration register address value for the VDD_CORE_L channel (if VDD_CORE_L source is placed in same chip as VDD_MPU_L source and has different voltage configuration register)" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_VAL_SMPS_RA_CMD" acronym="PRM_VC_VAL_SMPS_RA_CMD" offset="0x90" width="32" description="Command (ON/ON-Low-Power/Retention/OFF) configuration register address values for the VDD channels (if used SMPS chips have different command configuration register than voltage configuration register) [warm reset insensitive]">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="CMDRA_VDD_MPU_L" width="8" begin="23" end="16" resetval="0x00" description="Command (ON/ON-Low-Power /Retention/OFF) configuration register address value for VDD_MPU_L channel" range="" rwaccess="RW"/>
    <bitfield id="CMDRA_VDD_IVA_L" width="8" begin="15" end="8" resetval="0x00" description="Command (ON/ON-Low-Power /Retention/OFF) configuration register address value for VDD_IVA_L channel (if VDD_IVA_L source has different command configuration register than voltage VDD_MPU_L)" range="" rwaccess="RW"/>
    <bitfield id="CMDRA_VDD_CORE_L" width="8" begin="7" end="0" resetval="0x00" description="Command (ON/ON-Low-Power /Retention/OFF) configuration register address value for VDD_CORE_L channel (if VDD_CORE_L source has different command configuration register than voltage VDD_MPU_L)" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_VAL_CMD_VDD_CORE_L" acronym="PRM_VC_VAL_CMD_VDD_CORE_L" offset="0x94" width="32" description="This register allows the setting of the ON/ON-Low-Power/Retention/OFF command values for VDD_CORE_L channel. [warm reset insensitive]">
    <bitfield id="ON" width="8" begin="31" end="24" resetval="0x00" description="Set the ON command value." range="" rwaccess="RW"/>
    <bitfield id="ONLP" width="8" begin="23" end="16" resetval="0x00" description="Set the ON-Low-Power command value." range="" rwaccess="RW"/>
    <bitfield id="RET" width="8" begin="15" end="8" resetval="0x00" description="Set the RET command value." range="" rwaccess="RW"/>
    <bitfield id="OFF" width="8" begin="7" end="0" resetval="0x00" description="Set the OFF command value." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_VAL_CMD_VDD_MPU_L" acronym="PRM_VC_VAL_CMD_VDD_MPU_L" offset="0x98" width="32" description="This register allows the setting of the ON/ON-Low-Power/Retention/OFF command values for VDD_MPU_L channel. [warm reset insensitive]">
    <bitfield id="ON" width="8" begin="31" end="24" resetval="0x00" description="Set the ON command value." range="" rwaccess="RW"/>
    <bitfield id="ONLP" width="8" begin="23" end="16" resetval="0x00" description="Set the ON-Low-Power command value." range="" rwaccess="RW"/>
    <bitfield id="RET" width="8" begin="15" end="8" resetval="0x00" description="Set the RET command value." range="" rwaccess="RW"/>
    <bitfield id="OFF" width="8" begin="7" end="0" resetval="0x00" description="Set the OFF command value." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_VAL_CMD_VDD_IVA_L" acronym="PRM_VC_VAL_CMD_VDD_IVA_L" offset="0x9C" width="32" description="This register allows the setting of the ON/ON-Low-Power/Retention/OFF command values for VDD_IVA_L channel. [warm reset insensitive]">
    <bitfield id="ON" width="8" begin="31" end="24" resetval="0x00" description="Set the ON command value." range="" rwaccess="RW"/>
    <bitfield id="ONLP" width="8" begin="23" end="16" resetval="0x00" description="Set the ON-Low-Power command value." range="" rwaccess="RW"/>
    <bitfield id="RET" width="8" begin="15" end="8" resetval="0x00" description="Set the RET command value." range="" rwaccess="RW"/>
    <bitfield id="OFF" width="8" begin="7" end="0" resetval="0x00" description="Set the OFF command value." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_VAL_BYPASS" acronym="PRM_VC_VAL_BYPASS" offset="0xA0" width="32" description="Bypass data values register used for bypass command channel to send other configuration information (other then voltage configuration parameters) for SMPS chips which have no other configuration interface then this I2C interface. [warm reset insensitive]">
    <bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="VALID" width="1" begin="24" end="24" resetval="0" description="This bit validates the bypass command. It is automatically cleared by hardware either after getting the acknowledge back from the SMPS or if an error occured." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="VALID_0_r" description="The last command send has been acknowledged"/>
      <bitenum value="1" id="1" token="VALID_1" description="Pending command is being process"/>
    </bitfield>
    <bitfield id="DATA" width="8" begin="23" end="16" resetval="0x00" description="Data to send to the Power IC device." range="" rwaccess="RW"/>
    <bitfield id="REGADDR" width="8" begin="15" end="8" resetval="0x00" description="Set the address of Power IC device register to configure." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="SLAVEADDR" width="7" begin="6" end="0" resetval="0x00" description="Set the I2C slave address value." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_CFG_CHANNEL" acronym="PRM_VC_CFG_CHANNEL" offset="0xA4" width="32" description="This register allows the configuration pointers for both VDD channels. [warm reset insensitive]">
    <bitfield id="RESERVED" width="11" begin="31" end="21" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="RACEN_VDD_MPU_L" width="1" begin="20" end="20" resetval="0" description="Enable bit for usage of RAC_VDD_MPU_L" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RACEN_VDD_MPU_L_0" description="VDD_MPU_L channel uses VOLRA values for register address of VFSM-s commands. VFSM-s commands goes also to voltage configuration register."/>
      <bitenum value="1" id="1" token="RACEN_VDD_MPU_L_1" description="VDD_MPU_L channel uses CMDRA values for register address of VFSM-s commands. VFSM-s commands goes to different command configuration register."/>
    </bitfield>
    <bitfield id="RAC_VDD_MPU_L" width="1" begin="19" end="19" resetval="0" description="Command (ON/ON-Low-Power/Retention/OFF) configuration register address pointer for VDD_MPU_L channel. (This bit has no influence on the VDD_MPU_L channel.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAC_VDD_MPU_L_0" description="Select CMDRA_VDD_CORE_L for VDD_MPU_L channel"/>
      <bitenum value="1" id="1" token="RAC_VDD_MPU_L_1" description="Select CMDRA_VDD_MPU_L for VDD_MPU_L channel"/>
    </bitfield>
    <bitfield id="RAV_VDD_MPU_L" width="1" begin="18" end="18" resetval="0" description="Voltage configuration register address pointer for VDD_MPU_L channel. (This bit has no influence on the VDD_MPU_L channel.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAV_VDD_MPU_L_0" description="Select VOLRA_VDD_CORE_L for VDD_MPU_L channel"/>
      <bitenum value="1" id="1" token="RAV_VDD_MPU_L_1" description="Select VOLRA_VDD_MPU_L for VDD_MPU_L channel"/>
    </bitfield>
    <bitfield id="CMD_VDD_MPU_L" width="1" begin="17" end="17" resetval="0" description="Command values (ON/ON-Low-Power/Retention/OFF voltage values) set selection for VDD_MPU_L channel. (This bit has no influence on the VDD_MPU_L channel.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CMD_VDD_MPU_L_0" description="VDD_MPU_L channel use VC_VAL_CMD_VDD_CORE_L set for command values"/>
      <bitenum value="1" id="1" token="CMD_VDD_MPU_L_1" description="VDD_MPU_L channel use VC_VAL_CMD_VDD_MPU_L set for command values"/>
    </bitfield>
    <bitfield id="SA_VDD_MPU_L" width="1" begin="16" end="16" resetval="0" description="Slave address pointer for VDD_MPU_L channel. (This bit has no influence on the VDD_MPU_L channel.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SA_VDD_MPU_L_0" description="Select SA_VDD_CORE_L for VDD_MPU_L channel"/>
      <bitenum value="1" id="1" token="SA_VDD_MPU_L_1" description="Select SA_VDD_MPU_L for VDD_MPU_L channel"/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CMD_VDD_IVA_L" width="1" begin="12" end="12" resetval="0" description="Command values (ON/ON-Low-Power/Retention/OFF voltage values) set selection for VDD_IVA_L channel" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CMD_VDD_IVA_L_0" description="VDD_IVA_L channel use VC_VAL_CMD_VDD_MPU_L set for command values"/>
      <bitenum value="1" id="1" token="CMD_VDD_IVA_L_1" description="VDD_IVA_L channel use VC_VAL_CMD_VDD_IVA_L set for command values"/>
    </bitfield>
    <bitfield id="RACEN_VDD_IVA_L" width="1" begin="11" end="11" resetval="0" description="Enable bit for usage of RAC_VDD_IVA_L" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RACEN_VDD_IVA_L_0" description="VDD_IVA_L channel uses VOLRA values for register address of VFSM-s commands. VFSM-s commands goes also to voltage configuration register."/>
      <bitenum value="1" id="1" token="RACEN_VDD_IVA_L_1" description="VDD_IVA_L channel uses CMDRA values for register address of VFSM-s commands. VFSM-s commands goes to different command configuration register."/>
    </bitfield>
    <bitfield id="RAC_VDD_IVA_L" width="1" begin="10" end="10" resetval="0" description="Command (ON/ON-Low-Power/Retention/OFF) configuration register address pointer for VDD_IVA_L channel" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAC_VDD_IVA_L_0" description="Select CMDRA_VDD_MPU_L for VDD_IVA_L channel"/>
      <bitenum value="1" id="1" token="RAC_VDD_IVA_L_1" description="Select CMDRA_VDD_IVA_L for VDD_IVA_L channel"/>
    </bitfield>
    <bitfield id="RAV_VDD_IVA_L" width="1" begin="9" end="9" resetval="0" description="Voltage configuration register address pointer for VDD_IVA_L channel." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAV_VDD_IVA_L_0" description="Select VOLRA_VDD_MPU_L for VDD_IVA_L channel"/>
      <bitenum value="1" id="1" token="RAV_VDD_IVA_L_1" description="Select VOLRA_VDD_IVA_L for VDD_IVA_L channel"/>
    </bitfield>
    <bitfield id="SA_VDD_IVA_L" width="1" begin="8" end="8" resetval="0" description="Slave address pointer for VDD_IVA_L channel." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SA_VDD_IVA_L_0" description="Select SA_VDD_MPU_L for VDD_IVA_L channel"/>
      <bitenum value="1" id="1" token="SA_VDD_IVA_L_1" description="Select SA_VDD_IVA_L for VDD_IVA_L channel"/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CMD_VDD_CORE_L" width="1" begin="4" end="4" resetval="0" description="Command values (ON/ON-Low-Power/Retention/OFF voltage values) set selection for VDD_CORE_L channel" range="" rwaccess="RW"/>
    <bitfield id="RACEN_VDD_CORE_L" width="1" begin="3" end="3" resetval="0" description="Enable bit for usage of RAC_VDD_CORE_L." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RACEN_VDD_CORE_L_0" description="VDD_CORE_L channel use VOLRA values for register address of VFSM-s commands. VFSM-s commands goes also to voltage configuration register."/>
      <bitenum value="1" id="1" token="RACEN_VDD_CORE_L_1" description="VDD_CORE_L channel use CMDRA values for register address of VFSM-s commands. VFSM-s commands goes to different command configuration register."/>
    </bitfield>
    <bitfield id="RAC_VDD_CORE_L" width="1" begin="2" end="2" resetval="0" description="Command (ON/ON-Low-Power/Retention/OFF) configuration register address pointer for VDD_CORE_L channel." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAC_VDD_CORE_L_0" description="Select CMDRA_VDD_MPU_L for the VDD_CORE_L channel."/>
      <bitenum value="1" id="1" token="RAC_VDD_CORE_L_1" description="Select CMDRA_VDD_CORE_L for the VDD_CORE_L channel."/>
    </bitfield>
    <bitfield id="RAV_VDD_CORE_L" width="1" begin="1" end="1" resetval="0" description="Voltage configuration register address pointer for VDD_CORE_L channel." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RAV_VDD_CORE_L_0" description="Select VOLRA_VDD_MPU_L for the VDD_CORE_L channel."/>
      <bitenum value="1" id="1" token="RAV_VDD_CORE_L_1" description="Select VOLRA_VDD_CORE_L for the VDD_CORE_L channel."/>
    </bitfield>
    <bitfield id="SA_VDD_CORE_L" width="1" begin="0" end="0" resetval="0" description="Slave address pointer for VDD_CORE_L channel." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SA_VDD_CORE_L_0" description="Select SA_VDD_MPU_L for the VDD_CORE_L channel."/>
      <bitenum value="1" id="1" token="SA_VDD_CORE_L_1" description="Select SA_VDD_CORE_L for the VDD_CORE_L channel."/>
    </bitfield>
  </register>
  <register id="PRM_VC_CFG_I2C_MODE" acronym="PRM_VC_CFG_I2C_MODE" offset="0xA8" width="32" description="I2C configuration register. [warm reset insensitive]">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="DFILTEREN" width="1" begin="6" end="6" resetval="0" description="This field enables double filter procedure for IC input lines" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DFILTEREN_0" description="I2C bus digital filter rejects all glitches smaller than 1 sytem clock cycle"/>
      <bitenum value="1" id="1" token="DFILTEREN_1" description="I2C bus digital filter rejects all glitches smaller than 2 sytem clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="SRMODEEN" width="1" begin="4" end="4" resetval="1" description="Enables the IC repeated start operation mode.(Effect of holding the SCL and SDA lines low, in effect blocking the I2C bus from losing arbitration between repeated start points). . Use of this feature results from a trade-off between speed and power consumption of I2C interface. ." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SRMODEEN_0" description="Disables the repeated start operation mode"/>
      <bitenum value="1" id="1" token="SRMODEEN_1" description="Enables the repeated start operation mode"/>
    </bitfield>
    <bitfield id="HSMODEEN" width="1" begin="3" end="3" resetval="1" description="Enables IC bus high-speed mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="HSMODEEN_0" description="Disables the I2C high-speed mode"/>
      <bitenum value="1" id="1" token="HSMODEEN_1" description="Enables the I2C high-speed mode"/>
    </bitfield>
    <bitfield id="HSMCODE" width="3" begin="2" end="0" resetval="0x0" description="Master code value for IC high-speed preamble transmission." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_CFG_I2C_CLK" acronym="PRM_VC_CFG_I2C_CLK" offset="0xAC" width="32" description="I2C Interface clock configuration parameters. [warm reset insensitive]">
    <bitfield id="HSSCLL" width="8" begin="31" end="24" resetval="0x00" description="Number of the system clock cycles, necessary to count the low period of the I2C clock signal, when the I2C interface runs in high-speed mode of operation. The value of the bit field is automatically increased by 7." range="" rwaccess="RW"/>
    <bitfield id="HSSCLH" width="8" begin="23" end="16" resetval="0x00" description="Number of the system clock cycles, necessary to count the high period of the I2C clock signal, when the I2C interface runs in high-speed mode of operation. The value of the bit field is automatically increased by 5." range="" rwaccess="RW"/>
    <bitfield id="SCLL" width="8" begin="15" end="8" resetval="0x00" description="Number of the system clock cycles, necessary to count the low period of the I2C clock signal, when the I2C interface runs in fast mode of operation. The value of the bit field is automatically increased by 7." range="" rwaccess="RW"/>
    <bitfield id="SCLH" width="8" begin="7" end="0" resetval="0x00" description="Number of the system clock cycles, necessary to count the high period of the I2C clock signal, when the I2C interface runs in fast mode of operation. The value of the bit field is automatically increased by 5." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_SRAM_COUNT" acronym="PRM_SRAM_COUNT" offset="0xB0" width="32" description="Common setup for SRAM LDO transition counters. Applies to all voltage domains. [warm reset insensitive]">
    <bitfield id="STARTUP_COUNT" width="8" begin="31" end="24" resetval="0x78" description="Determines the start-up duration of SRAM and ABB LDO. The duration is computed as 16 x NbCycles of system clock cycles. Target is 50us." range="" rwaccess="RW"/>
    <bitfield id="SLPCNT_VALUE" width="8" begin="23" end="16" resetval="0x00" description="Delay between retention/off assertion of last SRAM bank and SRAMALLRET signal to LDO is driven high. Counting on system clock. Target is 2us." range="" rwaccess="RW"/>
    <bitfield id="VSETUPCNT_VALUE" width="8" begin="15" end="8" resetval="0x00" description="SRAM LDO rampup time from retention to active mode. The duration is computed as 8 x NbCycles of system clock cycles. Target is 30us." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PCHARGECNT_VALUE" width="6" begin="5" end="0" resetval="0x17" description="Delay between de-assertion of standby_rta_ret_on and standby_rta_ret_good. Counting on system clock. Target is 600ns." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_SRAM_WKUP_SETUP" acronym="PRM_SRAM_WKUP_SETUP" offset="0xB4" width="32" description="Setup of memory in WKUP voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="DISABLE_RTA_EXPORT" width="1" begin="0" end="0" resetval="0" description="Control for HD memory RTA feature. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="DISABLE_RTA_EXPORT_0" description="HD memory RTA feature is enabled"/>
      <bitenum value="1" id="1" token="DISABLE_RTA_EXPORT_1" description="HD memory RTA feature is disabled"/>
    </bitfield>
  </register>
  <register id="PRM_LDO_SRAM_CORE_SETUP" acronym="PRM_LDO_SRAM_CORE_SETUP" offset="0xB8" width="32" description="Setup of the SRAM LDO for CORE voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="AIPOFF" width="1" begin="8" end="8" resetval="0" description="Override on AIPOFF input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AIPOFF_0" description="AIPOFF signal is not overriden"/>
      <bitenum value="1" id="1" token="AIPOFF_1" description="AIPOFF signal is overriden to 1. Corresponding SRAM LDO is disabled and in HZ mode."/>
    </bitfield>
    <bitfield id="ENFUNC5" width="1" begin="7" end="7" resetval="0" description="ENFUNC5 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENFUNC5_0" description="Active to retention is a one step transfer"/>
      <bitenum value="1" id="1" token="ENFUNC5_1" description="Active to retention is a two steps transfer"/>
    </bitfield>
    <bitfield id="ENFUNC4" width="1" begin="6" end="6" resetval="0" description="ENFUNC4 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENFUNC4_0" description="One external clock is supplied"/>
      <bitenum value="1" id="1" token="ENFUNC4_1" description="No external clock is supplied"/>
    </bitfield>
    <bitfield id="ENFUNC3_EXPORT" width="1" begin="5" end="5" resetval="0" description="ENFUNC3 input of SRAM LDO. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="ENFUNC3_EXPORT_0" description="Sub regulation is disabled"/>
      <bitenum value="1" id="1" token="ENFUNC3_EXPORT_1" description="Sub regulation is enabled"/>
    </bitfield>
    <bitfield id="ENFUNC2_EXPORT" width="1" begin="4" end="4" resetval="0" description="ENFUNC2 input of SRAM LDO. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="ENFUNC2_EXPORT_0" description="External cap is used"/>
      <bitenum value="1" id="1" token="ENFUNC2_EXPORT_1" description="External cap is not used"/>
    </bitfield>
    <bitfield id="ENFUNC1_EXPORT" width="1" begin="3" end="3" resetval="0" description="ENFUNC1 input of SRAM LDO. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="ENFUNC1_EXPORT_0" description="Short circuit protection is disabled"/>
      <bitenum value="1" id="1" token="ENFUNC1_EXPORT_1" description="Short circuit protection is enabled"/>
    </bitfield>
    <bitfield id="ABBOFF_SLEEP_EXPORT" width="1" begin="2" end="2" resetval="0" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during deep-sleep. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="ABBOFF_SLEEP_EXPORT_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="1" token="ABBOFF_SLEEP_EXPORT_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="ABBOFF_ACT_EXPORT" width="1" begin="1" end="1" resetval="0" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during active mode. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="ABBOFF_ACT_EXPORT_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="1" token="ABBOFF_ACT_EXPORT_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="DISABLE_RTA_EXPORT" width="1" begin="0" end="0" resetval="0" description="Control for HD memory RTA feature. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="DISABLE_RTA_EXPORT_0" description="HD memory RTA feature is enabled"/>
      <bitenum value="1" id="1" token="DISABLE_RTA_EXPORT_1" description="HD memory RTA feature is disabled"/>
    </bitfield>
  </register>
  <register id="PRM_LDO_SRAM_CORE_CTRL" acronym="PRM_LDO_SRAM_CORE_CTRL" offset="0xBC" width="32" description="Control and status of the SRAM LDO for CORE voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="SRAM_IN_TRANSITION" width="1" begin="9" end="9" resetval="0" description="Status indicating SRAM LDO state machine state." range="" rwaccess="R">
      <bitenum value="0" id="0" token="SRAM_IN_TRANSITION_0_r" description="SRAM LDO state machine is stable"/>
      <bitenum value="1" id="1" token="SRAM_IN_TRANSITION_1_r" description="SRAM LDO state machine is in transition state"/>
    </bitfield>
    <bitfield id="SRAMLDO_STATUS" width="1" begin="8" end="8" resetval="0" description="SRAMLDO status" range="" rwaccess="R">
      <bitenum value="0" id="0" token="SRAMLDO_STATUS_0_r" description="SRAMLDO is in ACTIVE mode."/>
      <bitenum value="1" id="1" token="SRAMLDO_STATUS_1_r" description="SRAMLDO is on RETENTION mode."/>
    </bitfield>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RETMODE_ENABLE" width="1" begin="0" end="0" resetval="0" description="Control if the SRAM LDO retention mode is used or not." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RETMODE_ENABLE_0" description="SRAM LDO is not allowed to go to RET mode"/>
      <bitenum value="1" id="1" token="RETMODE_ENABLE_1" description="SRAM LDO go to RET mode when all memory of voltage domain are OFF or RET"/>
    </bitfield>
  </register>
  <register id="PRM_LDO_SRAM_MPU_SETUP" acronym="PRM_LDO_SRAM_MPU_SETUP" offset="0xC0" width="32" description="Setup of the SRAM LDO for MPU voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="AIPOFF" width="1" begin="8" end="8" resetval="0" description="Override on AIPOFF input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AIPOFF_0" description="AIPOFF signal is not overriden"/>
      <bitenum value="1" id="1" token="AIPOFF_1" description="AIPOFF signal is overriden to 1. Corresponding SRAM LDO is disabled and in HZ mode."/>
    </bitfield>
    <bitfield id="ENFUNC5" width="1" begin="7" end="7" resetval="0" description="ENFUNC5 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENFUNC5_0" description="Active to retention is a one step transfer"/>
      <bitenum value="1" id="1" token="ENFUNC5_1" description="Active to retention is a two steps transfer"/>
    </bitfield>
    <bitfield id="ENFUNC4" width="1" begin="6" end="6" resetval="0" description="ENFUNC4 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENFUNC4_0" description="One external clock is supplied"/>
      <bitenum value="1" id="1" token="ENFUNC4_1" description="No external clock is supplied"/>
    </bitfield>
    <bitfield id="ENFUNC3_EXPORT" width="1" begin="5" end="5" resetval="0" description="ENFUNC3 input of SRAM LDO. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENFUNC3_EXPORT_0" description="Sub regulation is disabled"/>
      <bitenum value="1" id="1" token="ENFUNC3_EXPORT_1" description="Sub regulation is enabled"/>
    </bitfield>
    <bitfield id="ENFUNC2_EXPORT" width="1" begin="4" end="4" resetval="0" description="ENFUNC2 input of SRAM LDO. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="ENFUNC2_EXPORT_0" description="External cap is used"/>
      <bitenum value="1" id="1" token="ENFUNC2_EXPORT_1" description="External cap is not used"/>
    </bitfield>
    <bitfield id="ENFUNC1_EXPORT" width="1" begin="3" end="3" resetval="0" description="ENFUNC1 input of SRAM LDO. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENFUNC1_EXPORT_0" description="Short circuit protection is disabled"/>
      <bitenum value="1" id="1" token="ENFUNC1_EXPORT_1" description="Short circuit protection is enabled"/>
    </bitfield>
    <bitfield id="ABBOFF_SLEEP_EXPORT" width="1" begin="2" end="2" resetval="0" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during deep-sleep. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="ABBOFF_SLEEP_EXPORT_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="1" token="ABBOFF_SLEEP_EXPORT_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="ABBOFF_ACT_EXPORT" width="1" begin="1" end="1" resetval="0" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during active mode. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="ABBOFF_ACT_EXPORT_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="1" token="ABBOFF_ACT_EXPORT_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="DISABLE_RTA_EXPORT" width="1" begin="0" end="0" resetval="0" description="Control for HD memory RTA feature. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="DISABLE_RTA_EXPORT_0" description="HD memory RTA feature is enabled"/>
      <bitenum value="1" id="1" token="DISABLE_RTA_EXPORT_1" description="HD memory RTA feature is disabled"/>
    </bitfield>
  </register>
  <register id="PRM_LDO_SRAM_MPU_CTRL" acronym="PRM_LDO_SRAM_MPU_CTRL" offset="0xC4" width="32" description="Control and status of the SRAM LDO for MPU voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="SRAM_IN_TRANSITION" width="1" begin="9" end="9" resetval="0" description="Status indicating SRAM LDO state machine state." range="" rwaccess="R">
      <bitenum value="0" id="0" token="SRAM_IN_TRANSITION_0_r" description="SRAM LDO state machine is stable"/>
      <bitenum value="1" id="1" token="SRAM_IN_TRANSITION_1_r" description="SRAM LDO state machine is in transition state"/>
    </bitfield>
    <bitfield id="SRAMLDO_STATUS" width="1" begin="8" end="8" resetval="0" description="SRAMLDO status" range="" rwaccess="R">
      <bitenum value="0" id="0" token="SRAMLDO_STATUS_0_r" description="SRAMLDO is in ACTIVE mode."/>
      <bitenum value="1" id="1" token="SRAMLDO_STATUS_1_r" description="SRAMLDO is on RETENTION mode."/>
    </bitfield>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RETMODE_ENABLE" width="1" begin="0" end="0" resetval="0" description="Control if the SRAM LDO retention mode is used or not." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RETMODE_ENABLE_0" description="SRAM LDO is not allowed to go to RET mode"/>
      <bitenum value="1" id="1" token="RETMODE_ENABLE_1" description="SRAM LDO go to RET mode when all memory of voltage domain are OFF or RET"/>
    </bitfield>
  </register>
  <register id="PRM_LDO_SRAM_IVA_SETUP" acronym="PRM_LDO_SRAM_IVA_SETUP" offset="0xC8" width="32" description="Setup of the SRAM LDO for IVA voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="AIPOFF" width="1" begin="8" end="8" resetval="0" description="Override on AIPOFF input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AIPOFF_0" description="AIPOFF signal is not overriden"/>
      <bitenum value="1" id="1" token="AIPOFF_1" description="AIPOFF signal is overriden to 1. Corresponding SRAM LDO is disabled and in HZ mode."/>
    </bitfield>
    <bitfield id="ENFUNC5" width="1" begin="7" end="7" resetval="0" description="ENFUNC5 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENFUNC5_0" description="Active to retention is a one step transfer"/>
      <bitenum value="1" id="1" token="ENFUNC5_1" description="Active to retention is a two steps transfer"/>
    </bitfield>
    <bitfield id="ENFUNC4" width="1" begin="6" end="6" resetval="0" description="ENFUNC4 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENFUNC4_0" description="One external clock is supplied"/>
      <bitenum value="1" id="1" token="ENFUNC4_1" description="No external clock is supplied"/>
    </bitfield>
    <bitfield id="ENFUNC3_EXPORT" width="1" begin="5" end="5" resetval="0" description="ENFUNC3 input of SRAM LDO. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENFUNC3_EXPORT_0" description="Sub regulation is disabled"/>
      <bitenum value="1" id="1" token="ENFUNC3_EXPORT_1" description="Sub regulation is enabled"/>
    </bitfield>
    <bitfield id="ENFUNC2_EXPORT" width="1" begin="4" end="4" resetval="0" description="ENFUNC2 input of SRAM LDO. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="ENFUNC2_EXPORT_0" description="External cap is used"/>
      <bitenum value="1" id="1" token="ENFUNC2_EXPORT_1" description="External cap is not used"/>
    </bitfield>
    <bitfield id="ENFUNC1_EXPORT" width="1" begin="3" end="3" resetval="0" description="ENFUNC1 input of SRAM LDO. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENFUNC1_EXPORT_0" description="Short circuit protection is disabled"/>
      <bitenum value="1" id="1" token="ENFUNC1_EXPORT_1" description="Short circuit protection is enabled"/>
    </bitfield>
    <bitfield id="ABBOFF_SLEEP_EXPORT" width="1" begin="2" end="2" resetval="0" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during deep-sleep. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="ABBOFF_SLEEP_EXPORT_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="1" token="ABBOFF_SLEEP_EXPORT_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="ABBOFF_ACT_EXPORT" width="1" begin="1" end="1" resetval="0" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during active mode. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="ABBOFF_ACT_EXPORT_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="1" token="ABBOFF_ACT_EXPORT_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="DISABLE_RTA_EXPORT" width="1" begin="0" end="0" resetval="0" description="Control for HD memory RTA feature. After PowerOn reset and Efuse sensing, this bit field is automatically loaded with an Efuse value from control module. Bit field remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="0" token="DISABLE_RTA_EXPORT_0" description="HD memory RTA feature is enabled"/>
      <bitenum value="1" id="1" token="DISABLE_RTA_EXPORT_1" description="HD memory RTA feature is disabled"/>
    </bitfield>
  </register>
  <register id="PRM_LDO_SRAM_IVA_CTRL" acronym="PRM_LDO_SRAM_IVA_CTRL" offset="0xCC" width="32" description="Control and status of the SRAM LDO for IVA voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="SRAM_IN_TRANSITION" width="1" begin="9" end="9" resetval="0" description="Status indicating SRAM LDO state machine state." range="" rwaccess="R">
      <bitenum value="0" id="0" token="SRAM_IN_TRANSITION_0_r" description="SRAM LDO state machine is stable"/>
      <bitenum value="1" id="1" token="SRAM_IN_TRANSITION_1_r" description="SRAM LDO state machine is in transition state"/>
    </bitfield>
    <bitfield id="SRAMLDO_STATUS" width="1" begin="8" end="8" resetval="0" description="SRAMLDO status" range="" rwaccess="R">
      <bitenum value="0" id="0" token="SRAMLDO_STATUS_0_r" description="SRAMLDO is in ACTIVE mode."/>
      <bitenum value="1" id="1" token="SRAMLDO_STATUS_1_r" description="SRAMLDO is on RETENTION mode."/>
    </bitfield>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RETMODE_ENABLE" width="1" begin="0" end="0" resetval="0" description="Control if the SRAM LDO retention mode is used or not." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RETMODE_ENABLE_0" description="SRAM LDO is not allowed to go to RET mode"/>
      <bitenum value="1" id="1" token="RETMODE_ENABLE_1" description="SRAM LDO go to RET mode when all memory of voltage domain are OFF or RET"/>
    </bitfield>
  </register>
  <register id="PRM_LDO_ABB_MPU_SETUP" acronym="PRM_LDO_ABB_MPU_SETUP" offset="0xD0" width="32" description="Selects the MPU_ABB LDO mode.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_WTCNT_VALUE" width="8" begin="15" end="8" resetval="0x00" description="LDO settling time for active-mode OPP change. Counting at a 16 system clock cycles rate. Target is 50us. [warm reset insensitive]" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="ACTIVE_FBB_SEL" width="1" begin="2" end="2" resetval="0" description="Defines ABB LDO mode when voltage is in slow fast OPP. [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACTIVE_FBB_SEL_0" description="ABB LDO is in bypass mode"/>
      <bitenum value="1" id="1" token="ACTIVE_FBB_SEL_1" description="ABB LDO is in ABB Set1 mode"/>
    </bitfield>
    <bitfield id="ACTIVE_RBB_SEL" width="1" begin="1" end="1" resetval="0" description="Defines ABB LDO mode when MPU voltage is in OPP_TURBO. [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACTIVE_RBB_SEL_0" description="ABB LDO is in bypass mode"/>
      <bitenum value="1" id="1" token="ACTIVE_RBB_SEL_1" description="ABB LDO is in ABB Set2 mode"/>
    </bitfield>
    <bitfield id="SR2EN" width="1" begin="0" end="0" resetval="0" description="Enable ABB power management" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SR2EN_0" description="ABB LDO is put in bypass mode"/>
      <bitenum value="1" id="1" token="SR2EN_1" description="ABB LDO will operate accordingly to settings"/>
    </bitfield>
  </register>
  <register id="PRM_LDO_ABB_MPU_CTRL" acronym="PRM_LDO_ABB_MPU_CTRL" offset="0xD4" width="32" description="Control and Status of ABB on MPU voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_IN_TRANSITION" width="1" begin="6" end="6" resetval="0" description="Indicates VBBLDO_CON is or is not in transition state. This output should be used by programming interface to clear OPP_CHANGE bit as an indication of OPP change completion." range="" rwaccess="R">
      <bitenum value="0" id="0" token="SR2_IN_TRANSITION_0_r" description=""/>
      <bitenum value="1" id="1" token="SR2_IN_TRANSITION_1_r" description="Indicates that VBBLDO_CON is in transition and SR2_STATUS bits are not stable to read."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_STATUS" width="2" begin="4" end="3" resetval="0x0" description="Indicate ABB LDO current operation status" range="" rwaccess="R">
      <bitenum value="0" id="0" token="SR2_STATUS_0_r" description="ABB LDO is placed in bypass mode."/>
      <bitenum value="1" id="1" token="SR2_STATUS_1_r" description="ABB LDO is placed in ABB Set2 active mode"/>
      <bitenum value="2" id="2" token="SR2_STATUS_2_r" description="ABB LDO is placed in ABB Set1 active mode."/>
      <bitenum value="3" id="3" token="SR2_STATUS_3_r" description="Reserved"/>
    </bitfield>
    <bitfield id="OPP_CHANGE" width="1" begin="2" end="2" resetval="0" description="When OPP_CHANGE is set to 1, VBBLDO_CON samples OPP_SEL and ACTIVE_FBB_SEL/ACTIVE_RBB_SEL upon detecting rising edge. VBBLDO_CON asserts signal SR2_IN_TRANSITION in response to OPP_CHANGE. OPP_CHANGE should be cleared to 0 when SR2_IN_TRANSITION from VBBLDO_CON is de-asserted." range="" rwaccess="RW WSpecial"/>
    <bitfield id="OPP_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the OPP at which the MPU voltage domain is operating" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="OPP_SEL_0" description="default : Nominal"/>
      <bitenum value="1" id="1" token="OPP_SEL_1" description="Fast OPP"/>
      <bitenum value="2" id="2" token="OPP_SEL_2" description="Nominal"/>
      <bitenum value="3" id="3" token="OPP_SEL_3" description="Slow OPP"/>
    </bitfield>
  </register>
  <register id="PRM_LDO_ABB_IVA_SETUP" acronym="PRM_LDO_ABB_IVA_SETUP" offset="0xD8" width="32" description="Selects the IVA_ABB LDO mode.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_WTCNT_VALUE" width="8" begin="15" end="8" resetval="0x00" description="LDO settling time for active-mode OPP change. Counting at a 16 system clock cycles rate. Target is 50us. [warm reset insensitive]" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="ACTIVE_FBB_SEL" width="1" begin="2" end="2" resetval="0" description="Defines ABB LDO mode when voltage is in slow fast OPP. [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACTIVE_FBB_SEL_0" description="ABB LDO is in bypass mode"/>
      <bitenum value="1" id="1" token="ACTIVE_FBB_SEL_1" description="ABB LDO is in ABB Set1 mode"/>
    </bitfield>
    <bitfield id="ACTIVE_RBB_SEL" width="1" begin="1" end="1" resetval="0" description="Defines ABB LDO mode when IVA voltage is in OPP_TURBO. [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACTIVE_RBB_SEL_0" description="ABB LDO is in bypass mode"/>
      <bitenum value="1" id="1" token="ACTIVE_RBB_SEL_1" description="ABB LDO is in ABB Set2 mode"/>
    </bitfield>
    <bitfield id="SR2EN" width="1" begin="0" end="0" resetval="0" description="Enable ABB power management" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SR2EN_0" description="ABB LDO is put in bypass mode"/>
      <bitenum value="1" id="1" token="SR2EN_1" description="ABB LDO will operate accordingly to settings"/>
    </bitfield>
  </register>
  <register id="PRM_LDO_ABB_IVA_CTRL" acronym="PRM_LDO_ABB_IVA_CTRL" offset="0xDC" width="32" description="Control and Status of ABB on IVA voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_IN_TRANSITION" width="1" begin="6" end="6" resetval="0" description="Indicates VBBLDO_CON is or is not in transition state. This output should be used by programming interface to clear OPP_CHANGE bit as an indication of OPP change completion." range="" rwaccess="R">
      <bitenum value="0" id="0" token="SR2_IN_TRANSITION_0_r" description=""/>
      <bitenum value="1" id="1" token="SR2_IN_TRANSITION_1_r" description="Indicates that VBBLDO_CON is in transition and SR2_STATUS bits are not stable to read."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_STATUS" width="2" begin="4" end="3" resetval="0x0" description="Indicate ABB LDO current operation status" range="" rwaccess="R">
      <bitenum value="0" id="0" token="SR2_STATUS_0_r" description="ABB LDO is placed in bypass mode."/>
      <bitenum value="1" id="1" token="SR2_STATUS_1_r" description="ABB LDO is placed in ABB Set2 active mode"/>
      <bitenum value="2" id="2" token="SR2_STATUS_2_r" description="ABB LDO is placed in ABB Set1 active mode."/>
      <bitenum value="3" id="3" token="SR2_STATUS_3_r" description="Reserved"/>
    </bitfield>
    <bitfield id="OPP_CHANGE" width="1" begin="2" end="2" resetval="0" description="When OPP_CHANGE is set to 1, VBBLDO_CON samples OPP_SEL and ACTIVE_FBB_SEL/ACTIVE_RBB_SEL upon detecting rising edge. VBBLDO_CON asserts signal SR2_IN_TRANSITION in response to OPP_CHANGE. OPP_CHANGE should be cleared to 0 when SR2_IN_TRANSITION from VBBLDO_CON is de-asserted." range="" rwaccess="RW WSpecial"/>
    <bitfield id="OPP_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the OPP at which the IVA voltage domain is operating (Fast OPP, Nominal OPP or Slow OPP)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="OPP_SEL_0" description="default : Nominal"/>
      <bitenum value="1" id="1" token="OPP_SEL_1" description="Fast OPP"/>
      <bitenum value="2" id="2" token="OPP_SEL_2" description="Nominal"/>
      <bitenum value="3" id="3" token="OPP_SEL_3" description="Slow OPP"/>
    </bitfield>
  </register>
  <register id="PRM_LDO_BANDGAP_SETUP" acronym="PRM_LDO_BANDGAP_SETUP" offset="0xE0" width="32" description="Control of the bandgap. [warm reset insensitive]">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="STARTUP_COUNT" width="8" begin="7" end="0" resetval="0x78" description="Determines the start-up duration of BANDGAP. The duration is computed as 32 x NbCycles of system clock cycles. Target is 100us." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_DEVICE_OFF_CTRL" acronym="PRM_DEVICE_OFF_CTRL" offset="0xE4" width="32" description="This register is used to control device OFF transition.">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0000 00" description="" range="" rwaccess="R"/>
    <bitfield id="EMIF2_OFFWKUP_DISABLE" width="1" begin="9" end="9" resetval="0" description="Controls the EMIF2_DEVICE_OFFWKUP_CORESRTACTST notifier sent to EMIF2 upon a device wakeup from off mode. (Warm reset insensitive)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EMIF2_OFFWKUP_DISABLE_0" description="Notifier is activated."/>
      <bitenum value="1" id="1" token="EMIF2_OFFWKUP_DISABLE_1" description="Notifier is not activated &#8211; stays low."/>
    </bitfield>
    <bitfield id="EMIF1_OFFWKUP_DISABLE" width="1" begin="8" end="8" resetval="0" description="Controls the EMIF1_DEVICE_OFFWKUP_CORESRTACTST notifier sent to EMIF1 upon a device wakeup from off mode. (Warm reset insensitive)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EMIF1_OFFWKUP_DISABLE_0" description="Notifier is activated."/>
      <bitenum value="1" id="1" token="EMIF1_OFFWKUP_DISABLE_1" description="Notifier is not activated &#8211; stays low."/>
    </bitfield>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="DEVICE_OFF_ENABLE" width="1" begin="0" end="0" resetval="0" description="Controls transition to device OFF mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DEVICE_OFF_ENABLE_0" description="Device is not allowed to perform transition to off mode"/>
      <bitenum value="1" id="1" token="DEVICE_OFF_ENABLE_1" description="Device is allowed to perform transition to off mode as soon as all power domains in MPU, IVA and CORE voltage are in OFF or OsoftwareRET state (open switch retention)"/>
    </bitfield>
  </register>
  <register id="PRM_PHASE1_CNDP" acronym="PRM_PHASE1_CNDP" offset="0xE8" width="32" description="This register stores the start descriptor address of automatic restore phase1. [warm reset insensitive]">
    <bitfield id="PHASE1_CNDP" width="32" begin="31" end="0" resetval="0x4A05 E000" description="Start descriptor address of automatic restore phase1. Hard-coded to SAR_ROM base address." range="" rwaccess="R Rreturns"/>
  </register>
  <register id="PRM_PHASE2A_CNDP" acronym="PRM_PHASE2A_CNDP" offset="0xEC" width="32" description="This register stores the start descriptor address of automatic restore phase2A. [warm reset insensitive]">
    <bitfield id="PHASE2A_CNDP" width="32" begin="31" end="0" resetval="0x4A05 E030" description="Start descriptor address of automatic restore phase2A. Hard-coded to SAR_ROM base address + 0x30." range="" rwaccess="R Rreturns"/>
  </register>
  <register id="PRM_PHASE2B_CNDP" acronym="PRM_PHASE2B_CNDP" offset="0xF0" width="32" description="This register stores the start descriptor address of automatic restore phase2B. [warm reset insensitive]">
    <bitfield id="PHASE2B_CNDP" width="32" begin="31" end="0" resetval="0x4A05 E060" description="Start descriptor address of automatic restore phase2B. Hard-coded to SAR_ROM base address + 0x60." range="" rwaccess="R Rreturns"/>
  </register>
  <register id="PRM_VC_ERRST" acronym="PRM_VC_ERRST" offset="0xF8" width="32" description="This debug register logs the error status coming from Voltage Controller. Must be cleared by software.">
    <bitfield id="RESERVED" width="5" begin="31" end="27" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="BYPS_TIMEOUT_ERR" width="1" begin="26" end="26" resetval="0" description="Bypass command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="BYPS_TIMEOUT_ERR_0" description="No error"/>
      <bitenum value="1" id="1" token="BYPS_TIMEOUT_ERR_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="BYPS_RA_ERR" width="1" begin="25" end="25" resetval="0" description="Wrong register address error for bypass command" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="BYPS_RA_ERR_0" description="No error"/>
      <bitenum value="1" id="1" token="BYPS_RA_ERR_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="BYPS_SA_ERR" width="1" begin="24" end="24" resetval="0" description="Wrong slave address error for bypass command" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="BYPS_SA_ERR_0" description="No error"/>
      <bitenum value="1" id="1" token="BYPS_SA_ERR_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="VFSM_TIMEOUT_ERR_MPU" width="1" begin="21" end="21" resetval="0" description="MPU voltage FSM command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VFSM_TIMEOUT_ERR_MPU_0" description="No error"/>
      <bitenum value="1" id="1" token="VFSM_TIMEOUT_ERR_MPU_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="VFSM_RA_ERR_MPU" width="1" begin="20" end="20" resetval="0" description="Wrong register address error for MPU voltage FSM" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VFSM_RA_ERR_MPU_0" description="No error"/>
      <bitenum value="1" id="1" token="VFSM_RA_ERR_MPU_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="VFSM_SA_ERR_MPU" width="1" begin="19" end="19" resetval="0" description="Wrong slave address error for MPU voltage FSM" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VFSM_SA_ERR_MPU_0" description="No error"/>
      <bitenum value="1" id="1" token="VFSM_SA_ERR_MPU_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_TIMEOUT_ERR_MPU" width="1" begin="18" end="18" resetval="0" description="MPU voltage processor command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMPS_TIMEOUT_ERR_MPU_0" description="No error"/>
      <bitenum value="1" id="1" token="SMPS_TIMEOUT_ERR_MPU_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_RA_ERR_MPU" width="1" begin="17" end="17" resetval="0" description="Wrong register address error for MPU voltage processor" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMPS_RA_ERR_MPU_0" description="No error"/>
      <bitenum value="1" id="1" token="SMPS_RA_ERR_MPU_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_SA_ERR_MPU" width="1" begin="16" end="16" resetval="0" description="Wrong slave address error for MPU voltage processor" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMPS_SA_ERR_MPU_0" description="No error"/>
      <bitenum value="1" id="1" token="SMPS_SA_ERR_MPU_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="VFSM_TIMEOUT_ERR_IVA" width="1" begin="13" end="13" resetval="0" description="IVA voltage FSM command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VFSM_TIMEOUT_ERR_IVA_0" description="No error"/>
      <bitenum value="1" id="1" token="VFSM_TIMEOUT_ERR_IVA_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="VFSM_RA_ERR_IVA" width="1" begin="12" end="12" resetval="0" description="Wrong register address error for IVA voltage FSM" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VFSM_RA_ERR_IVA_0" description="No error"/>
      <bitenum value="1" id="1" token="VFSM_RA_ERR_IVA_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="VFSM_SA_ERR_IVA" width="1" begin="11" end="11" resetval="0" description="Wrong slave address error for IVA voltage FSM" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VFSM_SA_ERR_IVA_0" description="No error"/>
      <bitenum value="1" id="1" token="VFSM_SA_ERR_IVA_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_TIMEOUT_ERR_IVA" width="1" begin="10" end="10" resetval="0" description="IVA voltage processor command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMPS_TIMEOUT_ERR_IVA_0" description="No error"/>
      <bitenum value="1" id="1" token="SMPS_TIMEOUT_ERR_IVA_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_RA_ERR_IVA" width="1" begin="9" end="9" resetval="0" description="Wrong register address error for IVA voltage processor" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMPS_RA_ERR_IVA_0" description="No error"/>
      <bitenum value="1" id="1" token="SMPS_RA_ERR_IVA_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_SA_ERR_IVA" width="1" begin="8" end="8" resetval="0" description="Wrong slave address error for IVA voltage processor" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMPS_SA_ERR_IVA_0" description="No error"/>
      <bitenum value="1" id="1" token="SMPS_SA_ERR_IVA_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="VFSM_TIMEOUT_ERR_CORE" width="1" begin="5" end="5" resetval="0" description="CORE voltage FSM command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VFSM_TIMEOUT_ERR_CORE_0" description="No error"/>
      <bitenum value="1" id="1" token="VFSM_TIMEOUT_ERR_CORE_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="VFSM_RA_ERR_CORE" width="1" begin="4" end="4" resetval="0" description="Wrong register address error for CORE voltage FSM" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VFSM_RA_ERR_CORE_0" description="No error"/>
      <bitenum value="1" id="1" token="VFSM_RA_ERR_CORE_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="VFSM_SA_ERR_CORE" width="1" begin="3" end="3" resetval="0" description="Wrong slave address error for CORE voltage FSM" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="VFSM_SA_ERR_CORE_0" description="No error"/>
      <bitenum value="1" id="1" token="VFSM_SA_ERR_CORE_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_TIMEOUT_ERR_CORE" width="1" begin="2" end="2" resetval="0" description="CORE voltage processor command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMPS_TIMEOUT_ERR_CORE_0" description="No error"/>
      <bitenum value="1" id="1" token="SMPS_TIMEOUT_ERR_CORE_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_RA_ERR_CORE" width="1" begin="1" end="1" resetval="0" description="Wrong register address error for CORE voltage processor" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMPS_RA_ERR_CORE_0" description="No error"/>
      <bitenum value="1" id="1" token="SMPS_RA_ERR_CORE_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_SA_ERR_CORE" width="1" begin="0" end="0" resetval="0" description="Wrong slave address error for CORE voltage processor" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMPS_SA_ERR_CORE_0" description="No error"/>
      <bitenum value="1" id="1" token="SMPS_SA_ERR_CORE_1" description="An error has been logged"/>
    </bitfield>
  </register>
</module>
