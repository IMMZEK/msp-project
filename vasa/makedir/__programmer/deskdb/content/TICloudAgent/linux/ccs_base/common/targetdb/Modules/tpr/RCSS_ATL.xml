

<module description="" id="RCSS_ATL">
  
  
  <register acronym="REVISION" description=" Peripheral Revision Register " id="REVISION" offset="0x0" width="32">
    
  <bitfield begin="31" description="" end="30" id="" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="" end="28" id="" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="27" description="" end="16" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="15" description="" end="11" id="" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="" end="8" id="" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="" end="6" id="" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="ATL0_PPMR" description=" The PPM register is used by the Audio re-timing code. The DAC over-sampling clock will slow down or speed up by the PPM written to bits [8:0]. " id="ATL0_PPMR" offset="0x200" width="32">
    
  <bitfield begin="15" description="1 = Slow down 0 = Speed up" end="15" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="This is the 9-bit parts-per-millon value in the adjusting circuit. PPM adjustment = PPMSET/2^20" end="0" id="" rwaccess="RW" width="9"></bitfield>
  </register>
  
  
  <register acronym="ATL0_BBSR" description=" The measuring circuit produces a 16-bit Sample Count. Its inputs are the Audio IIS Word Select (AWS) and the Baseband IIS Word Select (BWS) from their respective MCASP pins. The sample count is a read-only register. " id="ATL0_BBSR" offset="0x204" width="32">
    
  <bitfield begin="15" description="This is the 16-bit sample count from the measuring circuit" end="0" id="" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="ATL0_ATLCR" description=" The modem Clock Divide Select bit is used during factory calibration of the radio to match latency between the analog and digital signal paths. The ATL Internal Divider divides down the ATL master clock to make ATCLK. " id="ATL0_ATLCR" offset="0x208" width="32">
    
  <bitfield begin="5" description="0: MODCLK = AWS divided by 2^16  1: MODCLK = AWS divided by 2^12" end="5" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Sets ratio of ATLPCLK to ATCLK" end="0" id="" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="ATL0_SWEN" description=" The software enable register is used to enable/disable the ATL. " id="ATL0_SWEN" offset="0x210" width="32">
    
  <bitfield begin="0" description="When disabled the ATL registers are forced to known states for simulation purposes. Runtime startup doesn't require initial values because measurement is relative to an arbitrary initial value. All registers are reset to zero except ATLCR.INT_DIV which is resets to 24 (divide-by-25, because zero is not a legal divide ratio.)" end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ATL0_BWSMUX" description=" The Baseband IIS Word Select mux select control register " id="ATL0_BWSMUX" offset="0x214" width="32">
    
  <bitfield begin="3" description="BWS input select:   0000: atl_io_port_bws[0]   0001: atl_io_port_bws[1]   0010: atl_io_port_bws[2]   0011: atl_io_port_bws[3]   0100: atl_io_port_bws[4]   0101: atl_io_port_bws[5]   0110: atl_io_port_bws[6]   0111: atl_io_port_bws[7]   1000: atl_io_port_bws[8]   1001: atl_io_port_bws[9]   1010: atl_io_port_bws[10]   1011: atl_io_port_bws[11]   1100: atl_io_port_bws[12]   1101: atl_io_port_bws[13]   1110: atl_io_port_bws[14]   1111: atl_io_port_bws[15]" end="0" id="" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="ATL0_AWSMUX" description=" The Audio IIS Word Select mux select control register " id="ATL0_AWSMUX" offset="0x218" width="32">
    
  <bitfield begin="3" description="AWS input select:   0000: atl_io_port_aws[0]   0001: atl_io_port_aws[1]   0010: atl_io_port_aws[2]   0011: atl_io_port_aws[3]   0100: atl_io_port_aws[4]   0101: atl_io_port_aws[5]   0110: atl_io_port_aws[6]   0111: atl_io_port_aws[7]   1000: atl_io_port_aws[8]   1001: atl_io_port_aws[9]   1010: atl_io_port_aws[10]   1011: atl_io_port_aws[11]   1100: atl_io_port_aws[12]   1101: atl_io_port_aws[13]   1110: atl_io_port_aws[14]   1111: atl_io_port_aws[15]" end="0" id="" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="ATL0_PCLKMUX" description=" ATL core input clock mux select control register " id="ATL0_PCLKMUX" offset="0x21C" width="32">
    
  <bitfield begin="0" description="ATL core clock select:   0: vbus_clk  1: atl_clk" end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ATL1_PPMR" description=" The PPM register is used by the Audio re-timing code. The DAC over-sampling clock will slow down or speed up by the PPM written to bits [8:0]. " id="ATL1_PPMR" offset="0x280" width="32">
    
  <bitfield begin="15" description="1 = Slow down 0 = Speed up" end="15" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="This is the 9-bit parts-per-millon value in the adjusting circuit. PPM adjustment = PPMSET/2^20" end="0" id="" rwaccess="RW" width="9"></bitfield>
  </register>
  
  
  <register acronym="ATL1_BBSR" description=" The measuring circuit produces a 16-bit Sample Count. Its inputs are the Audio IIS Word Select (AWS) and the Baseband IIS Word Select (BWS) from their respective MCASP pins. The sample count is a read-only register. " id="ATL1_BBSR" offset="0x284" width="32">
    
  <bitfield begin="15" description="This is the 16-bit sample count from the measuring circuit" end="0" id="" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="ATL1_ATLCR" description=" The modem Clock Divide Select bit is used during factory calibration of the radio to match latency between the analog and digital signal paths. The ATL Internal Divider divides down the ATL master clock to make ATCLK. " id="ATL1_ATLCR" offset="0x288" width="32">
    
  <bitfield begin="5" description="0: MODCLK = AWS divided by 2^16  1: MODCLK = AWS divided by 2^12" end="5" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Sets ratio of ATLPCLK to ATCLK" end="0" id="" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="ATL1_SWEN" description=" The software enable register is used to enable/disable the ATL. " id="ATL1_SWEN" offset="0x290" width="32">
    
  <bitfield begin="0" description="When disabled the ATL registers are forced to known states for simulation purposes. Runtime startup doesn't require initial values because measurement is relative to an arbitrary initial value. All registers are reset to zero except ATLCR.INT_DIV which is resets to 24 (divide-by-25, because zero is not a legal divide ratio.)" end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ATL1_BWSMUX" description=" The Baseband IIS Word Select mux select control register " id="ATL1_BWSMUX" offset="0x294" width="32">
    
  <bitfield begin="3" description="BWS input select:   0000: atl_io_port_bws[0]   0001: atl_io_port_bws[1]   0010: atl_io_port_bws[2]   0011: atl_io_port_bws[3]   0100: atl_io_port_bws[4]   0101: atl_io_port_bws[5]   0110: atl_io_port_bws[6]   0111: atl_io_port_bws[7]   1000: atl_io_port_bws[8]   1001: atl_io_port_bws[9]   1010: atl_io_port_bws[10]   1011: atl_io_port_bws[11]   1100: atl_io_port_bws[12]   1101: atl_io_port_bws[13]   1110: atl_io_port_bws[14]   1111: atl_io_port_bws[15]" end="0" id="" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="ATL1_AWSMUX" description=" The Audio IIS Word Select mux select control register " id="ATL1_AWSMUX" offset="0x298" width="32">
    
  <bitfield begin="3" description="AWS input select:   0000: atl_io_port_aws[0]   0001: atl_io_port_aws[1]   0010: atl_io_port_aws[2]   0011: atl_io_port_aws[3]   0100: atl_io_port_aws[4]   0101: atl_io_port_aws[5]   0110: atl_io_port_aws[6]   0111: atl_io_port_aws[7]   1000: atl_io_port_aws[8]   1001: atl_io_port_aws[9]   1010: atl_io_port_aws[10]   1011: atl_io_port_aws[11]   1100: atl_io_port_aws[12]   1101: atl_io_port_aws[13]   1110: atl_io_port_aws[14]   1111: atl_io_port_aws[15]" end="0" id="" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="ATL1_PCLKMUX" description=" ATL core input clock mux select control register " id="ATL1_PCLKMUX" offset="0x29C" width="32">
    
  <bitfield begin="0" description="ATL core clock select:   0: vbus_clk  1: atl_clk" end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ATL2_PPMR" description=" The PPM register is used by the Audio re-timing code. The DAC over-sampling clock will slow down or speed up by the PPM written to bits [8:0]. " id="ATL2_PPMR" offset="0x300" width="32">
    
  <bitfield begin="15" description="1 = Slow down 0 = Speed up" end="15" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="This is the 9-bit parts-per-millon value in the adjusting circuit. PPM adjustment = PPMSET/2^20" end="0" id="" rwaccess="RW" width="9"></bitfield>
  </register>
  
  
  <register acronym="ATL2_BBSR" description=" The measuring circuit produces a 16-bit Sample Count. Its inputs are the Audio IIS Word Select (AWS) and the Baseband IIS Word Select (BWS) from their respective MCASP pins. The sample count is a read-only register. " id="ATL2_BBSR" offset="0x304" width="32">
    
  <bitfield begin="15" description="This is the 16-bit sample count from the measuring circuit" end="0" id="" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="ATL2_ATLCR" description=" The modem Clock Divide Select bit is used during factory calibration of the radio to match latency between the analog and digital signal paths. The ATL Internal Divider divides down the ATL master clock to make ATCLK. " id="ATL2_ATLCR" offset="0x308" width="32">
    
  <bitfield begin="5" description="0: MODCLK = AWS divided by 2^16  1: MODCLK = AWS divided by 2^12" end="5" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Sets ratio of ATLPCLK to ATCLK" end="0" id="" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="ATL2_SWEN" description=" The software enable register is used to enable/disable the ATL. " id="ATL2_SWEN" offset="0x310" width="32">
    
  <bitfield begin="0" description="When disabled the ATL registers are forced to known states for simulation purposes. Runtime startup doesn't require initial values because measurement is relative to an arbitrary initial value. All registers are reset to zero except ATLCR.INT_DIV which is resets to 24 (divide-by-25, because zero is not a legal divide ratio.)" end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ATL2_BWSMUX" description=" The Baseband IIS Word Select mux select control register " id="ATL2_BWSMUX" offset="0x314" width="32">
    
  <bitfield begin="3" description="BWS input select:   0000: atl_io_port_bws[0]   0001: atl_io_port_bws[1]   0010: atl_io_port_bws[2]   0011: atl_io_port_bws[3]   0100: atl_io_port_bws[4]   0101: atl_io_port_bws[5]   0110: atl_io_port_bws[6]   0111: atl_io_port_bws[7]   1000: atl_io_port_bws[8]   1001: atl_io_port_bws[9]   1010: atl_io_port_bws[10]   1011: atl_io_port_bws[11]   1100: atl_io_port_bws[12]   1101: atl_io_port_bws[13]   1110: atl_io_port_bws[14]   1111: atl_io_port_bws[15]" end="0" id="" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="ATL2_AWSMUX" description=" The Audio IIS Word Select mux select control register " id="ATL2_AWSMUX" offset="0x318" width="32">
    
  <bitfield begin="3" description="AWS input select:   0000: atl_io_port_aws[0]   0001: atl_io_port_aws[1]   0010: atl_io_port_aws[2]   0011: atl_io_port_aws[3]   0100: atl_io_port_aws[4]   0101: atl_io_port_aws[5]   0110: atl_io_port_aws[6]   0111: atl_io_port_aws[7]   1000: atl_io_port_aws[8]   1001: atl_io_port_aws[9]   1010: atl_io_port_aws[10]   1011: atl_io_port_aws[11]   1100: atl_io_port_aws[12]   1101: atl_io_port_aws[13]   1110: atl_io_port_aws[14]   1111: atl_io_port_aws[15]" end="0" id="" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="ATL2_PCLKMUX" description=" ATL core input clock mux select control register " id="ATL2_PCLKMUX" offset="0x31C" width="32">
    
  <bitfield begin="0" description="ATL core clock select:   0: vbus_clk  1: atl_clk" end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ATL3_PPMR" description=" The PPM register is used by the Audio re-timing code. The DAC over-sampling clock will slow down or speed up by the PPM written to bits [8:0]. " id="ATL3_PPMR" offset="0x380" width="32">
    
  <bitfield begin="15" description="1 = Slow down 0 = Speed up" end="15" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="This is the 9-bit parts-per-millon value in the adjusting circuit. PPM adjustment = PPMSET/2^20" end="0" id="" rwaccess="RW" width="9"></bitfield>
  </register>
  
  
  <register acronym="ATL3_BBSR" description=" The measuring circuit produces a 16-bit Sample Count. Its inputs are the Audio IIS Word Select (AWS) and the Baseband IIS Word Select (BWS) from their respective MCASP pins. The sample count is a read-only register. " id="ATL3_BBSR" offset="0x384" width="32">
    
  <bitfield begin="15" description="This is the 16-bit sample count from the measuring circuit" end="0" id="" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="ATL3_ATLCR" description=" The modem Clock Divide Select bit is used during factory calibration of the radio to match latency between the analog and digital signal paths. The ATL Internal Divider divides down the ATL master clock to make ATCLK. " id="ATL3_ATLCR" offset="0x388" width="32">
    
  <bitfield begin="5" description="0: MODCLK = AWS divided by 2^16  1: MODCLK = AWS divided by 2^12" end="5" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Sets ratio of ATLPCLK to ATCLK" end="0" id="" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="ATL3_SWEN" description=" The software enable register is used to enable/disable the ATL. " id="ATL3_SWEN" offset="0x390" width="32">
    
  <bitfield begin="0" description="When disabled the ATL registers are forced to known states for simulation purposes. Runtime startup doesn't require initial values because measurement is relative to an arbitrary initial value. All registers are reset to zero except ATLCR.INT_DIV which is resets to 24 (divide-by-25, because zero is not a legal divide ratio.)" end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ATL3_BWSMUX" description=" The Baseband IIS Word Select mux select control register " id="ATL3_BWSMUX" offset="0x394" width="32">
    
  <bitfield begin="3" description="BWS input select:   0000: atl_io_port_bws[0]   0001: atl_io_port_bws[1]   0010: atl_io_port_bws[2]   0011: atl_io_port_bws[3]   0100: atl_io_port_bws[4]   0101: atl_io_port_bws[5]   0110: atl_io_port_bws[6]   0111: atl_io_port_bws[7]   1000: atl_io_port_bws[8]   1001: atl_io_port_bws[9]   1010: atl_io_port_bws[10]   1011: atl_io_port_bws[11]   1100: atl_io_port_bws[12]   1101: atl_io_port_bws[13]   1110: atl_io_port_bws[14]   1111: atl_io_port_bws[15]" end="0" id="" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="ATL3_AWSMUX" description=" The Audio IIS Word Select mux select control register " id="ATL3_AWSMUX" offset="0x398" width="32">
    
  <bitfield begin="3" description="AWS input select:   0000: atl_io_port_aws[0]   0001: atl_io_port_aws[1]   0010: atl_io_port_aws[2]   0011: atl_io_port_aws[3]   0100: atl_io_port_aws[4]   0101: atl_io_port_aws[5]   0110: atl_io_port_aws[6]   0111: atl_io_port_aws[7]   1000: atl_io_port_aws[8]   1001: atl_io_port_aws[9]   1010: atl_io_port_aws[10]   1011: atl_io_port_aws[11]   1100: atl_io_port_aws[12]   1101: atl_io_port_aws[13]   1110: atl_io_port_aws[14]   1111: atl_io_port_aws[15]" end="0" id="" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="ATL3_PCLKMUX" description=" ATL core input clock mux select control register " id="ATL3_PCLKMUX" offset="0x39C" width="32">
    
  <bitfield begin="0" description="ATL core clock select:   0: vbus_clk  1: atl_clk" end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
</module>
