<module name="IPU1_MMU_IPU1" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="MMU_REVISION" acronym="MMU_REVISION" offset="0x0" width="32" description="This register contains the IP revision code">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="See" description="IP Revision" range="" rwaccess="R"/>
  </register>
  <register id="MMU_SYSCONFIG" acronym="MMU_SYSCONFIG" offset="0x10" width="32" description="This register controls the various parameters of the OCP interface">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
    <bitfield id="CLOCKACTIVITY" width="2" begin="9" end="8" resetval="0x0" description="Clock activity during wake-up mode" range="" rwaccess="R">
      <bitenum value="0" id="OCP_0" token="CLOCKACTIVITY_0" description="Functional and OCP clocks can be switched off"/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="Write 0's for future compatibility Reads returns 0" range="" rwaccess="R"/>
    <bitfield id="IDLEMODE" width="2" begin="4" end="3" resetval="0x0" description="Idle mode" range="" rwaccess="RW">
      <bitenum value="0" id="SFIDLE" token="IDLEMODE_0" description="Force-idle. An idle request is acknowledged unconditionally"/>
      <bitenum value="1" id="SNIDLE" token="IDLEMODE_1" description="No-idle. An idle request is never acknowledged"/>
      <bitenum value="2" id="SSIDLE" token="IDLEMODE_2" description="Smart-idle. Acknowledgement to an idle request is given based on the internal activity of the module"/>
      <bitenum value="3" id="RES" token="IDLEMODE_3" description="Reserved. Do not use"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="2" end="2" resetval="0x0" description="Write 0's for future compatibility Reads returns 0" range="" rwaccess="R"/>
    <bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0x0" description="Software reset. This bit is automatically reset by the hardware. During reads, it always return 0" range="" rwaccess="W">
      <bitenum value="0" id="NOFUN_W" token="SOFTRESET_0_w" description="No functional effect"/>
      <bitenum value="1" id="RSTMODE_W" token="SOFTRESET_1_w" description="The module is reset"/>
    </bitfield>
    <bitfield id="AUTOIDLE" width="1" begin="0" end="0" resetval="0x0" description="Internal OCP clock gating strategy" range="" rwaccess="RW">
      <bitenum value="0" id="CLKFREE" token="AUTOIDLE_0" description="OCP clock is free-running"/>
      <bitenum value="1" id="AUTOCLKGATE" token="AUTOIDLE_1" description="Automatic interconnect clock gating strategy is applied, based on the interconnect interface activity"/>
    </bitfield>
  </register>
  <register id="MMU_SYSSTATUS" acronym="MMU_SYSSTATUS" offset="0x14" width="32" description="This register provides status information about the module, excluding the interrupt status information">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x000000" description="Reads returns 0" range="" rwaccess="R"/>
    <bitfield id="RESETDONE" width="1" begin="0" end="0" resetval="-" description="Internal reset monitoring" range="" rwaccess="R">
      <bitenum value="0" id="RSTONGOING" token="RESETDONE_0_r" description="Internal module reset in on-going"/>
      <bitenum value="1" id="RSTCOMP" token="RESETDONE_1_r" description="Reset completed"/>
    </bitfield>
  </register>
  <register id="MMU_IRQSTATUS" acronym="MMU_IRQSTATUS" offset="0x18" width="32" description="This interrupt status register regroups all the status of the module internal events that can generate an interrupt.">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0000000" description="Write 0's for future compatibility. Read returns 0" range="" rwaccess="R"/>
    <bitfield id="MULTIHITFAULT" width="1" begin="4" end="4" resetval="0x0" description="Error due to multiple matches in the TLB" range="" rwaccess="RW (W1toClr)">
      <bitenum value="0" id="NMHF_R" token="MULTIHITFAULT_0_r" description="MultiHitFault false"/>
      <bitenum value="0" id="MHFSTAT_W" token="MULTIHITFAULT_0_w" description="MultiHitFault status bit unchanged"/>
      <bitenum value="1" id="RMHFSTAT_W" token="MULTIHITFAULT_1_w" description="MultiHitFault status bit is reset"/>
      <bitenum value="1" id="MHF_R" token="MULTIHITFAULT_1_r" description="MultiHitFault is true ('pending')"/>
    </bitfield>
    <bitfield id="TABLEWALKFAULT" width="1" begin="3" end="3" resetval="0x0" description="Error response received during a Table Walk" range="" rwaccess="RW (W1toClr)">
      <bitenum value="0" id="NTWF_R" token="TABLEWALKFAULT_0_r" description="TableWalkFault false"/>
      <bitenum value="0" id="TWFSTAT_W" token="TABLEWALKFAULT_0_w" description="TableWalkFault status bit unchanged"/>
      <bitenum value="1" id="RTWFSTAT_W" token="TABLEWALKFAULT_1_w" description="TableWalkFault status bit is reset"/>
      <bitenum value="1" id="TWF_R" token="TABLEWALKFAULT_1_r" description="TableWalkFault is true ('pending')"/>
    </bitfield>
    <bitfield id="EMUMISS" width="1" begin="2" end="2" resetval="0x0" description="Unrecoverable TLB miss during debug (hardware TWL disabled)" range="" rwaccess="RW (W1toClr)">
      <bitenum value="0" id="NEMUM_R" token="EMUMISS_0_r" description="EMUMiss false"/>
      <bitenum value="0" id="ESTAT_W" token="EMUMISS_0_w" description="EMUMiss status bit unchanged"/>
      <bitenum value="1" id="RESTAT_W" token="EMUMISS_1_w" description="EMUMiss status bit is reset"/>
      <bitenum value="1" id="EMUM_R" token="EMUMISS_1_r" description="EMUMiss is true ('pending')"/>
    </bitfield>
    <bitfield id="TRANSLATIONFAULT" width="1" begin="1" end="1" resetval="0x0" description="Invalid descriptor in translation tables (translation fault)" range="" rwaccess="RW (W1toClr)">
      <bitenum value="0" id="NFAULT_R" token="TRANSLATIONFAULT_0_r" description="TranslationFault false"/>
      <bitenum value="0" id="FSTAT_W" token="TRANSLATIONFAULT_0_w" description="TranslationFault status bit unchanged"/>
      <bitenum value="1" id="RFSTAT_W" token="TRANSLATIONFAULT_1_w" description="TranslationFault status bit is reset"/>
      <bitenum value="1" id="FAULT_R" token="TRANSLATIONFAULT_1_r" description="TranslationFault is true ('pending')"/>
    </bitfield>
    <bitfield id="TLBMISS" width="1" begin="0" end="0" resetval="0x0" description="Unrecoverable TLB miss (hardware TWL disabled)" range="" rwaccess="RW (W1toClr)">
      <bitenum value="0" id="NTLBM_R" token="TLBMISS_0_r" description="TLBMiss false"/>
      <bitenum value="0" id="MSTAT_W" token="TLBMISS_0_w" description="TLBMiss status bit unchanged"/>
      <bitenum value="1" id="RMSTAT_W" token="TLBMISS_1_w" description="TLBMiss status bit is reset"/>
      <bitenum value="1" id="TLBM_R" token="TLBMISS_1_r" description="TLBMiss is true ('pending')"/>
    </bitfield>
  </register>
  <register id="MMU_IRQENABLE" acronym="MMU_IRQENABLE" offset="0x1C" width="32" description="The interrupt enable register allows to mask/unmask the module internal sources of interrupt, on a event-by-event basis.">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0000000" description="Write 0's for future compatibility Read returns 0" range="" rwaccess="R"/>
    <bitfield id="MULTIHITFAULT" width="1" begin="4" end="4" resetval="0x0" description="Error due to multiple matches in the TLB" range="" rwaccess="RW">
      <bitenum value="0" id="MHFLTMASK" token="MULTIHITFAULT_0" description="MultiHitFault is masked"/>
      <bitenum value="1" id="MHFLTGINT" token="MULTIHITFAULT_1" description="MultiHitFault event generates an interrupt if occurs"/>
    </bitfield>
    <bitfield id="TABLEWALKFAULT" width="1" begin="3" end="3" resetval="0x0" description="Error response received during a Table Walk" range="" rwaccess="RW">
      <bitenum value="0" id="TWLFLTMASK" token="TABLEWALKFAULT_0" description="TableWalkFault is masked"/>
      <bitenum value="1" id="TWLFLTGINT" token="TABLEWALKFAULT_1" description="TableWalkFault event generates an interrupt if occurs"/>
    </bitfield>
    <bitfield id="EMUMISS" width="1" begin="2" end="2" resetval="0x0" description="Unrecoverable TLB miss during debug (hardware TWL disabled)" range="" rwaccess="RW">
      <bitenum value="0" id="EMUMFLTMASK" token="EMUMISS_0" description="EMUMiss interrupt is masked"/>
      <bitenum value="1" id="EMUMFLTGINT" token="EMUMISS_1" description="EMUMiss event generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="TRANSLATIONFAULT" width="1" begin="1" end="1" resetval="0x0" description="Invalid descriptor in translation tables (translation fault)" range="" rwaccess="RW">
      <bitenum value="0" id="TRANFLTMASK" token="TRANSLATIONFAULT_0" description="TranslationFault is masked"/>
      <bitenum value="1" id="TRANFLTGINT" token="TRANSLATIONFAULT_1" description="TranslationFault event generates an interrupt if occurs"/>
    </bitfield>
    <bitfield id="TLBMISS" width="1" begin="0" end="0" resetval="0x0" description="Unrecoverable TLB miss (hardware TWL disabled)" range="" rwaccess="RW">
      <bitenum value="0" id="TRMISSINTM" token="TLBMISS_0" description="TLBMiss interrupt is masked"/>
      <bitenum value="1" id="TRMISSGINT" token="TLBMISS_1" description="TLBMiss event generates an interrupt when if occurs"/>
    </bitfield>
  </register>
  <register id="MMU_WALKING_ST" acronym="MMU_WALKING_ST" offset="0x40" width="32" description="This register provides status information about the table walking logic">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Reads return 0" range="" rwaccess="R"/>
    <bitfield id="TWLRUNNING" width="1" begin="0" end="0" resetval="0x0" description="Table Walking Logic is running" range="" rwaccess="R">
      <bitenum value="0" id="TWLCOMP" token="TWLRUNNING_0_r" description="TWL Completed"/>
      <bitenum value="1" id="TWLRUN" token="TWLRUNNING_1_r" description="TWL Running"/>
    </bitfield>
  </register>
  <register id="MMU_CNTL" acronym="MMU_CNTL" offset="0x44" width="32" description="This register programs the MMU features">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
    <bitfield id="EMUTLBUPDATE" width="1" begin="3" end="3" resetval="0x0" description="Enable TLB update on emulator table walk" range="" rwaccess="RW">
      <bitenum value="0" id="EMUDIS" token="EMUTLBUPDATE_0" description="Emulator TLB update disabled"/>
      <bitenum value="1" id="EMUEN" token="EMUTLBUPDATE_1" description="Emulator TLB update enabled"/>
    </bitfield>
    <bitfield id="TWLENABLE" width="1" begin="2" end="2" resetval="0x0" description="Table Walking Logic enable" range="" rwaccess="RW">
      <bitenum value="0" id="TWLDIS" token="TWLENABLE_0" description="TWL disabled"/>
      <bitenum value="1" id="TWLEN" token="TWLENABLE_1" description="TWL enabled"/>
    </bitfield>
    <bitfield id="MMUENABLE" width="1" begin="1" end="1" resetval="0x0" description="MMU enable" range="" rwaccess="RW">
      <bitenum value="0" id="MMUDIS" token="MMUENABLE_0" description="MMU disabled"/>
      <bitenum value="1" id="MMUEN" token="MMUENABLE_1" description="MMU enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0x0" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
  </register>
  <register id="MMU_FAULT_AD" acronym="MMU_FAULT_AD" offset="0x48" width="32" description="This register contains the virtual address that generated the interrupt">
    <bitfield id="FAULTADDRESS" width="32" begin="31" end="0" resetval="0x0000 0000" description="Virtual address of the access that generated a fault" range="" rwaccess="R"/>
  </register>
  <register id="MMU_TTB" acronym="MMU_TTB" offset="0x4C" width="32" description="This register contains the Translation Table Base address">
    <bitfield id="TTBADDRESS" width="25" begin="31" end="7" resetval="0x0000000" description="Translation Table Base Address" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="7" begin="6" end="0" resetval="0x00" description="Write 0's for future compatibility. Reads retiurn 0" range="" rwaccess="R"/>
  </register>
  <register id="MMU_LOCK" acronym="MMU_LOCK" offset="0x50" width="32" description="This register locks some of the TLB entries">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x00000" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
    <bitfield id="BASEVALUE" width="5" begin="14" end="10" resetval="0x00" description="Locked entries base value." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="9" end="9" resetval="0x0" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
    <bitfield id="CURRENTVICTIM" width="5" begin="8" end="4" resetval="0x00" description="Current entry to be updated either by the TWL or by the software." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
  </register>
  <register id="MMU_LD_TLB" acronym="MMU_LD_TLB" offset="0x54" width="32" description="This register loads a TLB entry (CAM+RAM)">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
    <bitfield id="LDTLBITEM" width="1" begin="0" end="0" resetval="0x0" description="Write (load) data in the TLB. Reads return 0." range="" rwaccess="W">
      <bitenum value="0" id="NOEFFECT_W" token="LDTLBITEM_0_w" description="No functional effect"/>
      <bitenum value="1" id="LDTLB_W" token="LDTLBITEM_1_w" description="Load TLB data"/>
    </bitfield>
  </register>
  <register id="MMU_CAM" acronym="MMU_CAM" offset="0x58" width="32" description="This register holds a CAM entry">
    <bitfield id="VATAG" width="20" begin="31" end="12" resetval="0x00000" description="Virtual address tag" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="11" end="4" resetval="0x00" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
    <bitfield id="P" width="1" begin="3" end="3" resetval="0x0" description="Preserved bit" range="" rwaccess="RW">
      <bitenum value="0" id="CANFLUSH" token="P_0" description="TLB entry may be flushed"/>
      <bitenum value="1" id="NOFLUSH" token="P_1" description="TLB entry is protected against flush"/>
    </bitfield>
    <bitfield id="V" width="1" begin="2" end="2" resetval="0x0" description="Valid bit" range="" rwaccess="RW">
      <bitenum value="0" id="INVALID" token="V_0" description="TLB entry is invalid"/>
      <bitenum value="1" id="VALID" token="V_1" description="TLB entry is valid"/>
    </bitfield>
    <bitfield id="PAGESIZE" width="2" begin="1" end="0" resetval="0x0" description="Page size" range="" rwaccess="RW">
      <bitenum value="0" id="SECTION" token="PAGESIZE_0" description="Section (1 MiB)"/>
      <bitenum value="1" id="LARGE" token="PAGESIZE_1" description="Large page (64 KiB)"/>
      <bitenum value="2" id="SMALL" token="PAGESIZE_2" description="Small page (4 KiB)"/>
      <bitenum value="3" id="SUPER" token="PAGESIZE_3" description="Supersection (16 MiB)"/>
    </bitfield>
  </register>
  <register id="MMU_RAM" acronym="MMU_RAM" offset="0x5C" width="32" description="This register contains bits [31:12] of the physical address to be written to a TLB entry pointed to by CURRENTVICTIM field of register.">
    <bitfield id="PHYSICALADDRESS" width="20" begin="31" end="12" resetval="0x00000" description="Physical address of the page" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="12" begin="11" end="0" resetval="0x0" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
  </register>
  <register id="MMU_GFLUSH" acronym="MMU_GFLUSH" offset="0x60" width="32" description="This register flushes all the non-protected TLB entries">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
    <bitfield id="GLOBALFLUSH" width="1" begin="0" end="0" resetval="0x0" description="Flush all the non-protected TLB entries when set. Reads return 0." range="" rwaccess="W">
      <bitenum value="0" id="NFT_W" token="GLOBALFLUSH_0_w" description="No functional effect"/>
      <bitenum value="1" id="FLUSH_W" token="GLOBALFLUSH_1_w" description="Flush all the non-protected TLB entries"/>
    </bitfield>
  </register>
  <register id="MMU_FLUSH_ENTRY" acronym="MMU_FLUSH_ENTRY" offset="0x64" width="32" description="This register flushes the entry pointed to by the CAM virtual address">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
    <bitfield id="FLUSHENTRY" width="1" begin="0" end="0" resetval="0x0" description="Flush the TLB entry pointed by the virtual address (VATag) inMMU_CAM register, even if this entry is set protected. Reads return 0." range="" rwaccess="W">
      <bitenum value="0" id="NOFUN_W" token="FLUSHENTRY_0_w" description="No functional effect"/>
      <bitenum value="1" id="FLUSHTLB_W" token="FLUSHENTRY_1_w" description="Flush all the TLB entries specified by the CAM register"/>
    </bitfield>
  </register>
  <register id="MMU_READ_CAM" acronym="MMU_READ_CAM" offset="0x68" width="32" description="This register reads CAM data from a CAM entry">
    <bitfield id="VATAG" width="20" begin="31" end="12" resetval="0x00000" description="Virtual address tag" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="8" begin="11" end="4" resetval="0x00" description="Reads return 0" range="" rwaccess="R"/>
    <bitfield id="P" width="1" begin="3" end="3" resetval="0x0" description="Preserved bit" range="" rwaccess="R">
      <bitenum value="0" id="CANFLUSH" token="P_0_r" description="TLB entry may be flushed"/>
      <bitenum value="1" id="NOFLUSH" token="P_1_r" description="TLB entry is protected against flush"/>
    </bitfield>
    <bitfield id="V" width="1" begin="2" end="2" resetval="0x0" description="Valid bit" range="" rwaccess="R">
      <bitenum value="0" id="INVALID" token="V_0_r" description="TLB entry is invalid"/>
      <bitenum value="1" id="VALID" token="V_1_r" description="TLB entry is valid"/>
    </bitfield>
    <bitfield id="PAGESIZE" width="2" begin="1" end="0" resetval="0x0" description="Page size" range="" rwaccess="R">
      <bitenum value="0" id="SECTION" token="PAGESIZE_0_r" description="Section (1 MiB)"/>
      <bitenum value="1" id="LARGE" token="PAGESIZE_1_r" description="Large page (64 KiB)"/>
      <bitenum value="2" id="SMALL" token="PAGESIZE_2_r" description="Small page (4 KiB)"/>
      <bitenum value="3" id="SUPER" token="PAGESIZE_3_r" description="Supersection (16 MiB)"/>
    </bitfield>
  </register>
  <register id="MMU_READ_RAM" acronym="MMU_READ_RAM" offset="0x6C" width="32" description="This register reads bits [31:12] of the physical address from the TLB entry pointed to by CURRENTVICTIM field of the register.">
    <bitfield id="PHYSICALADDRESS" width="20" begin="31" end="12" resetval="0x00000" description="Physical address of the page" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="12" begin="11" end="0" resetval="0x0" description="Reads return 0" range="" rwaccess="R"/>
  </register>
  <register id="MMU_EMU_FAULT_AD" acronym="MMU_EMU_FAULT_AD" offset="0x70" width="32" description="This register contains the last virtual address of a fault caused by the debugger">
    <bitfield id="EMUFAULTADDRESS" width="32" begin="31" end="0" resetval="0x0000 0000" description="Virtual address of the last emulator access that generated a fault" range="" rwaccess="R"/>
  </register>
  <register id="MMU_FAULT_PC" acronym="MMU_FAULT_PC" offset="0x80" width="32" description="Typically CPU program counter value of instruction generating MMU fault. The address value is captured at [31:0] EMUFAULTADDRESS. Data-Read-access : corresponding PC. Data-write-access : not perfect accuracy due to posted-write.">
    <bitfield id="PC" width="32" begin="31" end="0" resetval="0x0000 0000" description="Typically CPU program counter value of instruction generating MMU fault" range="" rwaccess="R"/>
  </register>
  <register id="MMU_FAULT_STATUS" acronym="MMU_FAULT_STATUS" offset="0x84" width="32" description="Fault status register">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MMU_FAULT_TRANS_ID" width="5" begin="8" end="4" resetval="0x0" description="MtagID of the transaction that caused fault" range="" rwaccess="R"/>
    <bitfield id="RD_WR" width="1" begin="3" end="3" resetval="0x0" description="Indicates read or write" range="" rwaccess="R">
      <bitenum value="0" id="WRITE" token="RD_WR_0" description="Write"/>
      <bitenum value="1" id="READ" token="RD_WR_1" description="Read"/>
    </bitfield>
    <bitfield id="MMU_FAULT_TYPE" width="2" begin="2" end="1" resetval="0x0" description="MReqInfo[1:0] is captured as fault type" range="" rwaccess="R"/>
    <bitfield id="FAULTINDICATION" width="1" begin="0" end="0" resetval="0x0" description="Indicates an MMU fault" range="" rwaccess="RW (W1toClr)"/>
  </register>
  <register id="MMU_GPR" acronym="MMU_GPR" offset="0x88" width="32" description="General purpose register">
    <bitfield id="GPO" width="16" begin="31" end="16" resetval="0x0000" description="General purpose output sent out as MMU output" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="15" begin="15" end="1" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="FAULT_INTR_DIS" width="1" begin="0" end="0" resetval="0x0" description="Disable generation of interrupt on fault. Error response is returned instead on the slave port" range="" rwaccess="RW"/>
  </register>
</module>
