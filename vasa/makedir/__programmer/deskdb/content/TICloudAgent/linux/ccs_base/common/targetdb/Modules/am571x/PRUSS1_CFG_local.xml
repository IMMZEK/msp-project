<module name="PRUSS1_CFG" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="PRUSS_REVID" acronym="PRUSS_REVID" offset="0x0" page="2" width="32" description="The Revision Register contains the ID and revision information.">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="0x-" description="IP Revision" range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_SYSCFG" acronym="PRUSS_SYSCFG" offset="0x4" page="2" width="32" description="The System Configuration Register defines the power IDLE and STANDBY modes.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SUB_MWAIT" width="1" begin="5" end="5" resetval="0x0" description="Status bit for wait state. 0x0 = Ready for Transaction 0x1 = Wait until 0" range="" rwaccess="R"/>
    <bitfield id="STANDBY_INIT" width="1" begin="4" end="4" resetval="0x1" description="0x1 = Initiate standby sequence. 0x0 = Enable OCP master ports." range="" rwaccess="RW"/>
    <bitfield id="STANDBY_MODE" width="2" begin="3" end="2" resetval="0x2" description="0x0 = Force standby mode: Initiator unconditionally in standby (standby = 1) 0x1 = No standby mode: Initiator unconditionally out of standby (standby = 0) 0x2 = Smart standby mode: Standby requested by initiator depending on internal conditions 0x3 = Reserved" range="" rwaccess="RW"/>
    <bitfield id="IDLE_MODE" width="2" begin="1" end="0" resetval="0x2" description="0x0 = Force-idle mode 0x1 = No-idle mode 0x2 = Smart-idle mode 0x3 = Reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_GPCFG0" acronym="PRUSS_GPCFG0" offset="0x8" page="2" width="32" description="The General Purpose Configuration 0 Register defines the GPIO configuration for PRU0.">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PR1_PRU0_GP_MUX_SEL" width="4" begin="29" end="26" resetval="0x0" description="Controls the icss_wrap mux select" range="" rwaccess="R/W"/>
    <bitfield id="PRU0_GPO_SH_SEL" width="1" begin="25" end="25" resetval="0x0" description="Defines which shadow register is currently getting used for GPO shifting. 0x0 = gpo_sh0 is selected 0x1 = gpo_sh1 is selected" range="" rwaccess="R"/>
    <bitfield id="PRU0_GPO_DIV1" width="5" begin="24" end="20" resetval="0x0" description="Divisor value (divide by PRU0_GPO_DIV1 + 1). 0x00 = div 1.0 0x01 = div 1.5 0x02 = div 2.0 .. 0x1e = div 16.0 0x1f = reserved" range="" rwaccess="RW"/>
    <bitfield id="PRU0_GPO_DIV0" width="5" begin="19" end="15" resetval="0x0" description="Divisor value (divide by PRU0_GPO_DIV0 + 1). 0x00 = div 1.0 0x01 = div 1.5 0x02 = div 2.0 .. 0x1e = div 16.0 0x1f = reserved" range="" rwaccess="RW"/>
    <bitfield id="PRU0_GPO_MODE" width="1" begin="14" end="14" resetval="0x0" description="0x0 = Direct output mode 0x1 = Serial output mode" range="" rwaccess="RW"/>
    <bitfield id="PRU0_GPI_SB" width="1" begin="13" end="13" resetval="0x0" description="Start Bit event for 28-bit shift mode. PRU0_GPI_SB (pru0_r31_status[29]) is set when first capture of a 1 on pru0_r31_status[0]. Read 1: Start Bit event occurred. Read 0: Start Bit event has not occurred. Write 1: Will clear PRU0_GPI_SB and clear the whole shift register. Write 0: No Effect." range="" rwaccess="RW"/>
    <bitfield id="PRU0_GPI_DIV1" width="5" begin="12" end="8" resetval="0x0" description="Divisor value (divide by PRU0_GPI_DIV1 + 1). 0x00 = div 1.0 0x01 = div 1.5 0x02 = div 2.0 .. 0x1e = div 16.0 0x1f = reserved" range="" rwaccess="RW"/>
    <bitfield id="PRU0_GPI_DIV0" width="5" begin="7" end="3" resetval="0x0" description="Divisor value (divide by PRU0_GPI_DIV0 + 1). 0x00 = div 1.0 0x01 = div 1.5 0x02 = div 2.0 .. 0x1e = div 16.0 0x1f = reserved" range="" rwaccess="RW"/>
    <bitfield id="PRU0_GPI_CLK_MODE" width="1" begin="2" end="2" resetval="0x0" description="Parallel 16-bit capture mode clock edge. 0x0 = Use the positive edge of pru0_r31_status[16] 0x1 = Use the negative edge of pru0_r31_status[16]" range="" rwaccess="RW"/>
    <bitfield id="PRU0_GPI_MODE" width="2" begin="1" end="0" resetval="0x0" description="0x0 = Direct input mode 0x1 = 16-bit parallel capture mode 0x2 = 28-bit shift mode 0x3 = MII_RT mode" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_GPCFG1" acronym="PRUSS_GPCFG1" offset="0xC" page="2" width="32" description="The General Purpose Configuration 1 Register defines the GPI O configuration for PRU1.">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PR1_PRU1_GP_MUX_SEL" width="4" begin="29" end="26" resetval="0x0" description="Controls the icss_wrap mux select" range="" rwaccess="R/W"/>
    <bitfield id="PRU1_GPO_SH_SEL" width="1" begin="25" end="25" resetval="0x0" description="Defines which shadow register is currently getting used for GPO shifting. 0x0 = gpo_sh0 is selected 0x1 = gpo_sh1 is selected" range="" rwaccess="R"/>
    <bitfield id="PRU1_GPO_DIV1" width="5" begin="24" end="20" resetval="0x0" description="Divisor value (divide by PRU1_GPO_DIV1 + 1). 0x00 = div 1.0 0x01 = div 1.5 0x02 = div 2.0 .. 0x1e = div 16.0 0x1f = reserved" range="" rwaccess="RW"/>
    <bitfield id="PRU1_GPO_DIV0" width="5" begin="19" end="15" resetval="0x0" description="Divisor value (divide by PRU1_GPO_DIV0 + 1). 0x00 = div 1.0 0x01 = div 1.5 0x02 = div 2.0 .. 0x1e = div 16.0 0x1f = reserved" range="" rwaccess="RW"/>
    <bitfield id="PRU1_GPO_MODE" width="1" begin="14" end="14" resetval="0x0" description="0x0 = Direct output mode 0x1 = Serial output mode" range="" rwaccess="RW"/>
    <bitfield id="PRU1_GPI_SB" width="1" begin="13" end="13" resetval="0x0" description="28-bit shift mode Start Bit event. PRU1_GPI_SB (pru1_r31_status[29]) is set when first capture of a 1 on pru1_r31_status[0]. Read 1: Start Bit event occurred. Read 0: Start Bit event has not occurred. Write 1: Will clear PRU1_GPI_SB and clear the whole shift register. Write 0: No Effect." range="" rwaccess="RW"/>
    <bitfield id="PRU1_GPI_DIV1" width="5" begin="12" end="8" resetval="0x0" description="Divisor value (divide by PRU1_GPI_DIV1 + 1). 0x00 = div 1.0 0x01 = div 1.5 0x02 = div 2.0 .. 0x1e = div 16.0 0x1f = reserved" range="" rwaccess="RW"/>
    <bitfield id="PRU1_GPI_DIV0" width="5" begin="7" end="3" resetval="0x0" description="Divisor value (divide by PRU1_GPI_DIV0 + 1). 0x00 = div 1.0 0x01 = div 1.5 0x02 = div 2.0 .. 0x1e = div 16.0 0x1f = reserved" range="" rwaccess="RW"/>
    <bitfield id="PRU1_GPI_CLK_MODE" width="1" begin="2" end="2" resetval="0x0" description="Parallel 16-bit capture mode clock edge. 0x0 = Use the positive edge of pru1_r31_status[16] 0x1 = Use the negative edge of pru1_r31_status[16]" range="" rwaccess="RW"/>
    <bitfield id="PRU1_GPI_MODE" width="2" begin="1" end="0" resetval="0x0" description="0x0 = Direct input mode 0x1 = 16-bit parallel capture mode 0x2 = 28-bit shift mode 0x3 = MII_RT mode" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_CGR" acronym="PRUSS_CGR" offset="0x10" page="2" width="32" description="The Clock Gating Register controls the state of Clock Management of the different modules. Software should not clear {module}_CLK_EN until {module}_CLK_STOP_ACK is 0x1.">
    <bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IEP_CLK_EN" width="1" begin="17" end="17" resetval="0x1" description="IEP clock enable. 0x0 = Disable Clock 0x1 = Enable Clock" range="" rwaccess="RW"/>
    <bitfield id="IEP_CLK_STOP_ACK" width="1" begin="16" end="16" resetval="0x0" description="Acknowledgement that IEP clock can be stopped. 0x0 = Not Ready to Gate Clock 0x1 = Ready to Gate Clock" range="" rwaccess="R"/>
    <bitfield id="IEP_CLK_STOP_REQ" width="1" begin="15" end="15" resetval="0x0" description="IEP request to stop clock. 0x0 = do not request to stop Clock 0x1 = request to stop Clock" range="" rwaccess="RW"/>
    <bitfield id="ECAP_CLK_EN" width="1" begin="14" end="14" resetval="0x1" description="ECAP clock enable. 0x0 = Disable Clock 0x1 = Enable Clock" range="" rwaccess="RW"/>
    <bitfield id="ECAP_CLK_STOP_ACK" width="1" begin="13" end="13" resetval="0x0" description="Acknowledgement that ECAP clock can be stopped. 0x0 = Not Ready to Gate Clock 0x1 = Ready to Gate Clock" range="" rwaccess="R"/>
    <bitfield id="ECAP_CLK_STOP_REQ" width="1" begin="12" end="12" resetval="0x0" description="ECAP request to stop clock. 0x0 = do not request to stop Clock 0x1 = request to stop Clock" range="" rwaccess="RW"/>
    <bitfield id="UART_CLK_EN" width="1" begin="11" end="11" resetval="0x1" description="UART clock enable. 0x0 = Disable Clock 0x1 = Enable Clock" range="" rwaccess="RW"/>
    <bitfield id="UART_CLK_STOP_ACK" width="1" begin="10" end="10" resetval="0x0" description="Acknowledgement that UART clock can be stopped. 0x0 = Not Ready to Gate Clock 0x1 = Ready to Gate Clock" range="" rwaccess="R"/>
    <bitfield id="UART_CLK_STOP_REQ" width="1" begin="9" end="9" resetval="0x0" description="UART request to stop clock. 0x0 = do not request to stop Clock 0x1 = request to stop Clock" range="" rwaccess="RW"/>
    <bitfield id="PRUSS_INTC_CLK_EN" width="1" begin="8" end="8" resetval="0x1" description="PRUSS_INTC clock enable. 0x0 = Disable Clock 0x1 = Enable Clock" range="" rwaccess="RW"/>
    <bitfield id="PRUSS_INTC_CLK_STOP_ACK" width="1" begin="7" end="7" resetval="0x0" description="Acknowledgement that PRUSS_INTC clock can be stopped. 0x0 = Not Ready to Gate Clock 0x1 = Ready to Gate Clock" range="" rwaccess="R"/>
    <bitfield id="PRUSS_INTC_CLK_STOP_REQ" width="1" begin="6" end="6" resetval="0x0" description="PRUSS_INTC request to stop clock. 0x0 = do not request to stop Clock 0x1 = request to stop Clock" range="" rwaccess="RW"/>
    <bitfield id="PRU1_CLK_EN" width="1" begin="5" end="5" resetval="0x1" description="PRU1 clock enable. 0x0 = Disable Clock 0x1 = Enable Clock" range="" rwaccess="RW"/>
    <bitfield id="PRU1_CLK_STOP_ACK" width="1" begin="4" end="4" resetval="0x0" description="Acknowledgement that PRU1 clock can be stopped. 0x0 = Not Ready to Gate Clock 0x1 = Ready to Gate Clock" range="" rwaccess="R"/>
    <bitfield id="PRU1_CLK_STOP_REQ" width="1" begin="3" end="3" resetval="0x0" description="PRU1 request to stop clock. 0x0 = do not request to stop Clock 0x1 = request to stop Clock" range="" rwaccess="RW"/>
    <bitfield id="PRU0_CLK_EN" width="1" begin="2" end="2" resetval="0x1" description="PRU0 clock enable. 0x0 = Disable Clock 0x1 = Enable Clock" range="" rwaccess="RW"/>
    <bitfield id="PRU0_CLK_STOP_ACK" width="1" begin="1" end="1" resetval="0x0" description="Acknowledgement that PRU0 clock can be stopped. 0x0 = Not Ready to Gate Clock 0x1 = Ready to Gate Clock" range="" rwaccess="R"/>
    <bitfield id="PRU0_CLK_STOP_REQ" width="1" begin="0" end="0" resetval="0x0" description="PRU0 request to stop clock. 0x0 = do not request to stop Clock 0x1 = request to stop Clock" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ISRP" acronym="PRUSS_ISRP" offset="0x14" page="2" width="32" description="The IRQ Status Raw Parity register is a snapshot of the IRQ raw status for the PRUSS memory parity events. The raw status is set even if the event is not enabled.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="RAM_PE_RAW" width="4" begin="19" end="16" resetval="0x0" description="RAM Parity Error RAW for Byte3, Byte2, Byte1, Byte0. Note RAM_PE_RAW[0] maps to Byte0. Write 0: No action. Read 0: No event pending. Read 1: Event pending. Write 1: Set event (debug)." range="" rwaccess="RW"/>
    <bitfield id="PRU1_DMEM_PE_RAW" width="4" begin="15" end="12" resetval="0x0" description="PRU1 DMEM Parity Error RAW for Byte3, Byte2, Byte1, Byte0. Note PRU1_DMEM_PE_RAW[0] maps to Byte0. Write 0: No action. Read 0: No event pending. Read 1: Event pending. Write 1: Set event (debug)." range="" rwaccess="RW"/>
    <bitfield id="PRU1_IMEM_PE_RAW" width="4" begin="11" end="8" resetval="0x0" description="PRU1 IMEM Parity Error RAW for Byte3, Byte2, Byte1, Byte0. Note PRU1_IMEM_PE_RAW[0] maps to Byte0. Write 0: No action. Read 0: No event pending. Read 1: Event pending. Write 1: Set event (debug)." range="" rwaccess="RW"/>
    <bitfield id="PRU0_DMEM_PE_RAW" width="4" begin="7" end="4" resetval="0x0" description="PRU0 DMEM Parity Error RAW for Byte3, Byte2, Byte1, Byte0. Note PRU0_DMEM_PE_RAW[0] maps to Byte0. Write 0: No action. Read 0: No event pending. Read 1: Event pending. Write 1: Set event (debug)." range="" rwaccess="RW"/>
    <bitfield id="PRU0_IMEM_PE_RAW" width="4" begin="3" end="0" resetval="0x0" description="PRU0 IMEM Parity Error RAW for Byte3, Byte2, Byte1, Byte0. Note PRU0_IRAM_PE_RAW[0] maps to Byte0. Write 0: No action. Read 0: No event pending. Read 1: Event pending. Write 1: Set event (debug)." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ISP" acronym="PRUSS_ISP" offset="0x18" page="2" width="32" description="The IRQ Status Parity Register is a snapshot of the IRQ status for the PRUSS memory parity events. The status is set only if the event is enabled. Write 1 to clear the status after the interrupt has been serviced.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAM_PE" width="4" begin="19" end="16" resetval="0x0" description="RAM Parity Error for Byte3, Byte2, Byte1, Byte0. Note RAM_PE[0] maps to Byte0. Write 0: No action. Read 0: No (enabled) event pending. Read 1: Event pending. Write 1: Clear event." range="" rwaccess="RW"/>
    <bitfield id="PRU1_DMEM_PE" width="4" begin="15" end="12" resetval="0x0" description="PRU1 DMEM Parity Error for Byte3, Byte2, Byte1, Byte0. Note PRU1_DMEM_PE[0] maps to Byte0. Write 0: No action. Read 0: No (enabled) event pending. Read 1: Event pending. Write 1: Clear event." range="" rwaccess="RW"/>
    <bitfield id="PRU1_IMEM_PE" width="4" begin="11" end="8" resetval="0x0" description="PRU1 IMEM Parity Error for Byte3, Byte2, Byte1, Byte0. Note PRU1_IMEM_PE[0] maps to Byte0. Write 0: No action. Read 0: No (enabled) event pending. Read 1: Event pending. Write 1: Clear event." range="" rwaccess="RW"/>
    <bitfield id="PRU0_DMEM_PE" width="4" begin="7" end="4" resetval="0x0" description="PRU0 DMEM Parity Error for Byte3, Byte2, Byte1, Byte0. Note PRU0_DMEM_PE[0] maps to Byte0. Write 0: No action. Read 0: No(enabled) event pending. Read 1: Event pending. Write 1: Clear event." range="" rwaccess="RW"/>
    <bitfield id="PRU0_IMEM_PE" width="4" begin="3" end="0" resetval="0x0" description="PRU0 IMEM Parity Error for Byte3, Byte2, Byte1, Byte0. Note PRU0_IMEM_PE[0] maps to Byte0. Write 0: No action. Read 0: No (enabled) event pending. Read 1: Event pending. Write 1: Clear event." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_IESP" acronym="PRUSS_IESP" offset="0x1C" page="2" width="32" description="The IRQ Enable Set Parity Register enables the IRQ PRUSS memory parity events.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAM_PE_SET" width="4" begin="19" end="16" resetval="0x0" description="RAM Parity Error Set Enable for Byte3, Byte2, Byte1, Byte0. Note RAM_PE_SET[0] maps to Byte0. Write 0: No action. Read 0: Interrupt disabled (masked). Read 1: Interrupt enabled. Write 1: Enable interrupt." range="" rwaccess="RW"/>
    <bitfield id="PRU1_DMEM_PE_SET" width="4" begin="15" end="12" resetval="0x0" description="PRU1 DMEM Parity Error Set Enable for Byte3, Byte2, Byte1, Byte0. Note PRU1_DMEM_PE_SET[0] maps to Byte0. Write 0: No action. Read 0: Interrupt disabled (masked). Read 1: Interrupt enabled. Write 1: Enable interrupt." range="" rwaccess="RW"/>
    <bitfield id="PRU1_IMEM_PE_SET" width="4" begin="11" end="8" resetval="0x0" description="PRU1 IMEM Parity Error Set Enable for Byte3, Byte2, Byte1, Byte0. Note PRU1_IMEM_PE_SET[0] maps to Byte0. Write 0: No action. Read 0: Interrupt disabled (masked). Read 1: Interrupt enabled. Write 1: Enable interrupt." range="" rwaccess="RW"/>
    <bitfield id="PRU0_DMEM_PE_SET" width="4" begin="7" end="4" resetval="0x0" description="PRU0 DMEM Parity Error Set Enable for Byte3, Byte2, Byte1, Byte0. Note PRU0_DMEM_PE_SET[0] maps to Byte0. Write 0: No action. Read 0: Interrupt disabled (masked). Read 1: Interrupt enabled. Write 1: Enable interrupt." range="" rwaccess="RW"/>
    <bitfield id="PRU0_IMEM_PE_SET" width="4" begin="3" end="0" resetval="0x0" description="PRU0 IMEM Parity Error Set Enable for Byte3, Byte2, Byte1, Byte0. Note PRU0_IMEM_PE_SET[0] maps to Byte0. Write 0: No action. Read 0: Interrupt disabled (masked). Read 1: Interrupt enabled. Write 1: Enable interrupt." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_IECP" acronym="PRUSS_IECP" offset="0x20" page="2" width="32" description="The IRQ Enable Clear Parity Register disables the IRQ PRUSS memory parity events.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PRU1_DMEM_PE_CLR" width="4" begin="15" end="12" resetval="0x0" description="PRU1 DMEM Parity Error Clear Enable for Byte3, Byte2, Byte1, Byte0. Note PRU1_DMEM_PE_CLR[0] maps to Byte0. Write 0: No action. Read 0: Interrupt disabled (masked). Read 1: Interrupt enabled. Write 1: Disable interrupt." range="" rwaccess="RW"/>
    <bitfield id="PRU1_IMEM_PE_CLR" width="4" begin="11" end="8" resetval="0x0" description="PRU1 IMEM Parity Error Clear Enable for Byte3, Byte2, Byte1, Byte0. Note PRU1_IMEM_PE_CLR[0] maps to Byte0. Write 0: No action. Read 0: Interrupt disabled (masked). Read 1: Interrupt enabled. Write 1: Disable interrupt." range="" rwaccess="RW"/>
    <bitfield id="PRU0_DMEM_PE_CLR" width="4" begin="7" end="4" resetval="0x0" description="PRU0 DMEM Parity Error Clear Enable for Byte3, Byte2, Byte1, Byte0. Note PRU0_DMEM_PE_CLR[0] maps to Byte0. Write 0: No action. Read 0: Interrupt disabled (masked). Read 1: Interrupt enabled. Write 1: Disable interrupt." range="" rwaccess="RW"/>
    <bitfield id="PRU0_IMEM_PE_CLR" width="4" begin="3" end="0" resetval="0x0" description="PRU0 IMEM Parity Error Clear Enable for Byte3, Byte2, Byte1, Byte0. Note PRU0_IMEM_PE_CLR[0] maps to Byte0. Write 0: No action. Read 0: Interrupt disabled (masked). Read 1: Interrupt enabled. Write 1: Disable interrupt." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_PMAO" acronym="PRUSS_PMAO" offset="0x28" page="2" width="32" description="The PRU Master OCP Address Offset Register enables for the PRU OCP Master Port Address to have an offset of minus 0x0008_0000. This enables the PRU to access External Host address space starting at 0x0000_0000.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PMAO_PRU1" width="1" begin="1" end="1" resetval="0x0" description="PRU1 OCP Master Port Address Offset Enable. 0x0 = Disable address offset. 0x1 = Enable address offset of -0x0008_0000." range="" rwaccess="RW"/>
    <bitfield id="PMAO_PRU0" width="1" begin="0" end="0" resetval="0x0" description="PRU0 OCP Master Port Address Offset Enable. 0x0 = Disable address offset. 0x1 = Enable address offset of -0x0008_0000." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_MII_RT" acronym="PRUSS_MII_RT" offset="0x2C" page="2" width="32" description="The MII_RT Event Enable Register enables MII_RT mode events to the PRUSS.PRUSS_INTC.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="OCP_EN" width="1" begin="0" end="0" resetval="0x0" description="IEP clock source 0x0 = IEP_CLK is the source 0x1 = ICLK is the source. While this is selected no transactions should be active. It can only be cleared by a hardware reset." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_IEPCLK" acronym="PRUSS_IEPCLK" offset="0x30" page="2" width="32" description="The IEP Clock Source Register defines the source of the IEP clock.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="OCP_EN" width="1" begin="0" end="0" resetval="0x0" description="IEP clock source 0x0 = IEP_CLK is the source 0x1 = ICLK is the source. While this is selected no transactions should be active. It can only be cleared by a hardware reset." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SPP" acronym="PRUSS_SPP" offset="0x34" page="2" width="32" description="The Scratch Pad Priority and Configuration Register defines the access priority assigned to the PRU cores and configures the scratch pad XFR shift functionality.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="XFR_SHIFT_EN" width="1" begin="1" end="1" resetval="0x0" description="Enables XIN XOUT shift functionality. When enabled, R0[4:0] (internal to PRU) defines the 32-bit offset for XIN and XOUT operations with the scratch pad. 0x0 = Disabled. 0x1 = Enabled." range="" rwaccess="RW"/>
    <bitfield id="PRU1_PAD_HP_EN" width="1" begin="0" end="0" resetval="0x0" description="Defines which PRU wins write cycle arbitration to a common scratch pad bank. The PRU which has higher priority will always perform the write cycle with no wait states. The lower PRU will get stalled wait states until higher PRU is not performing write cycles. If the lower priority PRU writes to the same byte has the higher priority PRU, then the lower priority PRU will over write the bytes. 0x0 = PRU0 has highest priority. 0x1 = PRU1 has highest priority." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_PIN_MX" acronym="PRUSS_PIN_MX" offset="0x40" page="2" width="32" description="The Pin Mux Select Register defines the state of the PRUSS internal pinmuxing.">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0" description="Reserved. Always write 0." range="" rwaccess="R"/>
    <bitfield id="PWM3_REMAP_EN" width="1" begin="9" end="9" resetval="0x0" description="UNUSED IN THIS DEVICE" range="" rwaccess="RW"/>
    <bitfield id="PWM0_REMAP_EN" width="1" begin="8" end="8" resetval="0x0" description="If enabled, host intr6 of PRUSS2 controls epwm_sync_in of PWMSS1 instead of ehrpwm1_synci device pin" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="7" end="0" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_0" acronym="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_0" offset="0x48" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU0_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru0_gpi[16] 0x1: pr1/2_pru0_sdi_clk 0x2: pr1/2_pru0_sd0_clk for sd0, sd1, and sd2; pr1/2_pru0_sd3_clk for sd3, sd4, and sd5; pr1/2_pru0_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_1" acronym="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_1" offset="0x50" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU0_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru0_gpi[16] 0x1: pr1/2_pru0_sdi_clk 0x2: pr1/2_pru0_sd0_clk for sd0, sd1, and sd2; pr1/2_pru0_sd3_clk for sd3, sd4, and sd5; pr1/2_pru0_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_2" acronym="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_2" offset="0x58" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU0_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru0_gpi[16] 0x1: pr1/2_pru0_sdi_clk 0x2: pr1/2_pru0_sd0_clk for sd0, sd1, and sd2; pr1/2_pru0_sd3_clk for sd3, sd4, and sd5; pr1/2_pru0_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_3" acronym="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_3" offset="0x60" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU0_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru0_gpi[16] 0x1: pr1/2_pru0_sdi_clk 0x2: pr1/2_pru0_sd0_clk for sd0, sd1, and sd2; pr1/2_pru0_sd3_clk for sd3, sd4, and sd5; pr1/2_pru0_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_4" acronym="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_4" offset="0x68" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU0_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru0_gpi[16] 0x1: pr1/2_pru0_sdi_clk 0x2: pr1/2_pru0_sd0_clk for sd0, sd1, and sd2; pr1/2_pru0_sd3_clk for sd3, sd4, and sd5; pr1/2_pru0_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_5" acronym="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_5" offset="0x70" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU0_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru0_gpi[16] 0x1: pr1/2_pru0_sdi_clk 0x2: pr1/2_pru0_sd0_clk for sd0, sd1, and sd2; pr1/2_pru0_sd3_clk for sd3, sd4, and sd5; pr1/2_pru0_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_6" acronym="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_6" offset="0x78" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU0_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru0_gpi[16] 0x1: pr1/2_pru0_sdi_clk 0x2: pr1/2_pru0_sd0_clk for sd0, sd1, and sd2; pr1/2_pru0_sd3_clk for sd3, sd4, and sd5; pr1/2_pru0_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_7" acronym="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_7" offset="0x80" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU0_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru0_gpi[16] 0x1: pr1/2_pru0_sdi_clk 0x2: pr1/2_pru0_sd0_clk for sd0, sd1, and sd2; pr1/2_pru0_sd3_clk for sd3, sd4, and sd5; pr1/2_pru0_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_8" acronym="PRUSS_SD_PRU0_CLK_SEL_REGISTERi_8" offset="0x88" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU0_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru0_gpi[16] 0x1: pr1/2_pru0_sdi_clk 0x2: pr1/2_pru0_sd0_clk for sd0, sd1, and sd2; pr1/2_pru0_sd3_clk for sd3, sd4, and sd5; pr1/2_pru0_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_0" acronym="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_0" offset="0x4C" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_1" acronym="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_1" offset="0x54" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_2" acronym="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_2" offset="0x5C" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_3" acronym="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_3" offset="0x64" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_4" acronym="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_4" offset="0x6C" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_5" acronym="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_5" offset="0x74" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_6" acronym="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_6" offset="0x7C" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_7" acronym="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_7" offset="0x84" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_8" acronym="PRUSS_SD_PRU0_SAMPLE_SIZE_REGISTERi_8" offset="0x8C" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU0_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_0" acronym="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_0" offset="0x94" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU1_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru1_gpi[16] 0x1: pr1/2_pru1_sdi_clk 0x2: pr1/2_pru1_sd0_clk for sd0, sd1, and sd2; pr1/2_pru1_sd3_clk for sd3, sd4, and sd5; pr1/2_pru1_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_1" acronym="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_1" offset="0x9C" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU1_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru1_gpi[16] 0x1: pr1/2_pru1_sdi_clk 0x2: pr1/2_pru1_sd0_clk for sd0, sd1, and sd2; pr1/2_pru1_sd3_clk for sd3, sd4, and sd5; pr1/2_pru1_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_2" acronym="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_2" offset="0xA4" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU1_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru1_gpi[16] 0x1: pr1/2_pru1_sdi_clk 0x2: pr1/2_pru1_sd0_clk for sd0, sd1, and sd2; pr1/2_pru1_sd3_clk for sd3, sd4, and sd5; pr1/2_pru1_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_3" acronym="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_3" offset="0xAC" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU1_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru1_gpi[16] 0x1: pr1/2_pru1_sdi_clk 0x2: pr1/2_pru1_sd0_clk for sd0, sd1, and sd2; pr1/2_pru1_sd3_clk for sd3, sd4, and sd5; pr1/2_pru1_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_4" acronym="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_4" offset="0xB4" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU1_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru1_gpi[16] 0x1: pr1/2_pru1_sdi_clk 0x2: pr1/2_pru1_sd0_clk for sd0, sd1, and sd2; pr1/2_pru1_sd3_clk for sd3, sd4, and sd5; pr1/2_pru1_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_5" acronym="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_5" offset="0xBC" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU1_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru1_gpi[16] 0x1: pr1/2_pru1_sdi_clk 0x2: pr1/2_pru1_sd0_clk for sd0, sd1, and sd2; pr1/2_pru1_sd3_clk for sd3, sd4, and sd5; pr1/2_pru1_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_6" acronym="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_6" offset="0xC4" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU1_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru1_gpi[16] 0x1: pr1/2_pru1_sdi_clk 0x2: pr1/2_pru1_sd0_clk for sd0, sd1, and sd2; pr1/2_pru1_sd3_clk for sd3, sd4, and sd5; pr1/2_pru1_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_7" acronym="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_7" offset="0xCC" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU1_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru1_gpi[16] 0x1: pr1/2_pru1_sdi_clk 0x2: pr1/2_pru1_sd0_clk for sd0, sd1, and sd2; pr1/2_pru1_sd3_clk for sd3, sd4, and sd5; pr1/2_pru1_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_8" acronym="PRUSS_SD_PRU1_CLK_SEL_REGISTERi_8" offset="0xD4" page="2" width="32" description="SD acc and clock select">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_ACC2_SEL" width="1" begin="4" end="4" resetval="0x0" description="acc3/acc2 mux 0: acc3 is selected 1: acc2 is selected" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_CLK_INV" width="1" begin="2" end="2" resetval="0x0" description="Optional clock inversion post clock selection mux 0 = No inversion 1 = Inversion" range="" rwaccess="RW"/>
    <bitfield id="PRU1_SD_CLK_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the clock source 0x0: pr1/2_pru1_gpi[16] 0x1: pr1/2_pru1_sdi_clk 0x2: pr1/2_pru1_sd0_clk for sd0, sd1, and sd2; pr1/2_pru1_sd3_clk for sd3, sd4, and sd5; pr1/2_pru1_sd6_clk for sd6, sd7, and sd8 0x3: reserved" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_0" acronym="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_0" offset="0x98" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_1" acronym="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_1" offset="0xA0" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_2" acronym="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_2" offset="0xA8" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_3" acronym="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_3" offset="0xB0" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_4" acronym="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_4" offset="0xB8" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_5" acronym="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_5" offset="0xC0" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_6" acronym="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_6" offset="0xC8" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_7" acronym="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_7" offset="0xD0" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_8" acronym="PRUSS_SD_PRU1_SAMPLE_SIZE_REGISTERi_8" offset="0xD8" page="2" width="32" description="SD oversample size">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PRU1_SD_SAMPLE_SIZE" width="8" begin="7" end="0" resetval="0x7" description="SD Sample Size. This field defines the sample size window to latch selected accumulator. 0 = Reserved 1 = Reserved 2 = Reserved 3 = 4 samples 4 = 5 samples 5 = 6 samples 6 = 7 samples 7 = 8 samples N = N+1 samples Max value (N) may be capped by number of bits supported by accumulator. Note this value is only loaded into a shadow copy when channel_en is 0 OR re_init is asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU0_RX_CFG_REGISTER" acronym="PRUSS_ED_PRU0_RX_CFG_REGISTER" offset="0xE0" page="2" width="32" description="Endat Rx Config">
    <bitfield id="PRU0_ED_RX_DIV_FACTOR" width="16" begin="31" end="16" resetval="0x0" description="Division factor for divh16. Effective value is PRU0_ED_RX_DIV_FACTOR + 1. 0 = Div 1 1 = Div 2 N = Div (N+1)" range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_RX_DIV_FACTOR_FRAC" width="1" begin="15" end="15" resetval="0x0" description="Enable Fractional division before the divh16. 0: div 1 1: div 1.5" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="10" begin="14" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PRU0_ED_RX_CLK_SEL" width="1" begin="4" end="4" resetval="0x0" description="Selects the clock source for the divh16fr. 0: 192 MHz UART_CLK 1: 200MHz ICLK" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PRU0_ED_RX_SAMPLE_SIZE" width="3" begin="2" end="0" resetval="0x7" description="Over Sample size. This field defines the number of samples before the shadow copy gets updated and the VAL flag gets set. The effective count is (RX_SAMPLE_SIZE + 1). 0 = Reserved 1 = Reserved 2 = Reserved 3 = Over Sample of 4 4 = Over Sample of 5 5 = Over Sample of 6 6 = Over Sample of 7 7 = Over Sample of 8 Note the Over Sample Clock rate divided by the TX Clock rate must equal the Over Sample size." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU0_TX_CFG_REGISTER" acronym="PRUSS_ED_PRU0_TX_CFG_REGISTER" offset="0xE4" page="2" width="32" description="Endat Tx Config">
    <bitfield id="PRU0_ED_TX_DIV_FACTOR" width="16" begin="31" end="16" resetval="0x0" description="Division factor for divh16. Effective value is PRU0_ED_TX_DIV_FACTOR + 1. 0 = Div 1 1 = Div 2 N = Div (N+1)" range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_TX_DIV_FACTOR_FRAC" width="1" begin="15" end="15" resetval="0x0" description="Enable Fractional division before the divh16. 0: div1 1: div 1.5" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="14" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PRU0_ENDAT2_CLK_SYNC" width="1" begin="10" end="10" resetval="0x0" description="Observation of pr1/2_pru0_endat2_clk pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU0_ENDAT1_CLK_SYNC" width="1" begin="9" end="9" resetval="0x0" description="Observation of pr1/2_pru0_endat1_clk pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU0_ENDAT0_CLK_SYNC" width="1" begin="8" end="8" resetval="0x0" description="Observation of pr1/2_pru0_endat0_clk pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU0_ED_BUSY_2" width="1" begin="7" end="7" resetval="0x0" description="Determines when is allowed to assert tx go for channel 2. 0: ready to go 1: busy" range="" rwaccess="R"/>
    <bitfield id="PRU0_ED_BUSY_1" width="1" begin="6" end="6" resetval="0x0" description="Determines when is allowed to assert tx go for channel 1. 0: ready to gob 1: busy" range="" rwaccess="R"/>
    <bitfield id="PRU0_ED_BUSY_0" width="1" begin="5" end="5" resetval="0x0" description="Determines when is allowed to assert tx go for channel 0. 0: ready to go 1: busy" range="" rwaccess="R"/>
    <bitfield id="PRU0_ED_TX_CLK_SEL" width="1" begin="4" end="4" resetval="0x0" description="Selects the clock source for the divh16fr. 0: 192 MHz UART_CLK 1: 200MHz ICLK" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_ED_PRU0_CHj_CFG0_REGISTER_0" acronym="PRUSS_ED_PRU0_CHj_CFG0_REGISTER_0" offset="0xE8" page="2" width="32" description="Endat Channel j Config 0 register">
    <bitfield id="PRU0_ED_TX_FIFO_SWAP_BITS" width="1" begin="31" end="31" resetval="0x0" description="Enables the swapping of the bits when they are loaded into the TX FIFO. 0: no swap 1: swap [7:0] -&amp;amp;gt; [0:7] NOTE: FIFO MSB always exports bit [7] first." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_SW_CLK_OUT" width="1" begin="30" end="30" resetval="0x0" description="This controls the state of pr1/2_pru0_endatj_clk pin when PRU0_ED_CLK_OUT_OVR_EN is set. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_CLK_OUT_OVR_EN" width="1" begin="29" end="29" resetval="0x0" description="When set, enables the software to control pr1/2_pru0_endatj_clk pin. WARNING: Do not override clock during free running mode. This will cause clock duty cycle violation." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_RX_SNOOP" width="1" begin="28" end="28" resetval="0x0" description="Direct view of pr1/2_pru0_endatj_in pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU0_ED_RX_FRAME_SIZE" width="12" begin="27" end="16" resetval="0x0" description="RX frame size, after start bit is detected 0: = Special case for TX only phase, ignores start bit, in this case TX CLK_OUT will stop after last TX 1: = TX CLK_OUT will stop after 1 X Over Sample 8: = TX CLK_OUT will stop after 8 X Over Sample 9: = TX CLK_OUT will stop after 9 X Over Sample 4095 TX CLK_OUT will stop after 2047 X Over Sample Note X Over Sample means the number of VAL events. 1 VAL per Over Sample event. When the TX CLK_MODE[1:0] is either 0x0 or 0x1, when this RX_FRAME_SIZE is reached, the tx master CLK_OUT will remain high or low. WARNING: Software must not de-assert RX_EN before RX_FRAME_SIZE expires." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_TX_FRAME_SIZE" width="5" begin="15" end="11" resetval="0x0" description="TX frame size 0: disabled, the FIFO will transmit until empty then stop 1: TX FIFO will transmit 1 bits then stop 2: TX FIFO will transmit 2 bits then stop 31: TX FIFO will transmit 31 bits then stop Note: At TX completion, pr1/2_pru0_endatj_out_en will deassert." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_TX_WDLY" width="11" begin="10" end="0" resetval="0x0" description="EnDAT TX wire delay using 200-MHz steps (ICLK). Software must program a number divisible by 5. 0: = no delay 5: = 5 ns delay 10: = 10 ns delay 15: = 15 ns delay 2024 = 2.045 &#181;s delay. This is used during TX state when CLK_OUT goes from high to low, this transmission can be compensated. Hardware will keep count of clocks and add 5 each time. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU0_CHj_CFG0_REGISTER_1" acronym="PRUSS_ED_PRU0_CHj_CFG0_REGISTER_1" offset="0xF0" page="2" width="32" description="Endat Channel j Config 0 register">
    <bitfield id="PRU0_ED_TX_FIFO_SWAP_BITS" width="1" begin="31" end="31" resetval="0x0" description="Enables the swapping of the bits when they are loaded into the TX FIFO. 0: no swap 1: swap [7:0] -&amp;amp;gt; [0:7] NOTE: FIFO MSB always exports bit [7] first." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_SW_CLK_OUT" width="1" begin="30" end="30" resetval="0x0" description="This controls the state of pr1/2_pru0_endatj_clk pin when PRU0_ED_CLK_OUT_OVR_EN is set. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_CLK_OUT_OVR_EN" width="1" begin="29" end="29" resetval="0x0" description="When set, enables the software to control pr1/2_pru0_endatj_clk pin. WARNING: Do not override clock during free running mode. This will cause clock duty cycle violation." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_RX_SNOOP" width="1" begin="28" end="28" resetval="0x0" description="Direct view of pr1/2_pru0_endatj_in pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU0_ED_RX_FRAME_SIZE" width="12" begin="27" end="16" resetval="0x0" description="RX frame size, after start bit is detected 0: = Special case for TX only phase, ignores start bit, in this case TX CLK_OUT will stop after last TX 1: = TX CLK_OUT will stop after 1 X Over Sample 8: = TX CLK_OUT will stop after 8 X Over Sample 9: = TX CLK_OUT will stop after 9 X Over Sample 4095 TX CLK_OUT will stop after 2047 X Over Sample Note X Over Sample means the number of VAL events. 1 VAL per Over Sample event. When the TX CLK_MODE[1:0] is either 0x0 or 0x1, when this RX_FRAME_SIZE is reached, the tx master CLK_OUT will remain high or low. WARNING: Software must not de-assert RX_EN before RX_FRAME_SIZE expires." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_TX_FRAME_SIZE" width="5" begin="15" end="11" resetval="0x0" description="TX frame size 0: disabled, the FIFO will transmit until empty then stop 1: TX FIFO will transmit 1 bits then stop 2: TX FIFO will transmit 2 bits then stop 31: TX FIFO will transmit 31 bits then stop Note: At TX completion, pr1/2_pru0_endatj_out_en will deassert." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_TX_WDLY" width="11" begin="10" end="0" resetval="0x0" description="EnDAT TX wire delay using 200-MHz steps (ICLK). Software must program a number divisible by 5. 0: = no delay 5: = 5 ns delay 10: = 10 ns delay 15: = 15 ns delay 2024 = 2.045 &#181;s delay. This is used during TX state when CLK_OUT goes from high to low, this transmission can be compensated. Hardware will keep count of clocks and add 5 each time. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU0_CHj_CFG0_REGISTER_2" acronym="PRUSS_ED_PRU0_CHj_CFG0_REGISTER_2" offset="0xF8" page="2" width="32" description="Endat Channel j Config 0 register">
    <bitfield id="PRU0_ED_TX_FIFO_SWAP_BITS" width="1" begin="31" end="31" resetval="0x0" description="Enables the swapping of the bits when they are loaded into the TX FIFO. 0: no swap 1: swap [7:0] -&amp;amp;gt; [0:7] NOTE: FIFO MSB always exports bit [7] first." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_SW_CLK_OUT" width="1" begin="30" end="30" resetval="0x0" description="This controls the state of pr1/2_pru0_endatj_clk pin when PRU0_ED_CLK_OUT_OVR_EN is set. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_CLK_OUT_OVR_EN" width="1" begin="29" end="29" resetval="0x0" description="When set, enables the software to control pr1/2_pru0_endatj_clk pin. WARNING: Do not override clock during free running mode. This will cause clock duty cycle violation." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_RX_SNOOP" width="1" begin="28" end="28" resetval="0x0" description="Direct view of pr1/2_pru0_endatj_in pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU0_ED_RX_FRAME_SIZE" width="12" begin="27" end="16" resetval="0x0" description="RX frame size, after start bit is detected 0: = Special case for TX only phase, ignores start bit, in this case TX CLK_OUT will stop after last TX 1: = TX CLK_OUT will stop after 1 X Over Sample 8: = TX CLK_OUT will stop after 8 X Over Sample 9: = TX CLK_OUT will stop after 9 X Over Sample 4095 TX CLK_OUT will stop after 2047 X Over Sample Note X Over Sample means the number of VAL events. 1 VAL per Over Sample event. When the TX CLK_MODE[1:0] is either 0x0 or 0x1, when this RX_FRAME_SIZE is reached, the tx master CLK_OUT will remain high or low. WARNING: Software must not de-assert RX_EN before RX_FRAME_SIZE expires." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_TX_FRAME_SIZE" width="5" begin="15" end="11" resetval="0x0" description="TX frame size 0: disabled, the FIFO will transmit until empty then stop 1: TX FIFO will transmit 1 bits then stop 2: TX FIFO will transmit 2 bits then stop 31: TX FIFO will transmit 31 bits then stop Note: At TX completion, pr1/2_pru0_endatj_out_en will deassert." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_TX_WDLY" width="11" begin="10" end="0" resetval="0x0" description="EnDAT TX wire delay using 200-MHz steps (ICLK). Software must program a number divisible by 5. 0: = no delay 5: = 5 ns delay 10: = 10 ns delay 15: = 15 ns delay 2024 = 2.045 &#181;s delay. This is used during TX state when CLK_OUT goes from high to low, this transmission can be compensated. Hardware will keep count of clocks and add 5 each time. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU0_CHj_CFG1_REGISTER_0" acronym="PRUSS_ED_PRU0_CHj_CFG1_REGISTER_0" offset="0xEC" page="2" width="32" description="Endat Channel j Config 1 register">
    <bitfield id="PRU0_ED_RX_EN_COUNTER" width="16" begin="31" end="16" resetval="0x0" description="This counter will start counting after the last TX bit is sent. When it expires, the HW will automatically arm the receiver (RX_EN = 1). Program to 0 if HW support is not desired. Counts in ICLK cycles. Software must program value in increments of 5 (hardware will count by 5s). For example 30, will be 6 ICLK cycles. All channels must be use this feature if enabled. The HW does not allow support of some channels with auto enable and others manual enable." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_TST_DELAY_COUNTER" width="16" begin="15" end="0" resetval="0x0" description="This counter will start after the tx_wire_delay has been met. After this counter expires the 1st transmit clock will be driven high. Counts in ICLK cycles. Software must program value divisible by 5, and hardware will count by 5. For example 30, will be 6 ICLK cycles. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU0_CHj_CFG1_REGISTER_1" acronym="PRUSS_ED_PRU0_CHj_CFG1_REGISTER_1" offset="0xF4" page="2" width="32" description="Endat Channel j Config 1 register">
    <bitfield id="PRU0_ED_RX_EN_COUNTER" width="16" begin="31" end="16" resetval="0x0" description="This counter will start counting after the last TX bit is sent. When it expires, the HW will automatically arm the receiver (RX_EN = 1). Program to 0 if HW support is not desired. Counts in ICLK cycles. Software must program value in increments of 5 (hardware will count by 5s). For example 30, will be 6 ICLK cycles. All channels must be use this feature if enabled. The HW does not allow support of some channels with auto enable and others manual enable." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_TST_DELAY_COUNTER" width="16" begin="15" end="0" resetval="0x0" description="This counter will start after the tx_wire_delay has been met. After this counter expires the 1st transmit clock will be driven high. Counts in ICLK cycles. Software must program value divisible by 5, and hardware will count by 5. For example 30, will be 6 ICLK cycles. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU0_CHj_CFG1_REGISTER_2" acronym="PRUSS_ED_PRU0_CHj_CFG1_REGISTER_2" offset="0xFC" page="2" width="32" description="Endat Channel j Config 1 register">
    <bitfield id="PRU0_ED_RX_EN_COUNTER" width="16" begin="31" end="16" resetval="0x0" description="This counter will start counting after the last TX bit is sent. When it expires, the HW will automatically arm the receiver (RX_EN = 1). Program to 0 if HW support is not desired. Counts in ICLK cycles. Software must program value in increments of 5 (hardware will count by 5s). For example 30, will be 6 ICLK cycles. All channels must be use this feature if enabled. The HW does not allow support of some channels with auto enable and others manual enable." range="" rwaccess="RW"/>
    <bitfield id="PRU0_ED_TST_DELAY_COUNTER" width="16" begin="15" end="0" resetval="0x0" description="This counter will start after the tx_wire_delay has been met. After this counter expires the 1st transmit clock will be driven high. Counts in ICLK cycles. Software must program value divisible by 5, and hardware will count by 5. For example 30, will be 6 ICLK cycles. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU1_RX_CFG_REGISTER" acronym="PRUSS_ED_PRU1_RX_CFG_REGISTER" offset="0x100" page="2" width="32" description="Endat Rx Config">
    <bitfield id="PRU1_ED_RX_DIV_FACTOR" width="16" begin="31" end="16" resetval="0x0" description="Division factor for divh16. Effective value is PRU1_ED_RX_DIV_FACTOR + 1. 0 = Div 1 1 = Div 2 N = Div (N+1)" range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_RX_DIV_FACTOR_FRAC" width="1" begin="15" end="15" resetval="0x0" description="Enable Fractional division before the divh16. 0: div 1 1: div 1.5." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="10" begin="14" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PRU1_ED_RX_CLK_SEL" width="1" begin="4" end="4" resetval="0x0" description="Selects the clock source for the divh16fr. 0: 192 MHz UART_CLK 1: 200MHz ICLK" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PRU1_ED_RX_SAMPLE_SIZE" width="3" begin="2" end="0" resetval="0x7" description="Over Sample size. This field defines the number of samples before the shadow copy gets updated and the VAL flag gets set. The effective count is (RX_SAMPLE_SIZE + 1). 0 = Reserved 1 = Reserved 2 = Reserved 3 = Over Sample of 4 4 = Over Sample of 5 5 = Over Sample of 6 6 = Over Sample of 7 7 = Over Sample of 8 Note the Over Sample Clock rate divided by the TX Clock rate must equal the Over Sample size." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU1_TX_CFG_REGISTER" acronym="PRUSS_ED_PRU1_TX_CFG_REGISTER" offset="0x104" page="2" width="32" description="Endat Tx Config">
    <bitfield id="PRU1_ED_TX_DIV_FACTOR" width="16" begin="31" end="16" resetval="0x0" description="Division factor for divh16. Effective value is PRU1_ED_TX_DIV_FACTOR + 1. 0 = Div 1 1 = Div 2 N = Div (N+1)" range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_TX_DIV_FACTOR_FRAC" width="1" begin="15" end="15" resetval="0x0" description="Enable Fractional division before the divh16. 0: div1 1: div 1.5" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="14" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PRU1_ENDAT2_CLK_SYNC" width="1" begin="10" end="10" resetval="0x0" description="Observation of pr1/2_pru1_endat2_clk pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU1_ENDAT1_CLK_SYNC" width="1" begin="9" end="9" resetval="0x0" description="Observation of pr1/2_pru1_endat1_clk pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU1_ENDAT0_CLK_SYNC" width="1" begin="8" end="8" resetval="0x0" description="Observation of pr1/2_pru1_endat0_clk pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU1_ED_BUSY_2" width="1" begin="7" end="7" resetval="0x0" description="Determines when is allowed to assert tx go for channel 2. 0: ready to go 1: busy" range="" rwaccess="R"/>
    <bitfield id="PRU1_ED_BUSY_1" width="1" begin="6" end="6" resetval="0x0" description="Determines when is allowed to assert tx go for channel 1. 0: ready to go 1: busy" range="" rwaccess="R"/>
    <bitfield id="PRU1_ED_BUSY_0" width="1" begin="5" end="5" resetval="0x0" description="Determines when is allowed to assert tx go for channel 0. 0: ready to go 1: busy" range="" rwaccess="R"/>
    <bitfield id="PRU1_ED_TX_CLK_SEL" width="1" begin="4" end="4" resetval="0x0" description="Selects the clock source for the divh16fr. 0: 192 MHz UART_CLK 1: 200MHz ICLK" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_ED_PRU1_CHj_CFG0_REGISTER_0" acronym="PRUSS_ED_PRU1_CHj_CFG0_REGISTER_0" offset="0x108" page="2" width="32" description="Endat Channel j Config 0 register">
    <bitfield id="PRU1_ED_TX_FIFO_SWAP_BITS" width="1" begin="31" end="31" resetval="0x0" description="Enables the swapping of the bits when they are loaded into the TX FIFO. 0: no swap 1: swap [7:0] -&amp;amp;gt; [0:7] NOTE: FIFO MSB always exports bit [7] first." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_SW_CLK_OUT" width="1" begin="30" end="30" resetval="0x0" description="This controls the state of pr1/2_pru1_endatj_clk pin when PRU1_ED_CLK_OUT_OVR_EN is set. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_CLK_OUT_OVR_EN" width="1" begin="29" end="29" resetval="0x0" description="When set, enables the software to control pr1/2_pru1_endatj_clk pin. WARNING: Do not override clock during free running mode. This will cause clock duty cycle violation." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_RX_SNOOP" width="1" begin="28" end="28" resetval="0x0" description="Direct view of pr1/2_pru1_endatj_in pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU1_ED_RX_FRAME_SIZE" width="12" begin="27" end="16" resetval="0x0" description="RX frame size, after start bit is detected 0: = Special case for TX only phase, ignores start bit, in this case TX CLK_OUT will stop after last TX 1: = tx_clk out will stop after 1 X Over Sample 8: = tx_clk out will stop after 8 X Over Sample 9: = tx_clk out will stop after 9 X Over Sample 4095 tx_clk out will stop after 2047 X Over Sample Note X Over Sample means the number of VAL events. 1 VAL per Over Sample event. When the TX CLK_MODE[1:0] is either 0x0 or 0x1, when this RX_FRAME_SIZE is reached, the tx master CLOCK_OUT will remain high or low. WARNING: Software must not de-assert RX_EN before RX_FRAME_SIZE expires." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_TX_FRAME_SIZE" width="5" begin="15" end="11" resetval="0x0" description="TX frame size 0: disabled, the FIFO will transmit until empty then stop 1: TX FIFO will transmit 1 bits then stop 2: TX FIFO will transmit 2 bits then stop ... 31: TX FIFO will transmit 31 bits then stop Note: At TX completion, pr1/2_pru1_endatj_out_en will deassert." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_TX_WDLY" width="11" begin="10" end="0" resetval="0x0" description="EnDAT TX wire delay using 200-MHz steps (ICLK). Software must program a number divisible by 5. 0: = no delay 5: = 5 ns delay 10: = 10 ns delay 15: = 15 ns delay 2024 = 2.045 &#181;s delay. This is used during TX state when CLK_OUT goes from high to low, this transmission can be compensated. Hardware will keep count of clocks and add 5 each time. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU1_CHj_CFG0_REGISTER_1" acronym="PRUSS_ED_PRU1_CHj_CFG0_REGISTER_1" offset="0x110" page="2" width="32" description="Endat Channel j Config 0 register">
    <bitfield id="PRU1_ED_TX_FIFO_SWAP_BITS" width="1" begin="31" end="31" resetval="0x0" description="Enables the swapping of the bits when they are loaded into the TX FIFO. 0: no swap 1: swap [7:0] -&amp;amp;gt; [0:7] NOTE: FIFO MSB always exports bit [7] first." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_SW_CLK_OUT" width="1" begin="30" end="30" resetval="0x0" description="This controls the state of pr1/2_pru1_endatj_clk pin when PRU1_ED_CLK_OUT_OVR_EN is set. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_CLK_OUT_OVR_EN" width="1" begin="29" end="29" resetval="0x0" description="When set, enables the software to control pr1/2_pru1_endatj_clk pin. WARNING: Do not override clock during free running mode. This will cause clock duty cycle violation." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_RX_SNOOP" width="1" begin="28" end="28" resetval="0x0" description="Direct view of pr1/2_pru1_endatj_in pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU1_ED_RX_FRAME_SIZE" width="12" begin="27" end="16" resetval="0x0" description="RX frame size, after start bit is detected 0: = Special case for TX only phase, ignores start bit, in this case TX CLK_OUT will stop after last TX 1: = tx_clk out will stop after 1 X Over Sample 8: = tx_clk out will stop after 8 X Over Sample 9: = tx_clk out will stop after 9 X Over Sample 4095 tx_clk out will stop after 2047 X Over Sample Note X Over Sample means the number of VAL events. 1 VAL per Over Sample event. When the TX CLK_MODE[1:0] is either 0x0 or 0x1, when this RX_FRAME_SIZE is reached, the tx master CLOCK_OUT will remain high or low. WARNING: Software must not de-assert RX_EN before RX_FRAME_SIZE expires." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_TX_FRAME_SIZE" width="5" begin="15" end="11" resetval="0x0" description="TX frame size 0: disabled, the FIFO will transmit until empty then stop 1: TX FIFO will transmit 1 bits then stop 2: TX FIFO will transmit 2 bits then stop ... 31: TX FIFO will transmit 31 bits then stop Note: At TX completion, pr1/2_pru1_endatj_out_en will deassert." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_TX_WDLY" width="11" begin="10" end="0" resetval="0x0" description="EnDAT TX wire delay using 200-MHz steps (ICLK). Software must program a number divisible by 5. 0: = no delay 5: = 5 ns delay 10: = 10 ns delay 15: = 15 ns delay 2024 = 2.045 &#181;s delay. This is used during TX state when CLK_OUT goes from high to low, this transmission can be compensated. Hardware will keep count of clocks and add 5 each time. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU1_CHj_CFG0_REGISTER_2" acronym="PRUSS_ED_PRU1_CHj_CFG0_REGISTER_2" offset="0x118" page="2" width="32" description="Endat Channel j Config 0 register">
    <bitfield id="PRU1_ED_TX_FIFO_SWAP_BITS" width="1" begin="31" end="31" resetval="0x0" description="Enables the swapping of the bits when they are loaded into the TX FIFO. 0: no swap 1: swap [7:0] -&amp;amp;gt; [0:7] NOTE: FIFO MSB always exports bit [7] first." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_SW_CLK_OUT" width="1" begin="30" end="30" resetval="0x0" description="This controls the state of pr1/2_pru1_endatj_clk pin when PRU1_ED_CLK_OUT_OVR_EN is set. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_CLK_OUT_OVR_EN" width="1" begin="29" end="29" resetval="0x0" description="When set, enables the software to control pr1/2_pru1_endatj_clk pin. WARNING: Do not override clock during free running mode. This will cause clock duty cycle violation." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_RX_SNOOP" width="1" begin="28" end="28" resetval="0x0" description="Direct view of pr1/2_pru1_endatj_in pin. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="R"/>
    <bitfield id="PRU1_ED_RX_FRAME_SIZE" width="12" begin="27" end="16" resetval="0x0" description="RX frame size, after start bit is detected 0: = Special case for TX only phase, ignores start bit, in this case TX CLK_OUT will stop after last TX 1: = tx_clk out will stop after 1 X Over Sample 8: = tx_clk out will stop after 8 X Over Sample 9: = tx_clk out will stop after 9 X Over Sample 4095 tx_clk out will stop after 2047 X Over Sample Note X Over Sample means the number of VAL events. 1 VAL per Over Sample event. When the TX CLK_MODE[1:0] is either 0x0 or 0x1, when this RX_FRAME_SIZE is reached, the tx master CLOCK_OUT will remain high or low. WARNING: Software must not de-assert RX_EN before RX_FRAME_SIZE expires." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_TX_FRAME_SIZE" width="5" begin="15" end="11" resetval="0x0" description="TX frame size 0: disabled, the FIFO will transmit until empty then stop 1: TX FIFO will transmit 1 bits then stop 2: TX FIFO will transmit 2 bits then stop ... 31: TX FIFO will transmit 31 bits then stop Note: At TX completion, pr1/2_pru1_endatj_out_en will deassert." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_TX_WDLY" width="11" begin="10" end="0" resetval="0x0" description="EnDAT TX wire delay using 200-MHz steps (ICLK). Software must program a number divisible by 5. 0: = no delay 5: = 5 ns delay 10: = 10 ns delay 15: = 15 ns delay 2024 = 2.045 &#181;s delay. This is used during TX state when CLK_OUT goes from high to low, this transmission can be compensated. Hardware will keep count of clocks and add 5 each time. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns. Note this is part of the Peripheral Interface configuration settings. The usage of this signal is not restricted to only ENDAT interfaces." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU1_CHj_CFG1_REGISTER_0" acronym="PRUSS_ED_PRU1_CHj_CFG1_REGISTER_0" offset="0x10C" page="2" width="32" description="Endat Channel j Config 1 register">
    <bitfield id="PRU1_ED_RX_EN_COUNTER" width="16" begin="31" end="16" resetval="0x0" description="This counter will start counting after the last TX bit is sent. When it expires, the HW will automatically arm the receiver (RX_EN = 1). Program to 0 if HW support is not desired. Counts in ICLK cycles. Software must program value in increments of 5 (hardware will count by 5s). For example 30, will be 6 ICLK cycles. All channels must be use this feature if enabled. The HW does not allow support of some channels with auto enable and others manual enable." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_TST_DELAY_COUNTER" width="16" begin="15" end="0" resetval="0x0" description="This counter will start after the tx_wire_delay has been met. After this counter expires the 1st transmit clock will be driven high. Counts in ICLK cycles. Software must program value divisible by 5, and hardware will count by 5. For example 30, will be 6 ICLK cycles. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU1_CHj_CFG1_REGISTER_1" acronym="PRUSS_ED_PRU1_CHj_CFG1_REGISTER_1" offset="0x114" page="2" width="32" description="Endat Channel j Config 1 register">
    <bitfield id="PRU1_ED_RX_EN_COUNTER" width="16" begin="31" end="16" resetval="0x0" description="This counter will start counting after the last TX bit is sent. When it expires, the HW will automatically arm the receiver (RX_EN = 1). Program to 0 if HW support is not desired. Counts in ICLK cycles. Software must program value in increments of 5 (hardware will count by 5s). For example 30, will be 6 ICLK cycles. All channels must be use this feature if enabled. The HW does not allow support of some channels with auto enable and others manual enable." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_TST_DELAY_COUNTER" width="16" begin="15" end="0" resetval="0x0" description="This counter will start after the tx_wire_delay has been met. After this counter expires the 1st transmit clock will be driven high. Counts in ICLK cycles. Software must program value divisible by 5, and hardware will count by 5. For example 30, will be 6 ICLK cycles. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_ED_PRU1_CHj_CFG1_REGISTER_2" acronym="PRUSS_ED_PRU1_CHj_CFG1_REGISTER_2" offset="0x11C" page="2" width="32" description="Endat Channel j Config 1 register">
    <bitfield id="PRU1_ED_RX_EN_COUNTER" width="16" begin="31" end="16" resetval="0x0" description="This counter will start counting after the last TX bit is sent. When it expires, the HW will automatically arm the receiver (RX_EN = 1). Program to 0 if HW support is not desired. Counts in ICLK cycles. Software must program value in increments of 5 (hardware will count by 5s). For example 30, will be 6 ICLK cycles. All channels must be use this feature if enabled. The HW does not allow support of some channels with auto enable and others manual enable." range="" rwaccess="RW"/>
    <bitfield id="PRU1_ED_TST_DELAY_COUNTER" width="16" begin="15" end="0" resetval="0x0" description="This counter will start after the tx_wire_delay has been met. After this counter expires the 1st transmit clock will be driven high. Counts in ICLK cycles. Software must program value divisible by 5, and hardware will count by 5. For example 30, will be 6 ICLK cycles. Note the first rising edge of EnDAT CLK from a TX GO event is tx_wire_dly + tst_delay_counter + &#189; EnDAT CLK period +/- 15ns" range="" rwaccess="RW"/>
  </register>
</module>
