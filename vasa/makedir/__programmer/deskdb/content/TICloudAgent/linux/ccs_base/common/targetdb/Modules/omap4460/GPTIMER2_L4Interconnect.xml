<module name="GPTIMER2_L4Interconnect" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="GPT_TIDR" acronym="GPT_TIDR" offset="0x0" width="32" description="This read-only register contains the revision number of the module. A write to this register has no effect. This register is used by software to track features, bugs, and compatibility.">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="0x&#8211;" description="IP Revision" range="" rwaccess="R"/>
  </register>
  <register id="GPT1MS_TIOCP_CFG" acronym="GPT1MS_TIOCP_CFG" offset="0x10" width="32" description="This register controls the various parameters of the OCP interface.">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CLOCKACTIVITY" width="2" begin="9" end="8" resetval="0x0" description="Clock activity" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLOCKACTIVITY_0" description="Functional clock can be switched-off ; L4 clock can be switched-off."/>
      <bitenum value="1" id="1" token="CLOCKACTIVITY_1" description="Functional clock can be switched-off ; L4 clock is maintained during wake-up period."/>
      <bitenum value="2" id="2" token="CLOCKACTIVITY_2" description="Functional clock is maintained during wake-up period; L4 clock can be switched-off."/>
      <bitenum value="3" id="3" token="CLOCKACTIVITY_3" description="Functional clock is maintained during wake-up period; L4 clock is maintained during wake-up period."/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="EMUFREE" width="1" begin="5" end="5" resetval="0" description="Emulation mode" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EMUFREE_0" description="Timer counter frozen in emulation"/>
      <bitenum value="1" id="1" token="EMUFREE_1" description="Timer counter free-running in emulation"/>
    </bitfield>
    <bitfield id="IDLEMODE" width="2" begin="4" end="3" resetval="0x0" description="Power management, req/ack control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IDLEMODE_0" description="Force-idle. An idle request is acknowledged unconditionally."/>
      <bitenum value="1" id="1" token="IDLEMODE_1" description="No-idle. An idle request is never acknowledged."/>
      <bitenum value="2" id="2" token="IDLEMODE_2" description="Smart-idle. Acknowledgment to an idle request is given based on the internal activity of the module."/>
      <bitenum value="3" id="3" token="IDLEMODE_3" description="Reserved, do not use."/>
    </bitfield>
    <bitfield id="ENAWAKEUP" width="1" begin="2" end="2" resetval="0" description="Wake-up feature global control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENAWAKEUP_0" description="No wake-up line assertion in idle mode"/>
      <bitenum value="1" id="1" token="ENAWAKEUP_1" description="Wake-up line assertion enabled in smart-idle mode."/>
    </bitfield>
    <bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0" description="Software reset. This bit is automatically reset by the hardware. During reads, it always returns 0." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SOFTRESET_0" description="Normal mode"/>
      <bitenum value="1" id="1" token="SOFTRESET_1" description="The module is reset."/>
    </bitfield>
    <bitfield id="AUTOIDLE" width="1" begin="0" end="0" resetval="0" description="Internal L4 clock gating strategy" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AUTOIDLE_0" description="L4 clock is free-running."/>
      <bitenum value="1" id="1" token="AUTOIDLE_1" description="Automatic L4 clock gating strategy is applied, based on the L4 interface activity."/>
    </bitfield>
  </register>
  <register id="GPT_TISTAT" acronym="GPT_TISTAT" offset="0x14" width="32" description="This register provides status information about the module, excluding interrupt status information.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="RESETDONE" width="1" begin="0" end="0" resetval="-" description="Internal reset monitoring" range="" rwaccess="R">
      <bitenum value="0" id="0" token="RESETDONE_0_r" description="Internal module reset in ongoing."/>
      <bitenum value="1" id="1" token="RESETDONE_1_r" description="Reset complete"/>
    </bitfield>
  </register>
  <register id="GPT_TISR" acronym="GPT_TISR" offset="0x18" width="32" description="The timer status register is used to determine which of the timer events requested an interrupt.">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0000 0000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="TCAR_IT_FLAG" width="1" begin="2" end="2" resetval="0" description="Indicates when an external pulse transition of the correct polarity is detected on external pin GPTi_EVENT_CAPTURE" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TCAR_IT_FLAG_0" description="No capture interrupt request"/>
      <bitenum value="1" id="1" token="TCAR_IT_FLAG_1" description="Capture interrupt request"/>
    </bitfield>
    <bitfield id="OVF_IT_FLAG" width="1" begin="1" end="1" resetval="0" description="TCRR overflow" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="OVF_IT_FLAG_0" description="No overflow interrupt request"/>
      <bitenum value="1" id="1" token="OVF_IT_FLAG_1" description="Overflow interrupt pending"/>
    </bitfield>
    <bitfield id="MAT_IT_FLAG" width="1" begin="0" end="0" resetval="0" description="The compare result of TCRR and TMAR" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MAT_IT_FLAG_0" description="No compare interrupt request"/>
      <bitenum value="1" id="1" token="MAT_IT_FLAG_1" description="Compare interrupt pending"/>
    </bitfield>
  </register>
  <register id="GPT_TIER" acronym="GPT_TIER" offset="0x1C" width="32" description="This register controls (enable/disable) the interrupt events.">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0000 0000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="TCAR_IT_ENA" width="1" begin="2" end="2" resetval="0" description="Capture interrupt enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TCAR_IT_ENA_0" description="Disable capture interrupt."/>
      <bitenum value="1" id="1" token="TCAR_IT_ENA_1" description="Enable capture interrupt."/>
    </bitfield>
    <bitfield id="OVF_IT_ENA" width="1" begin="1" end="1" resetval="0" description="Overflow interrupt enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="OVF_IT_ENA_0" description="Disable overflow interrupt."/>
      <bitenum value="1" id="1" token="OVF_IT_ENA_1" description="Enable overflow interrupt."/>
    </bitfield>
    <bitfield id="MAT_IT_ENA" width="1" begin="0" end="0" resetval="0" description="Match interrupt enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MAT_IT_ENA_0" description="Disable match interrupt."/>
      <bitenum value="1" id="1" token="MAT_IT_ENA_1" description="Enable match interrupt."/>
    </bitfield>
  </register>
  <register id="GPT_TWER" acronym="GPT_TWER" offset="0x20" width="32" description="This register controls (enable/disable) the wake-up feature on specific interrupt events.">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0000 0000" description="Reads return 0" range="" rwaccess="R"/>
    <bitfield id="TCAR_WUP_ENA" width="1" begin="2" end="2" resetval="0" description="Capture wake-up enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TCAR_WUP_ENA_0" description="Disable capture wake-up."/>
      <bitenum value="1" id="1" token="TCAR_WUP_ENA_1" description="Enable capture wake-up."/>
    </bitfield>
    <bitfield id="OVF_WUP_ENA" width="1" begin="1" end="1" resetval="0" description="Overflow wake-up enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="OVF_WUP_ENA_0" description="Disable overflow wake-up."/>
      <bitenum value="1" id="1" token="OVF_WUP_ENA_1" description="Enable overflow wake-up."/>
    </bitfield>
    <bitfield id="MAT_WUP_ENA" width="1" begin="0" end="0" resetval="0" description="Match wake-up enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MAT_WUP_ENA_0" description="Disable match wake-up."/>
      <bitenum value="1" id="1" token="MAT_WUP_ENA_1" description="Enable match wake-up."/>
    </bitfield>
  </register>
  <register id="GPT_TCLR" acronym="GPT_TCLR" offset="0x24" width="32" description="This register controls optional features specific to the timer functionality.">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x00000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="GPO_CFG" width="1" begin="14" end="14" resetval="0" description="General-purpose output - this register directly drives the GPTi_PORGPOCFG output pin. For specific use of the GPO_CFG bit, see, ." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="GPO_CFG_0" description="GPTi_PORGPOCFG drives 0."/>
      <bitenum value="1" id="1" token="GPO_CFG_1" description="GPTi_PORGPOCFG drives 1."/>
    </bitfield>
    <bitfield id="CAPT_MODE" width="1" begin="13" end="13" resetval="0" description="Capture mode select bit (first/second)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CAPT_MODE_0" description="Single capture: Capture the first enabled capture event in TCAR1."/>
      <bitenum value="1" id="1" token="CAPT_MODE_1" description="Capture on second event: Capture the second enabled capture event in TCAR2."/>
    </bitfield>
    <bitfield id="PT" width="1" begin="12" end="12" resetval="0" description="Pulse or toggle mode on GPTi_PWM_out output pin" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PT_0" description="Pulse modulation"/>
      <bitenum value="1" id="1" token="PT_1" description="Toggle modulation"/>
    </bitfield>
    <bitfield id="TRG" width="2" begin="11" end="10" resetval="0x0" description="Trigger output mode on GPTi_PWM_out output pin" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TRG_0" description="No trigger"/>
      <bitenum value="1" id="1" token="TRG_1" description="Trigger on overflow."/>
      <bitenum value="2" id="2" token="TRG_2" description="Trigger on overflow and match."/>
      <bitenum value="3" id="3" token="TRG_3" description="Reserved"/>
    </bitfield>
    <bitfield id="TCM" width="2" begin="9" end="8" resetval="0x0" description="Transition capture mode on GPTi_EVENT_CAPTURE input pin (When the TCM field passed from (00) to any other combination, the TCAR_IT_FLAG and the edge detection logic are cleared.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TCM_0" description="No capture"/>
      <bitenum value="1" id="1" token="TCM_1" description="Capture on rising edges of GPTi_EVENT_CAPTURE pin"/>
      <bitenum value="2" id="2" token="TCM_2" description="Capture on falling edges of GPTi_EVENT_CAPTURE pin"/>
      <bitenum value="3" id="3" token="TCM_3" description="Capture on both edges of GPTi_EVENT_CAPTURE pin"/>
    </bitfield>
    <bitfield id="SCPWM" width="1" begin="7" end="7" resetval="0" description="Pulse width modulation output pin default settingThis bit must be set or clear while the timer is stopped or the trigger is off." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SCPWM_0" description="Clear the GPTi_PWM_out output pin and select positive pulse for pulse mode."/>
      <bitenum value="1" id="1" token="SCPWM_1" description="Set the GPTi_PWM_out output pin and select negative pulse for pulse mode."/>
    </bitfield>
    <bitfield id="CE" width="1" begin="6" end="6" resetval="0" description="Compare enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CE_0" description="Compare mode is disable."/>
      <bitenum value="1" id="1" token="CE_1" description="Compare mode is enable."/>
    </bitfield>
    <bitfield id="PRE" width="1" begin="5" end="5" resetval="0" description="Prescaler enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PRE_0" description="The TIMER clock input pin clocks the counter."/>
      <bitenum value="1" id="1" token="PRE_1" description="The divided input pin clocks the counter."/>
    </bitfield>
    <bitfield id="PTV" width="3" begin="4" end="2" resetval="0x0" description="Prescale clock timer valueThe timer counter is prescaled with the value 2. Example: PTV = 3, counter increases value (if started) after 16 functional clock periods." range="" rwaccess="RW"/>
    <bitfield id="AR" width="1" begin="1" end="1" resetval="0" description="Autoreload mode" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AR_0" description="One shot timer"/>
      <bitenum value="1" id="1" token="AR_1" description="Autoreload timer"/>
    </bitfield>
    <bitfield id="ST" width="1" begin="0" end="0" resetval="0" description="Start/stop timer control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ST_0" description="Stop timer: Only the counter is frozen. If one-shot mode selected (AR =0), this bit is automatically reset by internal logic when the counter is overflowed."/>
      <bitenum value="1" id="1" token="ST_1" description="Start timer"/>
    </bitfield>
  </register>
  <register id="GPT_TCRR" acronym="GPT_TCRR" offset="0x28" width="32" description="This register holds the value of the internal counter.">
    <bitfield id="TIMER_COUNTER" width="32" begin="31" end="0" resetval="0x0000 0000" description="Value of TIMER counter" range="" rwaccess="RW"/>
  </register>
  <register id="GPT_TLDR" acronym="GPT_TLDR" offset="0x2C" width="32" description="This register holds the timer load value.">
    <bitfield id="LOAD_VALUE" width="32" begin="31" end="0" resetval="0x0000 0000" description="Timer counter value loaded on overflow in autoreload mode or onGPT_TTGR write access. LOAD_VALUE must be different than the timer overflow value (0xFFFF FFFF)." range="" rwaccess="RW"/>
  </register>
  <register id="GPT_TTGR" acronym="GPT_TTGR" offset="0x30" width="32" description="The read value of this register is always 0xFFFF FFFF.">
    <bitfield id="TTGR_VALUE" width="32" begin="31" end="0" resetval="0xFFFF FFFF" description="Writing to the TTGR register causes theGPT_TCRR to be loaded from GPT_TLDR and the prescaler counter to be cleared. Reload is done regardless of the AR field value of the GPT_TCLR register." range="" rwaccess="RW Rreturns1s"/>
  </register>
  <register id="GPT_TWPS" acronym="GPT_TWPS" offset="0x34" width="32" description="This register contains the write posting bits for all writable functional registers.">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="W_PEND_TMAR" width="1" begin="4" end="4" resetval="0" description="When equal to 1, a write is pending to theGPT_TMAR register." range="" rwaccess="R"/>
    <bitfield id="W_PEND_TTGR" width="1" begin="3" end="3" resetval="0" description="When equal to 1, a write is pending to theGPT_TTGR register." range="" rwaccess="R"/>
    <bitfield id="W_PEND_TLDR" width="1" begin="2" end="2" resetval="0" description="When equal to 1, a write is pending to theGPT_TLDR register." range="" rwaccess="R"/>
    <bitfield id="W_PEND_TCRR" width="1" begin="1" end="1" resetval="0" description="When equal to 1, a write is pending to theGPT_TCRR register." range="" rwaccess="R"/>
    <bitfield id="W_PEND_TCLR" width="1" begin="0" end="0" resetval="0" description="When equal to 1, a write is pending to theGPT_TCLR register." range="" rwaccess="R"/>
  </register>
  <register id="GPT_TMAR" acronym="GPT_TMAR" offset="0x38" width="32" description="The compare logic consists of a 32-bit-wide, read/write data TMAR register and logic to compare counter.">
    <bitfield id="COMPARE_VALUE" width="32" begin="31" end="0" resetval="0x0000 0000" description="Value to be compared to the timer counter" range="" rwaccess="RW"/>
  </register>
  <register id="GPT_TCAR1" acronym="GPT_TCAR1" offset="0x3C" width="32" description="This register holds the first captured value of the counter register.">
    <bitfield id="CAPTURE_VALUE1" width="32" begin="31" end="0" resetval="0x0000 0000" description="First timer counter value captured on an external event trigger" range="" rwaccess="R"/>
  </register>
  <register id="GPT_TSICR" acronym="GPT_TSICR" offset="0x40" width="32" description="Timer synchronous interface control register">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0000 0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="POSTED" width="1" begin="2" end="2" resetval="-" description="Posted mode selection" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="POSTED_0" description="Posted mode inactive: Delay the command accept output signal."/>
      <bitenum value="1" id="1" token="POSTED_1" description="Posted mode active"/>
    </bitfield>
    <bitfield id="SFT" width="1" begin="1" end="1" resetval="0" description="This bit resets all the functional part of the module." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SFT_0" description="Software reset is disabled."/>
      <bitenum value="1" id="1" token="SFT_1" description="Software reset is enabled."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="GPT_TCAR2" acronym="GPT_TCAR2" offset="0x44" width="32" description="This register holds the second captured value of the counter register.">
    <bitfield id="CAPTURE_VALUE2" width="32" begin="31" end="0" resetval="0x0000 0000" description="Second timer counter value captured on an external event trigger" range="" rwaccess="R"/>
  </register>
  <register id="GPT_TPIR" acronym="GPT_TPIR" offset="0x48" width="32" description="This register is used for 1-ms tick generation. The TPIR register holds the value of the positive increment. The value of this register is added to the value of TCVR to determine whether next value loaded in TCRR is the subperiod value or the overperiod value.">
    <bitfield id="POSITIVE_INC_VALUE" width="32" begin="31" end="0" resetval="0x0000 0000" description="Value of the positive increment" range="" rwaccess="RW"/>
  </register>
  <register id="GPT_TNIR" acronym="GPT_TNIR" offset="0x4C" width="32" description="This register is used for 1-ms tick generation. The TNIR register holds the value of the negative increment. The value of this register is added to the value of the TCVR to determine whether next value loaded in TCRR is the subperiod value or the overperiod value.">
    <bitfield id="NEGATIVE_INV_VALUE" width="32" begin="31" end="0" resetval="0x0000 0000" description="Value of the negative increment" range="" rwaccess="RW"/>
  </register>
  <register id="GPT_TCVR" acronym="GPT_TCVR" offset="0x50" width="32" description="This register is used for 1-ms tick generation. The TCVR register determines whether next value loaded in TCRR is the subperiod value or the overperiod value.">
    <bitfield id="COUNTER_VALUE" width="32" begin="31" end="0" resetval="0x0000 0000" description="Value of CVR counter" range="" rwaccess="RW"/>
  </register>
  <register id="GPT_TOCR" acronym="GPT_TOCR" offset="0x54" width="32" description="This register is used to mask the tick interrupt for a selected number of ticks.">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="OVF_COUNTER_VALUE" width="24" begin="23" end="0" resetval="0x000000" description="Number of overflow events" range="" rwaccess="RW"/>
  </register>
  <register id="GPT_TOWR" acronym="GPT_TOWR" offset="0x58" width="32" description="This register holds the number of masked overflow interrupts.">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="OVF_WRAPPING_VALUE" width="24" begin="23" end="0" resetval="0x000000" description="Number of masked interrupts" range="" rwaccess="RW"/>
  </register>
</module>
