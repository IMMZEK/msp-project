<?xml version="1.0" encoding="UTF-8"?>
<module id="AESADV" HW_revision="1.0">
    <group id="AESADV_GPRCM" name="AESADV_GPRCM" instances="1" offset="0x800" instaddr="0x100" description="">
        <register id="AESADV_PWREN" width="32" offset="0x0" description="Power enable">
            <bitfield id="ENABLE" description="Enable the power" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="DISABLE" value="0x0" description="Disable Power"/>
                <bitenum id="ENABLE" value="0x1" description="Enable Power"/>
            </bitfield>
        </register>
        <register id="AESADV_RSTCTL" width="32" offset="0x4" description="Reset Control">
            <bitfield id="RESETSTKYCLR" description="Clear the RESETSTKY bit in the STAT register" begin="1" end="1" width="1" rwaccess="R/W">
                <bitenum id="NOP" value="0x0" description="Writing 0 has no effect"/>
                <bitenum id="CLR" value="0x1" description="Clear reset sticky bit"/>
            </bitfield>
            <bitfield id="RESETASSERT" description="Assert reset to the peripheral" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="NOP" value="0x0" description="Writing 0 has no effect"/>
                <bitenum id="ASSERT" value="0x1" description="Assert reset"/>
            </bitfield>
        </register>
        <register id="AESADV_STAT" width="32" offset="0x14" description="Status Register">
            <bitfield id="RESETSTKY" description="This bit indicates, if the peripheral was reset, since this bit was cleared by RESETSTKYCLR in the RSTCTL register" begin="16" end="16" width="1" rwaccess="R">
                <bitenum id="NORES" value="0x0" description="The peripheral has not been reset since this bit was last cleared by RESETSTKYCLR in the RSTCTL register"/>
                <bitenum id="RESET" value="0x1" description="The peripheral was reset since the last bit clear"/>
            </bitfield>
        </register>
    </group>
    <register id="AESADV_PDBGCTL" width="32" offset="0x1018" description="Peripheral Debug Control">
        <bitfield id="FREE" description="Free run control" begin="0" end="0" width="1" rwaccess="R">
            <bitenum id="RUN" value="0x1" description="The peripheral ignores the state of the Core Halted input"/>
        </bitfield>
    </register>
    <group id="AESADV_INT_EVENT0" name="AESADV_INT_EVENT0" instances="1" offset="0x1020" instaddr="0x30" description="">
        <register id="AESADV_INT_EVENT0_IIDX" width="32" offset="0x0" description="Interrupt Index Register">
            <bitfield id="STAT" description="Interrupt index status" begin="7" end="0" width="8" rwaccess="R">
                <bitenum id="NO_INTR" value="0x0" description="No interrupt pending"/>
                <bitenum id="OUTPUTRDY" value="0x1" description="This indicates that the core has an output available to be read out. This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)"/>
                <bitenum id="INPUTRDY" value="0x2" description="This indicates that the engine can take new input. This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)"/>
                <bitenum id="SAVEDCNTXTRDY" value="0x3" description="This bit indicates that an AES authentication TAG and/or IV block(s) is/are available for the CPU to retrieve. This bit is only asserted if the save_context bit is set to 1b. The bit is mutually exclusive with the context_ready bit."/>
                <bitenum id="CNTXTRDY" value="0x4" description="This bit indicates that the context data registers can be overwritten, and the CPU is permitted to write new context."/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT0_IMASK" width="32" offset="0x8" description="Interrupt mask">
            <bitfield id="OUTPUTRDY" description="This indicates that the core has an output available to be read out. This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
            <bitfield id="INPUTRDY" description="This indicates that the engine can take new input. This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)" begin="1" end="1" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
            <bitfield id="SAVEDCNTXTRDY" description="This bit indicates that an AES authentication TAG and/or IV block(s) is/are available for the CPU to retrieve. This bit is only asserted if the save_context bit is set to 1b. The bit is mutually exclusive with the context_ready bit." begin="2" end="2" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
            <bitfield id="CNTXTRDY" description="This bit indicates that the context data registers can be overwritten, and the CPU is permitted to write next context." begin="3" end="3" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT0_RIS" width="32" offset="0x10" description="Raw interrupt status">
            <bitfield id="OUTPUTRDY" description="This indicates that the core has an output available to be read out. This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Interrupt did not occur"/>
                <bitenum id="SET" value="0x1" description="Interrupt occured"/>
            </bitfield>
            <bitfield id="INPUTRDY" description="This indicates that the engine can take new input. This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)" begin="1" end="1" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
            <bitfield id="SAVEDCNTXTRDY" description="This bit indicates that an AES authentication TAG and/or IV block(s) is/are available for the CPU to retrieve. This bit is only asserted if the save_context bit is set to 1b. The bit is mutually exclusive with the context_ready bit." begin="2" end="2" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
            <bitfield id="CNTXTRDY" description="This bit indicates that the context data registers can be overwritten, and the CPU is permitted to write next context." begin="3" end="3" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT0_MIS" width="32" offset="0x18" description="Masked interrupt status">
            <bitfield id="OUTPUTRDY" description="This indicates that the core has an output available to be read out. This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Interrupt did not occur"/>
                <bitenum id="SET" value="0x1" description="Interrupt occured"/>
            </bitfield>
            <bitfield id="INPUTRDY" description="This indicates that the engine can take new input. This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)" begin="1" end="1" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
            <bitfield id="SAVEDCNTXTRDY" description="This bit indicates that an AES authentication TAG and/or IV block(s) is/are available for the CPU to retrieve. This bit is only asserted if the save_context bit is set to 1b. The bit is mutually exclusive with the context_ready bit." begin="2" end="2" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
            <bitfield id="CNTXTRDY" description="This bit indicates that the context data registers can be overwritten, and the CPU is permitted to write next context." begin="3" end="3" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT0_ISET" width="32" offset="0x20" description="Interrupt set">
            <bitfield id="OUTPUTRDY" description="This indicates that the core has an output available to be read out. This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="NO_EFFECT" value="0x0" description="Writing 0 has no effect"/>
                <bitenum id="SET" value="0x1" description="Set Interrupt"/>
            </bitfield>
            <bitfield id="INPUTRDY" description="This indicates that the engine can take new input.This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)" begin="1" end="1" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
            <bitfield id="SAVEDCNTXTRDY" description="This bit indicates that an AES authentication TAG and/or IV block(s) is/are available for the CPU to retrieve. This bit is only asserted if the save_context bit is set to 1b. The bit is mutually exclusive with the context_ready bit." begin="2" end="2" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
            <bitfield id="CNTXTRDY" description="This bit indicates that the context data registers can be overwritten, and the CPU is permitted to write next context." begin="3" end="3" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT0_ICLR" width="32" offset="0x28" description="Interrupt clear">
            <bitfield id="OUTPUTRDY" description="This indicates that the core has an output available to be read out. This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="NO_EFFECT" value="0x0" description="Writing 0 has no effect"/>
                <bitenum id="CLR" value="0x1" description="Clear Interrupt"/>
            </bitfield>
            <bitfield id="INPUTRDY" description="This indicates that the engine can take new input. This should not be used if DMA handshake is used (AES_DMA_HS.DMA_DATA_ACK set to 1)" begin="1" end="1" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
            <bitfield id="SAVEDCNTXTRDY" description="This bit indicates that an AES authentication TAG and/or IV block(s) is/are available for the CPU to retrieve. This bit is only asserted if the save_context bit is set to 1b. The bit is mutually exclusive with the context_ready bit." begin="2" end="2" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
            <bitfield id="CNTXTRDY" description="This bit indicates that the context data registers can be overwritten, and the CPU is permitted to write next context." begin="3" end="3" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
        </register>
    </group>
    <group id="AESADV_INT_EVENT1" name="AESADV_INT_EVENT1" instances="1" offset="0x1050" instaddr="0x30" description="">
        <register id="AESADV_INT_EVENT1_IIDX" width="32" offset="0x0" description="Interrupt Index Register">
            <bitfield id="STAT" description="Interrupt index status" begin="7" end="0" width="8" rwaccess="R">
                <bitenum id="NO_INTR" value="0x0" description="No interrupt pending"/>
                <bitenum id="TRIG0" value="0x1" description="AES trigger 0 DMA (Data Input trigger)"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT1_IMASK" width="32" offset="0x8" description="Interrupt mask">
            <bitfield id="TRIG0" description="TRIG0 event mask." begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT1_RIS" width="32" offset="0x10" description="Raw interrupt status">
            <bitfield id="TRIG0" description="TRIG0 event" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Interrupt did not occur"/>
                <bitenum id="SET" value="0x1" description="Interrupt occured"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT1_MIS" width="32" offset="0x18" description="Masked interrupt status">
            <bitfield id="TRIG0" description="TRIG0 event" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Interrupt did not occur"/>
                <bitenum id="SET" value="0x1" description="Interrupt occured"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT1_ISET" width="32" offset="0x20" description="Interrupt set">
            <bitfield id="TRIG0" description="TRIG0" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="NO_EFFECT" value="0x0" description="Writing 0 has no effect"/>
                <bitenum id="SET" value="0x1" description="Set Interrupt"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT1_ICLR" width="32" offset="0x28" description="Interrupt clear">
            <bitfield id="TRIG0" description="TRIG0 event" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="NO_EFFECT" value="0x0" description="Writing 0 has no effect"/>
                <bitenum id="CLR" value="0x1" description="Clear Interrupt"/>
            </bitfield>
        </register>
    </group>
    <group id="AESADV_INT_EVENT2" name="AESADV_INT_EVENT2" instances="1" offset="0x1080" instaddr="0x30" description="">
        <register id="AESADV_INT_EVENT2_IIDX" width="32" offset="0x0" description="Interrupt Index Register">
            <bitfield id="STAT" description="Interrupt index status" begin="7" end="0" width="8" rwaccess="R">
                <bitenum id="NO_INTR" value="0x0" description="No interrupt pending"/>
                <bitenum id="TRIG1" value="0x1" description="AES DMA Trigger 1 (Data Output trigger)"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT2_IMASK" width="32" offset="0x8" description="Interrupt mask">
            <bitfield id="TRIG1" description="TRIG1 event mask." begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Clear Interrupt Mask"/>
                <bitenum id="SET" value="0x1" description="Set Interrrupt Mask"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT2_RIS" width="32" offset="0x10" description="Raw interrupt status">
            <bitfield id="TRIG1" description="TRIG1 event" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Interrupt did not occur"/>
                <bitenum id="SET" value="0x1" description="Interrupt occured"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT2_MIS" width="32" offset="0x18" description="Masked interrupt status">
            <bitfield id="TRIG1" description="TRIG1 event" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="CLR" value="0x0" description="Interrupt did not occur"/>
                <bitenum id="SET" value="0x1" description="Interrupt occured"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT2_ISET" width="32" offset="0x20" description="Interrupt set">
            <bitfield id="TRIG1" description="TRIG1 event" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="NO_EFFECT" value="0x0" description="Writing 0 has no effect"/>
                <bitenum id="SET" value="0x1" description="Set Interrupt"/>
            </bitfield>
        </register>
        <register id="AESADV_INT_EVENT2_ICLR" width="32" offset="0x28" description="Interrupt clear">
            <bitfield id="TRIG1" description="TRIG1 event" begin="0" end="0" width="1" rwaccess="R/W">
                <bitenum id="NO_EFFECT" value="0x0" description="Writing 0 has no effect"/>
                <bitenum id="CLR" value="0x1" description="Clear Interrupt"/>
            </bitfield>
        </register>
    </group>
    <register id="AESADV_EVT_MODE" width="32" offset="0x10E0" description="Event Mode">
        <bitfield id="INT0_CFG" description="Event line mode select for event corresponding to [IPSTANDARD.INT_EVENT0]" begin="1" end="0" width="2" rwaccess="R">
            <bitenum id="DISABLE" value="0x0" description="The interrupt or event line is disabled."/>
            <bitenum id="SOFTWARE" value="0x1" description="The interrupt or event line is in software mode. Software must clear the RIS."/>
            <bitenum id="HARDWARE" value="0x2" description="The interrupt or event line is in hardware mode. The hardware (another module) clears automatically the associated RIS flag."/>
        </bitfield>
        <bitfield id="EVT1_CFG" description="Event line mode select for event corresponding to [IPSTANDARD.INT_EVENT1]" begin="3" end="2" width="2" rwaccess="R">
            <bitenum id="DISABLE" value="0x0" description="The interrupt or event line is disabled."/>
            <bitenum id="SOFTWARE" value="0x1" description="The interrupt or event line is in software mode. Software must clear the RIS."/>
            <bitenum id="HARDWARE" value="0x2" description="The interrupt or event line is in hardware mode. The hardware (another module) clears automatically the associated RIS flag."/>
        </bitfield>
        <bitfield id="EVT2_CFG" description="Event line mode select for event corresponding to [IPSTANDARD.INT_EVENT2]" begin="5" end="4" width="2" rwaccess="R">
            <bitenum id="DISABLE" value="0x0" description="The interrupt or event line is disabled."/>
            <bitenum id="SOFTWARE" value="0x1" description="The interrupt or event line is in software mode. Software must clear the RIS."/>
            <bitenum id="HARDWARE" value="0x2" description="The interrupt or event line is in hardware mode. The hardware (another module) clears automatically the associated RIS flag."/>
        </bitfield>
    </register>
    <register id="AESADV_GCMCCM_TAG0" width="32" offset="0x1100" description="CBC-MAC third key (LSW) / GCM &amp; CCM Intermediate TAG (LSW)">
    </register>
    <register id="AESADV_GCMCCM_TAG1" width="32" offset="0x1104" description="CBC-MAC third key / GCM &amp; CCM Intermediate TAG">
    </register>
    <register id="AESADV_GCMCCM_TAG2" width="32" offset="0x1108" description="CBC-MAC third key / GCM &amp; CCM Intermediate TAG">
    </register>
    <register id="AESADV_GCMCCM_TAG3" width="32" offset="0x110C" description="CBC-MAC third key (MSW) / GCM &amp; CCM Intermediate TAG (MSW)">
    </register>
    <register id="AESADV_GHASH_H0" width="32" offset="0x1110" description="CCM &amp; CBC-MAC second key (LSW) / GCM Hash Key input (LSW)">
    </register>
    <register id="AESADV_GHASH_H1" width="32" offset="0x1114" description="CCM &amp; CBC-MAC second key  / GCM Hash Key input">
    </register>
    <register id="AESADV_GHASH_H2" width="32" offset="0x1118" description="CCM &amp; CBC-MAC second key  / GCM Hash Key input">
    </register>
    <register id="AESADV_GHASH_H3" width="32" offset="0x111C" description="CCM &amp; CBC-MAC second key (MSW) / GCM Hash Key input (MSW)">
    </register>
    <register id="AESADV_KEY0" width="32" offset="0x1120" description="KEY (LSW)">
    </register>
    <register id="AESADV_KEY1" width="32" offset="0x1124" description="KEY">
    </register>
    <register id="AESADV_KEY2" width="32" offset="0x1128" description="KEY">
    </register>
    <register id="AESADV_KEY3" width="32" offset="0x112C" description="KEY">
    </register>
    <register id="AESADV_KEY4" width="32" offset="0x1130" description="KEY">
    </register>
    <register id="AESADV_KEY5" width="32" offset="0x1134" description="KEY">
    </register>
    <register id="AESADV_KEY6" width="32" offset="0x1138" description="KEY">
    </register>
    <register id="AESADV_KEY7" width="32" offset="0x113C" description="KEY (MSW)">
    </register>
    <register id="AESADV_IV0" width="32" offset="0x1140" description="IV (LSW)">
    </register>
    <register id="AESADV_IV1" width="32" offset="0x1144" description="IV">
    </register>
    <register id="AESADV_IV2" width="32" offset="0x1148" description="IV">
    </register>
    <register id="AESADV_IV3" width="32" offset="0x114C" description="IV">
    </register>
    <register id="AESADV_CTRL" width="32" offset="0x1150" description="Input/Output Buffer Control and Mode selection">
        <bitfield id="OUTPUT_RDY" description="Output Ready. If 1b, this read-only status bit indicates that an AES output block is available for the CPU to retrieve." begin="0" end="0" width="1" rwaccess="R">
            <bitenum id="NOTREADY" value="0x0" description="Not Ready"/>
            <bitenum id="READY" value="0x1" description="Ready"/>
        </bitfield>
        <bitfield id="INPUT_RDY" description="Ready for input. If 1b, this read-only status bit indicates that the 16-byte input buffer is empty, and the CPU is permitted to write the next block of data. After reset, this bit is 0. After writing a context, this bit will become 1b." begin="1" end="1" width="1" rwaccess="R">
            <bitenum id="NOTEMPTY" value="0x0" description="Not Ready"/>
            <bitenum id="EMPTY" value="0x1" description="Ready"/>
        </bitfield>
        <bitfield id="DIR" description="Direction. If set to 1b an encrypt operation is performed. If set to 0b a decrypt operation is performed. Note: This bit must be written with a 1b when CBC-MAC is selected." begin="2" end="2" width="1" rwaccess="R/W">
            <bitenum id="DECRYPT" value="0x0" description="Decryption"/>
            <bitenum id="ENCRYPT" value="0x1" description="Encryption"/>
        </bitfield>
        <bitfield id="KEYSIZE" description="Specifies the encryption strength / key width" begin="4" end="3" width="2" rwaccess="R/W">
            <bitenum id="K128" value="0x1" description="128-bit key"/>
            <bitenum id="K256" value="0x3" description="256-bit key"/>
        </bitfield>
        <bitfield id="CBC" description="If set to 1b, cipher-block-chaining (CBC) mode is selected." begin="5" end="5" width="1" rwaccess="R/W">
            <bitenum id="DISABLE" value="0x0" description="Disable CBC mode"/>
            <bitenum id="ENABLE" value="0x1" description="Select CBC mode"/>
        </bitfield>
        <bitfield id="CTR" description="If set to 1b, AES counter mode (CTR) is selected. Note: This bit must also be set for GCM and CCM, when encryption/decryption is required." begin="6" end="6" width="1" rwaccess="R/W">
            <bitenum id="DISABLE" value="0x0" description="Disable CBC mode"/>
            <bitenum id="ENABLE" value="0x1" description="Select CBC mode"/>
        </bitfield>
        <bitfield id="CTR_WIDTH" description="When the CTR bit is set, specifies the counter width for AES-CTR mode.
When the CFB bit is set, specifies the CFB mode feedback width:" begin="8" end="7" width="2" rwaccess="R/W">
            <bitenum id="CTR32" value="0x0" description="32-bit counter"/>
            <bitenum id="CFB128" value="0x0" description="CFB-128 mode"/>
            <bitenum id="CTR64" value="0x1" description="64-bit counter"/>
            <bitenum id="CTR96" value="0x2" description="96-bit counter"/>
            <bitenum id="CTR128" value="0x3" description="128-bit counter"/>
        </bitfield>
        <bitfield id="ICM" description="When the CFB bit is set, specifies the CFB mode feedback width:" begin="9" end="9" width="1" rwaccess="R/W">
            <bitenum id="DISABLE" value="0x0" description="Disable CBC mode"/>
            <bitenum id="ENABLE" value="0x1" description="Select CBC mode"/>
        </bitfield>
        <bitfield id="CFB" description="If set to 1b, AES cipher feedback mode CFB is selected. Use the ctr_width field to specify the feedback width." begin="10" end="10" width="1" rwaccess="R/W">
            <bitenum id="DISABLE" value="0x0" description="Disable CBC mode"/>
            <bitenum id="ENABLE" value="0x1" description="Select CBC mode"/>
        </bitfield>
        <bitfield id="CBCMAC" description="If set to 1b, AES-CBC MAC is selected, the Direction bit must be set to 1 for this mode." begin="15" end="15" width="1" rwaccess="R/W">
            <bitenum id="DISABLE" value="0x0" description="Disable CBC mode"/>
            <bitenum id="ENABLE" value="0x1" description="Select CBC mode"/>
        </bitfield>
        <bitfield id="GCM" description="If not set to 00b, AES-GCM mode is selected, this is a combined mode, using the Galois field multiplier GF(2128) for authentication and AES-CTR mode for encryption, the bits specify the GCM mode: 01b = GHASH with H loaded and Y0-encrypted forced to zero 10b = GHASH with H loaded and Y0-encrypted calculated internally 11b = Autonomous GHASH (both H and Y0-encrypted calculated internally) Note: Besides GCM, the CTR mode bits must also be set to 1b to enable GCM with AES-CTR; if the CTR bit is not set a GHASH (authentication) only operation is performed. A GHASH only operation is only allowed if the GCM mode is set to '01b' and the direction bit is set to '0b'. Other modes may not be selected in combination with GCM. Table 14 below shows the valid combinations for the GCM and CTR mode bits, all other options are invalid and must not be selected." begin="17" end="16" width="2" rwaccess="R/W">
            <bitenum id="FORCE_ZERO" value="0x1" description="GHASH with H loaded and Y0-encrypted forced to 0."/>
            <bitenum id="LOAD_HASH_KEY" value="0x2" description="GHASH with H loaded and Y0-encrypted calculated internally"/>
            <bitenum id="AUTONOMOUS" value="0x3" description="Autonomous GHASH (both H and Y0-encrypted calculated internally)"/>
        </bitfield>
        <bitfield id="CCM" description="If set to 1b, AES-CCM is selected, this is a combined mode, using AES for both authentication and encryption. In addition to the CCM bit, the CTR mode bit must be set such that AES-CTR is enabled. Other combinations with CCM are invalid." begin="18" end="18" width="1" rwaccess="R/W">
            <bitenum id="DISABLE" value="0x0" description="Disable CBC mode"/>
            <bitenum id="ENABLE" value="0x1" description="Select CBC mode"/>
        </bitfield>
        <bitfield id="CCML" description="Defines L that indicates the width of the length field for CCM operations; the length field in bytes equals the value of CMM-L plus one. All values are supported." begin="21" end="19" width="3" rwaccess="R/W">
            <bitenum id="MINIMUM" value="0x0" description="Length is 1"/>
            <bitenum id="MAXIMUM" value="0x7" description="Length is 8"/>
        </bitfield>
        <bitfield id="CCMM" description="Defines M that indicates the length of the authentication field for CCM operations; the authentication field length equals two times (the value of CCM-M plus one). Note: The EIP-39 always returns a 128-bit authentication field, of which the M least significant bytes are valid. All values are supported." begin="24" end="22" width="3" rwaccess="R/W">
            <bitenum id="MINIMUM" value="0x0" description="Length is 1"/>
            <bitenum id="MAXIMUM" value="0x7" description="Length is 8"/>
        </bitfield>
        <bitfield id="OFB_GCM_CCM_CONT" description="This bit has a dual use, depending on the selection of CCM/GCM, see bits [18:16].
If CCM/GCM is not selected:
If this bit is set to 1b, full block AES output feedback mode (OFB-128) is selected.
If CCM/GCM is selected:
Continue processing of an interrupted AES-GCM or AES-CCM operation in the AAD phase.
Set this write-only signal to 1b together with the regular mode bit settings for a GCM or CCM operation, to continue processing from the next full AAD block (128 bits) boundary.
Before setting this bit all applicable context to resume processing must have been loaded into the engine: Keys, IV, intermediate digest/TAG, block counter and the CCM align data word (the latter is for CCM mode only). The mode can be written together with this bit, as it is part of the same register." begin="26" end="26" width="1" rwaccess="R/W">
            <bitenum id="OFB" value="0x1" description="Enable OFB"/>
            <bitenum id="GCM_CCM_CONTINUE" value="0x1" description="Continue GCM/CCM processing in AAD phase"/>
        </bitfield>
        <bitfield id="GET_DIGEST" description="Interrupt processing and generate an intermediate digest during an AES-GCM or AES-CCM operation.
Set this write-only signal to 1b to interrupt GCM or CCM processing at the next full block (128 bits) boundary. An intermediate digest may be requested during the encryption/decryption data phase or in the AAD phase.
Note: Interruption can only be done on full block (128 bits) boundaries. The minimum number of remaining bytes to resume and finalize the operation, must be greater than or equal to 1." begin="27" end="27" width="1" rwaccess="R/W">
            <bitenum id="NO_EFFECT" value="0x0" description="No effect"/>
            <bitenum id="ENABLE" value="0x1" description="Enable"/>
        </bitfield>
        <bitfield id="GCM_CONT" description="Continue processing of an interrupted AES-GCM or AES-CCM operation in the crypto/payload phase.
Set this write-only signal to 1b together with the regular mode bit settings for a GCM or CCM operation, to continue processing from the next full block (128 bits) boundary.
Before setting this bit all applicable context to resume processing must have been loaded into the engine: Keys, IV, intermediate digest/TAG and block counter. The mode can be written together with this bit, as it is part of the same register." begin="28" end="28" width="1" rwaccess="R/W">
            <bitenum id="NO_EFFECT" value="0x0" description="No effect"/>
            <bitenum id="ENABLE" value="0x1" description="Enable"/>
        </bitfield>
        <bitfield id="SAVE_CNTXT" description="This bit is used to indicate that an authentication TAG or result IV needs to be stored as a result context. If this bit is set, context output DMA and/or interrupt will be asserted if the operation is finished, and related signals are enabled.
Typically, this value must be set for authentication modes returning a TAG (CBC-MAC, GCM and CCM), or for basic encryption modes that require future continuation with the current result IV.
If this bit is set, the engine will hold its full context until the TAG and/or IV registers are read. Only after reading the TAG or IV, a new DMA request for a new (input) context will be asserted.
If this bit is not set, the engine will assert the context input DMA request signal directly after starting to process the last block with the current context." begin="29" end="29" width="1" rwaccess="R/W">
            <bitenum id="NO_EFFECT" value="0x0" description="No effect"/>
            <bitenum id="ENABLE" value="0x1" description="Enable"/>
        </bitfield>
        <bitfield id="SAVED_CNTXT_RDY" description="If 1b, this read-only status bit indicates that an AES authentication TAG and/or IV block(s) is/are available for the Host to retrieve. This bit is only asserted if the save_context bit is set to 1b. The bit is mutually exclusive with the context_ready bit." begin="30" end="30" width="1" rwaccess="R">
            <bitenum id="NOTREADY" value="0x0" description="Not ready"/>
            <bitenum id="READY" value="0x1" description="Ready"/>
        </bitfield>
        <bitfield id="CNTXT_RDY" description="If 1b, this read-only status bit indicates that the context data registers can be overwritten, and the CPU is permitted to write the next context." begin="31" end="31" width="1" rwaccess="R">
            <bitenum id="NOTREADY" value="0x0" description="Not ready"/>
            <bitenum id="READY" value="0x1" description="Ready"/>
        </bitfield>
    </register>
    <register id="AESADV_C_LENGTH_0" width="32" offset="0x1154" description="Crypto data length (LSW)">
    </register>
    <register id="AESADV_C_LENGTH_1" width="32" offset="0x1158" description="Crypto data length (MSW)">
        <bitfield id="DATA" description="Bits [60:0] of the crypto length registers (LSW and MSW) store the cryptographic data length in bytes for all modes. Once processing with this context is started, this length decrements to zero. Data lengths up to (261-1) bytes are allowed.
For GCM, any value up to 236-32 bytes can be used. This is because a 32-bit counter mode is used; the maximum number of 128-bit blocks is 232-2, resulting in a maximum number of bytes of 236-32.
A write to this register triggers the engine to start using this context. This is valid for all modes except GCM and CCM.
Note that for the combined modes, this length does not include the authentication only data; the authentication length is specified in the AES_AAD_LENGTH register below.
All modes must have a length &gt; 0. For the combined modes, it is allowed to have one of the lengths equal to zero.
For the basic encryption modes (ECB/CBC/CTR/ICM/CFB/OFB) it is allowed to program zero to the length field; in that case the length is assumed infinite.
All data must be byte (8-bit) aligned for stream cipher modes; bit aligned data streams are not supported. For block cipher modes, the data length must be programmed in multiples of the block cipher size, 16 bytes." begin="28" end="0" width="29" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="AESADV_AAD_LENGTH" width="32" offset="0x115C" description="AAD Data Length">
    </register>
    <register id="AESADV_DATA0" width="32" offset="0x1160" description="Data input (LSW) / Data output (LSW)">
    </register>
    <register id="AESADV_DATA1" width="32" offset="0x1164" description="Data input / Data output">
    </register>
    <register id="AESADV_DATA2" width="32" offset="0x1168" description="Data input / Data output">
    </register>
    <register id="AESADV_DATA3" width="32" offset="0x116C" description="Data input (LSW) / Data output (MSW)">
    </register>
    <register id="AESADV_TAG0" width="32" offset="0x1170" description="Hash result (LSW)">
    </register>
    <register id="AESADV_TAG1" width="32" offset="0x1174" description="Hash result">
    </register>
    <register id="AESADV_TAG2" width="32" offset="0x1178" description="Hash result">
    </register>
    <register id="AESADV_TAG3" width="32" offset="0x117C" description="Hash result (MSW)">
    </register>
    <register id="AESADV_STATUS" width="32" offset="0x1180" description="Status">
        <bitfield id="KEYWR" description="Key write status. 0 - user write to KEY register is allowed. 1 - user write to KEY register is ignored.
In order to allow user write, perform a module reset." begin="0" end="0" width="1" rwaccess="R">
            <bitenum id="ENABLED" value="0x0" description="User write to KEY MMR is allowed"/>
            <bitenum id="DISABLED" value="0x1" description="User write to KEY MMR is disabled. Writing has no effect."/>
        </bitfield>
    </register>
    <register id="AESADV_DATA_IN" width="32" offset="0x1184" description="Data in alias register">
    </register>
    <register id="AESADV_DATA_OUT" width="32" offset="0x1188" description="Data out alias register">
    </register>
    <register id="AESADV_FORCE_IN_AV" width="32" offset="0x11D0" description="Data control register for input data">
    </register>
    <register id="AESADV_CCM_ALN_WRD" width="32" offset="0x11D4" description="AES-CCM AAD alignment data word">
    </register>
    <register id="AESADV_BLK_CNT0" width="32" offset="0x11D8" description="Internal block counter (LSW)">
    </register>
    <register id="AESADV_BLK_CNT1" width="32" offset="0x11DC" description="Internal block counter (MSW)">
        <bitfield id="DATA" description="Internal block counter for AES GCM and CCM operations.
These bits read the block count value that represents the number of blocks to go. This value is valid with saved_context_ready after a request for an intermediate GCM/CCM digest.
Writing these registers will restore the internal block counter to the programmed value. This only needs to be done to prepare the engine to continue processing of an interrupted GCM or CCM operation.
Also refer to the get_digest and gcm_ccm_continue bits in AES_CTRL register." begin="23" end="0" width="24" rwaccess="R/W">
        </bitfield>
    </register>
    <register id="AESADV_DMA_HS" width="32" offset="0x11F4" description="Control register for DMA handshaking">
        <bitfield id="DMA_DATA_ACK" description="When this bit is 0b, input and output data acknowledge is I/O register based, as specified in the description of the AES_DATA_IN_n / AES_DATA_OUT_n registers.
When this bit is 1b, input and ouput data acknowledge is based on DMA handshake signals." begin="0" end="0" width="1" rwaccess="R/W">
            <bitenum id="DMA_DISABLE" value="0x0" description="Disable DMA based data handshake"/>
            <bitenum id="DMA_ENABLE" value="0x1" description="Enables DMA based handshake"/>
        </bitfield>
    </register>
</module>
