<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="MSS_DTHE" id="MSS_DTHE">
  
  
  <register acronym="S_EIP_CONFIG" id="S_EIP_CONFIG" offset="0x0" width="32">
    
  <bitfield begin="31" description="This register is secured request configuration.Writing 3 to this register enables the mreqsecure to enable the write to S_SYSCONFIG register in AES and SHA." end="0" id="CONFIG" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="S_EIP57T_IMST" id="S_EIP57T_IMST" offset="0x10" width="32">
    
  <bitfield begin="31" description="Reserved" end="3" id="RES" rwaccess="R" width="29"></bitfield>
    
  <bitfield begin="2" description="Data in: this interrupt is raised when DMA writes last word of input data to internal FIFO of the engine" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Context out: this interrupt is raised when DMA complets the output context movement from internal register" end="1" id="COUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="context in: this interrupt is raised when DMA complets Context write to internal register" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP57T_IRIS" id="S_EIP57T_IRIS" offset="0x14" width="32">
    
  <bitfield begin="31" description="Reserved" end="3" id="RES" rwaccess="R" width="29"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Context output is done" end="1" id="COUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP57T_IMIS" id="S_EIP57T_IMIS" offset="0x18" width="32">
    
  <bitfield begin="31" description="Reserved" end="3" id="RES" rwaccess="R" width="29"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Context output is done" end="1" id="COUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP57T_ICIS" id="S_EIP57T_ICIS" offset="0x1C" width="32">
    
  <bitfield begin="31" description="Reserved" end="3" id="RES" rwaccess="R" width="29"></bitfield>
    
  <bitfield begin="2" description="Clear “input Data movement done” flag" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Clear “Context output done” flag" end="1" id="COUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Clear “context input done” flag" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP36T_IMST" id="S_EIP36T_IMST" offset="0x20" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Data out: this interrupt is raised when DMA finishes writing last word of the process result" end="3" id="DOUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Data in: this interrupt is raised when DMA writes last word of input data to internal FIFO of the engine" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Context out: this interrupt is raised when DMA complets the output context movement from internal register" end="1" id="COUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="context in: this interrupt is raised when DMA complets Context write to internal register" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP36T_IRIS" id="S_EIP36T_IRIS" offset="0x24" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Output Data movement is done" end="3" id="DOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Context output is done" end="1" id="COUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP36T_IMIS" id="S_EIP36T_IMIS" offset="0x28" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Output Data movement is done" end="3" id="DOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Context output is done" end="1" id="COUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP36T_ICIS" id="S_EIP36T_ICIS" offset="0x2C" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Clear “output Data movement done” flag" end="3" id="DOUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Clear “input Data movement done” flag" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Clear “Context output done” flag" end="1" id="COUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Clear “context input done” flag" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP16T_IMST" id="S_EIP16T_IMST" offset="0x30" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES2" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Data out: this interrupt is raised when DMA finishes writing last word of the process result" end="3" id="DOUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Data in: this interrupt is raised when DMA writes last word of input data to internal FIFO of the engine" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved" end="1" id="RES1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context in: this interrupt is raised when DMA complets Context write to internal register" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP16T_IRIS" id="S_EIP16T_IRIS" offset="0x34" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES2" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Output Data movement is done" end="3" id="DOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved" end="1" id="RES1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP16T_IMIS" id="S_EIP16T_IMIS" offset="0x38" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES2" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Output Data movement is done" end="3" id="DOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved" end="1" id="RES1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP16T_ICIS" id="S_EIP16T_ICIS" offset="0x3C" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES2" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Clear “output Data movement done” flag" end="3" id="DOUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Clear “input Data movement done” flag" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved" end="1" id="RES1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Clear &quot;context input done” flag" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP_CGCFG" id="S_EIP_CGCFG" offset="0x200" width="32">
    
  <bitfield begin="31" description="Reserved" end="5" id="RES" rwaccess="R" width="27"></bitfield>
    
  <bitfield begin="4" description="Clock gating protocol setting for EIP29T. 0 – Follow direct protocol 1 – Follow idle_req/ack protocol." end="4" id="EIP29_CFG" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Clock gating protocol setting for EIP75T. 0 – Follow direct protocol 1 – Follow idle_req/ack protocol." end="3" id="EIP75_CFG" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Clock gating protocol setting for EIP16T. 0 – Follow direct protocol 1 – Follow idle_req/ack protocol." end="2" id="EIP16_CFG" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Clock gating protocol setting for EIP36T. 0 – Follow direct protocol 1 – Follow idle_req/ack protocol." end="1" id="EIP36_CFG" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Clock gating protocol setting for EIP57T. 0 – Follow direct protocol 1 – Follow idle_req/ack protocol." end="0" id="EIP57_CFG" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_EIP_CGREQ" id="S_EIP_CGREQ" offset="0x204" width="32">
    
  <bitfield begin="31" description="When “0x5” write “1” to lower bits [4:0] will set the bit. Write “0” will be ignored When “0x2” write “1” to lower bit [4:0] will clear the bit. Write “0” will be ignored for other key value, regular read write operation" end="28" id="KEY" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="Reserved" end="5" id="RES" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="4" description="0 – request clock gating 1 – request to un-gate the clock." end="4" id="EIP29_REQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="0 – request clock gating 1 – request to un-gate the clock." end="3" id="EIP75_REQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="0 – request clock gating 1 – request to un-gate the clock." end="2" id="EIP16_REQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="0 – request clock gating 1 – request to un-gate the clock." end="1" id="EIP36_REQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 – request clock gating 1 – request to un-gate the clock." end="0" id="EIP57_REQ" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="S_CRC_CTRL" id="S_CRC_CTRL" offset="0x400" width="32">
    
  <bitfield begin="31" description="Reserved" end="16" id="RES3" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="1 if use Flash access port to feed CRC (uses length and address in that block to control data (Reserved). Only present in DTHE_S_CRC_CTRL register" end="15" id="FLASH_ACC2CRC" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Initialize the CRC 00 – use SEED register context as starting value 10 – all “zero” 11 – all “one” This is self clearing. With first write to data register this value clears to zero and remain zero for rest of the operation unless written again" end="13" id="INIT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="12" description="Input data size 0 – 32 bit 1 – 8 bit" end="12" id="BYTE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Reserved" end="10" id="RES2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="9" description="Inverse the bits of result before storing to CRC_RSLT_PP0" end="9" id="OINV" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Bit reserved the output result byte before storing to CRC_RSLT_PP0. applicable for all bytes in word" end="8" id="OBR" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Bit reverse the input byte. For all bytes in word" end="7" id="IBR" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Reserved" end="6" id="RES1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Endian control [0] – swap byte in half-word [1] – swap half word" end="4" id="ENDIAN" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="3" description="Type of operation 0000 – polynomial 0x8005  0001 – polynomial 0x1021 0010 – polynomial 0x4C11DB7  0011 – polynomial 0x1EDC6F41 1000 – TCP checksum TYPE in DTHE_S_CRC_CTRL &amp; DTHE_S_CRC_CTRL should be exclusive" end="0" id="TYPE" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="S_CRC_SEED" id="S_CRC_SEED" offset="0x410" width="32">
    
  <bitfield begin="31" description="Starting seed of CRC and checksum operation. Please see CTRL register for more detail. This resister also holds the latest result of CRC or checksum operation" end="0" id="SEED" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="S_CRC_DIN" id="S_CRC_DIN" offset="0x414" width="32">
    
  <bitfield begin="31" description="Input data for CRC or checksum operation" end="0" id="DATA_IN" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="S_CRC_RSLT_PP" id="S_CRC_RSLT_PP" offset="0x418" width="32">
    
  <bitfield begin="31" description="result data of CRC or checksum operation" end="0" id="RSLT_PP" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="P_EIP57T_IMST" id="P_EIP57T_IMST" offset="0x810" width="32">
    
  <bitfield begin="31" description="Reserved" end="3" id="RES" rwaccess="R" width="29"></bitfield>
    
  <bitfield begin="2" description="Data in: this interrupt is raised when DMA writes last word of input data to internal FIFO of the engine" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Context out: this interrupt is raised when DMA complets the output context movement from internal register" end="1" id="COUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="context in: this interrupt is raised when DMA complets Context write to internal register" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP57T_IRIS" id="P_EIP57T_IRIS" offset="0x814" width="32">
    
  <bitfield begin="31" description="Reserved" end="3" id="RES" rwaccess="R" width="29"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Context output is done" end="1" id="COUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP57T_IMIS" id="P_EIP57T_IMIS" offset="0x818" width="32">
    
  <bitfield begin="31" description="Reserved" end="3" id="RES" rwaccess="R" width="29"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Context output is done" end="1" id="COUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP57T_ICIS" id="P_EIP57T_ICIS" offset="0x81C" width="32">
    
  <bitfield begin="31" description="Reserved" end="3" id="RES" rwaccess="R" width="29"></bitfield>
    
  <bitfield begin="2" description="Clear “input Data movement done” flag" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Clear “Context output done” flag" end="1" id="COUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Clear “context input done” flag" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP36T_IMST" id="P_EIP36T_IMST" offset="0x820" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Data out: this interrupt is raised when DMA finishes writing last word of the process result" end="3" id="DOUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Data in: this interrupt is raised when DMA writes last word of input data to internal FIFO of the engine" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Context out: this interrupt is raised when DMA complets the output context movement from internal register" end="1" id="COUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="context in: this interrupt is raised when DMA complets Context write to internal register" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP36T_IRIS" id="P_EIP36T_IRIS" offset="0x824" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Output Data movement is done" end="3" id="DOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Context output is done" end="1" id="COUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP36T_IMIS" id="P_EIP36T_IMIS" offset="0x828" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Output Data movement is done" end="3" id="DOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Context output is done" end="1" id="COUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP36T_ICIS" id="P_EIP36T_ICIS" offset="0x82C" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Clear “output Data movement done” flag" end="3" id="DOUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Clear “input Data movement done” flag" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Clear “Context output done” flag" end="1" id="COUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Clear “context input done” flag" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP16T_IMST" id="P_EIP16T_IMST" offset="0x830" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES2" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Data out: this interrupt is raised when DMA finishes writing last word of the process result" end="3" id="DOUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Data in: this interrupt is raised when DMA writes last word of input data to internal FIFO of the engine" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved" end="1" id="RES1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context in: this interrupt is raised when DMA complets Context write to internal register" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP16T_IRIS" id="P_EIP16T_IRIS" offset="0x834" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES2" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Output Data movement is done" end="3" id="DOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved" end="1" id="RES1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP16T_IMIS" id="P_EIP16T_IMIS" offset="0x838" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES2" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Output Data movement is done" end="3" id="DOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="input Data movement is done" end="2" id="DIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved" end="1" id="RES1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="context input is done" end="0" id="CIN" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP16T_ICIS" id="P_EIP16T_ICIS" offset="0x83C" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="RES2" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Clear “output Data movement done” flag" end="3" id="DOUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Clear “input Data movement done” flag" end="2" id="DIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved" end="1" id="RES1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Clear &quot;context input done” flag" end="0" id="CIN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP_CGCFG" id="P_EIP_CGCFG" offset="0xA00" width="32">
    
  <bitfield begin="31" description="Reserved" end="5" id="RES" rwaccess="R" width="27"></bitfield>
    
  <bitfield begin="4" description="Clock gating protocol setting for EIP29T. 0 – Follow direct protocol 1 – Follow idle_req/ack protocol." end="4" id="EIP29_CFG" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Clock gating protocol setting for EIP75T. 0 – Follow direct protocol 1 – Follow idle_req/ack protocol." end="3" id="EIP75_CFG" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Clock gating protocol setting for EIP16T. 0 – Follow direct protocol 1 – Follow idle_req/ack protocol." end="2" id="EIP16_CFG" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Clock gating protocol setting for EIP36T. 0 – Follow direct protocol 1 – Follow idle_req/ack protocol." end="1" id="EIP36_CFG" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Clock gating protocol setting for EIP57T. 0 – Follow direct protocol 1 – Follow idle_req/ack protocol." end="0" id="EIP57_CFG" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_EIP_CGREQ" id="P_EIP_CGREQ" offset="0xA04" width="32">
    
  <bitfield begin="31" description="When “0x5” write “1” to lower bits [4:0] will set the bit. Write “0” will be ignored When “0x2” write “1” to lower bit [4:0] will clear the bit. Write “0” will be ignored for other key value, regular read write operation" end="28" id="KEY" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="Reserved" end="5" id="RES" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="4" description="0 – request clock gating 1 – request to un-gate the clock." end="4" id="EIP29_REQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="0 – request clock gating 1 – request to un-gate the clock." end="3" id="EIP75_REQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="0 – request clock gating 1 – request to un-gate the clock." end="2" id="EIP16_REQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="0 – request clock gating 1 – request to un-gate the clock." end="1" id="EIP36_REQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 – request clock gating 1 – request to un-gate the clock." end="0" id="EIP57_REQ" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="P_CRC_CTRL" id="P_CRC_CTRL" offset="0xC00" width="32">
    
  <bitfield begin="31" description="Reserved" end="16" id="RES3" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="1 if use Flash access port to feed CRC (uses length and address in that block to control data (Reserved). Only present in DTHE_S_CRC_CTRL register" end="15" id="FLASH_ACC2CRC" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Initialize the CRC 00 – use SEED register context as starting value 10 – all “zero” 11 – all “one” This is self clearing. With first write to data register this value clears to zero and remain zero for rest of the operation unless written again" end="13" id="INIT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="12" description="Input data size 0 – 32 bit 1 – 8 bit" end="12" id="BYTE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Reserved" end="10" id="RES2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="9" description="Inverse the bits of result before storing to CRC_RSLT_PP0" end="9" id="OINV" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Bit reserved the output result byte before storing to CRC_RSLT_PP0. applicable for all bytes in word" end="8" id="OBR" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Bit reverse the input byte. For all bytes in word" end="7" id="IBR" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Reserved" end="6" id="RES1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Endian control [0] – swap byte in half-word [1] – swap half word" end="4" id="ENDIAN" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="3" description="Type of operation 0000 – polynomial 0x8005  0001 – polynomial 0x1021 0010 – polynomial 0x4C11DB7  0011 – polynomial 0x1EDC6F41 1000 – TCP checksum TYPE in DTHE_S_CRC_CTRL &amp; DTHE_S_CRC_CTRL should be exclusive" end="0" id="TYPE" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="P_CRC_SEED" id="P_CRC_SEED" offset="0xC10" width="32">
    
  <bitfield begin="31" description="Starting seed of CRC and checksum operation. Please see CTRL register for more detail. This resister also holds the latest result of CRC or checksum operation" end="0" id="SEED" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="P_CRC_DIN" id="P_CRC_DIN" offset="0xC14" width="32">
    
  <bitfield begin="31" description="Input data for CRC or checksum operation" end="0" id="DATA_IN" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="P_CRC_RSLT_PP" id="P_CRC_RSLT_PP" offset="0xC18" width="32">
    
  <bitfield begin="31" description="result data of CRC or checksum operation" end="0" id="RSLT_PP" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="P_RAND_KEY0" id="P_RAND_KEY0" offset="0xF00" width="32">
    
  <bitfield begin="31" description="Device Specific Randon key [31:0]" end="0" id="KEY31_0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="P_RAND_KEY1" id="P_RAND_KEY1" offset="0xF04" width="32">
    
  <bitfield begin="31" description="Device Specific Randon key [63:32]" end="0" id="KEY63_32" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="P_RAND_KEY2" id="P_RAND_KEY2" offset="0xF08" width="32">
    
  <bitfield begin="31" description="Device Specific Randon key [95:64]" end="0" id="KEY95_64" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="P_RAND_KEY3" id="P_RAND_KEY3" offset="0xF0C" width="32">
    
  <bitfield begin="31" description="Device Specific Randon key [127:96]" end="0" id="KEY127_96" rwaccess="R" width="32"></bitfield>
  </register>
</module>
