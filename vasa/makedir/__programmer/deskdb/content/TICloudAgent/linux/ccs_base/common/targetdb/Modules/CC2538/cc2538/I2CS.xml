<?xml version="1.0" encoding="UTF-8"?>
<!-- This file was autogenerated by Socrates Bitwise, Duolog Technologies Ltd. -->
<module id="I2CS" HW_revision="" XML_version="1.0" description="Register fields should be considered static unless otherwise noted as dynamic." xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="setup_parser.xsd">
    <register acronym="OAR" width="32" description="I2C slave own address
This register consists of seven address bits that identify the CC2538 I2C device on the I2C bus." id="OAR" offset="0x0" >
        <bitfield range="" begin="31" width="25" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved bit. To provide compatibility with future products, the value of a reserved bit should be preserved across a read-modify-write operation." id="Reserved25" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="I2C slave own address
This field specifies bits A6 through A0 of the slave address." id="OAR" resetval="" >
        </bitfield>
    </register>
    <register acronym="STAT" width="32" description="I2C slave control and status
This register functions as a control register when written, and a status register when read." id="STAT" offset="0x4" >
        <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved bit. To provide compatibility with future products, the value of a reserved bit should be preserved across a read-modify-write operation." id="Reserved29" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="First byte received
1: The first byte following the slave&apos;s own address has been received.
0: The first byte has not been received.
This bit is only valid when the RREQ bit is set and is automatically cleared when data has been read from the I2CSDR register.
Note: This bit is not used for slave transmit operations." id="FBR" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Transmit request
1: The I2C controller has been addressed as a slave transmitter and is using clock stretching to delay the master until data has been written to the I2CSDR register.
0: No outstanding transmit request." id="TREQ" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Receive request
1: The I2C controller has outstanding receive data from the I2C master and is using clock stretching to delay the master until data has been read from the I2CSDR register.
0: No outstanding receive data" id="RREQ" resetval="" >
        </bitfield>
    </register>
    <register acronym="CTRL" width="32" description="I2C slave control and status
This register functions as a control register when written, and a status register when read." id="CTRL" offset="0x4" >
        <bitfield range="" begin="31" width="31" end="1" rwaccess="WO" description="Software should not rely on the value of a reserved bit. To provide compatibility with future products, the value of a reserved bit should be preserved across a read-modify-write operation." id="Reserved31" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="Device active
0: Disables the I2C slave operation
1: Enables the I2C slave operation" id="DA" resetval="" >
        </bitfield>
    </register>
    <register acronym="DR" width="32" description="I2C slave data
This register contains the data to be transmitted when in the slave transmit state, and the data received when in the slave receive state." id="DR" offset="0x8" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="Software should not rely on the value of a reserved bit. To provide compatibility with future products, the value of a reserved bit should be preserved across a read-modify-write operation." id="Reserved24" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Data for transfer
This field contains the data for transfer during a slave receive or transmit operation." id="DATA" resetval="" >
        </bitfield>
    </register>
    <register acronym="IMR" width="32" description="I2C slave interrupt mask
This register controls whether a raw interrupt is promoted to a controller interrupt." id="IMR" offset="0xc" >
        <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved bit. To provide compatibility with future products, the value of a reserved bit should be preserved across a read-modify-write operation." id="Reserved29" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="Stop condition interrupt mask
1: The STOP condition interrupt is sent to the interrupt controller when the STOPRIS bit in the I2CSRIS register is set.
0: The STOPRIS interrupt is supressed and not sent to the interrupt controller." id="STOPIM" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Start condition interrupt mask
1: The START condition interrupt is sent to the interrupt controller when the STARTRIS bit in the I2CSRIS register is set.
0: The STARTRIS interrupt is supressed and not sent to the interrupt controller." id="STARTIM" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Data interrupt mask
1: The data received or data requested interrupt is sent to the interrupt controller when the DATARIS bit in the I2CSRIS register is set.
0: The DATARIS interrupt is surpressed and not sent to the interrupt controller." id="DATAIM" resetval="" >
        </bitfield>
    </register>
    <register acronym="RIS" width="32" description="I2C slave raw interrupt status
This register specifies whether an interrupt is pending." id="RIS" offset="0x10" >
        <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved bit. To provide compatibility with future products, the value of a reserved bit should be preserved across a read-modify-write operation." id="Reserved29" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="Stop condition raw interrupt status
1: A STOP condition interrupt is pending.
0: No interrupt
This bit is cleared by writing 1 to the STOPIC bit in the I2CSICR register." id="STOPRIS" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Start condition raw interrupt status
1: A START condition interrupt is pending.
0: No interrupt
This bit is cleared by writing 1 to the STARTIC bit in the I2CSICR register." id="STARTRIS" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Data raw interrupt status
1: A data received or data requested interrupt is pending.
0: No interrupt
This bit is cleared by writing 1 to the DATAIC bit in the I2CSICR register." id="DATARIS" resetval="" >
        </bitfield>
    </register>
    <register acronym="MIS" width="32" description="I2C slave masked interrupt status
This register specifies whether an interrupt was signaled." id="MIS" offset="0x14" >
        <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved bit. To provide compatibility with future products, the value of a reserved bit should be preserved across a read-modify-write operation." id="Reserved29" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="Stop condition masked interrupt status
1: An unmasked STOP condition interrupt is pending.
0: An interrupt has not occurred or is masked.
This bit is cleared by writing 1 to the STOPIC bit in the I2CSICR register." id="STOPMIS" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Start condition masked interrupt status
1: An unmasked START condition interrupt is pending.
0: An interrupt has not occurred or is masked.
This bit is cleared by writing 1 to the STARTIC bit in the I2CSICR register." id="STARTMIS" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Data masked interrupt status
1: An unmasked data received or data requested interrupt is pending.
0: An interrupt has not occurred or is masked.
This bit is cleared by writing 1 to the DATAIC bit in the I2CSICR register." id="DATAMIS" resetval="" >
        </bitfield>
    </register>
    <register acronym="ICR" width="32" description="I2C slave interrupt clear
This register clears the raw interrupt. A read of this register returns no meaningful data." id="ICR" offset="0x18" >
        <bitfield range="" begin="31" width="29" end="3" rwaccess="WO" description="Software should not rely on the value of a reserved bit. To provide compatibility with future products, the value of a reserved bit should be preserved across a read-modify-write operation." id="Reserved29" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="WO" description="Stop condition interrupt clear
Writing 1 to this bit clears the STOPRIS bit in the I2CSRIS register and the STOPMIS bit in the I2CSMIS register.
A read of this register returns no meaningful data." id="STOPIC" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="WO" description="Start condition interrupt vlear
Writing 1 to this bit clears the STARTRIS bit in the I2CSRIS register and the STARTMIS bit in the I2CSMIS register.
A read of this register returns no meaningful data." id="STARTIC" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="Data interrupt clear
Writing 1 to this bit clears the DATARIS bit in the I2CSRIS register and the DATAMIS bit in the I2CSMIS register.
A read of this register returns no meaningful data." id="DATAIC" resetval="" >
        </bitfield>
    </register>
</module>
