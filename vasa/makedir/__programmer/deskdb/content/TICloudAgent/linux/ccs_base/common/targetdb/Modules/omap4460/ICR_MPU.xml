<module name="ICR_MPU" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="ICR_REVISION" acronym="ICR_REVISION" offset="0x0" width="32" description="This register contains the IP revision code.">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="TI internal data" description="IP Revision" range="" rwaccess="R"/>
  </register>
  <register id="SYS_CONFIG" acronym="SYS_CONFIG" offset="0x10" width="32" description="This register allows controlling various parameters of the OCP interface.">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0000000" description="Read returns 0" range="" rwaccess="R"/>
    <bitfield id="IDLEMODE" width="2" begin="4" end="3" resetval="0x0" description="Slave interface power management, req/ack control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IDLEMODE_0" description="Force-idle"/>
      <bitenum value="1" id="1" token="IDLEMODE_1" description="No-idle"/>
      <bitenum value="3" id="3" token="IDLEMODE_3" description="Reserved"/>
      <bitenum value="2" id="2" token="IDLEMODE_2" description="Smart-idle"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="2" end="2" resetval="0" description="Read returns 0" range="" rwaccess="R"/>
    <bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0" description="Software reset. Set this bit to 1 to trigger a module reset. The bit is automatically reset by the hardware. During reads, it always return 0.0: Normal mode1: The module is reset" range="" rwaccess="RW"/>
    <bitfield id="AUTOIDLE" width="1" begin="0" end="0" resetval="0" description="Internal OCP clock gating0: OCP clock is free running1: Automatic OCP clock gating strategy is applied based on the OCP interface activity" range="" rwaccess="RW"/>
  </register>
  <register id="SYS_STATUS" acronym="SYS_STATUS" offset="0x14" width="32" description="This register provides status information about the module, excluding the interrupt status information.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="RESETDONE" width="1" begin="0" end="0" resetval="0" description="Internal reset monitoring0: Internal module reset ongoing1: Reset completed" range="" rwaccess="R">
      <bitenum value="1" id="1" token="RESETDONE_1_r" description="Reset completed"/>
      <bitenum value="0" id="0" token="RESETDONE_0_r" description="Internal module reset in ongoing"/>
    </bitfield>
  </register>
  <register id="M_IRQ_STATUS" acronym="M_IRQ_STATUS" offset="0x18" width="32" description="The interrupt status register regroups all the status of the module internal events that can generate an interrupt - Write 1 to a given bit resets this bit.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Reads returns 0" range="" rwaccess="R"/>
    <bitfield id="FLAG_SET" width="1" begin="1" end="1" resetval="0" description="Flag has been set inG_ICR register." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FLAG_SET_0_w" description="Received command (Rx path) status bit unchanged"/>
      <bitenum value="1" id="1" token="FLAG_SET_1_w" description="Received command (Rx path) status bit is reset"/>
      <bitenum value="1" id="1" token="FLAG_SET_1_r" description="Received command (Rx path) is true ('pending')"/>
      <bitenum value="0" id="0" token="FLAG_SET_0_r" description="Received command (Rx path) false"/>
    </bitfield>
    <bitfield id="FLAG_RESET" width="1" begin="0" end="0" resetval="0" description="Flag has been reset inM_ICR register." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FLAG_RESET_0_w" description="Received command (Rx path) status bit unchanged"/>
      <bitenum value="1" id="1" token="FLAG_RESET_1_w" description="Received command (Rx path) status bit is reset"/>
      <bitenum value="1" id="1" token="FLAG_RESET_1_r" description="Received command (Rx path) is true ('pending')"/>
      <bitenum value="0" id="0" token="FLAG_RESET_0_r" description="Received command (Rx path) false"/>
    </bitfield>
  </register>
  <register id="G_IRQ_STATUS" acronym="G_IRQ_STATUS" offset="0x1C" width="32" description="The interrupt status register regroups all the status of the module internal events that can generate an interrupt - Write 1 to a given bit resets this bit.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Reads returns 0" range="" rwaccess="R"/>
    <bitfield id="FLAG_SET" width="1" begin="1" end="1" resetval="0" description="Flag has been set inM_ICR register." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="FLAG_SET_0_w" description="Received command (Rx path) status bit unchanged"/>
      <bitenum value="1" id="1" token="FLAG_SET_1_w" description="Received command (Rx path) status bit is reset"/>
      <bitenum value="1" id="1" token="FLAG_SET_1_r" description="Received command (Rx path) is true ('pending')"/>
      <bitenum value="0" id="0" token="FLAG_SET_0_r" description="Received command (Rx path) false"/>
    </bitfield>
    <bitfield id="FLAG_RESET" width="1" begin="0" end="0" resetval="0" description="Flag has been reset inG_ICR register." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="FLAG_RESET_0_w" description="Received command (Rx path) status bit unchanged"/>
      <bitenum value="1" id="1" token="FLAG_RESET_1_w" description="Received command (Rx path) status bit is reset"/>
      <bitenum value="1" id="1" token="FLAG_RESET_1_r" description="Received command (Rx path) is true ('pending')"/>
      <bitenum value="0" id="0" token="FLAG_RESET_0_r" description="Received command (Rx path) false"/>
    </bitfield>
  </register>
  <register id="M_ICR" acronym="M_ICR" offset="0x20" width="32" description="Flags are used to notify an event to the other subsystem. The meaning of each flag is software dependent.">
    <bitfield id="FLAGS" width="32" begin="31" end="0" resetval="0x0000 0000" description="Meaning is software dependent." range="" rwaccess="RW W1toClr"/>
  </register>
  <register id="G_ICR" acronym="G_ICR" offset="0x24" width="32" description="Flags are used to notify an event to the other subsystem. The meaning of each flag is software dependent.">
    <bitfield id="FLAGS" width="32" begin="31" end="0" resetval="0x0000 0000" description="Meaning is software dependent." range="" rwaccess="RW W1toSet"/>
  </register>
  <register id="M_CTL" acronym="M_CTL" offset="0x28" width="32" description="Enables interrupts to subsystems.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="G_ICR_INTEN" width="1" begin="1" end="1" resetval="0" description="Enable interrupt to MPU-S0: No interrupt is generated1: An interrupt is generated when Modem-S sets a flag to MPU-S" range="" rwaccess="R"/>
    <bitfield id="M_ICR_INTEN" width="1" begin="0" end="0" resetval="0" description="Enable interrupt to MPU-S0: No interrupt is generated1: An interrupt is generated when Modem-S resets a flag set by MPU-S" range="" rwaccess="R"/>
  </register>
  <register id="G_CTL" acronym="G_CTL" offset="0x2C" width="32" description="Enables interrupts to subsystems.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="" range="" rwaccess="RW"/>
    <bitfield id="M_ICR_INTEN" width="1" begin="1" end="1" resetval="0" description="Enable interrupt to Modem-S0: No interrupt is generated1: An interrupt is generated when MPU-S sets a flag to Modem-S" range="" rwaccess="RW"/>
    <bitfield id="G_ICR_INTEN" width="1" begin="0" end="0" resetval="0" description="Enable interrupt to Modem-S0: No interrupt is generated1: An interrupt is generated when MPU-S resets a flag set by Modem-S" range="" rwaccess="RW"/>
  </register>
</module>
