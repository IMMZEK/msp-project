<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="EDMA3CC" id="EDMA3CC">
  
  
  <register acronym="PID" description="The peripheral identification register (PID) uniquely identifies the EDMA3CC and the specific revision of the EDMA3CC." id="PID" offset="0x0" width="16">
    
  <bitfield begin="15" description=" Peripheral identifier uniquely identifies the EDMA3CC and the specific revision of the EDMA3CC. [[br]]Value 0 to FFFF FFFFh. [[br]]Reset value for PID[31] to PID[16] is 4001h. [[br]]Peripheral identifier uniquely identifies the EDMA3CC and the specific revision of the EDMA3CC. [[br]]Value 0 to FFFF FFFFh. [[br]]Reset value for PID[15] to PID[0] is 4C00h." end="0" id="PID" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="CCCFG" description="The EDMA3CC configuration register (CCCFG) provides the features/resources for the EDMA3CC in a particular device." id="CCCFG" offset="0x4" width="32">
    
  <bitfield begin="31" description=" " end="26" id="RESERVED_1" rwaccess="R" width="6"></bitfield>
    
  <bitfield begin="25" description=" Memory protection existence." end="25" id="MP_EXIST" rwaccess="R" width="1">
    <bitenum description="Memory protection logic included." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Reserved." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="24" description=" Channel mapping existence." end="24" id="CHMAP_EXIST" rwaccess="R" width="1">
    <bitenum description="Channel mapping logic included." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Reserved." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description=" " end="22" id="RESERVED_2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="21" description=" Number of MP and shadow regions." end="20" id="NUM_REGN" rwaccess="R" width="2">
    <bitenum description="Reserved." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="4 regions." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Reserved" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Reserved." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description=" " end="19" id="RESERVED_3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description=" Number of queues/number of TCs." end="16" id="NUM_EVQUE" rwaccess="R" width="3">
    <bitenum description="Reserved." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved from 3h to 7h." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="3 EDMA3TCs/Event Queues" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Reserved." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Reserved." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" " end="15" id="RESERVED_4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description=" Number of PaRAM sets." end="12" id="NUM_PAENTRY" rwaccess="R" width="3">
    <bitenum description="Reserved." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved from 5h to 7h." id="en_4_0x5" token="en_4_0x5" value="0x5"></bitenum>
    <bitenum description="256 PaRAM sets." id="en_3_0x4" token="en_3_0x4" value="0x4"></bitenum>
    <bitenum description="Reserved" id="en_2_0x3" token="en_2_0x3" value="0x3"></bitenum>
    <bitenum description="Reserved from 0h to 3h." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description=" " end="11" id="RESERVED_5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description=" Number of interrupt channels." end="8" id="NUM_INTCH" rwaccess="R" width="3">
    <bitenum description="Reserved." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved from 5h to 7." id="en_4_0x5" token="en_4_0x5" value="0x5"></bitenum>
    <bitenum description="64 interrupt channels." id="en_3_0x4" token="en_3_0x4" value="0x4"></bitenum>
    <bitenum description="Reserved." id="en_2_0x3" token="en_2_0x3" value="0x3"></bitenum>
    <bitenum description="Reserved from 0h to 3h." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description=" Number of QDMA channels." end="4" id="NUM_QDMACH" rwaccess="R" width="3">
    <bitenum description="Reserved." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved from 5h to 7." id="en_4_0x5" token="en_4_0x5" value="0x5"></bitenum>
    <bitenum description="8 QDMA channels." id="en_3_0x4" token="en_3_0x4" value="0x4"></bitenum>
    <bitenum description="Reserved." id="en_2_0x3" token="en_2_0x3" value="0x3"></bitenum>
    <bitenum description="Reserved from 0h to 3h." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description=" Number of DMA channels." end="0" id="NUM_DMACH" rwaccess="R" width="3">
    <bitenum description="Reserved." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved." id="en_4_0x6" token="en_4_0x6" value="0x6"></bitenum>
    <bitenum description="64 DMA channels." id="en_3_0x5" token="en_3_0x5" value="0x5"></bitenum>
    <bitenum description="Reserved." id="en_2_0x4" token="en_2_0x4" value="0x4"></bitenum>
    <bitenum description="Reserved from 0h to 4h." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="SYSCONFIG" description="The EDMA3CC system configuration register is used for clock management configuration." id="SYSCONFIG" offset="0x10" width="32">
    
  <bitfield begin="31" description=" " end="6" id="RESERVED_1" rwaccess="R" width="26"></bitfield>
    
  <bitfield begin="5" description=" " end="4" id="RESERVED_2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="3" description=" Configuration of the local target state management mode. [[br]]By definition, target can handle read/write transaction as long as it is out of IDLE state. [[br]] " end="2" id="IDLEMODE" rwaccess="RW" width="2">
    <bitenum description="Smart-idle wakeup-capable mode: local target's idle state eventually follows (acknowledges) the system's idle requests, depending on the IP module's internal requirements. IP module may generate (IRQ- or DMA-request-related) wakeup events when in idle state. Mode is only relevant if the appropriate IP module &quot;swakeup&quot; output(s) is (are) implemented." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Smart-idle mode: local target's idle state eventually follows (acknowledges) the system's idle requests, depending on the IP module's internal requirements. IP module shall not generate (IRQ- or DMA-request-related) wakeup events." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="No-idle mode: local target never enters idle state. Backup mode, for debug only." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Force-idle mode: local target's idle state follows (acknowledges) the system's idle requests unconditionally, i.e. regardless of the IP module's internal requirements. Backup mode, for debug only." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" " end="1" id="RESERVED_3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description=" " end="0" id="RESERVED_4" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DCHMAP_0" description="" id="DCHMAP_0" offset="0x100" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"></bitfield>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"></bitfield>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"></bitfield>
  </register>
  
  
  <register acronym="DCHMAP_1" description="" id="DCHMAP_1" offset="0x104" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_2" description="" id="DCHMAP_2" offset="0x108" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_3" description="" id="DCHMAP_3" offset="0x10C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_4" description="" id="DCHMAP_4" offset="0x110" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_5" description="" id="DCHMAP_5" offset="0x114" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_6" description="" id="DCHMAP_6" offset="0x118" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_7" description="" id="DCHMAP_7" offset="0x11C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_8" description="" id="DCHMAP_8" offset="0x120" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_9" description="" id="DCHMAP_9" offset="0x124" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_10" description="" id="DCHMAP_10" offset="0x128" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_11" description="" id="DCHMAP_11" offset="0x12C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_12" description="" id="DCHMAP_12" offset="0x130" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_13" description="" id="DCHMAP_13" offset="0x134" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_14" description="" id="DCHMAP_14" offset="0x138" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_15" description="" id="DCHMAP_15" offset="0x13C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_16" description="" id="DCHMAP_16" offset="0x140" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_17" description="" id="DCHMAP_17" offset="0x144" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_18" description="" id="DCHMAP_18" offset="0x148" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_19" description="" id="DCHMAP_19" offset="0x14C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_20" description="" id="DCHMAP_20" offset="0x150" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_21" description="" id="DCHMAP_21" offset="0x154" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_22" description="" id="DCHMAP_22" offset="0x158" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_23" description="" id="DCHMAP_23" offset="0x15C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_24" description="" id="DCHMAP_24" offset="0x160" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_25" description="" id="DCHMAP_25" offset="0x164" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_26" description="" id="DCHMAP_26" offset="0x168" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_27" description="" id="DCHMAP_27" offset="0x16C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_28" description="" id="DCHMAP_28" offset="0x170" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_29" description="" id="DCHMAP_29" offset="0x174" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_30" description="" id="DCHMAP_30" offset="0x178" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_31" description="" id="DCHMAP_31" offset="0x17C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_32" description="" id="DCHMAP_32" offset="0x180" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_33" description="" id="DCHMAP_33" offset="0x184" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_34" description="" id="DCHMAP_34" offset="0x188" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_35" description="" id="DCHMAP_35" offset="0x18C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_36" description="" id="DCHMAP_36" offset="0x190" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_37" description="" id="DCHMAP_37" offset="0x194" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_38" description="" id="DCHMAP_38" offset="0x198" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_39" description="" id="DCHMAP_39" offset="0x19C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_40" description="" id="DCHMAP_40" offset="0x1A0" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_41" description="" id="DCHMAP_41" offset="0x1A4" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_42" description="" id="DCHMAP_42" offset="0x1A8" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_43" description="" id="DCHMAP_43" offset="0x1AC" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_44" description="" id="DCHMAP_44" offset="0x1B0" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_45" description="" id="DCHMAP_45" offset="0x1B4" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_46" description="" id="DCHMAP_46" offset="0x1B8" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_47" description="" id="DCHMAP_47" offset="0x1BC" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_48" description="" id="DCHMAP_48" offset="0x1C0" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_49" description="" id="DCHMAP_49" offset="0x1C4" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_50" description="" id="DCHMAP_50" offset="0x1C8" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_51" description="" id="DCHMAP_51" offset="0x1CC" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_52" description="" id="DCHMAP_52" offset="0x1D0" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_53" description="" id="DCHMAP_53" offset="0x1D4" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_54" description="" id="DCHMAP_54" offset="0x1D8" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_55" description="" id="DCHMAP_55" offset="0x1DC" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_56" description="" id="DCHMAP_56" offset="0x1E0" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_57" description="" id="DCHMAP_57" offset="0x1E4" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_58" description="" id="DCHMAP_58" offset="0x1E8" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_59" description="" id="DCHMAP_59" offset="0x1EC" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_60" description="" id="DCHMAP_60" offset="0x1F0" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_61" description="" id="DCHMAP_61" offset="0x1F4" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_62" description="" id="DCHMAP_62" offset="0x1F8" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="DCHMAP_63" description="" id="DCHMAP_63" offset="0x1FC" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" Points to the PaRAM set number for DMA channel n. [[br]]Value 0 to FFh." end="5" id="PAENTRY" rwaccess="RW" width="9"/>
    
  <bitfield begin="4" description=" " end="0" id="RESERVED_2" rwaccess="R" width="5"/>
  </register>
  
  
  <register acronym="QCHMAP_0" description="Each QDMA channel in EDMA3CC can be associated with any PaRAM set available on the device. Furthermore, the specific trigger word (0-7) of the PaRAM set can be programmed. The PaRAM set association and trigger word for every QDMA channel register is configurable using the QDMA channel map register (QCHMAPn). At reset the QDMA channel map registers for all QDMA channels point to PaRAM set 0. If an application makes use of both a DMA channel that points to PaRAM set 0 and any QDMA channels, ensure that QCHMAP is programmed appropriately to point to a different PaRAM entry." id="QCHMAP_0" offset="0x200" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"></bitfield>
    
  <bitfield begin="13" description=" PAENTRY points to the PaRAM set number for QDMA channel ." end="5" id="PAENTRY" rwaccess="RW" width="9">
    <bitenum description="Reserved, from 100h to 1FFh. Always write 0 to this bit. Writes of 1 to this bit are not supported and attempts to do so may result in undefine behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Parameter entry 0 through 255, from 0 to FFh." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Points to the specific trigger word of the PaRAM set defined by PAENTRY. [[br]]A write to the trigger word results in a QDMA event being recognized." end="2" id="TRWORD" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="1" description=" " end="0" id="RESERVED_2" rwaccess="R" width="2"></bitfield>
  </register>
  
  
  <register acronym="QCHMAP_1" description="Each QDMA channel in EDMA3CC can be associated with any PaRAM set available on the device. Furthermore, the specific trigger word (0-7) of the PaRAM set can be programmed. The PaRAM set association and trigger word for every QDMA channel register is configurable using the QDMA channel map register (QCHMAPn). At reset the QDMA channel map registers for all QDMA channels point to PaRAM set 0. If an application makes use of both a DMA channel that points to PaRAM set 0 and any QDMA channels, ensure that QCHMAP is programmed appropriately to point to a different PaRAM entry." id="QCHMAP_1" offset="0x204" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" PAENTRY points to the PaRAM set number for QDMA channel ." end="5" id="PAENTRY" rwaccess="RW" width="9">
    <bitenum description="Reserved, from 100h to 1FFh. Always write 0 to this bit. Writes of 1 to this bit are not supported and attempts to do so may result in undefine behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Parameter entry 0 through 255, from 0 to FFh." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Points to the specific trigger word of the PaRAM set defined by PAENTRY. [[br]]A write to the trigger word results in a QDMA event being recognized." end="2" id="TRWORD" rwaccess="RW" width="3"/>
    
  <bitfield begin="1" description=" " end="0" id="RESERVED_2" rwaccess="R" width="2"/>
  </register>
  
  
  <register acronym="QCHMAP_2" description="Each QDMA channel in EDMA3CC can be associated with any PaRAM set available on the device. Furthermore, the specific trigger word (0-7) of the PaRAM set can be programmed. The PaRAM set association and trigger word for every QDMA channel register is configurable using the QDMA channel map register (QCHMAPn). At reset the QDMA channel map registers for all QDMA channels point to PaRAM set 0. If an application makes use of both a DMA channel that points to PaRAM set 0 and any QDMA channels, ensure that QCHMAP is programmed appropriately to point to a different PaRAM entry." id="QCHMAP_2" offset="0x208" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" PAENTRY points to the PaRAM set number for QDMA channel ." end="5" id="PAENTRY" rwaccess="RW" width="9">
    <bitenum description="Reserved, from 100h to 1FFh. Always write 0 to this bit. Writes of 1 to this bit are not supported and attempts to do so may result in undefine behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Parameter entry 0 through 255, from 0 to FFh." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Points to the specific trigger word of the PaRAM set defined by PAENTRY. [[br]]A write to the trigger word results in a QDMA event being recognized." end="2" id="TRWORD" rwaccess="RW" width="3"/>
    
  <bitfield begin="1" description=" " end="0" id="RESERVED_2" rwaccess="R" width="2"/>
  </register>
  
  
  <register acronym="QCHMAP_3" description="Each QDMA channel in EDMA3CC can be associated with any PaRAM set available on the device. Furthermore, the specific trigger word (0-7) of the PaRAM set can be programmed. The PaRAM set association and trigger word for every QDMA channel register is configurable using the QDMA channel map register (QCHMAPn). At reset the QDMA channel map registers for all QDMA channels point to PaRAM set 0. If an application makes use of both a DMA channel that points to PaRAM set 0 and any QDMA channels, ensure that QCHMAP is programmed appropriately to point to a different PaRAM entry." id="QCHMAP_3" offset="0x20C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" PAENTRY points to the PaRAM set number for QDMA channel ." end="5" id="PAENTRY" rwaccess="RW" width="9">
    <bitenum description="Reserved, from 100h to 1FFh. Always write 0 to this bit. Writes of 1 to this bit are not supported and attempts to do so may result in undefine behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Parameter entry 0 through 255, from 0 to FFh." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Points to the specific trigger word of the PaRAM set defined by PAENTRY. [[br]]A write to the trigger word results in a QDMA event being recognized." end="2" id="TRWORD" rwaccess="RW" width="3"/>
    
  <bitfield begin="1" description=" " end="0" id="RESERVED_2" rwaccess="R" width="2"/>
  </register>
  
  
  <register acronym="QCHMAP_4" description="Each QDMA channel in EDMA3CC can be associated with any PaRAM set available on the device. Furthermore, the specific trigger word (0-7) of the PaRAM set can be programmed. The PaRAM set association and trigger word for every QDMA channel register is configurable using the QDMA channel map register (QCHMAPn). At reset the QDMA channel map registers for all QDMA channels point to PaRAM set 0. If an application makes use of both a DMA channel that points to PaRAM set 0 and any QDMA channels, ensure that QCHMAP is programmed appropriately to point to a different PaRAM entry." id="QCHMAP_4" offset="0x210" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" PAENTRY points to the PaRAM set number for QDMA channel ." end="5" id="PAENTRY" rwaccess="RW" width="9">
    <bitenum description="Reserved, from 100h to 1FFh. Always write 0 to this bit. Writes of 1 to this bit are not supported and attempts to do so may result in undefine behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Parameter entry 0 through 255, from 0 to FFh." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Points to the specific trigger word of the PaRAM set defined by PAENTRY. [[br]]A write to the trigger word results in a QDMA event being recognized." end="2" id="TRWORD" rwaccess="RW" width="3"/>
    
  <bitfield begin="1" description=" " end="0" id="RESERVED_2" rwaccess="R" width="2"/>
  </register>
  
  
  <register acronym="QCHMAP_5" description="Each QDMA channel in EDMA3CC can be associated with any PaRAM set available on the device. Furthermore, the specific trigger word (0-7) of the PaRAM set can be programmed. The PaRAM set association and trigger word for every QDMA channel register is configurable using the QDMA channel map register (QCHMAPn). At reset the QDMA channel map registers for all QDMA channels point to PaRAM set 0. If an application makes use of both a DMA channel that points to PaRAM set 0 and any QDMA channels, ensure that QCHMAP is programmed appropriately to point to a different PaRAM entry." id="QCHMAP_5" offset="0x214" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" PAENTRY points to the PaRAM set number for QDMA channel ." end="5" id="PAENTRY" rwaccess="RW" width="9">
    <bitenum description="Reserved, from 100h to 1FFh. Always write 0 to this bit. Writes of 1 to this bit are not supported and attempts to do so may result in undefine behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Parameter entry 0 through 255, from 0 to FFh." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Points to the specific trigger word of the PaRAM set defined by PAENTRY. [[br]]A write to the trigger word results in a QDMA event being recognized." end="2" id="TRWORD" rwaccess="RW" width="3"/>
    
  <bitfield begin="1" description=" " end="0" id="RESERVED_2" rwaccess="R" width="2"/>
  </register>
  
  
  <register acronym="QCHMAP_6" description="Each QDMA channel in EDMA3CC can be associated with any PaRAM set available on the device. Furthermore, the specific trigger word (0-7) of the PaRAM set can be programmed. The PaRAM set association and trigger word for every QDMA channel register is configurable using the QDMA channel map register (QCHMAPn). At reset the QDMA channel map registers for all QDMA channels point to PaRAM set 0. If an application makes use of both a DMA channel that points to PaRAM set 0 and any QDMA channels, ensure that QCHMAP is programmed appropriately to point to a different PaRAM entry." id="QCHMAP_6" offset="0x218" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" PAENTRY points to the PaRAM set number for QDMA channel ." end="5" id="PAENTRY" rwaccess="RW" width="9">
    <bitenum description="Reserved, from 100h to 1FFh. Always write 0 to this bit. Writes of 1 to this bit are not supported and attempts to do so may result in undefine behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Parameter entry 0 through 255, from 0 to FFh." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Points to the specific trigger word of the PaRAM set defined by PAENTRY. [[br]]A write to the trigger word results in a QDMA event being recognized." end="2" id="TRWORD" rwaccess="RW" width="3"/>
    
  <bitfield begin="1" description=" " end="0" id="RESERVED_2" rwaccess="R" width="2"/>
  </register>
  
  
  <register acronym="QCHMAP_7" description="Each QDMA channel in EDMA3CC can be associated with any PaRAM set available on the device. Furthermore, the specific trigger word (0-7) of the PaRAM set can be programmed. The PaRAM set association and trigger word for every QDMA channel register is configurable using the QDMA channel map register (QCHMAPn). At reset the QDMA channel map registers for all QDMA channels point to PaRAM set 0. If an application makes use of both a DMA channel that points to PaRAM set 0 and any QDMA channels, ensure that QCHMAP is programmed appropriately to point to a different PaRAM entry." id="QCHMAP_7" offset="0x21C" width="32">
    
  <bitfield begin="31" description=" " end="14" id="RESERVED_1" rwaccess="R" width="18"/>
    
  <bitfield begin="13" description=" PAENTRY points to the PaRAM set number for QDMA channel ." end="5" id="PAENTRY" rwaccess="RW" width="9">
    <bitenum description="Reserved, from 100h to 1FFh. Always write 0 to this bit. Writes of 1 to this bit are not supported and attempts to do so may result in undefine behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Parameter entry 0 through 255, from 0 to FFh." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Points to the specific trigger word of the PaRAM set defined by PAENTRY. [[br]]A write to the trigger word results in a QDMA event being recognized." end="2" id="TRWORD" rwaccess="RW" width="3"/>
    
  <bitfield begin="1" description=" " end="0" id="RESERVED_2" rwaccess="R" width="2"/>
  </register>
  
  
  <register acronym="DMAQNUM_0" description="The DMA channel queue number register (DMAQNUMn) allows programmability of each of the 64 DMA channels in the EDMA3CC to submit its associated synchronization event to any event queue in the EDMA3CC. At reset, all channels point to event queue 0. Because the event queues in EDMA3CC have a fixed association to the transfer controllers, that is, Q0 TRs are submitted to TC0, Q1 TRs are submitted to TC1, etc., by programming DMAQNUM for a particular DMA channel also dictates which transfer controller is utilized for the data movement (or which EDMA3TC receives the TR request)." id="DMAQNUM_0" offset="0x240" width="32">
    
  <bitfield begin="31" description=" " end="31" id="RESERVED_1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[30] to E[28] is E7. [[br]]On DMAQNUM1, E[30] to E[28] is E15. [[br]]On DMAQNUM2, E[30] to E[28] is E23. [[br]]On DMAQNUM3, E[30] to E[28] is E31. [[br]]On DMAQNUM4, E[30] to E[28] is E39. [[br]]On DMAQNUM5, E[30] to E[28] is E47. [[br]]On DMAQNUM6, E[30] to E[28] is E55. [[br]]On DMAQNUM7, E[30] to E[28] is E63. [[br]] " end="28" id="E7" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description=" " end="27" id="RESERVED_2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[26] to E[24] is E6. [[br]]On DMAQNUM1, E[26] to E[24] is E14. [[br]]On DMAQNUM2, E[26] to E[24] is E22. [[br]]On DMAQNUM3, E[26] to E[24] is E30. [[br]]On DMAQNUM4, E[26] to E[24] is E38. [[br]]On DMAQNUM5, E[26] to E[24] is E46. [[br]]On DMAQNUM6, E[26] to E[24] is E54. [[br]]On DMAQNUM7, E[26] to E[24] is E62. [[br]] " end="24" id="E6" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description=" " end="23" id="RESERVED_3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="22" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[22] to E[20] is E5. [[br]]On DMAQNUM1, E[22] to E[20] is E13. [[br]]On DMAQNUM2, E[22] to E[20] is E21. [[br]]On DMAQNUM3, E[22] to E[20] is E29. [[br]]On DMAQNUM4, E[22] to E[20] is E37. [[br]]On DMAQNUM5, E[22] to E[20] is E45. [[br]]On DMAQNUM6, E[22] to E[20] is E53. [[br]]On DMAQNUM7, E[22] to E[20] is E61. [[br]] " end="20" id="E5" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description=" " end="19" id="RESERVED_4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[18] to E[16] is E4. [[br]]On DMAQNUM1, E[18] to E[16] is E12. [[br]]On DMAQNUM2, E[18] to E[16] is E20. [[br]]On DMAQNUM3, E[18] to E[16] is E28. [[br]]On DMAQNUM4, E[18] to E[16] is E36. [[br]]On DMAQNUM5, E[18] to E[16] is E44. [[br]]On DMAQNUM6, E[18] to E[16] is E52. [[br]]On DMAQNUM7, E[18] to E[16] is E60. [[br]] " end="16" id="E4" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" " end="15" id="RESERVED_5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[14] to E[12] is E3. [[br]]On DMAQNUM1, E[14] to E[12] is E11. [[br]]On DMAQNUM2, E[14] to E[12] is E19. [[br]]On DMAQNUM3, E[14] to E[12] is E27. [[br]]On DMAQNUM4, E[14] to E[12] is E35. [[br]]On DMAQNUM5, E[14] to E[12] is E43. [[br]]On DMAQNUM6, E[14] to E[12] is E51. [[br]]On DMAQNUM7, E[14] to E[12] is E59. [[br]] " end="12" id="E3" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description=" " end="11" id="RESERVED_6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[10] to E[8] is E2. [[br]]On DMAQNUM1, E[10] to E[8] is E10. [[br]]On DMAQNUM2, E[10] to E[8] is E18. [[br]]On DMAQNUM3, E[10] to E[8] is E26. [[br]]On DMAQNUM4, E[10] to E[8] is E34. [[br]]On DMAQNUM5, E[10] to E[8] is E42. [[br]]On DMAQNUM6, E[10] to E[8] is E50. [[br]]On DMAQNUM7, E[10] to E[8] is E58. [[br]] " end="8" id="E2" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[6] to E[4] is E1. [[br]]On DMAQNUM1, E[6] to E[4] is E9. [[br]]On DMAQNUM2, E[6] to E[4] is E17. [[br]]On DMAQNUM3, E[6] to E[4] is E25. [[br]]On DMAQNUM4, E[6] to E[4] is E33. [[br]]On DMAQNUM5, E[6] to E[4] is E41. [[br]]On DMAQNUM6, E[6] to E[4] is E49. [[br]]On DMAQNUM7, E[6] to E[4] is E57. [[br]] " end="4" id="E1" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_8" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[2] to E[0] is E0. [[br]]On DMAQNUM1, E[2] to E[0] is E8. [[br]]On DMAQNUM2, E[2] to E[0] is E16. [[br]]On DMAQNUM3, E[2] to E[0] is E24. [[br]]On DMAQNUM4, E[2] to E[0] is E32. [[br]]On DMAQNUM5, E[2] to E[0] is E40. [[br]]On DMAQNUM6, E[2] to E[0] is E48. [[br]]On DMAQNUM7, E[2] to E[0] is E56. [[br]] " end="0" id="E0" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DMAQNUM_1" description="The DMA channel queue number register (DMAQNUMn) allows programmability of each of the 64 DMA channels in the EDMA3CC to submit its associated synchronization event to any event queue in the EDMA3CC. At reset, all channels point to event queue 0. Because the event queues in EDMA3CC have a fixed association to the transfer controllers, that is, Q0 TRs are submitted to TC0, Q1 TRs are submitted to TC1, etc., by programming DMAQNUM for a particular DMA channel also dictates which transfer controller is utilized for the data movement (or which EDMA3TC receives the TR request)." id="DMAQNUM_1" offset="0x244" width="32">
    
  <bitfield begin="31" description=" " end="31" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="30" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[30] to E[28] is E7. [[br]]On DMAQNUM1, E[30] to E[28] is E15. [[br]]On DMAQNUM2, E[30] to E[28] is E23. [[br]]On DMAQNUM3, E[30] to E[28] is E31. [[br]]On DMAQNUM4, E[30] to E[28] is E39. [[br]]On DMAQNUM5, E[30] to E[28] is E47. [[br]]On DMAQNUM6, E[30] to E[28] is E55. [[br]]On DMAQNUM7, E[30] to E[28] is E63. [[br]] " end="28" id="E7" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="27" description=" " end="27" id="RESERVED_2" rwaccess="R" width="1"/>
    
  <bitfield begin="26" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[26] to E[24] is E6. [[br]]On DMAQNUM1, E[26] to E[24] is E14. [[br]]On DMAQNUM2, E[26] to E[24] is E22. [[br]]On DMAQNUM3, E[26] to E[24] is E30. [[br]]On DMAQNUM4, E[26] to E[24] is E38. [[br]]On DMAQNUM5, E[26] to E[24] is E46. [[br]]On DMAQNUM6, E[26] to E[24] is E54. [[br]]On DMAQNUM7, E[26] to E[24] is E62. [[br]] " end="24" id="E6" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="23" description=" " end="23" id="RESERVED_3" rwaccess="R" width="1"/>
    
  <bitfield begin="22" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[22] to E[20] is E5. [[br]]On DMAQNUM1, E[22] to E[20] is E13. [[br]]On DMAQNUM2, E[22] to E[20] is E21. [[br]]On DMAQNUM3, E[22] to E[20] is E29. [[br]]On DMAQNUM4, E[22] to E[20] is E37. [[br]]On DMAQNUM5, E[22] to E[20] is E45. [[br]]On DMAQNUM6, E[22] to E[20] is E53. [[br]]On DMAQNUM7, E[22] to E[20] is E61. [[br]] " end="20" id="E5" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="19" description=" " end="19" id="RESERVED_4" rwaccess="R" width="1"/>
    
  <bitfield begin="18" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[18] to E[16] is E4. [[br]]On DMAQNUM1, E[18] to E[16] is E12. [[br]]On DMAQNUM2, E[18] to E[16] is E20. [[br]]On DMAQNUM3, E[18] to E[16] is E28. [[br]]On DMAQNUM4, E[18] to E[16] is E36. [[br]]On DMAQNUM5, E[18] to E[16] is E44. [[br]]On DMAQNUM6, E[18] to E[16] is E52. [[br]]On DMAQNUM7, E[18] to E[16] is E60. [[br]] " end="16" id="E4" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="15" description=" " end="15" id="RESERVED_5" rwaccess="R" width="1"/>
    
  <bitfield begin="14" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[14] to E[12] is E3. [[br]]On DMAQNUM1, E[14] to E[12] is E11. [[br]]On DMAQNUM2, E[14] to E[12] is E19. [[br]]On DMAQNUM3, E[14] to E[12] is E27. [[br]]On DMAQNUM4, E[14] to E[12] is E35. [[br]]On DMAQNUM5, E[14] to E[12] is E43. [[br]]On DMAQNUM6, E[14] to E[12] is E51. [[br]]On DMAQNUM7, E[14] to E[12] is E59. [[br]] " end="12" id="E3" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="11" description=" " end="11" id="RESERVED_6" rwaccess="R" width="1"/>
    
  <bitfield begin="10" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[10] to E[8] is E2. [[br]]On DMAQNUM1, E[10] to E[8] is E10. [[br]]On DMAQNUM2, E[10] to E[8] is E18. [[br]]On DMAQNUM3, E[10] to E[8] is E26. [[br]]On DMAQNUM4, E[10] to E[8] is E34. [[br]]On DMAQNUM5, E[10] to E[8] is E42. [[br]]On DMAQNUM6, E[10] to E[8] is E50. [[br]]On DMAQNUM7, E[10] to E[8] is E58. [[br]] " end="8" id="E2" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_7" rwaccess="R" width="1"/>
    
  <bitfield begin="6" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[6] to E[4] is E1. [[br]]On DMAQNUM1, E[6] to E[4] is E9. [[br]]On DMAQNUM2, E[6] to E[4] is E17. [[br]]On DMAQNUM3, E[6] to E[4] is E25. [[br]]On DMAQNUM4, E[6] to E[4] is E33. [[br]]On DMAQNUM5, E[6] to E[4] is E41. [[br]]On DMAQNUM6, E[6] to E[4] is E49. [[br]]On DMAQNUM7, E[6] to E[4] is E57. [[br]] " end="4" id="E1" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_8" rwaccess="R" width="1"/>
    
  <bitfield begin="2" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[2] to E[0] is E0. [[br]]On DMAQNUM1, E[2] to E[0] is E8. [[br]]On DMAQNUM2, E[2] to E[0] is E16. [[br]]On DMAQNUM3, E[2] to E[0] is E24. [[br]]On DMAQNUM4, E[2] to E[0] is E32. [[br]]On DMAQNUM5, E[2] to E[0] is E40. [[br]]On DMAQNUM6, E[2] to E[0] is E48. [[br]]On DMAQNUM7, E[2] to E[0] is E56. [[br]] " end="0" id="E0" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="DMAQNUM_2" description="The DMA channel queue number register (DMAQNUMn) allows programmability of each of the 64 DMA channels in the EDMA3CC to submit its associated synchronization event to any event queue in the EDMA3CC. At reset, all channels point to event queue 0. Because the event queues in EDMA3CC have a fixed association to the transfer controllers, that is, Q0 TRs are submitted to TC0, Q1 TRs are submitted to TC1, etc., by programming DMAQNUM for a particular DMA channel also dictates which transfer controller is utilized for the data movement (or which EDMA3TC receives the TR request)." id="DMAQNUM_2" offset="0x248" width="32">
    
  <bitfield begin="31" description=" " end="31" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="30" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[30] to E[28] is E7. [[br]]On DMAQNUM1, E[30] to E[28] is E15. [[br]]On DMAQNUM2, E[30] to E[28] is E23. [[br]]On DMAQNUM3, E[30] to E[28] is E31. [[br]]On DMAQNUM4, E[30] to E[28] is E39. [[br]]On DMAQNUM5, E[30] to E[28] is E47. [[br]]On DMAQNUM6, E[30] to E[28] is E55. [[br]]On DMAQNUM7, E[30] to E[28] is E63. [[br]] " end="28" id="E7" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="27" description=" " end="27" id="RESERVED_2" rwaccess="R" width="1"/>
    
  <bitfield begin="26" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[26] to E[24] is E6. [[br]]On DMAQNUM1, E[26] to E[24] is E14. [[br]]On DMAQNUM2, E[26] to E[24] is E22. [[br]]On DMAQNUM3, E[26] to E[24] is E30. [[br]]On DMAQNUM4, E[26] to E[24] is E38. [[br]]On DMAQNUM5, E[26] to E[24] is E46. [[br]]On DMAQNUM6, E[26] to E[24] is E54. [[br]]On DMAQNUM7, E[26] to E[24] is E62. [[br]] " end="24" id="E6" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="23" description=" " end="23" id="RESERVED_3" rwaccess="R" width="1"/>
    
  <bitfield begin="22" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[22] to E[20] is E5. [[br]]On DMAQNUM1, E[22] to E[20] is E13. [[br]]On DMAQNUM2, E[22] to E[20] is E21. [[br]]On DMAQNUM3, E[22] to E[20] is E29. [[br]]On DMAQNUM4, E[22] to E[20] is E37. [[br]]On DMAQNUM5, E[22] to E[20] is E45. [[br]]On DMAQNUM6, E[22] to E[20] is E53. [[br]]On DMAQNUM7, E[22] to E[20] is E61. [[br]] " end="20" id="E5" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="19" description=" " end="19" id="RESERVED_4" rwaccess="R" width="1"/>
    
  <bitfield begin="18" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[18] to E[16] is E4. [[br]]On DMAQNUM1, E[18] to E[16] is E12. [[br]]On DMAQNUM2, E[18] to E[16] is E20. [[br]]On DMAQNUM3, E[18] to E[16] is E28. [[br]]On DMAQNUM4, E[18] to E[16] is E36. [[br]]On DMAQNUM5, E[18] to E[16] is E44. [[br]]On DMAQNUM6, E[18] to E[16] is E52. [[br]]On DMAQNUM7, E[18] to E[16] is E60. [[br]] " end="16" id="E4" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="15" description=" " end="15" id="RESERVED_5" rwaccess="R" width="1"/>
    
  <bitfield begin="14" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[14] to E[12] is E3. [[br]]On DMAQNUM1, E[14] to E[12] is E11. [[br]]On DMAQNUM2, E[14] to E[12] is E19. [[br]]On DMAQNUM3, E[14] to E[12] is E27. [[br]]On DMAQNUM4, E[14] to E[12] is E35. [[br]]On DMAQNUM5, E[14] to E[12] is E43. [[br]]On DMAQNUM6, E[14] to E[12] is E51. [[br]]On DMAQNUM7, E[14] to E[12] is E59. [[br]] " end="12" id="E3" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="11" description=" " end="11" id="RESERVED_6" rwaccess="R" width="1"/>
    
  <bitfield begin="10" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[10] to E[8] is E2. [[br]]On DMAQNUM1, E[10] to E[8] is E10. [[br]]On DMAQNUM2, E[10] to E[8] is E18. [[br]]On DMAQNUM3, E[10] to E[8] is E26. [[br]]On DMAQNUM4, E[10] to E[8] is E34. [[br]]On DMAQNUM5, E[10] to E[8] is E42. [[br]]On DMAQNUM6, E[10] to E[8] is E50. [[br]]On DMAQNUM7, E[10] to E[8] is E58. [[br]] " end="8" id="E2" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_7" rwaccess="R" width="1"/>
    
  <bitfield begin="6" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[6] to E[4] is E1. [[br]]On DMAQNUM1, E[6] to E[4] is E9. [[br]]On DMAQNUM2, E[6] to E[4] is E17. [[br]]On DMAQNUM3, E[6] to E[4] is E25. [[br]]On DMAQNUM4, E[6] to E[4] is E33. [[br]]On DMAQNUM5, E[6] to E[4] is E41. [[br]]On DMAQNUM6, E[6] to E[4] is E49. [[br]]On DMAQNUM7, E[6] to E[4] is E57. [[br]] " end="4" id="E1" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_8" rwaccess="R" width="1"/>
    
  <bitfield begin="2" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[2] to E[0] is E0. [[br]]On DMAQNUM1, E[2] to E[0] is E8. [[br]]On DMAQNUM2, E[2] to E[0] is E16. [[br]]On DMAQNUM3, E[2] to E[0] is E24. [[br]]On DMAQNUM4, E[2] to E[0] is E32. [[br]]On DMAQNUM5, E[2] to E[0] is E40. [[br]]On DMAQNUM6, E[2] to E[0] is E48. [[br]]On DMAQNUM7, E[2] to E[0] is E56. [[br]] " end="0" id="E0" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="DMAQNUM_3" description="The DMA channel queue number register (DMAQNUMn) allows programmability of each of the 64 DMA channels in the EDMA3CC to submit its associated synchronization event to any event queue in the EDMA3CC. At reset, all channels point to event queue 0. Because the event queues in EDMA3CC have a fixed association to the transfer controllers, that is, Q0 TRs are submitted to TC0, Q1 TRs are submitted to TC1, etc., by programming DMAQNUM for a particular DMA channel also dictates which transfer controller is utilized for the data movement (or which EDMA3TC receives the TR request)." id="DMAQNUM_3" offset="0x24C" width="32">
    
  <bitfield begin="31" description=" " end="31" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="30" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[30] to E[28] is E7. [[br]]On DMAQNUM1, E[30] to E[28] is E15. [[br]]On DMAQNUM2, E[30] to E[28] is E23. [[br]]On DMAQNUM3, E[30] to E[28] is E31. [[br]]On DMAQNUM4, E[30] to E[28] is E39. [[br]]On DMAQNUM5, E[30] to E[28] is E47. [[br]]On DMAQNUM6, E[30] to E[28] is E55. [[br]]On DMAQNUM7, E[30] to E[28] is E63. [[br]] " end="28" id="E7" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="27" description=" " end="27" id="RESERVED_2" rwaccess="R" width="1"/>
    
  <bitfield begin="26" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[26] to E[24] is E6. [[br]]On DMAQNUM1, E[26] to E[24] is E14. [[br]]On DMAQNUM2, E[26] to E[24] is E22. [[br]]On DMAQNUM3, E[26] to E[24] is E30. [[br]]On DMAQNUM4, E[26] to E[24] is E38. [[br]]On DMAQNUM5, E[26] to E[24] is E46. [[br]]On DMAQNUM6, E[26] to E[24] is E54. [[br]]On DMAQNUM7, E[26] to E[24] is E62. [[br]] " end="24" id="E6" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="23" description=" " end="23" id="RESERVED_3" rwaccess="R" width="1"/>
    
  <bitfield begin="22" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[22] to E[20] is E5. [[br]]On DMAQNUM1, E[22] to E[20] is E13. [[br]]On DMAQNUM2, E[22] to E[20] is E21. [[br]]On DMAQNUM3, E[22] to E[20] is E29. [[br]]On DMAQNUM4, E[22] to E[20] is E37. [[br]]On DMAQNUM5, E[22] to E[20] is E45. [[br]]On DMAQNUM6, E[22] to E[20] is E53. [[br]]On DMAQNUM7, E[22] to E[20] is E61. [[br]] " end="20" id="E5" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="19" description=" " end="19" id="RESERVED_4" rwaccess="R" width="1"/>
    
  <bitfield begin="18" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[18] to E[16] is E4. [[br]]On DMAQNUM1, E[18] to E[16] is E12. [[br]]On DMAQNUM2, E[18] to E[16] is E20. [[br]]On DMAQNUM3, E[18] to E[16] is E28. [[br]]On DMAQNUM4, E[18] to E[16] is E36. [[br]]On DMAQNUM5, E[18] to E[16] is E44. [[br]]On DMAQNUM6, E[18] to E[16] is E52. [[br]]On DMAQNUM7, E[18] to E[16] is E60. [[br]] " end="16" id="E4" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="15" description=" " end="15" id="RESERVED_5" rwaccess="R" width="1"/>
    
  <bitfield begin="14" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[14] to E[12] is E3. [[br]]On DMAQNUM1, E[14] to E[12] is E11. [[br]]On DMAQNUM2, E[14] to E[12] is E19. [[br]]On DMAQNUM3, E[14] to E[12] is E27. [[br]]On DMAQNUM4, E[14] to E[12] is E35. [[br]]On DMAQNUM5, E[14] to E[12] is E43. [[br]]On DMAQNUM6, E[14] to E[12] is E51. [[br]]On DMAQNUM7, E[14] to E[12] is E59. [[br]] " end="12" id="E3" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="11" description=" " end="11" id="RESERVED_6" rwaccess="R" width="1"/>
    
  <bitfield begin="10" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[10] to E[8] is E2. [[br]]On DMAQNUM1, E[10] to E[8] is E10. [[br]]On DMAQNUM2, E[10] to E[8] is E18. [[br]]On DMAQNUM3, E[10] to E[8] is E26. [[br]]On DMAQNUM4, E[10] to E[8] is E34. [[br]]On DMAQNUM5, E[10] to E[8] is E42. [[br]]On DMAQNUM6, E[10] to E[8] is E50. [[br]]On DMAQNUM7, E[10] to E[8] is E58. [[br]] " end="8" id="E2" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_7" rwaccess="R" width="1"/>
    
  <bitfield begin="6" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[6] to E[4] is E1. [[br]]On DMAQNUM1, E[6] to E[4] is E9. [[br]]On DMAQNUM2, E[6] to E[4] is E17. [[br]]On DMAQNUM3, E[6] to E[4] is E25. [[br]]On DMAQNUM4, E[6] to E[4] is E33. [[br]]On DMAQNUM5, E[6] to E[4] is E41. [[br]]On DMAQNUM6, E[6] to E[4] is E49. [[br]]On DMAQNUM7, E[6] to E[4] is E57. [[br]] " end="4" id="E1" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_8" rwaccess="R" width="1"/>
    
  <bitfield begin="2" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[2] to E[0] is E0. [[br]]On DMAQNUM1, E[2] to E[0] is E8. [[br]]On DMAQNUM2, E[2] to E[0] is E16. [[br]]On DMAQNUM3, E[2] to E[0] is E24. [[br]]On DMAQNUM4, E[2] to E[0] is E32. [[br]]On DMAQNUM5, E[2] to E[0] is E40. [[br]]On DMAQNUM6, E[2] to E[0] is E48. [[br]]On DMAQNUM7, E[2] to E[0] is E56. [[br]] " end="0" id="E0" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="DMAQNUM_4" description="The DMA channel queue number register (DMAQNUMn) allows programmability of each of the 64 DMA channels in the EDMA3CC to submit its associated synchronization event to any event queue in the EDMA3CC. At reset, all channels point to event queue 0. Because the event queues in EDMA3CC have a fixed association to the transfer controllers, that is, Q0 TRs are submitted to TC0, Q1 TRs are submitted to TC1, etc., by programming DMAQNUM for a particular DMA channel also dictates which transfer controller is utilized for the data movement (or which EDMA3TC receives the TR request)." id="DMAQNUM_4" offset="0x250" width="32">
    
  <bitfield begin="31" description=" " end="31" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="30" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[30] to E[28] is E7. [[br]]On DMAQNUM1, E[30] to E[28] is E15. [[br]]On DMAQNUM2, E[30] to E[28] is E23. [[br]]On DMAQNUM3, E[30] to E[28] is E31. [[br]]On DMAQNUM4, E[30] to E[28] is E39. [[br]]On DMAQNUM5, E[30] to E[28] is E47. [[br]]On DMAQNUM6, E[30] to E[28] is E55. [[br]]On DMAQNUM7, E[30] to E[28] is E63. [[br]] " end="28" id="E7" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="27" description=" " end="27" id="RESERVED_2" rwaccess="R" width="1"/>
    
  <bitfield begin="26" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[26] to E[24] is E6. [[br]]On DMAQNUM1, E[26] to E[24] is E14. [[br]]On DMAQNUM2, E[26] to E[24] is E22. [[br]]On DMAQNUM3, E[26] to E[24] is E30. [[br]]On DMAQNUM4, E[26] to E[24] is E38. [[br]]On DMAQNUM5, E[26] to E[24] is E46. [[br]]On DMAQNUM6, E[26] to E[24] is E54. [[br]]On DMAQNUM7, E[26] to E[24] is E62. [[br]] " end="24" id="E6" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="23" description=" " end="23" id="RESERVED_3" rwaccess="R" width="1"/>
    
  <bitfield begin="22" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[22] to E[20] is E5. [[br]]On DMAQNUM1, E[22] to E[20] is E13. [[br]]On DMAQNUM2, E[22] to E[20] is E21. [[br]]On DMAQNUM3, E[22] to E[20] is E29. [[br]]On DMAQNUM4, E[22] to E[20] is E37. [[br]]On DMAQNUM5, E[22] to E[20] is E45. [[br]]On DMAQNUM6, E[22] to E[20] is E53. [[br]]On DMAQNUM7, E[22] to E[20] is E61. [[br]] " end="20" id="E5" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="19" description=" " end="19" id="RESERVED_4" rwaccess="R" width="1"/>
    
  <bitfield begin="18" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[18] to E[16] is E4. [[br]]On DMAQNUM1, E[18] to E[16] is E12. [[br]]On DMAQNUM2, E[18] to E[16] is E20. [[br]]On DMAQNUM3, E[18] to E[16] is E28. [[br]]On DMAQNUM4, E[18] to E[16] is E36. [[br]]On DMAQNUM5, E[18] to E[16] is E44. [[br]]On DMAQNUM6, E[18] to E[16] is E52. [[br]]On DMAQNUM7, E[18] to E[16] is E60. [[br]] " end="16" id="E4" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="15" description=" " end="15" id="RESERVED_5" rwaccess="R" width="1"/>
    
  <bitfield begin="14" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[14] to E[12] is E3. [[br]]On DMAQNUM1, E[14] to E[12] is E11. [[br]]On DMAQNUM2, E[14] to E[12] is E19. [[br]]On DMAQNUM3, E[14] to E[12] is E27. [[br]]On DMAQNUM4, E[14] to E[12] is E35. [[br]]On DMAQNUM5, E[14] to E[12] is E43. [[br]]On DMAQNUM6, E[14] to E[12] is E51. [[br]]On DMAQNUM7, E[14] to E[12] is E59. [[br]] " end="12" id="E3" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="11" description=" " end="11" id="RESERVED_6" rwaccess="R" width="1"/>
    
  <bitfield begin="10" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[10] to E[8] is E2. [[br]]On DMAQNUM1, E[10] to E[8] is E10. [[br]]On DMAQNUM2, E[10] to E[8] is E18. [[br]]On DMAQNUM3, E[10] to E[8] is E26. [[br]]On DMAQNUM4, E[10] to E[8] is E34. [[br]]On DMAQNUM5, E[10] to E[8] is E42. [[br]]On DMAQNUM6, E[10] to E[8] is E50. [[br]]On DMAQNUM7, E[10] to E[8] is E58. [[br]] " end="8" id="E2" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_7" rwaccess="R" width="1"/>
    
  <bitfield begin="6" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[6] to E[4] is E1. [[br]]On DMAQNUM1, E[6] to E[4] is E9. [[br]]On DMAQNUM2, E[6] to E[4] is E17. [[br]]On DMAQNUM3, E[6] to E[4] is E25. [[br]]On DMAQNUM4, E[6] to E[4] is E33. [[br]]On DMAQNUM5, E[6] to E[4] is E41. [[br]]On DMAQNUM6, E[6] to E[4] is E49. [[br]]On DMAQNUM7, E[6] to E[4] is E57. [[br]] " end="4" id="E1" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_8" rwaccess="R" width="1"/>
    
  <bitfield begin="2" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[2] to E[0] is E0. [[br]]On DMAQNUM1, E[2] to E[0] is E8. [[br]]On DMAQNUM2, E[2] to E[0] is E16. [[br]]On DMAQNUM3, E[2] to E[0] is E24. [[br]]On DMAQNUM4, E[2] to E[0] is E32. [[br]]On DMAQNUM5, E[2] to E[0] is E40. [[br]]On DMAQNUM6, E[2] to E[0] is E48. [[br]]On DMAQNUM7, E[2] to E[0] is E56. [[br]] " end="0" id="E0" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="DMAQNUM_5" description="The DMA channel queue number register (DMAQNUMn) allows programmability of each of the 64 DMA channels in the EDMA3CC to submit its associated synchronization event to any event queue in the EDMA3CC. At reset, all channels point to event queue 0. Because the event queues in EDMA3CC have a fixed association to the transfer controllers, that is, Q0 TRs are submitted to TC0, Q1 TRs are submitted to TC1, etc., by programming DMAQNUM for a particular DMA channel also dictates which transfer controller is utilized for the data movement (or which EDMA3TC receives the TR request)." id="DMAQNUM_5" offset="0x254" width="32">
    
  <bitfield begin="31" description=" " end="31" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="30" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[30] to E[28] is E7. [[br]]On DMAQNUM1, E[30] to E[28] is E15. [[br]]On DMAQNUM2, E[30] to E[28] is E23. [[br]]On DMAQNUM3, E[30] to E[28] is E31. [[br]]On DMAQNUM4, E[30] to E[28] is E39. [[br]]On DMAQNUM5, E[30] to E[28] is E47. [[br]]On DMAQNUM6, E[30] to E[28] is E55. [[br]]On DMAQNUM7, E[30] to E[28] is E63. [[br]] " end="28" id="E7" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="27" description=" " end="27" id="RESERVED_2" rwaccess="R" width="1"/>
    
  <bitfield begin="26" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[26] to E[24] is E6. [[br]]On DMAQNUM1, E[26] to E[24] is E14. [[br]]On DMAQNUM2, E[26] to E[24] is E22. [[br]]On DMAQNUM3, E[26] to E[24] is E30. [[br]]On DMAQNUM4, E[26] to E[24] is E38. [[br]]On DMAQNUM5, E[26] to E[24] is E46. [[br]]On DMAQNUM6, E[26] to E[24] is E54. [[br]]On DMAQNUM7, E[26] to E[24] is E62. [[br]] " end="24" id="E6" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="23" description=" " end="23" id="RESERVED_3" rwaccess="R" width="1"/>
    
  <bitfield begin="22" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[22] to E[20] is E5. [[br]]On DMAQNUM1, E[22] to E[20] is E13. [[br]]On DMAQNUM2, E[22] to E[20] is E21. [[br]]On DMAQNUM3, E[22] to E[20] is E29. [[br]]On DMAQNUM4, E[22] to E[20] is E37. [[br]]On DMAQNUM5, E[22] to E[20] is E45. [[br]]On DMAQNUM6, E[22] to E[20] is E53. [[br]]On DMAQNUM7, E[22] to E[20] is E61. [[br]] " end="20" id="E5" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="19" description=" " end="19" id="RESERVED_4" rwaccess="R" width="1"/>
    
  <bitfield begin="18" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[18] to E[16] is E4. [[br]]On DMAQNUM1, E[18] to E[16] is E12. [[br]]On DMAQNUM2, E[18] to E[16] is E20. [[br]]On DMAQNUM3, E[18] to E[16] is E28. [[br]]On DMAQNUM4, E[18] to E[16] is E36. [[br]]On DMAQNUM5, E[18] to E[16] is E44. [[br]]On DMAQNUM6, E[18] to E[16] is E52. [[br]]On DMAQNUM7, E[18] to E[16] is E60. [[br]] " end="16" id="E4" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="15" description=" " end="15" id="RESERVED_5" rwaccess="R" width="1"/>
    
  <bitfield begin="14" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[14] to E[12] is E3. [[br]]On DMAQNUM1, E[14] to E[12] is E11. [[br]]On DMAQNUM2, E[14] to E[12] is E19. [[br]]On DMAQNUM3, E[14] to E[12] is E27. [[br]]On DMAQNUM4, E[14] to E[12] is E35. [[br]]On DMAQNUM5, E[14] to E[12] is E43. [[br]]On DMAQNUM6, E[14] to E[12] is E51. [[br]]On DMAQNUM7, E[14] to E[12] is E59. [[br]] " end="12" id="E3" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="11" description=" " end="11" id="RESERVED_6" rwaccess="R" width="1"/>
    
  <bitfield begin="10" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[10] to E[8] is E2. [[br]]On DMAQNUM1, E[10] to E[8] is E10. [[br]]On DMAQNUM2, E[10] to E[8] is E18. [[br]]On DMAQNUM3, E[10] to E[8] is E26. [[br]]On DMAQNUM4, E[10] to E[8] is E34. [[br]]On DMAQNUM5, E[10] to E[8] is E42. [[br]]On DMAQNUM6, E[10] to E[8] is E50. [[br]]On DMAQNUM7, E[10] to E[8] is E58. [[br]] " end="8" id="E2" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_7" rwaccess="R" width="1"/>
    
  <bitfield begin="6" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[6] to E[4] is E1. [[br]]On DMAQNUM1, E[6] to E[4] is E9. [[br]]On DMAQNUM2, E[6] to E[4] is E17. [[br]]On DMAQNUM3, E[6] to E[4] is E25. [[br]]On DMAQNUM4, E[6] to E[4] is E33. [[br]]On DMAQNUM5, E[6] to E[4] is E41. [[br]]On DMAQNUM6, E[6] to E[4] is E49. [[br]]On DMAQNUM7, E[6] to E[4] is E57. [[br]] " end="4" id="E1" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_8" rwaccess="R" width="1"/>
    
  <bitfield begin="2" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[2] to E[0] is E0. [[br]]On DMAQNUM1, E[2] to E[0] is E8. [[br]]On DMAQNUM2, E[2] to E[0] is E16. [[br]]On DMAQNUM3, E[2] to E[0] is E24. [[br]]On DMAQNUM4, E[2] to E[0] is E32. [[br]]On DMAQNUM5, E[2] to E[0] is E40. [[br]]On DMAQNUM6, E[2] to E[0] is E48. [[br]]On DMAQNUM7, E[2] to E[0] is E56. [[br]] " end="0" id="E0" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="DMAQNUM_6" description="The DMA channel queue number register (DMAQNUMn) allows programmability of each of the 64 DMA channels in the EDMA3CC to submit its associated synchronization event to any event queue in the EDMA3CC. At reset, all channels point to event queue 0. Because the event queues in EDMA3CC have a fixed association to the transfer controllers, that is, Q0 TRs are submitted to TC0, Q1 TRs are submitted to TC1, etc., by programming DMAQNUM for a particular DMA channel also dictates which transfer controller is utilized for the data movement (or which EDMA3TC receives the TR request)." id="DMAQNUM_6" offset="0x258" width="32">
    
  <bitfield begin="31" description=" " end="31" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="30" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[30] to E[28] is E7. [[br]]On DMAQNUM1, E[30] to E[28] is E15. [[br]]On DMAQNUM2, E[30] to E[28] is E23. [[br]]On DMAQNUM3, E[30] to E[28] is E31. [[br]]On DMAQNUM4, E[30] to E[28] is E39. [[br]]On DMAQNUM5, E[30] to E[28] is E47. [[br]]On DMAQNUM6, E[30] to E[28] is E55. [[br]]On DMAQNUM7, E[30] to E[28] is E63. [[br]] " end="28" id="E7" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="27" description=" " end="27" id="RESERVED_2" rwaccess="R" width="1"/>
    
  <bitfield begin="26" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[26] to E[24] is E6. [[br]]On DMAQNUM1, E[26] to E[24] is E14. [[br]]On DMAQNUM2, E[26] to E[24] is E22. [[br]]On DMAQNUM3, E[26] to E[24] is E30. [[br]]On DMAQNUM4, E[26] to E[24] is E38. [[br]]On DMAQNUM5, E[26] to E[24] is E46. [[br]]On DMAQNUM6, E[26] to E[24] is E54. [[br]]On DMAQNUM7, E[26] to E[24] is E62. [[br]] " end="24" id="E6" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="23" description=" " end="23" id="RESERVED_3" rwaccess="R" width="1"/>
    
  <bitfield begin="22" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[22] to E[20] is E5. [[br]]On DMAQNUM1, E[22] to E[20] is E13. [[br]]On DMAQNUM2, E[22] to E[20] is E21. [[br]]On DMAQNUM3, E[22] to E[20] is E29. [[br]]On DMAQNUM4, E[22] to E[20] is E37. [[br]]On DMAQNUM5, E[22] to E[20] is E45. [[br]]On DMAQNUM6, E[22] to E[20] is E53. [[br]]On DMAQNUM7, E[22] to E[20] is E61. [[br]] " end="20" id="E5" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="19" description=" " end="19" id="RESERVED_4" rwaccess="R" width="1"/>
    
  <bitfield begin="18" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[18] to E[16] is E4. [[br]]On DMAQNUM1, E[18] to E[16] is E12. [[br]]On DMAQNUM2, E[18] to E[16] is E20. [[br]]On DMAQNUM3, E[18] to E[16] is E28. [[br]]On DMAQNUM4, E[18] to E[16] is E36. [[br]]On DMAQNUM5, E[18] to E[16] is E44. [[br]]On DMAQNUM6, E[18] to E[16] is E52. [[br]]On DMAQNUM7, E[18] to E[16] is E60. [[br]] " end="16" id="E4" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="15" description=" " end="15" id="RESERVED_5" rwaccess="R" width="1"/>
    
  <bitfield begin="14" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[14] to E[12] is E3. [[br]]On DMAQNUM1, E[14] to E[12] is E11. [[br]]On DMAQNUM2, E[14] to E[12] is E19. [[br]]On DMAQNUM3, E[14] to E[12] is E27. [[br]]On DMAQNUM4, E[14] to E[12] is E35. [[br]]On DMAQNUM5, E[14] to E[12] is E43. [[br]]On DMAQNUM6, E[14] to E[12] is E51. [[br]]On DMAQNUM7, E[14] to E[12] is E59. [[br]] " end="12" id="E3" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="11" description=" " end="11" id="RESERVED_6" rwaccess="R" width="1"/>
    
  <bitfield begin="10" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[10] to E[8] is E2. [[br]]On DMAQNUM1, E[10] to E[8] is E10. [[br]]On DMAQNUM2, E[10] to E[8] is E18. [[br]]On DMAQNUM3, E[10] to E[8] is E26. [[br]]On DMAQNUM4, E[10] to E[8] is E34. [[br]]On DMAQNUM5, E[10] to E[8] is E42. [[br]]On DMAQNUM6, E[10] to E[8] is E50. [[br]]On DMAQNUM7, E[10] to E[8] is E58. [[br]] " end="8" id="E2" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_7" rwaccess="R" width="1"/>
    
  <bitfield begin="6" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[6] to E[4] is E1. [[br]]On DMAQNUM1, E[6] to E[4] is E9. [[br]]On DMAQNUM2, E[6] to E[4] is E17. [[br]]On DMAQNUM3, E[6] to E[4] is E25. [[br]]On DMAQNUM4, E[6] to E[4] is E33. [[br]]On DMAQNUM5, E[6] to E[4] is E41. [[br]]On DMAQNUM6, E[6] to E[4] is E49. [[br]]On DMAQNUM7, E[6] to E[4] is E57. [[br]] " end="4" id="E1" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_8" rwaccess="R" width="1"/>
    
  <bitfield begin="2" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[2] to E[0] is E0. [[br]]On DMAQNUM1, E[2] to E[0] is E8. [[br]]On DMAQNUM2, E[2] to E[0] is E16. [[br]]On DMAQNUM3, E[2] to E[0] is E24. [[br]]On DMAQNUM4, E[2] to E[0] is E32. [[br]]On DMAQNUM5, E[2] to E[0] is E40. [[br]]On DMAQNUM6, E[2] to E[0] is E48. [[br]]On DMAQNUM7, E[2] to E[0] is E56. [[br]] " end="0" id="E0" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="DMAQNUM_7" description="The DMA channel queue number register (DMAQNUMn) allows programmability of each of the 64 DMA channels in the EDMA3CC to submit its associated synchronization event to any event queue in the EDMA3CC. At reset, all channels point to event queue 0. Because the event queues in EDMA3CC have a fixed association to the transfer controllers, that is, Q0 TRs are submitted to TC0, Q1 TRs are submitted to TC1, etc., by programming DMAQNUM for a particular DMA channel also dictates which transfer controller is utilized for the data movement (or which EDMA3TC receives the TR request)." id="DMAQNUM_7" offset="0x25C" width="32">
    
  <bitfield begin="31" description=" " end="31" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="30" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[30] to E[28] is E7. [[br]]On DMAQNUM1, E[30] to E[28] is E15. [[br]]On DMAQNUM2, E[30] to E[28] is E23. [[br]]On DMAQNUM3, E[30] to E[28] is E31. [[br]]On DMAQNUM4, E[30] to E[28] is E39. [[br]]On DMAQNUM5, E[30] to E[28] is E47. [[br]]On DMAQNUM6, E[30] to E[28] is E55. [[br]]On DMAQNUM7, E[30] to E[28] is E63. [[br]] " end="28" id="E7" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="27" description=" " end="27" id="RESERVED_2" rwaccess="R" width="1"/>
    
  <bitfield begin="26" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[26] to E[24] is E6. [[br]]On DMAQNUM1, E[26] to E[24] is E14. [[br]]On DMAQNUM2, E[26] to E[24] is E22. [[br]]On DMAQNUM3, E[26] to E[24] is E30. [[br]]On DMAQNUM4, E[26] to E[24] is E38. [[br]]On DMAQNUM5, E[26] to E[24] is E46. [[br]]On DMAQNUM6, E[26] to E[24] is E54. [[br]]On DMAQNUM7, E[26] to E[24] is E62. [[br]] " end="24" id="E6" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="23" description=" " end="23" id="RESERVED_3" rwaccess="R" width="1"/>
    
  <bitfield begin="22" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[22] to E[20] is E5. [[br]]On DMAQNUM1, E[22] to E[20] is E13. [[br]]On DMAQNUM2, E[22] to E[20] is E21. [[br]]On DMAQNUM3, E[22] to E[20] is E29. [[br]]On DMAQNUM4, E[22] to E[20] is E37. [[br]]On DMAQNUM5, E[22] to E[20] is E45. [[br]]On DMAQNUM6, E[22] to E[20] is E53. [[br]]On DMAQNUM7, E[22] to E[20] is E61. [[br]] " end="20" id="E5" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="19" description=" " end="19" id="RESERVED_4" rwaccess="R" width="1"/>
    
  <bitfield begin="18" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[18] to E[16] is E4. [[br]]On DMAQNUM1, E[18] to E[16] is E12. [[br]]On DMAQNUM2, E[18] to E[16] is E20. [[br]]On DMAQNUM3, E[18] to E[16] is E28. [[br]]On DMAQNUM4, E[18] to E[16] is E36. [[br]]On DMAQNUM5, E[18] to E[16] is E44. [[br]]On DMAQNUM6, E[18] to E[16] is E52. [[br]]On DMAQNUM7, E[18] to E[16] is E60. [[br]] " end="16" id="E4" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="15" description=" " end="15" id="RESERVED_5" rwaccess="R" width="1"/>
    
  <bitfield begin="14" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[14] to E[12] is E3. [[br]]On DMAQNUM1, E[14] to E[12] is E11. [[br]]On DMAQNUM2, E[14] to E[12] is E19. [[br]]On DMAQNUM3, E[14] to E[12] is E27. [[br]]On DMAQNUM4, E[14] to E[12] is E35. [[br]]On DMAQNUM5, E[14] to E[12] is E43. [[br]]On DMAQNUM6, E[14] to E[12] is E51. [[br]]On DMAQNUM7, E[14] to E[12] is E59. [[br]] " end="12" id="E3" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="11" description=" " end="11" id="RESERVED_6" rwaccess="R" width="1"/>
    
  <bitfield begin="10" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[10] to E[8] is E2. [[br]]On DMAQNUM1, E[10] to E[8] is E10. [[br]]On DMAQNUM2, E[10] to E[8] is E18. [[br]]On DMAQNUM3, E[10] to E[8] is E26. [[br]]On DMAQNUM4, E[10] to E[8] is E34. [[br]]On DMAQNUM5, E[10] to E[8] is E42. [[br]]On DMAQNUM6, E[10] to E[8] is E50. [[br]]On DMAQNUM7, E[10] to E[8] is E58. [[br]] " end="8" id="E2" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_7" rwaccess="R" width="1"/>
    
  <bitfield begin="6" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[6] to E[4] is E1. [[br]]On DMAQNUM1, E[6] to E[4] is E9. [[br]]On DMAQNUM2, E[6] to E[4] is E17. [[br]]On DMAQNUM3, E[6] to E[4] is E25. [[br]]On DMAQNUM4, E[6] to E[4] is E33. [[br]]On DMAQNUM5, E[6] to E[4] is E41. [[br]]On DMAQNUM6, E[6] to E[4] is E49. [[br]]On DMAQNUM7, E[6] to E[4] is E57. [[br]] " end="4" id="E1" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_8" rwaccess="R" width="1"/>
    
  <bitfield begin="2" description=" DMA queue number. [[br]]Contains the event queue number to be used for the corresponding DMA channel. [[br]]Programming DMAQNUM for an event queue number to a value more then the number of queues available in the EDMA3CC results in undefined behavior. [[br]]On DMAQNUM0, E[2] to E[0] is E0. [[br]]On DMAQNUM1, E[2] to E[0] is E8. [[br]]On DMAQNUM2, E[2] to E[0] is E16. [[br]]On DMAQNUM3, E[2] to E[0] is E24. [[br]]On DMAQNUM4, E[2] to E[0] is E32. [[br]]On DMAQNUM5, E[2] to E[0] is E40. [[br]]On DMAQNUM6, E[2] to E[0] is E48. [[br]]On DMAQNUM7, E[2] to E[0] is E56. [[br]] " end="0" id="E0" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"/>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"/>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"/>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="QDMAQNUM" description="The QDMA channel queue number register (QDMAQNUMn) is used to program all the QDMA channels in the EDMA3CC to submit the associated QDMA event to any of the event queues in the EDMA3CC." id="QDMAQNUM" offset="0x260" width="32">
    
  <bitfield begin="31" description=" " end="31" id="RESERVED_1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description=" QDMA queue number. [[br]]Contains the event queue number to be used for the corresponding QDMA channel. " end="28" id="E7" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description=" " end="27" id="RESERVED_2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description=" QDMA queue number. [[br]]Contains the event queue number to be used for the corresponding QDMA channel. " end="24" id="E6" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description=" " end="23" id="RESERVED_3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="22" description=" QDMA queue number. [[br]]Contains the event queue number to be used for the corresponding QDMA channel. " end="20" id="E5" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description=" " end="19" id="RESERVED_4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description=" QDMA queue number. [[br]]Contains the event queue number to be used for the corresponding QDMA channel. " end="16" id="E4" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" " end="15" id="RESERVED_5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description=" QDMA queue number. [[br]]Contains the event queue number to be used for the corresponding QDMA channel. " end="12" id="E3" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description=" " end="11" id="RESERVED_6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description=" QDMA queue number. [[br]]Contains the event queue number to be used for the corresponding QDMA channel. " end="8" id="E2" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description=" QDMA queue number. [[br]]Contains the event queue number to be used for the corresponding QDMA channel. " end="4" id="E1" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_8" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description=" QDMA queue number. [[br]]Contains the event queue number to be used for the corresponding QDMA channel. " end="0" id="E0" rwaccess="RW" width="3">
    <bitenum description="Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_5_0x7" token="en_5_0x7" value="0x7"></bitenum>
    <bitenum description="Reserved, from 3h to 7h. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Event n is queued on Q2." id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Event n is queued on Q1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event n is queued on Q0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="QUEPRI" description="The queue priority register (QUEPRI) allows you to change the priority of the individual queues and the priority of the transfer request (TR) associated with the events queued in the queue. Because the queue to EDMA3TC mapping is fixed, programming QUEPRI essentially governs the priority of the associated transfer controller(s) read/write commands with respect to the other bus masters in the device. You can modify the EDMA3TC priority to obtain the desired system performance." id="QUEPRI" offset="0x284" width="32">
    
  <bitfield begin="31" description=" " end="11" id="RESERVED_1" rwaccess="R" width="21"></bitfield>
    
  <bitfield begin="10" description=" Priority level for queue 2. [[br]]Dictates the priority level used by TC2 relative to other masters in the device. [[br]]A value of 0 means highest priority and a value of 7 means lowest priority." end="8" id="PRIQ2" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description=" " end="7" id="RESERVED_2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description=" Priority level for queue 1. [[br]]Dictates the priority level used by TC1 relative to other masters in the device. [[br]]A value of 0 means highest priority and a value of 7 means lowest priority." end="4" id="PRIQ1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description=" Priority level for queue 0. [[br]]Dictates the priority level used by TC0 relative to other masters in the device. [[br]]A value of 0 means highest priority and a value of 7 means lowest priority." end="0" id="PRIQ0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="EMR" description="For a particular DMA channel, if a second event is received prior to the first event getting cleared/serviced, the bit corresponding to that channel is set/asserted in the event missed registers (EMR/EMRH). All trigger types are treated individually, that is, manual triggered (ESR/ESRH), chain triggered (CER/CERH), and event triggered (ER/ERH) are all treated separately. The EMR/EMRH bits for a channel are also set if an event on that channel encounters a NULL entry (or a NULL TR is serviced). If any EMR/EMRH bit is set (and all errors, including bits in other error registers (QEMR, CCERR) were previously cleared), the EDMA3CC generates an error interrupt. For details on EDMA3CC error interrupt generation, see Error Interrupts. This register is part of a set of registers that provide information on missed DMA and/or QDMA events, and instances when event queue thresholds are exceeded. If any of the bits in these registers is set, it results in the EDMA3CC generating an error interrupt." id="EMR" offset="0x300" width="32">
    
  <bitfield begin="31" description=" Channel 0 to 31 event missed. [[br]]En is cleared by writing a 1 to the corresponding bit in the event missed clear register (EMCR). [[br]] " end="0" id="En" rwaccess="R" width="32">
    <bitenum description="Missed event occurred." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No missed event." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="EMRH" description="For a particular DMA channel, if a second event is received prior to the first event getting cleared/serviced, the bit corresponding to that channel is set/asserted in the event missed registers (EMR/EMRH). All trigger types are treated individually, that is, manual triggered (ESR/ESRH), chain triggered (CER/CERH), and event triggered (ER/ERH) are all treated separately. The EMR/EMRH bits for a channel are also set if an event on that channel encounters a NULL entry (or a NULL TR is serviced). If any EMR/EMRH bit is set (and all errors, including bits in other error registers (QEMR, CCERR) were previously cleared), the EDMA3CC generates an error interrupt. For details on EDMA3CC error interrupt generation, see Error Interrupts. This register is part of a set of registers that provide information on missed DMA and/or QDMA events, and instances when event queue thresholds are exceeded. If any of the bits in these registers is set, it results in the EDMA3CC generating an error interrupt." id="EMRH" offset="0x304" width="32">
    
  <bitfield begin="31" description=" Channel 32 to 63 event missed. [[br]]En is cleared by writing a 1 to the corresponding bit in the event missed clear register high (EMCRH). [[br]] " end="0" id="En" rwaccess="R" width="32">
    <bitenum description="Missed event occurred." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No missed event." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="EMCR" description="Once a missed event is posted in the event missed registers (EMR/EMRH), the bit remains set and you need to clear the set bit(s). This is done by way of CPU writes to the event missed clear registers (EMCR/EMCRH). Writing a 1 to any of the bits clears the corresponding missed event (bit) in EMR/EMRH; writing a 0 has no effect. This register is part of a set of registers that provide information on missed DMA and/or QDMA events, and instances when event queue thresholds are exceeded. If any of the bits in these registers is set, it results in the EDMA3CC generating an error interrupt." id="EMCR" offset="0x308" width="32">
    
  <bitfield begin="31" description=" Event missed 0 to 31 clear. [[br]]All error bits must be cleared before additional error interrupts will be asserted by the EDMA3CC. [[br]] " end="0" id="En" rwaccess="W" width="32">
    <bitenum description="Corresponding missed event bit in the event missed register (EMR) is cleared (En = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="EMCRH" description="Once a missed event is posted in the event missed registers (EMR/EMRH), the bit remains set and you need to clear the set bit(s). This is done by way of CPU writes to the event missed clear registers (EMCR/EMCRH). Writing a 1 to any of the bits clears the corresponding missed event (bit) in EMR/EMRH; writing a 0 has no effect. This register is part of a set of registers that provide information on missed DMA and/or QDMA events, and instances when event queue thresholds are exceeded. If any of the bits in these registers is set, it results in the EDMA3CC generating an error interrupt." id="EMCRH" offset="0x30C" width="32">
    
  <bitfield begin="31" description=" Event missed 32 to 63 clear. [[br]]All error bits must be cleared before additional error interrupts will be asserted by the EDMA3CC. [[br]] " end="0" id="En" rwaccess="W" width="32">
    <bitenum description="Corresponding missed event bit in the event missed register high (EMRH) is cleared (En = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="QEMR" description="For a particular QDMA channel, if two QDMA events are detected without the first event getting cleared/serviced, the bit corresponding to that channel is set/asserted in the QDMA event missed register (QEMR). The QEMR bits for a channel are also set if a QDMA event on the channel encounters a NULL entry (or a NULL TR is serviced). If any QEMR bit is set (and all errors, including bits in other error registers (EMR/EMRH, CCERR) were previously cleared), the EDMA3CC generates an error interrupt. For details on EDMA3CC error interrupt generation, see Error Interrupts. This register is part of a set of registers that provide information on missed DMA and/or QDMA events, and instances when event queue thresholds are exceeded. If any of the bits in these registers is set, it results in the EDMA3CC generating an error interrupt." id="QEMR" offset="0x310" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Channel 0 to 7 QDMA event missed. [[br]]En is cleared by writing a 1 to the corresponding bit in the QDMA event missed clear register (QEMCR). [[br]] " end="0" id="En" rwaccess="R" width="8">
    <bitenum description="Missed event occurred." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No missed event." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="QEMCR" description="Once a missed event is posted in the QDMA event missed registers (QEMR), the bit remains set and you need to clear the set bit(s). This is done by way of CPU writes to the QDMA event missed clear registers (QEMCR). Writing a 1 to any of the bits clears the corresponding missed event (bit) in QEMR; writing a 0 has no effect. This register is part of a set of registers that provide information on missed DMA and/or QDMA events, and instances when event queue thresholds are exceeded. If any of the bits in these registers is set, it results in the EDMA3CC generating an error interrupt." id="QEMCR" offset="0x314" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" QDMA event missed clear. [[br]]All error bits must be cleared before additional error interrupts will be asserted by the EDMA3CC. [[br]] " end="0" id="En" rwaccess="W" width="8">
    <bitenum description="Corresponding missed event bit in the QDMA event missed register (QEMR) is cleared (En= 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CCERR" description="The EDMA3CC error register (CCERR) indicates whether or not at any instant of time the number of events queued up in any of the event queues exceeds or equals the threshold/watermark value that is set in the queue watermark threshold register (QWMTHRA). Additionally, CCERR also indicates if when the number of outstanding TRs that have been programmed to return transfer completion code (TRs which have the TCINTEN or TCCHEN bit in OPT set) to the EDMA3CC has exceeded the maximum allowed value of 63. If any bit in CCERR is set (and all errors, including bits in other error registers (EMR/EMRH, QEMR) were previously cleared), the EDMA3CC generates an error interrupt. For details on EDMA3CC error interrupt generation, see Error Interrupts. Once the error bits are set in CCERR, they can only be cleared by writing to the corresponding bits in the EDMA3CC error clear register (CCERRCLR). This register is part of a set of registers that provide information on missed DMA and/or QDMA events, and instances when event queue thresholds are exceeded. If any of the bits in these registers is set, it results in the EDMA3CC generating an error interrupt." id="CCERR" offset="0x318" width="32">
    
  <bitfield begin="31" description=" " end="17" id="RESERVED_1" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="16" description=" Transfer completion code error. [[br]]TCCERR is cleared by writing a 1 to the corresponding bit in the EDMA3CC error clear register (CCERRCLR). [[br]] " end="16" id="TCCERR" rwaccess="R" width="1">
    <bitenum description="Total number of allowed TCCs has been reached." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Total number of allowed TCCs outstanding has not been reached." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" " end="3" id="RESERVED_2" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="2" description=" Queue threshold error for queue 2. [[br]]QTHRXCD2 is cleared by writing a 1 to the corresponding bit in the EDMA3CC error clear register (CCERRCLR). [[br]] " end="2" id="QTHRXCD2" rwaccess="R" width="1">
    <bitenum description="Watermark/threshold has been exceeded." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Watermark/threshold has not been exceeded." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Queue threshold error for queue 1 . [[br]]QTHRXCD1 is cleared by writing a 1 to the corresponding bit in the EDMA3CC error clear register (CCERRCLR). [[br]] " end="1" id="QTHRXCD1" rwaccess="R" width="1">
    <bitenum description="Watermark/threshold has been exceeded." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Watermark/threshold has not been exceeded." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Queue threshold error for queue 0. [[br]]QTHRXCD0 is cleared by writing a 1 to the corresponding bit in the EDMA3CC error clear register (CCERRCLR). [[br]] " end="0" id="QTHRXCD0" rwaccess="R" width="1">
    <bitenum description="Watermark/threshold has been exceeded." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Watermark/threshold has not been exceeded." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CCERRCLR" description="The EDMA3CC error clear register (CCERRCLR) is used to clear any error bits that are set in the EDMA3CC error register (CCERR). In addition, CCERRCLR also clears the values of some bit fields in the queue status registers (QSTATn) associated with a particular event queue. Writing a 1 to any of the bits clears the corresponding bit in CCERR; writing a 0 has no effect. This register is part of a set of registers that provide information on missed DMA and/or QDMA events, and instances when event queue thresholds are exceeded. If any of the bits in these registers is set, it results in the EDMA3CC generating an error interrupt." id="CCERRCLR" offset="0x31C" width="32">
    
  <bitfield begin="31" description=" " end="17" id="RESERVED_1" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="16" description=" Transfer completion code error clear." end="16" id="TCCERR" rwaccess="W" width="1">
    <bitenum description="Clears the TCCERR bit in the EDMA3CC error register (CCERR)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" " end="4" id="RESERVED_2" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="3" description=" Queue threshold error clear for queue 3." end="3" id="QTHRXCD3" rwaccess="W" width="1">
    <bitenum description="Clears the QTHRXCD3 bit in the EDMA3CC error register (CCERR) and the WM and THRXCD bits in the queue status register 3 (QSTAT3)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" Queue threshold error clear for queue 2." end="2" id="QTHRXCD2" rwaccess="W" width="1">
    <bitenum description="Clears the QTHRXCD2 bit in the EDMA3CC error register (CCERR) and the WM and THRXCD bits in the queue status register 2 (QSTAT2)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" Queue threshold error clear for queue 1." end="1" id="QTHRXCD1" rwaccess="W" width="1">
    <bitenum description="Clears the QTHRXCD1 bit in the EDMA3CC error register (CCERR) and the WM and THRXCD bits in the queue status register 1 (QSTAT1)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" Queue threshold error clear for queue 0." end="0" id="QTHRXCD0" rwaccess="W" width="1">
    <bitenum description="Clears the QTHRXCD0 bit in the EDMA3CC error register (CCERR) and the WM and THRXCD bits in the queue status register 0 (QSTAT0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="EEVAL" description="The EDMA3CC error interrupt is asserted whenever an error bit is set in any of the error registers (EMR/EMRH, QEMR, and CCERR). For subsequent error bits that get set, the EDMA3CC error interrupt is reasserted only when transitioning from an all the error bits cleared to at least one error bit is set . Alternatively, a CPU write of 1 to the EVAL bit in the error evaluation register (EEVAL) results in reasserting the EDMA3CC error interrupt, if there are any outstanding error bits set due to subsequent error conditions. Writes of 0 have no effect. This register is part of a set of registers that provide information on missed DMA and/or QDMA events, and instances when event queue thresholds are exceeded. If any of the bits in these registers is set, it results in the EDMA3CC generating an error interrupt." id="EEVAL" offset="0x320" width="32">
    
  <bitfield begin="31" description=" " end="2" id="RESERVED_1" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description=" " end="1" id="RESERVED_2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description=" Error interrupt evaluate." end="0" id="EVAL" rwaccess="W" width="1">
    <bitenum description="Write 1 to clear interrupts when all error registers have been cleared. EDMA3CC error interrupt will remain if any errors have not been cleared in any of the error registers (EMR/EMRH, CCERR, QEMR)" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAE0" description="The DMA region access enable register for shadow region 0 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 0 view of the DMA channel registers. Additionally, the DRAE0 configuration determines completion of which DMA channels will result in assertion of the shadow region 0 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAE0" offset="0x340" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 31 to 0 in region 0." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 0 address space to bit 31 to 0 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 31 to 0. Enabled interrupt bits for bit n contribute to the generation of a transfer completion interrupt for shadow region 0." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 0 address space to bit 31 to 0 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 31 to 0. Enabled interrupt bits for bit n do not contribute to the generation of a transfer completion interrupt for shadow region 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAEH0" description="The DMA region access enable register for shadow region 0 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 0 view of the DMA channel registers. Additionally, the DRAE0 configuration determines completion of which DMA channels will result in assertion of the shadow region 0 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAEH0" offset="0x344" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 63 to 32 in region 0." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 0 address space to bit 63 to 32 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 contribute to the generation of a transfer completion interrupt for shadow region 0." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 0 address space to bit 63 to 32 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 do not contribute to the generation of a transfer completion interrupt for shadow region 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAE1" description="The DMA region access enable register for shadow region 1 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 1 view of the DMA channel registers. Additionally, the DRAE1 configuration determines completion of which DMA channels will result in assertion of the shadow region 1 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAE1" offset="0x348" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 31 to 0 in region 1." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 1 address space to bit 31 to 0 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 31 to 0. Enabled interrupt bits for bit n contribute to the generation of a transfer completion interrupt for shadow region 1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 1 address space to bit 31 to 0 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 31 to 0. Enabled interrupt bits for bit n do not contribute to the generation of a transfer completion interrupt for shadow region 1." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAEH1" description="The DMA region access enable register for shadow region 1 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 1 view of the DMA channel registers. Additionally, the DRAE1 configuration determines completion of which DMA channels will result in assertion of the shadow region 1 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAEH1" offset="0x34C" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 63 to 32 in region 1." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 1 address space to bit 63 to 32 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 contribute to the generation of a transfer completion interrupt for shadow region 1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 1 address space to bit 63 to 32 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 do not contribute to the generation of a transfer completion interrupt for shadow region 1." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAE2" description="The DMA region access enable register for shadow region 2 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 2 view of the DMA channel registers. Additionally, the DRAE2 configuration determines completion of which DMA channels will result in assertion of the shadow region 2 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAE2" offset="0x350" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 31 to 0 in region 2." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 2 address space to bit 31 to 0 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 31 to 0. Enabled interrupt bits for bit n contribute to the generation of a transfer completion interrupt for shadow region 2." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 2 address space to bit 31 to 0 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 31 to 0. Enabled interrupt bits for bit n do not contribute to the generation of a transfer completion interrupt for shadow region 2." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAEH2" description="The DMA region access enable register for shadow region 2 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 2 view of the DMA channel registers. Additionally, the DRAE2 configuration determines completion of which DMA channels will result in assertion of the shadow region 2 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAEH2" offset="0x354" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 63 to 32 in region 2." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 2 address space to bit 63 to 32 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 contribute to the generation of a transfer completion interrupt for shadow region 2." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 2 address space to bit 63 to 32 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 do not contribute to the generation of a transfer completion interrupt for shadow region 2." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAE3" description="The DMA region access enable register for shadow region 3 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 3 view of the DMA channel registers. Additionally, the DRAE3 configuration determines completion of which DMA channels will result in assertion of the shadow region 3 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAE3" offset="0x358" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 31 to 0 in region 3." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 3 address space to bit 31 to 0 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 31 to 0. Enabled interrupt bits for bit n contribute to the generation of a transfer completion interrupt for shadow region 3." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 3 address space to bit 31 to 0 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 31 to 0. Enabled interrupt bits for bit n do not contribute to the generation of a transfer completion interrupt for shadow region 3." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAEH3" description="The DMA region access enable register for shadow region 3 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 3 view of the DMA channel registers. Additionally, the DRAE3 configuration determines completion of which DMA channels will result in assertion of the shadow region 3 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAEH3" offset="0x35C" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 63 to 32 in region 3." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 3 address space to bit 63 to 32 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 contribute to the generation of a transfer completion interrupt for shadow region 3." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 3 address space to bit 63 to 32 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 do not contribute to the generation of a transfer completion interrupt for shadow region 3." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAE4" description="The DMA region access enable register for shadow region 4 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 4 view of the DMA channel registers. Additionally, the DRAE4 configuration determines completion of which DMA channels will result in assertion of the shadow region 4 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAE4" offset="0x360" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 31 to 0 in region 4." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 4 address space to bit 31 to 0 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 31 to 0. Enabled interrupt bits for bit n contribute to the generation of a transfer completion interrupt for shadow region 4." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 4 address space to bit 31 to 0 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 31 to 0. Enabled interrupt bits for bit n do not contribute to the generation of a transfer completion interrupt for shadow region 4." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAEH4" description="The DMA region access enable register for shadow region 4 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 4 view of the DMA channel registers. Additionally, the DRAE4 configuration determines completion of which DMA channels will result in assertion of the shadow region 4 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAEH4" offset="0x364" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 63 to 32 in region 4." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 4 address space to bit 63 to 32 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 contribute to the generation of a transfer completion interrupt for shadow region 4." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 4 address space to bit 63 to 32 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 do not contribute to the generation of a transfer completion interrupt for shadow region 4." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAE5" description="The DMA region access enable register for shadow region 5 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 5 view of the DMA channel registers. Additionally, the DRAE5 configuration determines completion of which DMA channels will result in assertion of the shadow region 5 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAE5" offset="0x368" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 31 to 0 in region 5." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 5 address space to bit 31 to 0 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 31 to 0. Enabled interrupt bits for bit n contribute to the generation of a transfer completion interrupt for shadow region 5." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 5 address space to bit 31 to 0 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 31 to 0. Enabled interrupt bits for bit n do not contribute to the generation of a transfer completion interrupt for shadow region 5." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAEH5" description="The DMA region access enable register for shadow region 5 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 5 view of the DMA channel registers. Additionally, the DRAE5 configuration determines completion of which DMA channels will result in assertion of the shadow region 5 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAEH5" offset="0x36C" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 63 to 32 in region 5." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 5 address space to bit 63 to 32 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 contribute to the generation of a transfer completion interrupt for shadow region 5." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 5 address space to bit 63 to 32 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 do not contribute to the generation of a transfer completion interrupt for shadow region 5." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAE6" description="The DMA region access enable register for shadow region 6 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 6 view of the DMA channel registers. Additionally, the DRAE6 configuration determines completion of which DMA channels will result in assertion of the shadow region 6 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAE6" offset="0x370" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 31 to 0 in region 6." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 6 address space to bit 31 to 0 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 31 to 0. Enabled interrupt bits for bit n contribute to the generation of a transfer completion interrupt for shadow region 6." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 6 address space to bit 31 to 0 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 31 to 0. Enabled interrupt bits for bit n do not contribute to the generation of a transfer completion interrupt for shadow region 6." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAEH6" description="The DMA region access enable register for shadow region 6 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 6 view of the DMA channel registers. Additionally, the DRAE6 configuration determines completion of which DMA channels will result in assertion of the shadow region 6 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAEH6" offset="0x374" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 63 to 32 in region 6." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 6 address space to bit 63 to 32 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 contribute to the generation of a transfer completion interrupt for shadow region 6." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 6 address space to bit 63 to 32 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 do not contribute to the generation of a transfer completion interrupt for shadow region 6." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAE7" description="The DMA region access enable register for shadow region 7 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 7 view of the DMA channel registers. Additionally, the DRAE7 configuration determines completion of which DMA channels will result in assertion of the shadow region 7 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAE7" offset="0x378" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 31 to 0 in region 7." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 7 address space to bit 31 to 0 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 31 to 0. Enabled interrupt bits for bit n contribute to the generation of a transfer completion interrupt for shadow region 7." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 7 address space to bit 31 to 0 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 31 to 0. Enabled interrupt bits for bit n do not contribute to the generation of a transfer completion interrupt for shadow region 7." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="DRAEH7" description="The DMA region access enable register for shadow region 7 is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all DMA registers in the shadow region 7 view of the DMA channel registers. Additionally, the DRAE7 configuration determines completion of which DMA channels will result in assertion of the shadow region 7 DMA completion interrupt. The DRAE registers are part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="DRAEH7" offset="0x37C" width="32">
    
  <bitfield begin="31" description=" DMA region access enable for bit 63 to 32 in region 7." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Accesses via region 7 address space to bit 63 to 32 in any DMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 contribute to the generation of a transfer completion interrupt for shadow region 7." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region 7 address space to bit 63 to 32 in any DMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit 63 to 32. Enabled interrupt bits for bit 31 to 0 do not contribute to the generation of a transfer completion interrupt for shadow region 7." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="QRAE_0" description="The QDMA region access enable register for shadow region m (QRAEm) is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all QDMA registers in the shadow region m view of the QDMA registers. This includes all 4-bit QDMA registers. The QRAE register is part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="QRAE_0" offset="0x380" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" QDMA region access enable for bit n/QDMA channel n in region m." end="0" id="En" rwaccess="RW" width="8">
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit n." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit n." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="QRAE_1" description="The QDMA region access enable register for shadow region m (QRAEm) is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all QDMA registers in the shadow region m view of the QDMA registers. This includes all 4-bit QDMA registers. The QRAE register is part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="QRAE_1" offset="0x384" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" QDMA region access enable for bit n/QDMA channel n in region m." end="0" id="En" rwaccess="RW" width="8">
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit n." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit n." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="QRAE_2" description="The QDMA region access enable register for shadow region m (QRAEm) is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all QDMA registers in the shadow region m view of the QDMA registers. This includes all 4-bit QDMA registers. The QRAE register is part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="QRAE_2" offset="0x388" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" QDMA region access enable for bit n/QDMA channel n in region m." end="0" id="En" rwaccess="RW" width="8">
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit n." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit n." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="QRAE_3" description="The QDMA region access enable register for shadow region m (QRAEm) is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all QDMA registers in the shadow region m view of the QDMA registers. This includes all 4-bit QDMA registers. The QRAE register is part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="QRAE_3" offset="0x38C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" QDMA region access enable for bit n/QDMA channel n in region m." end="0" id="En" rwaccess="RW" width="8">
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit n." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit n." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="QRAE_4" description="The QDMA region access enable register for shadow region m (QRAEm) is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all QDMA registers in the shadow region m view of the QDMA registers. This includes all 4-bit QDMA registers. The QRAE register is part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="QRAE_4" offset="0x390" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" QDMA region access enable for bit n/QDMA channel n in region m." end="0" id="En" rwaccess="RW" width="8">
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit n." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit n." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="QRAE_5" description="The QDMA region access enable register for shadow region m (QRAEm) is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all QDMA registers in the shadow region m view of the QDMA registers. This includes all 4-bit QDMA registers. The QRAE register is part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="QRAE_5" offset="0x394" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" QDMA region access enable for bit n/QDMA channel n in region m." end="0" id="En" rwaccess="RW" width="8">
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit n." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit n." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="QRAE_6" description="The QDMA region access enable register for shadow region m (QRAEm) is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all QDMA registers in the shadow region m view of the QDMA registers. This includes all 4-bit QDMA registers. The QRAE register is part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="QRAE_6" offset="0x398" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" QDMA region access enable for bit n/QDMA channel n in region m." end="0" id="En" rwaccess="RW" width="8">
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit n." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit n." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="QRAE_7" description="The QDMA region access enable register for shadow region m (QRAEm) is programmed to allow or disallow read/write accesses on a bit-by-bit bases for all QDMA registers in the shadow region m view of the QDMA registers. This includes all 4-bit QDMA registers. The QRAE register is part of the group of the region access enable registers, which includes DRAEm and QRAEm. Where m is the number of shadow regions in the EDMA3CC memory map for a device. You can configure these registers to assign ownership of DMA/QDMA channels to a particular shadow region." id="QRAE_7" offset="0x39C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" QDMA region access enable for bit n/QDMA channel n in region m." end="0" id="En" rwaccess="RW" width="8">
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are allowed. Reads return the value from bit n and writes modify the state of bit n." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Accesses via region m address space to bit n in any QDMA channel register are not allowed. Reads return 0 on bit n and writes do not modify the state of bit n." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="Q0E_0" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_0" offset="0x400" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="Q0E_1" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_1" offset="0x404" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_2" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_2" offset="0x408" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_3" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_3" offset="0x40C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_4" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_4" offset="0x410" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_5" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_5" offset="0x414" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_6" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_6" offset="0x418" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_7" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_7" offset="0x41C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_8" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_8" offset="0x420" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_9" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_9" offset="0x424" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_10" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_10" offset="0x428" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_11" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_11" offset="0x42C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_12" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_12" offset="0x430" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_13" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_13" offset="0x434" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_14" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_14" offset="0x438" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q0E_15" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q0E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q0E_15" offset="0x43C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 0. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 0. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_0" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_0" offset="0x440" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="Q1E_1" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_1" offset="0x444" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_2" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_2" offset="0x448" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_3" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_3" offset="0x44C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_4" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_4" offset="0x450" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_5" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_5" offset="0x454" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_6" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_6" offset="0x458" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_7" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_7" offset="0x45C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_8" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_8" offset="0x460" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_9" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_9" offset="0x464" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_10" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_10" offset="0x468" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_11" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_11" offset="0x46C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_12" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_12" offset="0x470" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_13" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_13" offset="0x474" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_14" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_14" offset="0x478" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q1E_15" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q1E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q1E_15" offset="0x47C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 1. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 1. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_0" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_0" offset="0x480" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="Q2E_1" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_1" offset="0x484" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_2" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_2" offset="0x488" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_3" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_3" offset="0x48C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_4" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_4" offset="0x490" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_5" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_5" offset="0x494" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_6" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_6" offset="0x498" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_7" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_7" offset="0x49C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_8" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_8" offset="0x4A0" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_9" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_9" offset="0x4A4" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_10" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_10" offset="0x4A8" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_11" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_11" offset="0x4AC" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_12" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_12" offset="0x4B0" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_13" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_13" offset="0x4B4" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_14" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_14" offset="0x4B8" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="Q2E_15" description="The event queue entry registers (QxEy) exist for all 16 queue entries (the maximum allowed queue entries) for all event queues in the EDMA3CC. The event queue entry registers range from Q0E0 to Q0E15, Q1E0 to Q1E15, and Q2E0 to Q2E15. Each register details the event number (ENUM) and the event type (ETYPE). For example, if the value in Q1E4 is read as 000 004Fh, this means the 4th entry in queue 1 is a manually-triggered event on DMA channel 15. The Q2E0 register provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="Q2E_15" offset="0x4BC" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"/>
    
  <bitfield begin="7" description=" Event entry y in queue 2. [[br]]Specifies the specific event type for the given entry in the event queue. [[br]] " end="6" id="ETYPE" rwaccess="R" width="2">
    <bitenum description="Auto-triggered via QER." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Event triggered via ER." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Event entry y in queue 2. [[br]]Event number: QDMA channel number (0 to 3). [[br]]DMA channel/event number (0 to 63)." end="0" id="ENUM" rwaccess="R" width="6"/>
  </register>
  
  
  <register acronym="QSTAT_0" description="The queue status register (QSTAT) provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="QSTAT_0" offset="0x600" width="32">
    
  <bitfield begin="31" description=" " end="25" id="RESERVED_1" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="24" description=" Threshold exceeded. [[br]]THRXCD is cleared by writing a 1 to the corresponding QTHRXCDn bit in the EDMA3CC error clear register (CCERRCLR). [[br]] " end="24" id="THRXCD" rwaccess="R" width="1">
    <bitenum description="Threshold specified by the Qn bit in the queue watermark threshold A register (QWMTHRA) has been exceeded." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Threshold specified by the Qn bit in the queue watermark threshold A register (QWMTHRA) has not been exceeded." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description=" " end="21" id="RESERVED_2" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="20" description=" Watermark for maximum queue usage. [[br]]Watermark tracks the most entries that have been in queue n since reset or since the last time that the watermark (WM) bit was cleared. [[br]]WM is cleared by writing a 1 to the corresponding QTHRXCDn bit in the EDMA3CC error clear register (CCERRCLR). [[br]] " end="16" id="WM" rwaccess="R" width="5">
    <bitenum description="Reserved, from 11h to 1Fh. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Legal values are 0 (empty) to 10h (full)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" " end="13" id="RESERVED_3" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="12" description=" Number of valid entries in queue n. [[br]]The total number of entries residing in the queue manager FIFO at a given instant. [[br]]Always enabled. [[br]] " end="8" id="NUMVAL" rwaccess="R" width="5">
    <bitenum description="Reserved, from 11h to 1Fh. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Legal values are 0 (empty) to 10h (full)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" " end="4" id="RESERVED_4" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="3" description=" Start pointer. [[br]]The offset to the head entry of queue n, in units of entries. [[br]]Always enabled. [[br]]Legal values are 0 (0th entry) to Fh (15th entry)." end="0" id="STRTPTR" rwaccess="R" width="4"></bitfield>
  </register>
  
  
  <register acronym="QSTAT_1" description="The queue status register (QSTAT) provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="QSTAT_1" offset="0x604" width="32">
    
  <bitfield begin="31" description=" " end="25" id="RESERVED_1" rwaccess="R" width="7"/>
    
  <bitfield begin="24" description=" Threshold exceeded. [[br]]THRXCD is cleared by writing a 1 to the corresponding QTHRXCDn bit in the EDMA3CC error clear register (CCERRCLR). [[br]] " end="24" id="THRXCD" rwaccess="R" width="1">
    <bitenum description="Threshold specified by the Qn bit in the queue watermark threshold A register (QWMTHRA) has been exceeded." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Threshold specified by the Qn bit in the queue watermark threshold A register (QWMTHRA) has not been exceeded." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="23" description=" " end="21" id="RESERVED_2" rwaccess="R" width="3"/>
    
  <bitfield begin="20" description=" Watermark for maximum queue usage. [[br]]Watermark tracks the most entries that have been in queue n since reset or since the last time that the watermark (WM) bit was cleared. [[br]]WM is cleared by writing a 1 to the corresponding QTHRXCDn bit in the EDMA3CC error clear register (CCERRCLR). [[br]] " end="16" id="WM" rwaccess="R" width="5">
    <bitenum description="Reserved, from 11h to 1Fh. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Legal values are 0 (empty) to 10h (full)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="15" description=" " end="13" id="RESERVED_3" rwaccess="R" width="3"/>
    
  <bitfield begin="12" description=" Number of valid entries in queue n. [[br]]The total number of entries residing in the queue manager FIFO at a given instant. [[br]]Always enabled. [[br]] " end="8" id="NUMVAL" rwaccess="R" width="5">
    <bitenum description="Reserved, from 11h to 1Fh. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Legal values are 0 (empty) to 10h (full)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="7" description=" " end="4" id="RESERVED_4" rwaccess="R" width="4"/>
    
  <bitfield begin="3" description=" Start pointer. [[br]]The offset to the head entry of queue n, in units of entries. [[br]]Always enabled. [[br]]Legal values are 0 (0th entry) to Fh (15th entry)." end="0" id="STRTPTR" rwaccess="R" width="4"/>
  </register>
  
  
  <register acronym="QSTAT_2" description="The queue status register (QSTAT) provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="QSTAT_2" offset="0x608" width="32">
    
  <bitfield begin="31" description=" " end="25" id="RESERVED_1" rwaccess="R" width="7"/>
    
  <bitfield begin="24" description=" Threshold exceeded. [[br]]THRXCD is cleared by writing a 1 to the corresponding QTHRXCDn bit in the EDMA3CC error clear register (CCERRCLR). [[br]] " end="24" id="THRXCD" rwaccess="R" width="1">
    <bitenum description="Threshold specified by the Qn bit in the queue watermark threshold A register (QWMTHRA) has been exceeded." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Threshold specified by the Qn bit in the queue watermark threshold A register (QWMTHRA) has not been exceeded." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="23" description=" " end="21" id="RESERVED_2" rwaccess="R" width="3"/>
    
  <bitfield begin="20" description=" Watermark for maximum queue usage. [[br]]Watermark tracks the most entries that have been in queue n since reset or since the last time that the watermark (WM) bit was cleared. [[br]]WM is cleared by writing a 1 to the corresponding QTHRXCDn bit in the EDMA3CC error clear register (CCERRCLR). [[br]] " end="16" id="WM" rwaccess="R" width="5">
    <bitenum description="Reserved, from 11h to 1Fh. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Legal values are 0 (empty) to 10h (full)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="15" description=" " end="13" id="RESERVED_3" rwaccess="R" width="3"/>
    
  <bitfield begin="12" description=" Number of valid entries in queue n. [[br]]The total number of entries residing in the queue manager FIFO at a given instant. [[br]]Always enabled. [[br]] " end="8" id="NUMVAL" rwaccess="R" width="5">
    <bitenum description="Reserved, from 11h to 1Fh. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Legal values are 0 (empty) to 10h (full)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="7" description=" " end="4" id="RESERVED_4" rwaccess="R" width="4"/>
    
  <bitfield begin="3" description=" Start pointer. [[br]]The offset to the head entry of queue n, in units of entries. [[br]]Always enabled. [[br]]Legal values are 0 (0th entry) to Fh (15th entry)." end="0" id="STRTPTR" rwaccess="R" width="4"/>
  </register>
  
  
  <register acronym="QWMTHRA" description="The queue watermark threshold A register (QWMTHRA) provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="QWMTHRA" offset="0x620" width="32">
    
  <bitfield begin="31" description=" " end="21" id="RESERVED_1" rwaccess="R" width="11"></bitfield>
    
  <bitfield begin="20" description=" Queue threshold for queue 2 value. [[br]]The QTHRXCD2 bit in the EDMA3CC error register (CCERR) and the THRXCD bit in the queue status register 2 (QSTAT2) are set when the number of events in queue 2 at an instant in time (visible via the NUMVAL bit in QSTAT2) equals or exceeds the value specified by Q2. [[br]] " end="16" id="Q2" rwaccess="RW" width="5">
    <bitenum description="From 12h to 1Fh, Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_3_0x12" token="en_3_0x12" value="0x12"></bitenum>
    <bitenum description="Disables the threshold errors." id="en_2_0x11" token="en_2_0x11" value="0x11"></bitenum>
    <bitenum description="From 0h to 10h, The default is 16 (maximum allowed)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" " end="13" id="RESERVED_2" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="12" description=" Queue threshold for queue 1 value. [[br]]The QTHRXCD1 bit in the EDMA3CC error register (CCERR) and the THRXCD bit in the queue status register 1 (QSTAT1) are set when the number of events in queue 1 at an instant in time (visible via the NUMVAL bit in QSTAT1) equals or exceeds the value specified by Q1. [[br]] " end="8" id="Q1" rwaccess="RW" width="5">
    <bitenum description="From 12h to 1Fh, Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_3_0x12" token="en_3_0x12" value="0x12"></bitenum>
    <bitenum description="Disables the threshold errors." id="en_2_0x11" token="en_2_0x11" value="0x11"></bitenum>
    <bitenum description="From 0h to 10h, The default is 16 (maximum allowed)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" " end="5" id="RESERVED_3" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="4" description=" Queue threshold for queue 0 value. [[br]]The QTHRXCD0 bit in the EDMA3CC error register (CCERR) and the THRXCD bit in the queue status register 0 (QSTAT0) are set when the number of events in queue 0 at an instant in time (visible via the NUMVAL bit in QSTAT0) equals or exceeds the value specified by Q0. [[br]] " end="0" id="Q0" rwaccess="RW" width="5">
    <bitenum description="From 12h to 1Fh, Reserved. Always write 0 to this bit; writes of 1 to this bit are not supported and attempts to do so may result in undefined behavior." id="en_3_0x12" token="en_3_0x12" value="0x12"></bitenum>
    <bitenum description="Disables the threshold errors." id="en_2_0x11" token="en_2_0x11" value="0x11"></bitenum>
    <bitenum description="From 0h to 10h, The default is 16 (maximum allowed)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CCSTAT" description="The EDMA3CC status register (CCSTAT) has a number of status bits that reflect which parts of the EDMA3CC logic is active at any given instant of time. CCSTAT provides visibility into the event queues and a TR life cycle. These are useful for system debug as they provide in-depth visibility for the events queued up in the event queue and also provide information on what parts of the EDMA3CC logic are active once the event has been received by the EDMA3CC." id="CCSTAT" offset="0x640" width="32">
    
  <bitfield begin="31" description=" " end="19" id="RESERVED_1" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description=" Queue 2 active." end="18" id="QUEACTV2" rwaccess="R" width="1">
    <bitenum description="At least one TR is queued in queue 2." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No events are queued in queue 2." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description=" Queue 1 active." end="17" id="QUEACTV1" rwaccess="R" width="1">
    <bitenum description="At least one TR is queued in queue 1." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No events are queued in queue 1." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description=" Queue 0 active." end="16" id="QUEACTV0" rwaccess="R" width="1">
    <bitenum description="At least one TR is queued in queue 0." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No events are queued in queue 0." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description=" " end="14" id="RESERVED_2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="13" description=" Completion request active. [[br]]The COMPACTV field reflects the count for the number of completion requests submitted to the transfer controllers. [[br]]This count increments every time a TR is submitted and is programmed to report completion (the TCINTEN or TCCCHEN bits in OPT in the parameter entry associated with the TR are set). [[br]]The counter decrements for every valid TCC received back from the transfer controllers. [[br]]If at any time the count reaches a value of 63, the EDMA3CC will not service any new TRs until the count is less then 63 (or return a transfer completion code from a transfer controller, which would decrement the count). [[br]] " end="8" id="COMPACTV" rwaccess="R" width="6">
    <bitenum description="Total of 1 completion request to 63 completion requests are outstanding, from 1h to 3Fh." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No completion requests outstanding." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description=" " end="5" id="RESERVED_3" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="4" description=" Channel controller active. [[br]]Channel controller active is a logical-OR of each of the *ACTV bits. [[br]]The ACTV bit remains high through the life of a TR. [[br]] " end="4" id="ACTV" rwaccess="R" width="1">
    <bitenum description="Channel is busy." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Channel is idle.." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" " end="3" id="RESERVED_4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description=" Transfer request active." end="2" id="TRACTV" rwaccess="R" width="1">
    <bitenum description="Transfer request processing/submission logic is active." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Transfer request processing/submission logic is inactive." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" QDMA event active." end="1" id="QEVTACTV" rwaccess="R" width="1">
    <bitenum description="At least one enabled QDMA event (QER) is active within the EDMA3CC." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No enabled QDMA events are active within the EDMA3CC." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" DMA event active." end="0" id="EVTACTV" rwaccess="R" width="1">
    <bitenum description="At least one enabled DMA event (ER and EER, ESR, CER) is active within the EDMA3CC." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No enabled DMA events are active within the EDMA3CC." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MPFAR" description="A CPU write of 1 to the MPFCLR bit in the memory protection fault command register (MPFCR) causes any error conditions stored in MPFAR to be cleared." id="MPFAR" offset="0x800" width="32">
    
  <bitfield begin="31" description=" Fault address. [[br]]This 32 bit read-only status register contains the fault address when a memory protection violation is detected. [[br]]This register can only be cleared via the memory protection fault command register (MPFCR). [[br]]Value 0 to FFFF FFFFh." end="0" id="FADDR" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="MPFSR" description="A CPU write of 1 to the MPFCLR bit in the memory protection fault command register (MPFCR) causes any error conditions stored in MPFSR to be cleared." id="MPFSR" offset="0x804" width="32">
    
  <bitfield begin="31" description=" " end="13" id="RESERVED_1" rwaccess="R" width="19"></bitfield>
    
  <bitfield begin="12" description=" Faulted identification. [[br]]FID contains valid information if any of the MP error bits (UXE, UWE, URE, SXE, SWE, SRE) are nonzero (that is, if an error has been detected.) The FID field contains the privilege ID for the specific request/requestor that resulted in an MP error. [[br]]Value 0 to Fh." end="9" id="FID" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="8" description=" " end="6" id="RESERVED_2" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="5" description=" Supervisor read error." end="5" id="SRE" rwaccess="R" width="1">
    <bitenum description="Supervisor level task attempted to read from a MP page without SR permissions." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No error detected." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Supervisor write error." end="4" id="SWE" rwaccess="R" width="1">
    <bitenum description="Supervisor level task attempted to write to a MP page without SW permissions." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No error detected." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Supervisor execute error." end="3" id="SXE" rwaccess="R" width="1">
    <bitenum description="Supervisor level task attempted to execute from a MP page without SX permissions." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No error detected." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" User read error." end="2" id="URE" rwaccess="R" width="1">
    <bitenum description="User level task attempted to read from a MP page without UR permissions." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No error detected." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" User write error." end="1" id="UWE" rwaccess="R" width="1">
    <bitenum description="User level task attempted to write to a MP page without UW permissions." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No error detected." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" User execute error." end="0" id="UXE" rwaccess="R" width="1">
    <bitenum description="User level task attempted to execute from a MP page without UX permissions." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No error detected." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MPFCR" description="" id="MPFCR" offset="0x808" width="32">
    
  <bitfield begin="31" description=" " end="1" id="RESERVED_1" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description=" Fault clear register." end="0" id="MPFCLR" rwaccess="W" width="1">
    <bitenum description="CPU write of 1 to the MPFCLR bit causes any error conditions stored in the memory protection fault address register (MPFAR) and the memory protection fault status register (MPFSR) to be cleared." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="CPU write of 0 has no effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MPPAG" description="" id="MPPAG" offset="0x80C" width="32">
    
  <bitfield begin="31" description=" " end="16" id="RESERVED_1" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description=" Allowed ID 'N'" end="10" id="AIDm" rwaccess="RW" width="6">
    <bitenum description="Requests with Privilege ID == N are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Requests with Privilege ID == N are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description=" External Allowed ID." end="9" id="EXT" rwaccess="RW" width="1">
    <bitenum description="Requests with Privilege ID >= 6 are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Requests with Privilege ID >= 6 are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description=" " end="8" id="RESERVED_2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description=" " end="6" id="RESERVED_3" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description=" Supervisor read permission." end="5" id="SR" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Supervisor read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Supervisor write permission." end="4" id="SW" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed to region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Supervisor write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" Supervisor execute permission." end="3" id="SX" rwaccess="RW" width="1">
    <bitenum description="Supervisor execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Supervisor execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" User read permission." end="2" id="UR" rwaccess="RW" width="1">
    <bitenum description="User read accesses are allowed from region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="User read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" User write permission." end="1" id="UW" rwaccess="RW" width="1">
    <bitenum description="User write accesses are allowed to region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="User write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description=" User execute permission." end="0" id="UX" rwaccess="RW" width="1">
    <bitenum description="User execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="User execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MPPA_0" description="" id="MPPA_0" offset="0x810" width="32">
    
  <bitfield begin="31" description=" " end="17" id="RESERVED_3" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="16" description=" Allowed ID 'N'" end="11" id="AIDm" rwaccess="RW" width="6">
    <bitenum description="Requests with Privilege ID == N are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Requests with Privilege ID == N are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="10" description=" External Allowed ID." end="10" id="EXT" rwaccess="RW" width="1">
    <bitenum description="Requests with Privilege ID >= 6 are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Requests with Privilege ID >= 6 are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description=" " end="9" id="RESERVED_1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description=" " end="7" id="RESERVED_2" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="6" description=" Supervisor read permission." end="6" id="SR" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Supervisor read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description=" Supervisor write permission." end="5" id="SW" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed to region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Supervisor write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description=" Supervisor execute permission." end="4" id="SX" rwaccess="RW" width="1">
    <bitenum description="Supervisor execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Supervisor execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description=" User read permission." end="3" id="UR" rwaccess="RW" width="1">
    <bitenum description="User read accesses are allowed from region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="User read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description=" User write permission." end="2" id="UW" rwaccess="RW" width="1">
    <bitenum description="User write accesses are allowed to region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="User write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description=" User execute permission." end="1" id="UX" rwaccess="RW" width="1">
    <bitenum description="User execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="User execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="MPPA_1" description="" id="MPPA_1" offset="0x814" width="32">
    
  <bitfield begin="31" description=" " end="17" id="RESERVED_3" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="16" description=" Allowed ID 'N'" end="11" id="AIDm" rwaccess="RW" width="6">
    <bitenum description="Requests with Privilege ID == N are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID == N are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="10" description=" External Allowed ID." end="10" id="EXT" rwaccess="RW" width="1">
    <bitenum description="Requests with Privilege ID >= 6 are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID >= 6 are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="9" description=" " end="9" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="8" description=" " end="7" id="RESERVED_2" rwaccess="R" width="2"/>
    
  <bitfield begin="6" description=" Supervisor read permission." end="6" id="SR" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Supervisor write permission." end="5" id="SW" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed to region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Supervisor execute permission." end="4" id="SX" rwaccess="RW" width="1">
    <bitenum description="Supervisor execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" User read permission." end="3" id="UR" rwaccess="RW" width="1">
    <bitenum description="User read accesses are allowed from region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="2" description=" User write permission." end="2" id="UW" rwaccess="RW" width="1">
    <bitenum description="User write accesses are allowed to region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="1" description=" User execute permission." end="1" id="UX" rwaccess="RW" width="1">
    <bitenum description="User execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="MPPA_2" description="" id="MPPA_2" offset="0x818" width="32">
    
  <bitfield begin="31" description=" " end="17" id="RESERVED_3" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="16" description=" Allowed ID 'N'" end="11" id="AIDm" rwaccess="RW" width="6">
    <bitenum description="Requests with Privilege ID == N are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID == N are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="10" description=" External Allowed ID." end="10" id="EXT" rwaccess="RW" width="1">
    <bitenum description="Requests with Privilege ID >= 6 are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID >= 6 are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="9" description=" " end="9" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="8" description=" " end="7" id="RESERVED_2" rwaccess="R" width="2"/>
    
  <bitfield begin="6" description=" Supervisor read permission." end="6" id="SR" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Supervisor write permission." end="5" id="SW" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed to region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Supervisor execute permission." end="4" id="SX" rwaccess="RW" width="1">
    <bitenum description="Supervisor execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" User read permission." end="3" id="UR" rwaccess="RW" width="1">
    <bitenum description="User read accesses are allowed from region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="2" description=" User write permission." end="2" id="UW" rwaccess="RW" width="1">
    <bitenum description="User write accesses are allowed to region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="1" description=" User execute permission." end="1" id="UX" rwaccess="RW" width="1">
    <bitenum description="User execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="MPPA_3" description="" id="MPPA_3" offset="0x81C" width="32">
    
  <bitfield begin="31" description=" " end="17" id="RESERVED_3" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="16" description=" Allowed ID 'N'" end="11" id="AIDm" rwaccess="RW" width="6">
    <bitenum description="Requests with Privilege ID == N are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID == N are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="10" description=" External Allowed ID." end="10" id="EXT" rwaccess="RW" width="1">
    <bitenum description="Requests with Privilege ID >= 6 are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID >= 6 are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="9" description=" " end="9" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="8" description=" " end="7" id="RESERVED_2" rwaccess="R" width="2"/>
    
  <bitfield begin="6" description=" Supervisor read permission." end="6" id="SR" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Supervisor write permission." end="5" id="SW" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed to region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Supervisor execute permission." end="4" id="SX" rwaccess="RW" width="1">
    <bitenum description="Supervisor execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" User read permission." end="3" id="UR" rwaccess="RW" width="1">
    <bitenum description="User read accesses are allowed from region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="2" description=" User write permission." end="2" id="UW" rwaccess="RW" width="1">
    <bitenum description="User write accesses are allowed to region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="1" description=" User execute permission." end="1" id="UX" rwaccess="RW" width="1">
    <bitenum description="User execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="MPPA_4" description="" id="MPPA_4" offset="0x820" width="32">
    
  <bitfield begin="31" description=" " end="17" id="RESERVED_3" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="16" description=" Allowed ID 'N'" end="11" id="AIDm" rwaccess="RW" width="6">
    <bitenum description="Requests with Privilege ID == N are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID == N are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="10" description=" External Allowed ID." end="10" id="EXT" rwaccess="RW" width="1">
    <bitenum description="Requests with Privilege ID >= 6 are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID >= 6 are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="9" description=" " end="9" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="8" description=" " end="7" id="RESERVED_2" rwaccess="R" width="2"/>
    
  <bitfield begin="6" description=" Supervisor read permission." end="6" id="SR" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Supervisor write permission." end="5" id="SW" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed to region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Supervisor execute permission." end="4" id="SX" rwaccess="RW" width="1">
    <bitenum description="Supervisor execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" User read permission." end="3" id="UR" rwaccess="RW" width="1">
    <bitenum description="User read accesses are allowed from region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="2" description=" User write permission." end="2" id="UW" rwaccess="RW" width="1">
    <bitenum description="User write accesses are allowed to region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="1" description=" User execute permission." end="1" id="UX" rwaccess="RW" width="1">
    <bitenum description="User execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="MPPA_5" description="" id="MPPA_5" offset="0x824" width="32">
    
  <bitfield begin="31" description=" " end="17" id="RESERVED_3" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="16" description=" Allowed ID 'N'" end="11" id="AIDm" rwaccess="RW" width="6">
    <bitenum description="Requests with Privilege ID == N are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID == N are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="10" description=" External Allowed ID." end="10" id="EXT" rwaccess="RW" width="1">
    <bitenum description="Requests with Privilege ID >= 6 are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID >= 6 are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="9" description=" " end="9" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="8" description=" " end="7" id="RESERVED_2" rwaccess="R" width="2"/>
    
  <bitfield begin="6" description=" Supervisor read permission." end="6" id="SR" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Supervisor write permission." end="5" id="SW" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed to region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Supervisor execute permission." end="4" id="SX" rwaccess="RW" width="1">
    <bitenum description="Supervisor execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" User read permission." end="3" id="UR" rwaccess="RW" width="1">
    <bitenum description="User read accesses are allowed from region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="2" description=" User write permission." end="2" id="UW" rwaccess="RW" width="1">
    <bitenum description="User write accesses are allowed to region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="1" description=" User execute permission." end="1" id="UX" rwaccess="RW" width="1">
    <bitenum description="User execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="MPPA_6" description="" id="MPPA_6" offset="0x828" width="32">
    
  <bitfield begin="31" description=" " end="17" id="RESERVED_3" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="16" description=" Allowed ID 'N'" end="11" id="AIDm" rwaccess="RW" width="6">
    <bitenum description="Requests with Privilege ID == N are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID == N are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="10" description=" External Allowed ID." end="10" id="EXT" rwaccess="RW" width="1">
    <bitenum description="Requests with Privilege ID >= 6 are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID >= 6 are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="9" description=" " end="9" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="8" description=" " end="7" id="RESERVED_2" rwaccess="R" width="2"/>
    
  <bitfield begin="6" description=" Supervisor read permission." end="6" id="SR" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Supervisor write permission." end="5" id="SW" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed to region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Supervisor execute permission." end="4" id="SX" rwaccess="RW" width="1">
    <bitenum description="Supervisor execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" User read permission." end="3" id="UR" rwaccess="RW" width="1">
    <bitenum description="User read accesses are allowed from region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="2" description=" User write permission." end="2" id="UW" rwaccess="RW" width="1">
    <bitenum description="User write accesses are allowed to region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="1" description=" User execute permission." end="1" id="UX" rwaccess="RW" width="1">
    <bitenum description="User execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="MPPA_7" description="" id="MPPA_7" offset="0x82C" width="32">
    
  <bitfield begin="31" description=" " end="17" id="RESERVED_3" rwaccess="R" width="15"></bitfield>
    
  <bitfield begin="16" description=" Allowed ID 'N'" end="11" id="AIDm" rwaccess="RW" width="6">
    <bitenum description="Requests with Privilege ID == N are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID == N are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="10" description=" External Allowed ID." end="10" id="EXT" rwaccess="RW" width="1">
    <bitenum description="Requests with Privilege ID >= 6 are permitted, if access type is allowed as defined by permission settings (UW, UR, SW, SR)." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Requests with Privilege ID >= 6 are not allowed to region M, regardless of permission settings (UW, UR, SW, SR)." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="9" description=" " end="9" id="RESERVED_1" rwaccess="R" width="1"/>
    
  <bitfield begin="8" description=" " end="7" id="RESERVED_2" rwaccess="R" width="2"/>
    
  <bitfield begin="6" description=" Supervisor read permission." end="6" id="SR" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="5" description=" Supervisor write permission." end="5" id="SW" rwaccess="RW" width="1">
    <bitenum description="Supervisor write accesses are allowed to region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="4" description=" Supervisor execute permission." end="4" id="SX" rwaccess="RW" width="1">
    <bitenum description="Supervisor execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="Supervisor execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="3" description=" User read permission." end="3" id="UR" rwaccess="RW" width="1">
    <bitenum description="User read accesses are allowed from region N addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User read accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="2" description=" User write permission." end="2" id="UW" rwaccess="RW" width="1">
    <bitenum description="User write accesses are allowed to region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User write accesses are not allowed to region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
    
  <bitfield begin="1" description=" User execute permission." end="1" id="UX" rwaccess="RW" width="1">
    <bitenum description="User execute accesses are allowed from region M addresses." id="en_2_0x1" token="en_2_0x1" value="0x1"/>
    <bitenum description="User execute accesses are not allowed from region M." id="en_1_0x0" token="en_1_0x0" value="0x0"/>
  </bitfield>
  </register>
  
  
  <register acronym="ER" description="All external events are captured in the event register (ER/ERH). The events are latched even when the events are not enabled. If the event bit corresponding to the latched event is enabled (EER.En/EERH.En = 1), then the event is evaluated by the EDMA3CC logic for an associated transfer request submission to the transfer controllers. The event register bits are automatically cleared (ER.En/ERH.En= 0) once the corresponding events are prioritized and serviced. If ER.En/ERH.En are already set and another event is received on the same channel/event, then the corresponding event is latched in the event miss register (EMR.En/EMRH.En), provided that the event was enabled (EER.En/EERH.En = 1). Event n can be cleared by the CPU writing a 1 to corresponding event bit in the event clear register (ECR/ECRH). The setting of an event is a higher priority relative to clear operations (via hardware or software). If set and clear conditions occur concurrently, the set condition wins. If the event was previously set, then EMR/EMRH would be set because an event is lost. If the event was previously clear, then the event remains set and is prioritized for submission to the event queues. The Debug List table provides the type of synchronization events and the EDMA3CC channels associated to each of these external events. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="ER" offset="0x1000" width="32">
    
  <bitfield begin="31" description=" Event 0 to 31. [[br]]Events 0 to 31 are captured by the EDMA3CC and are latched into ER. [[br]]The events are set (En = 1) even when events are disabled (En = 0 in the event enable register, EER). [[br]] " end="0" id="En" rwaccess="R" width="32">
    <bitenum description="EDMA3CC event is asserted. Corresponding DMA event is prioritized versus other pending DMA/QDMA events for submission to the EDMA3TC." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="EDMA3CC event is not asserted." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="ERH" description="All external events are captured in the event register (ER/ERH). The events are latched even when the events are not enabled. If the event bit corresponding to the latched event is enabled (EER.En/EERH.En = 1), then the event is evaluated by the EDMA3CC logic for an associated transfer request submission to the transfer controllers. The event register bits are automatically cleared (ER.En/ERH.En= 0) once the corresponding events are prioritized and serviced. If ER.En/ERH.En are already set and another event is received on the same channel/event, then the corresponding event is latched in the event miss register (EMR.En/EMRH.En), provided that the event was enabled (EER.En/EERH.En = 1). Event n can be cleared by the CPU writing a 1 to corresponding event bit in the event clear register (ECR/ECRH). The setting of an event is a higher priority relative to clear operations (via hardware or software). If set and clear conditions occur concurrently, the set condition wins. If the event was previously set, then EMR/EMRH would be set because an event is lost. If the event was previously clear, then the event remains set and is prioritized for submission to the event queues. The Debug List table provides the type of synchronization events and the EDMA3CC channels associated to each of these external events. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="ERH" offset="0x1004" width="32">
    
  <bitfield begin="31" description=" Event 32 to 63. [[br]]Events 32 to 63 are captured by the EDMA3CC and are latched into ERH. [[br]]The events are set (En = 1) even when events are disabled (En = 0 in the event enable register high, EERH). [[br]] " end="0" id="En" rwaccess="R" width="32">
    <bitenum description="EDMA3CC event is asserted. Corresponding DMA event is prioritized versus other pending DMA/QDMA events for submission to the EDMA3TC." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="EDMA3CC event is not asserted." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="ECR" description="Once an event has been posted in the event registers (ER/ERH), the event is cleared in two ways. If the event is enabled in the event enable register (EER/EERH) and the EDMA3CC submits a transfer request for the event to the EDMA3TC, it clears the corresponding event bit in the event register. If the event is disabled in the event enable register (EER/EERH), the CPU can clear the event by way of the event clear registers (ECR/ECRH). Writing a 1 to any of the bits clears the corresponding event; writing a 0 has no effect. Once an event bit is set in the event register, it remains set until EDMA3CC submits a transfer request for that event or the CPU clears the event by setting the corresponding bit in ECR/ECRH. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="ECR" offset="0x1008" width="32">
    
  <bitfield begin="31" description=" Event clear for event 0 to 31. [[br]]Any of the event bits in ECR is set to clear the event (En) in the event register (ER). [[br]]A write of 0 has no effect. [[br]] " end="0" id="En" rwaccess="W" width="32">
    <bitenum description="EDMA3CC event is cleared in the event register (ER)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="ECRH" description="Once an event has been posted in the event registers (ER/ERH), the event is cleared in two ways. If the event is enabled in the event enable register (EER/EERH) and the EDMA3CC submits a transfer request for the event to the EDMA3TC, it clears the corresponding event bit in the event register. If the event is disabled in the event enable register (EER/EERH), the CPU can clear the event by way of the event clear registers (ECR/ECRH). Writing a 1 to any of the bits clears the corresponding event; writing a 0 has no effect. Once an event bit is set in the event register, it remains set until EDMA3CC submits a transfer request for that event or the CPU clears the event by setting the corresponding bit in ECR/ECRH. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="ECRH" offset="0x100C" width="32">
    
  <bitfield begin="31" description=" Event clear for event 32 to 63. [[br]]Any of the event bits in ECRH are set to clear the event (En) in the event register high (ERH). [[br]]A write of 0 has no effect. [[br]] " end="0" id="En" rwaccess="W" width="32">
    <bitenum description="EDMA3CC event is cleared in the event register high (ERH)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="ESR" description="The event set registers (ESR/ESRH) allow the CPU (EDMA3 programmers) to manually set events to initiate DMA transfer requests. CPU writes of 1 to any event set register (En) bits set the corresponding bits in the registers. The set event is evaluated by the EDMA3CC logic for an associated transfer request submission to the transfer controllers. Writing a 0 has no effect. The event set registers operate independent of the event registers (ER/ERH), and a write of 1 is always considered a valid event regardless of whether the event is enabled (the corresponding event bits are set or cleared in EER.En/EERH.En). Once the event is set in the event set registers, it cannot be cleared by CPU writes, in other words, the event clear registers (ECR/ECRH) have no effect on the state of ESR/ESRH. The bits will only be cleared once the transfer request corresponding to the event has been submitted to the transfer controller. The setting of an event is a higher priority relative to clear operations (via hardware). If set and clear conditions occur concurrently, the set condition wins. If the event was previously set, then EMR/EMRH would be set because an event is lost. If the event was previously clear, then the event remains set and is prioritized for submission to the event queues. Manually-triggered transfers via writes to ESR/ESRH allow the CPU to submit DMA requests in the system, these are relevant for memory-to-memory transfer scenarios. If the ESR.En/ESRH.En bit is already set and another CPU write of 1 is attempted to the same bit, then the corresponding event is latched in the event missed registers (EMR.En/EMRH.En = 1). This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="ESR" offset="0x1010" width="32">
    
  <bitfield begin="31" description=" Event set for event 0 to 31." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Corresponding DMA event is prioritized versus other pending DMA/QDMA events for submission to the EDMA3TC." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="ESRH" description="The event set registers (ESR/ESRH) allow the CPU (EDMA3 programmers) to manually set events to initiate DMA transfer requests. CPU writes of 1 to any event set register (En) bits set the corresponding bits in the registers. The set event is evaluated by the EDMA3CC logic for an associated transfer request submission to the transfer controllers. Writing a 0 has no effect. The event set registers operate independent of the event registers (ER/ERH), and a write of 1 is always considered a valid event regardless of whether the event is enabled (the corresponding event bits are set or cleared in EER.En/EERH.En). Once the event is set in the event set registers, it cannot be cleared by CPU writes, in other words, the event clear registers (ECR/ECRH) have no effect on the state of ESR/ESRH. The bits will only be cleared once the transfer request corresponding to the event has been submitted to the transfer controller. The setting of an event is a higher priority relative to clear operations (via hardware). If set and clear conditions occur concurrently, the set condition wins. If the event was previously set, then EMR/EMRH would be set because an event is lost. If the event was previously clear, then the event remains set and is prioritized for submission to the event queues. Manually-triggered transfers via writes to ESR/ESRH allow the CPU to submit DMA requests in the system, these are relevant for memory-to-memory transfer scenarios. If the ESR.En/ESRH.En bit is already set and another CPU write of 1 is attempted to the same bit, then the corresponding event is latched in the event missed registers (EMR.En/EMRH.En = 1). This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="ESRH" offset="0x1014" width="32">
    
  <bitfield begin="31" description=" Event set for event 32 to 63." end="0" id="En" rwaccess="RW" width="32">
    <bitenum description="Corresponding DMA event is prioritized versus other pending DMA/QDMA events for submission to the EDMA3TC." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CER" description="When the OPTIONS parameter for a PaRAM entry is programmed to returned a chained completion code (ITCCHEN = 1 and/or TCCHEN = 1), then the value dictated by the TCC[5:0] (also programmed in OPT) forces the corresponding event bit to be set in the chained event registers (CER/CERH). The set chained event is evaluated by the EDMA3CC logic for an associated transfer request submission to the transfer controllers. This results in a chained-triggered transfer. The chained event registers do not have any enables. The generation of a chained event is essentially enabled by the PaRAM entry that has been configured for intermediate and/or final chaining on transfer completion. The En bit is set (regardless of the state of EER.En/EERH.En) when a chained completion code is returned from one of the transfer controllers or is generated by the EDMA3CC via the early completion path. The bits in the chained event register are cleared when the corresponding events are prioritized and serviced. If the En bit is already set and another chaining completion code is return for the same event, then the corresponding event is latched in the event missed registers (EMR.En/EMRH.En= 1). The setting of an event is a higher priority relative to clear operations (via hardware). If set and clear conditions occur concurrently, the set condition wins. If the event was previously set, then EMR/EMRH would be set because an event is lost. If the event was previously clear, then the event remains set and is prioritized for submission to the event queues. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="CER" offset="0x1018" width="32">
    
  <bitfield begin="31" description=" Chained event for event 0 to 31." end="0" id="En" rwaccess="R" width="32">
    <bitenum description="Corresponding DMA event is prioritized versus other pending DMA/QDMA events for submission to the EDMA3TC." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CERH" description="When the OPTIONS parameter for a PaRAM entry is programmed to returned a chained completion code (ITCCHEN = 1 and/or TCCHEN = 1), then the value dictated by the TCC[5:0] (also programmed in OPT) forces the corresponding event bit to be set in the chained event registers (CER/CERH). The set chained event is evaluated by the EDMA3CC logic for an associated transfer request submission to the transfer controllers. This results in a chained-triggered transfer. The chained event registers do not have any enables. The generation of a chained event is essentially enabled by the PaRAM entry that has been configured for intermediate and/or final chaining on transfer completion. The En bit is set (regardless of the state of EER.En/EERH.En) when a chained completion code is returned from one of the transfer controllers or is generated by the EDMA3CC via the early completion path. The bits in the chained event register are cleared when the corresponding events are prioritized and serviced. If the En bit is already set and another chaining completion code is return for the same event, then the corresponding event is latched in the event missed registers (EMR.En/EMRH.En= 1). The setting of an event is a higher priority relative to clear operations (via hardware). If set and clear conditions occur concurrently, the set condition wins. If the event was previously set, then EMR/EMRH would be set because an event is lost. If the event was previously clear, then the event remains set and is prioritized for submission to the event queues. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="CERH" offset="0x101C" width="32">
    
  <bitfield begin="31" description=" Chained event set for event 32 to 63." end="0" id="En" rwaccess="R" width="32">
    <bitenum description="Corresponding DMA event is prioritized versus other pending DMA/QDMA events for submission to the EDMA3TC." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="EER" description="The EDMA3CC provides the option of selectively enabling/disabling each event in the event registers (ER/ERH) by using the event enable registers (EER/EERH). If an event bit in EER/EERH is set (using the event enable set registers, EESR/EESRH), it will enable that corresponding event. Alternatively, if an event bit in EER/EERH is cleared (using the event enable clear registers, EECR/EECRH), it will disable the corresponding event. The event registers latch all events that are captured by EDMA3CC, even if the events are disabled (although EDMA3CC does not process it). Enabling an event with a pending event already set in the event registers enables the EDMA3CC to process the already set event like any other new event. The EER/EERH settings do not have any effect on chained events (CER.En/CERH.En= 1) and manually set events (ESR.En/ESRH.En= 1). This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="EER" offset="0x1020" width="32">
    
  <bitfield begin="31" description=" Event enable for events 0 to 31." end="0" id="En" rwaccess="R" width="32">
    <bitenum description="Event is enabled. An external event latched in the event register (ER) is evaluated by the EDMA3CC." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event is not enabled. An external event latched in the event register (ER) is not evaluated by the EDMA3CC." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="EERH" description="The EDMA3CC provides the option of selectively enabling/disabling each event in the event registers (ER/ERH) by using the event enable registers (EER/EERH). If an event bit in EER/EERH is set (using the event enable set registers, EESR/EESRH), it will enable that corresponding event. Alternatively, if an event bit in EER/EERH is cleared (using the event enable clear registers, EECR/EECRH), it will disable the corresponding event. The event registers latch all events that are captured by EDMA3CC, even if the events are disabled (although EDMA3CC does not process it). Enabling an event with a pending event already set in the event registers enables the EDMA3CC to process the already set event like any other new event. The EER/EERH settings do not have any effect on chained events (CER.En/CERH.En= 1) and manually set events (ESR.En/ESRH.En= 1). This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="EERH" offset="0x1024" width="32">
    
  <bitfield begin="31" description=" Event enable for events 32 to 63." end="0" id="En" rwaccess="R" width="32">
    <bitenum description="Event is enabled. An external event latched in the event register high (ERH) is evaluated by the EDMA3CC." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event is not enabled. An external event latched in the event register high (ERH) is not evaluated by the EDMA3CC." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="EECR" description="The event enable registers (EER/EERH) cannot be modified by directly writing to them. The intent is to ease the software burden for the case where multiple tasks are attempting to simultaneously modify these registers. The event enable clear registers (EECR/EECRH) are used to disable events. Writes of 1 to the bits in EECR/EECRH clear the corresponding event bits in EER/EERH; writes of 0 have no effect. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="EECR" offset="0x1028" width="32">
    
  <bitfield begin="31" description=" Event enable clear for events 0 to 31." end="0" id="En" rwaccess="W" width="32">
    <bitenum description="Event is disabled. Corresponding bit in the event enable register (EER) is cleared (En = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="EECRH" description="The event enable registers (EER/EERH) cannot be modified by directly writing to them. The intent is to ease the software burden for the case where multiple tasks are attempting to simultaneously modify these registers. The event enable clear registers (EECR/EECRH) are used to disable events. Writes of 1 to the bits in EECR/EECRH clear the corresponding event bits in EER/EERH; writes of 0 have no effect. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="EECRH" offset="0x102C" width="32">
    
  <bitfield begin="31" description=" Event enable clear for events 32 to 63." end="0" id="En" rwaccess="W" width="32">
    <bitenum description="Event is disabled. Corresponding bit in the event enable register high (EERH) is cleared (En = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="EESR" description="The event enable registers (EER/EERH) cannot be modified by directly writing to them. The intent is to ease the software burden for the case where multiple tasks are attempting to simultaneously modify these registers. The event enable set registers (EESR/EESRH) are used to enable events. Writes of 1 to the bits in EESR/EESRH set the corresponding event bits in EER/EERH; writes of 0 have no effect. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="EESR" offset="0x1030" width="32">
    
  <bitfield begin="31" description=" Event enable set for events 0 to 31." end="0" id="En" rwaccess="W" width="32">
    <bitenum description="Event is enabled. Corresponding bit in the event enable register (EER) is set (En = 1)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="EESRH" description="The event enable registers (EER/EERH) cannot be modified by directly writing to them. The intent is to ease the software burden for the case where multiple tasks are attempting to simultaneously modify these registers. The event enable set registers (EESR/EESRH) are used to enable events. Writes of 1 to the bits in EESR/EESRH set the corresponding event bits in EER/EERH; writes of 0 have no effect. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="EESRH" offset="0x1034" width="32">
    
  <bitfield begin="31" description=" Event enable set for events 32 to 63." end="0" id="En" rwaccess="W" width="32">
    <bitenum description="Event is enabled. Corresponding bit in the event enable register high (EERH) is set (En= 1)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="SER" description="The secondary event registers (SER/SERH) provide information on the state of a DMA channel or event (0 through 63). If the EDMA3CC receives a TR synchronization due to a manual-trigger, event-trigger, or chained-trigger source (ESR.En/ESRH.En= 1, ER.En/ERH.En= 1, or CER.En/CERH.En= 1), which results in the setting of a corresponding event bit in SER/SERH (SER.En/SERH.En = 1), it implies that the corresponding DMA event is in the queue. Once a bit corresponding to an event is set in SER/SERH, the EDMA3CC does not prioritize additional events on the same DMA channel. Depending on the condition that lead to the setting of the SER bits, either the EDMA3CC hardware or the software (using SECR/SECRH) needs to clear the SER/SERH bits for the EDMA3CC to evaluate subsequent events (subsequent transfers) on the same channel. For additional conditions that can cause the secondary event registers to be set, see EDMA Overview. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="SER" offset="0x1038" width="32">
    
  <bitfield begin="31" description=" Secondary event register. [[br]]The secondary event register is used along with the event register (ER) to provide information on the state of an event. [[br]] " end="0" id="En" rwaccess="R" width="32">
    <bitenum description="Event is currently stored in the event queue. Event arbiter will not prioritize additional events." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event is not currently stored in the event queue." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="SERH" description="The secondary event registers (SER/SERH) provide information on the state of a DMA channel or event (0 through 63). If the EDMA3CC receives a TR synchronization due to a manual-trigger, event-trigger, or chained-trigger source (ESR.En/ESRH.En= 1, ER.En/ERH.En= 1, or CER.En/CERH.En= 1), which results in the setting of a corresponding event bit in SER/SERH (SER.En/SERH.En = 1), it implies that the corresponding DMA event is in the queue. Once a bit corresponding to an event is set in SER/SERH, the EDMA3CC does not prioritize additional events on the same DMA channel. Depending on the condition that lead to the setting of the SER bits, either the EDMA3CC hardware or the software (using SECR/SECRH) needs to clear the SER/SERH bits for the EDMA3CC to evaluate subsequent events (subsequent transfers) on the same channel. For additional conditions that can cause the secondary event registers to be set, see EDMA Overview. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="SERH" offset="0x103C" width="32">
    
  <bitfield begin="31" description=" Secondary event register. [[br]]The secondary event register is used along with the event register high (ERH) to provide information on the state of an event. [[br]] " end="0" id="En" rwaccess="R" width="32">
    <bitenum description="Event is currently stored in the event queue. Event submission/prioritization logic will not prioritize additional events." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Event is not currently stored in the event queue." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="SECR" description="The secondary event clear registers (SECR/SECRH) clear the status of the secondary event registers (SER/SERH). CPU writes of 1 clear the corresponding set bits in SER/SERH. Writes of 0 have no effect. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="SECR" offset="0x1040" width="32">
    
  <bitfield begin="31" description=" Secondary event clear register." end="0" id="En" rwaccess="W" width="32">
    <bitenum description="Corresponding bit in the secondary event register (SER) is cleared (En = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="SECRH" description="The secondary event clear registers (SECR/SECRH) clear the status of the secondary event registers (SER/SERH). CPU writes of 1 clear the corresponding set bits in SER/SERH. Writes of 0 have no effect. This register is part of a set of registers that pertain to the 64 DMA channels. The 64 DMA channels consist of a set of registers (with exception of DMAQNUMn) that each have 64 bits and the bit position of each register matches the DMA channel number. Each register is named with the format reg_name that corresponds to DMA channels 0 through 31 and reg_name_High that corresponds to DMA channels 32 through 64. For example, the event register (ER) corresponds to DMA channel 0 through 31 and the event register high register (ERH) corresponds to DMA channel 32 through 63. The register is typically called the event register. The DMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write ability to the registers in the shadow region are controlled by the DMA region access registers (DRAEm/DRAEHm)." id="SECRH" offset="0x1044" width="32">
    
  <bitfield begin="31" description=" Secondary event clear register." end="0" id="En" rwaccess="W" width="32">
    <bitenum description="Corresponding bit in the secondary event registers high (SERH) is cleared (En = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="IER" description="Interrupt enable registers (IER/IERH) are used to enable/disable the transfer completion interrupt generation by the EDMA3CC for all DMA/QDMA channels. The IER/IERH cannot be written to directly. To set any interrupt bit in IER/IERH, a 1 must be written to the corresponding interrupt bit in the interrupt enable set registers (IESR/IESRH). Similarly, to clear any interrupt bit in IER/IERH, a 1 must be written to the corresponding interrupt bit in the interrupt enable clear registers (IECR/IECRH). All DMA/QDMA channels can be set to assert an EDMA3CC completion interrupt to the CPU on transfer completion, by appropriately configuring the PaRAM entry associated with the channels. This register is used for the transfer completion interrupt reporting/generating by the EDMA3CC. For more details on EDMA3CC completion interrupt generation, see EDMA3 Interrupts." id="IER" offset="0x1050" width="32">
    
  <bitfield begin="31" description=" Interrupt enable for channels 0 to 31." end="0" id="In" rwaccess="R" width="32">
    <bitenum description="Interrupt is enabled." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt is not enabled." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="IERH" description="Interrupt enable registers (IER/IERH) are used to enable/disable the transfer completion interrupt generation by the EDMA3CC for all DMA/QDMA channels. The IER/IERH cannot be written to directly. To set any interrupt bit in IER/IERH, a 1 must be written to the corresponding interrupt bit in the interrupt enable set registers (IESR/IESRH). Similarly, to clear any interrupt bit in IER/IERH, a 1 must be written to the corresponding interrupt bit in the interrupt enable clear registers (IECR/IECRH). All DMA/QDMA channels can be set to assert an EDMA3CC completion interrupt to the CPU on transfer completion, by appropriately configuring the PaRAM entry associated with the channels. This register is used for the transfer completion interrupt reporting/generating by the EDMA3CC. For more details on EDMA3CC completion interrupt generation, see EDMA3 Interrupts." id="IERH" offset="0x1054" width="32">
    
  <bitfield begin="31" description=" Interrupt enable for channels 32 to 63." end="0" id="In" rwaccess="R" width="32">
    <bitenum description="Interrupt is enabled." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt is not enabled." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="IECR" description="The interrupt enable clear registers (IECR/IECRH) are used to clear interrupts. Writes of 1 to the bits in IECR/IECRH clear the corresponding interrupt bits in the interrupt enable registers (IER/IERH); writes of 0 have no effect. All DMA/QDMA channels can be set to assert an EDMA3CC completion interrupt to the CPU on transfer completion, by appropriately configuring the PaRAM entry associated with the channels. This register is used for the transfer completion interrupt reporting/generating by the EDMA3CC. For more details on EDMA3CC completion interrupt generation, see EDMA3 Interrupts." id="IECR" offset="0x1058" width="32">
    
  <bitfield begin="31" description=" Interrupt enable clear for channels 0 to 31." end="0" id="In" rwaccess="W" width="32">
    <bitenum description="Corresponding bit in the interrupt enable register (IER) is cleared (In = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="IECRH" description="The interrupt enable clear registers (IECR/IECRH) are used to clear interrupts. Writes of 1 to the bits in IECR/IECRH clear the corresponding interrupt bits in the interrupt enable registers (IER/IERH); writes of 0 have no effect. All DMA/QDMA channels can be set to assert an EDMA3CC completion interrupt to the CPU on transfer completion, by appropriately configuring the PaRAM entry associated with the channels. This register is used for the transfer completion interrupt reporting/generating by the EDMA3CC. For more details on EDMA3CC completion interrupt generation, see EDMA3 Interrupts." id="IECRH" offset="0x105C" width="32">
    
  <bitfield begin="31" description=" Interrupt enable clear for channels 32 to 63." end="0" id="In" rwaccess="W" width="32">
    <bitenum description="Corresponding bit in the interrupt enable register high (IERH) is cleared (In = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="IESR" description="The interrupt enable set registers (IESR/IESRH) are used to enable interrupts. Writes of 1 to the bits in IESR/IESRH set the corresponding interrupt bits in the interrupt enable registers (IER/IERH); writes of 0 have no effect. All DMA/QDMA channels can be set to assert an EDMA3CC completion interrupt to the CPU on transfer completion, by appropriately configuring the PaRAM entry associated with the channels. This register is used for the transfer completion interrupt reporting/generating by the EDMA3CC. For more details on EDMA3CC completion interrupt generation, see EDMA3 Interrupts." id="IESR" offset="0x1060" width="32">
    
  <bitfield begin="31" description=" Interrupt enable set for channels 0 to 31." end="0" id="In" rwaccess="W" width="32">
    <bitenum description="Corresponding bit in the interrupt enable register (IER) is set (In = 1)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="IESRH" description="The interrupt enable set registers (IESR/IESRH) are used to enable interrupts. Writes of 1 to the bits in IESR/IESRH set the corresponding interrupt bits in the interrupt enable registers (IER/IERH); writes of 0 have no effect. All DMA/QDMA channels can be set to assert an EDMA3CC completion interrupt to the CPU on transfer completion, by appropriately configuring the PaRAM entry associated with the channels. This register is used for the transfer completion interrupt reporting/generating by the EDMA3CC. For more details on EDMA3CC completion interrupt generation, see EDMA3 Interrupts." id="IESRH" offset="0x1064" width="32">
    
  <bitfield begin="31" description=" Interrupt enable clear for channels 32 to 63." end="0" id="In" rwaccess="W" width="32">
    <bitenum description="Corresponding bit in the interrupt enable register high (IERH) is set (In = 1)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="IPR" description="If the TCINTEN and/or ITCINTEN bit in the channel option parameter (OPT) is set in the PaRAM entry associated with the channel (DMA or QDMA), then the EDMA3TC (for normal completion) or the EDMA3CC (for early completion) returns a completion code on transfer or intermediate transfer completion. The value of the returned completion code is equal to the TCC bit in OPT for the PaRAM entry associated with the channel. When an interrupt transfer completion code with TCC = n is detected by the EDMA3CC, then the corresponding bit is set in the interrupt pending register (IPR.In, if n = 0 to 31; IPRH.In, if n = 32 to 63). Note that once a bit is set in the interrupt pending registers, it remains set; it is your responsibility to clear these bits. The bits set in IPR/IPRH are cleared by writing a 1 to the corresponding bits in the interrupt clear registers (ICR/ICRH). All DMA/QDMA channels can be set to assert an EDMA3CC completion interrupt to the CPU on transfer completion, by appropriately configuring the PaRAM entry associated with the channels. This register is used for the transfer completion interrupt reporting/generating by the EDMA3CC. For more details on EDMA3CC completion interrupt generation, see EDMA3 Interrupts." id="IPR" offset="0x1068" width="32">
    
  <bitfield begin="31" description=" Interrupt pending for TCC = 0 to 31." end="0" id="In" rwaccess="R" width="32">
    <bitenum description="Interrupt transfer completion code is detected (In = 1, n = EDMA3TC[2:0])." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt transfer completion code is not detected or was cleared." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="IPRH" description="If the TCINTEN and/or ITCINTEN bit in the channel option parameter (OPT) is set in the PaRAM entry associated with the channel (DMA or QDMA), then the EDMA3TC (for normal completion) or the EDMA3CC (for early completion) returns a completion code on transfer or intermediate transfer completion. The value of the returned completion code is equal to the TCC bit in OPT for the PaRAM entry associated with the channel. When an interrupt transfer completion code with TCC = n is detected by the EDMA3CC, then the corresponding bit is set in the interrupt pending register (IPR.In, if n = 0 to 31; IPRH.In, if n = 32 to 63). Note that once a bit is set in the interrupt pending registers, it remains set; it is your responsibility to clear these bits. The bits set in IPR/IPRH are cleared by writing a 1 to the corresponding bits in the interrupt clear registers (ICR/ICRH). All DMA/QDMA channels can be set to assert an EDMA3CC completion interrupt to the CPU on transfer completion, by appropriately configuring the PaRAM entry associated with the channels. This register is used for the transfer completion interrupt reporting/generating by the EDMA3CC. For more details on EDMA3CC completion interrupt generation, see EDMA3 Interrupts." id="IPRH" offset="0x106C" width="32">
    
  <bitfield begin="31" description=" Interrupt pending for TCC = 32 to 63." end="0" id="In" rwaccess="R" width="32">
    <bitenum description="Interrupt transfer completion code is detected (In = 1, n = EDMA3TC[2:0])." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Interrupt transfer completion code is not detected or was cleared." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="ICR" description="The bits in the interrupt pending registers (IPR/IPRH) are cleared by writing a 1 to the corresponding bits in the interrupt clear registers(ICR/ICRH). Writes of 0 have no effect. All set bits in IPR/IPRH must be cleared to allow EDMA3CC to assert additional transfer completion interrupts. All DMA/QDMA channels can be set to assert an EDMA3CC completion interrupt to the CPU on transfer completion, by appropriately configuring the PaRAM entry associated with the channels. This register is used for the transfer completion interrupt reporting/generating by the EDMA3CC. For more details on EDMA3CC completion interrupt generation, see EDMA3 Interrupts." id="ICR" offset="0x1070" width="32">
    
  <bitfield begin="31" description=" Interrupt clear register for TCC = 0 to 31." end="0" id="In" rwaccess="W" width="32">
    <bitenum description="Corresponding bit in the interrupt pending register (IPR) is cleared (In = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="ICRH" description="The bits in the interrupt pending registers (IPR/IPRH) are cleared by writing a 1 to the corresponding bits in the interrupt clear registers(ICR/ICRH). Writes of 0 have no effect. All set bits in IPR/IPRH must be cleared to allow EDMA3CC to assert additional transfer completion interrupts. All DMA/QDMA channels can be set to assert an EDMA3CC completion interrupt to the CPU on transfer completion, by appropriately configuring the PaRAM entry associated with the channels. This register is used for the transfer completion interrupt reporting/generating by the EDMA3CC. For more details on EDMA3CC completion interrupt generation, see EDMA3 Interrupts." id="ICRH" offset="0x1074" width="32">
    
  <bitfield begin="31" description=" Interrupt clear register for TCC = 32 to 63." end="0" id="In" rwaccess="W" width="32">
    <bitenum description="Corresponding bit in the interrupt pending register high (IPRH) is cleared (In = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="IEVAL" description="The interrupt evaluate register (IEVAL) is the only register that physically exists in both the global region and the shadow regions. In other words, the read/write accessibility for the shadow region IEVAL is not affected by the DMA/QDMA region access registers (DRAEm/DRAEHm, QRAEn/QRAEHn). IEVAL is needed for robust ISR operations to ensure that interrupts are not missed by the CPU. All DMA/QDMA channels can be set to assert an EDMA3CC completion interrupt to the CPU on transfer completion, by appropriately configuring the PaRAM entry associated with the channels. This register is used for the transfer completion interrupt reporting/generating by the EDMA3CC. For more details on EDMA3CC completion interrupt generation, see EDMA3 Interrupts." id="IEVAL" offset="0x1078" width="32">
    
  <bitfield begin="31" description=" " end="2" id="RESERVED_1" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description=" " end="1" id="RESERVED_2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description=" Interrupt evaluate. [[br]]The EDMA3CC completion interrupt that is pulsed depends on which IEVAL is being exercised. [[br]]For example, writing to the EVAL bit in IEVAL pulses the global completion interrupt, but writing to the EVAL bit in IEVAL0 pulses the region 0 completion interrupt. [[br]] " end="0" id="EVAL" rwaccess="W" width="1">
    <bitenum description="Causes EDMA3CC completion interrupt to be pulsed, if any enabled (IERn/IERHn = 1) interrupts are still pending (IPRn/IPRHn = 1)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="QER" description="The QDMA event register (QER) channel n bit is set (En = 1) when the CPU or any EDMA3 programmer (including EDMA3) performs a write to the trigger word (using the QDMA channel mapping register (QCHMAPn)) in the PaRAM entry associated with QDMA channel n (which is also programmed using QCHMAPn). The En bit is also set when the EDMA3CC performs a link update on a PaRAM address that matches the QCHMAPn settings. The QDMA event is latched only if the QDMA event enable register (QEER) channel n bit is also enabled (QEER.En = 1). Once a bit is set in QER, then the corresponding QDMA event (auto-trigger) is evaluated by the EDMA3CC logic for an associated transfer request submission to the transfer controllers. For additional conditions that can lead to the setting of QER bits, see EDMA Overview. The setting of an event is a higher priority relative to clear operations (via hardware). If set and clear conditions occur concurrently, the set condition wins. If the event was previously set, then the QDMA event missed register (QEMR) would be set because an event is lost. If the event was previously clear, then the event remains set and is prioritized for submission to the event queues. The set bits in QER are only cleared when the transfer request associated with the corresponding channels has been processed by the EDMA3CC and submitted to the transfer controller. If the En bit is already set and a QDMA event for the same QDMA channel occurs prior to the original being cleared, then the second missed event is latched in QEMR (En = 1). QER is part of a set of register that control the QDMA channels in EDMA3CC. QDMA channels (with the exception of the QDMA queue number register) consist of a set of registers, each of which have a bit location. Each bit position corresponds to a QDMA channel number. The QDMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write accessibility in the shadow region address region is controlled by the QDMA region access registers (QRAEn/QRAEHn)." id="QER" offset="0x1080" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" QDMA event for channels 0 to 7." end="0" id="En" rwaccess="R" width="8">
    <bitenum description="Corresponding QDMA event is prioritized versus other pending DMA/QDMA events for submission to the EDMA3TC." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="QEER" description="The EDMA3CC provides the option of selectively enabling/disabling each channel in the QDMA event register (QER) by using the QDMA event enable register (QEER). If any of the event bits in QEER is set (using the QDMA event enable set register, QEESR), it will enable that corresponding event. Alternatively, if any event bit in QEER is cleared (using the QDMA event enable clear register, QEECR), it will disable the corresponding QDMA channel. The QDMA event register will not latch any event for a QDMA channel, if it is not enabled via QEER. QEER is part of a set of register that control the QDMA channels in EDMA3CC. QDMA channels (with the exception of the QDMA queue number register) consist of a set of registers, each of which have a bit location. Each bit position corresponds to a QDMA channel number. The QDMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write accessibility in the shadow region address region is controlled by the QDMA region access registers (QRAEn/QRAEHn)." id="QEER" offset="0x1084" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" QDMA event enable for channels 0 to 7." end="0" id="En" rwaccess="R" width="8">
    <bitenum description="QDMA channel n is enabled. QDMA events will be recognized and will get latched in the QDMA event register (QER)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="QDMA channel n is not enabled. QDMA event will not be recognized and will not latch in the QDMA event register (QER)." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="QEECR" description="The QDMA event enable register (QEER) cannot be modified by directly writing to the register, to ease the software burden when multiple tasks are attempting to simultaneously modify these registers. The QDMA event enable clear register (QEECR) is used to disable events. Writes of 1 to the bits in QEECR clear the corresponding QDMA channel bits in QEER; writes of 0 have no effect. QEECR is part of a set of register that control the QDMA channels in EDMA3CC. QDMA channels (with the exception of the QDMA queue number register) consist of a set of registers, each of which have a bit location. Each bit position corresponds to a QDMA channel number. The QDMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write accessibility in the shadow region address region is controlled by the QDMA region access registers (QRAEn/QRAEHn)." id="QEECR" offset="0x1088" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" QDMA event enable clear for channels 0 to 7." end="0" id="En" rwaccess="W" width="8">
    <bitenum description="QDMA event is disabled. Corresponding bit in the QDMA event enable register (QEER) is cleared (En = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="QEESR" description="The QDMA event enable register (QEER) cannot be modified by directly writing to the register, to ease the software burden when multiple tasks are attempting to simultaneously modify these registers. The QDMA event enable set register (QEESR) is used to enable events. Writes of 1 to the bits in QEESR set the corresponding QDMA channel bits in QEER; writes of 0 have no effect." id="QEESR" offset="0x108C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" QDMA event enable set for channels 0 to 7." end="0" id="En" rwaccess="W" width="8">
    <bitenum description="QDMA event is enabled. Corresponding bit in the QDMA event enable register (QEER) is set (En = 1)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="QSER" description="The QDMA secondary event register (QSER) provides information on the state of a QDMA event. If at any time a bit corresponding to a QDMA channel is set in QSER, that implies that the corresponding QDMA event is in the queue. Once a bit corresponding to a QDMA channel is set in QSER, the EDMA3CC does not prioritize additional events on the same QDMA channel. Depending on the condition that lead to the setting of the QSER bits, either the EDMA3CC hardware or the software (using QSECR) needs to clear the QSER bits for the EDMA3CC to evaluate subsequent QDMA events on the channel. Based on whether the associated TR request is valid, or it is a null or dummy TR, the implications on the state of QSER and the required user actions to submit another QDMA transfer might be different. For additional conditions that can cause the secondary event registers (QSER\SER) to be set, see EDMA Overview. QSER is part of a set of register that control the QDMA channels in EDMA3CC. QDMA channels (with the exception of the QDMA queue number register) consist of a set of registers, each of which have a bit location. Each bit position corresponds to a QDMA channel number. The QDMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write accessibility in the shadow region address region is controlled by the QDMA region access registers (QRAEn/QRAEHn)." id="QSER" offset="0x1090" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" QDMA secondary event register for channels 0 to 7." end="0" id="En" rwaccess="R" width="8">
    <bitenum description="QDMA event is currently stored in the event queue. EDMA3CC will not prioritize additional events." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="QDMA event is not currently stored in the event queue." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="QSECR" description="The QDMA secondary event clear register (QSECR) clears the status of the QDMA secondary event register (QSER) and the QDMA event register (QER). CPU writes of 1 clear the corresponding set bits in QSER and QER. Writes of 0 have no effect. Note that this differs from the secondary event clear register (SECR) operation, which only clears the secondary event register (SER) bits and does not affect the event registers. QESCR is part of a set of register that control the QDMA channels in EDMA3CC. QDMA channels (with the exception of the QDMA queue number register) consist of a set of registers, each of which have a bit location. Each bit position corresponds to a QDMA channel number. The QDMA channel registers are accessible via read/writes to the global address range. They are also accessible via read/writes to the shadow address range. The read/write accessibility in the shadow region address region is controlled by the QDMA region access registers (QRAEn/QRAEHn)." id="QSECR" offset="0x1094" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" QDMA secondary event clear register for channels 0 to 7." end="0" id="En" rwaccess="W" width="8">
    <bitenum description="Corresponding bit in the QDMA secondary event register (QSER) and the QDMA event register (QER) is cleared (En = 0)." id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="No effect." id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
</module>
