<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="CPSW_CPTS" id="CPSW_CPTS">
  
  
  <register acronym="CPSW_CPTS_IDVER" description="IDENTIFICATION AND VERSION REGISTER" id="CPSW_CPTS_IDVER" offset="0x0" width="32">
    
  <bitfield begin="31" description=" TX Identification Value" end="16" id="TX_IDENT" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description=" RTL Version Value" end="11" id="RTL_VER" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description=" Major Version Value" end="8" id="MAJOR_VER" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description=" Minor Version Value" end="0" id="MINOR_VER" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_CTRL" description="TIME SYNC CONTROL REGISTER" id="CPSW_CPTS_CTRL" offset="0x4" width="32">
    
  <bitfield begin="31" description=" TS_SYNC output timestamp counter bit select[[br]] [[br]]0000 - TS_SYNC disabled 0001 to [[br]]1111 - TS_SYNC is timestamp counter bits 31 (1111) down to 17 (0001)" end="28" id="TS_SYNC_SEL" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description=" " end="16" id="RESERVED_1" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="15" description=" Hardware push 8 enable" end="15" id="HW8_TS_PUSH_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description=" Hardware push 7 enable" end="14" id="HW7_TS_PUSH_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description=" Hardware push 6 enable" end="13" id="HW6_TS_PUSH_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description=" Hardware push 5 enable" end="13" id="HW5_TS_PUSH_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description=" " end="12" id="RESERVED_2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="11" description=" Hardware push 4 enable" end="11" id="HW4_TS_PUSH_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description=" Hardware push 3 enable" end="10" id="HW3_TS_PUSH_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description=" Hardware push 2 enable" end="9" id="HW2_TS_PUSH_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description=" Hardware push 1 enable" end="8" id="HW1_TS_PUSH_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description=" " end="2" id="RESERVED_3" rwaccess="R" width="6"></bitfield>
    
  <bitfield begin="1" description=" Interrupt Test - When set, this bit allows the raw interrupt to be written to facilitate interrupt test." end="1" id="INT_TEST" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description=" Time Sync Enable - When disabled (cleared to zero), the RCLK domain is held in reset." end="0" id="CPTS_EN" rwaccess="RW" width="1">
    <bitenum description="Time Sync Enabled" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Time Sync Disabled" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CPSW_RFTCLK_SEL" description="RFTCLK SELECT REGISTER" id="CPSW_RFTCLK_SEL" offset="0x8" width="32">
    
  <bitfield begin="31" description=" " end="5" id="RESERVED_1" rwaccess="R" width="27"></bitfield>
    
  <bitfield begin="4" description=" Reference Clock Select - This signal is used to control an external multiplexor that selects one of up to 32 clocks for time sync reference (RFTCLK). [[br]]This RFTCLK_SEL value can be written only when the CPTS_EN bit is cleared to zero in the CPTS_CONTROL register." end="0" id="RFTCLK_SEL" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_PUSH" description="TIME STAMP EVENT PUSH REGISTER" id="CPSW_CPTS_PUSH" offset="0xC" width="32">
    
  <bitfield begin="31" description=" " end="1" id="RESERVED_1" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description=" Time stamp event push - When a logic high is written to this bit a time stamp event is pushed onto the event FIFO. [[br]]The time stamp value is the time of the write of this register, not the time of the event read. [[br]]The time stamp value can then be read on interrupt via the event registers. [[br]]Software should not push a second time stamp event onto the event FIFO until the first time stamp value has been read from the event FIFO (there should be only one time stamp event in the event FIFO at any given time). [[br]]This bit is write only and always reads zero. [[br]]" end="0" id="TS_PUSH" rwaccess="W" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_LOAD_VAL" description="TIME STAMP LOAD VALUE REGISTER" id="CPSW_CPTS_LOAD_VAL" offset="0x10" width="32">
    
  <bitfield begin="31" description=" Time Stamp Load Value - Writing the ts_load_en bit causes the value contained in this register to be written into the time stamp. [[br]]The time stamp value is read by initiating a time stamp push event, not by reading this register. [[br]]When reading this register, the value read is not the time stamp, but is the value that was last written to this register. [[br]]" end="0" id="TS_LOAD_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_LOAD_EN" description="TIME STAMP LOAD ENABLE REGISTER" id="CPSW_CPTS_LOAD_EN" offset="0x14" width="32">
    
  <bitfield begin="31" description=" " end="1" id="RESERVED_1" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description=" Time Stamp Load - Writing a one to this bit enables the time stamp value to be written via the ts_load_val[[br]][31:0] register. [[br]]This feature is included for test purposes. [[br]]This bit is write only. [[br]]" end="0" id="TS_LOAD_EN" rwaccess="W" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_COMP_VAL" description="TIME STAMP COMPARISON VALUE REGISTER" id="CPSW_CPTS_COMP_VAL" offset="0x18" width="32">
    
  <bitfield begin="31" description=" Time Stamp Comparison Value     Writing a non-zero value to the TS_Comp_Length[15:0] register causes a pulse of TS_Comp_Length RCLK periods on the TS_COMP output and a comparison event when the time_stamp counter value is equivalent to ts_comp_val." end="0" id="TS_COMP_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_COMP_LENGTH" description="TIME STAMP COMPARISON LENGTH REGISTER" id="CPSW_CPTS_COMP_LENGTH" offset="0x1C" width="32">
    
  <bitfield begin="31" description=" " end="16" id="RESERVED_1" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description=" Time Stamp Comparison Length     Writing a non-zero value to this field enables the time stamp comparison event and output. [[br]]This value should be zero when the TS_Comp_Val register is written." end="0" id="TS_COMP_LENGTH" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_INTSTAT_RAW" description="TIME SYNC INTERRUPT STATUS RAW REGISTER" id="CPSW_CPTS_INTSTAT_RAW" offset="0x20" width="32">
    
  <bitfield begin="31" description=" " end="1" id="RESERVED_1" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description=" TS_PEND_RAW int read (before enable). [[br]]Writable when int_test = 1 A one in this bit indicates that there is one or more events in the event FIFO. [[br]]" end="0" id="TS_PEND_RAW" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_INTSTAT_MASKED" description="TIME SYNC INTERRUPT STATUS MASKED REGISTER" id="CPSW_CPTS_INTSTAT_MASKED" offset="0x24" width="32">
    
  <bitfield begin="31" description=" " end="1" id="RESERVED_1" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description=" TS_PEND masked interrupt read (after enable)." end="0" id="TS_PEND" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_INT_EN" description="TIME SYNC INTERRUPT ENABLE REGISTER" id="CPSW_CPTS_INT_EN" offset="0x28" width="32">
    
  <bitfield begin="31" description=" " end="1" id="RESERVED_1" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description=" TS_PEND masked interrupt enable." end="0" id="TS_PEND_EN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_EVT_POP" description="EVENT INTERRUPT POP REGISTER" id="CPSW_CPTS_EVT_POP" offset="0x30" width="32">
    
  <bitfield begin="31" description=" " end="1" id="RESERVED_1" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description=" Event Pop - When a logic high is written to this bit an event is popped off the event FIFO. [[br]]The event FIFO pop occurs as part of the interrupt process after the event has been read in the Event_Low and Event_High registers. [[br]]Popping an event discards the event and causes the next event, if any, to be moved to the top of the FIFO ready to be read by software on interrupt. [[br]]" end="0" id="EVT_POP" rwaccess="W" width="1"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_EVT_LOW" description="LOWER 32-BITS OF THE EVENT VALUE" id="CPSW_CPTS_EVT_LOW" offset="0x34" width="32">
    
  <bitfield begin="31" description=" Time Stamp - The timestamp is valid for transmit, receive, and time stamp push event types. [[br]]The timestamp value is not valid for counter roll event types. [[br]]" end="0" id="TIME_STAMP" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_EVT_MID" description="MIDDLE 32-BITS OF THE EVENT VALUE" id="CPSW_CPTS_EVT_MID" offset="0x38" width="32">
    
  <bitfield begin="31" description=" " end="29" id="RESERVED_1" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="28" description=" Port Number - indicates the port number of an ethernet event or the hardware push pin number (1 to 4)." end="24" id="PORT_NUMBER" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="23" description=" Time Sync Event Type " end="20" id="EVT_TYPE" rwaccess="R" width="4">
    <bitenum description="Ethernet Transmit Event" id="en_6_0x5" token="en_6_0x5" value="0x5"></bitenum>
    <bitenum description="Ethernet Receive Event" id="en_5_0x4" token="en_5_0x4" value="0x4"></bitenum>
    <bitenum description="Hardware Time Stamp Push Event" id="en_4_0x3" token="en_4_0x3" value="0x3"></bitenum>
    <bitenum description="Time Stamp Half Rollover Event" id="en_3_0x2" token="en_3_0x2" value="0x2"></bitenum>
    <bitenum description="Time Stamp Rollover Event" id="en_2_0x1" token="en_2_0x1" value="0x1"></bitenum>
    <bitenum description="Time Stamp Push Event" id="en_1_0x0" token="en_1_0x0" value="0x0"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description=" Message type - The message type value that was contained in an ethernet transmit or receive time sync packet. [[br]]This field is valid only for ethernet transmit or receive events. [[br]]" end="16" id="MESSAGE_TYPE" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="15" description=" Sequence ID - The [[br]]16-bit sequence id is the value that was contained in an ethernet transmit or receivetime sync packet. [[br]]This field is valid only for ethernet transmit or receive events." end="0" id="SEQUENCE_ID" rwaccess="R" width="16"></bitfield>
  </register>
  
  
  <register acronym="CPSW_CPTS_EVT_HIGH" description="UPPER 32-BITS OF THE EVENT VALUE" id="CPSW_CPTS_EVT_HIGH" offset="0x3C" width="32">
    
  <bitfield begin="31" description=" " end="8" id="RESERVED_1" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description=" Domain     The [[br]]8-bit domain is the value that was contained in an Ethernet transmit or receive time sync packet. [[br]]This field is valid only for Ethernet transmit or receive events." end="0" id="DOMAIN" rwaccess="R" width="8"></bitfield>
  </register>
</module>
