<module name="DEVICE_PRM" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="PRM_RSTCTRL" acronym="PRM_RSTCTRL" offset="0x0" width="32" description="Global software cold and warm reset control. This register is auto-cleared. Only write 1 is possible. A read returns 0 only.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="RST_GLOBAL_COLD_SW" width="1" begin="1" end="1" resetval="0" description="Global COLD software reset control. This bit is reset only upon a global cold source of reset." range="" rwaccess="RW">
      <bitenum value="0" id="0x0" token="RST_GLOBAL_COLD_SW_0" description="Global COLD software reset is cleared."/>
      <bitenum value="1" id="0x1" token="RST_GLOBAL_COLD_SW_1" description="Triggers a global COLD software reset."/>
    </bitfield>
    <bitfield id="RST_GLOBAL_WARM_SW" width="1" begin="0" end="0" resetval="0" description="Global WARM software reset control. This bit is reset upon any global source of reset (warm and cold)." range="" rwaccess="RW">
      <bitenum value="0" id="0x0" token="RST_GLOBAL_WARM_SW_0" description="Global warm software reset is cleared."/>
      <bitenum value="1" id="0x1" token="RST_GLOBAL_WARM_SW_1" description="Triggers a global warm software reset."/>
    </bitfield>
  </register>
  <register id="PRM_RSTST" acronym="PRM_RSTST" offset="0x4" width="32" description="This register logs the global reset sources. Each bit is set upon release of the domain reset signal. Must be cleared by software. [warm reset insensitive]">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="TSHUT_CORE_RST" width="1" begin="13" end="13" resetval="0" description="TSHUT_CORE warm reset event. This is a source of global WARM reset. 0x0: No TSHUT_CORE reset 0x1: TSHUT_CORE reset has occurred." range="" rwaccess="RW W1toClr"/>
    <bitfield id="TSHUT_MM_RST" width="1" begin="12" end="12" resetval="0" description="TSHUT_MM warm reset event. This is a source of global WARM reset. 0x0: No TSHUT_MM reset 0x1: TSHUT_MM reset has occurred." range="" rwaccess="RW W1toClr"/>
    <bitfield id="TSHUT_MPU_RST" width="1" begin="11" end="11" resetval="0" description="TSHUT_MPU warm reset event. This is a source of global WARM reset. 0x0: No TSHUT_MPU reset 0x1: TSHUT_MPU reset has occurred." range="" rwaccess="RW W1toClr"/>
    <bitfield id="RESERVED" width="1" begin="10" end="10" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="ICEPICK_RST" width="1" begin="9" end="9" resetval="0" description="IcePick reset event. This is a source of global warm reset initiated by the emulation." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0x0" token="ICEPICK_RST_0" description="No ICEPICK reset."/>
      <bitenum value="1" id="0x1" token="ICEPICK_RST_1" description="IcePick reset has occurred."/>
    </bitfield>
    <bitfield id="VDD_CORE_VOLT_MGR_RST" width="1" begin="8" end="8" resetval="0" description="VDD_CORE voltage manager reset event This is a source of global WARM reset." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0x0" token="VDD_CORE_VOLT_MGR_RST_0" description="No VDD_CORE voltage manager reset."/>
      <bitenum value="1" id="0x1" token="VDD_CORE_VOLT_MGR_RST_1" description="VDD_CORE voltage manager reset has occurred."/>
    </bitfield>
    <bitfield id="VDD_MM_VOLT_MGR_RST" width="1" begin="7" end="7" resetval="0" description="VDD_MM voltage manager reset event This is a source of global WARM reset." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0x0" token="VDD_MM_VOLT_MGR_RST_0" description="No VDD_MM voltage manager reset."/>
      <bitenum value="1" id="0x1" token="VDD_MM_VOLT_MGR_RST_1" description="VDD_MM voltage manager reset has occurred."/>
    </bitfield>
    <bitfield id="VDD_MPU_VOLT_MGR_RST" width="1" begin="6" end="6" resetval="0" description="VDD_MPU voltage manager reset event This is a source of global WARM reset." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0x0" token="VDD_MPU_VOLT_MGR_RST_0" description="No VDD_MPU voltage manager reset."/>
      <bitenum value="1" id="0x1" token="VDD_MPU_VOLT_MGR_RST_1" description="VDD_MPU voltage manager reset has occurred."/>
    </bitfield>
    <bitfield id="EXTERNAL_WARM_RST" width="1" begin="5" end="5" resetval="0" description="External warm reset event" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0x0" token="EXTERNAL_WARM_RST_0" description="No global warm reset."/>
      <bitenum value="1" id="0x1" token="EXTERNAL_WARM_RST_1" description="Global external warm reset has occurred."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="4" end="4" resetval="0" description="" range="" rwaccess="RW W1toClr"/>
    <bitfield id="MPU_WDT_RST" width="1" begin="3" end="3" resetval="0" description="MPU Watchdog timer reset event. This is a source of global WARM reset." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0x0" token="MPU_WDT_RST_0" description="No MPU watchdog reset."/>
      <bitenum value="1" id="0x1" token="MPU_WDT_RST_1" description="MPU wachtdog reset has occurred."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="2" end="2" resetval="0" description="" range="" rwaccess="RW W1toClr"/>
    <bitfield id="GLOBAL_WARM_SW_RST" width="1" begin="1" end="1" resetval="0" description="Global warm software reset event" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0x0" token="GLOBAL_WARM_SW_RST_0" description="No global warm SW reset"/>
      <bitenum value="1" id="0x1" token="GLOBAL_WARM_SW_RST_1" description="Global warm SW reset has occurred."/>
    </bitfield>
    <bitfield id="GLOBAL_COLD_RST" width="1" begin="0" end="0" resetval="1" description="Power-on (cold) reset event" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0x0" token="GLOBAL_COLD_RST_0" description="No power-on reset."/>
      <bitenum value="1" id="0x1" token="GLOBAL_COLD_RST_1" description="Power-on reset has occurred."/>
    </bitfield>
  </register>
  <register id="PRM_RSTTIME" acronym="PRM_RSTTIME" offset="0x8" width="32" description="Reset duration control. [warm reset insensitive]">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="RSTTIME2" width="5" begin="14" end="10" resetval="0x10" description="Power domain reset duration 2 in number of RM.SYS_CLK clock cycles." range="" rwaccess="RW">
      <bitenum value="0" id="Reserved" token="RSTTIME2_0" description="Reserved"/>
    </bitfield>
    <bitfield id="RSTTIME1" width="10" begin="9" end="0" resetval="0x06" description="Global reset duration 1 in number of FUNC_32K_CLK clock cycles. This bit-field is only sensitive to the external power-on reset (WKUP_SYS_PWRON_RST reset line)." range="" rwaccess="RW">
      <bitenum value="0" id="Reserved" token="RSTTIME1_0" description="Reserved"/>
    </bitfield>
  </register>
  <register id="PRM_CLKREQCTRL" acronym="PRM_CLKREQCTRL" offset="0xC" width="32" description="This register allows controlling the CLKREQ signal towards SCRM.">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="CLKREQ_COND" width="3" begin="2" end="0" resetval="0x0" description="Control upon which condition CLKREQ signal is de-asserted." range="" rwaccess="RW">
      <bitenum value="0" id="Never" token="CLKREQ_COND_0" description="CLKREQ is never de-asserted"/>
      <bitenum value="1" id="Off" token="CLKREQ_COND_1" description="Reserved"/>
      <bitenum value="2" id="Ret" token="CLKREQ_COND_2" description="CLKREQ is de-asserted when system clock is not required by any function in the device and if all voltage domains are in RET state."/>
      <bitenum value="3" id="Sleep" token="CLKREQ_COND_3" description="CLKREQ is de-asserted when system clock is not required by any function in the device and if all voltage domains are in SLEEP or RET state."/>
      <bitenum value="4" id="On" token="CLKREQ_COND_4" description="CLKREQ is de-asserted when system clock is not required by any function in the device. This is designed for low-power use-cases using the DPLL cascading scheme (ex: MP3)"/>
      <bitenum value="5" id="Reserved_5" token="CLKREQ_COND_5_r" description="Reserved"/>
      <bitenum value="6" id="Reserved" token="CLKREQ_COND_6_r" description="Reserved"/>
      <bitenum value="7" id="Reserved" token="CLKREQ_COND_7_r" description="Reserved"/>
    </bitfield>
  </register>
  <register id="PRM_VOLTCTRL" acronym="PRM_VOLTCTRL" offset="0x10" width="32" description="This register provides voltage domain management controls.">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="VDD_MM_I2C_DISABLE" width="1" begin="14" end="14" resetval="0" description="This bit allows disabling I2C interface with powerIC for MM voltage (for debug purpose only). [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="I2C_enabled" token="VDD_MM_I2C_DISABLE_0" description="Normal mode: I2C is enabled."/>
      <bitenum value="1" id="I2C_disabled" token="VDD_MM_I2C_DISABLE_1" description="Debug mode: I2C is disabled."/>
    </bitfield>
    <bitfield id="VDD_MPU_I2C_DISABLE" width="1" begin="13" end="13" resetval="0" description="This bit allows disabling I2C interface with powerIC for MPU voltage (for debug purpose only). [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="I2C_enabled" token="VDD_MPU_I2C_DISABLE_0" description="Normal mode: I2C is enabled."/>
      <bitenum value="1" id="I2C_disabled" token="VDD_MPU_I2C_DISABLE_1" description="Debug mode: I2C is disabled."/>
    </bitfield>
    <bitfield id="VDD_CORE_I2C_DISABLE" width="1" begin="12" end="12" resetval="0" description="This bit allows disabling I2C interface with powerIC for CORE voltage (for debug purpose only). [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="I2C_enabled" token="VDD_CORE_I2C_DISABLE_0" description="Normal mode: I2C is enabled."/>
      <bitenum value="1" id="I2C_disabled" token="VDD_CORE_I2C_DISABLE_1" description="Debug mode: I2C is disabled."/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="11" end="10" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="VDD_MM_PRESENCE" width="1" begin="9" end="9" resetval="1" description="This bit control the presence of MM voltage in device. [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="Voltage_absent" token="VDD_MM_PRESENCE_0" description="MM voltage is not present as an individual voltage: MM voltage is merged with MPU voltage if VDD_MPU_PRESENCE=1. MM voltage is merged with CORE voltage if VDD_MPU_PRESENCE=0."/>
      <bitenum value="1" id="Voltage_present" token="VDD_MM_PRESENCE_1" description="MM voltage is present on the device."/>
    </bitfield>
    <bitfield id="VDD_MPU_PRESENCE" width="1" begin="8" end="8" resetval="1" description="This bit control the presence of MPU voltage in device. [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="Voltage_absent" token="VDD_MPU_PRESENCE_0" description="MPU voltage is not present as an individual voltage: MPU voltage is merged with MM voltage if VDD_MM_PRESENCE=1. MPU voltage is merged with CORE voltage if VDD_MM_PRESENCE=0."/>
      <bitenum value="1" id="Voltage_present" token="VDD_MPU_PRESENCE_1" description="MPU voltage is present on the device."/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="AUTO_CTRL_VDD_MM_L" width="2" begin="5" end="4" resetval="0x0" description="This bit field specifies the state to which the hardware can automatically transition the VDD_MM_L voltage domain." range="" rwaccess="RW">
      <bitenum value="0" id="disabled" token="AUTO_CTRL_VDD_MM_L_0" description="Voltage domain transitions are disabled."/>
      <bitenum value="1" id="auto_sleep" token="AUTO_CTRL_VDD_MM_L_1" description="Voltage domain transitions to SLEEP are enabled."/>
      <bitenum value="2" id="auto_ret" token="AUTO_CTRL_VDD_MM_L_2" description="Voltage domain transitions to RET are enabled."/>
      <bitenum value="3" id="reserved" token="AUTO_CTRL_VDD_MM_L_3_r" description="reserved"/>
    </bitfield>
    <bitfield id="AUTO_CTRL_VDD_MPU_L" width="2" begin="3" end="2" resetval="0x0" description="This bit field specifies the state to which the hardware can automatically transition the VDD_MPU_L voltage domain." range="" rwaccess="RW">
      <bitenum value="0" id="disabled" token="AUTO_CTRL_VDD_MPU_L_0" description="Voltage domain transitions are disabled."/>
      <bitenum value="1" id="auto_sleep" token="AUTO_CTRL_VDD_MPU_L_1" description="Voltage domain transitions to SLEEP are enabled."/>
      <bitenum value="2" id="auto_ret" token="AUTO_CTRL_VDD_MPU_L_2" description="Voltage domain transitions to RET are enabled."/>
      <bitenum value="3" id="reserved" token="AUTO_CTRL_VDD_MPU_L_3_r" description="reserved"/>
    </bitfield>
    <bitfield id="AUTO_CTRL_VDD_CORE_L" width="2" begin="1" end="0" resetval="0x0" description="This bit field specifies the state to which the hardware can automatically transition the VDD_CORE_L voltage domain." range="" rwaccess="RW">
      <bitenum value="0" id="disabled" token="AUTO_CTRL_VDD_CORE_L_0" description="Voltage domain transitions are disabled."/>
      <bitenum value="1" id="auto_sleep" token="AUTO_CTRL_VDD_CORE_L_1" description="Voltage domain transitions to SLEEP are enabled."/>
      <bitenum value="2" id="auto_ret" token="AUTO_CTRL_VDD_CORE_L_2" description="Voltage domain transitions to RET are enabled."/>
      <bitenum value="3" id="reserved" token="AUTO_CTRL_VDD_CORE_L_3_r" description="reserved"/>
    </bitfield>
  </register>
  <register id="PRM_PWRREQCTRL" acronym="PRM_PWRREQCTRL" offset="0x14" width="32" description="This register allows controlling the signal towards power IC.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="PWRREQ_COND" width="2" begin="1" end="0" resetval="0x0" description="Control upon which condition from MPU, MM and CORE voltage domainsPWRREQ is de-asserted." range="" rwaccess="RW">
      <bitenum value="0" id="Never" token="PWRREQ_COND_0" description="is never de-asserted"/>
      <bitenum value="1" id="Sleep" token="PWRREQ_COND_1" description="is de-asserted if all voltage domain are in SLEEP or RET state. Conversely, is asserted upon any voltage domain entering or staying in ON state."/>
      <bitenum value="2" id="Ret" token="PWRREQ_COND_2" description="is de-asserted if all voltage domain are in RET state. Conversely, is asserted upon any voltage domain entering or staying in ON or SLEEP state."/>
      <bitenum value="3" id="Off" token="PWRREQ_COND_3" description="Reserved"/>
    </bitfield>
  </register>
  <register id="PRM_PSCON_COUNT" acronym="PRM_PSCON_COUNT" offset="0x18" width="32" description="This register allows controlling 2 parameters for power state controller. [warm reset insensitive]">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="PONOUT_2_PGOODIN_TIME" width="8" begin="15" end="8" resetval="0x30" description="The value NbCycles set in this field determines the duration of the PONOUT to PGOODIN transition for power domain without DPS. The duration is computed as 8 x NbCycles of system clock cycles." range="" rwaccess="RW"/>
    <bitfield id="PCHARGE_TIME" width="8" begin="7" end="0" resetval="0x17" description="Number of system clock cycles for the SRAM pre-charge duration." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_IO_COUNT" acronym="PRM_IO_COUNT" offset="0x1C" width="32" description="This register allows controlling LPDDR2 IO isolation removal setup. [warm reset insensitive]">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="ISO_2_ON_TIME" width="8" begin="7" end="0" resetval="0x3A" description="Determines the setup time of the LPDDR2 IOs going out of isolation. Counting on the system clock." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_IO_PMCTRL" acronym="PRM_IO_PMCTRL" offset="0x20" width="32" description="This register allows controlling power management features of the IOs.">
    <bitfield id="RESERVED" width="15" begin="31" end="17" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="GLOBAL_WUEN" width="1" begin="16" end="16" resetval="0" description="Global IO wakeup enable. This is a gating condition to all individual IO WUEN coming from control module. Gating is done in the Spinner logic." range="" rwaccess="RW">
      <bitenum value="0" id="disabled" token="GLOBAL_WUEN_0" description="All individual IO WUEN are gated in the Spinner logic (overriden to 0)."/>
      <bitenum value="1" id="enabled" token="GLOBAL_WUEN_1" description="All individual IO WUEN from control module are going to IOs."/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="WUCLK_STATUS" width="1" begin="9" end="9" resetval="0" description="Gives value of WUCLKOUT signal coming back from IO pad ring." range="" rwaccess="R"/>
    <bitfield id="WUCLK_CTRL" width="1" begin="8" end="8" resetval="0" description="Direct control on WUCLKIN signal to IO pad ring." range="" rwaccess="RW">
      <bitenum value="0" id="low" token="WUCLK_CTRL_0" description="WUCLKIN signal is driven to 0. IO wakeup daisy chain is functional as well as IO whose wakeup feature is enabled."/>
      <bitenum value="1" id="high" token="WUCLK_CTRL_1" description="WUCLKIN signal is driven to 1. IO wakeup daisy chain is reset and is latching current pad states and WUEN inputs."/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IO_ON_STATUS" width="1" begin="5" end="5" resetval="1" description="Gives the functional status of the IO ring." range="" rwaccess="R">
      <bitenum value="0" id="low" token="IO_ON_STATUS_0_r" description="Part or all of the IOs are not in the ON state, that is are in isolation state"/>
      <bitenum value="1" id="high" token="IO_ON_STATUS_1_r" description="All IOs are in the ON state"/>
    </bitfield>
    <bitfield id="ISOOVR_EXTEND" width="1" begin="4" end="4" resetval="0" description="Control non-EMIF IO isolation extension upon a device wakeup from low-power mode." range="" rwaccess="RW">
      <bitenum value="0" id="nooverride" token="ISOOVR_EXTEND_0" description="Non-EMIF IO isolation is not extended. EMIF_ON IO transition happens as soon as automatic restore is completed"/>
      <bitenum value="1" id="override" token="ISOOVR_EXTEND_1" description="Non-EMIF IO isolation is extended. EMIF_ON IO transition is stalled"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="3" end="2" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="ISOCLK_STATUS" width="1" begin="1" end="1" resetval="0" description="Gives value of ISOCLKOUT signal coming back from IO pad ring." range="" rwaccess="R"/>
    <bitfield id="ISOCLK_OVERRIDE" width="1" begin="0" end="0" resetval="0" description="Override control on ISOCLKIN signal to IO pad ring. Override should be used at boot time only when it is needed to change the mode of an IO from 1.8V default mode to 1.2V mode. When not overriden, this signal is controlled by hardware only." range="" rwaccess="RW">
      <bitenum value="0" id="nooverride" token="ISOCLK_OVERRIDE_0" description="ISOCLKIN signal is not overriden."/>
      <bitenum value="1" id="override" token="ISOCLK_OVERRIDE_1" description="ISOCLKIN signal is overriden to active value ('1')."/>
    </bitfield>
  </register>
  <register id="PRM_VOLTSETUP_WARMRESET" acronym="PRM_VOLTSETUP_WARMRESET" offset="0x24" width="32" description="This register provides bit-fields for specifying voltage stabilization duration upon a global warm reset. [warm reset insensitive]">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="STABLE_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for stabilization duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x32" token="STABLE_PRESCAL_0" description="Ramp-up counter is incremented every 32 system clock cycles"/>
      <bitenum value="1" id="x256" token="STABLE_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x2048" token="STABLE_PRESCAL_2" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
      <bitenum value="3" id="x16384" token="STABLE_PRESCAL_3" description="Ramp-up counter is incremented every 16384 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="STABLE_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the stabilization duration of all VDD_xxx_L regulators upon a global warm reset assertion. The duration is computed according to Stable_Prescal." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_CORE_OFF" acronym="PRM_VOLTSETUP_CORE_OFF" offset="0x28" width="32" description="This register provides bit-fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_CORE_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_CORE_L regulators. The duration is computed according to Ramp_Up_Prescal. At cold reset, PRCM assumes that VDD_CORE_L will be at a valid ON voltage before SYS_NRESPWRON is de-asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_MPU_OFF" acronym="PRM_VOLTSETUP_MPU_OFF" offset="0x2C" width="32" description="This register provides bit-fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_MPU_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_MPU_L regulators. The duration is computed according to Ramp_Up_Prescal. At cold reset, PRCM assumes that VDD_MPU_L will be at a valid ON voltage before SYS_NRESPWRON is de-asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_MM_OFF" acronym="PRM_VOLTSETUP_MM_OFF" offset="0x30" width="32" description="This register provides bit-fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_MM_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_MM_L regulators. The duration is computed according to Ramp_Up_Prescal. At cold reset, PRCM assumes that VDD_MM_L will be at a valid ON voltage before SYS_NRESPWRON is de-asserted." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_CORE_RET_SLEEP" acronym="PRM_VOLTSETUP_CORE_RET_SLEEP" offset="0x34" width="32" description="This register provides bit-fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. These values are used for VDD_CORE_L domain transitions between ON and RET or SLEEP state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_CORE_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_CORE_L regulators. The duration is computed according to Ramp_Up_Prescal." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_MPU_RET_SLEEP" acronym="PRM_VOLTSETUP_MPU_RET_SLEEP" offset="0x38" width="32" description="This register provides bit-fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. These values are used for VDD_MPU_L domain transitions between ON and RET or SLEEP state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_MPU_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_MPU_L regulators. The duration is computed according to Ramp_Up_Prescal." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTSETUP_MM_RET_SLEEP" acronym="PRM_VOLTSETUP_MM_RET_SLEEP" offset="0x3C" width="32" description="This register provides bit-fields for specifying voltage ramp-up and ramp-down times for PRM managed external regulators. These values are used for VDD_MM_L domain transitions between ON and RET or SLEEP state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_PRESCAL" width="2" begin="25" end="24" resetval="0x0" description="Determines prescaler for ramp-down duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_DOWN_PRESCAL_0" description="Ramp-down counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_DOWN_PRESCAL_1" description="Ramp-down counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_DOWN_PRESCAL_2" description="Ramp-down counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_DOWN_PRESCAL_3" description="Ramp-down counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_DOWN_COUNT" width="6" begin="21" end="16" resetval="0x00" description="Determines the ramp-down duration of VDD_MM_L regulators. The duration is computed according to Ramp_Down_Prescal." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_PRESCAL" width="2" begin="9" end="8" resetval="0x0" description="Determines prescaler for ramp-up duration counting." range="" rwaccess="RW">
      <bitenum value="0" id="x64" token="RAMP_UP_PRESCAL_0" description="Ramp-up counter is incremented every 64 system clock cycles"/>
      <bitenum value="1" id="x256" token="RAMP_UP_PRESCAL_1" description="Ramp-up counter is incremented every 256 system clock cycles"/>
      <bitenum value="2" id="x512" token="RAMP_UP_PRESCAL_2" description="Ramp-up counter is incremented every 512 system clock cycles"/>
      <bitenum value="3" id="x2048" token="RAMP_UP_PRESCAL_3" description="Ramp-up counter is incremented every 2048 system clock cycles"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RAMP_UP_COUNT" width="6" begin="5" end="0" resetval="0x00" description="Determines the ramp-up duration of VDD_MM_L regulators. The duration is computed according to Ramp_Up_Prescal." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_CORE_CONFIG" acronym="PRM_VP_CORE_CONFIG" offset="0x40" width="32" description="This register allows the configuration of the Voltage Processor dedicated to CORE Voltage Domain (VDD_CORE_L).">
    <bitfield id="ERROROFFSET" width="8" begin="31" end="24" resetval="0x00" description="Offset value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="ERRORGAIN" width="8" begin="23" end="16" resetval="0x00" description="Gain value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="INITVOLTAGE" width="8" begin="15" end="8" resetval="0x00" description="Set the initial voltage level of the SMPS. It must be reconfigured before enable the SmartReflex around a new OPP." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="TIMEOUTEN" width="1" begin="3" end="3" resetval="0" description="Enable or disable the timeout capability of the Voltage Controller State Machine." range="" rwaccess="RW">
      <bitenum value="0" id="DIS" token="TIMEOUTEN_0" description="Timeout is disabled. Loop will wait indefinitely."/>
      <bitenum value="1" id="EN" token="TIMEOUTEN_1" description="Timeout will occur when TIMEOUT cycles have elapsed."/>
    </bitfield>
    <bitfield id="INITVDD" width="1" begin="2" end="2" resetval="0" description="Initializes the voltage in the Voltage Processor." range="" rwaccess="RW">
      <bitenum value="0" id="NEGEDGE" token="INITVDD_0" description="Reset the initialization bit."/>
      <bitenum value="1" id="POSEDGE" token="INITVDD_1" description="The positive edge of InitVdd triggers a write of the value in the InitVoltage into the Voltage Processor."/>
    </bitfield>
    <bitfield id="FORCEUPDATE" width="1" begin="1" end="1" resetval="0" description="Forces an update of the SMPS." range="" rwaccess="RW">
      <bitenum value="0" id="NEGEDGE" token="FORCEUPDATE_0" description="Reset the force bit."/>
      <bitenum value="1" id="POSEDGE" token="FORCEUPDATE_1" description="The positive edge of ForceUpdate triggers an update of the voltage to the SMPS."/>
    </bitfield>
    <bitfield id="VPENABLE" width="1" begin="0" end="0" resetval="0" description="Enables or disables the Voltage Processor updates on SMARTREFLEX_SInterruptz." range="" rwaccess="RW">
      <bitenum value="0" id="DIS" token="VPENABLE_0" description="Disables the Voltage Processor."/>
      <bitenum value="1" id="EN" token="VPENABLE_1" description="Enables the Voltage Processor."/>
    </bitfield>
  </register>
  <register id="PRM_VP_CORE_STATUS" acronym="PRM_VP_CORE_STATUS" offset="0x44" width="32" description="This register reflects the idle state of the Voltage Processor dedicated to the CORE Voltage Domain (VDD_CORE_L. This register is read only and automatically updated.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="VPINIDLE" width="1" begin="0" end="0" resetval="1" description="CORE Voltage Processor idle status." range="" rwaccess="R">
      <bitenum value="0" id="Normal" token="VPINIDLE_0_r" description="The Voltage Processor for CORE is processing. Warm reset sensitive"/>
      <bitenum value="1" id="IsIdle" token="VPINIDLE_1_r" description="The Voltage Processor for CORE is in idle state."/>
    </bitfield>
  </register>
  <register id="PRM_VP_CORE_VLIMITTO" acronym="PRM_VP_CORE_VLIMITTO" offset="0x48" width="32" description="This register allows the configuration of the voltage limits and timeout values of the Voltage Processor dedicated to the CORE Voltage Domain (VDD_CORE_L).">
    <bitfield id="VDDMAX" width="8" begin="31" end="24" resetval="0x00" description="Defines the maximum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="VDDMIN" width="8" begin="23" end="16" resetval="0x00" description="Defines the minimum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="TIMEOUT" width="16" begin="15" end="0" resetval="0x0000" description="Defines Voltage Controller maximum wait time for responses, measured in sysclk cycles." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_CORE_VOLTAGE" acronym="PRM_VP_CORE_VOLTAGE" offset="0x4C" width="32" description="This register indicates the current value of the SMPS voltage for the Voltage Processor dedicated to the CORE Voltage Domain (VDD_CORE_L).">
    <bitfield id="FORCEUPDATEWAIT" width="24" begin="31" end="8" resetval="0x000111" description="The time voltage processor needs to wait for SMPS to be settled after receiving SMPS acknowledge. This wait only be used during force_update operation." range="" rwaccess="RW"/>
    <bitfield id="VPVOLTAGE" width="8" begin="7" end="0" resetval="0x00" description="Indicates the current SMPS programmed voltage." range="" rwaccess="R"/>
  </register>
  <register id="PRM_VP_CORE_VSTEPMAX" acronym="PRM_VP_CORE_VSTEPMAX" offset="0x50" width="32" description="This register allows the programming of the maximum voltage step and waiting time of the Voltage Processor dedicated to CORE Voltage Domain (VDD_CORE_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPSWAITTIMEMAX" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for positive voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMAX" width="8" begin="7" end="0" resetval="0x00" description="Maximum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_CORE_VSTEPMIN" acronym="PRM_VP_CORE_VSTEPMIN" offset="0x54" width="32" description="This register allows the programming of the minimum voltage step and waiting time of the Voltage Processor dedicated to the CORE Voltage Domain (VDD_CORE_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPSWAITTIMEMIN" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for negative voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMIN" width="8" begin="7" end="0" resetval="0x00" description="Minimum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_MPU_CONFIG" acronym="PRM_VP_MPU_CONFIG" offset="0x58" width="32" description="This register allows the configuration of the Voltage Processor dedicated to MPU Voltage Domain (VDD_MPU_L).">
    <bitfield id="ERROROFFSET" width="8" begin="31" end="24" resetval="0x00" description="Offset value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="ERRORGAIN" width="8" begin="23" end="16" resetval="0x00" description="Gain value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="INITVOLTAGE" width="8" begin="15" end="8" resetval="0x00" description="Set the initial voltage level of the SMPS. It must be reconfigured before enable the SmartReflex around a new OPP." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="TIMEOUTEN" width="1" begin="3" end="3" resetval="0" description="Enable or disable the timeout capability of the Voltage Controller State Machine." range="" rwaccess="RW">
      <bitenum value="0" id="DIS" token="TIMEOUTEN_0" description="Timeout is disabled. Loop will wait indefinitely."/>
      <bitenum value="1" id="EN" token="TIMEOUTEN_1" description="Timeout will occur when TIMEOUT cycles have elapsed."/>
    </bitfield>
    <bitfield id="INITVDD" width="1" begin="2" end="2" resetval="0" description="Initializes the voltage in the Voltage Processor." range="" rwaccess="RW">
      <bitenum value="0" id="NEGEDGE" token="INITVDD_0" description="Reset the initialization bit."/>
      <bitenum value="1" id="POSEDGE" token="INITVDD_1" description="The positive edge of InitVdd triggers a write of the value in the InitVoltage into the Voltage Processor."/>
    </bitfield>
    <bitfield id="FORCEUPDATE" width="1" begin="1" end="1" resetval="0" description="Forces an update of the SMPS." range="" rwaccess="RW">
      <bitenum value="0" id="NEGEDGE" token="FORCEUPDATE_0" description="Reset the force bit."/>
      <bitenum value="1" id="POSEDGE" token="FORCEUPDATE_1" description="The positive edge of ForceUpdate triggers an update of the voltage to the SMPS."/>
    </bitfield>
    <bitfield id="VPENABLE" width="1" begin="0" end="0" resetval="0" description="Enables or disables the Voltage Processor updates on SMARTREFLEX_SInterruptz." range="" rwaccess="RW">
      <bitenum value="0" id="DIS" token="VPENABLE_0" description="Disables the Voltage Processor."/>
      <bitenum value="1" id="EN" token="VPENABLE_1" description="Enables the Voltage Processor."/>
    </bitfield>
  </register>
  <register id="PRM_VP_MPU_STATUS" acronym="PRM_VP_MPU_STATUS" offset="0x5C" width="32" description="This register reflects the idle state of the Voltage Processor dedicated to the MPU Voltage Domain (VDD_MPU_L. This register is read only and automatically updated.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="VPINIDLE" width="1" begin="0" end="0" resetval="1" description="Voltage Processor 1 idle status." range="" rwaccess="R">
      <bitenum value="0" id="Normal" token="VPINIDLE_0_r" description="The Voltage Processor 1 is processing."/>
      <bitenum value="1" id="IsIdle" token="VPINIDLE_1_r" description="The Voltage Processor 1 is in idle state."/>
    </bitfield>
  </register>
  <register id="PRM_VP_MPU_VLIMITTO" acronym="PRM_VP_MPU_VLIMITTO" offset="0x60" width="32" description="This register allows the configuration of the voltage limits and timeout values of the Voltage Processor dedicated to the MPU Voltage Domain (VDD_MPU_L).">
    <bitfield id="VDDMAX" width="8" begin="31" end="24" resetval="0x00" description="Defines the maximum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="VDDMIN" width="8" begin="23" end="16" resetval="0x00" description="Defines the minimum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="TIMEOUT" width="16" begin="15" end="0" resetval="0x0000" description="Defines Voltage Controller maximum wait time for responses, measured in sysclk cycles." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_MPU_VOLTAGE" acronym="PRM_VP_MPU_VOLTAGE" offset="0x64" width="32" description="This register indicates the current value of the SMPS voltage for the Voltage Processor dedicated to the MPU Voltage Domain (VDD_MPU_L).">
    <bitfield id="FORCEUPDATEWAIT" width="24" begin="31" end="8" resetval="0x000111" description="The time voltage processor needs to wait for SMPS to be settled after receiving SMPS acknowledge. This wait only be used during force_update operation." range="" rwaccess="RW"/>
    <bitfield id="VPVOLTAGE" width="8" begin="7" end="0" resetval="0x00" description="Indicates the current SMPS programmed voltage." range="" rwaccess="R"/>
  </register>
  <register id="PRM_VP_MPU_VSTEPMAX" acronym="PRM_VP_MPU_VSTEPMAX" offset="0x68" width="32" description="This register allows the programming of the maximum voltage step and waiting time of the Voltage Processor dedicated to MPU Voltage Domain (VDD_MPU_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPSWAITTIMEMAX" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for positive voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMAX" width="8" begin="7" end="0" resetval="0x00" description="Maximum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_MPU_VSTEPMIN" acronym="PRM_VP_MPU_VSTEPMIN" offset="0x6C" width="32" description="This register allows the programming of the minimum voltage step and waiting time of the Voltage Processor dedicated to the MPU Voltage Domain (VDD_MPU_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPSWAITTIMEMIN" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for negative voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMIN" width="8" begin="7" end="0" resetval="0x00" description="Minimum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_MM_CONFIG" acronym="PRM_VP_MM_CONFIG" offset="0x70" width="32" description="This register allows the configuration of the Voltage Processor dedicated to MM Voltage Domain (VDD_MM_L).">
    <bitfield id="ERROROFFSET" width="8" begin="31" end="24" resetval="0x00" description="Offset value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="ERRORGAIN" width="8" begin="23" end="16" resetval="0x00" description="Gain value in the Error to Voltage converter (two's complement number)." range="" rwaccess="RW"/>
    <bitfield id="INITVOLTAGE" width="8" begin="15" end="8" resetval="0x00" description="Set the initial voltage level of the SMPS. It must be reconfigured before enable the SmartReflex around a new OPP." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="TIMEOUTEN" width="1" begin="3" end="3" resetval="0" description="Enable or disable the timeout capability of the Voltage Controller State Machine." range="" rwaccess="RW">
      <bitenum value="0" id="DIS" token="TIMEOUTEN_0" description="Timeout is disabled. Loop will wait indefinitely."/>
      <bitenum value="1" id="EN" token="TIMEOUTEN_1" description="Timeout will occur when TIMEOUT cycles have elapsed."/>
    </bitfield>
    <bitfield id="INITVDD" width="1" begin="2" end="2" resetval="0" description="Initializes the voltage in the Voltage Processor." range="" rwaccess="RW">
      <bitenum value="0" id="NEGEDGE" token="INITVDD_0" description="Reset the initialization bit."/>
      <bitenum value="1" id="POSEDGE" token="INITVDD_1" description="The positive edge of InitVdd triggers a write of the value in the InitVoltage into the Voltage Processor."/>
    </bitfield>
    <bitfield id="FORCEUPDATE" width="1" begin="1" end="1" resetval="0" description="Forces an update of the SMPS." range="" rwaccess="RW">
      <bitenum value="0" id="NEGEDGE" token="FORCEUPDATE_0" description="Reset the force bit."/>
      <bitenum value="1" id="POSEDGE" token="FORCEUPDATE_1" description="The positive edge of ForceUpdate triggers an update of the voltage to the SMPS."/>
    </bitfield>
    <bitfield id="VPENABLE" width="1" begin="0" end="0" resetval="0" description="Enables or disables the Voltage Processor updates on SMARTREFLEX_SInterrupt." range="" rwaccess="RW">
      <bitenum value="0" id="DIS" token="VPENABLE_0" description="Disables the Voltage Processor."/>
      <bitenum value="1" id="EN" token="VPENABLE_1" description="Enables the Voltage Processor."/>
    </bitfield>
  </register>
  <register id="PRM_VP_MM_STATUS" acronym="PRM_VP_MM_STATUS" offset="0x74" width="32" description="This register reflects the idle state of the Voltage Processor dedicated to the MM Voltage Domain (VDD_MM_L). This register is read only and automatically updated.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="VPINIDLE" width="1" begin="0" end="0" resetval="1" description="Voltage Processor 1 idle status." range="" rwaccess="R">
      <bitenum value="0" id="Normal" token="VPINIDLE_0_r" description="The Voltage Processor 1 is processing."/>
      <bitenum value="1" id="IsIdle" token="VPINIDLE_1_r" description="The Voltage Processor 1 is in idle state."/>
    </bitfield>
  </register>
  <register id="PRM_VP_MM_VLIMITTO" acronym="PRM_VP_MM_VLIMITTO" offset="0x78" width="32" description="This register allows the configuration of the voltage limits and timeout values of the Voltage Processor dedicated to the MM Voltage Domain (VDD_MM_L).">
    <bitfield id="VDDMAX" width="8" begin="31" end="24" resetval="0x00" description="Defines the maximum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="VDDMIN" width="8" begin="23" end="16" resetval="0x00" description="Defines the minimum voltage supply level." range="" rwaccess="RW"/>
    <bitfield id="TIMEOUT" width="16" begin="15" end="0" resetval="0x0000" description="Defines Voltage Controller maximum wait time for responses, measured in sysclk cycles." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_MM_VOLTAGE" acronym="PRM_VP_MM_VOLTAGE" offset="0x7C" width="32" description="This register indicates the current value of the SMPS voltage for the Voltage Processor dedicated to the MM Voltage Domain (VDD_MM_L).">
    <bitfield id="FORCEUPDATEWAIT" width="24" begin="31" end="8" resetval="0x000111" description="The time voltage processor needs to wait for SMPS to be settled after receiving SMPS acknowledge. This wait only be used during force_update operation." range="" rwaccess="RW"/>
    <bitfield id="VPVOLTAGE" width="8" begin="7" end="0" resetval="0x00" description="Indicates the current SMPS programmed voltage." range="" rwaccess="R"/>
  </register>
  <register id="PRM_VP_MM_VSTEPMAX" acronym="PRM_VP_MM_VSTEPMAX" offset="0x80" width="32" description="This register allows the programming of the maximum voltage step and waiting time of the Voltage Processor dedicated to MM Voltage Domain (VDD_MM_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPSWAITTIMEMAX" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for positive voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMAX" width="8" begin="7" end="0" resetval="0x00" description="Maximum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VP_MM_VSTEPMIN" acronym="PRM_VP_MM_VSTEPMIN" offset="0x84" width="32" description="This register allows the programming of the minimum voltage step and waiting time of the Voltage Processor dedicated to the MM Voltage Domain (VDD_MM_L).">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0x00" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SMPSWAITTIMEMIN" width="16" begin="23" end="8" resetval="0x0000" description="Slew rate for negative voltage step (in number of cycles per step)." range="" rwaccess="RW"/>
    <bitfield id="VSTEPMIN" width="8" begin="7" end="0" resetval="0x00" description="Minimum voltage step" range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_SMPS_CORE_CONFIG" acronym="PRM_VC_SMPS_CORE_CONFIG" offset="0x88" width="32" description="This register allows the setting of the I2C slave address of the Power IC device, the setting of the voltage configuration register address for the VD_CORE and the Command (ON/ON-Low-Power/Retention) configuration register address values for VD_CORE (if used SMPS chips have different command configuration register than voltage configuration register). [warm reset insensitive]">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CMD_VDD_CORE_L" width="1" begin="28" end="28" resetval="0x1" description="Command values (ON/ON-Low-Power/Retention voltage values) set selection for VDD_CORE_L channel 0x0: VDD_CORE_L channel use VC_VAL_CMD_VDD_MPU_L set for command values 0x1: VDD_CORE_L channel use VC_VAL_CMD_VDD_CORE_L set for command values" range="" rwaccess="RW"/>
    <bitfield id="RACEN_VDD_CORE_L" width="1" begin="27" end="27" resetval="0x0" description="Enable bit for usage of RAC_VDD_CORE_L 0x0: VDD_CORE_L channel use VOLRA values for register address of VFSM-s commands. VFSM-s commands goes also to voltage configuration register 0x1: VDD_CORE_L channel use CMDRA values for register address of VFSM-s commands. VFSM-s commands goes to different command configuration register" range="" rwaccess="RW"/>
    <bitfield id="RAC_VDD_CORE_L" width="1" begin="26" end="26" resetval="0x1" description="Command (ON/ON-Low-Power/Retention) configuration register address pointer for VDD_CORE_L channel 0x0: Select CMDRA_VDD_MPU_L for VDD_CORE_L channel 0x1: Select CMDRA_VDD_CORE_L for VDD_CORE_L channel" range="" rwaccess="RW"/>
    <bitfield id="RAV_VDD_CORE_L" width="1" begin="25" end="25" resetval="0x1" description="Voltage configuration register address pointer for VDD_CORE_L channel 0x0: Select VOLRA_VDD_MPU_L for VDD_CORE_L channel 0x1: Select VOLRA_VDD_CORE_L for VDD_CORE_L channel" range="" rwaccess="RW"/>
    <bitfield id="SEL_SA_VDD_CORE_L" width="1" begin="24" end="24" resetval="0x0" description="Slave address pointer for VDD_CORE_L channel 0x0: Select SA_VDD_MPU_L for VDD_CORE_L channel 0x1: Select SA_VDD_CORE_L for VDD_CORE_L channel" range="" rwaccess="RW"/>
    <bitfield id="CMDRA_VDD_CORE_L" width="8" begin="23" end="16" resetval="0x00" description="Command (ON/ON-Low-Power /Retention) configuration register address value for VDD_CORE_L channel.(if VDD_CORE_L source has different command configuration register than voltage VDD_MPU_L)" range="" rwaccess="RW"/>
    <bitfield id="VOLRA_VDD_CORE_L" width="8" begin="15" end="8" resetval="0x00" description="Set the voltage configuration register address value for the VDD_CORE_L channel (if VDD_CORE_L source is placed in same chip as VDD_MPU_L source and have different voltage configuration register)" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SA_VDD_CORE_L" width="7" begin="6" end="0" resetval="0x00" description="Set the I2C slave address value for the first Power IC device." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_SMPS_MM_CONFIG" acronym="PRM_VC_SMPS_MM_CONFIG" offset="0x8C" width="32" description="This register allows the setting of the I2C slave address of the Power IC device, the setting of the voltage configuration register address for the MM VDD and the Command (ON/ON-Low-Power/Retention) configuration register address values for MM VDD (if used SMPS chips have different command configuration register than voltage configuration register) [warm reset insensitive]">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CMD_VDD_MM_L" width="1" begin="28" end="28" resetval="0x1" description="Command values (ON/ON-Low-Power/Retention voltage values) set selection for VDD_MM_L channel 0x0: VDD_MM_L channel use VC_VAL_CMD_VDD_MPU_L set for command values 0x1: VDD_MM_L channel use VC_VAL_CMD_VDD_MM_L set for command values" range="" rwaccess="RW"/>
    <bitfield id="RACEN_VDD_MM_L" width="1" begin="27" end="27" resetval="0x0" description="Enable bit for usage of RAC_VDD_MM_L 0x0: VDD_MM_L channel uses VOLRA values for register address of VFSM-s commands. VFSM-s commands goes also to voltage configuration register 0x1: VDD_MM_L channel uses CMDRA values for register address of VFSM-s commands. VFSM-s commands goes to different command configuration register" range="" rwaccess="RW"/>
    <bitfield id="RAC_VDD_MM_L" width="1" begin="26" end="26" resetval="0x1" description="Command (ON/ON-Low-Power/Retention) configuration register address pointer for VDD_MM_L channel 0x0: Select CMDRA_VDD_MPU_L for VDD_MM_L channel 0x1: Select CMDRA_VDD_MM_L for VDD_MM_L channel" range="" rwaccess="RW"/>
    <bitfield id="RAV_VDD_MM_L" width="1" begin="25" end="25" resetval="0x1" description="Voltage configuration register address pointer for VDD_MM_L channel. 0x0: Select VOLRA_VDD_MPU_L for VDD_MM_L channel 0x1: Select VOLRA_VDD_MM_L for VDD_MM_L channel" range="" rwaccess="RW"/>
    <bitfield id="SEL_SA_VDD_MM_L" width="1" begin="24" end="24" resetval="0x0" description="Slave address pointer for VDD_MM_L channel 0x0: Select SA_VDD_MPU_L for VDD_MM_L channel 0x1: Select SA_VDD_MM_L for VDD_MM_L channel" range="" rwaccess="RW"/>
    <bitfield id="CMDRA_VDD_MM_L" width="8" begin="23" end="16" resetval="0x00" description="Command (ON/ON-Low-Power /Retention) configuration register address value for VDD_MM_L channel (if VDD_MM_L source has different command configuration register than voltage VDD_MPU_L)" range="" rwaccess="RW"/>
    <bitfield id="VOLRA_VDD_MM_L" width="8" begin="15" end="8" resetval="0x00" description="Voltage configuration register address value for VDD_MM_L channel (if VDD_MM_L source is placed in same chip as VDD_MPU_L source and have different voltage configuration register)" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SA_VDD_MM_L" width="7" begin="6" end="0" resetval="0x00" description="Set the I2C slave address value for the second (if any) Power IC device." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_SMPS_MPU_CONFIG" acronym="PRM_VC_SMPS_MPU_CONFIG" offset="0x90" width="32" description="This register allows the setting of the I2C slave address of the Power IC device, the setting of the voltage configuration register address for the MPU VDD and the Command (ON/ON-Low-Power/Retention) configuration register address values for MPU VDD (if used SMPS chips have different command configuration register than voltage configuration register). [warm reset insensitive]">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="CMD_VDD_MPU_L" width="1" begin="28" end="28" resetval="0x0" description="Command values (ON/ON-Low-Power/Retention voltage values) set selection for VDD_MPU_L channel (This bit has no influence on VDD_MPU_L channel)" range="" rwaccess="RW"/>
    <bitfield id="RACEN_VDD_MPU_L" width="1" begin="27" end="27" resetval="0x0" description="Enable bit for usage of RAC_VDD_MPU_L 0x0: VDD_MPU_L channel uses VOLRA values for register address of VFSM-s commands. VFSM-s commands goes also to voltage configuration register 0x1: VDD_MPU_L channel uses CMDRA values for register address of VFSM-s commands. VFSM-s commands goes to different command configuration register" range="" rwaccess="RW"/>
    <bitfield id="RAC_VDD_MPU_L" width="1" begin="26" end="26" resetval="0x0" description="Command (ON/ON-Low-Power/Retention) configuration register address pointer for VDD_MPU_L channel. (This bit has no influence on first VDD_MPU_L channel)" range="" rwaccess="RW"/>
    <bitfield id="RAV_VDD_MPU_L" width="1" begin="25" end="25" resetval="0x0" description="Voltage configuration register address pointer for VDD_MPU_L channel. (This bit has no influence on first VDD_MPU_L channel)" range="" rwaccess="RW"/>
    <bitfield id="SEL_SA_VDD_MPU_L" width="1" begin="24" end="24" resetval="0x0" description="Slave address pointer for VDD_MPU_L channel. (This bit has no influence on first VDD_MPU_L channel)" range="" rwaccess="RW"/>
    <bitfield id="CMDRA_VDD_MPU_L" width="8" begin="23" end="16" resetval="0x00" description="Command (ON/ON-Low-Power /Retention) configuration register address value for VDD_MPU_L channel." range="" rwaccess="RW"/>
    <bitfield id="VOLRA_VDD_MPU_L" width="8" begin="15" end="8" resetval="0x00" description="Voltage configuration register address value for VDD_MPU_L channel." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0" description="Write 0's for future compatibility. Read is undefined." range="" rwaccess="R"/>
    <bitfield id="SA_VDD_MPU_L" width="7" begin="6" end="0" resetval="0x00" description="Set the I2C slave address value for the third (if any) Power IC device." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_VAL_CMD_VDD_CORE_L" acronym="PRM_VC_VAL_CMD_VDD_CORE_L" offset="0x94" width="32" description="This register allows the setting of the ON/ON-Low-Power/Retention command values for VDD_CORE_L channel. [warm reset insensitive]">
    <bitfield id="ON" width="8" begin="31" end="24" resetval="0x00" description="Set the ON command value." range="" rwaccess="RW"/>
    <bitfield id="ONLP" width="8" begin="23" end="16" resetval="0x00" description="Set the ON-Low-Power command value." range="" rwaccess="RW"/>
    <bitfield id="RET" width="8" begin="15" end="8" resetval="0x00" description="Set the RET command value." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="7" end="0" resetval="0x00" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="PRM_VC_VAL_CMD_VDD_MM_L" acronym="PRM_VC_VAL_CMD_VDD_MM_L" offset="0x98" width="32" description="This register allows the setting of the ON/ON-Low-Power/Retention command values for VDD_MM_L channel. [warm reset insensitive]">
    <bitfield id="ON" width="8" begin="31" end="24" resetval="0x00" description="Set the ON command value." range="" rwaccess="RW"/>
    <bitfield id="ONLP" width="8" begin="23" end="16" resetval="0x00" description="Set the ON-Low-Power command value." range="" rwaccess="RW"/>
    <bitfield id="RET" width="8" begin="15" end="8" resetval="0x00" description="Set the RET command value." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="7" end="0" resetval="0x00" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="PRM_VC_VAL_CMD_VDD_MPU_L" acronym="PRM_VC_VAL_CMD_VDD_MPU_L" offset="0x9C" width="32" description="This register allows the setting of the ON/ON-Low-Power/Retention command values for VDD_MPU_L channel. [warm reset insensitive]">
    <bitfield id="ON" width="8" begin="31" end="24" resetval="0x00" description="Set the ON command value." range="" rwaccess="RW"/>
    <bitfield id="ONLP" width="8" begin="23" end="16" resetval="0x00" description="Set the ON-Low-Power command value." range="" rwaccess="RW"/>
    <bitfield id="RET" width="8" begin="15" end="8" resetval="0x00" description="Set the RET command value." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="7" end="0" resetval="0x00" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="PRM_VC_VAL_BYPASS" acronym="PRM_VC_VAL_BYPASS" offset="0xA0" width="32" description="Bypass data values register used for bypass command channel to send other configuration information (other then voltage configuration parameters) for SMPS chips which have no other configuration interface then this I2C interface and flag to indicate OPP change to EMIF to allow read/write leveling. [warm reset insensitive]">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="OPP_CHANGE_EMIF_LVL" width="1" begin="25" end="25" resetval="0" description="This bit controls read-write leveling of EMIF memories (DDR3). It must be set in case OPP voltage change is done through Voltage Controller whithout passing through Voltage processor." range="" rwaccess="RW">
      <bitenum value="0" id="EN_LVL" token="OPP_CHANGE_EMIF_LVL_0" description="Enable leveling"/>
      <bitenum value="1" id="DIS_LVL" token="OPP_CHANGE_EMIF_LVL_1" description="Disable leveling"/>
    </bitfield>
    <bitfield id="VALID" width="1" begin="24" end="24" resetval="0" description="This bit validates the bypass command. It is automatically cleared by HW either after getting the acknowledge back from the SMPS or if an error occured." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="Ack" token="VALID_0_r" description="The last command send has been acknowledged"/>
      <bitenum value="1" id="Pending" token="VALID_1" description="Pending command is being process"/>
    </bitfield>
    <bitfield id="DATA" width="8" begin="23" end="16" resetval="0x00" description="Data to send to the Power IC device." range="" rwaccess="RW"/>
    <bitfield id="REGADDR" width="8" begin="15" end="8" resetval="0x00" description="Set the address of Power IC device register to configure." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="SLAVEADDR" width="7" begin="6" end="0" resetval="0x00" description="Set the I2C slave address value." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_CORE_ERRST" acronym="PRM_VC_CORE_ERRST" offset="0xA4" width="32" description="This debug register logs CORE related error status coming from Voltage Controller. Must be cleared by software.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="VFSM_TIMEOUT_ERR_CORE" width="1" begin="5" end="5" resetval="0x0" description="CORE voltage FSM command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost. 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="VFSM_RA_ERR_CORE" width="1" begin="4" end="4" resetval="0" description="Wrong register address error for CORE voltage FSM 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="VFSM_SA_ERR_CORE" width="1" begin="3" end="3" resetval="0" description="Wrong slave address error for CORE voltage FSM" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="Ok" token="VFSM_SA_ERR_CORE_0" description="No error"/>
      <bitenum value="1" id="Error" token="VFSM_SA_ERR_CORE_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_TIMEOUT_ERR_CORE" width="1" begin="2" end="2" resetval="0" description="CORE voltage processor command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost. 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="SMPS_RA_ERR_CORE" width="1" begin="1" end="1" resetval="0" description="Wrong register address error for CORE voltage processor. 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="SMPS_SA_ERR_CORE" width="1" begin="0" end="0" resetval="0" description="Wrong slave address error for CORE voltage processor 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
  </register>
  <register id="PRM_VC_MM_ERRST" acronym="PRM_VC_MM_ERRST" offset="0xA8" width="32" description="This debug register logs MM related error status coming from Voltage Controller. Must be cleared by software.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="VFSM_TIMEOUT_ERR_MM" width="1" begin="5" end="5" resetval="0x0" description="MM voltage FSM command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost. 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="VFSM_RA_ERR_MM" width="1" begin="4" end="4" resetval="0" description="Wrong register address error for MM voltage FSM 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="VFSM_SA_ERR_MM" width="1" begin="3" end="3" resetval="0" description="Wrong slave address error for MM voltage FSM" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="Ok" token="VFSM_SA_ERR_MM_0" description="No error"/>
      <bitenum value="1" id="Error" token="VFSM_SA_ERR_MM_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_TIMEOUT_ERR_MM" width="1" begin="2" end="2" resetval="0" description="MM voltage processor command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost. 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="SMPS_RA_ERR_MM" width="1" begin="1" end="1" resetval="0" description="Wrong register address error for MM voltage processor. 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="SMPS_SA_ERR_MM" width="1" begin="0" end="0" resetval="0" description="Wrong slave address error for MM voltage processor 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
  </register>
  <register id="PRM_VC_MPU_ERRST" acronym="PRM_VC_MPU_ERRST" offset="0xAC" width="32" description="This debug register logs MPU related error status coming from Voltage Controller. Must be cleared by software.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="VFSM_TIMEOUT_ERR_MPU" width="1" begin="5" end="5" resetval="0x0" description="MPU voltage FSM command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost. 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="VFSM_RA_ERR_MPU" width="1" begin="4" end="4" resetval="0" description="Wrong register address error for MPU voltage FSM 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="VFSM_SA_ERR_MPU" width="1" begin="3" end="3" resetval="0" description="Wrong slave address error for MPU voltage FSM" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="Ok" token="VFSM_SA_ERR_MPU_0" description="No error"/>
      <bitenum value="1" id="Error" token="VFSM_SA_ERR_MPU_1" description="An error has been logged"/>
    </bitfield>
    <bitfield id="SMPS_TIMEOUT_ERR_MPU" width="1" begin="2" end="2" resetval="0" description="MPU voltage processor command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost. 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="SMPS_RA_ERR_MPU" width="1" begin="1" end="1" resetval="0" description="Wrong register address error for MPU voltage processor. 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="SMPS_SA_ERR_MPU" width="1" begin="0" end="0" resetval="0" description="Wrong slave address error for MPU voltage processor 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
  </register>
  <register id="PRM_VC_BYPASS_ERRST" acronym="PRM_VC_BYPASS_ERRST" offset="0xB0" width="32" description="This debug register logs BYPASS related error status coming from Voltage Controller. Must be cleared by software.">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="BYPS_TIMEOUT_ERR" width="1" begin="2" end="2" resetval="0" description="BYPASS command frame is finished but is not acknowledged by the slave, or (I2C multimaster) arbitration lost. 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="BYPS_RA_ERR" width="1" begin="1" end="1" resetval="0" description="Wrong register address error for BYPASS command 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
    <bitfield id="BYPS_SA_ERR" width="1" begin="0" end="0" resetval="0" description="Wrong slave address error for BYPASS command 0x0: No error 0x1: An error has been logged" range="" rwaccess="RW W1toClr"/>
  </register>
  <register id="PRM_VC_CFG_I2C_MODE" acronym="PRM_VC_CFG_I2C_MODE" offset="0xB4" width="32" description="I2C configuration register. [warm reset insensitive]">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="DFILTEREN" width="1" begin="6" end="6" resetval="0x0" description="This field enables double filter procedure for I2C input lines 0x0: I2C bus digital filter rejects all glitches smaller than 1 system clock cycle 0x1: I2C bus digital filter rejects all glitches smaller than 2 system clock cycle" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SRMODEEN" width="1" begin="4" end="4" resetval="0x1" description="Enables the I2C repeated start operation mode (effect of holding the SCL and SDA lines low, in effect blocking the I2C bus from losing arbitration between repeated start points). Use of this feature results from a trade-off between speed and power consumption of I2C interface 0x0: Disables the repeated start operation mode 0x1: Enables the repeated start operation mode" range="" rwaccess="RW"/>
    <bitfield id="HSMODEEN" width="1" begin="3" end="3" resetval="0x1" description="Enables I2C bus High Speed mode 0x0: Disables the I2C high speed mode 0x1: Enables the I2C high speed mode" range="" rwaccess="RW"/>
    <bitfield id="HSMCODE" width="3" begin="2" end="0" resetval="0" description="Master code value for I2C High Speed preamble transmission." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VC_CFG_I2C_CLK" acronym="PRM_VC_CFG_I2C_CLK" offset="0xB8" width="32" description="I2C Interface clock configuration parameters. [warm reset insensitive]">
    <bitfield id="HSSCLL" width="8" begin="31" end="24" resetval="0x00" description="Number of the system clock cycles, necessary to count the low period of the I2C clock signal, when the I2C interface runs in High-Speed mode of operation." range="" rwaccess="RW"/>
    <bitfield id="HSSCLH" width="8" begin="23" end="16" resetval="0x00" description="Number of the system clock cycles, necessary to count the high period of the I2C clock signal, when the I2C interface runs in High-Speed mode of operation." range="" rwaccess="RW"/>
    <bitfield id="SCLL" width="8" begin="15" end="8" resetval="0x00" description="Number of the system clock cycles, necessary to count the low period of the I2C clock signal, when the I2C interface runs in Fast mode of operation." range="" rwaccess="RW"/>
    <bitfield id="SCLH" width="8" begin="7" end="0" resetval="0x00" description="Number of the system clock cycles, necessary to count the high period of the I2C clock signal, when the I2C interface runs in Fast mode of operation." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_SRAM_COUNT" acronym="PRM_SRAM_COUNT" offset="0xBC" width="32" description="Common setup for SRAM LDO transition counters. Applies to all voltage domains.[warm reset insensitive]">
    <bitfield id="STARTUP_COUNT" width="8" begin="31" end="24" resetval="0x78" description="Determines the start-up duration of SRAM and ABBLDO. The duration is computed as 16 x NbCycles of system clock cycles." range="" rwaccess="RW"/>
    <bitfield id="SLPCNT_VALUE" width="8" begin="23" end="16" resetval="0x00" description="Delay between retention assertion of last SRAM bank and SRAMALLRET signal to LDO is driven high. Counting on system clock." range="" rwaccess="RW"/>
    <bitfield id="VSETUPCNT_VALUE" width="8" begin="15" end="8" resetval="0x00" description="SRAM LDO rampup time from retention to active mode. The duration is computed as 8 x NbCycles of system clock cycles." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="7" end="0" resetval="0x00" description="" range="" rwaccess="R"/>
  </register>
  <register id="PRM_SLDO_CORE_SETUP" acronym="PRM_SLDO_CORE_SETUP" offset="0xC4" width="32" description="Setup of the SRAM LDO for CORE voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="AIPOFF" width="1" begin="8" end="8" resetval="0" description="Override on AIPOFF input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="No_Override" token="AIPOFF_0" description="AIPOFF signal is not overriden"/>
      <bitenum value="1" id="Override" token="AIPOFF_1" description="AIPOFF signal is overriden to '1'. Corresponding SRAM LDO is disabled and in HZ mode."/>
    </bitfield>
    <bitfield id="ENFUNC5" width="1" begin="7" end="7" resetval="0" description="ENFUNC5 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="One_step" token="ENFUNC5_0" description="Active to retention is a one step transfer"/>
      <bitenum value="1" id="Two_step" token="ENFUNC5_1" description="Active to retention is a two steps transfer"/>
    </bitfield>
    <bitfield id="ENFUNC4" width="1" begin="6" end="6" resetval="0" description="ENFUNC4 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="Ext_clock" token="ENFUNC4_0" description="One external clock is supplied"/>
      <bitenum value="1" id="No_ext_clock" token="ENFUNC4_1" description="No external clock is supplied"/>
    </bitfield>
    <bitfield id="ENFUNC3" width="1" begin="5" end="5" resetval="0" description="ENFUNC3 input of SRAM LDO. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW">
      <bitenum value="0" id="Sub_regul_disabled" token="ENFUNC3_0" description="Sub regulation is disabled"/>
      <bitenum value="1" id="Sub_regul_enabled" token="ENFUNC3_1" description="Sub regulation is enabled"/>
    </bitfield>
    <bitfield id="ENFUNC2" width="1" begin="4" end="4" resetval="0" description="ENFUNC2 input of SRAM LDO. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="Ext_cap" token="ENFUNC2_0" description="External cap is used"/>
      <bitenum value="1" id="No_ext_cap" token="ENFUNC2_1" description="External cap is not used"/>
    </bitfield>
    <bitfield id="ENFUNC1" width="1" begin="3" end="3" resetval="0" description="ENFUNC1 input of SRAM LDO. After PowerOn reset , this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW">
      <bitenum value="0" id="Short_prot_disabled" token="ENFUNC1_0" description="Short circuit protection is disabled"/>
      <bitenum value="1" id="Short_prot_enabled" token="ENFUNC1_1" description="Short circuit protection is enabled"/>
    </bitfield>
    <bitfield id="ABBOFF_SLEEP" width="1" begin="2" end="2" resetval="1" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during deep-sleep. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="SRAMNW_SLP_VDDS" token="ABBOFF_SLEEP_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="SRAMNW_SLP_VDDAR" token="ABBOFF_SLEEP_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="ABBOFF_ACT" width="1" begin="1" end="1" resetval="1" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during active mode. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="SRAMNW_ACT_VDDS" token="ABBOFF_ACT_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="SRAMNW_ACT_VDDAR" token="ABBOFF_ACT_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="PRM_SLDO_CORE_CTRL" acronym="PRM_SLDO_CORE_CTRL" offset="0xC8" width="32" description="Control and status of the SRAM LDO for CORE voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="SRAM_IN_TRANSITION" width="1" begin="9" end="9" resetval="0" description="Status indicating SRAM LDO state machine state." range="" rwaccess="R">
      <bitenum value="0" id="IDLE" token="SRAM_IN_TRANSITION_0_r" description="SRAM LDO state machine is stable"/>
      <bitenum value="1" id="IN_TRANSITION" token="SRAM_IN_TRANSITION_1_r" description="SRAM LDO state machine is in transition state"/>
    </bitfield>
    <bitfield id="SRAMLDO_STATUS" width="1" begin="8" end="8" resetval="0" description="SRAMLDO status" range="" rwaccess="R">
      <bitenum value="0" id="ACTIVE" token="SRAMLDO_STATUS_0_r" description="SRAMLDO is in ACTIVE mode."/>
      <bitenum value="1" id="RETENTION" token="SRAMLDO_STATUS_1_r" description="SRAMLDO is on RETENTION mode."/>
    </bitfield>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0x00" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RETMODE_ENABLE" width="1" begin="0" end="0" resetval="0" description="Control if the SRAM LDO retention mode is used or not." range="" rwaccess="RW">
      <bitenum value="0" id="Disabled" token="RETMODE_ENABLE_0" description="SRAM LDO is not allowed to go to RET mode"/>
      <bitenum value="1" id="Enabled" token="RETMODE_ENABLE_1" description="SRAM LDO go to RET mode when all memory of voltage domain are RET"/>
    </bitfield>
  </register>
  <register id="PRM_SLDO_MPU_SETUP" acronym="PRM_SLDO_MPU_SETUP" offset="0xCC" width="32" description="Setup of the SRAM LDO for MPU voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="AIPOFF" width="1" begin="8" end="8" resetval="0" description="Override on AIPOFF input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="No_Override" token="AIPOFF_0" description="AIPOFF signal is not overriden"/>
      <bitenum value="1" id="Override" token="AIPOFF_1" description="AIPOFF signal is overriden to '1'. Corresponding SRAM LDO is disabled and in HZ mode."/>
    </bitfield>
    <bitfield id="ENFUNC5" width="1" begin="7" end="7" resetval="0" description="ENFUNC5 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="One_step" token="ENFUNC5_0" description="Active to retention is a one step transfer"/>
      <bitenum value="1" id="Two_step" token="ENFUNC5_1" description="Active to retention is a two steps transfer"/>
    </bitfield>
    <bitfield id="ENFUNC4" width="1" begin="6" end="6" resetval="0" description="ENFUNC4 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="Ext_clock" token="ENFUNC4_0" description="One external clock is supplied"/>
      <bitenum value="1" id="No_ext_clock" token="ENFUNC4_1" description="No external clock is supplied"/>
    </bitfield>
    <bitfield id="ENFUNC3" width="1" begin="5" end="5" resetval="0" description="ENFUNC3 input of SRAM LDO. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW">
      <bitenum value="0" id="Sub_regul_disabled" token="ENFUNC3_0" description="Sub regulation is disabled"/>
      <bitenum value="1" id="Sub_regul_enabled" token="ENFUNC3_1" description="Sub regulation is enabled"/>
    </bitfield>
    <bitfield id="ENFUNC2" width="1" begin="4" end="4" resetval="0" description="ENFUNC2 input of SRAM LDO. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="Ext_cap" token="ENFUNC2_0" description="External cap is used"/>
      <bitenum value="1" id="No_ext_cap" token="ENFUNC2_1" description="External cap is not used"/>
    </bitfield>
    <bitfield id="ENFUNC1" width="1" begin="3" end="3" resetval="0" description="ENFUNC1 input of SRAM LDO. After PowerOn reset , this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW">
      <bitenum value="0" id="Short_prot_disabled" token="ENFUNC1_0" description="Short circuit protection is disabled"/>
      <bitenum value="1" id="Short_prot_enabled" token="ENFUNC1_1" description="Short circuit protection is enabled"/>
    </bitfield>
    <bitfield id="ABBOFF_SLEEP" width="1" begin="2" end="2" resetval="1" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during deep-sleep. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="SRAMNW_SLP_VDDS" token="ABBOFF_SLEEP_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="SRAMNW_SLP_VDDAR" token="ABBOFF_SLEEP_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="ABBOFF_ACT" width="1" begin="1" end="1" resetval="1" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during active mode. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="SRAMNW_ACT_VDDS" token="ABBOFF_ACT_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="SRAMNW_ACT_VDDAR" token="ABBOFF_ACT_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="PRM_SLDO_MPU_CTRL" acronym="PRM_SLDO_MPU_CTRL" offset="0xD0" width="32" description="Control and status of the SRAM LDO for MPU voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="SRAM_IN_TRANSITION" width="1" begin="9" end="9" resetval="0" description="Status indicating SRAM LDO state machine state." range="" rwaccess="R">
      <bitenum value="0" id="IDLE" token="SRAM_IN_TRANSITION_0_r" description="SRAM LDO state machine is stable"/>
      <bitenum value="1" id="IN_TRANSITION" token="SRAM_IN_TRANSITION_1_r" description="SRAM LDO state machine is in transition state"/>
    </bitfield>
    <bitfield id="SRAMLDO_STATUS" width="1" begin="8" end="8" resetval="0" description="SRAMLDO status" range="" rwaccess="R">
      <bitenum value="0" id="ACTIVE" token="SRAMLDO_STATUS_0_r" description="SRAMLDO is in ACTIVE mode."/>
      <bitenum value="1" id="RETENTION" token="SRAMLDO_STATUS_1_r" description="SRAMLDO is on RETENTION mode."/>
    </bitfield>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RETMODE_ENABLE" width="1" begin="0" end="0" resetval="0" description="Control if the SRAM LDO retention mode is used or not." range="" rwaccess="RW">
      <bitenum value="0" id="Disabled" token="RETMODE_ENABLE_0" description="SRAM LDO is not allowed to go to RET mode"/>
      <bitenum value="1" id="Enabled" token="RETMODE_ENABLE_1" description="SRAM LDO go to RET mode when all memory of voltage domain are RET"/>
    </bitfield>
  </register>
  <register id="PRM_SLDO_MM_SETUP" acronym="PRM_SLDO_MM_SETUP" offset="0xD4" width="32" description="Setup of the SRAM LDO for MM voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="AIPOFF" width="1" begin="8" end="8" resetval="0" description="Override on AIPOFF input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="No_Override" token="AIPOFF_0" description="AIPOFF signal is not overriden"/>
      <bitenum value="1" id="Override" token="AIPOFF_1" description="AIPOFF signal is overriden to '1'. Corresponding SRAM LDO is disabled and in HZ mode."/>
    </bitfield>
    <bitfield id="ENFUNC5" width="1" begin="7" end="7" resetval="0" description="ENFUNC5 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="One_step" token="ENFUNC5_0" description="Active to retention is a one step transfer"/>
      <bitenum value="1" id="Two_step" token="ENFUNC5_1" description="Active to retention is a two steps transfer"/>
    </bitfield>
    <bitfield id="ENFUNC4" width="1" begin="6" end="6" resetval="0" description="ENFUNC4 input of SRAM LDO." range="" rwaccess="RW">
      <bitenum value="0" id="Ext_clock" token="ENFUNC4_0" description="One external clock is supplied"/>
      <bitenum value="1" id="No_ext_clock" token="ENFUNC4_1" description="No external clock is supplied"/>
    </bitfield>
    <bitfield id="ENFUNC3" width="1" begin="5" end="5" resetval="0" description="ENFUNC3 input of SRAM LDO. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW">
      <bitenum value="0" id="Sub_regul_disabled" token="ENFUNC3_0" description="Sub regulation is disabled"/>
      <bitenum value="1" id="Sub_regul_enabled" token="ENFUNC3_1" description="Sub regulation is enabled"/>
    </bitfield>
    <bitfield id="ENFUNC2" width="1" begin="4" end="4" resetval="0" description="ENFUNC2 input of SRAM LDO. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="Ext_cap" token="ENFUNC2_0" description="External cap is used"/>
      <bitenum value="1" id="No_ext_cap" token="ENFUNC2_1" description="External cap is not used"/>
    </bitfield>
    <bitfield id="ENFUNC1" width="1" begin="3" end="3" resetval="0" description="ENFUNC1 input of SRAM LDO. After PowerOn reset , this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW">
      <bitenum value="0" id="Short_prot_disabled" token="ENFUNC1_0" description="Short circuit protection is disabled"/>
      <bitenum value="1" id="Short_prot_enabled" token="ENFUNC1_1" description="Short circuit protection is enabled"/>
    </bitfield>
    <bitfield id="ABBOFF_SLEEP" width="1" begin="2" end="2" resetval="1" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during deep-sleep. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="SRAMNW_SLP_VDDS" token="ABBOFF_SLEEP_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="SRAMNW_SLP_VDDAR" token="ABBOFF_SLEEP_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="ABBOFF_ACT" width="1" begin="1" end="1" resetval="1" description="Determines whether SRAMNWA is supplied by VDDS or VDDAR during active mode. After PowerOn reset, this bitfield is automatically loaded with a value from control module. Bitfield remains writable after this." range="" rwaccess="RW WSpecial">
      <bitenum value="0" id="SRAMNW_ACT_VDDS" token="ABBOFF_ACT_0" description="SRAMNWA supplied with VDDS"/>
      <bitenum value="1" id="SRAMNW_ACT_VDDAR" token="ABBOFF_ACT_1" description="SRAMNWA supplied with VDDAR"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="PRM_SLDO_MM_CTRL" acronym="PRM_SLDO_MM_CTRL" offset="0xD8" width="32" description="Control and status of the SRAM LDO for MM voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="SRAM_IN_TRANSITION" width="1" begin="9" end="9" resetval="0" description="Status indicating SRAM LDO state machine state." range="" rwaccess="R">
      <bitenum value="0" id="IDLE" token="SRAM_IN_TRANSITION_0_r" description="SRAM LDO state machine is stable"/>
      <bitenum value="1" id="IN_TRANSITION" token="SRAM_IN_TRANSITION_1_r" description="SRAM LDO state machine is in transition state"/>
    </bitfield>
    <bitfield id="SRAMLDO_STATUS" width="1" begin="8" end="8" resetval="0" description="SRAMLDO status" range="" rwaccess="R">
      <bitenum value="0" id="ACTIVE" token="SRAMLDO_STATUS_0_r" description="SRAMLDO is in ACTIVE mode."/>
      <bitenum value="1" id="RETENTION" token="SRAMLDO_STATUS_1_r" description="SRAMLDO is on RETENTION mode."/>
    </bitfield>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="RETMODE_ENABLE" width="1" begin="0" end="0" resetval="0" description="Control if the SRAM LDO retention mode is used or not." range="" rwaccess="RW">
      <bitenum value="0" id="Disabled" token="RETMODE_ENABLE_0" description="SRAM LDO is not allowed to go to RET mode"/>
      <bitenum value="1" id="Enabled" token="RETMODE_ENABLE_1" description="SRAM LDO go to RET mode when all memory of voltage domain are RET"/>
    </bitfield>
  </register>
  <register id="PRM_ABBLDO_MPU_SETUP" acronym="PRM_ABBLDO_MPU_SETUP" offset="0xDC" width="32" description="Selects the ABBLDO_MPU mode.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_WTCNT_VALUE" width="8" begin="15" end="8" resetval="0x00" description="LDO settling time for active-mode OPP change. Counting at a 16 system clock cycles rate. [warm reset insensitive]" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="ACTIVE_FBB_SEL" width="1" begin="2" end="2" resetval="0" description="Defines ABBLDO mode when voltage is in slow fast OPP. [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="Bypass" token="ACTIVE_FBB_SEL_0" description="ABBLDO is in bypass mode"/>
      <bitenum value="1" id="FBB" token="ACTIVE_FBB_SEL_1" description="ABBLDO is in FBB mode"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="1" end="1" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="SR2EN" width="1" begin="0" end="0" resetval="0" description="Enable ABB power management" range="" rwaccess="RW">
      <bitenum value="0" id="Bypass" token="SR2EN_0" description="ABBLDO is put in bypass mode"/>
      <bitenum value="1" id="Functional" token="SR2EN_1" description="ABBLDO will operate accordingly to settings"/>
    </bitfield>
  </register>
  <register id="PRM_ABBLDO_MPU_CTRL" acronym="PRM_ABBLDO_MPU_CTRL" offset="0xE0" width="32" description="Control and Status of ABB on MPU voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_IN_TRANSITION" width="1" begin="6" end="6" resetval="0" description="Indicates VBBLDO_CON is or is not in transition state. This output should be used by programming interface to clear OPP_CHANGE bit as an indication of OPP change completion." range="" rwaccess="R">
      <bitenum value="0" id="Idle" token="SR2_IN_TRANSITION_0_r" description=""/>
      <bitenum value="1" id="InTransition" token="SR2_IN_TRANSITION_1_r" description="Indicates that VBBLDO_CON is in transition and SR2_STATUS bits are not stable to read."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_STATUS" width="2" begin="4" end="3" resetval="0x0" description="Indicate ABBLDO current operation status" range="" rwaccess="R">
      <bitenum value="0" id="Bypass" token="SR2_STATUS_0_r" description="ABBLDO is placed in bypass mode."/>
      <bitenum value="1" id="Reserved" token="SR2_STATUS_1_r" description="Reserved"/>
      <bitenum value="2" id="FBB" token="SR2_STATUS_2_r" description="ABBLDO is placed in FBB active mode."/>
      <bitenum value="3" id="Reserved" token="SR2_STATUS_3_r" description="Reserved"/>
    </bitfield>
    <bitfield id="OPP_CHANGE" width="1" begin="2" end="2" resetval="0" description="When OPP_CHANGE is set to 1, VBBLDO_CON samples OPP_SEL and ACTIVE_FBB_SEL upon detecting rising edge. VBBLDO_CON asserts signal SR2_IN_TRANSITION in response to OPP_CHANGE. OPP_CHANGE should be cleared to 0 when SR2_IN_TRANSITION from VBBLDO_CON is de-asserted." range="" rwaccess="RW WSpecial"/>
    <bitfield id="OPP_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the OPP at which the MPU voltage domain is operating" range="" rwaccess="RW">
      <bitenum value="0" id="NominalOPP" token="OPP_SEL_0" description="default : Nominal"/>
      <bitenum value="1" id="FastOPP" token="OPP_SEL_1" description="Fast OPP"/>
      <bitenum value="2" id="Nominal" token="OPP_SEL_2" description="Nominal"/>
      <bitenum value="3" id="SlowOPP" token="OPP_SEL_3" description="Slow OPP"/>
    </bitfield>
  </register>
  <register id="PRM_ABBLDO_MM_SETUP" acronym="PRM_ABBLDO_MM_SETUP" offset="0xE4" width="32" description="Selects the ABBLDO_MM mode.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_WTCNT_VALUE" width="8" begin="15" end="8" resetval="0x00" description="LDO settling time for active-mode OPP change. Counting at a 16 system clock cycles rate. [warm reset insensitive]" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="ACTIVE_FBB_SEL" width="1" begin="2" end="2" resetval="0" description="Defines ABBLDO mode when voltage is in slow fast OPP. [warm reset insensitive]" range="" rwaccess="RW">
      <bitenum value="0" id="Bypass" token="ACTIVE_FBB_SEL_0" description="ABBLDO is in bypass mode"/>
      <bitenum value="1" id="FBB" token="ACTIVE_FBB_SEL_1" description="ABBLDO is in FBB mode"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="1" end="1" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="SR2EN" width="1" begin="0" end="0" resetval="0" description="Enable ABB power management" range="" rwaccess="RW">
      <bitenum value="0" id="Bypass" token="SR2EN_0" description="ABBLDO is put in bypass mode"/>
      <bitenum value="1" id="Functional" token="SR2EN_1" description="ABBLDO will operate accordingly to settings"/>
    </bitfield>
  </register>
  <register id="PRM_ABBLDO_MM_CTRL" acronym="PRM_ABBLDO_MM_CTRL" offset="0xE8" width="32" description="Control and Status of ABB on MM voltage domain. [warm reset insensitive]">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_IN_TRANSITION" width="1" begin="6" end="6" resetval="0" description="Indicates VBBLDO_CON is or is not in transition state. This output should be used by programming interface to clear OPP_CHANGE bit as an indication of OPP change completion." range="" rwaccess="R">
      <bitenum value="0" id="Idle" token="SR2_IN_TRANSITION_0_r" description=""/>
      <bitenum value="1" id="InTransition" token="SR2_IN_TRANSITION_1_r" description="Indicates that VBBLDO_CON is in transition and SR2_STATUS bits are not stable to read."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="SR2_STATUS" width="2" begin="4" end="3" resetval="0x0" description="Indicate ABBLDO current operation status" range="" rwaccess="R">
      <bitenum value="0" id="Bypass" token="SR2_STATUS_0_r" description="ABBLDO is placed in bypass mode."/>
      <bitenum value="1" id="Reserved" token="SR2_STATUS_1_r" description="Reserved"/>
      <bitenum value="2" id="FBB" token="SR2_STATUS_2_r" description="ABBLDO is placed in FBB active mode."/>
      <bitenum value="3" id="Reserved" token="SR2_STATUS_3_r" description="Reserved"/>
    </bitfield>
    <bitfield id="OPP_CHANGE" width="1" begin="2" end="2" resetval="0" description="When OPP_CHANGE is set to 1, VBBLDO_CON samples OPP_SEL and ACTIVE_FBB_SEL upon detecting rising edge. VBBLDO_CON asserts signal SR2_IN_TRANSITION in response to OPP_CHANGE. OPP_CHANGE should be cleared to 0 when SR2_IN_TRANSITION from VBBLDO_CON is de-asserted." range="" rwaccess="RW WSpecial"/>
    <bitfield id="OPP_SEL" width="2" begin="1" end="0" resetval="0x0" description="Selects the OPP at which the MM voltage domain is operating (Fast OPP, Nominal OPP or Slow OPP)" range="" rwaccess="RW">
      <bitenum value="0" id="NominalOPP" token="OPP_SEL_0" description="default : Nominal"/>
      <bitenum value="1" id="FastOPP" token="OPP_SEL_1" description="Fast OPP"/>
      <bitenum value="2" id="Nominal" token="OPP_SEL_2" description="Nominal"/>
      <bitenum value="3" id="SlowOPP" token="OPP_SEL_3" description="Slow OPP"/>
    </bitfield>
  </register>
  <register id="PRM_BANDGAP_SETUP" acronym="PRM_BANDGAP_SETUP" offset="0xEC" width="32" description="Setup of the BANDGAPTS. [warm reset insensitive]">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="STARTUP_COUNT" width="8" begin="7" end="0" resetval="0x78" description="Determines the start-up duration of BANDGAPTS. The duration is computed as 32 x NbCycles of system clock cycles." range="" rwaccess="RW"/>
  </register>
  <register id="PRM_VOLTST_MPU" acronym="PRM_VOLTST_MPU" offset="0x110" width="32" description="This register provides a status on the current MPU voltage domain state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="11" begin="31" end="21" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="INTRANSITION" width="1" begin="20" end="20" resetval="0" description="Domain transition status" range="" rwaccess="R">
      <bitenum value="1" id="Ongoing" token="INTRANSITION_1_r" description="Voltage domain transition is in progress."/>
      <bitenum value="0" id="No" token="INTRANSITION_0_r" description="No on-going transition on voltage domain"/>
    </bitfield>
    <bitfield id="RESERVED" width="18" begin="19" end="2" resetval="0x0 0000" description="" range="" rwaccess="R"/>
    <bitfield id="VOLTSTATEST" width="2" begin="1" end="0" resetval="0x3" description="Current voltage state status" range="" rwaccess="R">
      <bitenum value="3" id="ON" token="VOLTSTATEST_3_r" description="Voltage domain is ON"/>
      <bitenum value="2" id="SLEEP" token="VOLTSTATEST_2_r" description="Voltage domain is SLEEP"/>
      <bitenum value="1" id="RET" token="VOLTSTATEST_1_r" description="Voltage domain is in RETENTION"/>
      <bitenum value="0" id="OFF" token="VOLTSTATEST_0_r" description="Reserved"/>
    </bitfield>
  </register>
  <register id="PRM_VOLTST_MM" acronym="PRM_VOLTST_MM" offset="0x114" width="32" description="This register provides a status on the current MM voltage domain state. [warm reset insensitive]">
    <bitfield id="RESERVED" width="11" begin="31" end="21" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="INTRANSITION" width="1" begin="20" end="20" resetval="0" description="Domain transition status" range="" rwaccess="R">
      <bitenum value="1" id="Ongoing" token="INTRANSITION_1_r" description="Voltage domain transition is in progress."/>
      <bitenum value="0" id="No" token="INTRANSITION_0_r" description="No on-going transition on voltage domain"/>
    </bitfield>
    <bitfield id="RESERVED" width="18" begin="19" end="2" resetval="0x0 0000" description="" range="" rwaccess="R"/>
    <bitfield id="VOLTSTATEST" width="2" begin="1" end="0" resetval="0x3" description="Current voltage state status" range="" rwaccess="R">
      <bitenum value="3" id="ON" token="VOLTSTATEST_3_r" description="Voltage domain is ON"/>
      <bitenum value="2" id="SLEEP" token="VOLTSTATEST_2_r" description="Voltage domain is SLEEP"/>
      <bitenum value="1" id="RET" token="VOLTSTATEST_1_r" description="Voltage domain is in RETENTION"/>
      <bitenum value="0" id="OFF" token="VOLTSTATEST_0_r" description="Reserved"/>
    </bitfield>
  </register>
</module>
