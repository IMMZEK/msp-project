<module name="WDTIMER2" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="WIDR" acronym="WIDR" offset="0x0" width="32" description="This register contains the IP revision code.">
    <bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x000000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="WD_REV" width="8" begin="7" end="0" resetval="See" description="IP revision[7:4] . Major revision . [3:0] . Minor revision . Examples: 0x10 for 1.0, 0x21 for 2.1 ." range="" rwaccess="R"/>
  </register>
  <register id="WD_SYSCONFIG" acronym="WD_SYSCONFIG" offset="0x10" width="32" description="This register controls the various parameters of the L4 interface.">
    <bitfield id="Reserved" width="22" begin="31" end="10" resetval="0x0000000" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="CLOCKACTIVITY" width="2" begin="9" end="8" resetval="0x0" description="Clock Activity selection bits." range="" rwaccess="RW">
      <bitenum value="0" token="CLOCKACTIVITY_0" description="Both clocks can be cut off"/>
      <bitenum value="1" token="CLOCKACTIVITY_1" description="Only L4 clock must be kept active; timer clock can be cut off"/>
      <bitenum value="2" token="CLOCKACTIVITY_2" description="Only timer clock must be kept active; L4 clock can be cut off"/>
      <bitenum value="3" token="CLOCKACTIVITY_3" description="both clocks must be kept active"/>
    </bitfield>
    <bitfield id="Reserved" width="2" begin="7" end="6" resetval="0x0000000" description="Write 0s for future compatibility. Reads return 0." range="" rwaccess="R"/>
    <bitfield id="EMUFREE" width="1" begin="5" end="5" resetval="0" description="Emulation mode" range="" rwaccess="RW">
      <bitenum value="0" token="EMUFREE_0" description="Timer counter frozen in emulation"/>
      <bitenum value="1" token="EMUFREE_1" description="Timer counter free-running in emulation"/>
    </bitfield>
    <bitfield id="IDLEMODE" width="2" begin="4" end="3" resetval="0x0" description="Idle mode selection bits" range="" rwaccess="RW">
      <bitenum value="0" token="IDLEMODE_0" description="Force Idle mode"/>
      <bitenum value="1" token="IDLEMODE_1" description="No Idle mode"/>
      <bitenum value="2" token="IDLEMODE_2" description="Smart Idle mode"/>
      <bitenum value="3" token="IDLEMODE_3" description="Reserved"/>
    </bitfield>
    <bitfield id="ENAWAKEUP" width="1" begin="2" end="2" resetval="0" description="Enable wakeup control bit" range="" rwaccess="RW">
      <bitenum value="0" token="ENAWAKEUP_0" description="Wakeup mechanism is disabled"/>
      <bitenum value="1" token="ENAWAKEUP_1" description="Wakeup mechanism is enabled"/>
    </bitfield>
    <bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0" description="Software reset. This bit is automatically reset by the hardware. During reads, it always return 0." range="" rwaccess="RW">
      <bitenum value="0" token="SOFTRESET_0" description="Normal mode"/>
      <bitenum value="1" token="SOFTRESET_1" description="The module is reset."/>
    </bitfield>
    <bitfield id="AUTOIDLE" width="1" begin="0" end="0" resetval="0" description="L4 interconnect clock gating strategy" range="" rwaccess="RW">
      <bitenum value="0" token="AUTOIDLE_0" description="L4 interface clock is free-running."/>
      <bitenum value="1" token="AUTOIDLE_1" description="Automatic L4 interface clock gating strategy is applied, based on the L4 interface activity."/>
    </bitfield>
  </register>
  <register id="WD_SYSSTATUS" acronym="WD_SYSSTATUS" offset="0x14" width="32" description="This register provides status information about the module, excluding the interrupt status information.">
    <bitfield id="Reserved" width="24" begin="31" end="8" resetval="0x0000000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="Reserved" width="7" begin="7" end="1" resetval="0x00" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="RESETDONE" width="1" begin="0" end="0" resetval="-" description="Internal reset monitoring" range="" rwaccess="R">
      <bitenum value="0" token="RESETDONE_0" description="Internal module reset in ongoing."/>
      <bitenum value="1" token="RESETDONE_1" description="Reset completed."/>
    </bitfield>
  </register>
  <register id="WISR" acronym="WISR" offset="0x18" width="32" description="This register shows which interrupt events are pending inside the module.">
    <bitfield id="Reserved" width="31" begin="31" end="1" resetval="0x00000000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="OVF_IT_FLAG" width="1" begin="0" end="0" resetval="0" description="Pending overflow interrupt status" range="" rwaccess="RW">
      <bitenum value="0" token="OVF_IT_FLAG_0_r" description="No overflow interrupt pending"/>
      <bitenum value="0" token="OVF_IT_FLAG_0_w" description="Status unchanged"/>
      <bitenum value="1" token="OVF_IT_FLAG_1_r" description="Overflow interrupt pending"/>
      <bitenum value="1" token="OVF_IT_FLAG_1_w" description="Status bit cleared"/>
    </bitfield>
  </register>
  <register id="WIER" acronym="WIER" offset="0x1C" width="32" description="This register shows controls (enable/disable) the interrupt events.">
    <bitfield id="Reserved" width="31" begin="31" end="1" resetval="0x00000000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="OVF_IT_ENA" width="1" begin="0" end="0" resetval="0" description="Enable overflow interrupt" range="" rwaccess="RW">
      <bitenum value="0" token="OVF_IT_ENA_0" description="Disable overflow interrupt."/>
      <bitenum value="1" token="OVF_IT_ENA_1" description="Enable overflow interrupt."/>
    </bitfield>
  </register>
  <register id="WCLR" acronym="WCLR" offset="0x24" width="32" description="This register controls the prescaler stage of the counter.">
    <bitfield id="Reserved" width="26" begin="31" end="6" resetval="0x0000000" description="Reads return 0." range="" rwaccess="R"/>
    <bitfield id="PRE" width="1" begin="5" end="5" resetval="1" description="Prescaler enable" range="" rwaccess="RW">
      <bitenum value="0" token="PRE_0" description="Prescaler disabled"/>
      <bitenum value="1" token="PRE_1" description="Prescaler enabled"/>
    </bitfield>
    <bitfield id="PTV" width="3" begin="4" end="2" resetval="0x0" description="Prescaler value: The timer counter is prescaled with the value: pow(2,PTV) Example: PTV = 2: counter increases value is started after 4 functional clock periods." range="" rwaccess="RW"/>
    <bitfield id="Reserved" width="2" begin="1" end="0" resetval="0x0" description="Reads return 0." range="" rwaccess="R"/>
  </register>
  <register id="WCRR" acronym="WCRR" offset="0x28" width="32" description="This register holds the value of the internal counter.">
    <bitfield id="TIMER_COUNTER" width="32" begin="31" end="0" resetval="0x00000000" description="The value of the timer counter register" range="" rwaccess="RW"/>
  </register>
  <register id="WLDR" acronym="WLDR" offset="0x2C" width="32" description="This register holds the timer load value.">
    <bitfield id="TIMER_LOAD" width="32" begin="31" end="0" resetval="0xFFA6 0000 (WDT1) 0xFFFB 000 (WDT2 and 3)" description="The value of the timer load register" range="" rwaccess="RW"/>
  </register>
  <register id="WTGR" acronym="WTGR" offset="0x30" width="32" description="Writing a different value than the one already written in this register causes a watchdog counter reload.">
    <bitfield id="TTGR_VALUE" width="32" begin="31" end="0" resetval="0x00000000" description="The value of the trigger register" range="" rwaccess="RW"/>
  </register>
  <register id="WWPS" acronym="WWPS" offset="0x34" width="32" description="This register contains the write posting bits for all write-able functional registers.">
    <bitfield id="Reserved" width="27" begin="31" end="5" resetval="0x0" description="Reads return 0" range="" rwaccess="R"/>
    <bitfield id="W_PEND_WSPR" width="1" begin="4" end="4" resetval="0" description="Write pending for registerWSPR 0x0: No Start-Stop Register write pending0x1: Start-Stop Register write pending" range="" rwaccess="R"/>
    <bitfield id="W_PEND_WTGR" width="1" begin="3" end="3" resetval="0" description="Write pending for registerWTGR 0x0: No Trigger Register write pending0x1: Trigger Register write pending" range="" rwaccess="R"/>
    <bitfield id="W_PEND_WLDR" width="1" begin="2" end="2" resetval="0" description="Write pending for registerWLDR 0x0: No Load Register write pending0x1: Load Register write pending" range="" rwaccess="R"/>
    <bitfield id="W_PEND_WCRR" width="1" begin="1" end="1" resetval="0" description="Write pending for registerWCRR 0x0: No Counter Register write pending0x1: Counter Register write pending" range="" rwaccess="R"/>
    <bitfield id="W_PEND_WCLR" width="1" begin="0" end="0" resetval="0" description="Write pending for registerWCLR 0x0: No Control Register write pending0x1: Control Register write pending" range="" rwaccess="R"/>
  </register>
  <register id="WSPR" acronym="WSPR" offset="0x48" width="32" description="This register holds the start-stop value that controls the internal start-stop FSM.">
    <bitfield id="WSPR_VALUE" width="32" begin="31" end="0" resetval="0x00000000" description="The value of the start/stop register" range="" rwaccess="RW"/>
  </register>
</module>
