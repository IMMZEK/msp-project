<?xml version="1.0" encoding="UTF-8"?>


<module description="CSI2 protocol engine (MIPI Display Serial Interface Protocole)" id="CSI2_PROTOCOL_ENGINE">
  
  
  <register acronym="CSI2_REVISION" description="MODULE REVISION  This register contains the IP revision code in binary coded digital. For example, we have: 0x01 = revision 0.1 and 0x21 = revision 2.1" id="CSI2_REVISION" offset="0x0" width="32">
    
  <bitfield begin="31" description="Reserved" end="8" id="RESERVED" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="IP revision  [7:4] Major revision [3:0] Minor revision" end="0" id="REV" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  
  <register acronym="CSI2_SYSCONFIG" description="SYSTEM CONFIGURATION REGISTER  This register is the OCP-socket system configuration register." id="CSI2_SYSCONFIG" offset="0x10" width="32">
    
  <bitfield begin="31" description="Reserved" end="10" id="RESERVED1" rwaccess="R" width="22"></bitfield>
    
  <bitfield begin="9" description="Clocks activity during wake up mode period" end="8" id="CLOCKACTIVITY" rwaccess="RW" width="2">
    <bitenum description="OCP and Functional clocks can be switched off" id="OCPFUNCOFF" token="OCPFUNCOFF" value="0"></bitenum>
    <bitenum description="Functional clocks can be switched off and OCP clocks are maintained during wake up period" id="FUNCOFF" token="FUNCOFF" value="1"></bitenum>
    <bitenum description="OCP clocks can be switched off and Functional clocks are maintained during wake up period" id="OCPOFF" token="OCPOFF" value="2"></bitenum>
    <bitenum description="OCP and Functional clocks are maintained during wake up period" id="OCPFUNCON" token="OCPFUNCON" value="3"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="Reserved" end="5" id="RESERVED" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="4" description="Slave interface power management, Idle req/ack control" end="3" id="SIDLEMODE" rwaccess="RW" width="2">
    <bitenum description="Force-idle. An idle request is acknowledged unconditionally" id="FIDLE" token="FIDLE" value="0"></bitenum>
    <bitenum description="No-idle. An idle request is never acknowledged" id="NIDLE" token="NIDLE" value="1"></bitenum>
    <bitenum description="Smart-idle. Acknowledgement to an idle request is given based on the internal activity of the module." id="SIDLE" token="SIDLE" value="2"></bitenum>
    <bitenum description="Reserved" id="RES" token="RES" value="3"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Wake-up mode enable bit" end="2" id="ENWAKEUP" rwaccess="RW" width="1">
    <bitenum description="Wakeup is disabled" id="WAKEUPDIS" token="WAKEUPDIS" value="0"></bitenum>
    <bitenum description="Wakeup is enabled" id="WAKEUPENB" token="WAKEUPENB" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Software reset. Set the bit to 1 to trigger a module reset. The bit is automatically reset by the hw. During reads return 0. " end="1" id="SOFT_RESET" rwaccess="RW" width="1">
    <bitenum description="Normal mode." id="NORMAL" token="NORMAL" value="0"></bitenum>
    <bitenum description="The module is reset" id="RESET" token="RESET" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Internal OCP gating strategy" end="0" id="AUTO_IDLE" rwaccess="RW" width="1">
    <bitenum description="OCP clock is free-running." id="FREE" token="FREE" value="0"></bitenum>
    <bitenum description="Automatic OCP clock gating strategy is applied based on the OCP interface activity." id="GATED" token="GATED" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_SYSSTATUS" description="SYSTEM STATUS REGISTER  This register provides status information about the module, excluding the interrupt status register." id="CSI2_SYSSTATUS" offset="0x14" width="32">
    
  <bitfield begin="31" description="Reserved" end="1" id="RESERVED" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description="Internal reset monitoring" end="0" id="RESET_DONE" rwaccess="R" width="1">
    <bitenum description="Internal module reset is on going." id="RESETONGOING" token="RESETONGOING" value="0"></bitenum>
    <bitenum description="Reset completed." id="RESETCOMPLETED" token="RESETCOMPLETED" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_IRQSTATUS" description="INTERRUPT STATUS REGISTER - All virtual channels + Complex IO + PLL  This register associates one bit for each virtual channel in order to determine which virtual channel has generated the interrupt. The virtual channel shall be enabled for events to be generated on that virtual channel. If the virtual channel is disabled,  the interrupt is not generated." id="CSI2_IRQSTATUS" offset="0x18" width="32">
    
  <bitfield begin="31" description="Reserved" end="23" id="RESERVED2" rwaccess="R" width="9"></bitfield>
    
  <bitfield begin="22" description="The VSYNC and corresponding HSYNC pulses defined in CSI2_TE_HSYNC_NUMBER for the line TE1 have been received by the CSI2 protocol engine and have trigger the start of the data transfer to the peripheral." end="22" id="TE1_LINE_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="21" description="The VSYNC and corresponding HSYNC pulses defined in CSI2_TE_HSYNC_NUMBER for the line TE0 have been received by the CSI2 protocol engine and have trigger the start of the data transfer to the peripheral." end="21" id="TE0_LINE_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description="Turn-around Time out." end="20" id="TA_TO_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description="Transition of the status signal LDOPWRGOOD from the CSI2PHY indicating a state change for the supply VDDALDOCSI2PLL from up to down or down to up." end="19" id="LDO_POWER_GOOD_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="18" description="Synchronization with Video port is lost (Video mode only)" end="18" id="SYNC_LOST_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description="Acknowledge Trigger" end="17" id="ACK_TRIGGER_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false.  WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description="Tearing Effect Trigger" end="16" id="TE_TRIGGER_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="Interrupt for Low Power Rx Time out" end="15" id="LP_RX_TO_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="Interrupt for High Speed Tx Time out." end="14" id="HS_TX_TO_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="Reserved" end="11" id="RESERVED1" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="10" description="Error signaling from Complex IO: status of the complex IO errors received from the complex IO(events are defined in CSI2_COMPLEXIO_IRQSTATUS). " end="10" id="COMPLEXIO_ERR_IRQ" rwaccess="R" width="1">
    <bitenum description="READS: Event is false." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending)." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description="PLL recal event (assertion of CSI2Recal signal from the CSI2 PLL Control module)" end="9" id="PLL_RECAL_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="PLL un-clock event (de-assertion of CSI2Lock signal from the CSI2 PLL Control module)" end="8" id="PLL_UNLOCK_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="PLL clock event (assertion of CSI2Lock signal from the CSI2 PLL Control module)" end="7" id="PLL_LOCK_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="Reserved" end="6" id="RESERVED" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Video mode resynchronization indicates to the software users that the video port works but the configuration of the timings for the display controller (DISPC) and for CSI2 Protocol engine may need to be modified to avoid the resynchronization to occur." end="5" id="RESYNCHRONIZATION_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="Wakeup" end="4" id="WAKEUP_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="Virtual channel #3" end="3" id="VIRTUAL_CHANNEL3_IRQ" rwaccess="R" width="1">
    <bitenum description="READS: Event is false." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending)." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Virtual channel #2" end="2" id="VIRTUAL_CHANNEL2_IRQ" rwaccess="R" width="1">
    <bitenum description="READS: Event is false." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending)." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Virtual channel #1" end="1" id="VIRTUAL_CHANNEL1_IRQ" rwaccess="R" width="1">
    <bitenum description="READS: Event is false." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending)." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Virtual channel #0" end="0" id="VIRTUAL_CHANNEL0_IRQ" rwaccess="R" width="1">
    <bitenum description="READS: Event is false." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending)." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_IRQENABLE" description="INTERRUPT ENABLE REGISTER -   This register associates one bit for each virtual channel in order to enable/disable each virtual channel individually." id="CSI2_IRQENABLE" offset="0x1C" width="32">
    
  <bitfield begin="31" description="Reserved" end="23" id="RESERVED3" rwaccess="R" width="9"></bitfield>
    
  <bitfield begin="22" description="The VSYNC and corresponding HSYNC pulses defined in CSI2_TE_HSYNC_NUMBER for the line TE1 have been received by the CSI2 protocol engine and have trigger the start of the data transfer to the peripheral." end="22" id="TE1_LINE_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="21" description="The VSYNC and corresponding HSYNC pulses defined in CSI2_TE_HSYNC_NUMBER for the line TE0 have been received by the CSI2 protocol engine and have trigger the start of the data transfer to the peripheral." end="21" id="TE0_LINE_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description="Turn-around Time out." end="20" id="TA_TO_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description="Transition of the status signal LDOPWRGOOD from the CSI2PHY indicating a state change for the supply VDDALDOCSI2PLL from up to down or down to up." end="19" id="LDO_POWER_GOOD_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="18" description="Synchronization with Video port is lost (Video mode only)" end="18" id="SYNC_LOST_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description="Acknowledge trigger" end="17" id="ACK_TRIGGER_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description="Tearing Effect trigger" end="16" id="TE_TRIGGER_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="Interrupt for Low Power Rx Time out." end="15" id="LP_RX_TO_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="Interrupt for High Speed Tx Time out." end="14" id="HS_TX_TO_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="Reserved" end="10" id="RESERVED2" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="9" description="PLL recal event (assertion of CSI2Recal signal from the CSI2 PLL Control module)" end="9" id="PLL_RECAL_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="PLL un-clock event (de-assertion of CSI2Lock signal from the CSI2 PLL Control module)" end="8" id="PLL_UNLOCK_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="PLL clock event (assertion of CSI2Lock signal from the CSI2 PLL Control module)" end="7" id="PLL_LOCK_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="Reserved" end="6" id="RESERVED1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Video mode resynchronization" end="5" id="RESYNCHRONIZATION_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="Wakeup" end="4" id="WAKEUP_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="Reserved" end="0" id="RESERVED" rwaccess="R" width="4"></bitfield>
  </register>
  
  
  <register acronym="CSI2_CTRL" description="GLOBAL CONTROL REGISTER  This register controls the CSI2 Protocol Engine module. This register shall not be modified dynamically (except IF_EN bit fields)." id="CSI2_CTRL" offset="0x40" width="32">
    
  <bitfield begin="31" description="Reserved" end="25" id="RESERVED" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="24" description="Determines if the Dispc_Update_Sync signal from the display controller is used." end="24" id="DISPC_UPDATE_SYNC" rwaccess="RW" width="1">
    <bitenum description="Dispc_Update_Sync signal is not used." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Dispc_Update_Sync signal is used." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description="Blanking mode" end="23" id="HSA_BLANKING_MODE" rwaccess="RW" width="1">
    <bitenum description="Packets in TX FIFO are sent during HSA blanking period of video mode or LPS is used." id="COMMAND_PACKET_TX_FIFO" token="COMMAND_PACKET_TX_FIFO" value="0"></bitenum>
    <bitenum description="LONG BLANKING PACKETS only are used during HSA blanking period of video mode." id="HS_BLANKING_PACKET_ONLY" token="HS_BLANKING_PACKET_ONLY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="22" description="Blanking mode" end="22" id="HBP_BLANKING_MODE" rwaccess="RW" width="1">
    <bitenum description="Packets in TX FIFO are sent during HBP blanking period of video mode or LPS is used." id="COMMAND_PACKET_TX_FIFO" token="COMMAND_PACKET_TX_FIFO" value="0"></bitenum>
    <bitenum description="LONG BLANKING PACKETS only are used during HBP blanking period of video mode." id="HS_BLANKING_PACKET_ONLY" token="HS_BLANKING_PACKET_ONLY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="21" description="Blanking mode" end="21" id="HFP_BLANKING_MODE" rwaccess="RW" width="1">
    <bitenum description="Packets in TX FIFO are sent during HFP blanking period of video mode or LPS is used." id="COMMAND_PACKET_TX_FIFO" token="COMMAND_PACKET_TX_FIFO" value="0"></bitenum>
    <bitenum description="LONG BLANKING PACKETS only are used during HFP blanking period of video mode." id="HS_BLANKING_PACKET_ONLY" token="HS_BLANKING_PACKET_ONLY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description="Blanking mode" end="20" id="BLANKING_MODE" rwaccess="RW" width="1">
    <bitenum description="LPS is used during blanking periods of video mode (except HSA, HBP, HFP defined in HSA_BLANKING_MODE,  HBP_BLANKING_MODE AND HFP_BLANKING_MODE respectively) when there is no command mode data in TX FIFO ready to be sent. So blanking periods can be different during the frame depending on the TX FIFO." id="LPS" token="LPS" value="0"></bitenum>
    <bitenum description="LONG BLANKING PACKETS are used during blanking periods of video mode (except HSA, HBP, HFP defined in HSA_BLANKING_MODE,  HBP_BLANKING_MODE AND HFP_BLANKING_MODE respectively)  regardless of the packets present in the TX FIFO ready to be sent" id="HS" token="HS" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description="Enable EOT packets at the end of HS transmission." end="19" id="EOT_ENABLE" rwaccess="RW" width="1">
    <bitenum description="No EOT packets" id="EOT_OFF" token="EOT_OFF" value="0"></bitenum>
    <bitenum description="EOT packet is sent at all HS to LP transitions." id="EOT_ON" token="EOT_ON" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="18" description="HSYNC end pulse." end="18" id="VP_HSYNC_END" rwaccess="RW" width="1">
    <bitenum description="Disabled. No HSYNC END short packet is generated." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. While the HSYNC END pulse is detected, the associated short packet HSYNC END is generated." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description="HSYNC start pulse." end="17" id="VP_HSYNC_START" rwaccess="RW" width="1">
    <bitenum description="Disabled. No HSYNC START short packet is generated." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. While the HSYNC start pulse is detected, the associated short packet HSYNC START is generated." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description="VSYNC end pulse." end="16" id="VP_VSYNC_END" rwaccess="RW" width="1">
    <bitenum description="Disabled. No VSYNC END short packet is generated." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. While the VSYNC END pulse is detected, the associated short packet VSYNC END is generated." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="VSYNC start pulse." end="15" id="VP_VSYNC_START" rwaccess="RW" width="1">
    <bitenum description="Disabled. No VSYNC START short packet is generated." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. While the VSYNC START pulse is detected, the associated short packet VSYNC START is generated." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="Selection of the trigger reset mode" end="14" id="TRIGGER_RESET_MODE" rwaccess="RW" width="1">
    <bitenum description="Synchronized: the mode is only valid if there is virtual channel using the video mode and it is active. The principal is to wait for the current video frame to be transferred on the link. Any data received after the VSYNC are ignored.  " id="SYNCHRONIZED" token="SYNCHRONIZED" value="0"></bitenum>
    <bitenum description="Immediate: all pending requests in TX FIFO are taken into account for transfer scheduling, the RX FIFO is ignored, and the data from video port are ignored as soon as possible. Only the current transfer on CSI2 link and already scheduled ones are transmitted. All the other transfers are discarded. " id="IMMEDIATE" token="IMMEDIATE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="Number of line buffers to be used while receiving data on the video port. The valid values are from 0 to CSI2_GNQ.VP1_NB_LINE_BUFFER." end="12" id="LINE_BUFFER" rwaccess="RW" width="2">
    <bitenum description="No line buffer" id="F0" token="F0" value="0"></bitenum>
    <bitenum description="1 line buffer" id="F1" token="F1" value="1"></bitenum>
    <bitenum description="2 line buffers" id="F2" token="F2" value="2"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description="VP vertical synchronization signal polarity" end="11" id="VP_VSYNC_POL" rwaccess="RW" width="1">
    <bitenum description="VSYNC signal on the video port is active low." id="LOW" token="LOW" value="0"></bitenum>
    <bitenum description="VSYNC signal on the video port is active high." id="HIGH" token="HIGH" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="10" description="VP horizontal synchronization signal polarity" end="10" id="VP_HSYNC_POL" rwaccess="RW" width="1">
    <bitenum description="HSYNC signal on the video port is active low." id="LOW" token="LOW" value="0"></bitenum>
    <bitenum description="HSYNC signal on the video port is active high." id="HIGH" token="HIGH" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description="VP data enable signal polarity" end="9" id="VP_DE_POL" rwaccess="RW" width="1">
    <bitenum description="DE signal on the video port is active low." id="LOW" token="LOW" value="0"></bitenum>
    <bitenum description="DE signal on the video port is active high." id="HIGH" token="HIGH" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="VP clock polarity" end="8" id="VP_CLK_POL" rwaccess="RW" width="1">
    <bitenum description="The CSI2 Protocol Engine module captures the data on the VP on the pixel clock falling edge. The module connected to the VP shall drive the data on the pixel clock rising edge." id="FALLING" token="FALLING" value="0"></bitenum>
    <bitenum description="The CSI2 Protocol Engine module captures the data on the VP on the pixel clock raising edge. The module connected to the VP shall drive the data on the pixel clock falling edge." id="RISING" token="RISING" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="Defines the size of the video port data bus" end="6" id="VP_DATA_BUS_WIDTH" rwaccess="RW" width="2">
    <bitenum description="16-bits data width (LSB of the 24-bit video port data bus)" id="F16" token="F16" value="0"></bitenum>
    <bitenum description="18-bits data width (LSB of the 24-bit video port data bus)" id="F18" token="F18" value="1"></bitenum>
    <bitenum description="24-bits data width (LSB of the 24-bit video port data bus)" id="F24" token="F24" value="2"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Send the reset trigger to the peripheral." end="5" id="TRIGGER_RESET" rwaccess="RW" width="1">
    <bitenum description="READS: Reset trigger generation is completed. It is reset by HW when it is completed. WRITES: Cancellation of the request for Reset trigger generation (maybe too late since it is already on going)" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="READS: Generation of the reset trigger has been requested by user (could be on going but not completed yet). WRITES: Request for Reset trigger to be sent to the peripheral." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="The field indicates the clock ratio between VP.CLK and VP.PCLK. The clock VP.PCLK is generated from VP.CLK. It is divided down. The information is only used when the video port is used to provide data in command mode. In the case of video mode, it is not used." end="4" id="VP_CLK_RATIO" rwaccess="RW" width="1">
    <bitenum description="The clock VP.PCLK is the clock VP.CLK divided by 2. The duty cycle of VP.PCLK is 50/50." id="RATIO2" token="RATIO2" value="0"></bitenum>
    <bitenum description="The clock VP.PCLK is the clock VP.CLK divided by 3 or more. The duty cycle of VP.PCLK is not 50/50 for odd ratio numbers (3,5,7,...)." id="RATIO3ANDHIGHER" token="RATIO3ANDHIGHER" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="Defines the arbitration scheme for granting the virtual channel pending ready requests in the TX FIFO" end="3" id="TX_FIFO_ARBITRATION" rwaccess="RW" width="1">
    <bitenum description="Round-Robin Scheme is used" id="ROUNDROBIN" token="ROUNDROBIN" value="0"></bitenum>
    <bitenum description="Sequential Scheme is used" id="SEQUENTIAL" token="SEQUENTIAL" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Enables the Error Correction Code check for the received header (short and long packets for all virtual channel ids)." end="2" id="ECC_RX_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Enables the checksum check for the received payload (long packet only for all virtual channel ids)." end="1" id="CS_RX_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Enables the module. When the module is disabled the signals from the complex IO are gated (no updates of the interrupt status register). It is not possible to change the bit-fields in the register CSI2_CTRL except IF_EN when it is enabled. All the other registers can be changed except the ones that require CSI2_VC_CTRL.VC_EN to be equal to 0 to be modified." end="0" id="IF_EN" rwaccess="RW" width="1">
    <bitenum description="The interface is disabled. If one of the virtual channel uses the video mode with the video port to receive the data, the CSI2 protocol engines is disabled when the next VSYNC is received and all the data in the FIFO for the other virtual channels in command mode are sent to the peripherals (if BTA_EN is enabled, the CSI2 protocol needs to wait for the response and BTA from the peripheral before disabling all the internal logic since an acknowledge is requested)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="The interface is enabled immediately, the data acquisition on the video port starts on the next VSYNC (video mode) or first data received in the Slave port FIFO (command mode).  " id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_GNQ" description="GENERIC PARAMETER REGISTER  This register provide a way to read the generic parameters used in the design." id="CSI2_GNQ" offset="0x44" width="32">
    
  <bitfield begin="31" description="Reserved" end="25" id="RESERVED" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="24" description="Number of video ports" end="24" id="NB_VIDEO_PORTS" rwaccess="R" width="1">
    <bitenum description="Video port 1 only is present" id="SINGLE_VP" token="SINGLE_VP" value="0"></bitenum>
    <bitenum description="Video port 1 and video port 2 are present" id="DUAL_VP" token="DUAL_VP" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description="Determines the number of video buffer lines associated to video port #2." end="22" id="VP2_NB_LINE_BUFFER" rwaccess="R" width="2">
    <bitenum description="No line buffer" id="F0" token="F0" value="0"></bitenum>
    <bitenum description="1 line buffer of the size defined in LINE_BUFFER_SIZE" id="F1" token="F1" value="1"></bitenum>
    <bitenum description="2 line buffers of the size defined in LINE_BUFFER_SIZE" id="F2" token="F2" value="2"></bitenum>
  </bitfield>
    
  <bitfield begin="21" description="Reserved" end="21" id="RESERVED2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="20" description="Determines the video line buffer size associated to video port #2 ." end="18" id="VP2_LINE_BUFFER_SIZE" rwaccess="R" width="3">
    <bitenum description="512x24-bits, 682x18-bits, 768x16bits (memory of 384x32-bits)" id="F1" token="F1" value="1"></bitenum>
    <bitenum description="682x24-bits, 910x18-bits, 1024x16bits (memory of 512x32-bits)" id="F2" token="F2" value="2"></bitenum>
    <bitenum description="853x24-bits, 1137x18-bits, 1280x16bits (memory of 640x32-bits)" id="F3" token="F3" value="3"></bitenum>
    <bitenum description="1024x24-bits, 1365x18-bits, 1536x16bits (memory of 768x32-bits)" id="F4" token="F4" value="4"></bitenum>
    <bitenum description="1194x24-bits, 1592x18-bits, 1792x16bits (memory of 896x32-bits)" id="F5" token="F5" value="5"></bitenum>
    <bitenum description="1365x24-bits, 1820x18-bits, 2048x16bits (memory of 1024x32-bits)" id="F6" token="F6" value="6"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description="Determines the number of video buffer lines associated to video port #1." end="16" id="VP1_NB_LINE_BUFFER" rwaccess="R" width="2">
    <bitenum description="No line buffer" id="F0" token="F0" value="0"></bitenum>
    <bitenum description="1 line buffer of the size defined in LINE_BUFFER_SIZE" id="F1" token="F1" value="1"></bitenum>
    <bitenum description="2 line buffers of the size defined in LINE_BUFFER_SIZE" id="F2" token="F2" value="2"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="Reserved" end="15" id="RESERVED1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Determines the video line buffer size associated to video port #1 ." end="12" id="VP1_LINE_BUFFER_SIZE" rwaccess="R" width="3">
    <bitenum description="512x24-bits, 682x18-bits, 768x16bits (memory of 384x32-bits)" id="F1" token="F1" value="1"></bitenum>
    <bitenum description="682x24-bits, 910x18-bits, 1024x16bits (memory of 512x32-bits)" id="F2" token="F2" value="2"></bitenum>
    <bitenum description="853x24-bits, 1137x18-bits, 1280x16bits (memory of 640x32-bits)" id="F3" token="F3" value="3"></bitenum>
    <bitenum description="1024x24-bits, 1365x18-bits, 1536x16bits (memory of 768x32-bits)" id="F4" token="F4" value="4"></bitenum>
    <bitenum description="1194x24-bits, 1592x18-bits, 1792x16bits (memory of 896x32-bits)" id="F5" token="F5" value="5"></bitenum>
    <bitenum description="1365x24-bits, 1820x18-bits, 2048x16bits (memory of 1024x32-bits)" id="F6" token="F6" value="6"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description="Determines the number of data lanes supported by the CSI2 protocol engine ." end="9" id="NB_DATA_LANES" rwaccess="R" width="3">
    <bitenum description="1 Data lane" id="F1" token="F1" value="1"></bitenum>
    <bitenum description="2 Data lanes" id="F2" token="F2" value="2"></bitenum>
    <bitenum description="3 Data lanes" id="F3" token="F3" value="3"></bitenum>
    <bitenum description="4 Data lanes" id="F4" token="F4" value="4"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="Determines the number of DMA_REQ signals. " end="6" id="NB_DMA_REQUEST" rwaccess="R" width="3">
    <bitenum description="No DMA request" id="F0" token="F0" value="0"></bitenum>
    <bitenum description="1 DMA request" id="F1" token="F1" value="1"></bitenum>
    <bitenum description="2 DMA requests" id="F2" token="F2" value="2"></bitenum>
    <bitenum description="3 DMA requests" id="F3" token="F3" value="3"></bitenum>
    <bitenum description="4 DMA requests" id="F4" token="F4" value="4"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Determines the data RX FIFO depth (32-bit words) on the slave port." end="3" id="RX_FIFODEPTH" rwaccess="R" width="3">
    <bitenum description="32x 33 bits" id="F32" token="F32" value="4"></bitenum>
    <bitenum description="64x 33 bits" id="F64" token="F64" value="5"></bitenum>
    <bitenum description="128 x 33 bits" id="F128" token="F128" value="6"></bitenum>
    <bitenum description="256 x 33 bits" id="F256" token="F256" value="7"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Determines the data TX FIFO depth (33-bit words) on the slave port." end="0" id="TX_FIFODEPTH" rwaccess="R" width="3">
    <bitenum description="32x 33 bits" id="F32" token="F32" value="4"></bitenum>
    <bitenum description="64x 33 bits" id="F64" token="F64" value="5"></bitenum>
    <bitenum description="128 x 33 bits" id="F128" token="F128" value="6"></bitenum>
    <bitenum description="256 x 33 bits" id="F256" token="F256" value="7"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_COMPLEXIO_CFG1" description="COMPLEXIO CONFIGURATION REGISTER for the complex IO  This register contains the lane configuration for the order and position of the lanes (clock and data) and the polarity order for the control of the PHY differential signals in addition to the control bit for the power FSM. " id="CSI2_COMPLEXIO_CFG1" offset="0x48" width="32">
    
  <bitfield begin="31" description="Shadowing configuration." end="31" id="SHADOWING" rwaccess="RW" width="1">
    <bitenum description="Disabled. The writes to the first 3 registers of the complex IO address map is done like the other SCP registers." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. The writes to the first 3 registers of the complex IO address map is done only when the GObit is set and when the  signal DISPCUpdataSync from the display controller module  is active." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="Allows the synchronized update of the shadow registers when the signal DISPCUpdateSync is active." end="30" id="GOBIT" rwaccess="RW" width="1">
    <bitenum description="Resets the GOBIT. The hardware has finished the update of the shadow SCP registers. The bit is reset by Hardware. The SW can reset the bit in case the user decides to abort it. There is no guarantee that the SW reset is done before the transfer of the values to the complex IO." id="RESET" token="RESET" value="0"></bitenum>
    <bitenum description="Set the GOBIT. Only when the transfer of the new values for the three first registers is completed (3, 2, 1, or 0 transfers are performed based on the number of registers to update), the GOBIT is reset. The DISPCUpdateSync signal is used to synchronize the update. The bit shall be set only when it is in reset state." id="SET" token="SET" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="Internal reset monitoring of the power domain using the PPI byte clock from the complex IO" end="29" id="RESET_DONE" rwaccess="R" width="1">
    <bitenum description="Internal module reset is on going." id="RESETONGOING" token="RESETONGOING" value="0"></bitenum>
    <bitenum description="Reset completed." id="RESETCOMPLETED" token="RESETCOMPLETED" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description="Command for power control of the complex IO" end="27" id="PWR_CMD" rwaccess="RW" width="2">
    <bitenum description="Command to change to OFF state" id="STATE_OFF" token="STATE_OFF" value="0"></bitenum>
    <bitenum description="Command to change to ON state" id="STATE_ON" token="STATE_ON" value="1"></bitenum>
    <bitenum description="Command to change to Ultra Low Power state" id="STATE_ULP" token="STATE_ULP" value="2"></bitenum>
  </bitfield>
    
  <bitfield begin="26" description="Status of the power control of the complex IO" end="25" id="PWR_STATUS" rwaccess="R" width="2">
    <bitenum description="Complex IO in OFF state" id="STATE_OFF" token="STATE_OFF" value="0"></bitenum>
    <bitenum description="Complex IO in ON state" id="STATE_ON" token="STATE_ON" value="1"></bitenum>
    <bitenum description="Complex IO in Ultra Low Power state" id="STATE_ULP" token="STATE_ULP" value="2"></bitenum>
  </bitfield>
    
  <bitfield begin="24" description="Reserved" end="22" id="RESERVED" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="21" description="Indicates the state of the signal LDOPWRGOOD. VDDALDOCSI2PLL: 1.2V power supply for the PLL. The voltage is supplied by the internal or external LDO. The interrupt LDO_POWER_GOOD_IRQ is generated when a transition is detected on the signal LDOPWRGOOD from the CSI2PHY." end="21" id="LDO_POWER_GOOD_STATE" rwaccess="R" width="1">
    <bitenum description="VDDALDOCSI2PLL power supply is down" id="SUPPLYDOWN" token="SUPPLYDOWN" value="0"></bitenum>
    <bitenum description="VDDALDOCSI2PLL power supply is up" id="SUPPLYUP" token="SUPPLYUP" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description="Select the external LDO for the CSI2PHY. " end="20" id="USE_LDO_EXTERNAL" rwaccess="RW" width="1">
    <bitenum description="CSI2PHY internal LDO is used." id="INTERNALLDO" token="INTERNALLDO" value="0"></bitenum>
    <bitenum description="External LDO is used. CSI2PHY LDO is tri-stated." id="EXTERNALLDO" token="EXTERNALLDO" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description="Reserved" end="19" id="RESERVED6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="19" description="+/- differential pin order of DATA lane 4." end="19" id="DATA4_POL" rwaccess="RW" width="1">
    <bitenum description="+/- pin order (CSI2.DX=+ and CSI2.DY=-)" id="PLUSMINUS" token="PLUSMINUS" value="0"></bitenum>
    <bitenum description="-/+ pin order (CSI2.DX=- and CSI2.DY=+)" id="MINUSPLUS" token="MINUSPLUS" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description="Reserved" end="16" id="RESERVED5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="16" description="Position and order of the DATA  lane 4." end="16" id="DATA4_POSITION" rwaccess="RW" width="1">
    <bitenum description="Not used/connected" id="NOT_USED" token="NOT_USED" value="0"></bitenum>
    <bitenum description="Data lane 4 is at the position 1." id="POSITION_1" token="POSITION_1" value="1"></bitenum>
    <bitenum description="Data lane 4 is at the position 2." id="POSITION_2" token="POSITION_2" value="2"></bitenum>
    <bitenum description="Data lane 4 is at the position 3." id="POSITION_3" token="POSITION_3" value="3"></bitenum>
    <bitenum description="Data lane 4 is at the position 4." id="POSITION_4" token="POSITION_4" value="4"></bitenum>
    <bitenum description="Data lane 4  is at the position 5." id="POSITION_5" token="POSITION_5" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="Reserved" end="15" id="RESERVED4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="15" description="+/- differential pin order of DATA lane 3." end="15" id="DATA3_POL" rwaccess="RW" width="1">
    <bitenum description="+/- pin order (CSI2.DX=+ and CSI2.DY=-)" id="PLUSMINUS" token="PLUSMINUS" value="0"></bitenum>
    <bitenum description="-/+ pin order (CSI2.DX=- and CSI2.DY=+)" id="MINUSPLUS" token="MINUSPLUS" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description="Reserved" end="12" id="RESERVED3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="12" description="Position and order of the DATA  lane 3." end="12" id="DATA3_POSITION" rwaccess="RW" width="1">
    <bitenum description="Not used/connected" id="NOT_USED" token="NOT_USED" value="0"></bitenum>
    <bitenum description="Data lane 3 is at the position 1." id="POSITION_1" token="POSITION_1" value="1"></bitenum>
    <bitenum description="Data lane 3 is at the position 2." id="POSITION_2" token="POSITION_2" value="2"></bitenum>
    <bitenum description="Data lane 3 is at the position 3." id="POSITION_3" token="POSITION_3" value="3"></bitenum>
    <bitenum description="Data lane 3 is at the position 4." id="POSITION_4" token="POSITION_4" value="4"></bitenum>
    <bitenum description="Data lane 3  is at the position 5." id="POSITION_5" token="POSITION_5" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description="Reserved" end="11" id="RESERVED2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="11" description="+/- differential pin order of DATA lane 2." end="11" id="DATA2_POL" rwaccess="RW" width="1">
    <bitenum description="+/- pin order (CSI2.DX=+ and CSI2.DY=-)" id="PLUSMINUS" token="PLUSMINUS" value="0"></bitenum>
    <bitenum description="-/+ pin order (CSI2.DX=- and CSI2.DY=+)" id="MINUSPLUS" token="MINUSPLUS" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="Reserved" end="8" id="RESERVED1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Position and order of the DATA  lane 2." end="8" id="DATA2_POSITION" rwaccess="RW" width="1">
    <bitenum description="Not used/connected" id="NOT_USED" token="NOT_USED" value="0"></bitenum>
    <bitenum description="Data lane 2 is at the position 1." id="POSITION_1" token="POSITION_1" value="1"></bitenum>
    <bitenum description="Data lane 2 is at the position 2." id="POSITION_2" token="POSITION_2" value="2"></bitenum>
    <bitenum description="Data lane 2 is at the position 3." id="POSITION_3" token="POSITION_3" value="3"></bitenum>
    <bitenum description="Data lane 2 is at the position 4." id="POSITION_4" token="POSITION_4" value="4"></bitenum>
    <bitenum description="Data lane 2  is at the position 5." id="POSITION_5" token="POSITION_5" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="+/- pin differential pin order of DATA lane 1" end="7" id="DATA1_POL" rwaccess="RW" width="1">
    <bitenum description="+/- pin order (CSI2.DX=+ and CSI2.DY=-)" id="PLUSMINUS" token="PLUSMINUS" value="0"></bitenum>
    <bitenum description="-/+ pin order (CSI2.DX=- and CSI2.DY=+)" id="MINUSPLUS" token="MINUSPLUS" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="Position and order of the DATA  lane 1. The data lane 1 is always present." end="4" id="DATA1_POSITION" rwaccess="RW" width="3">
    <bitenum description="Data lane 1 is at the position 1." id="POSITION_1" token="POSITION_1" value="1"></bitenum>
    <bitenum description="Data lane 1 is at the position 2." id="POSITION_2" token="POSITION_2" value="2"></bitenum>
    <bitenum description="Data lane 1 is at the position 3." id="POSITION_3" token="POSITION_3" value="3"></bitenum>
    <bitenum description="Data lane 1 is at the position 4." id="POSITION_4" token="POSITION_4" value="4"></bitenum>
    <bitenum description="Data lane 1  is at the position 5." id="POSITION_5" token="POSITION_5" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="+/- differential pin order of CLOCK lane." end="3" id="CLOCK_POL" rwaccess="RW" width="1">
    <bitenum description="+/- pin order (CSI2.DX=+ and CSI2.DY=-)" id="PLUSMINUS" token="PLUSMINUS" value="0"></bitenum>
    <bitenum description="-/+ pin order (CSI2.DX=- and CSI2.DY=+)" id="MINUSPLUS" token="MINUSPLUS" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Position and order of the CLOCK lane. 0, 5, 6 and 7 are reserved. The clock lane is always present but can not be at the position 5 even if the COMPLEX IO consists of 5 lanes." end="0" id="CLOCK_POSITION" rwaccess="RW" width="3">
    <bitenum description="Clock lane is at the position 1." id="POSITION_1" token="POSITION_1" value="1"></bitenum>
    <bitenum description="Clock lane is at the position 2." id="POSITION_2" token="POSITION_2" value="2"></bitenum>
    <bitenum description="Clock lane is at the position 3." id="POSITION_3" token="POSITION_3" value="3"></bitenum>
    <bitenum description="Clock lane is at the position 4." id="POSITION_4" token="POSITION_4" value="4"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_COMPLEXIO_IRQSTATUS" description="INTERRUPT STATUS REGISTER - All errors from complex IO " id="CSI2_COMPLEXIO_IRQSTATUS" offset="0x4C" width="32">
    
  <bitfield begin="31" description="All the ULPSActiveNOT signals corresponding to the lanes with TXULPSExit being high are high." end="31" id="ULPSACTIVENOT_ALL1_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="All signals ULPSActiveNOT are 0" end="30" id="ULPSACTIVENOT_ALL0_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="" end="29" id="RESERVED18" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="29" description="Contention LP1 error for lane #5" end="29" id="ERRCONTENTIONLP1_5_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description="" end="28" id="RESERVED17" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="28" description="Contention LP0 error for lane #5" end="28" id="ERRCONTENTIONLP0_5_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description="" end="27" id="RESERVED16" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="27" description="Contention LP1 error for lane #4" end="27" id="ERRCONTENTIONLP1_4_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="26" description="" end="26" id="RESERVED15" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description="Contention LP0 error for lane #4" end="26" id="ERRCONTENTIONLP0_4_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="25" description="" end="25" id="RESERVED14" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="25" description="Contention LP1 error for lane #3" end="25" id="ERRCONTENTIONLP1_3_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="24" description="" end="24" id="RESERVED13" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="24" description="Contention LP0 error for lane #3" end="24" id="ERRCONTENTIONLP0_3_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description="Contention LP1 error for lane #2" end="23" id="ERRCONTENTIONLP1_2_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="22" description="Contention LP0 error for lane #2" end="22" id="ERRCONTENTIONLP0_2_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="21" description="Contention LP1 error for lane #1" end="21" id="ERRCONTENTIONLP1_1_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description="Contention LP0 error for lane #1" end="20" id="ERRCONTENTIONLP0_1_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description="Reserved" end="19" id="RESERVED11" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="19" description="Lane #5 in Ultra Low Power State" end="19" id="STATEULPS5_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="18" description="Reserved" end="18" id="RESERVED10" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="Lane #4 in Ultra Low Power Mode" end="18" id="STATEULPS4_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description="Reserved" end="17" id="RESERVED9" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="17" description="Lane #3 in Ultra Low Power State" end="17" id="STATEULPS3_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description="Lane #2 in Ultra Low Power State" end="16" id="STATEULPS2_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="Lane #1 in Ultra Low Power State" end="15" id="STATEULPS1_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="Reserved" end="14" id="RESERVED8" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Control error for lane #5" end="14" id="ERRCONTROL5_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="Reserved" end="13" id="RESERVED7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="13" description="Control error for lane #4" end="13" id="ERRCONTROL4_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description="Reserved" end="12" id="RESERVED6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="12" description="Control error for lane #3" end="12" id="ERRCONTROL3_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description="Control error for lane #2" end="11" id="ERRCONTROL2_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="10" description="Control error for lane #1" end="10" id="ERRCONTROL1_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description="Reserved" end="9" id="RESERVED5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="9" description="Escape entry error for lane #5" end="9" id="ERRESC5_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="Reserved" end="8" id="RESERVED4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Escape entry error for lane #4" end="8" id="ERRESC4_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="Reserved" end="7" id="RESERVED3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="Escape entry error for lane #3" end="7" id="ERRESC3_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="Escape entry error for lane #2" end="6" id="ERRESC2_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Escape entry error for lane #1" end="5" id="ERRESC1_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="Reserved" end="4" id="RESERVED2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="Low power Data transmission synchronization error for lane #5" end="4" id="ERRSYNCESC5_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="Reserved" end="3" id="RESERVED1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="Low power Data transmission synchronization error for lane #4" end="3" id="ERRSYNCESC4_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Reserved" end="2" id="RESERVED" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Low power Data transmission synchronization error for lane #3" end="2" id="ERRSYNCESC3_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Low power Data transmission synchronization error for lane #2" end="1" id="ERRSYNCESC2_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Low power Data transmission synchronization error for lane #1" end="0" id="ERRSYNCESC1_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_COMPLEXIO_IRQENABLE" description="INTERRUPT ENABLE REGISTER - All errors from complex IO " id="CSI2_COMPLEXIO_IRQENABLE" offset="0x50" width="32">
    
  <bitfield begin="31" description="All the ULPSActiveNOT signals corresponding to the lanes with TXULPSExit being high are high." end="31" id="ULPSACTIVENOT_ALL1_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="All signals ULPSActiveNOT are 0" end="30" id="ULPSACTIVENOT_ALL0_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="Contention LP1 error for lane #5" end="29" id="ERRCONTENTIONLP1_5_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="Write 0's for future compatibility. Reads returns 0." end="29" id="RESERVED18" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="28" description="Write 0's for future compatibility. Reads returns 0." end="28" id="RESERVED17" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="28" description="Contention LP0 error for lane #5" end="28" id="ERRCONTENTIONLP0_5_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description="Write 0's for future compatibility. Reads returns 0." end="27" id="RESERVED16" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="27" description="Contention LP1 error for lane #4" end="27" id="ERRCONTENTIONLP1_4_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="26" description="Write 0's for future compatibility. Reads returns 0." end="26" id="RESERVED15" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description="Contention LP0 error for lane #4" end="26" id="ERRCONTENTIONLP0_4_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="25" description="Write 0's for future compatibility. Reads returns 0." end="25" id="RESERVED14" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="25" description="Contention LP1 error for lane #3" end="25" id="ERRCONTENTIONLP1_3_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="24" description="" end="24" id="RESERVED13" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="24" description="Contention LP0 error for lane #3" end="24" id="ERRCONTENTIONLP0_3_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description="Contention LP1 error for lane #2" end="23" id="ERRCONTENTIONLP1_2_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="22" description="Contention LP0 error for lane #2" end="22" id="ERRCONTENTIONLP0_2_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="21" description="Contention LP1 error for lane #1" end="21" id="ERRCONTENTIONLP1_1_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description="Contention LP0 error for lane #1" end="20" id="ERRCONTENTIONLP0_1_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description="" end="19" id="RESERVED12" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="19" description="Lane #5 in Ultra Low Power State" end="19" id="STATEULPS5_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="18" description="" end="18" id="RESERVED11" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="Lane #4 in Ultra Low Power State" end="18" id="STATEULPS4_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description="" end="17" id="RESERVED10" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="17" description="Lane #3 in Ultra Low Power State" end="17" id="STATEULPS3_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description="Lane #2 in Ultra Low Power State" end="16" id="STATEULPS2_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="Lane #1 in Ultra Low Power State" end="15" id="STATEULPS1_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="" end="14" id="RESERVED9" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Control error for lane #5" end="14" id="ERRCONTROL5_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="" end="13" id="RESERVED8" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="13" description="Control error for lane #4" end="13" id="ERRCONTROL4_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description="" end="12" id="RESERVED7" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="12" description="Control error for lane #3" end="12" id="ERRCONTROL3_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description="Control error for lane #2" end="11" id="ERRCONTROL2_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="10" description="Control error for lane #1" end="10" id="ERRCONTROL1_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description="" end="9" id="RESERVED6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="9" description="Escape entry error for lane #5" end="9" id="ERRESC5_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="" end="8" id="RESERVED5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Escape entry error for lane #4" end="8" id="ERRESC4_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="" end="7" id="RESERVED4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="Escape entry error for lane #3" end="7" id="ERRESC3_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="Escape entry error for lane #2" end="6" id="ERRESC2_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Escape entry error for lane #1" end="5" id="ERRESC1_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="" end="4" id="RESERVED3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="Low power Data transmission synchronization error for lane #5" end="4" id="ERRSYNCSESC5_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="" end="3" id="RESERVED2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="Low power Data transmission synchronization error for lane #4" end="3" id="ERRSYNCSESC4_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="" end="2" id="RESERVED1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Low power Data transmission synchronization error for lane #3" end="2" id="ERRSYNCSESC3_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Low power Data transmission synchronization error for lane #2" end="1" id="ERRSYNCSESC2_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Low power Data transmission synchronization error  for lane #1" end="0" id="ERRSYNCSESC1_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_CLK_CTRL" description="CLOCK CONTROL  This register controls the CLOCK GENERATION. The register can be modified only when IF_EN is reset." id="CSI2_CLK_CTRL" offset="0x54" width="32">
    
  <bitfield begin="31" description="Command for power control of the CSI2 PLL Control module" end="30" id="PLL_PWR_CMD" rwaccess="RW" width="2">
    <bitenum description="Command to change to OFF state" id="STATE_OFF" token="STATE_OFF" value="0"></bitenum>
    <bitenum description="Command to change to ON state for  PLL only (HSDIVISER is OFF)" id="STATE_ON_HSCLK" token="STATE_ON_HSCLK" value="1"></bitenum>
    <bitenum description="Command to change to ON state for both PLL and HSDIVISER" id="STATE_ON_ALL" token="STATE_ON_ALL" value="2"></bitenum>
    <bitenum description="Command to change to ON state for both PLL and HSDIVISER (no clock output to the CSI2 complex IO)" id="STATE_ON_DIV" token="STATE_ON_DIV" value="3"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="Status of the power control of the CSI2 PLL Control module" end="28" id="PLL_PWR_STATUS" rwaccess="R" width="2">
    <bitenum description="CSI2 PLL Control module in OFF state" id="STATE_OFF" token="STATE_OFF" value="0"></bitenum>
    <bitenum description="CSI2 PLL Control module in ON state for  PLL only (HSDIVISER is OFF)" id="STATE_ON_HSCLK" token="STATE_ON_HSCLK" value="1"></bitenum>
    <bitenum description="CSI2 PLL Control module in ON state for both PLL and HSDIVISER" id="STATE_ON_ALL" token="STATE_ON_ALL" value="2"></bitenum>
    <bitenum description="CSI2 PLL Control module in ON state for both PLL and HSDIVISER (no clock output to the CSI2 complex IO)" id="STATE_ON_DIV" token="STATE_ON_DIV" value="3"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description="" end="22" id="RESERVED" rwaccess="R" width="6"></bitfield>
    
  <bitfield begin="21" description="Defines if the functional is higher or lower than 30 MHz. The information is used to define synchronization to be used for RxValidEsc. " end="21" id="LP_RX_SYNCHRO_ENABLE" rwaccess="RW" width="1">
    <bitenum description="The CSI2 functional clock is equal or slower than 30 MHz. The synchronization is falling/rising." id="LOWSPEED" token="LOWSPEED" value="0"></bitenum>
    <bitenum description="The CSI2 functional clock is higher than 30 MHz. The synchronization is rising/rising." id="HIGHSPEED" token="HIGHSPEED" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description="Controls the gating of the TXCLKESC clock." end="20" id="LP_CLK_ENABLE" rwaccess="RW" width="1">
    <bitenum description="Disabled. The clock is not generated. The value of LP_CLK_DIVISOR is not used and does not need to be programmed." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. The clock is generated. The value of LP_CLK_DIVISOR is used and needs to be programmed." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description="In case HS_AUTO_STOP_ENABLE=0, the bit-field allows manual control of the assertion/de-assertion of the signal CSI2StopClk by the user." end="19" id="HS_MANUAL_STOP_CTRL" rwaccess="RW" width="1">
    <bitenum description="CSI2StopClk de-assertion unconditionally." id="DEASSERTION" token="DEASSERTION" value="0"></bitenum>
    <bitenum description="CSI2StopClk assertion unconditionally." id="ASSERTION" token="ASSERTION" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="18" description="Enables the automatic assertion/de-assertion of CSI2StopClk signal." end="18" id="HS_AUTO_STOP_ENABLE" rwaccess="RW" width="1">
    <bitenum description="Auto mode disabled." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Auto mode enabled." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="17" description="Indicates the size of LP NULL Packets to be sent automatically when after the last LP packet transfer. It is used by the receiver to drain its internal pipeline. The valid values are from 0 to 3 bytes for the payload size." end="16" id="LP_CLK_NULL_PACKET_SIZE" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="15" description="Enables the generation of NULL packet in low speed." end="15" id="LP_CLK_NULL_PACKET_ENABLE" rwaccess="RW" width="1">
    <bitenum description="Disabled. The NULL packet is not sent in LP mode after the last LP packet." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. The NULL packet is sent in LP mode after the last LP packet." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="Gates SCPClk clock provided to CSI2-PHY and PLL-CTRL module." end="14" id="CIO_CLK_ICG" rwaccess="RW" width="1">
    <bitenum description="Disabled. SCPClk is not generated. It remains at 0." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. SCPClk is generated (OCP_CLK/4)" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="Defines if the DDR clock is also sent when there is no HS packets sent to the peripheral (low power mode). So TXRequest for the clock lane is not de-asserted. " end="13" id="DDR_CLK_ALWAYS_ON" rwaccess="RW" width="1">
    <bitenum description="Disabled. The DDR clock is only provided when HS packets are sent." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. The DDR clock is always sent to the peripheral regardless of the state of the data lanes (HS or LS mode)." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description="Defines the ratio to be used for the generation of the Low Power mode clock from CSI2 functional clock. The supported values are from 1 to 8191(the value 0 is invalid). The output frequency shall be in the range between 20 MHz and 32 kHz." end="0" id="LP_CLK_DIVISOR" rwaccess="RW" width="13"></bitfield>
  </register>
  
  
  <register acronym="CSI2_TIMING1" description="TIMING1 REGISTER  This register controls the CSI2 Protocol Engine module timers. Any bit-field can be modified while CSI2_CTRL.IF_EN is set to '1'. It is used to indicate the number of CSI2_CLK functional clock cycles for the timers FORCE_TX_STOP_TIMER and TA_TO_TIMER" id="CSI2_TIMING1" offset="0x58" width="32">
    
  <bitfield begin="31" description="Enables the turn-around timer" end="31" id="TA_TO" rwaccess="RW" width="1">
    <bitenum description="Turn-around counter is disabled." id="DEASSERTION" token="DEASSERTION" value="0"></bitenum>
    <bitenum description="Turn-around counter is enabled (required to receive TA interrupt in case the turn-around procedure is not successful)." id="ASSERTION" token="ASSERTION" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="Multiplication factor for the number of CSI2_CLK functional clock cycles defined in TA_TO_COUNTER bit-field" end="30" id="TA_TO_X16" rwaccess="RW" width="1">
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in TA_TO_COUNTER is multiplied by 1x" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in TA_TO_COUNTER is multiplied by 16x" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="Multiplication factor for the number of CSI2_CLK functional clock cycles defined in TA_TO_COUNTER bit-field" end="29" id="TA_TO_X8" rwaccess="RW" width="1">
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in TA_TO_COUNTER is multiplied by 1x" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in TA_TO_COUNTER is multiplied by 8x" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description="Turn around counter. It indicates the number of CSI2_CLK function clock  to wait for the change of the Direction PPI signal according to the TurnRequest signal The value is from 0 to 8191." end="16" id="TA_TO_COUNTER" rwaccess="RW" width="13"></bitfield>
    
  <bitfield begin="15" description="Control of ForceTxStopMode signal" end="15" id="FORCE_TX_STOP_MODE_IO" rwaccess="RW" width="1">
    <bitenum description="De-assertion of ForceTxStopMode. The HW reset the bit at the end of the ForceTXStopMode assertion. The SW can reset the bit in order to stop the assertion of the ForceTXStopMode signal prior to the completion of the period." id="DEASSERTION" token="DEASSERTION" value="0"></bitenum>
    <bitenum description="Assertion of ForceTxStopMode" id="ASSERTION" token="ASSERTION" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="Multiplication factor for the number of CSI2_CLK functional clock cycles defined in STOP_STATE_COUNTER_IO bit-field" end="14" id="STOP_STATE_X16_IO" rwaccess="RW" width="1">
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in STOP_STATE _COUNTER_IO is multiplied by 1x" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in STOP_STATE _COUNTER_IO is multiplied by 16x" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="Multiplication factor for the number of CSI2_CLK functional clock cycles defined in STOP_STATE_COUNTER_IO bit-field" end="13" id="STOP_STATE_X4_IO" rwaccess="RW" width="1">
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in STOP_STATE _COUNTER is multiplied by 1x" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in STOP_STATE _COUNTER_IO is multiplied by 4x" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description="Stop state counter. It indicates the number of CSI2_CLK function clock to assert ForceTXStopMode signal. The value is from 0 to 8191." end="0" id="STOP_STATE_COUNTER_IO" rwaccess="RW" width="13"></bitfield>
  </register>
  
  
  <register acronym="CSI2_TIMING2" description="TIMING2 REGISTER  This register controls the CSI2 Protocol Engine module timers. Any bit-field can be modified while CSI2_CTRL.IF_EN is set to '1'. It is used to indicate the number of CSI2_CLK functional clock cycles for the timers HS_TX_TIMER and LP_RX_TIMER" id="CSI2_TIMING2" offset="0x5C" width="32">
    
  <bitfield begin="31" description="Enables the HS TX timer." end="31" id="HS_TX_TO" rwaccess="RW" width="1">
    <bitenum description="Time-out counter is disabled." id="DEASSERTION" token="DEASSERTION" value="0"></bitenum>
    <bitenum description="Time-out counter is enabled (required to receive TA interrupt in case the turn-around procedure is not successful)." id="ASSERTION" token="ASSERTION" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="Multiplication factor for the number of BYTE_CLK functional clock cycles defined in HS_TX_COUNTER bit-field" end="30" id="HS_TX_TO_X64" rwaccess="RW" width="1">
    <bitenum description="The number of BYTE_CLK functional clock cycles defined in HS_TX_TO_COUNTER is multiplied by 1x" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="The number of BYTE_CLK functional clock cycles defined in HS_TX_TO_COUNTER is multiplied by 64x" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="Multiplication factor for the number of BYTE_CLK functional clock cycles defined in HS_TX_COUNTER bit" end="29" id="HS_TX_TO_X16" rwaccess="RW" width="1">
    <bitenum description="The number of BYTE_CLK functional clock cycles defined in HS_TX_TO_COUNTER is multiplied by 1x" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="The number of BYTE_CLK functional clock cycles defined in HS_TX_TO_COUNTER is multiplied by 16x" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description="HS_TX_TIMER counter. It indicates the number of BYTE_CLK function clock for the HS TX timer. The value is from 0 to 8191." end="16" id="HS_TX_TO_COUNTER" rwaccess="RW" width="13"></bitfield>
    
  <bitfield begin="15" description="Enables the LP RX timer." end="15" id="LP_RX_TO" rwaccess="RW" width="1">
    <bitenum description="Turn-around counter is disabled." id="DEASSERTION" token="DEASSERTION" value="0"></bitenum>
    <bitenum description="Turn-around counter is enabled (required to receive TA interrupt in case the turn-around procedure is not successful)." id="ASSERTION" token="ASSERTION" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="Multiplication factor for the number of CSI2_CLK functional clock cycles defined in LP_RX_COUNTER bit-field" end="14" id="LP_RX_TO_X16" rwaccess="RW" width="1">
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in LP_RX_TO_COUNTER is multiplied by 1x" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in LP_RX_TO_COUNTER is multiplied by 16x" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="Multiplication factor for the number of CSI2_CLK functional clock cycles defined in LP_RX_COUNTER bit" end="13" id="LP_RX_TO_X4" rwaccess="RW" width="1">
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in LP_RX_TO_COUNTER is multiplied by 1x" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="The number of CSI2_CLK functional clock cycles defined in LP_RX_TO_COUNTER is multiplied by 4x" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description="LP_RX_TIMER counter. It indicates the number of CSI2_CLK function clock  for the LP RX timer. The value is from 0 to 8191." end="0" id="LP_RX_TO_COUNTER" rwaccess="RW" width="13"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VM_TIMING1" description="VIDEO MODE TIMING REGISTER  This register defines the video mode timing." id="CSI2_VM_TIMING1" offset="0x60" width="32">
    
  <bitfield begin="31" description="Defines the horizontal Sync active period  used in video mode in number of byte clock cycles (PPI clock) The supported values are from 0 to 255." end="24" id="HSA" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="Defines the horizontal front porch used in video mode in number of byte clock cycles (PPI clock) The supported values are from 0 to 4095 " end="12" id="HFP" rwaccess="RW" width="12"></bitfield>
    
  <bitfield begin="11" description="Defines the horizontal back porch used in video mode in number of byte clock cycles (PPI clock) The supported values are from 0 to 4095" end="0" id="HBP" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VM_TIMING2" description="VIDEO MODE TIMING REGISTER  This register defines the video mode timing." id="CSI2_VM_TIMING2" offset="0x64" width="32">
    
  <bitfield begin="31" description="" end="28" id="RESERVED" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="27" description="Number of BYTE clock cycles for the synchronization window. An interrupt for synchronization lost is generated when the received synchornization on video port is not inside the window. CSI2 does not change its own timings if the synch is inside the window. The valid values are from 4 to 15." end="24" id="WINDOW_SYNC" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="23" description="Defines the vertical Sync active period  used in video mode in number of lines. The supported values are from 0 to 255  It is used to generate the short packet for End of Vertical synchronization." end="16" id="VSA" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Defines the vertical front porch used in video mode in number of lines. The supported values are from 0 to 255 " end="8" id="VFP" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="Defines the vertical back porch used in video mode in number of lines. The supported values are from 0 to 255 " end="0" id="VBP" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VM_TIMING3" description="VIDEO MODE TIMING REGISTER  This register defines the video mode timing." id="CSI2_VM_TIMING3" offset="0x68" width="32">
    
  <bitfield begin="31" description="Defines the number of length of the line in video mode in number of byte clock cycles (PPI clock) The supported values are from 0 to 8192. The values from 8193 to 65535 are not supported." end="16" id="TL" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Defines the number of active lines used in video mode.  The supported values are from 0 to 65535 " end="0" id="VACT" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="CSI2_CLK_TIMING" description="CLOCK TIMING REGISTER  This register controls the CSI2 Protocol Engine module timers. This register shall not be modified while CSI2_CTRL.IF_EN is set to '1'. " id="CSI2_CLK_TIMING" offset="0x6C" width="32">
    
  <bitfield begin="31" description="" end="16" id="RESERVED" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="Indicates the number of PPI Byte clock cycles between the start of the DDR clock and the assertion of the data request signal. The values from 1 to 255 are valid. The value 0 is reserved. The value is not used if CSI2_CLK_CTRL.DDR_CLK_ALWAYS_ON is set to '1' since the DDR clock is always present." end="8" id="DDR_CLK_PRE" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="Indicates the number of PPI Byte clock cycles after the de-assertion of the data request signal and the stop of the DDR clock. The values from 1 to 255 are valid. The value 0 is reserved. The value is not used if CSI2_CLK_CTRL.DDR_CLK_ALWAYS_ON is set to '1' since the DDR clock is always present." end="0" id="DDR_CLK_POST" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CSI2_TX_FIFO_VC_SIZE" description="Defines the corresponding memory entries allocated for each virtual channel. The virtual channel shall be disabled in order to allocate/un-allocate some entries in the TX FIFO." id="CSI2_TX_FIFO_VC_SIZE" offset="0x70" width="32">
    
  <bitfield begin="31" description="Size of the FIFO allocated for virtual channel 3.The valid values are from 0 to 8 for a size of the FIFO of 256x33bits corresponding to 0x33bits, 32x33bits, 64x33bits..." end="28" id="VC3_FIFO_SIZE" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="" end="27" id="RESERVED2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description="Address of the space allocated in the FIFO for virtual channel 3.The valid values are from 0 to 7 for a size of the FIFO of 256x33bits corresponding to 0, 32, 64,... for the entry address." end="24" id="VC3_FIFO_ADD" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="23" description="Size of the FIFO allocated for virtual channel 2.The valid values are from 0 to 8 for a size of the FIFO of 256x33bits corresponding to 0x33bits, 32x33bits, 64x33bits..." end="20" id="VC2_FIFO_SIZE" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="" end="19" id="RESERVED3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="Address of the space allocated in the FIFO for virtual channel 2.The valid values are from 0 to 7 for a size of the FIFO of 256x33bits corresponding to 0, 32, 64,... for the entry address." end="16" id="VC2_FIFO_ADD" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="Size of the FIFO allocated for virtual channel 1.The valid values are from 0 to 8 for a size of the FIFO of 256x33bits corresponding to 0x33bits, 32x33bits, 64x33bits..." end="12" id="VC1_FIFO_SIZE" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="" end="11" id="RESERVED1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="Address of the space allocated in the FIFO for virtual channel 1.The valid values are from 0 to 7 for a size of the FIFO of 256x33bits corresponding to 0, 32, 64,... for the entry address." end="8" id="VC1_FIFO_ADD" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description="Size of the FIFO allocated for virtual channel 0.The valid values are from 0 to 8 for a size of the FIFO of 256x33bits corresponding to 0x33bits, 32x33bits, 64x33bits..." end="4" id="VC0_FIFO_SIZE" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="" end="3" id="RESERVED" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Address of the space allocated in the FIFO for virtual channel 0.The valid values are from 0 to 7 for a size of the FIFO of 256x33bits corresponding to 0, 32, 64,... for the entry address." end="0" id="VC0_FIFO_ADD" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="CSI2_RX_FIFO_VC_SIZE" description="Defines the corresponding memory entries allocated for each virtual channel and the addresses. The virtual channel shall be disabled in order to allocate/un-allocate some entries in the RX FIFO." id="CSI2_RX_FIFO_VC_SIZE" offset="0x74" width="32">
    
  <bitfield begin="31" description="Size of the FIFO allocated for virtual channel 3.The valid values are from 0 to 8 for a size of the FIFO of 256x33bits corresponding to 0x33bits, 32x33bits, 64x33bits..." end="28" id="VC3_FIFO_SIZE" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="" end="27" id="RESERVED2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="26" description="Address of the space allocated in the FIFO for virtual channel 3.The valid values are from 0 to 7 for a size of the FIFO of 256x33bits corresponding to 0, 32, 64,... for the entry address." end="24" id="VC3_FIFO_ADD" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="23" description="Size of the FIFO allocated for virtual channel 2.The valid values are from 0 to 8 for a size of the FIFO of 256x33bits corresponding to 0x33bits, 32x33bits, 64x33bits..." end="20" id="VC2_FIFO_SIZE" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="" end="19" id="RESERVED3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="Address of the space allocated in the FIFO for virtual channel 2.The valid values are from 0 to 7 for a size of the FIFO of 256x33bits corresponding to 0, 32, 64,... for the entry address." end="16" id="VC2_FIFO_ADD" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="Size of the FIFO allocated for virtual channel 1.The valid values are from 0 to 8 for a size of the FIFO of 256x33bits corresponding to 0x33bits, 32x33bits, 64x33bits..." end="12" id="VC1_FIFO_SIZE" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="" end="11" id="RESERVED1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="Address of the space allocated in the FIFO for virtual channel 1.The valid values are from 0 to 7 for a size of the FIFO of 256x33bits corresponding to 0, 32, 64,... for the entry address." end="8" id="VC1_FIFO_ADD" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description="Size of the FIFO allocated for virtual channel 0.The valid values are from 0 to 8 for a size of the FIFO of 256x33bits corresponding to 0x33bits, 32x33bits, 64x33bits..." end="4" id="VC0_FIFO_SIZE" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="" end="3" id="RESERVED" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Address of the space allocated in the FIFO for virtual channel 0.The valid values are from 0 to 7 for a size of the FIFO of 256x33bits corresponding to 0, 32, 64,... for the entry address." end="0" id="VC0_FIFO_ADD" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="CSI2_COMPLEXIO_CFG2" description="COMPLEXIO CONFIGURATION REGISTER for the complex IO  This register contains the lane configuration for the ULPS for each lane." id="CSI2_COMPLEXIO_CFG2" offset="0x78" width="32">
    
  <bitfield begin="31" description="" end="18" id="RESERVED_2" rwaccess="R" width="14"></bitfield>
    
  <bitfield begin="17" description="Indicates when there are still pending operations for VCs configured for LP mode. Forced to 1 when at least one VC is enabled and configured for LP mode." end="17" id="LP_BUSY" rwaccess="R" width="1">
    <bitenum description="LP logic is idle" id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="LP logic is active" id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description="Indicates when there are still pending operations for VCs configured for HS mode. Forced to 1 when at least one VC is enabled and configured for HS mode." end="16" id="HS_BUSY" rwaccess="R" width="1">
    <bitenum description="HS logic is idle" id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="HS logic is active" id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="" end="10" id="RESERVED" rwaccess="R" width="6"></bitfield>
    
  <bitfield begin="9" description="" end="9" id="RESERVED6" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="9" description="Enables the ULPS for the lane #5. The HW shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the CSI2 protocol engine and the CSI2 protocol engine has control of the bus (BTA has not been sent). The state of the signal TxRequestEsc is changed if lane #5 is a data lane. The state of the signal TxUlpsClk is changed if lane #5 is a clock lane. There will be a latency depending on the frequency of TxClkExc.  This bit should be read back to confirm a write has been effective." end="9" id="LANE5_ULPS_SIG2" rwaccess="RW" width="1">
    <bitenum description="READ:Inactive state effective. WRITE: Request to change to inactive state" id="INACTIVE" token="INACTIVE" value="0"></bitenum>
    <bitenum description="READ:Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc." id="ACTIVE" token="ACTIVE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="Enables the ULPS for the lane #4. The HW shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the CSI2 protocol engine and the CSI2 protocol engine has control of the bus (BTA has not been sent). The state of the signal TxRequestEsc is changed if lane #4 is a data lane. The state of the signal TxUlpsClk is changed if lane #4 is a clock lane. There will be a latency depending on the frequency of TxClkExc.  This bit should be read back to confirm a write has been effective." end="8" id="LANE4_ULPS_SIG2" rwaccess="RW" width="1">
    <bitenum description="READ: Inactive state effective. WRITE: Request to change to inactive state" id="INACTIVE" token="INACTIVE" value="0"></bitenum>
    <bitenum description="READ:Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc." id="ACTIVE" token="ACTIVE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="" end="8" id="RESERVED5" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="RESERVED4" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="Enables the ULPS for the lane #3. The HW shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the CSI2 protocol engine and the CSI2 protocol engine has control of the bus (BTA has not been sent). The state of the signal TxRequestEsc is changed if lane #3 is a data lane. The state of the signal TxUlpsClk is changed if lane #3  is a clock lane. There will be a latency depending on the frequency of TxClkExc.  This bit should be read back to confirm a write has been effective." end="7" id="LANE3_ULPS_SIG2" rwaccess="RW" width="1">
    <bitenum description="READ: Inactive state effective. WRITE: Request to change to inactive state" id="INACTIVE" token="INACTIVE" value="0"></bitenum>
    <bitenum description="READ:Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc." id="ACTIVE" token="ACTIVE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="Enables the ULPS for the lane #2. The HW shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the CSI2 protocol engine and the CSI2 protocol engine has control of the bus (BTA has not been sent). The state of the signal TxRequestEsc is changed if lane #2 is a data lane. The state of the signal TxUlpsClk is changed if lane #2 is a clock lane. There will be a latency depending on the frequency of TxClkExc.  This bit should be read back to confirm a write has been effective." end="6" id="LANE2_ULPS_SIG2" rwaccess="RW" width="1">
    <bitenum description="READ: Inactive state effective. WRITE: Request to change to inactive state" id="INACTIVE" token="INACTIVE" value="0"></bitenum>
    <bitenum description="READ:Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc." id="ACTIVE" token="ACTIVE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Enables the ULPS for the lane #1. The HW shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the CSI2 protocol engine and the CSI2 protocol engine has control of the bus (BTA has not been sent).  The state of the signal TxRequestEsc is changed if lane #1 is a data lane. The state of the signal TxUlpsClk is changed if lane #1 is a clock lane. There will be a latency depending on the frequency of TxClkExc.  This bit should be read back to confirm a write has been effective." end="5" id="LANE1_ULPS_SIG2" rwaccess="RW" width="1">
    <bitenum description="READ: Inactive state effective. WRITE: Request to change to inactive state" id="INACTIVE" token="INACTIVE" value="0"></bitenum>
    <bitenum description="READ:Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc." id="ACTIVE" token="ACTIVE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="Write 0's for future compatibility. Reads returns 0." end="4" id="RESERVED3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="Enables the ULPS for the lane #5. The HW shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the CSI2 protocol engine and the CSI2 protocol engine has control of the bus (BTA has not been sent). The state of the signal TxULPSExit is changed  if the lane #5 is a clock lane. There will be a latency depending on the frequency of TxClkExc.  This bit should be read back to confirm a write has been effective." end="4" id="LANE5_ULPS_SIG1" rwaccess="RW" width="1">
    <bitenum description="READ:Inactive state effective. WRITE: Request to change to inactive state" id="INACTIVE" token="INACTIVE" value="0"></bitenum>
    <bitenum description="READ:Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc" id="ACTIVE" token="ACTIVE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="" end="3" id="RESERVED2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="Enables the ULPS for the lane #4. The HW shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the CSI2 protocol engine and the CSI2 protocol engine has control of the bus (BTA has not been sent). The state of the signal TxULPSExit is changed  if the lane #4 is a clock lane. There will be a latency depending on the frequency of TxClkExc.  This bit should be read back to confirm a write has been effective." end="3" id="LANE4_ULPS_SIG1" rwaccess="RW" width="1">
    <bitenum description="READ: Inactive state effective. WRITE: Request to change to inactive state" id="INACTIVE" token="INACTIVE" value="0"></bitenum>
    <bitenum description="READ:Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc" id="ACTIVE" token="ACTIVE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="" end="2" id="RESERVED1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Enables the ULPS for the lane #3. The HW shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the CSI2 protocol engine and the CSI2 protocol engine has control of the bus (BTA has not been sent). The state of the signal TxULPSExit is changed  if the lane #3 is a clock lane. There will be a latency depending on the frequency of TxClkExc.  This bit should be read back to confirm a write has been effective." end="2" id="LANE3_ULPS_SIG1" rwaccess="RW" width="1">
    <bitenum description="READ: Inactive state effective. WRITE: Request to change to inactive state" id="INACTIVE" token="INACTIVE" value="0"></bitenum>
    <bitenum description="READ:Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc" id="ACTIVE" token="ACTIVE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Enables the ULPS for the lane #2. The HW shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the CSI2 protocol engine and the CSI2 protocol engine has control of the bus (BTA has not been sent). The state of the signal TxULPSExit is changed  if the lane #2 is a clock lane. There will be a latency depending on the frequency of TxClkExc.  This bit should be read back to confirm a write has been effective." end="1" id="LANE2_ULPS_SIG1" rwaccess="RW" width="1">
    <bitenum description="READ: Inactive state effective. WRITE: Request to change to inactive state" id="INACTIVE" token="INACTIVE" value="0"></bitenum>
    <bitenum description="READ:Active state effective. WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc" id="ACTIVE" token="ACTIVE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Enables the ULPS for the lane #1. The HW shall change the state of the lane to ULPS only when it is in stop state and there is no data pending inside the CSI2 protocol engine and the CSI2 protocol engine has control of the bus (BTA has not been sent).  The state of the signal TxULPSExit is changed  if the lane #1 is a clock lane. There will be a latency depending on the frequency of TxClkExc.  This bit should be read back to confirm a write has been effective." end="0" id="LANE1_ULPS_SIG1" rwaccess="RW" width="1">
    <bitenum description="READ:Inactive state effective. WRITE: Request to change to inactive state" id="INACTIVE" token="INACTIVE" value="0"></bitenum>
    <bitenum description="READ:Active state effective WRITE: Change request to active. If the lane is a data lane, TxRequestEsc is asserted and synchronously TxUlpsEsc is asserted for one period of TxClkEsc" id="ACTIVE" token="ACTIVE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_RX_FIFO_VC_FULLNESS" description="Defines the fullness of each space allocated for each virtual channel." id="CSI2_RX_FIFO_VC_FULLNESS" offset="0x7C" width="32">
    
  <bitfield begin="31" description="Fullness of the FIFO allocated for virtual channel 3.The valid values are from 0 to CSI2_GNQ.RX_FIFODEPTH-1 corresponding to 1x33-bit,...up to CSI2_GNQ.RX_FIFODEPTH x33-bit." end="24" id="VC3_FIFO_FULLNESS" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Fullness of the FIFO allocated for virtual channel 2.The valid values are from 0 to CSI2_GNQ.RX_FIFODEPTH-1 corresponding to 1x33-bit,...up to CSI2_GNQ.RX_FIFODEPTH x33-bit." end="16" id="VC2_FIFO_FULLNESS" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Fullness of the FIFO allocated for virtual channel 1.The valid values are from 0 to CSI2_GNQ.RX_FIFODEPTH-1 corresponding to 1x33-bit,...up to CSI2_GNQ.RX_FIFODEPTH x33-bit." end="8" id="VC1_FIFO_FULLNESS" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Fullness of the FIFO allocated for virtual channel 0.The valid values are from 0 to CSI2_GNQ.RX_FIFODEPTH-1 corresponding to 1x33-bit,...up to CSI2_GNQ.RX_FIFODEPTH x33-bit." end="0" id="VC0_FIFO_FULLNESS" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VM_TIMING4" description="VIDEO MODE TIMING REGISTER  This register defines the video mode timing." id="CSI2_VM_TIMING4" offset="0x80" width="32">
    
  <bitfield begin="31" description="" end="24" id="RESERVED" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Defines the number of HS byte clock cycles that can be used for interleaving High Speed command mode packet into Video Mode stream during HSA blanking period. The supported values are from 0 to 255." end="16" id="HSA_HS_INTERLEAVING" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Defines the number of HS byte clock cycles that can be used for interleaving High Speed command mode packet into Video Mode stream during HFP blanking period. The supported values are from 0 to 255 " end="8" id="HFP_HS_INTERLEAVING" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="Defines the number of HS byte clock cycles that can be used for interleaving High Speed command mode packet into Video Mode stream during HBP blanking period. The supported values are from 0 to 255 " end="0" id="HBP_HS_INTERLEAVING" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CSI2_TX_FIFO_VC_EMPTINESS" description="Defines the emptiness of each space allocated for each virtual channel." id="CSI2_TX_FIFO_VC_EMPTINESS" offset="0x84" width="32">
    
  <bitfield begin="31" description="Emptiness of the FIFO allocated for virtual channel 3.The valid values are from 0 to CSI2_GNQ.TX_FIFODEPTH-1 corresponding to 1x33-bit,...up to CSI2_GNQ.TX_FIFODEPTH x33-bit." end="24" id="VC3_FIFO_EMPTINESS" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Emptiness of the FIFO allocated for virtual channel 2.The valid values are from 0 to CSI2_GNQ.TX_FIFODEPTH-1 corresponding to 1x33-bit,...up to CSI2_GNQ.TX_FIFODEPTH x33-bit." end="16" id="VC2_FIFO_EMPTINESS" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="15" description="Emptiness of the FIFO allocated for virtual channel 1.The valid values are from 0 to CSI2_GNQ.TX_FIFODEPTH-1 corresponding to 1x33-bit,...up to CSI2_GNQ.TX_FIFODEPTH x33-bit." end="8" id="VC1_FIFO_EMPTINESS" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Emptiness of the FIFO allocated for virtual channel 0.The valid values are from 0 to CSI2_GNQ.TX_FIFODEPTH-1 corresponding to 1x33-bit,...up to CSI2_GNQ.TX_FIFODEPTH x33-bit." end="0" id="VC0_FIFO_EMPTINESS" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VM_TIMING5" description="VIDEO MODE TIMING REGISTER  This register defines the video mode timing." id="CSI2_VM_TIMING5" offset="0x88" width="32">
    
  <bitfield begin="31" description="" end="24" id="RESERVED" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="Defines the number of bytes of Low Power command mode packets that can be sent on PPI link during HSA blanking period. The supported values are from 0 to 255." end="16" id="HSA_LP_INTERLEAVING" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Defines the number of bytes of Low Power command mode packets that can be sent on PPI link during HFP blanking period. The supported values are from 0 to 255 " end="8" id="HFP_LP_INTERLEAVING" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="Defines the number of bytes of Low Power command mode packets that can be sent on PPI link during HBP blanking period. The supported values are from 0 to 255 " end="0" id="HBP_LP_INTERLEAVING" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VM_TIMING6" description="VIDEO MODE TIMING REGISTER  This register defines the video mode timing." id="CSI2_VM_TIMING6" offset="0x8C" width="32">
    
  <bitfield begin="31" description="Defines the number of HS byte clock cycles that can be used for interleaving High Speed command mode packet into Video Mode stream during blanking periods during VSA, VBP, VFP periods inside one video frame on PPI link. The supported values are from 0 to 65535 ." end="16" id="BL_HS_INTERLEAVING" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Defines the maximum number of bytes of Low Power command mode packets that can be sent on PPI link during blanking periods during VSA, VBP or VFP periods inside one video frame on PPI link. The supported values are from 0 to 65535 " end="0" id="BL_LP_INTERLEAVING" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VM_TIMING7" description="Defines the minimum number of HS  bytes clock cycles that are required to allow for the delays in entering and exiting HS mode. The supported values are from 0 to 65535 " id="CSI2_VM_TIMING7" offset="0x90" width="32">
    
  <bitfield begin="31" description="Defines the number of HS byte clock cycles necessary for entering to HS mode. It corresponds to the delay in number of HS clock cycles from assertion of TxRequestHS signal to 1 until assertion of TxReadyHS signal to 1. The supported values are from 0 to 65535 ." end="16" id="ENTER_HS_MODE_LATENCY" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="Defines the number of HS byte clock cycles necessary for exiting from HS mode. It corresponds to the maximum delay in number of HS byte clock from de-assertion of TxRequestHS signal until PPI link is in LP-11 state from which a new entrance to HS mode can be initiated which does not take more than ENTER_HS_MODE_LATENCY clock cycles. The supported values are from 0 to 65535 " end="0" id="EXIT_HS_MODE_LATENCY" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="CSI2_STOPCLK_TIMING" description="Number of functional clock cycles to wait for TxByteClkHS to stop/start after change in CSI2StopClk signal" id="CSI2_STOPCLK_TIMING" offset="0x94" width="32">
    
  <bitfield begin="31" description="" end="8" id="RESERVED" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="Clock gating latency from CSI2 Protocol to TxByteClkHS" end="0" id="CSI2_STOPCLK_LATENCY" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CSI2_CTRL2" description="Additional control bits for use with Video Port 2" id="CSI2_CTRL2" offset="0x98" width="32">
    
  <bitfield begin="31" description="Reserved" end="14" id="RESERVED" rwaccess="R" width="18"></bitfield>
    
  <bitfield begin="13" description="Number of line buffers to be used while receiving data on the video port. The valid values are from 0 to CSI2_GNQ.VP2_NB_LINE_BUFFER." end="12" id="LINE_BUFFER" rwaccess="RW" width="2">
    <bitenum description="No line buffer" id="F0" token="F0" value="0"></bitenum>
    <bitenum description="1 line buffer" id="F1" token="F1" value="1"></bitenum>
    <bitenum description="2 line buffers" id="F2" token="F2" value="2"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description="VP vertical synchronization signal polarity" end="11" id="VP_VSYNC_POL" rwaccess="RW" width="1">
    <bitenum description="VSYNC signal on the video port is active low." id="LOW" token="LOW" value="0"></bitenum>
    <bitenum description="VSYNC signal on the video port is active high." id="HIGH" token="HIGH" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="10" description="VP horizontal synchronization signal polarity" end="10" id="VP_HSYNC_POL" rwaccess="RW" width="1">
    <bitenum description="HSYNC signal on the video port is active low." id="LOW" token="LOW" value="0"></bitenum>
    <bitenum description="HSYNC signal on the video port is active high." id="HIGH" token="HIGH" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description="VP data enable signal polarity" end="9" id="VP_DE_POL" rwaccess="RW" width="1">
    <bitenum description="DE signal on the video port is active low." id="LOW" token="LOW" value="0"></bitenum>
    <bitenum description="DE signal on the video port is active high." id="HIGH" token="HIGH" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="VP clock polarity" end="8" id="VP_CLK_POL" rwaccess="RW" width="1">
    <bitenum description="The CSI2 Protocol Engine module captures the data on the VP on the pixel clock falling edge. The module connected to the VP shall drive the data on the pixel clock rising edge." id="FALLING" token="FALLING" value="0"></bitenum>
    <bitenum description="The CSI2 Protocol Engine module captures the data on the VP on the pixel clock raising edge. The module connected to the VP shall drive the data on the pixel clock falling edge." id="RISING" token="RISING" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="Defines the size of the video port data bus" end="6" id="VP_DATA_BUS_WIDTH" rwaccess="RW" width="2">
    <bitenum description="16-bits data width (LSB of the 24-bit video port data bus)" id="F16" token="F16" value="0"></bitenum>
    <bitenum description="18-bits data width (LSB of the 24-bit video port data bus)" id="F18" token="F18" value="1"></bitenum>
    <bitenum description="24-bits data width (LSB of the 24-bit video port data bus)" id="F24" token="F24" value="2"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="" end="5" id="RESERVED3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="The field indicates the clock ratio between VP.CLK and VP.PCLK. The clock VP.PCLK is generated from VP.CLK. It is divided down. The information is only used when the video port is used to provide data in command mode. In the case of video mode, it is not used." end="4" id="VP_CLK_RATIO" rwaccess="RW" width="1">
    <bitenum description="The clock VP.PCLK is the clock VP.CLK divided by 2. The duty cycle of VP.PCLK is 50/50." id="RATIO2" token="RATIO2" value="0"></bitenum>
    <bitenum description="The clock VP.PCLK is the clock VP.CLK divided by 3 or more. The duty cycle of VP.PCLK is not 50/50 for odd ratio numbers (3,5,7,...)." id="RATIO3ANDHIGHER" token="RATIO3ANDHIGHER" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="" end="0" id="RESERVED2" rwaccess="R" width="4"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VM_TIMING8" description="VIDEO MODE TIMING REGISTER  This register defines the video mode timing." id="CSI2_VM_TIMING8" offset="0x9C" width="32">
    
  <bitfield begin="31" description="" end="2" id="RESERVED" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Extension to the HFP register. Additional bits added to MSB." end="0" id="HFPX" rwaccess="RW" width="2"></bitfield>
  </register>

  <register acronym="CSI2_TE_HSYNC_WIDTH_0" description="The register configures the TE HSYNC minimum pulse width for TE0 and TE1 CMOS signals The input TE signal is asynchronous and needs to be re-synchronizred to CSI2_CLK clock domain." id="CSI2_TE_HSYNC_WIDTH_0" offset="0xa0" width="32">
    
  <bitfield begin="31" description="Reserved" end="20" id="RESERVED1" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Programmable min HSYNC pulse width Minimum HSYNC pulse width. Number of CSI2_CLK clock cycles times 256 to determine when HSYNC pulse occurs.  The value 0 is invalid." end="8" id="MIN_HSYNC_PULSE_WIDTH" rwaccess="RW" width="12"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="0" id="RESERVED" rwaccess="R" width="8"></bitfield>
  </register>

  <register acronym="CSI2_TE_VSYNC_WIDTH_0" description="The register configures the TE VSYNC minimum pulse width for TE0 and TE1 CMOS signals The input TE signal is asynchronous and needs to be re-synchronizred to CSI2_CLK clock domain." id="CSI2_TE_VSYNC_WIDTH_0" offset="0xa4" width="32">
    
  <bitfield begin="31" description="Reserved" end="20" id="RESERVED1" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Programmable min VSYNC pulse width Minimum VSYNC pulse width. Number of CSI2_CLK cycles times 256 to determine when VSYNC pulse occurs. The value 0 is invalid. The value shall be greater than MIN_HSYNC_PULSE_WIDTH when CSI2_TE_HSYNC_NUMBER is greather than 0" end="8" id="MIN_VSYNC_PULSE_WIDTH" rwaccess="RW" width="12"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="0" id="RESERVED" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CSI2_TE_HSYNC_NUMBER_0" description="The register configures the number of HSYNC to synchronize the beginning of the transfer on CSI2 link based on the number of HSYNC pulse received on the TE line. The input TE signal is asynchronous and needs to be re-synchronizred to CSI2_CLK clock domain." id="CSI2_TE_HSYNC_NUMBER_0" offset="0xa8" width="32">
    
  <bitfield begin="31" description="" end="11" id="RESERVED_18" rwaccess="R" width="21"></bitfield>
    
  <bitfield begin="10" description="Programmable line number Line number from 0 to 2047. Number of HSYNC after the VSYNC occurs before the beginning of the transfer. Any HSYNC before VSYNC is ignored." end="0" id="LINE_NUMBER" rwaccess="RW" width="11"></bitfield>
  </register>

  
  <register acronym="CSI2_TE_HSYNC_WIDTH_1" description="The register configures the TE HSYNC minimum pulse width for TE0 and TE1 CMOS signals The input TE signal is asynchronous and needs to be re-synchronizred to CSI2_CLK clock domain." id="CSI2_TE_HSYNC_WIDTH_1" offset="0xac" width="32">
    
  <bitfield begin="31" description="Reserved" end="20" id="RESERVED1" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Programmable min HSYNC pulse width Minimum HSYNC pulse width. Number of CSI2_CLK clock cycles times 256 to determine when HSYNC pulse occurs.  The value 0 is invalid." end="8" id="MIN_HSYNC_PULSE_WIDTH" rwaccess="RW" width="12"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="0" id="RESERVED" rwaccess="R" width="8"></bitfield>
  </register>

  <register acronym="CSI2_TE_VSYNC_WIDTH_1" description="The register configures the TE VSYNC minimum pulse width for TE0 and TE1 CMOS signals The input TE signal is asynchronous and needs to be re-synchronizred to CSI2_CLK clock domain." id="CSI2_TE_VSYNC_WIDTH_1" offset="0xb0" width="32">
    
  <bitfield begin="31" description="Reserved" end="20" id="RESERVED1" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Programmable min VSYNC pulse width Minimum VSYNC pulse width. Number of CSI2_CLK cycles times 256 to determine when VSYNC pulse occurs. The value 0 is invalid. The value shall be greater than MIN_HSYNC_PULSE_WIDTH when CSI2_TE_HSYNC_NUMBER is greather than 0" end="8" id="MIN_VSYNC_PULSE_WIDTH" rwaccess="RW" width="12"></bitfield>
    
  <bitfield begin="7" description="Reserved" end="0" id="RESERVED" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CSI2_TE_HSYNC_NUMBER_1" description="The register configures the number of HSYNC to synchronize the beginning of the transfer on CSI2 link based on the number of HSYNC pulse received on the TE line. The input TE signal is asynchronous and needs to be re-synchronizred to CSI2_CLK clock domain." id="CSI2_TE_HSYNC_NUMBER_1" offset="0xb4" width="32">
    
  <bitfield begin="31" description="" end="11" id="RESERVED_18" rwaccess="R" width="21"></bitfield>
    
  <bitfield begin="10" description="Programmable line number Line number from 0 to 2047. Number of HSYNC after the VSYNC occurs before the beginning of the transfer. Any HSYNC before VSYNC is ignored." end="0" id="LINE_NUMBER" rwaccess="RW" width="11"></bitfield>
  </register>
  
  
  
  <register acronym="CSI2_VC_CTRL_0" description="CONTROL REGISTER - Virtual channel  This register controls the virtual channel." id="CSI2_VC_CTRL_0" offset="0x100" width="32">
    
  <bitfield begin="31" description="DCS command code value to insert between header and video port or OCP slave  data when enabled by DCS_CMD_ENABLE (only when TE mechanism is not used otherwise the bit-field DCS_CMD_CODE is ignored by CSI2 protocol engine)." end="31" id="DCS_CMD_CODE" rwaccess="RW" width="1">
    <bitenum description="DCS write memory continue code is inserted." id="DCS_CONTINUE" token="DCS_CONTINUE" value="0"></bitenum>
    <bitenum description="DCS write memory start code is inserted." id="DCS_START" token="DCS_START" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="Enables automatic insertion of DCS command codes when data is sourced by the video port." end="30" id="DCS_CMD_ENABLE" rwaccess="RW" width="1">
    <bitenum description="DCS command code is NOT inserted when command mode traffic is coming from the Video Port or OCP slave port." id="DCS_DISABLE" token="DCS_DISABLE" value="0"></bitenum>
    <bitenum description="DCS command code is inserted automatically when command mode traffic is coming from the Video Port  or OCP slave port." id="DCS_ENABLE" token="DCS_ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="Selection of the use of the DMA request (associated to the  RX FIFO)" end="27" id="DMA_RX_REQ_NB" rwaccess="RW" width="3">
    <bitenum description="DMA_req0 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 0)" id="DMA_REQ0" token="DMA_REQ0" value="0"></bitenum>
    <bitenum description="DMA_req1 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 1)" id="DMA_REQ1" token="DMA_REQ1" value="1"></bitenum>
    <bitenum description="DMA_req2 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 2)" id="DMA_REQ2" token="DMA_REQ2" value="2"></bitenum>
    <bitenum description="DMA_req3 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is equal to 3)" id="DMA_REQ3" token="DMA_REQ3" value="3"></bitenum>
    <bitenum description="No DMA req selected" id="NO_DMA_REQ" token="NO_DMA_REQ" value="4"></bitenum>
  </bitfield>
    
  <bitfield begin="26" description="Defines the threshold value for the DMA request (associated to the RX FIFO)" end="24" id="DMA_RX_THRESHOLD" rwaccess="RW" width="3">
    <bitenum description="1x 32 bits" id="F1" token="F1" value="0"></bitenum>
    <bitenum description="2 x 32 bits" id="F2" token="F2" value="1"></bitenum>
    <bitenum description="4 x 32 bits" id="F4" token="F4" value="2"></bitenum>
    <bitenum description="8 x 32 bits" id="F8" token="F8" value="3"></bitenum>
    <bitenum description="16 x 32 bits" id="F16" token="F16" value="4"></bitenum>
    <bitenum description="32 x 32 bits" id="F32" token="F32" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description="Selection of the use of the DMA request (associated to the TX FIFO)" end="21" id="DMA_TX_REQ_NB" rwaccess="RW" width="3">
    <bitenum description="DMA_req0 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 0)" id="DMA_REQ0" token="DMA_REQ0" value="0"></bitenum>
    <bitenum description="DMA_req1 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 1)" id="DMA_REQ1" token="DMA_REQ1" value="1"></bitenum>
    <bitenum description="DMA_req2 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 2)" id="DMA_REQ2" token="DMA_REQ2" value="2"></bitenum>
    <bitenum description="DMA_req3 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is equal to 3)" id="DMA_REQ3" token="DMA_REQ3" value="3"></bitenum>
    <bitenum description="No DMA req selected" id="NO_DMA_REQ" token="NO_DMA_REQ" value="4"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description="FIFO status" end="20" id="RX_FIFO_NOT_EMPTY" rwaccess="R" width="1">
    <bitenum description="The RX FIFO is empty (the FIFO does not contain any data for the virtual channel)" id="EMPTY" token="EMPTY" value="0"></bitenum>
    <bitenum description="The RX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)" id="NOT_EMPTY" token="NOT_EMPTY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description="Defines the threshold value for the DMA request (associated to the TX FIFO)" end="17" id="DMA_TX_THRESHOLD" rwaccess="RW" width="3">
    <bitenum description="1x 32 bits" id="F1" token="F1" value="0"></bitenum>
    <bitenum description="2 x 32 bits" id="F2" token="F2" value="1"></bitenum>
    <bitenum description="4 x 32 bits" id="F4" token="F4" value="2"></bitenum>
    <bitenum description="8 x 32 bits" id="F8" token="F8" value="3"></bitenum>
    <bitenum description="16 x 32 bits" id="F16" token="F16" value="4"></bitenum>
    <bitenum description="32 x 32 bits" id="F32" token="F32" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description="FIFO status" end="16" id="TX_FIFO_FULL" rwaccess="R" width="1">
    <bitenum description="The TX FIFO is not full (the FIFO can accept at least one more 32-bit valuel)" id="NOT_FULL" token="NOT_FULL" value="0"></bitenum>
    <bitenum description="The TX FIFO is full" id="FULL" token="FULL" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="Indicates if previously scheduled activities (packets, BTA) are still being processed. Forced to 1 if VC is enabled. Software should check this bit is 0 before changing channel configuration." end="15" id="VC_BUSY" rwaccess="R" width="1">
    <bitenum description="No pending operations for this VC" id="COMPLETED" token="COMPLETED" value="0"></bitenum>
    <bitenum description="Pending operations for this VC" id="BUSY" token="BUSY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="Ping-pong buffer busy status." end="14" id="PP_BUSY" rwaccess="R" width="1">
    <bitenum description="Software is permitted to write a new header for VP command mode traffic." id="PP_FREE" token="PP_FREE" value="0"></bitenum>
    <bitenum description="Software is NOT permitted to write a new header for VP command mode traffic." id="PP_BUSY" token="PP_BUSY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="Selection between video port 1 and video port 2.  If CSI2_GNQ.NB_VIDEO_PORTS=0, the bit-field is ignored since only video port 1 is present." end="13" id="VP_SOURCE" rwaccess="RW" width="1">
    <bitenum description="The video port 1 is selected." id="VIDEO_PORT_1" token="VIDEO_PORT_1" value="0"></bitenum>
    <bitenum description="The video port 2 is selected." id="VIDEO_PORT_2" token="VIDEO_PORT_2" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description="Byte order for RBG565" end="12" id="RGB565_ORDER" rwaccess="RW" width="1">
    <bitenum description="Byte order as documented in the MIPI DBI-2 spec" id="RGB565_DBI2" token="RGB565_DBI2" value="0"></bitenum>
    <bitenum description="Byte order as for video mode" id="RGB565_VIDEO" token="RGB565_VIDEO" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description="Defines the size of the OCP data bus" end="10" id="OCP_DATA_BUS_WIDTH" rwaccess="RW" width="2">
    <bitenum description="16-bits data width (LSB of the 32-bit OCP port data bus)" id="F16" token="F16" value="0"></bitenum>
    <bitenum description="24-bits data width (LSB of the 32-bit OCP port data bus)" id="F24" token="F24" value="1"></bitenum>
    <bitenum description="2x16-bits data width (first pixel on the LSB of the 32-bit OCP port data bus and second pixel on the MSB of the 32-bit OCP port data bus for the same OCP access)" id="F1616" token="F1616" value="2"></bitenum>
    <bitenum description="32-bits data width" id="F32" token="F32" value="3"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description="Selection of the mode. The information is used by HW only if MODE=COMMAND_MODE otherwise it is ignored." end="9" id="MODE_SPEED" rwaccess="RW" width="1">
    <bitenum description="Low power mode (CMOS) is used to send short and long packets to the peripheral." id="LP" token="LP" value="0"></bitenum>
    <bitenum description="High Speed mode (SLVS) is used to send short and long packets to the peripheral." id="HS" token="HS" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="Enables the Error Correction Code generation for the transmit header (short and long packets)." end="8" id="ECC_TX_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="Enables the checksum generation for the transmit payload (long packet only)." end="7" id="CS_TX_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled. The value 0x00 is used." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. The Check-sum value is calculated by HW." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="Send the bus turn around to the peripheral. It can be used when the automatic mode is enabled (BTA_SHORT_EN=1 or/and BTA_LONG_EN=1). In that case only one BTA is sent to the peripheral. The manual mode is used to allow the user to define for which packets, the turn around is required for example getting acknowledge from the peripheral." end="6" id="BTA_EN" rwaccess="RW" width="1">
    <bitenum description="READS: BTA generation is completed. It is reset by HW when it is completed. WRITES: Cancellation of the BTA generation (not guarantee since it could already on going, shall not be used)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="READS: BTA generation has been requested by user (it could be on going but not completed). WRITES: Request for BTA generation." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="FIFO status" end="5" id="TX_FIFO_NOT_EMPTY" rwaccess="R" width="1">
    <bitenum description="The TX FIFO is empty (the FIFO does not contain any data for the virtual channel)" id="EMPTY" token="EMPTY" value="0"></bitenum>
    <bitenum description="The TX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)" id="NOT_EMPTY" token="NOT_EMPTY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="Selection of the mode" end="4" id="MODE" rwaccess="RW" width="1">
    <bitenum description="Command mode." id="COMMAND_MODE" token="COMMAND_MODE" value="0"></bitenum>
    <bitenum description="Video mode. The bit-fields MODE_SPEED and SOURCE are not used by HW. The bit-field VP_SOURCE is used to select between video port 1 and video port 2 when two video ports are present." id="VIDEO_MODE" token="VIDEO_MODE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="Enables the automatic bus turn-around after completion of each long packet transmission." end="3" id="BTA_LONG_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Enables the automatic bus turn-around after completion of each short packet transmission." end="2" id="BTA_SHORT_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Selection of the source between OCP and the Video port(s) (used by the HW only if MODE=COMMAND MODE (0x0) otherwise it is ignored). The number of available video ports is defined in CSI2_GNQ.NB_VIDEO_PORTS." end="1" id="SOURCE" rwaccess="RW" width="1">
    <bitenum description="All the data are provided by the slave port. Any transfer on the video port is ignored for this virtual channel." id="OCP_SLAVE_PORT" token="OCP_SLAVE_PORT" value="0"></bitenum>
    <bitenum description="If MODE=VIDEO_MODE. the data received on the video port 1 or video port 2, selected using VP_SOURCE (pixels and enabled synchronization events using CSI2_CTRL1.VP_HSYNC_START, CSI2_CTRL1.VP_HSYNC_END, CSI2_CTRL1.VP_VSYNC_START, CSI2_CTRL1.VP_VSYNC_END for video port 1 and CSI2_CTRL2.VP_HSYNC_START, CSI2_CTRL2.VP_HSYNC_END, CSI2_CTRL2.VP_VSYNC_START, CSI2_CTRL2.VP_VSYNC_END for video port 2) are sent on the virtual channel (only one virtual channel can be associated with the video port, it is the SW responsibility to ensure that no more than one virtual channel is enabled with the video port as the main source for data).  If MODE=COMMAND_MODE, the VP.STALL signal is used by the protocol engine to indicate when new data are required. The synchronization signals are not generated by the display controller.  Regardless of the MODE, no data can be provided on the OCP slave port." id="VIDEO_PORT" token="VIDEO_PORT" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Enables the virtual channel." end="0" id="VC_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled. The virtual channel shall be disabled for any register change in the CSI2_VC_... registers the corresponding virtual channel id (except for setting the bit-fields/registers:   CSI2_VC_CTRL.BTA_EN, CSI2_VC_TE.TE_SIZE,  CSI2_VC_TE.TE_START, CSI2_VC_LONG_,,, CSI2_VC_SHORT_..., CSI2_VC_IRQ...)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. No change is allowed to the virtual channel registers expect resetting the VC_EN." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_TE_0" description="CONTROL REGISTER - Virtual channel  This register controls the tearing effect logic. It defines the size of the transfer when TE occurs and enables the automatic TE mode." id="CSI2_VC_TE_0" offset="0x104" width="32">
    
  <bitfield begin="31" description="Manual control of the start of the transfer. The user can use the TE interrupt in order to know that the TE trigger has been received prior to set the TE_START bit-field. It is not mandatory to use the TE interrupt." end="31" id="TE_START" rwaccess="RW" width="1">
    <bitenum description="Indicates the end of the transfer. The bit can be used by user to cancel the transfer if not already started. The FIFO shall be flushed by SW to ensure there is no data remaining in it." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Starts the transfer of the data. The size is defined in TE_SIZE. The bit-field is set until the transfer is completed. It is reset by HW when the transfer is completed." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="Tearing Effect Control" end="30" id="TE_EN" rwaccess="RW" width="1">
    <bitenum description="Disables the automatic transfer. The user shall use the interruption in order to know when TE PHY trigger is received or when the TE is detected on the input CMOS signals. The HW reset the bit-field when the transfer is completed (TE_SIZE=0)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enables the automatic transfer of the data using the TE PHY trigger or one of the TE input signals as a synchronization event. The bit-field TE_LINE defines if the CMOS signal is used or if the PHY trigger is used." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="" end="29" id="TE_LINE" rwaccess="RW" width="1">
    <bitenum description="Disabled the TE CMOS signalling for the automatic data transfer. The CSI2 PHY trigger is used for the automactic data transfer." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enables the TE CMOS signalling for the automatic data transfer. The CSI2 PHY trigger is not used for the automactic data transfer." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description="Selection between TE0 and TE1 cmos signals." end="28" id="TE_LINE_NB" rwaccess="RW" width="1">
    <bitenum description="TE0 cmos input line is selected" id="TE0" token="TE0" value="0"></bitenum>
    <bitenum description="TE1 cmos input line is selected" id="TE1" token="TE1" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description="Reserved" end="24" id="RESERVED" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="23" description="Defines the number of byte (payload data excluding the check -sum) to be sent. The write into the register CSI2_VC_LONG_PACKET_HEADER shall be performed by the user before sending data from the register CSI2_VC_LONG_PACKET_PAYLOAD. The register value is decremented for every byte sent of the CSI2 link. At the end of the transfer (TE_SIZE=0), the bit-field TE_EN is reset by HW. The DMA_request shall be asserted when the trigger is received in order to receive data in the TX FIFO. It shall not be used until all data (TE_SIZE) have been received in the FIFO." end="0" id="TE_SIZE" rwaccess="RW" width="24"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_LONG_PACKET_HEADER_0" description="LONG  PACKET HEADER INFORMATION -Virtual channel  This register sets the 32-bit DATA_ID + Word count + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1.  DATA_ID is located at bit[7:0] WC is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)" id="CSI2_VC_LONG_PACKET_HEADER_0" offset="0x108" width="32">
    
  <bitfield begin="31" description=" Packet header information: DATA ID + DATA FIELD +ECC" end="0" id="HEADER" rwaccess="W" width="32"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_LONG_PACKET_PAYLOAD_0" description="LONG PACKET PAYLOAD INFORMATION -Virtual channel  This register sets the payload information (excluding Check-sum). The HW shall capture the word count in the packet header (in CSI2_VC_LONG_PACKET_HEADER) in order to determine the last valid data. (the virtual channel id can be different than VC).  Byte1 is bit[7:0] Byte2 is bit[15:8] Byte3 is bit[23:16] Byte4 is bit[31:24] Byten is sent before Byten+1 (Least significant byte first and least significant bit first)" id="CSI2_VC_LONG_PACKET_PAYLOAD_0" offset="0x10C" width="32">
    
  <bitfield begin="31" description="Packet payload information (excluding check-sum)" end="0" id="PAYLOAD" rwaccess="W" width="32"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_SHORT_PACKET_HEADER_0" description="SHORT PACKET HEADER INFORMATION -Virtual channel  This register sets the 24-bit DATA_ID + Short Packet Data Field + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1.  DATA_ID is located at bit[7:0] Short Packet Data field is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)" id="CSI2_VC_SHORT_PACKET_HEADER_0" offset="0x110" width="32">
    
  <bitfield begin="31" description="WRITES: Packet header information: DATA ID + DATA FIELD +ECC written into the TX FIFO READS: 32-bit values read from the RX FIFO" end="0" id="HEADER" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_IRQSTATUS_0" description="INTERRUPT STATUS REGISTER - Virtual channel  This register regroups all the events related to the virtual channel." id="CSI2_VC_IRQSTATUS_0" offset="0x118" width="32">
    
  <bitfield begin="31" description="Reserved" end="9" id="RESERVED" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="Video Port ping-pong buffer busy status. PP_BUSY has changed from 1 to 0." end="8" id="PP_BUSY_CHANGE_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="FIFO underflow status. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has underflowed which means that   the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." end="7" id="FIFO_TX_UDF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="ECC error status (short and long packets). No correction of the header because of more than 1-bit error." end="6" id="ECC_NO_CORRECTION_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Virtual channel - BTA status." end="5" id="BTA_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="FIFO overflow error status. The FIFO used on the slave port for buffering the data received on the CSI2 link for the virtual channel has overflowed. " end="4" id="FIFO_RX_OVF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="FIFO overflow error status. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has overflowed." end="3" id="FIFO_TX_OVF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." end="2" id="PACKET_SENT_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Virtual channel - ECC has been used to do the correction of the only 1-bit error status (short and long packet)." end="1" id="ECC_CORRECTION_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Virtual channel - Check-Sum mismatch status." end="0" id="CS_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_IRQENABLE_0" description="INTERRUPT ENABLE REGISTER - Virtual channel  This register regroups all the events related to virtual channel." id="CSI2_VC_IRQENABLE_0" offset="0x11C" width="32">
    
  <bitfield begin="31" description="Reserved" end="9" id="RESERVED" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="Video Port ping-pong buffer busy status." end="8" id="PP_BUSY_CHANGE_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="FIFO underflow enable. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has underflowed which means that   the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." end="7" id="FIFO_TX_UDF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="ECC error (short and long packets). No correction of the header because of more than 1-bit error." end="6" id="ECC_NO_CORRECTION_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Virtual channel -Bus turn around reception" end="5" id="BTA_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="FIFO overflow enable. The FIFO used on the slave port for buffering the data received on the CSI2 link for the virtual channel has overflowed." end="4" id="FIFO_RX_OVF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="FIFO overflow enable. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has overflowed." end="3" id="FIFO_TX_OVF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." end="2" id="PACKET_SENT_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Virtual channel - ECC has been used to correct the only 1-bit error (short and long packet)." end="1" id="ECC_CORRECTION_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Virtual channel - Check-Sum of the payload mismatch detection" end="0" id="CS_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
  </register>





 <register acronym="CSI2_VC_CTRL_1" description="CONTROL REGISTER - Virtual channel  This register controls the virtual channel." id="CSI2_VC_CTRL_1" offset="0x120" width="32">
    
  <bitfield begin="31" description="DCS command code value to insert between header and video port or OCP slave  data when enabled by DCS_CMD_ENABLE (only when TE mechanism is not used otherwise the bit-field DCS_CMD_CODE is ignored by CSI2 protocol engine)." end="31" id="DCS_CMD_CODE" rwaccess="RW" width="1">
    <bitenum description="DCS write memory continue code is inserted." id="DCS_CONTINUE" token="DCS_CONTINUE" value="0"></bitenum>
    <bitenum description="DCS write memory start code is inserted." id="DCS_START" token="DCS_START" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="Enables automatic insertion of DCS command codes when data is sourced by the video port." end="30" id="DCS_CMD_ENABLE" rwaccess="RW" width="1">
    <bitenum description="DCS command code is NOT inserted when command mode traffic is coming from the Video Port or OCP slave port." id="DCS_DISABLE" token="DCS_DISABLE" value="0"></bitenum>
    <bitenum description="DCS command code is inserted automatically when command mode traffic is coming from the Video Port  or OCP slave port." id="DCS_ENABLE" token="DCS_ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="Selection of the use of the DMA request (associated to the  RX FIFO)" end="27" id="DMA_RX_REQ_NB" rwaccess="RW" width="3">
    <bitenum description="DMA_req0 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 0)" id="DMA_REQ0" token="DMA_REQ0" value="0"></bitenum>
    <bitenum description="DMA_req1 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 1)" id="DMA_REQ1" token="DMA_REQ1" value="1"></bitenum>
    <bitenum description="DMA_req2 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 2)" id="DMA_REQ2" token="DMA_REQ2" value="2"></bitenum>
    <bitenum description="DMA_req3 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is equal to 3)" id="DMA_REQ3" token="DMA_REQ3" value="3"></bitenum>
    <bitenum description="No DMA req selected" id="NO_DMA_REQ" token="NO_DMA_REQ" value="4"></bitenum>
  </bitfield>
    
  <bitfield begin="26" description="Defines the threshold value for the DMA request (associated to the RX FIFO)" end="24" id="DMA_RX_THRESHOLD" rwaccess="RW" width="3">
    <bitenum description="1x 32 bits" id="F1" token="F1" value="0"></bitenum>
    <bitenum description="2 x 32 bits" id="F2" token="F2" value="1"></bitenum>
    <bitenum description="4 x 32 bits" id="F4" token="F4" value="2"></bitenum>
    <bitenum description="8 x 32 bits" id="F8" token="F8" value="3"></bitenum>
    <bitenum description="16 x 32 bits" id="F16" token="F16" value="4"></bitenum>
    <bitenum description="32 x 32 bits" id="F32" token="F32" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description="Selection of the use of the DMA request (associated to the TX FIFO)" end="21" id="DMA_TX_REQ_NB" rwaccess="RW" width="3">
    <bitenum description="DMA_req0 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 0)" id="DMA_REQ0" token="DMA_REQ0" value="0"></bitenum>
    <bitenum description="DMA_req1 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 1)" id="DMA_REQ1" token="DMA_REQ1" value="1"></bitenum>
    <bitenum description="DMA_req2 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 2)" id="DMA_REQ2" token="DMA_REQ2" value="2"></bitenum>
    <bitenum description="DMA_req3 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is equal to 3)" id="DMA_REQ3" token="DMA_REQ3" value="3"></bitenum>
    <bitenum description="No DMA req selected" id="NO_DMA_REQ" token="NO_DMA_REQ" value="4"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description="FIFO status" end="20" id="RX_FIFO_NOT_EMPTY" rwaccess="R" width="1">
    <bitenum description="The RX FIFO is empty (the FIFO does not contain any data for the virtual channel)" id="EMPTY" token="EMPTY" value="0"></bitenum>
    <bitenum description="The RX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)" id="NOT_EMPTY" token="NOT_EMPTY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description="Defines the threshold value for the DMA request (associated to the TX FIFO)" end="17" id="DMA_TX_THRESHOLD" rwaccess="RW" width="3">
    <bitenum description="1x 32 bits" id="F1" token="F1" value="0"></bitenum>
    <bitenum description="2 x 32 bits" id="F2" token="F2" value="1"></bitenum>
    <bitenum description="4 x 32 bits" id="F4" token="F4" value="2"></bitenum>
    <bitenum description="8 x 32 bits" id="F8" token="F8" value="3"></bitenum>
    <bitenum description="16 x 32 bits" id="F16" token="F16" value="4"></bitenum>
    <bitenum description="32 x 32 bits" id="F32" token="F32" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description="FIFO status" end="16" id="TX_FIFO_FULL" rwaccess="R" width="1">
    <bitenum description="The TX FIFO is not full (the FIFO can accept at least one more 32-bit valuel)" id="NOT_FULL" token="NOT_FULL" value="0"></bitenum>
    <bitenum description="The TX FIFO is full" id="FULL" token="FULL" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="Indicates if previously scheduled activities (packets, BTA) are still being processed. Forced to 1 if VC is enabled. Software should check this bit is 0 before changing channel configuration." end="15" id="VC_BUSY" rwaccess="R" width="1">
    <bitenum description="No pending operations for this VC" id="COMPLETED" token="COMPLETED" value="0"></bitenum>
    <bitenum description="Pending operations for this VC" id="BUSY" token="BUSY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="Ping-pong buffer busy status." end="14" id="PP_BUSY" rwaccess="R" width="1">
    <bitenum description="Software is permitted to write a new header for VP command mode traffic." id="PP_FREE" token="PP_FREE" value="0"></bitenum>
    <bitenum description="Software is NOT permitted to write a new header for VP command mode traffic." id="PP_BUSY" token="PP_BUSY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="Selection between video port 1 and video port 2.  If CSI2_GNQ.NB_VIDEO_PORTS=0, the bit-field is ignored since only video port 1 is present." end="13" id="VP_SOURCE" rwaccess="RW" width="1">
    <bitenum description="The video port 1 is selected." id="VIDEO_PORT_1" token="VIDEO_PORT_1" value="0"></bitenum>
    <bitenum description="The video port 2 is selected." id="VIDEO_PORT_2" token="VIDEO_PORT_2" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description="Byte order for RBG565" end="12" id="RGB565_ORDER" rwaccess="RW" width="1">
    <bitenum description="Byte order as documented in the MIPI DBI-2 spec" id="RGB565_DBI2" token="RGB565_DBI2" value="0"></bitenum>
    <bitenum description="Byte order as for video mode" id="RGB565_VIDEO" token="RGB565_VIDEO" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description="Defines the size of the OCP data bus" end="10" id="OCP_DATA_BUS_WIDTH" rwaccess="RW" width="2">
    <bitenum description="16-bits data width (LSB of the 32-bit OCP port data bus)" id="F16" token="F16" value="0"></bitenum>
    <bitenum description="24-bits data width (LSB of the 32-bit OCP port data bus)" id="F24" token="F24" value="1"></bitenum>
    <bitenum description="2x16-bits data width (first pixel on the LSB of the 32-bit OCP port data bus and second pixel on the MSB of the 32-bit OCP port data bus for the same OCP access)" id="F1616" token="F1616" value="2"></bitenum>
    <bitenum description="32-bits data width" id="F32" token="F32" value="3"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description="Selection of the mode. The information is used by HW only if MODE=COMMAND_MODE otherwise it is ignored." end="9" id="MODE_SPEED" rwaccess="RW" width="1">
    <bitenum description="Low power mode (CMOS) is used to send short and long packets to the peripheral." id="LP" token="LP" value="0"></bitenum>
    <bitenum description="High Speed mode (SLVS) is used to send short and long packets to the peripheral." id="HS" token="HS" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="Enables the Error Correction Code generation for the transmit header (short and long packets)." end="8" id="ECC_TX_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="Enables the checksum generation for the transmit payload (long packet only)." end="7" id="CS_TX_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled. The value 0x00 is used." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. The Check-sum value is calculated by HW." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="Send the bus turn around to the peripheral. It can be used when the automatic mode is enabled (BTA_SHORT_EN=1 or/and BTA_LONG_EN=1). In that case only one BTA is sent to the peripheral. The manual mode is used to allow the user to define for which packets, the turn around is required for example getting acknowledge from the peripheral." end="6" id="BTA_EN" rwaccess="RW" width="1">
    <bitenum description="READS: BTA generation is completed. It is reset by HW when it is completed. WRITES: Cancellation of the BTA generation (not guarantee since it could already on going, shall not be used)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="READS: BTA generation has been requested by user (it could be on going but not completed). WRITES: Request for BTA generation." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="FIFO status" end="5" id="TX_FIFO_NOT_EMPTY" rwaccess="R" width="1">
    <bitenum description="The TX FIFO is empty (the FIFO does not contain any data for the virtual channel)" id="EMPTY" token="EMPTY" value="0"></bitenum>
    <bitenum description="The TX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)" id="NOT_EMPTY" token="NOT_EMPTY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="Selection of the mode" end="4" id="MODE" rwaccess="RW" width="1">
    <bitenum description="Command mode." id="COMMAND_MODE" token="COMMAND_MODE" value="0"></bitenum>
    <bitenum description="Video mode. The bit-fields MODE_SPEED and SOURCE are not used by HW. The bit-field VP_SOURCE is used to select between video port 1 and video port 2 when two video ports are present." id="VIDEO_MODE" token="VIDEO_MODE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="Enables the automatic bus turn-around after completion of each long packet transmission." end="3" id="BTA_LONG_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Enables the automatic bus turn-around after completion of each short packet transmission." end="2" id="BTA_SHORT_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Selection of the source between OCP and the Video port(s) (used by the HW only if MODE=COMMAND MODE (0x0) otherwise it is ignored). The number of available video ports is defined in CSI2_GNQ.NB_VIDEO_PORTS." end="1" id="SOURCE" rwaccess="RW" width="1">
    <bitenum description="All the data are provided by the slave port. Any transfer on the video port is ignored for this virtual channel." id="OCP_SLAVE_PORT" token="OCP_SLAVE_PORT" value="0"></bitenum>
    <bitenum description="If MODE=VIDEO_MODE. the data received on the video port 1 or video port 2, selected using VP_SOURCE (pixels and enabled synchronization events using CSI2_CTRL1.VP_HSYNC_START, CSI2_CTRL1.VP_HSYNC_END, CSI2_CTRL1.VP_VSYNC_START, CSI2_CTRL1.VP_VSYNC_END for video port 1 and CSI2_CTRL2.VP_HSYNC_START, CSI2_CTRL2.VP_HSYNC_END, CSI2_CTRL2.VP_VSYNC_START, CSI2_CTRL2.VP_VSYNC_END for video port 2) are sent on the virtual channel (only one virtual channel can be associated with the video port, it is the SW responsibility to ensure that no more than one virtual channel is enabled with the video port as the main source for data).  If MODE=COMMAND_MODE, the VP.STALL signal is used by the protocol engine to indicate when new data are required. The synchronization signals are not generated by the display controller.  Regardless of the MODE, no data can be provided on the OCP slave port." id="VIDEO_PORT" token="VIDEO_PORT" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Enables the virtual channel." end="0" id="VC_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled. The virtual channel shall be disabled for any register change in the CSI2_VC_... registers the corresponding virtual channel id (except for setting the bit-fields/registers:   CSI2_VC_CTRL.BTA_EN, CSI2_VC_TE.TE_SIZE,  CSI2_VC_TE.TE_START, CSI2_VC_LONG_,,, CSI2_VC_SHORT_..., CSI2_VC_IRQ...)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. No change is allowed to the virtual channel registers expect resetting the VC_EN." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_TE_1" description="CONTROL REGISTER - Virtual channel  This register controls the tearing effect logic. It defines the size of the transfer when TE occurs and enables the automatic TE mode." id="CSI2_VC_TE_1" offset="0x124" width="32">
    
  <bitfield begin="31" description="Manual control of the start of the transfer. The user can use the TE interrupt in order to know that the TE trigger has been received prior to set the TE_START bit-field. It is not mandatory to use the TE interrupt." end="31" id="TE_START" rwaccess="RW" width="1">
    <bitenum description="Indicates the end of the transfer. The bit can be used by user to cancel the transfer if not already started. The FIFO shall be flushed by SW to ensure there is no data remaining in it." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Starts the transfer of the data. The size is defined in TE_SIZE. The bit-field is set until the transfer is completed. It is reset by HW when the transfer is completed." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="Tearing Effect Control" end="30" id="TE_EN" rwaccess="RW" width="1">
    <bitenum description="Disables the automatic transfer. The user shall use the interruption in order to know when TE PHY trigger is received or when the TE is detected on the input CMOS signals. The HW reset the bit-field when the transfer is completed (TE_SIZE=0)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enables the automatic transfer of the data using the TE PHY trigger or one of the TE input signals as a synchronization event. The bit-field TE_LINE defines if the CMOS signal is used or if the PHY trigger is used." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="" end="29" id="TE_LINE" rwaccess="RW" width="1">
    <bitenum description="Disabled the TE CMOS signalling for the automatic data transfer. The CSI2 PHY trigger is used for the automactic data transfer." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enables the TE CMOS signalling for the automatic data transfer. The CSI2 PHY trigger is not used for the automactic data transfer." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description="Selection between TE0 and TE1 cmos signals." end="28" id="TE_LINE_NB" rwaccess="RW" width="1">
    <bitenum description="TE0 cmos input line is selected" id="TE0" token="TE0" value="0"></bitenum>
    <bitenum description="TE1 cmos input line is selected" id="TE1" token="TE1" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description="Reserved" end="24" id="RESERVED" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="23" description="Defines the number of byte (payload data excluding the check -sum) to be sent. The write into the register CSI2_VC_LONG_PACKET_HEADER shall be performed by the user before sending data from the register CSI2_VC_LONG_PACKET_PAYLOAD. The register value is decremented for every byte sent of the CSI2 link. At the end of the transfer (TE_SIZE=0), the bit-field TE_EN is reset by HW. The DMA_request shall be asserted when the trigger is received in order to receive data in the TX FIFO. It shall not be used until all data (TE_SIZE) have been received in the FIFO." end="0" id="TE_SIZE" rwaccess="RW" width="24"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_LONG_PACKET_HEADER_1" description="LONG  PACKET HEADER INFORMATION -Virtual channel  This register sets the 32-bit DATA_ID + Word count + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1.  DATA_ID is located at bit[7:0] WC is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)" id="CSI2_VC_LONG_PACKET_HEADER_1" offset="0x128" width="32">
    
  <bitfield begin="31" description=" Packet header information: DATA ID + DATA FIELD +ECC" end="0" id="HEADER" rwaccess="W" width="32"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_LONG_PACKET_PAYLOAD_1" description="LONG PACKET PAYLOAD INFORMATION -Virtual channel  This register sets the payload information (excluding Check-sum). The HW shall capture the word count in the packet header (in CSI2_VC_LONG_PACKET_HEADER) in order to determine the last valid data. (the virtual channel id can be different than VC).  Byte1 is bit[7:0] Byte2 is bit[15:8] Byte3 is bit[23:16] Byte4 is bit[31:24] Byten is sent before Byten+1 (Least significant byte first and least significant bit first)" id="CSI2_VC_LONG_PACKET_PAYLOAD_1" offset="0x12C" width="32">
    
  <bitfield begin="31" description="Packet payload information (excluding check-sum)" end="0" id="PAYLOAD" rwaccess="W" width="32"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_SHORT_PACKET_HEADER_1" description="SHORT PACKET HEADER INFORMATION -Virtual channel  This register sets the 24-bit DATA_ID + Short Packet Data Field + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1.  DATA_ID is located at bit[7:0] Short Packet Data field is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)" id="CSI2_VC_SHORT_PACKET_HEADER_1" offset="0x130" width="32">
    
  <bitfield begin="31" description="WRITES: Packet header information: DATA ID + DATA FIELD +ECC written into the TX FIFO READS: 32-bit values read from the RX FIFO" end="0" id="HEADER" rwaccess="RW" width="32"></bitfield>
  </register>
  

  <register acronym="CSI2_VC_IRQSTATUS_1" description="INTERRUPT STATUS REGISTER - Virtual channel  This register regroups all the events related to the virtual channel." id="CSI2_VC_IRQSTATUS_1" offset="0x138" width="32">
    
  <bitfield begin="31" description="Reserved" end="9" id="RESERVED" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="Video Port ping-pong buffer busy status. PP_BUSY has changed from 1 to 0." end="8" id="PP_BUSY_CHANGE_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="FIFO underflow status. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has underflowed which means that   the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." end="7" id="FIFO_TX_UDF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="ECC error status (short and long packets). No correction of the header because of more than 1-bit error." end="6" id="ECC_NO_CORRECTION_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Virtual channel - BTA status." end="5" id="BTA_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="FIFO overflow error status. The FIFO used on the slave port for buffering the data received on the CSI2 link for the virtual channel has overflowed. " end="4" id="FIFO_RX_OVF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="FIFO overflow error status. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has overflowed." end="3" id="FIFO_TX_OVF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." end="2" id="PACKET_SENT_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Virtual channel - ECC has been used to do the correction of the only 1-bit error status (short and long packet)." end="1" id="ECC_CORRECTION_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Virtual channel - Check-Sum mismatch status." end="0" id="CS_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_IRQENABLE_1" description="INTERRUPT ENABLE REGISTER - Virtual channel  This register regroups all the events related to virtual channel." id="CSI2_VC_IRQENABLE_1" offset="0x13C" width="32">
    
  <bitfield begin="31" description="Reserved" end="9" id="RESERVED" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="Video Port ping-pong buffer busy status." end="8" id="PP_BUSY_CHANGE_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="FIFO underflow enable. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has underflowed which means that   the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." end="7" id="FIFO_TX_UDF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="ECC error (short and long packets). No correction of the header because of more than 1-bit error." end="6" id="ECC_NO_CORRECTION_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Virtual channel -Bus turn around reception" end="5" id="BTA_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="FIFO overflow enable. The FIFO used on the slave port for buffering the data received on the CSI2 link for the virtual channel has overflowed." end="4" id="FIFO_RX_OVF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="FIFO overflow enable. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has overflowed." end="3" id="FIFO_TX_OVF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." end="2" id="PACKET_SENT_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Virtual channel - ECC has been used to correct the only 1-bit error (short and long packet)." end="1" id="ECC_CORRECTION_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Virtual channel - Check-Sum of the payload mismatch detection" end="0" id="CS_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
  </register>









 <register acronym="CSI2_VC_CTRL_2" description="CONTROL REGISTER - Virtual channel  This register controls the virtual channel." id="CSI2_VC_CTRL_2" offset="0x140" width="32">
    
  <bitfield begin="31" description="DCS command code value to insert between header and video port or OCP slave  data when enabled by DCS_CMD_ENABLE (only when TE mechanism is not used otherwise the bit-field DCS_CMD_CODE is ignored by CSI2 protocol engine)." end="31" id="DCS_CMD_CODE" rwaccess="RW" width="1">
    <bitenum description="DCS write memory continue code is inserted." id="DCS_CONTINUE" token="DCS_CONTINUE" value="0"></bitenum>
    <bitenum description="DCS write memory start code is inserted." id="DCS_START" token="DCS_START" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="Enables automatic insertion of DCS command codes when data is sourced by the video port." end="30" id="DCS_CMD_ENABLE" rwaccess="RW" width="1">
    <bitenum description="DCS command code is NOT inserted when command mode traffic is coming from the Video Port or OCP slave port." id="DCS_DISABLE" token="DCS_DISABLE" value="0"></bitenum>
    <bitenum description="DCS command code is inserted automatically when command mode traffic is coming from the Video Port  or OCP slave port." id="DCS_ENABLE" token="DCS_ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="Selection of the use of the DMA request (associated to the  RX FIFO)" end="27" id="DMA_RX_REQ_NB" rwaccess="RW" width="3">
    <bitenum description="DMA_req0 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 0)" id="DMA_REQ0" token="DMA_REQ0" value="0"></bitenum>
    <bitenum description="DMA_req1 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 1)" id="DMA_REQ1" token="DMA_REQ1" value="1"></bitenum>
    <bitenum description="DMA_req2 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 2)" id="DMA_REQ2" token="DMA_REQ2" value="2"></bitenum>
    <bitenum description="DMA_req3 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is equal to 3)" id="DMA_REQ3" token="DMA_REQ3" value="3"></bitenum>
    <bitenum description="No DMA req selected" id="NO_DMA_REQ" token="NO_DMA_REQ" value="4"></bitenum>
  </bitfield>
    
  <bitfield begin="26" description="Defines the threshold value for the DMA request (associated to the RX FIFO)" end="24" id="DMA_RX_THRESHOLD" rwaccess="RW" width="3">
    <bitenum description="1x 32 bits" id="F1" token="F1" value="0"></bitenum>
    <bitenum description="2 x 32 bits" id="F2" token="F2" value="1"></bitenum>
    <bitenum description="4 x 32 bits" id="F4" token="F4" value="2"></bitenum>
    <bitenum description="8 x 32 bits" id="F8" token="F8" value="3"></bitenum>
    <bitenum description="16 x 32 bits" id="F16" token="F16" value="4"></bitenum>
    <bitenum description="32 x 32 bits" id="F32" token="F32" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description="Selection of the use of the DMA request (associated to the TX FIFO)" end="21" id="DMA_TX_REQ_NB" rwaccess="RW" width="3">
    <bitenum description="DMA_req0 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 0)" id="DMA_REQ0" token="DMA_REQ0" value="0"></bitenum>
    <bitenum description="DMA_req1 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 1)" id="DMA_REQ1" token="DMA_REQ1" value="1"></bitenum>
    <bitenum description="DMA_req2 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 2)" id="DMA_REQ2" token="DMA_REQ2" value="2"></bitenum>
    <bitenum description="DMA_req3 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is equal to 3)" id="DMA_REQ3" token="DMA_REQ3" value="3"></bitenum>
    <bitenum description="No DMA req selected" id="NO_DMA_REQ" token="NO_DMA_REQ" value="4"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description="FIFO status" end="20" id="RX_FIFO_NOT_EMPTY" rwaccess="R" width="1">
    <bitenum description="The RX FIFO is empty (the FIFO does not contain any data for the virtual channel)" id="EMPTY" token="EMPTY" value="0"></bitenum>
    <bitenum description="The RX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)" id="NOT_EMPTY" token="NOT_EMPTY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description="Defines the threshold value for the DMA request (associated to the TX FIFO)" end="17" id="DMA_TX_THRESHOLD" rwaccess="RW" width="3">
    <bitenum description="1x 32 bits" id="F1" token="F1" value="0"></bitenum>
    <bitenum description="2 x 32 bits" id="F2" token="F2" value="1"></bitenum>
    <bitenum description="4 x 32 bits" id="F4" token="F4" value="2"></bitenum>
    <bitenum description="8 x 32 bits" id="F8" token="F8" value="3"></bitenum>
    <bitenum description="16 x 32 bits" id="F16" token="F16" value="4"></bitenum>
    <bitenum description="32 x 32 bits" id="F32" token="F32" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description="FIFO status" end="16" id="TX_FIFO_FULL" rwaccess="R" width="1">
    <bitenum description="The TX FIFO is not full (the FIFO can accept at least one more 32-bit valuel)" id="NOT_FULL" token="NOT_FULL" value="0"></bitenum>
    <bitenum description="The TX FIFO is full" id="FULL" token="FULL" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="Indicates if previously scheduled activities (packets, BTA) are still being processed. Forced to 1 if VC is enabled. Software should check this bit is 0 before changing channel configuration." end="15" id="VC_BUSY" rwaccess="R" width="1">
    <bitenum description="No pending operations for this VC" id="COMPLETED" token="COMPLETED" value="0"></bitenum>
    <bitenum description="Pending operations for this VC" id="BUSY" token="BUSY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="Ping-pong buffer busy status." end="14" id="PP_BUSY" rwaccess="R" width="1">
    <bitenum description="Software is permitted to write a new header for VP command mode traffic." id="PP_FREE" token="PP_FREE" value="0"></bitenum>
    <bitenum description="Software is NOT permitted to write a new header for VP command mode traffic." id="PP_BUSY" token="PP_BUSY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="Selection between video port 1 and video port 2.  If CSI2_GNQ.NB_VIDEO_PORTS=0, the bit-field is ignored since only video port 1 is present." end="13" id="VP_SOURCE" rwaccess="RW" width="1">
    <bitenum description="The video port 1 is selected." id="VIDEO_PORT_1" token="VIDEO_PORT_1" value="0"></bitenum>
    <bitenum description="The video port 2 is selected." id="VIDEO_PORT_2" token="VIDEO_PORT_2" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description="Byte order for RBG565" end="12" id="RGB565_ORDER" rwaccess="RW" width="1">
    <bitenum description="Byte order as documented in the MIPI DBI-2 spec" id="RGB565_DBI2" token="RGB565_DBI2" value="0"></bitenum>
    <bitenum description="Byte order as for video mode" id="RGB565_VIDEO" token="RGB565_VIDEO" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description="Defines the size of the OCP data bus" end="10" id="OCP_DATA_BUS_WIDTH" rwaccess="RW" width="2">
    <bitenum description="16-bits data width (LSB of the 32-bit OCP port data bus)" id="F16" token="F16" value="0"></bitenum>
    <bitenum description="24-bits data width (LSB of the 32-bit OCP port data bus)" id="F24" token="F24" value="1"></bitenum>
    <bitenum description="2x16-bits data width (first pixel on the LSB of the 32-bit OCP port data bus and second pixel on the MSB of the 32-bit OCP port data bus for the same OCP access)" id="F1616" token="F1616" value="2"></bitenum>
    <bitenum description="32-bits data width" id="F32" token="F32" value="3"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description="Selection of the mode. The information is used by HW only if MODE=COMMAND_MODE otherwise it is ignored." end="9" id="MODE_SPEED" rwaccess="RW" width="1">
    <bitenum description="Low power mode (CMOS) is used to send short and long packets to the peripheral." id="LP" token="LP" value="0"></bitenum>
    <bitenum description="High Speed mode (SLVS) is used to send short and long packets to the peripheral." id="HS" token="HS" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="Enables the Error Correction Code generation for the transmit header (short and long packets)." end="8" id="ECC_TX_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="Enables the checksum generation for the transmit payload (long packet only)." end="7" id="CS_TX_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled. The value 0x00 is used." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. The Check-sum value is calculated by HW." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="Send the bus turn around to the peripheral. It can be used when the automatic mode is enabled (BTA_SHORT_EN=1 or/and BTA_LONG_EN=1). In that case only one BTA is sent to the peripheral. The manual mode is used to allow the user to define for which packets, the turn around is required for example getting acknowledge from the peripheral." end="6" id="BTA_EN" rwaccess="RW" width="1">
    <bitenum description="READS: BTA generation is completed. It is reset by HW when it is completed. WRITES: Cancellation of the BTA generation (not guarantee since it could already on going, shall not be used)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="READS: BTA generation has been requested by user (it could be on going but not completed). WRITES: Request for BTA generation." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="FIFO status" end="5" id="TX_FIFO_NOT_EMPTY" rwaccess="R" width="1">
    <bitenum description="The TX FIFO is empty (the FIFO does not contain any data for the virtual channel)" id="EMPTY" token="EMPTY" value="0"></bitenum>
    <bitenum description="The TX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)" id="NOT_EMPTY" token="NOT_EMPTY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="Selection of the mode" end="4" id="MODE" rwaccess="RW" width="1">
    <bitenum description="Command mode." id="COMMAND_MODE" token="COMMAND_MODE" value="0"></bitenum>
    <bitenum description="Video mode. The bit-fields MODE_SPEED and SOURCE are not used by HW. The bit-field VP_SOURCE is used to select between video port 1 and video port 2 when two video ports are present." id="VIDEO_MODE" token="VIDEO_MODE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="Enables the automatic bus turn-around after completion of each long packet transmission." end="3" id="BTA_LONG_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Enables the automatic bus turn-around after completion of each short packet transmission." end="2" id="BTA_SHORT_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Selection of the source between OCP and the Video port(s) (used by the HW only if MODE=COMMAND MODE (0x0) otherwise it is ignored). The number of available video ports is defined in CSI2_GNQ.NB_VIDEO_PORTS." end="1" id="SOURCE" rwaccess="RW" width="1">
    <bitenum description="All the data are provided by the slave port. Any transfer on the video port is ignored for this virtual channel." id="OCP_SLAVE_PORT" token="OCP_SLAVE_PORT" value="0"></bitenum>
    <bitenum description="If MODE=VIDEO_MODE. the data received on the video port 1 or video port 2, selected using VP_SOURCE (pixels and enabled synchronization events using CSI2_CTRL1.VP_HSYNC_START, CSI2_CTRL1.VP_HSYNC_END, CSI2_CTRL1.VP_VSYNC_START, CSI2_CTRL1.VP_VSYNC_END for video port 1 and CSI2_CTRL2.VP_HSYNC_START, CSI2_CTRL2.VP_HSYNC_END, CSI2_CTRL2.VP_VSYNC_START, CSI2_CTRL2.VP_VSYNC_END for video port 2) are sent on the virtual channel (only one virtual channel can be associated with the video port, it is the SW responsibility to ensure that no more than one virtual channel is enabled with the video port as the main source for data).  If MODE=COMMAND_MODE, the VP.STALL signal is used by the protocol engine to indicate when new data are required. The synchronization signals are not generated by the display controller.  Regardless of the MODE, no data can be provided on the OCP slave port." id="VIDEO_PORT" token="VIDEO_PORT" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Enables the virtual channel." end="0" id="VC_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled. The virtual channel shall be disabled for any register change in the CSI2_VC_... registers the corresponding virtual channel id (except for setting the bit-fields/registers:   CSI2_VC_CTRL.BTA_EN, CSI2_VC_TE.TE_SIZE,  CSI2_VC_TE.TE_START, CSI2_VC_LONG_,,, CSI2_VC_SHORT_..., CSI2_VC_IRQ...)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. No change is allowed to the virtual channel registers expect resetting the VC_EN." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_TE_2" description="CONTROL REGISTER - Virtual channel  This register controls the tearing effect logic. It defines the size of the transfer when TE occurs and enables the automatic TE mode." id="CSI2_VC_TE_2" offset="0x144" width="32">
    
  <bitfield begin="31" description="Manual control of the start of the transfer. The user can use the TE interrupt in order to know that the TE trigger has been received prior to set the TE_START bit-field. It is not mandatory to use the TE interrupt." end="31" id="TE_START" rwaccess="RW" width="1">
    <bitenum description="Indicates the end of the transfer. The bit can be used by user to cancel the transfer if not already started. The FIFO shall be flushed by SW to ensure there is no data remaining in it." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Starts the transfer of the data. The size is defined in TE_SIZE. The bit-field is set until the transfer is completed. It is reset by HW when the transfer is completed." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="Tearing Effect Control" end="30" id="TE_EN" rwaccess="RW" width="1">
    <bitenum description="Disables the automatic transfer. The user shall use the interruption in order to know when TE PHY trigger is received or when the TE is detected on the input CMOS signals. The HW reset the bit-field when the transfer is completed (TE_SIZE=0)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enables the automatic transfer of the data using the TE PHY trigger or one of the TE input signals as a synchronization event. The bit-field TE_LINE defines if the CMOS signal is used or if the PHY trigger is used." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="" end="29" id="TE_LINE" rwaccess="RW" width="1">
    <bitenum description="Disabled the TE CMOS signalling for the automatic data transfer. The CSI2 PHY trigger is used for the automactic data transfer." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enables the TE CMOS signalling for the automatic data transfer. The CSI2 PHY trigger is not used for the automactic data transfer." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description="Selection between TE0 and TE1 cmos signals." end="28" id="TE_LINE_NB" rwaccess="RW" width="1">
    <bitenum description="TE0 cmos input line is selected" id="TE0" token="TE0" value="0"></bitenum>
    <bitenum description="TE1 cmos input line is selected" id="TE1" token="TE1" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description="Reserved" end="24" id="RESERVED" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="23" description="Defines the number of byte (payload data excluding the check -sum) to be sent. The write into the register CSI2_VC_LONG_PACKET_HEADER shall be performed by the user before sending data from the register CSI2_VC_LONG_PACKET_PAYLOAD. The register value is decremented for every byte sent of the CSI2 link. At the end of the transfer (TE_SIZE=0), the bit-field TE_EN is reset by HW. The DMA_request shall be asserted when the trigger is received in order to receive data in the TX FIFO. It shall not be used until all data (TE_SIZE) have been received in the FIFO." end="0" id="TE_SIZE" rwaccess="RW" width="24"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_LONG_PACKET_HEADER_2" description="LONG  PACKET HEADER INFORMATION -Virtual channel  This register sets the 32-bit DATA_ID + Word count + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1.  DATA_ID is located at bit[7:0] WC is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)" id="CSI2_VC_LONG_PACKET_HEADER_2" offset="0x148" width="32">
    
  <bitfield begin="31" description=" Packet header information: DATA ID + DATA FIELD +ECC" end="0" id="HEADER" rwaccess="W" width="32"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_LONG_PACKET_PAYLOAD_2" description="LONG PACKET PAYLOAD INFORMATION -Virtual channel  This register sets the payload information (excluding Check-sum). The HW shall capture the word count in the packet header (in CSI2_VC_LONG_PACKET_HEADER) in order to determine the last valid data. (the virtual channel id can be different than VC).  Byte1 is bit[7:0] Byte2 is bit[15:8] Byte3 is bit[23:16] Byte4 is bit[31:24] Byten is sent before Byten+1 (Least significant byte first and least significant bit first)" id="CSI2_VC_LONG_PACKET_PAYLOAD_2" offset="0x14C" width="32">
    
  <bitfield begin="31" description="Packet payload information (excluding check-sum)" end="0" id="PAYLOAD" rwaccess="W" width="32"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_SHORT_PACKET_HEADER_2" description="SHORT PACKET HEADER INFORMATION -Virtual channel  This register sets the 24-bit DATA_ID + Short Packet Data Field + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1.  DATA_ID is located at bit[7:0] Short Packet Data field is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)" id="CSI2_VC_SHORT_PACKET_HEADER_2" offset="0x150" width="32">
    
  <bitfield begin="31" description="WRITES: Packet header information: DATA ID + DATA FIELD +ECC written into the TX FIFO READS: 32-bit values read from the RX FIFO" end="0" id="HEADER" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_IRQSTATUS_2" description="INTERRUPT STATUS REGISTER - Virtual channel  This register regroups all the events related to the virtual channel." id="CSI2_VC_IRQSTATUS_2" offset="0x158" width="32">
    
  <bitfield begin="31" description="Reserved" end="9" id="RESERVED" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="Video Port ping-pong buffer busy status. PP_BUSY has changed from 1 to 0." end="8" id="PP_BUSY_CHANGE_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="FIFO underflow status. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has underflowed which means that   the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." end="7" id="FIFO_TX_UDF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="ECC error status (short and long packets). No correction of the header because of more than 1-bit error." end="6" id="ECC_NO_CORRECTION_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Virtual channel - BTA status." end="5" id="BTA_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="FIFO overflow error status. The FIFO used on the slave port for buffering the data received on the CSI2 link for the virtual channel has overflowed. " end="4" id="FIFO_RX_OVF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="FIFO overflow error status. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has overflowed." end="3" id="FIFO_TX_OVF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." end="2" id="PACKET_SENT_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Virtual channel - ECC has been used to do the correction of the only 1-bit error status (short and long packet)." end="1" id="ECC_CORRECTION_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Virtual channel - Check-Sum mismatch status." end="0" id="CS_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_IRQENABLE_2" description="INTERRUPT ENABLE REGISTER - Virtual channel  This register regroups all the events related to virtual channel." id="CSI2_VC_IRQENABLE_2" offset="0x15C" width="32">
    
  <bitfield begin="31" description="Reserved" end="9" id="RESERVED" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="Video Port ping-pong buffer busy status." end="8" id="PP_BUSY_CHANGE_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="FIFO underflow enable. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has underflowed which means that   the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." end="7" id="FIFO_TX_UDF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="ECC error (short and long packets). No correction of the header because of more than 1-bit error." end="6" id="ECC_NO_CORRECTION_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Virtual channel -Bus turn around reception" end="5" id="BTA_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="FIFO overflow enable. The FIFO used on the slave port for buffering the data received on the CSI2 link for the virtual channel has overflowed." end="4" id="FIFO_RX_OVF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="FIFO overflow enable. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has overflowed." end="3" id="FIFO_TX_OVF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." end="2" id="PACKET_SENT_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Virtual channel - ECC has been used to correct the only 1-bit error (short and long packet)." end="1" id="ECC_CORRECTION_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Virtual channel - Check-Sum of the payload mismatch detection" end="0" id="CS_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
  </register>






 <register acronym="CSI2_VC_CTRL_3" description="CONTROL REGISTER - Virtual channel  This register controls the virtual channel." id="CSI2_VC_CTRL_3" offset="0x160" width="32">
    
  <bitfield begin="31" description="DCS command code value to insert between header and video port or OCP slave  data when enabled by DCS_CMD_ENABLE (only when TE mechanism is not used otherwise the bit-field DCS_CMD_CODE is ignored by CSI2 protocol engine)." end="31" id="DCS_CMD_CODE" rwaccess="RW" width="1">
    <bitenum description="DCS write memory continue code is inserted." id="DCS_CONTINUE" token="DCS_CONTINUE" value="0"></bitenum>
    <bitenum description="DCS write memory start code is inserted." id="DCS_START" token="DCS_START" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="Enables automatic insertion of DCS command codes when data is sourced by the video port." end="30" id="DCS_CMD_ENABLE" rwaccess="RW" width="1">
    <bitenum description="DCS command code is NOT inserted when command mode traffic is coming from the Video Port or OCP slave port." id="DCS_DISABLE" token="DCS_DISABLE" value="0"></bitenum>
    <bitenum description="DCS command code is inserted automatically when command mode traffic is coming from the Video Port  or OCP slave port." id="DCS_ENABLE" token="DCS_ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="Selection of the use of the DMA request (associated to the  RX FIFO)" end="27" id="DMA_RX_REQ_NB" rwaccess="RW" width="3">
    <bitenum description="DMA_req0 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 0)" id="DMA_REQ0" token="DMA_REQ0" value="0"></bitenum>
    <bitenum description="DMA_req1 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 1)" id="DMA_REQ1" token="DMA_REQ1" value="1"></bitenum>
    <bitenum description="DMA_req2 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 2)" id="DMA_REQ2" token="DMA_REQ2" value="2"></bitenum>
    <bitenum description="DMA_req3 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is equal to 3)" id="DMA_REQ3" token="DMA_REQ3" value="3"></bitenum>
    <bitenum description="No DMA req selected" id="NO_DMA_REQ" token="NO_DMA_REQ" value="4"></bitenum>
  </bitfield>
    
  <bitfield begin="26" description="Defines the threshold value for the DMA request (associated to the RX FIFO)" end="24" id="DMA_RX_THRESHOLD" rwaccess="RW" width="3">
    <bitenum description="1x 32 bits" id="F1" token="F1" value="0"></bitenum>
    <bitenum description="2 x 32 bits" id="F2" token="F2" value="1"></bitenum>
    <bitenum description="4 x 32 bits" id="F4" token="F4" value="2"></bitenum>
    <bitenum description="8 x 32 bits" id="F8" token="F8" value="3"></bitenum>
    <bitenum description="16 x 32 bits" id="F16" token="F16" value="4"></bitenum>
    <bitenum description="32 x 32 bits" id="F32" token="F32" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="23" description="Selection of the use of the DMA request (associated to the TX FIFO)" end="21" id="DMA_TX_REQ_NB" rwaccess="RW" width="3">
    <bitenum description="DMA_req0 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 0)" id="DMA_REQ0" token="DMA_REQ0" value="0"></bitenum>
    <bitenum description="DMA_req1 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 1)" id="DMA_REQ1" token="DMA_REQ1" value="1"></bitenum>
    <bitenum description="DMA_req2 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is greater than 2)" id="DMA_REQ2" token="DMA_REQ2" value="2"></bitenum>
    <bitenum description="DMA_req3 is selected (valid only if CSI2_GNQ.NB_DMA_REQUEST is equal to 3)" id="DMA_REQ3" token="DMA_REQ3" value="3"></bitenum>
    <bitenum description="No DMA req selected" id="NO_DMA_REQ" token="NO_DMA_REQ" value="4"></bitenum>
  </bitfield>
    
  <bitfield begin="20" description="FIFO status" end="20" id="RX_FIFO_NOT_EMPTY" rwaccess="R" width="1">
    <bitenum description="The RX FIFO is empty (the FIFO does not contain any data for the virtual channel)" id="EMPTY" token="EMPTY" value="0"></bitenum>
    <bitenum description="The RX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)" id="NOT_EMPTY" token="NOT_EMPTY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="19" description="Defines the threshold value for the DMA request (associated to the TX FIFO)" end="17" id="DMA_TX_THRESHOLD" rwaccess="RW" width="3">
    <bitenum description="1x 32 bits" id="F1" token="F1" value="0"></bitenum>
    <bitenum description="2 x 32 bits" id="F2" token="F2" value="1"></bitenum>
    <bitenum description="4 x 32 bits" id="F4" token="F4" value="2"></bitenum>
    <bitenum description="8 x 32 bits" id="F8" token="F8" value="3"></bitenum>
    <bitenum description="16 x 32 bits" id="F16" token="F16" value="4"></bitenum>
    <bitenum description="32 x 32 bits" id="F32" token="F32" value="5"></bitenum>
  </bitfield>
    
  <bitfield begin="16" description="FIFO status" end="16" id="TX_FIFO_FULL" rwaccess="R" width="1">
    <bitenum description="The TX FIFO is not full (the FIFO can accept at least one more 32-bit valuel)" id="NOT_FULL" token="NOT_FULL" value="0"></bitenum>
    <bitenum description="The TX FIFO is full" id="FULL" token="FULL" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="15" description="Indicates if previously scheduled activities (packets, BTA) are still being processed. Forced to 1 if VC is enabled. Software should check this bit is 0 before changing channel configuration." end="15" id="VC_BUSY" rwaccess="R" width="1">
    <bitenum description="No pending operations for this VC" id="COMPLETED" token="COMPLETED" value="0"></bitenum>
    <bitenum description="Pending operations for this VC" id="BUSY" token="BUSY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="14" description="Ping-pong buffer busy status." end="14" id="PP_BUSY" rwaccess="R" width="1">
    <bitenum description="Software is permitted to write a new header for VP command mode traffic." id="PP_FREE" token="PP_FREE" value="0"></bitenum>
    <bitenum description="Software is NOT permitted to write a new header for VP command mode traffic." id="PP_BUSY" token="PP_BUSY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="13" description="Selection between video port 1 and video port 2.  If CSI2_GNQ.NB_VIDEO_PORTS=0, the bit-field is ignored since only video port 1 is present." end="13" id="VP_SOURCE" rwaccess="RW" width="1">
    <bitenum description="The video port 1 is selected." id="VIDEO_PORT_1" token="VIDEO_PORT_1" value="0"></bitenum>
    <bitenum description="The video port 2 is selected." id="VIDEO_PORT_2" token="VIDEO_PORT_2" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="12" description="Byte order for RBG565" end="12" id="RGB565_ORDER" rwaccess="RW" width="1">
    <bitenum description="Byte order as documented in the MIPI DBI-2 spec" id="RGB565_DBI2" token="RGB565_DBI2" value="0"></bitenum>
    <bitenum description="Byte order as for video mode" id="RGB565_VIDEO" token="RGB565_VIDEO" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="11" description="Defines the size of the OCP data bus" end="10" id="OCP_DATA_BUS_WIDTH" rwaccess="RW" width="2">
    <bitenum description="16-bits data width (LSB of the 32-bit OCP port data bus)" id="F16" token="F16" value="0"></bitenum>
    <bitenum description="24-bits data width (LSB of the 32-bit OCP port data bus)" id="F24" token="F24" value="1"></bitenum>
    <bitenum description="2x16-bits data width (first pixel on the LSB of the 32-bit OCP port data bus and second pixel on the MSB of the 32-bit OCP port data bus for the same OCP access)" id="F1616" token="F1616" value="2"></bitenum>
    <bitenum description="32-bits data width" id="F32" token="F32" value="3"></bitenum>
  </bitfield>
    
  <bitfield begin="9" description="Selection of the mode. The information is used by HW only if MODE=COMMAND_MODE otherwise it is ignored." end="9" id="MODE_SPEED" rwaccess="RW" width="1">
    <bitenum description="Low power mode (CMOS) is used to send short and long packets to the peripheral." id="LP" token="LP" value="0"></bitenum>
    <bitenum description="High Speed mode (SLVS) is used to send short and long packets to the peripheral." id="HS" token="HS" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="8" description="Enables the Error Correction Code generation for the transmit header (short and long packets)." end="8" id="ECC_TX_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="Enables the checksum generation for the transmit payload (long packet only)." end="7" id="CS_TX_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled. The value 0x00 is used." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. The Check-sum value is calculated by HW." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="Send the bus turn around to the peripheral. It can be used when the automatic mode is enabled (BTA_SHORT_EN=1 or/and BTA_LONG_EN=1). In that case only one BTA is sent to the peripheral. The manual mode is used to allow the user to define for which packets, the turn around is required for example getting acknowledge from the peripheral." end="6" id="BTA_EN" rwaccess="RW" width="1">
    <bitenum description="READS: BTA generation is completed. It is reset by HW when it is completed. WRITES: Cancellation of the BTA generation (not guarantee since it could already on going, shall not be used)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="READS: BTA generation has been requested by user (it could be on going but not completed). WRITES: Request for BTA generation." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="FIFO status" end="5" id="TX_FIFO_NOT_EMPTY" rwaccess="R" width="1">
    <bitenum description="The TX FIFO is empty (the FIFO does not contain any data for the virtual channel)" id="EMPTY" token="EMPTY" value="0"></bitenum>
    <bitenum description="The TX FIFO is not empty (the FIFO contains at least one byte for the virtual channel)" id="NOT_EMPTY" token="NOT_EMPTY" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="Selection of the mode" end="4" id="MODE" rwaccess="RW" width="1">
    <bitenum description="Command mode." id="COMMAND_MODE" token="COMMAND_MODE" value="0"></bitenum>
    <bitenum description="Video mode. The bit-fields MODE_SPEED and SOURCE are not used by HW. The bit-field VP_SOURCE is used to select between video port 1 and video port 2 when two video ports are present." id="VIDEO_MODE" token="VIDEO_MODE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="Enables the automatic bus turn-around after completion of each long packet transmission." end="3" id="BTA_LONG_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Enables the automatic bus turn-around after completion of each short packet transmission." end="2" id="BTA_SHORT_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Selection of the source between OCP and the Video port(s) (used by the HW only if MODE=COMMAND MODE (0x0) otherwise it is ignored). The number of available video ports is defined in CSI2_GNQ.NB_VIDEO_PORTS." end="1" id="SOURCE" rwaccess="RW" width="1">
    <bitenum description="All the data are provided by the slave port. Any transfer on the video port is ignored for this virtual channel." id="OCP_SLAVE_PORT" token="OCP_SLAVE_PORT" value="0"></bitenum>
    <bitenum description="If MODE=VIDEO_MODE. the data received on the video port 1 or video port 2, selected using VP_SOURCE (pixels and enabled synchronization events using CSI2_CTRL1.VP_HSYNC_START, CSI2_CTRL1.VP_HSYNC_END, CSI2_CTRL1.VP_VSYNC_START, CSI2_CTRL1.VP_VSYNC_END for video port 1 and CSI2_CTRL2.VP_HSYNC_START, CSI2_CTRL2.VP_HSYNC_END, CSI2_CTRL2.VP_VSYNC_START, CSI2_CTRL2.VP_VSYNC_END for video port 2) are sent on the virtual channel (only one virtual channel can be associated with the video port, it is the SW responsibility to ensure that no more than one virtual channel is enabled with the video port as the main source for data).  If MODE=COMMAND_MODE, the VP.STALL signal is used by the protocol engine to indicate when new data are required. The synchronization signals are not generated by the display controller.  Regardless of the MODE, no data can be provided on the OCP slave port." id="VIDEO_PORT" token="VIDEO_PORT" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Enables the virtual channel." end="0" id="VC_EN" rwaccess="RW" width="1">
    <bitenum description="Disabled. The virtual channel shall be disabled for any register change in the CSI2_VC_... registers the corresponding virtual channel id (except for setting the bit-fields/registers:   CSI2_VC_CTRL.BTA_EN, CSI2_VC_TE.TE_SIZE,  CSI2_VC_TE.TE_START, CSI2_VC_LONG_,,, CSI2_VC_SHORT_..., CSI2_VC_IRQ...)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enabled. No change is allowed to the virtual channel registers expect resetting the VC_EN." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_TE_3" description="CONTROL REGISTER - Virtual channel  This register controls the tearing effect logic. It defines the size of the transfer when TE occurs and enables the automatic TE mode." id="CSI2_VC_TE_3" offset="0x164" width="32">
    
  <bitfield begin="31" description="Manual control of the start of the transfer. The user can use the TE interrupt in order to know that the TE trigger has been received prior to set the TE_START bit-field. It is not mandatory to use the TE interrupt." end="31" id="TE_START" rwaccess="RW" width="1">
    <bitenum description="Indicates the end of the transfer. The bit can be used by user to cancel the transfer if not already started. The FIFO shall be flushed by SW to ensure there is no data remaining in it." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Starts the transfer of the data. The size is defined in TE_SIZE. The bit-field is set until the transfer is completed. It is reset by HW when the transfer is completed." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="30" description="Tearing Effect Control" end="30" id="TE_EN" rwaccess="RW" width="1">
    <bitenum description="Disables the automatic transfer. The user shall use the interruption in order to know when TE PHY trigger is received or when the TE is detected on the input CMOS signals. The HW reset the bit-field when the transfer is completed (TE_SIZE=0)." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enables the automatic transfer of the data using the TE PHY trigger or one of the TE input signals as a synchronization event. The bit-field TE_LINE defines if the CMOS signal is used or if the PHY trigger is used." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="29" description="" end="29" id="TE_LINE" rwaccess="RW" width="1">
    <bitenum description="Disabled the TE CMOS signalling for the automatic data transfer. The CSI2 PHY trigger is used for the automactic data transfer." id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Enables the TE CMOS signalling for the automatic data transfer. The CSI2 PHY trigger is not used for the automactic data transfer." id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="28" description="Selection between TE0 and TE1 cmos signals." end="28" id="TE_LINE_NB" rwaccess="RW" width="1">
    <bitenum description="TE0 cmos input line is selected" id="TE0" token="TE0" value="0"></bitenum>
    <bitenum description="TE1 cmos input line is selected" id="TE1" token="TE1" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="27" description="Reserved" end="24" id="RESERVED" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="23" description="Defines the number of byte (payload data excluding the check -sum) to be sent. The write into the register CSI2_VC_LONG_PACKET_HEADER shall be performed by the user before sending data from the register CSI2_VC_LONG_PACKET_PAYLOAD. The register value is decremented for every byte sent of the CSI2 link. At the end of the transfer (TE_SIZE=0), the bit-field TE_EN is reset by HW. The DMA_request shall be asserted when the trigger is received in order to receive data in the TX FIFO. It shall not be used until all data (TE_SIZE) have been received in the FIFO." end="0" id="TE_SIZE" rwaccess="RW" width="24"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_LONG_PACKET_HEADER_3" description="LONG  PACKET HEADER INFORMATION -Virtual channel  This register sets the 32-bit DATA_ID + Word count + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1.  DATA_ID is located at bit[7:0] WC is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)" id="CSI2_VC_LONG_PACKET_HEADER_3" offset="0x168" width="32">
    
  <bitfield begin="31" description=" Packet header information: DATA ID + DATA FIELD +ECC" end="0" id="HEADER" rwaccess="W" width="32"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_LONG_PACKET_PAYLOAD_3" description="LONG PACKET PAYLOAD INFORMATION -Virtual channel  This register sets the payload information (excluding Check-sum). The HW shall capture the word count in the packet header (in CSI2_VC_LONG_PACKET_HEADER) in order to determine the last valid data. (the virtual channel id can be different than VC).  Byte1 is bit[7:0] Byte2 is bit[15:8] Byte3 is bit[23:16] Byte4 is bit[31:24] Byten is sent before Byten+1 (Least significant byte first and least significant bit first)" id="CSI2_VC_LONG_PACKET_PAYLOAD_3" offset="0x16C" width="32">
    
  <bitfield begin="31" description="Packet payload information (excluding check-sum)" end="0" id="PAYLOAD" rwaccess="W" width="32"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_SHORT_PACKET_HEADER_3" description="SHORT PACKET HEADER INFORMATION -Virtual channel  This register sets the 24-bit DATA_ID + Short Packet Data Field + ECC (the virtual channel id can be different than VC). The ECC will be computed if ECC_TX_EN is set to 1.  DATA_ID is located at bit[7:0] Short Packet Data field is located at bit[23:8] ECC is located at bit[31:24] (Least significant byte first and least significant bit first)" id="CSI2_VC_SHORT_PACKET_HEADER_3" offset="0x170" width="32">
    
  <bitfield begin="31" description="WRITES: Packet header information: DATA ID + DATA FIELD +ECC written into the TX FIFO READS: 32-bit values read from the RX FIFO" end="0" id="HEADER" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_IRQSTATUS_3" description="INTERRUPT STATUS REGISTER - Virtual channel  This register regroups all the events related to the virtual channel." id="CSI2_VC_IRQSTATUS_3" offset="0x178" width="32">
    
  <bitfield begin="31" description="Reserved" end="9" id="RESERVED" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="Video Port ping-pong buffer busy status. PP_BUSY has changed from 1 to 0." end="8" id="PP_BUSY_CHANGE_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="FIFO underflow status. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has underflowed which means that   the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." end="7" id="FIFO_TX_UDF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="ECC error status (short and long packets). No correction of the header because of more than 1-bit error." end="6" id="ECC_NO_CORRECTION_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Virtual channel - BTA status." end="5" id="BTA_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="FIFO overflow error status. The FIFO used on the slave port for buffering the data received on the CSI2 link for the virtual channel has overflowed. " end="4" id="FIFO_RX_OVF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="FIFO overflow error status. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has overflowed." end="3" id="FIFO_TX_OVF_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." end="2" id="PACKET_SENT_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Virtual channel - ECC has been used to do the correction of the only 1-bit error status (short and long packet)." end="1" id="ECC_CORRECTION_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Virtual channel - Check-Sum mismatch status." end="0" id="CS_IRQ" rwaccess="RW" width="1">
    <bitenum description="READS: Event is false. WRITES: Status bit unchanged." id="FALSE" token="FALSE" value="0"></bitenum>
    <bitenum description="READS: Event is true (pending). WRITES: Status bit is reset." id="TRUE" token="TRUE" value="1"></bitenum>
  </bitfield>
  </register>
  
  
  <register acronym="CSI2_VC_IRQENABLE_3" description="INTERRUPT ENABLE REGISTER - Virtual channel  This register regroups all the events related to virtual channel." id="CSI2_VC_IRQENABLE_3" offset="0x17C" width="32">
    
  <bitfield begin="31" description="Reserved" end="9" id="RESERVED" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="Video Port ping-pong buffer busy status." end="8" id="PP_BUSY_CHANGE_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="7" description="FIFO underflow enable. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has underflowed which means that   the data for the current packet have not been received in time since the transfer of the packet are already started (transfer started since the packet size is bigger than space allocated in the FIFO)." end="7" id="FIFO_TX_UDF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="6" description="ECC error (short and long packets). No correction of the header because of more than 1-bit error." end="6" id="ECC_NO_CORRECTION_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="5" description="Virtual channel -Bus turn around reception" end="5" id="BTA_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="4" description="FIFO overflow enable. The FIFO used on the slave port for buffering the data received on the CSI2 link for the virtual channel has overflowed." end="4" id="FIFO_RX_OVF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="3" description="FIFO overflow enable. The FIFO used on the slave port for buffering the data received on the OCP slave port for the virtual channel has overflowed." end="3" id="FIFO_TX_OVF_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="2" description="Indicates that a packet has been sent. It is used when BTA manual mode is used." end="2" id="PACKET_SENT_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="1" description="Virtual channel - ECC has been used to correct the only 1-bit error (short and long packet)." end="1" id="ECC_CORRECTION_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
    
  <bitfield begin="0" description="Virtual channel - Check-Sum of the payload mismatch detection" end="0" id="CS_IRQ_EN" rwaccess="RW" width="1">
    <bitenum description="Event is masked" id="DISABLE" token="DISABLE" value="0"></bitenum>
    <bitenum description="Event generates an interrupt when it occurs" id="ENABLE" token="ENABLE" value="1"></bitenum>
  </bitfield>
  </register>





</module>
