<?xml version="1.0" encoding="UTF-8"?>
<!-- This file was autogenerated by Socrates Bitwise, Duolog Technologies Ltd. -->
<module id="RFCORE_SFR" HW_revision="" XML_version="1.0" description="Register fields should be considered static unless otherwise noted as dynamic." xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="setup_parser.xsd">
    <register acronym="MTCSPCFG" width="32" description="MAC Timer event configuration" id="MTCSPCFG" offset="0x0" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="3" end="4" rwaccess="RW" description="Selects the event that triggers an MT_EVENT2 pulse
000: MT_per_event
001: MT_cmp1_event
010: MT_cmp2_event
011: MTovf_per_event
100: MTovf_cmp1_event
101: MTovf_cmp2_event
110: Reserved
111: No event
" id="MACTIMER_EVENMT_CFG" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RO" description="Reserved. Always read 0." id="Reserved3" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="3" end="0" rwaccess="RW" description="Selects the event that triggers an MT_EVENT1 pulse
000: MT_per_event
001: MT_cmp1_event
010: MT_cmp2_event
011: MTovf_per_event
100: MTovf_cmp1_event
101: MTovf_cmp2_event
110: Reserved
111: No event
" id="MACTIMER_EVENT1_CFG" resetval="" >
        </bitfield>
    </register>
    <register acronym="MTCTRL" width="32" description="MAC Timer control register" id="MTCTRL" offset="0x4" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="4" end="4" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="0: Reading MTM0 with MTMSEL.MTMSEL = 000 latches the high byte of the timer, making it ready to be read from MTM1. Reading MTMOVF0 with MTMSEL.MTMOVFSEL = 000 latches the two most-significant bytes of the overflow counter, making it possible to read these from MTMOVF1 and MTMOVF2.
1: Reading MTM0 with MTMSEL.MTMSEL = 000 latches the high byte of the timer and the entire overflow counter at once, making it possible to read the values from MTM1, MTMOVF0, MTMOVF1, and MTMOVF2.
" id="LATCH_MODE" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="State of MAC Timer
0: Timer idle
1: Timer running
" id="STATE" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="0: Starting and stopping of timer is immediate; that is, synchronous with clk_rf_32m.
1: Starting and stopping of timer occurs at the first positive edge of the 32-kHz clock. For more details regarding timer start and stop, see Section 22.4.
" id="SYNC" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Write 1 to start timer, write 0 to stop timer. When read, it returns the last written value." id="RUN" resetval="" >
        </bitfield>
    </register>
    <register acronym="MTIRQM" width="32" description="MAC Timer interrupt mask" id="MTIRQM" offset="0x8" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="Enables the MACTIMER_OVF_COMPARE2 interrupt" id="MACTIMER_OVF_COMPARE2M" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="Enables the MACTIMER_OVF_COMPARE1 interrupt" id="MACTIMER_OVF_COMPARE1M" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="Enables the MACTIMER_OVF_PER interrupt" id="MACTIMER_OVF_PERM" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="Enables the MACTIMER_COMPARE2 interrupt" id="MACTIMER_COMPARE2M" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Enables the MACTIMER_COMPARE1 interrupt" id="MACTIMER_COMPARE1M" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Enables the MACTIMER_PER interrupt" id="MACTIMER_PERM" resetval="" >
        </bitfield>
    </register>
    <register acronym="MTIRQF" width="32" description="MAC Timer interrupt flags" id="MTIRQF" offset="0xc" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="Set when the MAC Timer overflow counter counts to the value set at MTovf_cmp2" id="MACTIMER_OVF_COMPARE2F" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="Set when the MAC Timer overflow counter counts to the value set at Timer 2 MTovf_cmp1" id="MACTIMER_OVF_COMPARE1F" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="Set when the MAC Timer overflow counter would have counted to a value equal to MTovf_per, but instead wraps to 0" id="MACTIMER_OVF_PERF" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="Set when the MAC Timer counter counts to the value set at MT_cmp2" id="MACTIMER_COMPARE2F" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Set when the MAC Timer counter counts to the value set at MT_cmp1" id="MACTIMER_COMPARE1F" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Set when the MAC Timer counter would have counted to a value equal to MT_per, but instead wraps to 0" id="MACTIMER_PERF" resetval="" >
        </bitfield>
    </register>
    <register acronym="MTMSEL" width="32" description="MAC Timer multiplex select" id="MTMSEL" offset="0x10" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Always read 0." id="Reserved8" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="3" end="4" rwaccess="RW" description="The value of this register selects the internal registers that are modified or read when accessing MTMOVF0, MTMOVF1, and MTMOVF2.
000: MTovf (overflow counter)
001: MTovf_cap (overflow capture)
010: MTovf_per (overflow period)
011: MTovf_cmp1 (overflow compare 1)
100: MTovf_cmp2 (overflow compare 2)
101 to 111: Reserved" id="MTMOVFSEL" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RO" description="Reserved. Read as 0." id="Reserved3" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="3" end="0" rwaccess="RW" description="The value of this register selects the internal registers that are modified or read when accessing MTM0 and MTM1.
000: MTtim (timer count value)
001: MT_cap (timer capture)
010: MT_per (timer period)
011: MT_cmp1 (timer compare 1)
100: MT_cmp2 (timer compare 2)
101 to 111: Reserved
MTM0" id="MTMSEL" resetval="" >
        </bitfield>
    </register>
    <register acronym="MTM0" width="32" description="MAC Timer multiplexed register 0" id="MTM0" offset="0x14" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Indirectly returns and modifies bits [7:0] of an internal register depending on the value of MTMSEL.MTMSEL.
When reading the MTM0 register with MTMSEL.MTMSEL set to 000 and MTCTRL.LATCH_MODE set to 0, the timer (MTtim) value is latched.
When reading the MTM0 register with MTMSEL.MTMSEL set to 000 and MTCTRL.LATCH_MODE set to 1, the timer (MTtim) and overflow counter (MTovf) values are latched." id="MTM0" resetval="" >
        </bitfield>
    </register>
    <register acronym="MTM1" width="32" description="MAC Timer multiplexed register 1" id="MTM1" offset="0x18" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Indirectly returns and modifies bits [15:8] of an internal register, depending on the value of MTMSEL.MTMSEL.
When reading the MTM0 register with MTMSEL.MTMSEL set to 000, the timer (MTtim) value is latched.
Reading this register with MTMSEL.MTMSEL set to 000 returns the latched value of MTtim[15:8]." id="MTM1" resetval="" >
        </bitfield>
    </register>
    <register acronym="MTMOVF2" width="32" description="MAC Timer multiplexed overflow register 2" id="MTMOVF2" offset="0x1c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Indirectly returns and modifies bits [23:16] of an internal register, depending on the value of MTMSEL.MTMOVFSEL.
Reading this register with MTMSEL.MTMOVFSEL set to 000 returns the latched value of MTovf[23:16]." id="MTMOVF2" resetval="" >
        </bitfield>
    </register>
    <register acronym="MTMOVF1" width="32" description="MAC Timer multiplexed overflow register 1" id="MTMOVF1" offset="0x20" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Indirectly returns and modifies bits [15:8] of an internal register, depending on the value of MTMSEL.MTMSEL.
Reading this register with MTMSEL.MTMOVFSEL set to 000 returns the latched value of MTovf[15:8]." id="MTMOVF1" resetval="" >
        </bitfield>
    </register>
    <register acronym="MTMOVF0" width="32" description="MAC Timer multiplexed overflow register 0" id="MTMOVF0" offset="0x24" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RW" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Indirectly returns and modifies bits [7:0] of an internal register, depending on the value of MTMSEL.MTMOVFSEL.
When reading the MTMOVF0 register with MTMSEL.MTMOVFSEL set to 000 and MTCTRL.LATCH_MODE set to 0, the overflow counter value (MTovf) is latched.
When reading the MTM0 register with MTMSEL.MTMOVFSEL set to 000 and MTCTRL.LATCH_MODE set to 1, the overflow counter value (MTovf) is latched." id="MTMOVF0" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFDATA" width="32" description="The TX FIFO and RX FIFO may be accessed through this register. Data is written to the TX FIFO when writing to the RFD register. Data is read from the RX FIFO when the RFD register is read. The XREG registers RXFIFOCNT and TXFIFOCNT provide information on the amount of data in the FIFOs. The FIFO contents can be cleared by issuing SFLUSHRX and SFLUSHTX." id="RFDATA" offset="0x28" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Data written to the register is written to the TX FIFO. When reading this register, data from the RX FIFO is read." id="RFD" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFERRF" width="32" description="RF error interrupt flags" id="RFERRF" offset="0x2c" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Reserved. Read as 0." id="Reserved" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="A command strobe was issued when it could not be processed.
Triggered if trying to disable the radio when it is already disabled, or when trying to do a SACK, SACKPEND, or SNACK command when not in active RX.
0: No interrupt pending
1: Interrupt pending" id="STROBEERR" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="TX FIFO underflowed.
0: No interrupt pending
1: Interrupt pending" id="TXUNDERF" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="TX FIFO overflowed.
0: No interrupt pending
1: Interrupt pending" id="TXOVERF" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="RX FIFO underflowed.
0: No interrupt pending
1: Interrupt pending" id="RXUNDERF" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="RX FIFO overflowed.
0: No interrupt pending
1: Interrupt pending" id="RXOVERF" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Reception of a frame was aborted.
0: No interrupt pending
1: Interrupt pending" id="RXABO" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="The frequency synthesizer failed to achieve lock after time-out, or lock is lost during reception. The receiver must be restarted to clear this error situation.
0: No interrupt pending
1: Interrupt pending" id="NLOCK" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFIRQF1" width="32" description="RF interrupt flags" id="RFIRQF1" offset="0x30" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="2" end="6" rwaccess="RO" description="Reserved. Read as 0." id="Reserved" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="Execution continued after a wait instruction in CSP.
0: No interrupt pending
1: Interrupt pending" id="CSP_WAIT" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="CSP has stopped program execution.
0: No interrupt pending
1: Interrupt pending" id="CSP_STOP" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="Manual interrupt generated from CSP
0: No interrupt pending
1: Interrupt pending" id="CSP_MANINT" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="Radio state-machine has entered the IDLE state.
0: No interrupt pending
1: Interrupt pending" id="RFIDLE" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="A complete frame has been transmitted.
0: No interrupt pending
1: Interrupt pending" id="TXDONE" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="An acknowledgement frame has been completely transmitted.
0: No interrupt pending
1: Interrupt pending" id="TXACKDONE" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFIRQF0" width="32" description="RF interrupt flags" id="RFIRQF0" offset="0x34" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="1" end="7" rwaccess="RW" description="The RXENABLE register has gone from a nonzero state to an all-zero state.
0: No interrupt pending
1: Interrupt pending" id="RXMASKZERO" resetval="" >
        </bitfield>
        <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="A complete frame has been received.
0: No interrupt pending
1: Interrupt pending" id="RXPKTDONE" resetval="" >
        </bitfield>
        <bitfield range="" begin="5" width="1" end="5" rwaccess="RW" description="Frame has passed frame filtering.
0: No interrupt pending
1: Interrupt pending" id="FRAME_ACCEPTED" resetval="" >
        </bitfield>
        <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="Source match is found.
0: No interrupt pending
1: Interrupt pending" id="SRC_MATCH_FOUND" resetval="" >
        </bitfield>
        <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="Source matching is complete.
0: No interrupt pending
1: Interrupt pending" id="SRC_MATCH_DONE" resetval="" >
        </bitfield>
        <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="The number of bytes in the RX FIFO is greater than the threshold. Also raised when a complete frame is received, and when a packet is read out completely and more complete packets are available.
0: No interrupt pending
1: Interrupt pending" id="FIFOP" resetval="" >
        </bitfield>
        <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="SFD has been received or transmitted.
0: No interrupt pending
1: Interrupt pending" id="SFD" resetval="" >
        </bitfield>
        <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Reserved
0: No interrupt pending
1: Interrupt pending" id="ACT_UNUSED" resetval="" >
        </bitfield>
    </register>
    <register acronym="RFST" width="32" description="RF CSMA-CA/strobe processor" id="RFST" offset="0x38" >
        <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="This register is 8 bits in a 32-bit address space." id="Reserved32" resetval="" >
        </bitfield>
        <bitfield range="" begin="7" width="8" end="0" rwaccess="RW" description="Data written to this register is written to the CSP instruction memory. Reading this register returns the CSP instruction currently being executed." id="INSTR" resetval="" >
        </bitfield>
    </register>
</module>
