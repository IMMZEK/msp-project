<module name="CPTS" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="CPTS_IDVER" acronym="CPTS_IDVER" offset="0x0" width="32" description="CPTS revision">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="0x-" description="CPTS revision value" range="" rwaccess="R"/>
  </register>
  <register id="CPTS_CONTROL" acronym="CPTS_CONTROL" offset="0x4" width="32" description="Time sync control register">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="HW4_TS_PUSH_EN" width="1" begin="11" end="11" resetval="0x0" description="Hardware push 4 enable" range="" rwaccess="RW"/>
    <bitfield id="HW3_TS_PUSH_EN" width="1" begin="10" end="10" resetval="0x0" description="Hardware push 3 enable" range="" rwaccess="RW"/>
    <bitfield id="HW2_TS_PUSH_EN" width="1" begin="9" end="9" resetval="0x0" description="Hardware push 2 enable" range="" rwaccess="RW"/>
    <bitfield id="HW1_TS_PUSH_EN" width="1" begin="8" end="8" resetval="0x0" description="Hardware push 1 enable" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="7" end="2" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="INT_TEST" width="1" begin="1" end="1" resetval="0x0" description="Interrupt Test - When set, this bit allows the raw interrupt to be written to facilitate interrupt test." range="" rwaccess="RW"/>
    <bitfield id="CPTS_EN" width="1" begin="0" end="0" resetval="0x0" description="Time Sync Enable - When disabled (cleared to zero), the RCLK domain is held in reset. 0 - Time Sync Disabled 1 - Time Sync Enabled" range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_PUSH" acronym="CPTS_TS_PUSH" offset="0xC" width="32" description="Time stamp event push register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TS_PUSH" width="1" begin="0" end="0" resetval="0x0" description="Time stamp event push - When a logic high is written to this bit a time stamp event is pushed onto the event FIFO. The time stamp value is the time of the write of this register, not the time of the event read. The time stamp value can then be read on interrupt via the event registers. Software should not push a second time stamp event onto the event FIFO until the first time stamp value has been read from the event FIFO (there should be only one time stamp event in the event FIFO at any given time). This bit is write only and always reads zero." range="" rwaccess="W"/>
  </register>
  <register id="CPTS_TS_LOAD_VAL" acronym="CPTS_TS_LOAD_VAL" offset="0x10" width="32" description="Time stamp load value register">
    <bitfield id="TS_LOAD_VAL" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp Load Value - Writing theCPTS_TS_LOAD_EN[0] TS_LOAD_EN bit causes the value contained in this register to be written into the time stamp. The time stamp value is read by initiating a time stamp push event, not by reading this register. When reading this register, the value read is not the time stamp, but is the value that was last written to this register." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_TS_LOAD_EN" acronym="CPTS_TS_LOAD_EN" offset="0x14" width="32" description="Time stamp load enable register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TS_LOAD_EN" width="1" begin="0" end="0" resetval="0x0" description="Time Stamp Load - Writing a one to this bit enables the time stamp value to be written via theCPTS_TS_LOAD_VAL register. This feature is included for test purposes. This bit is write only." range="" rwaccess="W"/>
  </register>
  <register id="CPTS_INTSTAT_RAW" acronym="CPTS_INTSTAT_RAW" offset="0x20" width="32" description="Time sync interrupt status raw register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TS_PEND_RAW" width="1" begin="0" end="0" resetval="0x0" description="TS_PEND_RAW int read (before enable). Writable whenCPTS_CONTROL[1] INT_TEST = 1. A one in this bit indicates that there is one or more events in the event FIFO." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_INTSTAT_MASKED" acronym="CPTS_INTSTAT_MASKED" offset="0x24" width="32" description="Time sync interrupt status masked register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TS_PEND" width="1" begin="0" end="0" resetval="0x0" description="TS_PEND masked interrupt read (after enable)." range="" rwaccess="R"/>
  </register>
  <register id="CPTS_INT_ENABLE" acronym="CPTS_INT_ENABLE" offset="0x28" width="32" description="Time sync interrupt enable register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TS_PEND_EN" width="1" begin="0" end="0" resetval="0x0" description="TS_PEND masked interrupt enable." range="" rwaccess="RW"/>
  </register>
  <register id="CPTS_EVENT_POP" acronym="CPTS_EVENT_POP" offset="0x30" width="32" description="Event interrupt pop register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="EVENT_POP" width="1" begin="0" end="0" resetval="0x0" description="Event Pop - When a logic high is written to this bit an event is popped off the event FIFO. The event FIFO pop occurs as part of the interrupt process after the event has been read in theCPTS_EVENT_LOW and CPTS_EVENT_HIGH registers. Popping an event discards the event and causes the next event, if any, to be moved to the top of the FIFO ready to be read by software on interrupt." range="" rwaccess="W"/>
  </register>
  <register id="CPTS_EVENT_LOW" acronym="CPTS_EVENT_LOW" offset="0x34" width="32" description="Lower 32-bits of the event value">
    <bitfield id="TIME_STAMP" width="32" begin="31" end="0" resetval="0x0" description="Time Stamp - The timestamp is valid for transmit, receive, and time stamp push event types. The timestamp value is not valid for counter roll event types." range="" rwaccess="R"/>
  </register>
  <register id="CPTS_EVENT_HIGH" acronym="CPTS_EVENT_HIGH" offset="0x38" width="32" description="Upper 32-bits of the event value">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PORT_NUMBER" width="5" begin="28" end="24" resetval="0x0" description="Port Number - indicates the port number of an ethernet event or the hardware push pin number (1 to 4)." range="" rwaccess="R"/>
    <bitfield id="EVENT_TYPE" width="4" begin="23" end="20" resetval="0x0" description="Time Sync Event Type 0x0 - Time Stamp Push Event 0x1 - Time Stamp Rollover Event 0x2 - Time Stamp Half Rollover Event 0x3 - Hardware Time Stamp Push Event 0x4 - Ethernet Receive Event 0x5 - Ethernet Transmit Event" range="" rwaccess="R"/>
    <bitfield id="MESSAGE_TYPE" width="4" begin="19" end="16" resetval="0x0" description="Message type - The message type value that was contained in an ethernet transmit or receive time sync packet. This field is valid only for ethernet transmit or receive events." range="" rwaccess="R"/>
    <bitfield id="SEQUENCE_ID" width="16" begin="15" end="0" resetval="0x0" description="Sequence ID - The 16-bit sequence id is the value that was contained in an ethernet transmit or receivetime sync packet. This field is valid only for ethernet transmit or receive events." range="" rwaccess="R"/>
  </register>
</module>
