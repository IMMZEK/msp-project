<?xml version="1.0" encoding="UTF-8"?>
<module id="IOC" HW_revision="" XML_version="1.0" description="IO Controller (IOC) - configures all the DIOs and resides in the MCU domain.

Note: Performing a write operation that includes IOC.IOCFGn.PORT_ID, may cause glitches on the IO. This can happen even if the write operation does not actually change the PORT_ID field (i.e. the write operation writes the same value as it already held) . This happens because the write operation triggers activities in the IOC that may, in some cases, cause glitches. To avoid glitches refrain from writing to this field other than when needed to actually change the PORT_ID value. Note that it is possible to write to parts of the IOCFGn register without writing to PORT_ID by using byte oriented writes to the parts of the register that do not contain PORT_ID

" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="setup_parser.xsd">
   <register acronym="IOCFG0" width="32" description="Configuration of DIO0" id="IOCFG0" offset="0x0">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input/output

" description="Open Source
Inverted input/output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / outut

" description="Open Source
Normal input / outut

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO0
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG1" width="32" description="Configuration of DIO1" id="IOCFG1" offset="0x4">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO1
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG2" width="32" description="Configuration of DIO2" id="IOCFG2" offset="0x8">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO2
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG3" width="32" description="Configuration of DIO3" id="IOCFG3" offset="0xc">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO3
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG4" width="32" description="Configuration of DIO4" id="IOCFG4" offset="0x10">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO4
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG5" width="32" description="Configuration of DIO5" id="IOCFG5" offset="0x14">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO5
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG6" width="32" description="Configuration of DIO6" id="IOCFG6" offset="0x18">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO6
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG7" width="32" description="Configuration of DIO7" id="IOCFG7" offset="0x1c">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO7
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG8" width="32" description="Configuration of DIO8" id="IOCFG8" offset="0x20">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO8
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG9" width="32" description="Configuration of DIO9" id="IOCFG9" offset="0x24">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO9
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG10" width="32" description="Configuration of DIO10" id="IOCFG10" offset="0x28">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO10
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG11" width="32" description="Configuration of DIO11" id="IOCFG11" offset="0x2c">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO11
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG12" width="32" description="Configuration of DIO12" id="IOCFG12" offset="0x30">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO12
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG13" width="32" description="Configuration of DIO13" id="IOCFG13" offset="0x34">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO13
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG14" width="32" description="Configuration of DIO14" id="IOCFG14" offset="0x38">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO14
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG15" width="32" description="Configuration of DIO15" id="IOCFG15" offset="0x3c">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO15
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG16" width="32" description="Configuration of DIO16" id="IOCFG16" offset="0x40">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x1">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO16
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG17" width="32" description="Configuration of DIO17" id="IOCFG17" offset="0x44">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x2">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO17
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG18" width="32" description="Configuration of DIO18" id="IOCFG18" offset="0x48">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO18
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG19" width="32" description="Configuration of DIO19" id="IOCFG19" offset="0x4c">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO19
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG20" width="32" description="Configuration of DIO20" id="IOCFG20" offset="0x50">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO20
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG21" width="32" description="Configuration of DIO21" id="IOCFG21" offset="0x54">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO21
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG22" width="32" description="Configuration of DIO22" id="IOCFG22" offset="0x58">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO22
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG23" width="32" description="Configuration of DIO23" id="IOCFG23" offset="0x5c">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO23
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG24" width="32" description="Configuration of DIO24" id="IOCFG24" offset="0x60">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO24
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG25" width="32" description="Configuration of DIO25" id="IOCFG25" offset="0x64">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO25
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG26" width="32" description="Configuration of DIO26" id="IOCFG26" offset="0x68">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO26
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG27" width="32" description="Configuration of DIO27" id="IOCFG27" offset="0x6c">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO27
 Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG28" width="32" description="Configuration of DIO28" id="IOCFG28" offset="0x70">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO28
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG29" width="32" description="Configuration of DIO29" id="IOCFG29" offset="0x74">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO29
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG30" width="32" description="Configuration of DIO30" id="IOCFG30" offset="0x78">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO30
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG31" width="32" description="Configuration of DIO31" id="IOCFG31" offset="0x7c">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO31
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AUX_IO" value="8" token="AUX IO " description="AUX IO "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG32" width="32" description="Configuration of DIO32" id="IOCFG32" offset="0x80">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO32
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG33" width="32" description="Configuration of DIO33" id="IOCFG33" offset="0x84">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO33
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG34" width="32" description="Configuration of DIO34" id="IOCFG34" offset="0x88">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO34
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG35" width="32" description="Configuration of DIO35" id="IOCFG35" offset="0x8c">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO35
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG36" width="32" description="Configuration of DIO36" id="IOCFG36" offset="0x90">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO36
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG37" width="32" description="Configuration of DIO37" id="IOCFG37" offset="0x94">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO37
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG38" width="32" description="Configuration of DIO38" id="IOCFG38" offset="0x98">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO38
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG39" width="32" description="Configuration of DIO39" id="IOCFG39" offset="0x9c">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO39
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG40" width="32" description="Configuration of DIO40" id="IOCFG40" offset="0xa0">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO40
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG41" width="32" description="Configuration of DIO41" id="IOCFG41" offset="0xa4">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO41
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG42" width="32" description="Configuration of DIO42" id="IOCFG42" offset="0xa8">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO42
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG43" width="32" description="Configuration of DIO43" id="IOCFG43" offset="0xac">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="3" end="18" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO43
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG44" width="32" description="Configuration of DIO44" id="IOCFG44" offset="0xb0">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO44
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG45" width="32" description="Configuration of DIO45" id="IOCFG45" offset="0xb4">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO45
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG46" width="32" description="Configuration of DIO46" id="IOCFG46" offset="0xb8">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO46
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
   <register acronym="IOCFG47" width="32" description="Configuration of DIO47" id="IOCFG47" offset="0xbc">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert MCU_WU event
1: Input edge detection asserts MCU_WU event" id="IOEV_MCU_WU_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="1" end="30" rwaccess="RW" description="0: Input hysteresis disable
1: Input hysteresis enable" id="HYST_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="29" width="1" end="29" rwaccess="RW" description="0: Input disabled
1: Input enabled

Note: If IO is configured for AUX   PORT_ID = 0x08, the enable will be ignored." id="IE" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RW" description="If DIO is configured GPIO or non-AON peripheral signals,  PORT_ID 0x00 or &#62;0x08:

00: No wake-up
01: No wake-up
10: Wakes up from shutdown if this pad is going low.
11: Wakes up from shutdown if this pad is going high.

If IO is configured for AON peripheral signals or AUX   PORT_ID 0x01-0x08, this register only sets wakeup enable or not. 

00, 01: Wakeup disabled
10, 11: Wakeup enabled 

Polarity is controlled from AON registers.

Note:When the MSB is set, the IOC will deactivate the output enable for the DIO." id="WU_CFG" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="26" width="3" end="24" rwaccess="RW" description="IO Mode 
Not applicable for IO configured for AON periph. signals and AUX   PORT_ID 0x01-0x08 
AUX has its own open_source/drain configuration. 

0x2: Reserved. Undefined behavior.
0x3: Reserved. Undefined behavior.
" id="IOMODE" resetval="0x0">
         <bitenum id="OPENSRC_INV" value="7" token="Open Source
Inverted input / output

" description="Open Source
Inverted input / output

"/>
         <bitenum id="OPENSRC" value="6" token="Open Source
Normal input / output

" description="Open Source
Normal input / output

"/>
         <bitenum id="OPENDR_INV" value="5" token="Open Drain
Inverted input / output

" description="Open Drain
Inverted input / output

"/>
         <bitenum id="OPENDR" value="4" token="Open Drain, 
Normal input / output

" description="Open Drain, 
Normal input / output

"/>
         <bitenum id="INV" value="1" token="Inverted input / ouput

" description="Inverted input / ouput

"/>
         <bitenum id="NORMAL" value="0" token="Normal input / output

" description="Normal input / output

"/>
      </bitfield>
      <bitfield range="" begin="23" width="1" end="23" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG2 event
1: Input edge detection asserts AON_PROG2 event" id="IOEV_AON_PROG2_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="22" width="1" end="22" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG1 event
1: Input edge detection asserts AON_PROG1 event" id="IOEV_AON_PROG1_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert AON_PROG0 event
1: Input edge detection asserts AON_PROG0 event" id="IOEV_AON_PROG0_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="2" end="19" rwaccess="RW" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="1" end="18" rwaccess="RW" description="0: No interrupt generation 
1: Enable interrupt generation for this IO (Only effective if EDGE_DET is enabled) 

" id="EDGE_IRQ_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RW" description="Enable generation of edge detection events on this IO 

" id="EDGE_DET" resetval="0x0">
         <bitenum id="BOTH" value="3" token="Positive and negative edge detection" description="Positive and negative edge detection"/>
         <bitenum id="POS" value="2" token="Positive edge detection" description="Positive edge detection"/>
         <bitenum id="NEG" value="1" token="Negative edge detection" description="Negative edge detection"/>
         <bitenum id="NONE" value="0" token="No edge detection" description="No edge detection"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RW" description="Pull control" id="PULL_CTL" resetval="0x3">
         <bitenum id="DIS" value="3" token="No pull" description="No pull"/>
         <bitenum id="UP" value="2" token="Pull up" description="Pull up"/>
         <bitenum id="DWN" value="1" token="Pull down" description="Pull down"/>
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="0: Normal slew rate
1: Enables reduced slew rate in output driver.
" id="SLEW_RED" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="2" end="11" rwaccess="RW" description="Selects IO current mode of this IO.

" id="IOCURR" resetval="0x0">
         <bitenum id="4_8MA" value="2" token="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO" description="Extended-Current (EC) mode: Min 8 mA for double drive strength IOs (min 4 mA for normal IOs) when IOSTR is set to AUTO"/>
         <bitenum id="4MA" value="1" token="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO" description="High-Current (HC) mode: Min 4 mA when IOSTR is set to AUTO"/>
         <bitenum id="2MA" value="0" token="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO" description="Low-Current (LC) mode: Min 2 mA when IOSTR is set to AUTO"/>
      </bitfield>
      <bitfield range="" begin="10" width="2" end="9" rwaccess="RW" description="Select source for drive strength control of this IO.
This setting controls the drive strength of the Low-Current (LC) mode. Higher drive strength can be selected in IOCURR" id="IOSTR" resetval="0x0">
         <bitenum id="MAX" value="3" token="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)" description="Maximum drive strength, controlled by AON_IOC:IOSTRMAX (min 2 mA @1.8V with default values)"/>
         <bitenum id="MED" value="2" token="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)" description="Medium drive strength, controlled by AON_IOC:IOSTRMED (min 2 mA @2.5V with default values)"/>
         <bitenum id="MIN" value="1" token="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)" description="Minimum drive strength, controlled by AON_IOC:IOSTRMIN (min 2 mA @3.3V with default values)"/>
         <bitenum id="AUTO" value="0" token="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)" description="Automatic drive strength, controlled by AON BATMON based on battery voltage. (min 2 mA @VDDS)"/>
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RW" description="Event asserted by this IO when edge detection is enabled

0: Input edge detection does not assert RTC event
1: Input edge detection asserts RTC event" id="IOEV_RTC_EN" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="7" end="0" rwaccess="RW" description="Selects usage for DIO47
Note: This field should not be written other than the times when PORT_ID value is specifically required to change. " id="PORT_ID" resetval="0x0">
         <bitenum id="I2C1_MSSCL" value="74" token="I2C1 Clock" description="I2C1 Clock"/>
         <bitenum id="I2C1_MSSDA" value="73" token="I2C1 Data" description="I2C1 Data"/>
         <bitenum id="UART3_RTS" value="72" token="UART3 RTS " description="UART3 RTS "/>
         <bitenum id="UART3_CTS" value="71" token="UART3 CTS " description="UART3 CTS "/>
         <bitenum id="UART3_TX" value="70" token="UART3 TX " description="UART3 TX "/>
         <bitenum id="UART3_RX" value="69" token="UART3 RX " description="UART3 RX "/>
         <bitenum id="UART2_RTS" value="68" token="UART2 RTS " description="UART2 RTS "/>
         <bitenum id="UART2_CTS" value="67" token="UART2 CTS " description="UART2 CTS "/>
         <bitenum id="UART2_TX" value="66" token="UART2 TX " description="UART2 TX "/>
         <bitenum id="UART2_RX" value="65" token="UART2 RX " description="UART2 RX "/>
         <bitenum id="SPI3_CLK" value="64" token="SPI3 CLK" description="SPI3 CLK"/>
         <bitenum id="SPI3_CS" value="63" token="SPI3 CS " description="SPI3 CS "/>
         <bitenum id="SPI3_TX" value="62" token="SPI3 TX " description="SPI3 TX "/>
         <bitenum id="SPI3_RX" value="61" token="SPI3 RX " description="SPI3 RX "/>
         <bitenum id="SPI2_CLK" value="60" token="SPI2 CLK" description="SPI2 CLK"/>
         <bitenum id="SPI2_CS" value="59" token="SPI2 CS " description="SPI2 CS "/>
         <bitenum id="SPI2_TX" value="58" token="SPI2 TX " description="SPI2 TX "/>
         <bitenum id="SPI2_RX" value="57" token="SPI2 RX " description="SPI2 RX "/>
         <bitenum id="RFC_SMI_CL_IN" value="56" token="RF Core SMI Command Link In" description="RF Core SMI Command Link In"/>
         <bitenum id="RFC_SMI_CL_OUT" value="55" token="RF Core SMI Command Link Out" description="RF Core SMI Command Link Out"/>
         <bitenum id="RFC_SMI_DL_IN" value="54" token="RF Core SMI Data Link In" description="RF Core SMI Data Link In"/>
         <bitenum id="RFC_SMI_DL_OUT" value="53" token="RF Core SMI Data Link Out" description="RF Core SMI Data Link Out"/>
         <bitenum id="RFC_GPI1" value="52" token="RF Core Data In 1" description="RF Core Data In 1"/>
         <bitenum id="RFC_GPI0" value="51" token="RF Core Data In 0" description="RF Core Data In 0"/>
         <bitenum id="RFC_GPO3" value="50" token="RF Core Data Out 3" description="RF Core Data Out 3"/>
         <bitenum id="RFC_GPO2" value="49" token="RF Core Data Out 2" description="RF Core Data Out 2"/>
         <bitenum id="RFC_GPO1" value="48" token="RF Core Data Out 1" description="RF Core Data Out 1"/>
         <bitenum id="RFC_GPO0" value="47" token="RF Core Data Out 0" description="RF Core Data Out 0"/>
         <bitenum id="RFC_TRC" value="46" token="RF Core Trace" description="RF Core Trace"/>
         <bitenum id="I2S_MCLK" value="41" token="I2S MCLK " description="I2S MCLK "/>
         <bitenum id="I2S_BCLK" value="40" token="I2S BCLK " description="I2S BCLK "/>
         <bitenum id="I2S_WCLK" value="39" token="I2S WCLK " description="I2S WCLK "/>
         <bitenum id="I2S_AD1" value="38" token="I2S Data 1" description="I2S Data 1"/>
         <bitenum id="I2S_AD0" value="37" token="I2S Data 0" description="I2S Data 0"/>
         <bitenum id="SPI1_CLK" value="36" token="SPI1 CLK" description="SPI1 CLK"/>
         <bitenum id="SPI1_CS" value="35" token="SPI1 CS " description="SPI1 CS "/>
         <bitenum id="SPI1_TX" value="34" token="SPI1 TX " description="SPI1 TX "/>
         <bitenum id="SPI1_RX" value="33" token="SPI1 RX " description="SPI1 RX "/>
         <bitenum id="CPU_SWV" value="32" token="CPU SWV " description="CPU SWV "/>
         <bitenum id="PORT_EVENT7" value="30" token="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 7
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT6" value="29" token="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 6
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT5" value="28" token="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 5
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT4" value="27" token="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 4
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT3" value="26" token="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 3
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT2" value="25" token="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 2
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT1" value="24" token="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 1
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="PORT_EVENT0" value="23" token="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on" description="PORT EVENT 0
Can be used as a general purpose IO event by selecting it through registers in the EVENT module, for example EVENT:GPT0ACAPTSEL.EV, EVENT:UDMACH14BSEL.EV, and so on"/>
         <bitenum id="UART1_RTS" value="22" token="UART1 RTS " description="UART1 RTS "/>
         <bitenum id="UART1_CTS" value="21" token="UART1 CTS " description="UART1 CTS "/>
         <bitenum id="UART1_TX" value="20" token="UART1 TX " description="UART1 TX "/>
         <bitenum id="UART1_RX" value="19" token="UART1 RX " description="UART1 RX "/>
         <bitenum id="UART0_RTS" value="18" token="UART0 RTS " description="UART0 RTS "/>
         <bitenum id="UART0_CTS" value="17" token="UART0 CTS " description="UART0 CTS "/>
         <bitenum id="UART0_TX" value="16" token="UART0 TX " description="UART0 TX "/>
         <bitenum id="UART0_RX" value="15" token="UART0 RX " description="UART0 RX "/>
         <bitenum id="I2C0_MSSCL" value="14" token="I2C0 Clock" description="I2C0 Clock"/>
         <bitenum id="I2C0_MSSDA" value="13" token="I2C0 Data" description="I2C0 Data"/>
         <bitenum id="SPI0_CLK" value="12" token="SPI0 CLK" description="SPI0 CLK"/>
         <bitenum id="SPI0_CS" value="11" token="SPI0 CS " description="SPI0 CS "/>
         <bitenum id="SPI0_TX" value="10" token="SPI0 TX " description="SPI0 TX "/>
         <bitenum id="SPI0_RX" value="9" token="SPI0 RX " description="SPI0 RX "/>
         <bitenum id="AON_CLK32K" value="7" token="AON 32 KHz clock (SCLK_LF)" description="AON 32 KHz clock (SCLK_LF)"/>
         <bitenum id="GPIO" value="0" token="General Purpose IO " description="General Purpose IO "/>
      </bitfield>
   </register>
</module>
