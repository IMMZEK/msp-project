<module name="SLIMBUS2_L3Interconnect" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="SLIMBUS_CMP_REVISION" acronym="SLIMBUS_CMP_REVISION" offset="0x0" width="32" description="IP Revision Identifier Used by software to track features, bugs, and compatibility">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="0x---- ----" description="Revision Number" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_CMP_HWINFO" acronym="SLIMBUS_CMP_HWINFO" offset="0x4" width="32" description="Those read-only, hardcoded fields display the values of the eponymous hardware configuration depending on module instantiation - SLIMBUS1 or SLIMBUS2.">
    <bitfield id="DEV" width="4" begin="31" end="28" resetval="0x7" description="Device count: number of devices supported by the component, most notably through the automatically reception of the messages addressed to them. Sets the number of instances of the 'DEV_XYZ' registers." range="" rwaccess="R"/>
    <bitfield id="TDC" width="4" begin="27" end="24" resetval="See" description="Transmit Data agent Count: Number of transmit hardware data agents (FIFO and associated logic) Sets the number of instances of the 'DCT_XYZ' registers." range="" rwaccess="R"/>
    <bitfield id="RDC" width="4" begin="23" end="20" resetval="See" description="Receive Data agent Count: Number of receive hardware data agents (FIFO and associated logic) Sets the number of instances of the 'DCR_XYZ' registers." range="" rwaccess="R"/>
    <bitfield id="RRSZ" width="8" begin="19" end="12" resetval="See" description="Size of receive FIFO RAM, in 32-bit words. RX message FIFO and all RX data FIFOs map to that shared RAM." range="" rwaccess="R"/>
    <bitfield id="TRSZ" width="8" begin="11" end="4" resetval="See" description="Size of transmit FIFO RAM, in 32-bit words. TX message FIFO and all TX data FIFOs map to that shared RAM." range="" rwaccess="R"/>
    <bitfield id="PSZ" width="4" begin="3" end="0" resetval="0x8" description="Size of (both TX and RX) FIFO segment word pointers, in bits. Determines the maximum number of (variable-sized) segment words a data agent FIFO can contain. Sets the width of FIFO control and status fields: size, threshold, level." range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_CMP_SYSCONFIG" acronym="SLIMBUS_CMP_SYSCONFIG" offset="0x10" width="32" description="This register allows controlling various parameters of the interconnect interface">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="AUTOGATINGDISABLE" width="1" begin="8" end="8" resetval="0" description="Control of the internal clock autogating for safety / debug only. No impact on module functionality, only on dynamic power." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AUTOGATINGDISABLE_0" description="Internal clocks are gated off when unused, power is optimized."/>
      <bitenum value="1" id="1" token="AUTOGATINGDISABLE_1" description="Internal clocks are free-running, maximum dynamic power."/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IDLEMODE" width="2" begin="3" end="2" resetval="0x2" description="Configuration of the local target state management mode. By definition, target can handle read/write transaction as long as it is out of IDLE state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IDLEMODE_0" description="Force-idle mode: local target's idle state follows (acknowledges) the system's idle requests unconditionally, that is, regardless of the IP module's internal requirements. Backup mode, for debug only."/>
      <bitenum value="1" id="1" token="IDLEMODE_1" description="No-idle mode: local target never enters idle state. Backup mode, for debug only."/>
      <bitenum value="3" id="3" token="IDLEMODE_3" description="Smart-idle wakeup-capable mode: local target's idle state eventually follows (acknowledges) the system's idle requests, depending on the IP module's internal requirements. IP module may generate (IRQ- or DMA-request-related) wakeup events when in idle state. Mode is only relevant if the appropriate IP module 'swakeup' output(s) is (are) implemented."/>
      <bitenum value="2" id="2" token="IDLEMODE_2" description="Smart-idle mode: local target's idle state eventually follows (acknowledges) the system's idle requests, depending on the IP module's internal requirements. IP module shall not generate (IRQ- or DMA-request-related) wakeup events."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="1" end="1" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="SOFTRESET" width="1" begin="0" end="0" resetval="0" description="Software reset. (Optional)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SOFTRESET_0_w" description="No action"/>
      <bitenum value="1" id="1" token="SOFTRESET_1_w" description="Initiate software reset"/>
      <bitenum value="1" id="1" token="SOFTRESET_1_r" description="Reset (software or other) ongoing"/>
      <bitenum value="0" id="0" token="SOFTRESET_0_r" description="Reset done, no pending action"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_CMP_IRQSTATUS_RAW" acronym="SLIMBUS_CMP_IRQSTATUS_RAW" offset="0x24" width="32" description="Component (that is, main) interrupt request status. Check the corresponding secondary status register. Raw status is set even if event is not enabled. Write 1 to set the (raw) status, mostly for debug.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="DCR_INFO_7" width="1" begin="19" end="19" resetval="0" description="IRQ status for RX Data agent 7 If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_7_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_7_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCR_INFO_7_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_7_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_6" width="1" begin="18" end="18" resetval="0" description="IRQ status for RX Data agent 6 If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_6_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_6_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCR_INFO_6_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_6_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_5" width="1" begin="17" end="17" resetval="0" description="IRQ status for RX Data agent 5 If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_5_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_5_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCR_INFO_5_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_5_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_4" width="1" begin="16" end="16" resetval="0" description="IRQ status for RX Data agent 4 If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_4_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_4_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCR_INFO_4_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_4_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_3" width="1" begin="15" end="15" resetval="0" description="IRQ status for RX Data agent 3 If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_3_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_3_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCR_INFO_3_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_3_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_2" width="1" begin="14" end="14" resetval="0" description="IRQ status for RX Data agent 2 If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_2_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_2_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCR_INFO_2_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_2_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_1" width="1" begin="13" end="13" resetval="0" description="IRQ status for RX Data agent 1 If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_1_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_1_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCR_INFO_1_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_1_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_0" width="1" begin="12" end="12" resetval="0" description="IRQ status for RX Data agent 0 If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_0_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_0_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCR_INFO_0_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_0_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_7" width="1" begin="11" end="11" resetval="0" description="IRQ status for TX Data agent 7" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_7_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_7_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCT_INFO_7_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_7_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_6" width="1" begin="10" end="10" resetval="0" description="IRQ status for TX Data agent 6" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_6_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_6_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCT_INFO_6_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_6_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_5" width="1" begin="9" end="9" resetval="0" description="IRQ status for TX Data agent 5" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_5_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_5_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCT_INFO_5_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_5_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_4" width="1" begin="8" end="8" resetval="0" description="IRQ status for TX Data agent 4" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_4_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_4_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCT_INFO_4_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_4_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_3" width="1" begin="7" end="7" resetval="0" description="IRQ status for TX Data agent 3" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_3_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_3_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCT_INFO_3_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_3_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_2" width="1" begin="6" end="6" resetval="0" description="IRQ status for TX Data agent 2" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_2_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_2_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCT_INFO_2_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_2_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_1" width="1" begin="5" end="5" resetval="0" description="IRQ status for TX Data agent 1" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_1_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_1_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCT_INFO_1_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_1_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_0" width="1" begin="4" end="4" resetval="0" description="IRQ status for TX Data agent 0" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_0_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_0_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="DCT_INFO_0_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_0_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="SMR_INFO" width="1" begin="3" end="3" resetval="0" description="IRQ status for message receive" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="SMR_INFO_0_w" description="No action"/>
      <bitenum value="1" id="1" token="SMR_INFO_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="SMR_INFO_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="SMR_INFO_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="SMT_INFO" width="1" begin="2" end="2" resetval="0" description="IRQ status for message transmit" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="SMT_INFO_0_w" description="No action"/>
      <bitenum value="1" id="1" token="SMT_INFO_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="SMT_INFO_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="SMT_INFO_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="FR_INFO" width="1" begin="1" end="1" resetval="0" description="IRQ status for Framer device, when active" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="FR_INFO_0_w" description="No action"/>
      <bitenum value="1" id="1" token="FR_INFO_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="FR_INFO_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="FR_INFO_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="FL_INFO" width="1" begin="0" end="0" resetval="0" description="IRQ status for Frame Layer" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="FL_INFO_0_w" description="No action"/>
      <bitenum value="1" id="1" token="FL_INFO_1_w" description="Trigger IRQ event by software"/>
      <bitenum value="1" id="1" token="FL_INFO_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="FL_INFO_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_CMP_IRQSTATUS" acronym="SLIMBUS_CMP_IRQSTATUS" offset="0x28" width="32" description="Component (that is, main) interrupt request status. Check the corresponding secondary status register. Enabled status isn't set unless event is enabled. Write 1 to clear the status after interrupt has been serviced (raw status gets cleared, that is, even if not enabled).">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="DCR_INFO_7" width="1" begin="19" end="19" resetval="0" description="IRQ status for RX Data agent 7. If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_7_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_7_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCR_INFO_7_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_7_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_6" width="1" begin="18" end="18" resetval="0" description="IRQ status for RX Data agent 6. If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_6_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_6_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCR_INFO_6_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_6_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_5" width="1" begin="17" end="17" resetval="0" description="IRQ status for RX Data agent 5 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_5_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_5_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCR_INFO_5_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_5_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_4" width="1" begin="16" end="16" resetval="0" description="IRQ status for RX Data agent 4 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_4_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_4_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCR_INFO_4_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_4_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_3" width="1" begin="15" end="15" resetval="0" description="IRQ status for RX Data agent 3 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_3_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_3_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCR_INFO_3_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_3_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_2" width="1" begin="14" end="14" resetval="0" description="IRQ status for RX Data agent 2 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_2_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_2_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCR_INFO_2_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_2_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_1" width="1" begin="13" end="13" resetval="0" description="IRQ status for RX Data agent 1 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_1_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_1_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCR_INFO_1_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_1_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCR_INFO_0" width="1" begin="12" end="12" resetval="0" description="IRQ status for RX Data agent 0 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_0_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_0_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCR_INFO_0_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCR_INFO_0_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_7" width="1" begin="11" end="11" resetval="0" description="IRQ status for TX Data agent 7" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_7_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_7_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCT_INFO_7_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_7_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_6" width="1" begin="10" end="10" resetval="0" description="IRQ status for TX Data agent 6" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_6_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_6_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCT_INFO_6_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_6_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_5" width="1" begin="9" end="9" resetval="0" description="IRQ status for TX Data agent 5" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_5_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_5_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCT_INFO_5_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_5_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_4" width="1" begin="8" end="8" resetval="0" description="IRQ status for TX Data agent 4" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_4_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_4_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCT_INFO_4_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_4_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_3" width="1" begin="7" end="7" resetval="0" description="IRQ status for TX Data agent 3" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_3_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_3_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCT_INFO_3_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_3_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_2" width="1" begin="6" end="6" resetval="0" description="IRQ status for TX Data agent 2" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_2_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_2_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCT_INFO_2_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_2_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_1" width="1" begin="5" end="5" resetval="0" description="IRQ status for TX Data agent 1" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_1_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_1_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCT_INFO_1_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_1_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DCT_INFO_0" width="1" begin="4" end="4" resetval="0" description="IRQ status for TX Data agent 0" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_0_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_0_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DCT_INFO_0_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DCT_INFO_0_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="SMR_INFO" width="1" begin="3" end="3" resetval="0" description="IRQ status for message receive" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMR_INFO_0_w" description="No action"/>
      <bitenum value="1" id="1" token="SMR_INFO_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="SMR_INFO_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="SMR_INFO_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="SMT_INFO" width="1" begin="2" end="2" resetval="0" description="IRQ status for message transmit" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMT_INFO_0_w" description="No action"/>
      <bitenum value="1" id="1" token="SMT_INFO_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="SMT_INFO_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="SMT_INFO_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="FR_INFO" width="1" begin="1" end="1" resetval="0" description="IRQ status for Framer device, when active" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="FR_INFO_0_w" description="No action"/>
      <bitenum value="1" id="1" token="FR_INFO_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="FR_INFO_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="FR_INFO_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="FL_INFO" width="1" begin="0" end="0" resetval="0" description="IRQ status for Frame Layer" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="FL_INFO_0_w" description="No action"/>
      <bitenum value="1" id="1" token="FL_INFO_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="FL_INFO_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="FL_INFO_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_CMP_IRQENABLE_SET" acronym="SLIMBUS_CMP_IRQENABLE_SET" offset="0x2C" width="32" description="Component (that is, main) interrupt request enable Write 1 to set (enable interrupt). Readout equal to corresponding _CLR register.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="DCR_INFO_7_EN" width="1" begin="19" end="19" resetval="0" description="IRQ enable for RX Data agent 7. If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_7_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_7_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_7_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_7_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_6_EN" width="1" begin="18" end="18" resetval="0" description="IRQ enable for RX Data agent 6. If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_6_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_6_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_6_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_6_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_5_EN" width="1" begin="17" end="17" resetval="0" description="IRQ enable for RX Data agent 5. If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_5_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_5_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_5_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_5_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_4_EN" width="1" begin="16" end="16" resetval="0" description="IRQ enable for RX Data agent 4. If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_4_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_4_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_4_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_4_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_3_EN" width="1" begin="15" end="15" resetval="0" description="IRQ enable for RX Data agent 3. If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_3_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_3_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_3_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_3_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_2_EN" width="1" begin="14" end="14" resetval="0" description="IRQ enable for RX Data agent 2. If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_2_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_2_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_2_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_2_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_1_EN" width="1" begin="13" end="13" resetval="0" description="IRQ enable for RX Data agent 1. If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_1_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_1_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_1_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_1_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_0_EN" width="1" begin="12" end="12" resetval="0" description="IRQ enable for RX Data agent 0. If implemented:" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCR_INFO_0_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_0_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_0_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_0_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_7_EN" width="1" begin="11" end="11" resetval="0" description="IRQ enable for TX Data agent 7" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_7_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_7_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_7_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_7_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_6_EN" width="1" begin="10" end="10" resetval="0" description="IRQ enable for TX Data agent 6" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_6_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_6_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_6_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_6_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_5_EN" width="1" begin="9" end="9" resetval="0" description="IRQ enable for TX Data agent 5" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_5_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_5_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_5_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_5_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_4_EN" width="1" begin="8" end="8" resetval="0" description="IRQ enable for TX Data agent 4" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_4_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_4_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_4_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_4_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_3_EN" width="1" begin="7" end="7" resetval="0" description="IRQ enable for TX Data agent 3" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_3_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_3_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_3_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_3_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_2_EN" width="1" begin="6" end="6" resetval="0" description="IRQ enable for TX Data agent 2" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_2_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_2_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_2_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_2_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_1_EN" width="1" begin="5" end="5" resetval="0" description="IRQ enable for TX Data agent 1" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_1_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_1_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_1_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_1_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_0_EN" width="1" begin="4" end="4" resetval="0" description="IRQ enable for TX Data agent 0" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_INFO_0_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_0_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_0_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_0_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="SMR_INFO_EN" width="1" begin="3" end="3" resetval="0" description="IRQ enable for message receive" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="SMR_INFO_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="SMR_INFO_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="SMR_INFO_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="SMR_INFO_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="SMT_INFO_EN" width="1" begin="2" end="2" resetval="0" description="IRQ enable for message transmit" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="SMT_INFO_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="SMT_INFO_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="SMT_INFO_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="SMT_INFO_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="FR_INFO_EN" width="1" begin="1" end="1" resetval="0" description="IRQ enable for Framer device, when active" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="FR_INFO_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="FR_INFO_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="FR_INFO_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="FR_INFO_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="FL_INFO_EN" width="1" begin="0" end="0" resetval="0" description="IRQ enable for Frame Layer" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="FL_INFO_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="FL_INFO_EN_1_w" description="Set IRQ enable (that is, enable event)"/>
      <bitenum value="1" id="1" token="FL_INFO_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="FL_INFO_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_CMP_IRQENABLE_CLR" acronym="SLIMBUS_CMP_IRQENABLE_CLR" offset="0x30" width="32" description="Component (that is, main) interrupt request enable Write 1 to clear (disable interrupt). Readout equal to corresponding _SET register.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="DCR_INFO_7_EN" width="1" begin="19" end="19" resetval="0" description="IRQ enable for RX data agent 7. If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_7_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_7_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_7_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_7_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_6_EN" width="1" begin="18" end="18" resetval="0" description="IRQ enable for RX data agent 6. If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_6_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_6_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_6_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_6_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_5_EN" width="1" begin="17" end="17" resetval="0" description="IRQ enable for RX data agent 5. If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_5_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_5_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_5_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_5_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_4_EN" width="1" begin="16" end="16" resetval="0" description="IRQ enable for RX data agent 4. If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_4_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_4_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_4_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_4_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_3_EN" width="1" begin="15" end="15" resetval="0" description="IRQ enable for RX data agent 3. If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_3_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_3_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_3_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_3_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_2_EN" width="1" begin="14" end="14" resetval="0" description="IRQ enable for RX data agent 2. If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_2_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_2_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_2_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_2_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_1_EN" width="1" begin="13" end="13" resetval="0" description="IRQ enable for RX data agent 1. If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_1_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_1_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_1_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_1_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCR_INFO_0_EN" width="1" begin="12" end="12" resetval="0" description="IRQ enable for RX data agent 0. If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_INFO_0_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_INFO_0_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCR_INFO_0_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCR_INFO_0_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_7_EN" width="1" begin="11" end="11" resetval="0" description="IRQ enable for TX Data agent 7" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_7_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_7_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_7_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_7_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_6_EN" width="1" begin="10" end="10" resetval="0" description="IRQ enable for TX Data agent 6" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_6_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_6_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_6_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_6_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_5_EN" width="1" begin="9" end="9" resetval="0" description="IRQ enable for TX Data agent 5" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_5_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_5_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_5_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_5_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_4_EN" width="1" begin="8" end="8" resetval="0" description="IRQ enable for TX Data agent 4" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_4_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_4_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_4_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_4_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_3_EN" width="1" begin="7" end="7" resetval="0" description="IRQ enable for TX Data agent 3" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_3_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_3_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_3_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_3_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_2_EN" width="1" begin="6" end="6" resetval="0" description="IRQ enable for TX Data agent 2" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_2_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_2_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_2_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_2_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_1_EN" width="1" begin="5" end="5" resetval="0" description="IRQ enable for TX Data agent 1" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_1_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_1_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_1_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_1_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="DCT_INFO_0_EN" width="1" begin="4" end="4" resetval="0" description="IRQ enable for TX Data agent 0" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_INFO_0_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_INFO_0_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="DCT_INFO_0_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="DCT_INFO_0_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="SMR_INFO_EN" width="1" begin="3" end="3" resetval="0" description="IRQ enable for message receive" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMR_INFO_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="SMR_INFO_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="SMR_INFO_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="SMR_INFO_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="SMT_INFO_EN" width="1" begin="2" end="2" resetval="0" description="IRQ enable for message transmit" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SMT_INFO_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="SMT_INFO_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="SMT_INFO_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="SMT_INFO_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="FR_INFO_EN" width="1" begin="1" end="1" resetval="0" description="IRQ enable for Framer device, when active" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="FR_INFO_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="FR_INFO_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="FR_INFO_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="FR_INFO_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
    <bitfield id="FL_INFO_EN" width="1" begin="0" end="0" resetval="0" description="IRQ enable for Frame Layer" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="FL_INFO_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="FL_INFO_EN_1_w" description="Clear IRQ enable (that is, disable event)"/>
      <bitenum value="1" id="1" token="FL_INFO_EN_1_r" description="IRQ event is enabled"/>
      <bitenum value="0" id="0" token="FL_INFO_EN_0_r" description="IRQ event is disabled"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_CMP_DMAENABLE_SET" acronym="SLIMBUS_CMP_DMAENABLE_SET" offset="0x34" width="32" description="Components DMA enable (1 bit per DMA-capable channel) Write 1 to set (enable DMA). Readout equal to corresponding _CLR register.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="DCR_DMA_7_EN" width="1" begin="19" end="19" resetval="0" description="DMA enable for RX Data agent 7 . If implemented:" range="" rwaccess="RW W1toSet.">
      <bitenum value="0" id="0" token="DCR_DMA_7_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_7_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_7_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_7_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_6_EN" width="1" begin="18" end="18" resetval="0" description="DMA enable for RX Data agent 6 . If implemented:" range="" rwaccess="RW W1toSet.">
      <bitenum value="0" id="0" token="DCR_DMA_6_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_6_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_6_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_6_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_5_EN" width="1" begin="17" end="17" resetval="0" description="DMA enable for RX Data agent 5 . If implemented:" range="" rwaccess="RW W1toSet.">
      <bitenum value="0" id="0" token="DCR_DMA_5_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_5_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_5_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_5_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_4_EN" width="1" begin="16" end="16" resetval="0" description="DMA enable for RX Data agent 4 . If implemented:" range="" rwaccess="RW W1toSet.">
      <bitenum value="0" id="0" token="DCR_DMA_4_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_4_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_4_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_4_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_3_EN" width="1" begin="15" end="15" resetval="0" description="DMA enable for RX Data agent 3 . If implemented:" range="" rwaccess="RW W1toSet.">
      <bitenum value="0" id="0" token="DCR_DMA_3_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_3_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_3_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_3_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_2_EN" width="1" begin="14" end="14" resetval="0" description="DMA enable for RX Data agent 2 . If implemented:" range="" rwaccess="RW W1toSet.">
      <bitenum value="0" id="0" token="DCR_DMA_2_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_2_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_2_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_2_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_1_EN" width="1" begin="13" end="13" resetval="0" description="DMA enable for RX Data agent 1 . If implemented:" range="" rwaccess="RW W1toSet.">
      <bitenum value="0" id="0" token="DCR_DMA_1_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_1_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_1_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_1_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_0_EN" width="1" begin="12" end="12" resetval="0" description="DMA enable for RX Data agent 0 . If implemented:" range="" rwaccess="RW W1toSet.">
      <bitenum value="0" id="0" token="DCR_DMA_0_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_0_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_0_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_0_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_7_EN" width="1" begin="11" end="11" resetval="0" description="DMA enable for TX Data agent 7" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_DMA_7_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_7_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_7_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_7_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_6_EN" width="1" begin="10" end="10" resetval="0" description="DMA enable for TX Data agent 6" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_DMA_6_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_6_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_6_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_6_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_5_EN" width="1" begin="9" end="9" resetval="0" description="DMA enable for TX Data agent 5" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_DMA_5_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_5_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_5_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_5_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_4_EN" width="1" begin="8" end="8" resetval="0" description="DMA enable for TX Data agent 4" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_DMA_4_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_4_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_4_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_4_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_3_EN" width="1" begin="7" end="7" resetval="0" description="DMA enable for TX Data agent 3" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_DMA_3_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_3_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_3_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_3_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_2_EN" width="1" begin="6" end="6" resetval="0" description="DMA enable for TX Data agent 2" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_DMA_2_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_2_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_2_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_2_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_1_EN" width="1" begin="5" end="5" resetval="0" description="DMA enable for TX Data agent 1" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_DMA_1_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_1_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_1_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_1_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_0_EN" width="1" begin="4" end="4" resetval="0" description="DMA enable for TX Data agent 0" range="" rwaccess="RW W1toSet">
      <bitenum value="0" id="0" token="DCT_DMA_0_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_0_EN_1_w" description="Set DMA enable (that is, enable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_0_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_0_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_CMP_DMAENABLE_CLR" acronym="SLIMBUS_CMP_DMAENABLE_CLR" offset="0x38" width="32" description="Components DMA enable (1 bit per DMA-capable channel) Write 1 to clear (disable DMA). Readout equal to corresponding _SET register.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x000" description="" range="" rwaccess="R"/>
    <bitfield id="DCR_DMA_7_EN" width="1" begin="19" end="19" resetval="0" description="DMA enable for RX Data agent 7 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_DMA_7_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_7_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_7_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_7_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_6_EN" width="1" begin="18" end="18" resetval="0" description="DMA enable for RX Data agent 6 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_DMA_6_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_6_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_6_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_6_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_5_EN" width="1" begin="17" end="17" resetval="0" description="DMA enable for RX Data agent 5 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_DMA_5_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_5_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_5_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_5_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_4_EN" width="1" begin="16" end="16" resetval="0" description="DMA enable for RX Data agent 4 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_DMA_4_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_4_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_4_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_4_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_3_EN" width="1" begin="15" end="15" resetval="0" description="DMA enable for RX Data agent 3 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_DMA_3_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_3_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_3_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_3_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_2_EN" width="1" begin="14" end="14" resetval="0" description="DMA enable for RX Data agent 2 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_DMA_2_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_2_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_2_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_2_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_1_EN" width="1" begin="13" end="13" resetval="0" description="DMA enable for RX Data agent 1 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_DMA_1_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_1_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_1_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_1_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCR_DMA_0_EN" width="1" begin="12" end="12" resetval="0" description="DMA enable for RX Data agent 0 . If implemented:" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCR_DMA_0_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCR_DMA_0_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCR_DMA_0_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCR_DMA_0_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_7_EN" width="1" begin="11" end="11" resetval="0" description="DMA enable for TX Data agent 7" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_DMA_7_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_7_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_7_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_7_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_6_EN" width="1" begin="10" end="10" resetval="0" description="DMA enable for TX Data agent 6" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_DMA_6_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_6_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_6_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_6_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_5_EN" width="1" begin="9" end="9" resetval="0" description="DMA enable for TX Data agent 5" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_DMA_5_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_5_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_5_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_5_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_4_EN" width="1" begin="8" end="8" resetval="0" description="DMA enable for TX Data agent 4" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_DMA_4_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_4_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_4_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_4_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_3_EN" width="1" begin="7" end="7" resetval="0" description="DMA enable for TX Data agent 3" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_DMA_3_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_3_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_3_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_3_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_2_EN" width="1" begin="6" end="6" resetval="0" description="DMA enable for TX Data agent 2" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_DMA_2_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_2_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_2_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_2_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_1_EN" width="1" begin="5" end="5" resetval="0" description="DMA enable for TX Data agent 1" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_DMA_1_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_1_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_1_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_1_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="DCT_DMA_0_EN" width="1" begin="4" end="4" resetval="0" description="DMA enable for TX Data agent 0" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DCT_DMA_0_EN_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DCT_DMA_0_EN_1_w" description="Clear DMA enable (that is, disable channel)"/>
      <bitenum value="1" id="1" token="DCT_DMA_0_EN_1_r" description="DMA channel is enabled"/>
      <bitenum value="0" id="0" token="DCT_DMA_0_EN_0_r" description="DMA chanel is disabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="3" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_CMP_IV" acronym="SLIMBUS_CMP_IV" offset="0x40" width="32" description="Component IV field, used as lower 8 bits of the devices' Enumeration Address (EA[47:0]). Identical for all devices of the component.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="IV" width="8" begin="7" end="0" resetval="0x00" description="Device component's Instance Value (IV[7:0])" range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_CMP_MI_PC" acronym="SLIMBUS_CMP_MI_PC" offset="0x44" width="32" description="Component MI and PC fields, used as upper 32 bits of the devices' Enumeration Address (EA[47:0]). Identical for all devices of the component.">
    <bitfield id="PC" width="16" begin="31" end="16" resetval="0x0000" description="Device component's Product Code (PC[15:0])" range="" rwaccess="RW"/>
    <bitfield id="MI" width="16" begin="15" end="0" resetval="0x0102" description="Device component's Manufacturer Index (MI[15:0])" range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_SMT_INFO" acronym="SLIMBUS_SMT_INFO" offset="0x50" width="32" description="IRQ status for Shared Message Transmit channel. Write 1 to a bit to clear it.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="ABORT" width="1" begin="7" end="7" resetval="0" description="TX message was aborted before completion because of message sync loss." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="ABORT_0_w" description="No action"/>
      <bitenum value="1" id="1" token="ABORT_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="ABORT_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="ABORT_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="UDEF" width="1" begin="5" end="5" resetval="0" description="TX message was UDEF'ed: undefined response, protocol error." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="UDEF_0_w" description="No action"/>
      <bitenum value="1" id="1" token="UDEF_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="UDEF_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="UDEF_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="NORE" width="1" begin="4" end="4" resetval="0" description="TX message was NORE'ed: no or all-zero message response" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="NORE_0_w" description="No action"/>
      <bitenum value="1" id="1" token="NORE_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="NORE_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="NORE_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="NACK" width="1" begin="3" end="3" resetval="0" description="TX message was NACK'ed: at least one of the recipient devices requested message retransmission." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="NACK_0_w" description="No action"/>
      <bitenum value="1" id="1" token="NACK_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="NACK_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="NACK_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="PACK" width="1" begin="2" end="2" resetval="0" description="TX message was PACK'ed: all recipient devices accepted the message." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="PACK_0_w" description="No action"/>
      <bitenum value="1" id="1" token="PACK_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="PACK_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="PACK_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="OVERFLOW" width="1" begin="1" end="1" resetval="0" description="Overflow in TX message FIFO: Software tried to write more bytes than available in the FIFO." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="OVERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="OVERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="MC_TX_COL" width="1" begin="0" end="0" resetval="0" description="Transmit collision in Message Channel (MC) during message transmission. Interface device class-specific information element (IE)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="MC_TX_COL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="MC_TX_COL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="MC_TX_COL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="MC_TX_COL_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_SMT_MESSAGE" acronym="SLIMBUS_SMT_MESSAGE" offset="0x54" width="32" description="Shared Message Transmit FIFO input">
    <bitfield id="TX_MESSAGE" width="32" begin="31" end="0" resetval="0x0000 0000" description="TX message byte(s), depending on packing mode. Reads return 0. Enter the whole message except last byte (Message Integrity MI and Response MR), and with a don't care placeholder for Primary Integrity (PI)." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_SMT_CONTROL" acronym="SLIMBUS_SMT_CONTROL" offset="0x58" width="32" description="Control of Shared Message channel Transmission.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="MESSAGE_ENABLE" width="1" begin="0" end="0" resetval="0" description="Enable the transmission of the message(s) previously written into the TX Message FIFO, with unlimited arbitration auto-retries. Self-cleared after either a message not get PACK'ed or the FIFO is empty." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MESSAGE_ENABLE_0_w" description="No effect"/>
      <bitenum value="1" id="1" token="MESSAGE_ENABLE_1_w" description="Request transmission of stored messages"/>
      <bitenum value="1" id="1" token="MESSAGE_ENABLE_1_r" description="Message transmission is ongoing"/>
      <bitenum value="0" id="0" token="MESSAGE_ENABLE_0_r" description="Message transmission is stopped / complete"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_SMT_FIFO_SETUP" acronym="SLIMBUS_SMT_FIFO_SETUP" offset="0x5C" width="32" description="Shared Message Transmit channel configuration. To be kept static during operation. Note that message segment word size is 2 slots = 1 byte (= message size granularity) and that message FIFO base address is always 0x0.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="PACKING" width="1" begin="7" end="7" resetval="0" description="Packing enable control for TX message FIFO" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PACKING_0" description="Packing disabled: one byte per access only (LSByte), byte enable is don't care."/>
      <bitenum value="1" id="1" token="PACKING_1" description="Packing enabled: one or several bytes per access, depending on byte enable."/>
    </bitfield>
    <bitfield id="SIZE_HI" width="2" begin="6" end="5" resetval="0x1" description="(Upper bits of the) capacity of shared TX message FIFO, in bytes, minus one. To be set for largest supported (transmitted) message(s)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SIZE_HI_0" description="16 bytes (minimum size)"/>
      <bitenum value="1" id="1" token="SIZE_HI_1" description="32 bytes (recommended)"/>
      <bitenum value="3" id="3" token="SIZE_HI_3" description="64 bytes (max size)"/>
      <bitenum value="2" id="2" token="SIZE_HI_2" description="48 bytes (large messages)"/>
    </bitfield>
    <bitfield id="SIZE_LO" width="4" begin="4" end="1" resetval="0xF" description="(Lower bits of the) capacity of shared TX message FIFO, in bytes, minus one. Read-only, for reference only." range="" rwaccess="R"/>
    <bitfield id="FIFO_CLEAR" width="1" begin="0" end="0" resetval="0" description="Returns FIFO to initial empty state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_w" description="No effect"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_w" description="Clear FIFO"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_r" description="Ongoing Clear. Completion requires the SLIMbus clock."/>
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_r" description="No event, last clear completed"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_SMR_INFO" acronym="SLIMBUS_SMR_INFO" offset="0x60" width="32" description="IRQ status for Shared Message Receive channel. Write 1 to a bit to clear it.">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="OVERFLOW" width="1" begin="4" end="4" resetval="0" description="Overflow in RX message FIFO: received message is larger than the FIFO." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="OVERFLOW_0_w" description="no action"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_w" description="clear event"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_r" description="event pending"/>
      <bitenum value="0" id="0" token="OVERFLOW_0_r" description="no event pending"/>
    </bitfield>
    <bitfield id="RECEIVED_RECONFIGURE" width="1" begin="3" end="3" resetval="0" description="RECONFIGURE_NOW message received, available in RX message FIFO" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="RECEIVED_RECONFIGURE_0_w" description="no action"/>
      <bitenum value="1" id="1" token="RECEIVED_RECONFIGURE_1_w" description="clear event"/>
      <bitenum value="1" id="1" token="RECEIVED_RECONFIGURE_1_r" description="event pending"/>
      <bitenum value="0" id="0" token="RECEIVED_RECONFIGURE_0_r" description="no event pending"/>
    </bitfield>
    <bitfield id="RECEIVED_MESSAGE" width="1" begin="2" end="2" resetval="0" description="Message available in the RX message FIFO. Clear bit to clear the FIFO and allow the reception of further messages (incoming messages will be NACK'ed until then)." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="RECEIVED_MESSAGE_0_w" description="no action"/>
      <bitenum value="1" id="1" token="RECEIVED_MESSAGE_1_w" description="clear event, clear FIFO, allow further messages."/>
      <bitenum value="1" id="1" token="RECEIVED_MESSAGE_1_r" description="event pending"/>
      <bitenum value="0" id="0" token="RECEIVED_MESSAGE_0_r" description="no event pending"/>
    </bitfield>
    <bitfield id="UNDERFLOW" width="1" begin="1" end="1" resetval="0" description="Underflow in RX message FIFO: Software tried to read out more bytes than available." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="UNDERFLOW_0_w" description="no action"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_w" description="clear event"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_r" description="event pending"/>
      <bitenum value="0" id="0" token="UNDERFLOW_0_r" description="no event pending"/>
    </bitfield>
    <bitfield id="MC_TX_COL" width="1" begin="0" end="0" resetval="0" description="Transmit collision in Message Channel (MC) during RX message during message reception. Interface device class-specific information element (IE)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="MC_TX_COL_0_w" description="no action"/>
      <bitenum value="1" id="1" token="MC_TX_COL_1_w" description="clear event"/>
      <bitenum value="1" id="1" token="MC_TX_COL_1_r" description="event pending"/>
      <bitenum value="0" id="0" token="MC_TX_COL_0_r" description="no event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_SMR_MESSAGE" acronym="SLIMBUS_SMR_MESSAGE" offset="0x64" width="32" description="Shared Message Receive channel FIFO output.">
    <bitfield id="RX_MESSAGE" width="32" begin="31" end="0" resetval="0x0000 0000" description="RX message byte(s), depending on packing mode. Writes have no effect. Readout value from an empty FIFO is undefined, that is, there is no defined 'reset value'. Message is guaranteed to have destination address matching a local device address (LA or EA), correct Primary and Message Integrity (PI and MI) and PACK Message Response (MR). Whole message available for readout, including the last byte (Message Integrity MI and Response MR)" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_SMR_CONTROL" acronym="SLIMBUS_SMR_CONTROL" offset="0x68" width="32" description="Control of Shared Message channel Reception.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="MESSAGE_DISABLE" width="1" begin="0" end="0" resetval="0" description="Disables the reception of incoming messages (that is, broadcast or locally addressed) into the RX Message FIFO. Same effect for the same value than SMR_INFO[2] RECEIVED_MESSAGE, but this bit can be set to 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MESSAGE_DISABLE_0" description="Enabled: incoming messages will be PACK'ed"/>
      <bitenum value="1" id="1" token="MESSAGE_DISABLE_1" description="Disabled: incoming messages will be NACK'ed"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_SMR_FIFO_SETUP" acronym="SLIMBUS_SMR_FIFO_SETUP" offset="0x6C" width="32" description="Shared Message Receive channel setup. To be kept static during operation. Note that message segment word size is 2 slots = 1 byte (= message size granularity) and that message FIFO base address is always 0x0.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="PACKING" width="1" begin="7" end="7" resetval="0" description="Packing enable control for RX message FIFO" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PACKING_0" description="Packing disabled: one byte per access only (LSByte), byte enable is don't care."/>
      <bitenum value="1" id="1" token="PACKING_1" description="Packing enabled: one or several bytes per access, depending on byte enable."/>
    </bitfield>
    <bitfield id="SIZE_HI" width="2" begin="6" end="5" resetval="0x1" description="(Upper bits of the) capacity of shared RX message FIFO, in bytes, minus one. To be set for largest supported (received) message." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SIZE_HI_0" description="16 bytes (minimum size)"/>
      <bitenum value="1" id="1" token="SIZE_HI_1" description="32 bytes (recommended)"/>
      <bitenum value="3" id="3" token="SIZE_HI_3" description="64 bytes (max size)"/>
      <bitenum value="2" id="2" token="SIZE_HI_2" description="48 bytes (large messages)"/>
    </bitfield>
    <bitfield id="SIZE_LO" width="4" begin="4" end="1" resetval="0xF" description="(Lower bits of the) capacity of shared RX message FIFO, in bytes, minus one. Read-only, for reference only." range="" rwaccess="R"/>
    <bitfield id="FIFO_CLEAR" width="1" begin="0" end="0" resetval="0" description="Returns message FIFO to initial empty state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_w" description="No effect"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_w" description="Clear FIFO"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_r" description="Ongoing Clear. Completion requires the SLIMbus clock."/>
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_r" description="No event, last clear completed"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_FL_INFO" acronym="SLIMBUS_FL_INFO" offset="0x70" width="32" description="Frame Layer IRQ status. Write 1 to a bit to clear it. Note: FS loss implies SFS loss, and SFS loss implies MS loss, but only the 'strongest' loss event is logged for a given event.">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="RECONFIGURED" width="1" begin="6" end="6" resetval="0" description="Reconfiguration boundary crossed" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="RECONFIGURED_0_w" description="No action"/>
      <bitenum value="1" id="1" token="RECONFIGURED_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="RECONFIGURED_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="RECONFIGURED_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="SAW_BUS_RESET" width="1" begin="5" end="5" resetval="0" description="Bus reset sequence detected on the bus: no activity on DATA line (all-zero) for 2 to 4 frames. Clock receiver FSM has returned to Reset state. Should trigger a local component reset (software sequence)." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="SAW_BUS_RESET_0_w" description="No action"/>
      <bitenum value="1" id="1" token="SAW_BUS_RESET_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="SAW_BUS_RESET_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="SAW_BUS_RESET_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="4" end="4" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="FOUND_MS" width="1" begin="3" end="3" resetval="0" description="Message sync was acquired: operational state reached" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="FOUND_MS_0_w" description="No action"/>
      <bitenum value="1" id="1" token="FOUND_MS_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="FOUND_MS_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="FOUND_MS_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="LOST_MS" width="1" begin="2" end="2" resetval="0" description="Message Synchronization was lost Interface device class-specific information element (IE) Note: Not asserted in case of FS or SFS loss." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="LOST_MS_0_w" description="No action"/>
      <bitenum value="1" id="1" token="LOST_MS_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="LOST_MS_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="LOST_MS_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="LOST_SFS" width="1" begin="1" end="1" resetval="0" description="Super Frame Synchronization was lost Interface device class-specific information element (IE) Note: Not asserted in case of FS loss." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="LOST_SFS_0_w" description="No action"/>
      <bitenum value="1" id="1" token="LOST_SFS_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="LOST_SFS_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="LOST_SFS_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="LOST_FS" width="1" begin="0" end="0" resetval="0" description="Frame Synchronization was lost Interface device class-specific information element (IE)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="LOST_FS_0_w" description="No action"/>
      <bitenum value="1" id="1" token="LOST_FS_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="LOST_FS_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="LOST_FS_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_FL_CONTROL" acronym="SLIMBUS_FL_CONTROL" offset="0x74" width="32" description="Frame Layer control. (Self-cleared bits)">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="VALIDATE_DCMAP" width="1" begin="8" end="8" resetval="0" description="Validates the mapping of data channels on devices: to be used after modifying the DC*_MAP* fields (DI and PN)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VALIDATE_DCMAP_0_w" description="No action"/>
      <bitenum value="1" id="1" token="VALIDATE_DCMAP_1_w" description="Validates all DCT_MAP / DCR_MAP values"/>
    </bitfield>
    <bitfield id="CLEAR_RECONFIGURATION" width="1" begin="7" end="7" resetval="0" description="Clear all updates cumulated since the last reconfiguration, return reconfiguration fields to currently active value. Self-cleared immediately." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLEAR_RECONFIGURATION_0_w" description="No action"/>
      <bitenum value="1" id="1" token="CLEAR_RECONFIGURATION_1_w" description="Clear reconfiguration"/>
    </bitfield>
    <bitfield id="BUS_SHUTDOWN" width="1" begin="6" end="6" resetval="0" description="Sets both the clock source or the clock receiver FSMs back to 'Undefined' state at the next reconfiguration boundary. Executed (and bit self-cleared) on next reconfiguration (forced or not); also cleared by a 'clear_reconfiguration'." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="BUS_SHUTDOWN_0_w" description="Cancel pending request (not used in normal operation) if any, otherwise no action"/>
      <bitenum value="1" id="1" token="BUS_SHUTDOWN_1_w" description="Assert request for next reconfiguration"/>
      <bitenum value="1" id="1" token="BUS_SHUTDOWN_1_r" description="Request pending for next reconfiguration"/>
      <bitenum value="0" id="0" token="BUS_SHUTDOWN_0_r" description="No request pending for next reconfiguration"/>
    </bitfield>
    <bitfield id="KILL_FS" width="1" begin="5" end="5" resetval="0" description="Force immediate Frame Synchronization loss (implying as well message and superframe sync) When in 'Operational', 'SeekingMessageSync' or 'SeekingSuperFrameSync' states, component shall go to 'SeekingFrameSync' and start reaquiring frame sync. No effect otherwise. For debug use." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="KILL_FS_0_w" description="No action"/>
      <bitenum value="1" id="1" token="KILL_FS_1_w" description="Force frame sync loss"/>
      <bitenum value="0" id="0" token="KILL_FS_0_r" description="Always reads 0 because of immediate action."/>
    </bitfield>
    <bitfield id="KILL_SFS" width="1" begin="4" end="4" resetval="0" description="Force SuperFrame Synchronization loss at next reconfiguration boundary (implying as well message sync loss). When in 'Operational' or 'SeekingMessageSync' states, component shall go to 'SeekingSuperFrameSync' and start reaquiring superframe sync. No effect otherwise. Used by clock receiver component upon imcompletely received reconfiguration sequence." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="KILL_SFS_0_w" description="No action"/>
      <bitenum value="1" id="1" token="KILL_SFS_1_w" description="Schedule superframe sync loss"/>
      <bitenum value="1" id="1" token="KILL_SFS_1_r" description="Superframe sync loss pending"/>
      <bitenum value="0" id="0" token="KILL_SFS_0_r" description="No pending superframe sync loss"/>
    </bitfield>
    <bitfield id="KILL_MS" width="1" begin="3" end="3" resetval="0" description="Force an immediate Message Synchronization loss. When in 'Operational' state, component shall go to 'SeekingMessageSync' and start reaquiring message sync. No effect otherwise. For debug use." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="KILL_MS_0_w" description="No action"/>
      <bitenum value="1" id="1" token="KILL_MS_1_w" description="Force message sync loss"/>
      <bitenum value="0" id="0" token="KILL_MS_0_r" description="Always reads 0 because of immediate action."/>
    </bitfield>
    <bitfield id="FORCE_RECONFIGURE" width="1" begin="2" end="2" resetval="0" description="Force a reconfiguration boundary at next superframe boundary, rather than wait for a RECONFIGURE_NOW() message." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FORCE_RECONFIGURE_0_w" description="Cancel pending request (not used in normal operation) if any, otherwise no action"/>
      <bitenum value="1" id="1" token="FORCE_RECONFIGURE_1_w" description="Assert reconfiguration request for next superframe boundary"/>
      <bitenum value="1" id="1" token="FORCE_RECONFIGURE_1_r" description="Reconfiguration request pending for next superframe boundary"/>
      <bitenum value="0" id="0" token="FORCE_RECONFIGURE_0_r" description="No request pending"/>
    </bitfield>
    <bitfield id="COMPONENT_RESET" width="1" begin="1" end="1" resetval="0" description="Component reset request control: Transitions clock receiver FSM to state 'Reset' (from any other state). Immediate action. Set upon reception of the RESET_DEVICE() message by the interface device, which requires a component-level reset. Note that a component-level reset is also required in case of bus reset, but the transition to 'Reset' state happens automatically in that case and this bit is not used." range="" rwaccess="RW">
      <bitenum value="1" id="1" token="COMPONENT_RESET_1_w" description="Assert request for next reconfiguration"/>
    </bitfield>
    <bitfield id="BOOT" width="1" begin="0" end="0" resetval="0" description="Boot the component when not in active framer mode (don't care when in active framer mode). Transitions clock receiver FSM from state 'Undefined' to 'Reset'." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="BOOT_0" description="No action"/>
      <bitenum value="1" id="1" token="BOOT_1" description="Enable clock receiver boot sequence"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_FL_SM" acronym="SLIMBUS_FL_SM" offset="0x78" width="32" description="Subframe mode (SM: defines control vs. data space partition) control and status Software must write in values : a) to use when booting in active framer mode. b) extracted from NEXT_SUBFRAME_MODE(SM), to use at following reconfiguration boundary. Hardware-updated upon superframe sync acquisition, when booting in clock receiver mode.">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="SM" width="5" begin="4" end="0" resetval="0x00" description="Subframe Mode, which sets Control Space Width (CSW) and Subframe Length (SFL), both expressed in slots. Note that we always have CSW &amp;amp;lt;= SFL since the control is included in the subframe." range="" rwaccess="RW">
      <bitenum value="13" id="13" token="SM_13" description="CSW=3; SFL=8 (37.5% control)"/>
      <bitenum value="21" id="21" token="SM_21" description="CSW=6; SFL=8 (75% control)"/>
      <bitenum value="30" id="30" token="SM_30" description="reserved. Same effect than 0b00000"/>
      <bitenum value="8" id="8" token="SM_8" description="CSW=2; SFL=6 (33.3% control)"/>
      <bitenum value="5" id="5" token="SM_5" description="CSW=1; SFL=8 (12.5% control)"/>
      <bitenum value="27" id="27" token="SM_27" description="CSW=12; SFL=32 (37.5% control)"/>
      <bitenum value="2" id="2" token="SM_2" description="reserved. Same as 0x00"/>
      <bitenum value="4" id="4" token="SM_4" description="CSW=1; SFL=6 (16.7% control)"/>
      <bitenum value="6" id="6" token="SM_6" description="CSW=1; SFL=24 (4.17% control)"/>
      <bitenum value="1" id="1" token="SM_1" description="reserved. Same as 0x05"/>
      <bitenum value="29" id="29" token="SM_29" description="CSW=16; SFL=32 (50% control)"/>
      <bitenum value="0" id="0" token="SM_0" description="CSW=8; SFL=8 (100% control vs. 0% data)"/>
      <bitenum value="11" id="11" token="SM_11" description="CSW=2; SFL=32 (6.25% control)"/>
      <bitenum value="3" id="3" token="SM_3" description="reserved. Same as 0x07"/>
      <bitenum value="23" id="23" token="SM_23" description="CSW=6; SFL=32 (18.8% control)"/>
      <bitenum value="17" id="17" token="SM_17" description="CSW=4; SFL=8 (50% control)"/>
      <bitenum value="10" id="10" token="SM_10" description="CSW=2; SFL=24 (8.33% control)"/>
      <bitenum value="9" id="9" token="SM_9" description="CSW=2; SFL=8 (25% control)"/>
      <bitenum value="16" id="16" token="SM_16" description="CSW=4; SFL=6 (66.7% control)"/>
      <bitenum value="18" id="18" token="SM_18" description="CSW=4; SFL=24 (16.7% control)"/>
      <bitenum value="19" id="19" token="SM_19" description="CSW=4; SFL=32 (12.5% control)"/>
      <bitenum value="24" id="24" token="SM_24" description="CSW=8; SFL=24 (33.3% control)"/>
      <bitenum value="20" id="20" token="SM_20" description="reserved. Same as 0x00"/>
      <bitenum value="14" id="14" token="SM_14" description="CSW=3; SFL=24 (12.5% control)"/>
      <bitenum value="22" id="22" token="SM_22" description="CSW=6; SFL=24 (25% control)"/>
      <bitenum value="28" id="28" token="SM_28" description="CSW=16; SFL=24 (66.7% control)"/>
      <bitenum value="7" id="7" token="SM_7" description="CSW=1; SFL=32 (3.13% control)"/>
      <bitenum value="25" id="25" token="SM_25" description="CSW=8; SFL=32 (25% control)"/>
      <bitenum value="31" id="31" token="SM_31" description="CSW=24; SFL=32 (75% control)"/>
      <bitenum value="26" id="26" token="SM_26" description="CSW=12; SFL=24 (50% control)"/>
      <bitenum value="15" id="15" token="SM_15" description="CSW=3; SFL=32 (9.38% control)"/>
      <bitenum value="12" id="12" token="SM_12" description="CSW=3; SFL=6 (50% control)"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_FL_CG" acronym="SLIMBUS_FL_CG" offset="0x7C" width="32" description="Clock Gear (CG) control and status Software must write in values : a) to use when booting in active framer mode. b) extracted from NEXT_CLOCK_GEAR(CG), to use at following reconfiguration boundary. Hardware-updated upon superframe sync acquisition, when booting in clock receiver mode.">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="CG" width="4" begin="3" end="0" resetval="0x0" description="Clock Gear (CG) to be used after the next reconfiguration boundary. Root / SLIMbus frequency ratio is defined as 2" range="" rwaccess="RW">
      <bitenum value="6" id="6" token="CG_6" description="Ratio to root frequency: 16"/>
      <bitenum value="1" id="1" token="CG_1" description="Ratio to root frequency: 512"/>
      <bitenum value="10" id="10" token="CG_10" description="Ratio to root frequency: 1 (undivided)"/>
      <bitenum value="7" id="7" token="CG_7" description="Ratio to root frequency: 8"/>
      <bitenum value="3" id="3" token="CG_3" description="Ratio to root frequency: 128"/>
      <bitenum value="2" id="2" token="CG_2" description="Ratio to root frequency: 256"/>
      <bitenum value="8" id="8" token="CG_8" description="Ratio to root frequency: 4"/>
      <bitenum value="9" id="9" token="CG_9" description="Ratio to root frequency: 2"/>
      <bitenum value="5" id="5" token="CG_5" description="Ratio to root frequency: 32"/>
      <bitenum value="4" id="4" token="CG_4" description="Ratio to root frequency: 64"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_FL_RF" acronym="SLIMBUS_FL_RF" offset="0x80" width="32" description="Root frequency (RF = SLIMbus clock frequency when in gear 10) control and status Software must write in values : a) to use when booting in active framer mode. b) extracted from NEXT_ROOT_FREQUENCY(RF), to use at following reconfiguration boundary. Hardware-updated upon superframe sync acquisition, when booting in clock receiver mode.">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="RF" width="4" begin="3" end="0" resetval="0x0" description="Root frequency" range="" rwaccess="RW">
      <bitenum value="6" id="6" token="RF_6" description="24 MHz"/>
      <bitenum value="1" id="1" token="RF_1" description="24.576 MHz"/>
      <bitenum value="7" id="7" token="RF_7" description="25 MHz"/>
      <bitenum value="0" id="0" token="RF_0" description="Root frequency not indicated"/>
      <bitenum value="2" id="2" token="RF_2" description="22.5792 MHz"/>
      <bitenum value="8" id="8" token="RF_8" description="26 MHz"/>
      <bitenum value="9" id="9" token="RF_9" description="27 MHz"/>
      <bitenum value="4" id="4" token="RF_4" description="16.8 MHz"/>
      <bitenum value="5" id="5" token="RF_5" description="19.2 MHz"/>
      <bitenum value="3" id="3" token="RF_3" description="15.36 MHz"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_FR_INFO" acronym="SLIMBUS_FR_INFO" offset="0x90" width="32" description="Framer device status (when active). Write 1 to a bit to clear it.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="CLOCK_RESTART" width="1" begin="5" end="5" resetval="0" description="Clock restart request event detected (that is, asynchronous DATA line transition during clock pause)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="CLOCK_RESTART_0" description="no event pending"/>
      <bitenum value="1" id="1" token="CLOCK_RESTART_1" description="event pending"/>
    </bitfield>
    <bitfield id="FRAMER_UNACTIVATED" width="1" begin="4" end="4" resetval="0" description="Framer has left clock source operational state. Set on ACTIVE_FRAMER information element deassertion. (framer device class-specific IE)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="FRAMER_UNACTIVATED_0" description="no event pending"/>
      <bitenum value="1" id="1" token="FRAMER_UNACTIVATED_1" description="event pending"/>
    </bitfield>
    <bitfield id="FRAMER_ACTIVATED" width="1" begin="3" end="3" resetval="0" description="Framer has reached clock source operational state. Set on ACTIVE_FRAMER information element assertion. (framer device class-specific IE)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="FRAMER_ACTIVATED_0" description="no event pending"/>
      <bitenum value="1" id="1" token="FRAMER_ACTIVATED_1" description="event pending"/>
    </bitfield>
    <bitfield id="GC_TX_COL" width="1" begin="2" end="2" resetval="0" description="Collision during guide byte transmit (Guide Channel) Framer device class-specific information element (IE)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="GC_TX_COL_0" description="no event pending"/>
      <bitenum value="1" id="1" token="GC_TX_COL_1" description="event pending"/>
    </bitfield>
    <bitfield id="FI_TX_COL" width="1" begin="1" end="1" resetval="0" description="Collision during Framing Information transmit (framing channel) Framer device class-specific information element (IE)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="FI_TX_COL_0" description="no event pending"/>
      <bitenum value="1" id="1" token="FI_TX_COL_1" description="event pending"/>
    </bitfield>
    <bitfield id="FS_TX_COL" width="1" begin="0" end="0" resetval="0" description="Collision during Frame Sync symbol transmit (framing channel) Framer device class-specific information element (IE)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="FS_TX_COL_0" description="no event pending"/>
      <bitenum value="1" id="1" token="FS_TX_COL_1" description="event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_FR_CLOCK_SOURCE" acronym="SLIMBUS_FR_CLOCK_SOURCE" offset="0x94" width="32" description="Root clock configuration for active framer mode, used at next reconfiguration boundary. Unused when not active framer.">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="CLKSEL" width="3" begin="6" end="4" resetval="0x0" description="SLIMbus clock selection" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLKSEL_0" description="FCLK1"/>
      <bitenum value="1" id="1" token="CLKSEL_1" description="FCLK2"/>
      <bitenum value="2" id="2" token="CLKSEL_2" description="FCLK3"/>
    </bitfield>
    <bitfield id="CLKDIV" width="4" begin="3" end="0" resetval="0x0" description="Root divider ratio, applied on clock input to obtain root clock, to be used at next reconfiguration boundary. Input/ root frequency ratio is defined as 2 With CG the SLIMbus clock gear, Input / SLIMbus frequency ratio is therefore 2 WARNING: that last ratio has to be 1 or greater, to be implementable by the actual clock divider." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="CLKDIV_6" description="Ratio is 2"/>
      <bitenum value="1" id="1" token="CLKDIV_1" description="Ratio is 1/16: Gears 7 to 10 forbidden"/>
      <bitenum value="10" id="10" token="CLKDIV_10" description="Ratio is 32"/>
      <bitenum value="7" id="7" token="CLKDIV_7" description="Ratio is 4"/>
      <bitenum value="0" id="0" token="CLKDIV_0" description="Ratio is 1/32: Gears 6 to 10 forbidden"/>
      <bitenum value="2" id="2" token="CLKDIV_2" description="Ratio is 1/8: Gears 8 to 10 forbidden"/>
      <bitenum value="8" id="8" token="CLKDIV_8" description="Ratio is 8"/>
      <bitenum value="9" id="9" token="CLKDIV_9" description="Ratio is 16"/>
      <bitenum value="4" id="4" token="CLKDIV_4" description="Ratio is 1/2: Gear 10 forbidden."/>
      <bitenum value="5" id="5" token="CLKDIV_5" description="Ratio is 1 (root freq. = input freq.)"/>
      <bitenum value="3" id="3" token="CLKDIV_3" description="Ratio is 1/4: Gears 9-10 forbidden"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_FR_CONTROL" acronym="SLIMBUS_FR_CONTROL" offset="0x98" width="32" description="Framer Device control. Unused when not active framer. (Self-cleared bits)">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="BUS_RESET" width="1" begin="1" end="1" resetval="0" description="Bus reset request control, when framer is already active. Set upon reception of the NEXT_RESET_BUS() message. Transitions clock source FSM to state 'StartingClock' (from 'Operational')." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="BUS_RESET_0_w" description="Cancel pending request (not used in normal operation) if any, otherwise no action"/>
      <bitenum value="1" id="1" token="BUS_RESET_1_w" description="Assert request for next reconfiguration"/>
      <bitenum value="1" id="1" token="BUS_RESET_1_r" description="Request pending for next reconfiguration"/>
      <bitenum value="0" id="0" token="BUS_RESET_0_r" description="No request pending for next reconfiguration"/>
    </bitfield>
    <bitfield id="BOOT" width="1" begin="0" end="0" resetval="0" description="Initiate an active framer (clock source) boot sequence for the component, that is, when component is default active framer. Transitions clock source FSM from state 'Undefined' to 'CheckingDataLine'. Transitions clock receiver FSM from state 'Undefined' to 'Reset'. No effect if bus has already booted." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="BOOT_0_w" description="Cancel pending request (not used in normal operation) if any, otherwise no action"/>
      <bitenum value="1" id="1" token="BOOT_1_w" description="Assert request for next reconfiguration"/>
      <bitenum value="1" id="1" token="BOOT_1_r" description="Request pending for next reconfiguration"/>
      <bitenum value="0" id="0" token="BOOT_0_r" description="No request pending for next reconfiguration"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_FR_FRAMER_HANDOVER" acronym="SLIMBUS_FR_FRAMER_HANDOVER" offset="0x9C" width="32" description="Framer handover control (outgoing if currently active, incoming if currently inactive)">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="HANDOVER_ENABLE" width="1" begin="12" end="12" resetval="0" description="Enable framer handover, upon NEXT_ACTIVE_FRAMER(NCi,NCo) reception. Self-cleared upon handover, that is, at next reconfiguration boundary." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="HANDOVER_ENABLE_0" description="No framer handover"/>
      <bitenum value="1" id="1" token="HANDOVER_ENABLE_1" description="Framer handover at next configuration boundary."/>
    </bitfield>
    <bitfield id="NCO_NCI" width="12" begin="11" end="0" resetval="0x000" description="NCo[11:0] / NCi[11:0] for outgoing / incoming framer respectively, as extracted from NEXT_ACTIVE_FRAMER(NCi,NCo) Used on framer handover at next reconfiguration boundary." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_FR_CLOCK_PAUSE" acronym="SLIMBUS_FR_CLOCK_PAUSE" offset="0xA0" width="32" description="Clock and pause restart control. Applied at following reconfiguration boundary, that is, where the clock is paused. Note that programming is indentical for an active framer (clock source) and a clock receiver.">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="RT_HI" width="6" begin="8" end="3" resetval="0x00" description="MSBs of 8-bit SLIMbus parameter. Constant." range="" rwaccess="R">
      <bitenum value="0" id="0" token="RT_HI_0_r" description="Only legal, unreserved value."/>
    </bitfield>
    <bitfield id="RT" width="2" begin="2" end="1" resetval="0x0" description="Restart Time (RT) for recovery after clock pause, as extracted from NEXT_PAUSE_CLOCK(RT) LSBs of 8-bit SLIMbus parameter. Unused when not active framer." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RT_0" description="Fast recovery (less than 4 cells)"/>
      <bitenum value="1" id="1" token="RT_1" description="Constant-phase recovery (superframe phase preserved)"/>
      <bitenum value="2" id="2" token="RT_2" description="Unspecified recovery delay"/>
    </bitfield>
    <bitfield id="CLOCK_PAUSE" width="1" begin="0" end="0" resetval="0" description="Control clock pause / restart. Self-cleared upon restart." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLOCK_PAUSE_0" description="Force clock restart if paused, no effect otherwise."/>
      <bitenum value="1" id="1" token="CLOCK_PAUSE_1" description="Pause clock (clock source) or expect clock pause (clock receiver) at next configuration boundary"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DEV_LA_i_0" acronym="SLIMBUS_DEV_LA_i_0" offset="0x100" width="32" description="Device Logical Address control">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_ENABLE" width="1" begin="9" end="9" resetval="0" description="Enables the reception of 'long-header' messages to the device's hardwired Enumeration Address (EA). Don't care if LA_ENABLE is 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EA_ENABLE_0" description="EA is not valid"/>
      <bitenum value="1" id="1" token="EA_ENABLE_1" description="EA is used for message reception"/>
    </bitfield>
    <bitfield id="LA_ENABLE" width="1" begin="8" end="8" resetval="0" description="Enables the reception of 'short-header' messages to the device's Logical Address (LA)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="LA_ENABLE_0" description="LA is not valid"/>
      <bitenum value="1" id="1" token="LA_ENABLE_1" description="LA valid, to be used for message reception"/>
    </bitfield>
    <bitfield id="LA" width="8" begin="7" end="0" resetval="0x00" description="Device Logical Address, assigned by manager device at enumeration (0x00 through 0xEF). The active manager device itself has address 0xFF by default." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="LA_255" description="active manager device address"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DEV_LA_i_1" acronym="SLIMBUS_DEV_LA_i_1" offset="0x110" width="32" description="Device Logical Address control">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_ENABLE" width="1" begin="9" end="9" resetval="0" description="Enables the reception of 'long-header' messages to the device's hardwired Enumeration Address (EA). Don't care if LA_ENABLE is 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EA_ENABLE_0" description="EA is not valid"/>
      <bitenum value="1" id="1" token="EA_ENABLE_1" description="EA is used for message reception"/>
    </bitfield>
    <bitfield id="LA_ENABLE" width="1" begin="8" end="8" resetval="0" description="Enables the reception of 'short-header' messages to the device's Logical Address (LA)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="LA_ENABLE_0" description="LA is not valid"/>
      <bitenum value="1" id="1" token="LA_ENABLE_1" description="LA valid, to be used for message reception"/>
    </bitfield>
    <bitfield id="LA" width="8" begin="7" end="0" resetval="0x00" description="Device Logical Address, assigned by manager device at enumeration (0x00 through 0xEF). The active manager device itself has address 0xFF by default." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="LA_255" description="active manager device address"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DEV_LA_i_2" acronym="SLIMBUS_DEV_LA_i_2" offset="0x120" width="32" description="Device Logical Address control">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_ENABLE" width="1" begin="9" end="9" resetval="0" description="Enables the reception of 'long-header' messages to the device's hardwired Enumeration Address (EA). Don't care if LA_ENABLE is 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EA_ENABLE_0" description="EA is not valid"/>
      <bitenum value="1" id="1" token="EA_ENABLE_1" description="EA is used for message reception"/>
    </bitfield>
    <bitfield id="LA_ENABLE" width="1" begin="8" end="8" resetval="0" description="Enables the reception of 'short-header' messages to the device's Logical Address (LA)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="LA_ENABLE_0" description="LA is not valid"/>
      <bitenum value="1" id="1" token="LA_ENABLE_1" description="LA valid, to be used for message reception"/>
    </bitfield>
    <bitfield id="LA" width="8" begin="7" end="0" resetval="0x00" description="Device Logical Address, assigned by manager device at enumeration (0x00 through 0xEF). The active manager device itself has address 0xFF by default." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="LA_255" description="active manager device address"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DEV_LA_i_3" acronym="SLIMBUS_DEV_LA_i_3" offset="0x130" width="32" description="Device Logical Address control">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_ENABLE" width="1" begin="9" end="9" resetval="0" description="Enables the reception of 'long-header' messages to the device's hardwired Enumeration Address (EA). Don't care if LA_ENABLE is 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EA_ENABLE_0" description="EA is not valid"/>
      <bitenum value="1" id="1" token="EA_ENABLE_1" description="EA is used for message reception"/>
    </bitfield>
    <bitfield id="LA_ENABLE" width="1" begin="8" end="8" resetval="0" description="Enables the reception of 'short-header' messages to the device's Logical Address (LA)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="LA_ENABLE_0" description="LA is not valid"/>
      <bitenum value="1" id="1" token="LA_ENABLE_1" description="LA valid, to be used for message reception"/>
    </bitfield>
    <bitfield id="LA" width="8" begin="7" end="0" resetval="0x00" description="Device Logical Address, assigned by manager device at enumeration (0x00 through 0xEF). The active manager device itself has address 0xFF by default." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="LA_255" description="active manager device address"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DEV_LA_i_4" acronym="SLIMBUS_DEV_LA_i_4" offset="0x140" width="32" description="Device Logical Address control">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_ENABLE" width="1" begin="9" end="9" resetval="0" description="Enables the reception of 'long-header' messages to the device's hardwired Enumeration Address (EA). Don't care if LA_ENABLE is 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EA_ENABLE_0" description="EA is not valid"/>
      <bitenum value="1" id="1" token="EA_ENABLE_1" description="EA is used for message reception"/>
    </bitfield>
    <bitfield id="LA_ENABLE" width="1" begin="8" end="8" resetval="0" description="Enables the reception of 'short-header' messages to the device's Logical Address (LA)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="LA_ENABLE_0" description="LA is not valid"/>
      <bitenum value="1" id="1" token="LA_ENABLE_1" description="LA valid, to be used for message reception"/>
    </bitfield>
    <bitfield id="LA" width="8" begin="7" end="0" resetval="0x00" description="Device Logical Address, assigned by manager device at enumeration (0x00 through 0xEF). The active manager device itself has address 0xFF by default." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="LA_255" description="active manager device address"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DEV_LA_i_5" acronym="SLIMBUS_DEV_LA_i_5" offset="0x150" width="32" description="Device Logical Address control">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_ENABLE" width="1" begin="9" end="9" resetval="0" description="Enables the reception of 'long-header' messages to the device's hardwired Enumeration Address (EA). Don't care if LA_ENABLE is 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EA_ENABLE_0" description="EA is not valid"/>
      <bitenum value="1" id="1" token="EA_ENABLE_1" description="EA is used for message reception"/>
    </bitfield>
    <bitfield id="LA_ENABLE" width="1" begin="8" end="8" resetval="0" description="Enables the reception of 'short-header' messages to the device's Logical Address (LA)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="LA_ENABLE_0" description="LA is not valid"/>
      <bitenum value="1" id="1" token="LA_ENABLE_1" description="LA valid, to be used for message reception"/>
    </bitfield>
    <bitfield id="LA" width="8" begin="7" end="0" resetval="0x00" description="Device Logical Address, assigned by manager device at enumeration (0x00 through 0xEF). The active manager device itself has address 0xFF by default." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="LA_255" description="active manager device address"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DEV_LA_i_6" acronym="SLIMBUS_DEV_LA_i_6" offset="0x160" width="32" description="Device Logical Address control">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_ENABLE" width="1" begin="9" end="9" resetval="0" description="Enables the reception of 'long-header' messages to the device's hardwired Enumeration Address (EA). Don't care if LA_ENABLE is 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EA_ENABLE_0" description="EA is not valid"/>
      <bitenum value="1" id="1" token="EA_ENABLE_1" description="EA is used for message reception"/>
    </bitfield>
    <bitfield id="LA_ENABLE" width="1" begin="8" end="8" resetval="0" description="Enables the reception of 'short-header' messages to the device's Logical Address (LA)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="LA_ENABLE_0" description="LA is not valid"/>
      <bitenum value="1" id="1" token="LA_ENABLE_1" description="LA valid, to be used for message reception"/>
    </bitfield>
    <bitfield id="LA" width="8" begin="7" end="0" resetval="0x00" description="Device Logical Address, assigned by manager device at enumeration (0x00 through 0xEF). The active manager device itself has address 0xFF by default." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="LA_255" description="active manager device address"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DEV_EA_LO_i_0" acronym="SLIMBUS_DEV_EA_LO_i_0" offset="0x104" width="32" description="Device's Enumeration Address (EA[47:0]), lower 32 bits. For reference.">
    <bitfield id="EA_PC" width="16" begin="31" end="16" resetval="0x0000" description="Product Code (PC[15:0]), shared by all devices of the component" range="" rwaccess="R"/>
    <bitfield id="EA_DI" width="8" begin="15" end="8" resetval="0x00" description="Device Index (DI[15:0]), hardcoded from 0 upwards (0x00,0x01,0x02, etc...) each device of the component. WARNING: value is incorrectly given as 0x00 for all indexes." range="" rwaccess="R"/>
    <bitfield id="EA_IV" width="8" begin="7" end="0" resetval="0x00" description="Component's Instance Value (IV[7:0]), shared by all devices of the component" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_LO_i_1" acronym="SLIMBUS_DEV_EA_LO_i_1" offset="0x114" width="32" description="Device's Enumeration Address (EA[47:0]), lower 32 bits. For reference.">
    <bitfield id="EA_PC" width="16" begin="31" end="16" resetval="0x0000" description="Product Code (PC[15:0]), shared by all devices of the component" range="" rwaccess="R"/>
    <bitfield id="EA_DI" width="8" begin="15" end="8" resetval="0x00" description="Device Index (DI[15:0]), hardcoded from 0 upwards (0x00,0x01,0x02, etc...) each device of the component. WARNING: value is incorrectly given as 0x00 for all indexes." range="" rwaccess="R"/>
    <bitfield id="EA_IV" width="8" begin="7" end="0" resetval="0x00" description="Component's Instance Value (IV[7:0]), shared by all devices of the component" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_LO_i_2" acronym="SLIMBUS_DEV_EA_LO_i_2" offset="0x124" width="32" description="Device's Enumeration Address (EA[47:0]), lower 32 bits. For reference.">
    <bitfield id="EA_PC" width="16" begin="31" end="16" resetval="0x0000" description="Product Code (PC[15:0]), shared by all devices of the component" range="" rwaccess="R"/>
    <bitfield id="EA_DI" width="8" begin="15" end="8" resetval="0x00" description="Device Index (DI[15:0]), hardcoded from 0 upwards (0x00,0x01,0x02, etc...) each device of the component. WARNING: value is incorrectly given as 0x00 for all indexes." range="" rwaccess="R"/>
    <bitfield id="EA_IV" width="8" begin="7" end="0" resetval="0x00" description="Component's Instance Value (IV[7:0]), shared by all devices of the component" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_LO_i_3" acronym="SLIMBUS_DEV_EA_LO_i_3" offset="0x134" width="32" description="Device's Enumeration Address (EA[47:0]), lower 32 bits. For reference.">
    <bitfield id="EA_PC" width="16" begin="31" end="16" resetval="0x0000" description="Product Code (PC[15:0]), shared by all devices of the component" range="" rwaccess="R"/>
    <bitfield id="EA_DI" width="8" begin="15" end="8" resetval="0x00" description="Device Index (DI[15:0]), hardcoded from 0 upwards (0x00,0x01,0x02, etc...) each device of the component. WARNING: value is incorrectly given as 0x00 for all indexes." range="" rwaccess="R"/>
    <bitfield id="EA_IV" width="8" begin="7" end="0" resetval="0x00" description="Component's Instance Value (IV[7:0]), shared by all devices of the component" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_LO_i_4" acronym="SLIMBUS_DEV_EA_LO_i_4" offset="0x144" width="32" description="Device's Enumeration Address (EA[47:0]), lower 32 bits. For reference.">
    <bitfield id="EA_PC" width="16" begin="31" end="16" resetval="0x0000" description="Product Code (PC[15:0]), shared by all devices of the component" range="" rwaccess="R"/>
    <bitfield id="EA_DI" width="8" begin="15" end="8" resetval="0x00" description="Device Index (DI[15:0]), hardcoded from 0 upwards (0x00,0x01,0x02, etc...) each device of the component. WARNING: value is incorrectly given as 0x00 for all indexes." range="" rwaccess="R"/>
    <bitfield id="EA_IV" width="8" begin="7" end="0" resetval="0x00" description="Component's Instance Value (IV[7:0]), shared by all devices of the component" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_LO_i_5" acronym="SLIMBUS_DEV_EA_LO_i_5" offset="0x154" width="32" description="Device's Enumeration Address (EA[47:0]), lower 32 bits. For reference.">
    <bitfield id="EA_PC" width="16" begin="31" end="16" resetval="0x0000" description="Product Code (PC[15:0]), shared by all devices of the component" range="" rwaccess="R"/>
    <bitfield id="EA_DI" width="8" begin="15" end="8" resetval="0x00" description="Device Index (DI[15:0]), hardcoded from 0 upwards (0x00,0x01,0x02, etc...) each device of the component. WARNING: value is incorrectly given as 0x00 for all indexes." range="" rwaccess="R"/>
    <bitfield id="EA_IV" width="8" begin="7" end="0" resetval="0x00" description="Component's Instance Value (IV[7:0]), shared by all devices of the component" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_LO_i_6" acronym="SLIMBUS_DEV_EA_LO_i_6" offset="0x164" width="32" description="Device's Enumeration Address (EA[47:0]), lower 32 bits. For reference.">
    <bitfield id="EA_PC" width="16" begin="31" end="16" resetval="0x0000" description="Product Code (PC[15:0]), shared by all devices of the component" range="" rwaccess="R"/>
    <bitfield id="EA_DI" width="8" begin="15" end="8" resetval="0x00" description="Device Index (DI[15:0]), hardcoded from 0 upwards (0x00,0x01,0x02, etc...) each device of the component. WARNING: value is incorrectly given as 0x00 for all indexes." range="" rwaccess="R"/>
    <bitfield id="EA_IV" width="8" begin="7" end="0" resetval="0x00" description="Component's Instance Value (IV[7:0]), shared by all devices of the component" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_HI_i_0" acronym="SLIMBUS_DEV_EA_HI_i_0" offset="0x108" width="32" description="Device's Enumeration Address (EA[47:0]), upper 16 bits. For reference.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_MI" width="16" begin="15" end="0" resetval="0x0102" description="Manufacturer Index (MI[15:0]), shared by all devices" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_HI_i_1" acronym="SLIMBUS_DEV_EA_HI_i_1" offset="0x118" width="32" description="Device's Enumeration Address (EA[47:0]), upper 16 bits. For reference.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_MI" width="16" begin="15" end="0" resetval="0x0102" description="Manufacturer Index (MI[15:0]), shared by all devices" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_HI_i_2" acronym="SLIMBUS_DEV_EA_HI_i_2" offset="0x128" width="32" description="Device's Enumeration Address (EA[47:0]), upper 16 bits. For reference.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_MI" width="16" begin="15" end="0" resetval="0x0102" description="Manufacturer Index (MI[15:0]), shared by all devices" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_HI_i_3" acronym="SLIMBUS_DEV_EA_HI_i_3" offset="0x138" width="32" description="Device's Enumeration Address (EA[47:0]), upper 16 bits. For reference.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_MI" width="16" begin="15" end="0" resetval="0x0102" description="Manufacturer Index (MI[15:0]), shared by all devices" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_HI_i_4" acronym="SLIMBUS_DEV_EA_HI_i_4" offset="0x148" width="32" description="Device's Enumeration Address (EA[47:0]), upper 16 bits. For reference.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_MI" width="16" begin="15" end="0" resetval="0x0102" description="Manufacturer Index (MI[15:0]), shared by all devices" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_HI_i_5" acronym="SLIMBUS_DEV_EA_HI_i_5" offset="0x158" width="32" description="Device's Enumeration Address (EA[47:0]), upper 16 bits. For reference.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_MI" width="16" begin="15" end="0" resetval="0x0102" description="Manufacturer Index (MI[15:0]), shared by all devices" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DEV_EA_HI_i_6" acronym="SLIMBUS_DEV_EA_HI_i_6" offset="0x168" width="32" description="Device's Enumeration Address (EA[47:0]), upper 16 bits. For reference.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="EA_MI" width="16" begin="15" end="0" resetval="0x0102" description="Manufacturer Index (MI[15:0]), shared by all devices" range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DCT_INFO_j_0" acronym="SLIMBUS_DCT_INFO_j_0" offset="0x200" width="32" description="TX data agent status. Write 1 to a bit to clear it.">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="LOLEVEL" width="1" begin="3" end="3" resetval="0" description="Write level of TX data agent FIFO has gone above DMA threshold (that is, writes required to fill FIFO) Note: Defaults to 0 (even though FIFO is then empty) as it sets to 1 only when read-only status bit DCT_FIFO_STATUS.LOLEVEL transitions from 0 to 1, that is, when threshold is actually crossed downward." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="LOLEVEL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="LOLEVEL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="LOLEVEL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="LOLEVEL_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="UNDERFLOW" width="1" begin="2" end="2" resetval="0" description="Underflow in TX data agent FIFO. Note: never asserted in pushed or async TPs, by construction." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="UNDERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="UNDERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="OVERFLOW" width="1" begin="1" end="1" resetval="0" description="Overflow in TX data agent FIFO." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="OVERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="OVERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DATA_TX_COL" width="1" begin="0" end="0" resetval="0" description="TX collision in TX data agent. Core information element (IE)." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DATA_TX_COL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DATA_TX_COL_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_INFO_j_1" acronym="SLIMBUS_DCT_INFO_j_1" offset="0x220" width="32" description="TX data agent status. Write 1 to a bit to clear it.">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="LOLEVEL" width="1" begin="3" end="3" resetval="0" description="Write level of TX data agent FIFO has gone above DMA threshold (that is, writes required to fill FIFO) Note: Defaults to 0 (even though FIFO is then empty) as it sets to 1 only when read-only status bit DCT_FIFO_STATUS.LOLEVEL transitions from 0 to 1, that is, when threshold is actually crossed downward." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="LOLEVEL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="LOLEVEL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="LOLEVEL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="LOLEVEL_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="UNDERFLOW" width="1" begin="2" end="2" resetval="0" description="Underflow in TX data agent FIFO. Note: never asserted in pushed or async TPs, by construction." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="UNDERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="UNDERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="OVERFLOW" width="1" begin="1" end="1" resetval="0" description="Overflow in TX data agent FIFO." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="OVERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="OVERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DATA_TX_COL" width="1" begin="0" end="0" resetval="0" description="TX collision in TX data agent. Core information element (IE)." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DATA_TX_COL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DATA_TX_COL_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_INFO_j_2" acronym="SLIMBUS_DCT_INFO_j_2" offset="0x240" width="32" description="TX data agent status. Write 1 to a bit to clear it.">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="LOLEVEL" width="1" begin="3" end="3" resetval="0" description="Write level of TX data agent FIFO has gone above DMA threshold (that is, writes required to fill FIFO) Note: Defaults to 0 (even though FIFO is then empty) as it sets to 1 only when read-only status bit DCT_FIFO_STATUS.LOLEVEL transitions from 0 to 1, that is, when threshold is actually crossed downward." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="LOLEVEL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="LOLEVEL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="LOLEVEL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="LOLEVEL_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="UNDERFLOW" width="1" begin="2" end="2" resetval="0" description="Underflow in TX data agent FIFO. Note: never asserted in pushed or async TPs, by construction." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="UNDERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="UNDERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="OVERFLOW" width="1" begin="1" end="1" resetval="0" description="Overflow in TX data agent FIFO." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="OVERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="OVERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DATA_TX_COL" width="1" begin="0" end="0" resetval="0" description="TX collision in TX data agent. Core information element (IE)." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DATA_TX_COL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DATA_TX_COL_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_INFO_j_3" acronym="SLIMBUS_DCT_INFO_j_3" offset="0x260" width="32" description="TX data agent status. Write 1 to a bit to clear it.">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="LOLEVEL" width="1" begin="3" end="3" resetval="0" description="Write level of TX data agent FIFO has gone above DMA threshold (that is, writes required to fill FIFO) Note: Defaults to 0 (even though FIFO is then empty) as it sets to 1 only when read-only status bit DCT_FIFO_STATUS.LOLEVEL transitions from 0 to 1, that is, when threshold is actually crossed downward." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="LOLEVEL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="LOLEVEL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="LOLEVEL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="LOLEVEL_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="UNDERFLOW" width="1" begin="2" end="2" resetval="0" description="Underflow in TX data agent FIFO. Note: never asserted in pushed or async TPs, by construction." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="UNDERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="UNDERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="OVERFLOW" width="1" begin="1" end="1" resetval="0" description="Overflow in TX data agent FIFO." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="OVERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="OVERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DATA_TX_COL" width="1" begin="0" end="0" resetval="0" description="TX collision in TX data agent. Core information element (IE)." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DATA_TX_COL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DATA_TX_COL_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_SETUP1_j_0" acronym="SLIMBUS_DCT_FIFO_SETUP1_j_0" offset="0x204" width="32" description="TX data agent FIFO setup. To be kept static during channel operation.">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="BASE_ADDR" width="8" begin="12" end="5" resetval="0x00" description="TX data agent FIFO base address within shared TX RAM. (physical address of the 32-bit wide RAM array)" range="" rwaccess="RW"/>
    <bitfield id="DMA_REQ_SIZE" width="4" begin="4" end="1" resetval="0x0" description="DMA request size minus 1, in write accesses. In counting (packet) mode, last request may be smaller. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="DMA_REQ_SIZE_15" description="16 accesses per DMA request"/>
      <bitenum value="0" id="0" token="DMA_REQ_SIZE_0" description="1 access per DMA request"/>
    </bitfield>
    <bitfield id="FIFO_CLEAR" width="1" begin="0" end="0" resetval="0" description="Returns FIFO to initial empty state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_w" description="No effect"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_w" description="Clear FIFO"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_r" description="Ongoing Clear. Completion requires the SLIMbus clock."/>
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_r" description="No event, last clear completed"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_SETUP1_j_1" acronym="SLIMBUS_DCT_FIFO_SETUP1_j_1" offset="0x224" width="32" description="TX data agent FIFO setup. To be kept static during channel operation.">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="BASE_ADDR" width="8" begin="12" end="5" resetval="0x00" description="TX data agent FIFO base address within shared TX RAM. (physical address of the 32-bit wide RAM array)" range="" rwaccess="RW"/>
    <bitfield id="DMA_REQ_SIZE" width="4" begin="4" end="1" resetval="0x0" description="DMA request size minus 1, in write accesses. In counting (packet) mode, last request may be smaller. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="DMA_REQ_SIZE_15" description="16 accesses per DMA request"/>
      <bitenum value="0" id="0" token="DMA_REQ_SIZE_0" description="1 access per DMA request"/>
    </bitfield>
    <bitfield id="FIFO_CLEAR" width="1" begin="0" end="0" resetval="0" description="Returns FIFO to initial empty state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_w" description="No effect"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_w" description="Clear FIFO"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_r" description="Ongoing Clear. Completion requires the SLIMbus clock."/>
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_r" description="No event, last clear completed"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_SETUP1_j_2" acronym="SLIMBUS_DCT_FIFO_SETUP1_j_2" offset="0x244" width="32" description="TX data agent FIFO setup. To be kept static during channel operation.">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="BASE_ADDR" width="8" begin="12" end="5" resetval="0x00" description="TX data agent FIFO base address within shared TX RAM. (physical address of the 32-bit wide RAM array)" range="" rwaccess="RW"/>
    <bitfield id="DMA_REQ_SIZE" width="4" begin="4" end="1" resetval="0x0" description="DMA request size minus 1, in write accesses. In counting (packet) mode, last request may be smaller. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="DMA_REQ_SIZE_15" description="16 accesses per DMA request"/>
      <bitenum value="0" id="0" token="DMA_REQ_SIZE_0" description="1 access per DMA request"/>
    </bitfield>
    <bitfield id="FIFO_CLEAR" width="1" begin="0" end="0" resetval="0" description="Returns FIFO to initial empty state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_w" description="No effect"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_w" description="Clear FIFO"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_r" description="Ongoing Clear. Completion requires the SLIMbus clock."/>
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_r" description="No event, last clear completed"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_SETUP1_j_3" acronym="SLIMBUS_DCT_FIFO_SETUP1_j_3" offset="0x264" width="32" description="TX data agent FIFO setup. To be kept static during channel operation.">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="BASE_ADDR" width="8" begin="12" end="5" resetval="0x00" description="TX data agent FIFO base address within shared TX RAM. (physical address of the 32-bit wide RAM array)" range="" rwaccess="RW"/>
    <bitfield id="DMA_REQ_SIZE" width="4" begin="4" end="1" resetval="0x0" description="DMA request size minus 1, in write accesses. In counting (packet) mode, last request may be smaller. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="DMA_REQ_SIZE_15" description="16 accesses per DMA request"/>
      <bitenum value="0" id="0" token="DMA_REQ_SIZE_0" description="1 access per DMA request"/>
    </bitfield>
    <bitfield id="FIFO_CLEAR" width="1" begin="0" end="0" resetval="0" description="Returns FIFO to initial empty state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_w" description="No effect"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_w" description="Clear FIFO"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_r" description="Ongoing Clear. Completion requires the SLIMbus clock."/>
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_r" description="No event, last clear completed"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_SETUP2_j_0" acronym="SLIMBUS_DCT_FIFO_SETUP2_j_0" offset="0x208" width="32" description="TX data agent FIFO setup, continued. To be kept static during channel operation.">
    <bitfield id="PACKING" width="1" begin="31" end="31" resetval="0" description="Packing enable control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PACKING_0" description="Packing disabled: one segment word per write access. Byte enable is don't care."/>
      <bitenum value="1" id="1" token="PACKING_1" description="Packing enabled: one or several segment words per write access, depending on segment word size and byte enable. Only works in LSB-aligned mode. Behaviour in LSB-aligned mode is undefined."/>
    </bitfield>
    <bitfield id="MSB_ALIGNED" width="1" begin="30" end="30" resetval="0" description="PLACEHOLDER, NO EFFECT: DATA ALWAYS LSB-aligned LSB/MSB-alignment of FIFO input (write) TX data." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MSB_ALIGNED_0" description="Input data is LSB-aligned"/>
      <bitenum value="1" id="1" token="MSB_ALIGNED_1" description="Input data is MSB-aligned"/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="29" end="24" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="DMA_THRESHOLD" width="8" begin="23" end="16" resetval="0x00" description="SW-side TX data agent FIFO threshold. DMA write requests get (re-)asserted when WR_LEVEL is above threshold. Range: 0 to SIZE field value (included)." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="DMA_THRESHOLD_255" description="DMA writes requested whenever FIFO is empty (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="DMA_THRESHOLD_0" description="DMA writes requested whenever FIFO is not full"/>
    </bitfield>
    <bitfield id="SB_THRESHOLD" width="8" begin="15" end="8" resetval="0x00" description="SLIMbus-side TX data agent FIFO threshold, used for SLIMbus transmission." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SB_THRESHOLD_255" description="Threshold condition = FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="SB_THRESHOLD_0" description="Threshold condition = FIFO is not empty"/>
    </bitfield>
    <bitfield id="SIZE" width="8" begin="7" end="0" resetval="0x00" description="Capacity of FIFO in segment words, minus one." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SIZE_255" description="Maximum FIFO size"/>
      <bitenum value="0" id="0" token="SIZE_0" description="FIFO is 1-word deep (not recommended)"/>
      <bitenum value="3" id="3" token="SIZE_3" description="FIFO is 4-word deep. Recommended minimum setting (SLIMbus protocol)."/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_SETUP2_j_1" acronym="SLIMBUS_DCT_FIFO_SETUP2_j_1" offset="0x228" width="32" description="TX data agent FIFO setup, continued. To be kept static during channel operation.">
    <bitfield id="PACKING" width="1" begin="31" end="31" resetval="0" description="Packing enable control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PACKING_0" description="Packing disabled: one segment word per write access. Byte enable is don't care."/>
      <bitenum value="1" id="1" token="PACKING_1" description="Packing enabled: one or several segment words per write access, depending on segment word size and byte enable. Only works in LSB-aligned mode. Behaviour in LSB-aligned mode is undefined."/>
    </bitfield>
    <bitfield id="MSB_ALIGNED" width="1" begin="30" end="30" resetval="0" description="PLACEHOLDER, NO EFFECT: DATA ALWAYS LSB-aligned LSB/MSB-alignment of FIFO input (write) TX data." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MSB_ALIGNED_0" description="Input data is LSB-aligned"/>
      <bitenum value="1" id="1" token="MSB_ALIGNED_1" description="Input data is MSB-aligned"/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="29" end="24" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="DMA_THRESHOLD" width="8" begin="23" end="16" resetval="0x00" description="SW-side TX data agent FIFO threshold. DMA write requests get (re-)asserted when WR_LEVEL is above threshold. Range: 0 to SIZE field value (included)." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="DMA_THRESHOLD_255" description="DMA writes requested whenever FIFO is empty (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="DMA_THRESHOLD_0" description="DMA writes requested whenever FIFO is not full"/>
    </bitfield>
    <bitfield id="SB_THRESHOLD" width="8" begin="15" end="8" resetval="0x00" description="SLIMbus-side TX data agent FIFO threshold, used for SLIMbus transmission." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SB_THRESHOLD_255" description="Threshold condition = FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="SB_THRESHOLD_0" description="Threshold condition = FIFO is not empty"/>
    </bitfield>
    <bitfield id="SIZE" width="8" begin="7" end="0" resetval="0x00" description="Capacity of FIFO in segment words, minus one." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SIZE_255" description="Maximum FIFO size"/>
      <bitenum value="0" id="0" token="SIZE_0" description="FIFO is 1-word deep (not recommended)"/>
      <bitenum value="3" id="3" token="SIZE_3" description="FIFO is 4-word deep. Recommended minimum setting (SLIMbus protocol)."/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_SETUP2_j_2" acronym="SLIMBUS_DCT_FIFO_SETUP2_j_2" offset="0x248" width="32" description="TX data agent FIFO setup, continued. To be kept static during channel operation.">
    <bitfield id="PACKING" width="1" begin="31" end="31" resetval="0" description="Packing enable control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PACKING_0" description="Packing disabled: one segment word per write access. Byte enable is don't care."/>
      <bitenum value="1" id="1" token="PACKING_1" description="Packing enabled: one or several segment words per write access, depending on segment word size and byte enable. Only works in LSB-aligned mode. Behaviour in LSB-aligned mode is undefined."/>
    </bitfield>
    <bitfield id="MSB_ALIGNED" width="1" begin="30" end="30" resetval="0" description="PLACEHOLDER, NO EFFECT: DATA ALWAYS LSB-aligned LSB/MSB-alignment of FIFO input (write) TX data." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MSB_ALIGNED_0" description="Input data is LSB-aligned"/>
      <bitenum value="1" id="1" token="MSB_ALIGNED_1" description="Input data is MSB-aligned"/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="29" end="24" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="DMA_THRESHOLD" width="8" begin="23" end="16" resetval="0x00" description="SW-side TX data agent FIFO threshold. DMA write requests get (re-)asserted when WR_LEVEL is above threshold. Range: 0 to SIZE field value (included)." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="DMA_THRESHOLD_255" description="DMA writes requested whenever FIFO is empty (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="DMA_THRESHOLD_0" description="DMA writes requested whenever FIFO is not full"/>
    </bitfield>
    <bitfield id="SB_THRESHOLD" width="8" begin="15" end="8" resetval="0x00" description="SLIMbus-side TX data agent FIFO threshold, used for SLIMbus transmission." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SB_THRESHOLD_255" description="Threshold condition = FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="SB_THRESHOLD_0" description="Threshold condition = FIFO is not empty"/>
    </bitfield>
    <bitfield id="SIZE" width="8" begin="7" end="0" resetval="0x00" description="Capacity of FIFO in segment words, minus one." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SIZE_255" description="Maximum FIFO size"/>
      <bitenum value="0" id="0" token="SIZE_0" description="FIFO is 1-word deep (not recommended)"/>
      <bitenum value="3" id="3" token="SIZE_3" description="FIFO is 4-word deep. Recommended minimum setting (SLIMbus protocol)."/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_SETUP2_j_3" acronym="SLIMBUS_DCT_FIFO_SETUP2_j_3" offset="0x268" width="32" description="TX data agent FIFO setup, continued. To be kept static during channel operation.">
    <bitfield id="PACKING" width="1" begin="31" end="31" resetval="0" description="Packing enable control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PACKING_0" description="Packing disabled: one segment word per write access. Byte enable is don't care."/>
      <bitenum value="1" id="1" token="PACKING_1" description="Packing enabled: one or several segment words per write access, depending on segment word size and byte enable. Only works in LSB-aligned mode. Behaviour in LSB-aligned mode is undefined."/>
    </bitfield>
    <bitfield id="MSB_ALIGNED" width="1" begin="30" end="30" resetval="0" description="PLACEHOLDER, NO EFFECT: DATA ALWAYS LSB-aligned LSB/MSB-alignment of FIFO input (write) TX data." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MSB_ALIGNED_0" description="Input data is LSB-aligned"/>
      <bitenum value="1" id="1" token="MSB_ALIGNED_1" description="Input data is MSB-aligned"/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="29" end="24" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="DMA_THRESHOLD" width="8" begin="23" end="16" resetval="0x00" description="SW-side TX data agent FIFO threshold. DMA write requests get (re-)asserted when WR_LEVEL is above threshold. Range: 0 to SIZE field value (included)." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="DMA_THRESHOLD_255" description="DMA writes requested whenever FIFO is empty (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="DMA_THRESHOLD_0" description="DMA writes requested whenever FIFO is not full"/>
    </bitfield>
    <bitfield id="SB_THRESHOLD" width="8" begin="15" end="8" resetval="0x00" description="SLIMbus-side TX data agent FIFO threshold, used for SLIMbus transmission." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SB_THRESHOLD_255" description="Threshold condition = FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="SB_THRESHOLD_0" description="Threshold condition = FIFO is not empty"/>
    </bitfield>
    <bitfield id="SIZE" width="8" begin="7" end="0" resetval="0x00" description="Capacity of FIFO in segment words, minus one." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SIZE_255" description="Maximum FIFO size"/>
      <bitenum value="0" id="0" token="SIZE_0" description="FIFO is 1-word deep (not recommended)"/>
      <bitenum value="3" id="3" token="SIZE_3" description="FIFO is 4-word deep. Recommended minimum setting (SLIMbus protocol)."/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_STATUS_j_0" acronym="SLIMBUS_DCT_FIFO_STATUS_j_0" offset="0x20C" width="32" description="TX data agent FIFO status, for software (non-DMA) FIFO management.">
    <bitfield id="COUNT_EN" width="1" begin="31" end="31" resetval="0" description="Down-counter mode control. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="COUNT_EN_0_w" description="Disable down-counter mode. Should typically be used only when ACC_CNT = 0. If ACC_CNT &amp;gt; 0, DMA request gets deasserted immediately."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_w" description="Enable down-counter mode. ACC_CNT is typically set to the desired value in the same write access."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_r" description="Down-counter mode is enabled. DMA request can only be active when ACC_CNT &amp;gt; 0"/>
      <bitenum value="0" id="0" token="COUNT_EN_0_r" description="Down-counter mode is disabled: DMA request follows FIFO level, and is active during no-tx periods."/>
    </bitfield>
    <bitfield id="ACC_CNT" width="15" begin="30" end="16" resetval="0x0000" description="'Packet mode' down-counter of segment words, decremented on DCT_DATA write accesses. In that mode, DMA request shall deassert when ACC_CNT = 0 (that is, packet fully transmitted / stored in TX FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACC_CNT_0_w" description="Deasserts current DMA request by forcing the count to zero (not typical operation)"/>
      <bitenum value="127" id="127" token="ACC_CNT_127_w" description="Set largest packet size (in accesses) to transfer before DMA request deassertion. Any lower value is also valid to enter."/>
      <bitenum value="127" id="127" token="ACC_CNT_127_r" description="Maximum number of accesses still to be transferred before DMA deassertion. Unless interrupted, counter shall go through all values down to zero."/>
      <bitenum value="0" id="0" token="ACC_CNT_0_r" description="No access left to transfer, DMA request currently inactive."/>
    </bitfield>
    <bitfield id="IMPRECISE_EN" width="1" begin="15" end="15" resetval="0" description="Precise vs. Imprecise DMA requesting mode control. (A DMA request is a single assertion-deassertion cycle.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IMPRECISE_EN_0" description="DMA request contains a precise number of accesses"/>
      <bitenum value="1" id="1" token="IMPRECISE_EN_1" description="DMA request is not expected to trigger a fixed number of accesses"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="14" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="WR_LEVEL" width="9" begin="10" end="2" resetval="0x001" description="Number of free segment words in FIFO, that could be filled by writes." range="" rwaccess="R">
      <bitenum value="256" id="256" token="WR_LEVEL_256_r" description="FIFO is empty and entirely available for writes (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="WR_LEVEL_0_r" description="FIFO is full and cannot be written to"/>
    </bitfield>
    <bitfield id="LOLEVEL" width="1" begin="1" end="1" resetval="1" description="Indicator of write level (WR_LEVEL: number of free words in FIFO) with respect to (write) threshold (DMA_threshold). Activates DMA write requests when high." range="" rwaccess="R">
      <bitenum value="1" id="1" token="LOLEVEL_1_r" description="WR_LEVEL &amp;gt; DMA_THRESHOLD"/>
      <bitenum value="0" id="0" token="LOLEVEL_0_r" description="WR_LEVEL &amp;lt;= DMA_THRESHOLD"/>
    </bitfield>
    <bitfield id="FULL" width="1" begin="0" end="0" resetval="0" description="FIFO full indicator" range="" rwaccess="R">
      <bitenum value="1" id="1" token="FULL_1_r" description="no space left in FIFO to write a word (WR_LEVEL = 0)"/>
      <bitenum value="0" id="0" token="FULL_0_r" description="some space left in FIFO to write at least one word (WR_LEVEL &amp;gt; 0)"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_STATUS_j_1" acronym="SLIMBUS_DCT_FIFO_STATUS_j_1" offset="0x22C" width="32" description="TX data agent FIFO status, for software (non-DMA) FIFO management.">
    <bitfield id="COUNT_EN" width="1" begin="31" end="31" resetval="0" description="Down-counter mode control. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="COUNT_EN_0_w" description="Disable down-counter mode. Should typically be used only when ACC_CNT = 0. If ACC_CNT &amp;gt; 0, DMA request gets deasserted immediately."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_w" description="Enable down-counter mode. ACC_CNT is typically set to the desired value in the same write access."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_r" description="Down-counter mode is enabled. DMA request can only be active when ACC_CNT &amp;gt; 0"/>
      <bitenum value="0" id="0" token="COUNT_EN_0_r" description="Down-counter mode is disabled: DMA request follows FIFO level, and is active during no-tx periods."/>
    </bitfield>
    <bitfield id="ACC_CNT" width="15" begin="30" end="16" resetval="0x0000" description="'Packet mode' down-counter of segment words, decremented on DCT_DATA write accesses. In that mode, DMA request shall deassert when ACC_CNT = 0 (that is, packet fully transmitted / stored in TX FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACC_CNT_0_w" description="Deasserts current DMA request by forcing the count to zero (not typical operation)"/>
      <bitenum value="127" id="127" token="ACC_CNT_127_w" description="Set largest packet size (in accesses) to transfer before DMA request deassertion. Any lower value is also valid to enter."/>
      <bitenum value="127" id="127" token="ACC_CNT_127_r" description="Maximum number of accesses still to be transferred before DMA deassertion. Unless interrupted, counter shall go through all values down to zero."/>
      <bitenum value="0" id="0" token="ACC_CNT_0_r" description="No access left to transfer, DMA request currently inactive."/>
    </bitfield>
    <bitfield id="IMPRECISE_EN" width="1" begin="15" end="15" resetval="0" description="Precise vs. Imprecise DMA requesting mode control. (A DMA request is a single assertion-deassertion cycle.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IMPRECISE_EN_0" description="DMA request contains a precise number of accesses"/>
      <bitenum value="1" id="1" token="IMPRECISE_EN_1" description="DMA request is not expected to trigger a fixed number of accesses"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="14" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="WR_LEVEL" width="9" begin="10" end="2" resetval="0x001" description="Number of free segment words in FIFO, that could be filled by writes." range="" rwaccess="R">
      <bitenum value="256" id="256" token="WR_LEVEL_256_r" description="FIFO is empty and entirely available for writes (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="WR_LEVEL_0_r" description="FIFO is full and cannot be written to"/>
    </bitfield>
    <bitfield id="LOLEVEL" width="1" begin="1" end="1" resetval="1" description="Indicator of write level (WR_LEVEL: number of free words in FIFO) with respect to (write) threshold (DMA_threshold). Activates DMA write requests when high." range="" rwaccess="R">
      <bitenum value="1" id="1" token="LOLEVEL_1_r" description="WR_LEVEL &amp;gt; DMA_THRESHOLD"/>
      <bitenum value="0" id="0" token="LOLEVEL_0_r" description="WR_LEVEL &amp;lt;= DMA_THRESHOLD"/>
    </bitfield>
    <bitfield id="FULL" width="1" begin="0" end="0" resetval="0" description="FIFO full indicator" range="" rwaccess="R">
      <bitenum value="1" id="1" token="FULL_1_r" description="no space left in FIFO to write a word (WR_LEVEL = 0)"/>
      <bitenum value="0" id="0" token="FULL_0_r" description="some space left in FIFO to write at least one word (WR_LEVEL &amp;gt; 0)"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_STATUS_j_2" acronym="SLIMBUS_DCT_FIFO_STATUS_j_2" offset="0x24C" width="32" description="TX data agent FIFO status, for software (non-DMA) FIFO management.">
    <bitfield id="COUNT_EN" width="1" begin="31" end="31" resetval="0" description="Down-counter mode control. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="COUNT_EN_0_w" description="Disable down-counter mode. Should typically be used only when ACC_CNT = 0. If ACC_CNT &amp;gt; 0, DMA request gets deasserted immediately."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_w" description="Enable down-counter mode. ACC_CNT is typically set to the desired value in the same write access."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_r" description="Down-counter mode is enabled. DMA request can only be active when ACC_CNT &amp;gt; 0"/>
      <bitenum value="0" id="0" token="COUNT_EN_0_r" description="Down-counter mode is disabled: DMA request follows FIFO level, and is active during no-tx periods."/>
    </bitfield>
    <bitfield id="ACC_CNT" width="15" begin="30" end="16" resetval="0x0000" description="'Packet mode' down-counter of segment words, decremented on DCT_DATA write accesses. In that mode, DMA request shall deassert when ACC_CNT = 0 (that is, packet fully transmitted / stored in TX FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACC_CNT_0_w" description="Deasserts current DMA request by forcing the count to zero (not typical operation)"/>
      <bitenum value="127" id="127" token="ACC_CNT_127_w" description="Set largest packet size (in accesses) to transfer before DMA request deassertion. Any lower value is also valid to enter."/>
      <bitenum value="127" id="127" token="ACC_CNT_127_r" description="Maximum number of accesses still to be transferred before DMA deassertion. Unless interrupted, counter shall go through all values down to zero."/>
      <bitenum value="0" id="0" token="ACC_CNT_0_r" description="No access left to transfer, DMA request currently inactive."/>
    </bitfield>
    <bitfield id="IMPRECISE_EN" width="1" begin="15" end="15" resetval="0" description="Precise vs. Imprecise DMA requesting mode control. (A DMA request is a single assertion-deassertion cycle.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IMPRECISE_EN_0" description="DMA request contains a precise number of accesses"/>
      <bitenum value="1" id="1" token="IMPRECISE_EN_1" description="DMA request is not expected to trigger a fixed number of accesses"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="14" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="WR_LEVEL" width="9" begin="10" end="2" resetval="0x001" description="Number of free segment words in FIFO, that could be filled by writes." range="" rwaccess="R">
      <bitenum value="256" id="256" token="WR_LEVEL_256_r" description="FIFO is empty and entirely available for writes (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="WR_LEVEL_0_r" description="FIFO is full and cannot be written to"/>
    </bitfield>
    <bitfield id="LOLEVEL" width="1" begin="1" end="1" resetval="1" description="Indicator of write level (WR_LEVEL: number of free words in FIFO) with respect to (write) threshold (DMA_threshold). Activates DMA write requests when high." range="" rwaccess="R">
      <bitenum value="1" id="1" token="LOLEVEL_1_r" description="WR_LEVEL &amp;gt; DMA_THRESHOLD"/>
      <bitenum value="0" id="0" token="LOLEVEL_0_r" description="WR_LEVEL &amp;lt;= DMA_THRESHOLD"/>
    </bitfield>
    <bitfield id="FULL" width="1" begin="0" end="0" resetval="0" description="FIFO full indicator" range="" rwaccess="R">
      <bitenum value="1" id="1" token="FULL_1_r" description="no space left in FIFO to write a word (WR_LEVEL = 0)"/>
      <bitenum value="0" id="0" token="FULL_0_r" description="some space left in FIFO to write at least one word (WR_LEVEL &amp;gt; 0)"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_FIFO_STATUS_j_3" acronym="SLIMBUS_DCT_FIFO_STATUS_j_3" offset="0x26C" width="32" description="TX data agent FIFO status, for software (non-DMA) FIFO management.">
    <bitfield id="COUNT_EN" width="1" begin="31" end="31" resetval="0" description="Down-counter mode control. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="COUNT_EN_0_w" description="Disable down-counter mode. Should typically be used only when ACC_CNT = 0. If ACC_CNT &amp;gt; 0, DMA request gets deasserted immediately."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_w" description="Enable down-counter mode. ACC_CNT is typically set to the desired value in the same write access."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_r" description="Down-counter mode is enabled. DMA request can only be active when ACC_CNT &amp;gt; 0"/>
      <bitenum value="0" id="0" token="COUNT_EN_0_r" description="Down-counter mode is disabled: DMA request follows FIFO level, and is active during no-tx periods."/>
    </bitfield>
    <bitfield id="ACC_CNT" width="15" begin="30" end="16" resetval="0x0000" description="'Packet mode' down-counter of segment words, decremented on DCT_DATA write accesses. In that mode, DMA request shall deassert when ACC_CNT = 0 (that is, packet fully transmitted / stored in TX FIFO)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACC_CNT_0_w" description="Deasserts current DMA request by forcing the count to zero (not typical operation)"/>
      <bitenum value="127" id="127" token="ACC_CNT_127_w" description="Set largest packet size (in accesses) to transfer before DMA request deassertion. Any lower value is also valid to enter."/>
      <bitenum value="127" id="127" token="ACC_CNT_127_r" description="Maximum number of accesses still to be transferred before DMA deassertion. Unless interrupted, counter shall go through all values down to zero."/>
      <bitenum value="0" id="0" token="ACC_CNT_0_r" description="No access left to transfer, DMA request currently inactive."/>
    </bitfield>
    <bitfield id="IMPRECISE_EN" width="1" begin="15" end="15" resetval="0" description="Precise vs. Imprecise DMA requesting mode control. (A DMA request is a single assertion-deassertion cycle.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IMPRECISE_EN_0" description="DMA request contains a precise number of accesses"/>
      <bitenum value="1" id="1" token="IMPRECISE_EN_1" description="DMA request is not expected to trigger a fixed number of accesses"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="14" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="WR_LEVEL" width="9" begin="10" end="2" resetval="0x001" description="Number of free segment words in FIFO, that could be filled by writes." range="" rwaccess="R">
      <bitenum value="256" id="256" token="WR_LEVEL_256_r" description="FIFO is empty and entirely available for writes (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="WR_LEVEL_0_r" description="FIFO is full and cannot be written to"/>
    </bitfield>
    <bitfield id="LOLEVEL" width="1" begin="1" end="1" resetval="1" description="Indicator of write level (WR_LEVEL: number of free words in FIFO) with respect to (write) threshold (DMA_threshold). Activates DMA write requests when high." range="" rwaccess="R">
      <bitenum value="1" id="1" token="LOLEVEL_1_r" description="WR_LEVEL &amp;gt; DMA_THRESHOLD"/>
      <bitenum value="0" id="0" token="LOLEVEL_0_r" description="WR_LEVEL &amp;lt;= DMA_THRESHOLD"/>
    </bitfield>
    <bitfield id="FULL" width="1" begin="0" end="0" resetval="0" description="FIFO full indicator" range="" rwaccess="R">
      <bitenum value="1" id="1" token="FULL_1_r" description="no space left in FIFO to write a word (WR_LEVEL = 0)"/>
      <bitenum value="0" id="0" token="FULL_0_r" description="some space left in FIFO to write at least one word (WR_LEVEL &amp;gt; 0)"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_MAP_j_0" acronym="SLIMBUS_DCT_MAP_j_0" offset="0x210" width="32" description="Associates a device and port to the TX data agent. Write to field FL_CONTROL.validate_dcmap to validate changes.">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="PN" width="6" begin="13" end="8" resetval="0x00" description="Port Number (PN), identifies the data channel's port for the device. Shall be unique within a device. Note that a half-duplex (bidirectional) port has 2 data agents with the same PN, 1 TX + 1 Rx." range="" rwaccess="RW"/>
    <bitfield id="DI" width="8" begin="7" end="0" resetval="0x00" description="Index (DI) of the device this data agent belongs to. Devices are hard-indexed from 0 upwards." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCT_MAP_j_1" acronym="SLIMBUS_DCT_MAP_j_1" offset="0x230" width="32" description="Associates a device and port to the TX data agent. Write to field FL_CONTROL.validate_dcmap to validate changes.">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="PN" width="6" begin="13" end="8" resetval="0x00" description="Port Number (PN), identifies the data channel's port for the device. Shall be unique within a device. Note that a half-duplex (bidirectional) port has 2 data agents with the same PN, 1 TX + 1 Rx." range="" rwaccess="RW"/>
    <bitfield id="DI" width="8" begin="7" end="0" resetval="0x00" description="Index (DI) of the device this data agent belongs to. Devices are hard-indexed from 0 upwards." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCT_MAP_j_2" acronym="SLIMBUS_DCT_MAP_j_2" offset="0x250" width="32" description="Associates a device and port to the TX data agent. Write to field FL_CONTROL.validate_dcmap to validate changes.">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="PN" width="6" begin="13" end="8" resetval="0x00" description="Port Number (PN), identifies the data channel's port for the device. Shall be unique within a device. Note that a half-duplex (bidirectional) port has 2 data agents with the same PN, 1 TX + 1 Rx." range="" rwaccess="RW"/>
    <bitfield id="DI" width="8" begin="7" end="0" resetval="0x00" description="Index (DI) of the device this data agent belongs to. Devices are hard-indexed from 0 upwards." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCT_MAP_j_3" acronym="SLIMBUS_DCT_MAP_j_3" offset="0x270" width="32" description="Associates a device and port to the TX data agent. Write to field FL_CONTROL.validate_dcmap to validate changes.">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="PN" width="6" begin="13" end="8" resetval="0x00" description="Port Number (PN), identifies the data channel's port for the device. Shall be unique within a device. Note that a half-duplex (bidirectional) port has 2 data agents with the same PN, 1 TX + 1 Rx." range="" rwaccess="RW"/>
    <bitfield id="DI" width="8" begin="7" end="0" resetval="0x00" description="Index (DI) of the device this data agent belongs to. Devices are hard-indexed from 0 upwards." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCT_CONFIG1_j_0" acronym="SLIMBUS_DCT_CONFIG1_j_0" offset="0x214" width="32" description="TX data agent configuration, applied at the next reconfiguration boundary">
    <bitfield id="ENABLE" width="1" begin="31" end="31" resetval="0" description="Data agent enabling control. Auto-cleared upon frame or superframe sync loss." range="" rwaccess="RW">
      <bitenum value="1" id="1" token="ENABLE_1_r" description="Data agent is enabled"/>
      <bitenum value="0" id="0" token="ENABLE_0_r" description="Data agent is disabled"/>
    </bitfield>
    <bitfield id="CTS_LAST_VALUE" width="1" begin="30" end="30" resetval="0" description="Last received value of the CTS TAG bit. Only updated for asynchronous TP, when primary owner (that is, transmitter) of the channel." range="" rwaccess="R">
      <bitenum value="1" id="1" token="CTS_LAST_VALUE_1_r" description="Local sink signals TAG.CTS=1 that is, it can receive data (and remote source can transmit some)"/>
      <bitenum value="0" id="0" token="CTS_LAST_VALUE_0_r" description="Local sink signals TAG.CTS=0 that is, it cannot receive any data (and remote source shall not transmit any)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="29" end="29" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="DT_LPCM" width="1" begin="28" end="28" resetval="0" description="Unsigned-to-OSAM encoding enable for Data Type (DT) = LPCM audio (0x1)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DT_LPCM_0" description="DT!=0x1: encoding disabled"/>
      <bitenum value="1" id="1" token="DT_LPCM_1" description="DT=0x1: encoding enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="8" begin="27" end="20" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="AF" width="4" begin="19" end="16" resetval="0x0" description="Auxillairy Format (AF) used in segment word size calculation. Non-zero values not supported in extended asynchronous TPs." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="AF_15" description="User-defined 8-bit AUX (2 AUX slot per segment)"/>
      <bitenum value="0" id="0" token="AF_0" description="No AUX information (0 AUX slots per segment)"/>
      <bitenum value="1" id="1" token="AF_1" description="ZCUV for tunneling IEC60958 (1 AUX slot per segment)"/>
      <bitenum value="11" id="11" token="AF_11" description="User-defined 4-bit AUX (1 AUX slot per segment)"/>
    </bitfield>
    <bitfield id="CL" width="1" begin="15" end="15" resetval="0" description="Channel Link (CL) enable: Pairing up of current channel with previous one (that is, channel index below) Tied-0, read-only field for channel index 0, since there is no 'previous' channel in that case. TP and segment interval (encoded in SD) must be equal between the linked channels." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CL_0" description="Current channel independent from previous one."/>
      <bitenum value="1" id="1" token="CL_1" description="Current channel paired up with previous one."/>
    </bitfield>
    <bitfield id="DL" width="5" begin="14" end="10" resetval="0x00" description="Segment Data Length (DL), in 4-bit slots (except when 0). AUX + DATA length shall fit in a segment word, that is, 1 to 32 bits. In extended async TPs, sets segment word size (0 and odd values illegal) instead." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="DL_6" description="6 slots (24 bits)"/>
      <bitenum value="1" id="1" token="DL_1" description="1 slot (4 bits)"/>
      <bitenum value="7" id="7" token="DL_7" description="7 slots (28 bits), requiring at most 1 AUX slot to fit in max-size 32-bit segment word"/>
      <bitenum value="0" id="0" token="DL_0" description="Length not indicated: Segment slots that are not TAG or AUX are DATA (that is, no unused slot)"/>
      <bitenum value="2" id="2" token="DL_2" description="2 slots (8 bits)"/>
      <bitenum value="8" id="8" token="DL_8" description="8 slots (32 bits), requiring zero AUX slot, to fit in a max-size 32-bit segment word"/>
      <bitenum value="4" id="4" token="DL_4" description="4 slots (16 bits)"/>
      <bitenum value="5" id="5" token="DL_5" description="5 slots (20 bits)"/>
      <bitenum value="3" id="3" token="DL_3" description="3 slots (12 bits)"/>
    </bitfield>
    <bitfield id="SL" width="5" begin="9" end="5" resetval="0x00" description="total Segment Length (SL), in 4-bit slots. SL &amp;amp;gt;= TAG length + AUX length + DATA length" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SL_0" description="Reseved value"/>
    </bitfield>
    <bitfield id="TP_QUALIFIER" width="1" begin="4" end="4" resetval="0" description="Qualifier for plain/extended half-duplex asynchronous TPs (owner ID). Unused and don't care for other TPs." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TP_QUALIFIER_0" description="1/2 duplex TPs: Local device is primary channel owner, uses T1 token"/>
      <bitenum value="1" id="1" token="TP_QUALIFIER_1" description="1/2 duplex TPs: Local device is secondary channel owner, uses T2 token"/>
    </bitfield>
    <bitfield id="TP" width="4" begin="3" end="0" resetval="0x0" description="Transport Protocol (TP) Determines also the TAG length (from 0 to 2 slots)." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="TP_6" description="Extended asynchronous-half-duplex (unicast, 2-slot TAG)"/>
      <bitenum value="1" id="1" token="TP_1" description="Pushed (multicast, 1-slot TAG)"/>
      <bitenum value="7" id="7" token="TP_7" description="Extended asynchronous-simplex (unicast, 2-slot TAG)"/>
      <bitenum value="0" id="0" token="TP_0" description="Isochronous (multicast, no TAG)"/>
      <bitenum value="2" id="2" token="TP_2" description="Pulled (unicast, 1-slot TAG)"/>
      <bitenum value="4" id="4" token="TP_4" description="Asynchronous-simplex (unicast, 1-slot TAG)"/>
      <bitenum value="5" id="5" token="TP_5" description="Asynchronous-half-duplex (unicast, 1-slot TAG)"/>
      <bitenum value="15" id="15" token="TP_15" description="User-defined protocol 2 NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="3" id="3" token="TP_3" description="Locked (multicast, no TAG) NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="14" id="14" token="TP_14" description="User-defined protocol 1 NOT SUPPORTED, RESERVED VALUE"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_CONFIG1_j_1" acronym="SLIMBUS_DCT_CONFIG1_j_1" offset="0x234" width="32" description="TX data agent configuration, applied at the next reconfiguration boundary">
    <bitfield id="ENABLE" width="1" begin="31" end="31" resetval="0" description="Data agent enabling control. Auto-cleared upon frame or superframe sync loss." range="" rwaccess="RW">
      <bitenum value="1" id="1" token="ENABLE_1_r" description="Data agent is enabled"/>
      <bitenum value="0" id="0" token="ENABLE_0_r" description="Data agent is disabled"/>
    </bitfield>
    <bitfield id="CTS_LAST_VALUE" width="1" begin="30" end="30" resetval="0" description="Last received value of the CTS TAG bit. Only updated for asynchronous TP, when primary owner (that is, transmitter) of the channel." range="" rwaccess="R">
      <bitenum value="1" id="1" token="CTS_LAST_VALUE_1_r" description="Local sink signals TAG.CTS=1 that is, it can receive data (and remote source can transmit some)"/>
      <bitenum value="0" id="0" token="CTS_LAST_VALUE_0_r" description="Local sink signals TAG.CTS=0 that is, it cannot receive any data (and remote source shall not transmit any)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="29" end="29" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="DT_LPCM" width="1" begin="28" end="28" resetval="0" description="Unsigned-to-OSAM encoding enable for Data Type (DT) = LPCM audio (0x1)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DT_LPCM_0" description="DT!=0x1: encoding disabled"/>
      <bitenum value="1" id="1" token="DT_LPCM_1" description="DT=0x1: encoding enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="8" begin="27" end="20" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="AF" width="4" begin="19" end="16" resetval="0x0" description="Auxillairy Format (AF) used in segment word size calculation. Non-zero values not supported in extended asynchronous TPs." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="AF_15" description="User-defined 8-bit AUX (2 AUX slot per segment)"/>
      <bitenum value="0" id="0" token="AF_0" description="No AUX information (0 AUX slots per segment)"/>
      <bitenum value="1" id="1" token="AF_1" description="ZCUV for tunneling IEC60958 (1 AUX slot per segment)"/>
      <bitenum value="11" id="11" token="AF_11" description="User-defined 4-bit AUX (1 AUX slot per segment)"/>
    </bitfield>
    <bitfield id="CL" width="1" begin="15" end="15" resetval="0" description="Channel Link (CL) enable: Pairing up of current channel with previous one (that is, channel index below) Tied-0, read-only field for channel index 0, since there is no 'previous' channel in that case. TP and segment interval (encoded in SD) must be equal between the linked channels." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CL_0" description="Current channel independent from previous one."/>
      <bitenum value="1" id="1" token="CL_1" description="Current channel paired up with previous one."/>
    </bitfield>
    <bitfield id="DL" width="5" begin="14" end="10" resetval="0x00" description="Segment Data Length (DL), in 4-bit slots (except when 0). AUX + DATA length shall fit in a segment word, that is, 1 to 32 bits. In extended async TPs, sets segment word size (0 and odd values illegal) instead." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="DL_6" description="6 slots (24 bits)"/>
      <bitenum value="1" id="1" token="DL_1" description="1 slot (4 bits)"/>
      <bitenum value="7" id="7" token="DL_7" description="7 slots (28 bits), requiring at most 1 AUX slot to fit in max-size 32-bit segment word"/>
      <bitenum value="0" id="0" token="DL_0" description="Length not indicated: Segment slots that are not TAG or AUX are DATA (that is, no unused slot)"/>
      <bitenum value="2" id="2" token="DL_2" description="2 slots (8 bits)"/>
      <bitenum value="8" id="8" token="DL_8" description="8 slots (32 bits), requiring zero AUX slot, to fit in a max-size 32-bit segment word"/>
      <bitenum value="4" id="4" token="DL_4" description="4 slots (16 bits)"/>
      <bitenum value="5" id="5" token="DL_5" description="5 slots (20 bits)"/>
      <bitenum value="3" id="3" token="DL_3" description="3 slots (12 bits)"/>
    </bitfield>
    <bitfield id="SL" width="5" begin="9" end="5" resetval="0x00" description="total Segment Length (SL), in 4-bit slots. SL &amp;amp;gt;= TAG length + AUX length + DATA length" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SL_0" description="Reseved value"/>
    </bitfield>
    <bitfield id="TP_QUALIFIER" width="1" begin="4" end="4" resetval="0" description="Qualifier for plain/extended half-duplex asynchronous TPs (owner ID). Unused and don't care for other TPs." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TP_QUALIFIER_0" description="1/2 duplex TPs: Local device is primary channel owner, uses T1 token"/>
      <bitenum value="1" id="1" token="TP_QUALIFIER_1" description="1/2 duplex TPs: Local device is secondary channel owner, uses T2 token"/>
    </bitfield>
    <bitfield id="TP" width="4" begin="3" end="0" resetval="0x0" description="Transport Protocol (TP) Determines also the TAG length (from 0 to 2 slots)." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="TP_6" description="Extended asynchronous-half-duplex (unicast, 2-slot TAG)"/>
      <bitenum value="1" id="1" token="TP_1" description="Pushed (multicast, 1-slot TAG)"/>
      <bitenum value="7" id="7" token="TP_7" description="Extended asynchronous-simplex (unicast, 2-slot TAG)"/>
      <bitenum value="0" id="0" token="TP_0" description="Isochronous (multicast, no TAG)"/>
      <bitenum value="2" id="2" token="TP_2" description="Pulled (unicast, 1-slot TAG)"/>
      <bitenum value="4" id="4" token="TP_4" description="Asynchronous-simplex (unicast, 1-slot TAG)"/>
      <bitenum value="5" id="5" token="TP_5" description="Asynchronous-half-duplex (unicast, 1-slot TAG)"/>
      <bitenum value="15" id="15" token="TP_15" description="User-defined protocol 2 NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="3" id="3" token="TP_3" description="Locked (multicast, no TAG) NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="14" id="14" token="TP_14" description="User-defined protocol 1 NOT SUPPORTED, RESERVED VALUE"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_CONFIG1_j_2" acronym="SLIMBUS_DCT_CONFIG1_j_2" offset="0x254" width="32" description="TX data agent configuration, applied at the next reconfiguration boundary">
    <bitfield id="ENABLE" width="1" begin="31" end="31" resetval="0" description="Data agent enabling control. Auto-cleared upon frame or superframe sync loss." range="" rwaccess="RW">
      <bitenum value="1" id="1" token="ENABLE_1_r" description="Data agent is enabled"/>
      <bitenum value="0" id="0" token="ENABLE_0_r" description="Data agent is disabled"/>
    </bitfield>
    <bitfield id="CTS_LAST_VALUE" width="1" begin="30" end="30" resetval="0" description="Last received value of the CTS TAG bit. Only updated for asynchronous TP, when primary owner (that is, transmitter) of the channel." range="" rwaccess="R">
      <bitenum value="1" id="1" token="CTS_LAST_VALUE_1_r" description="Local sink signals TAG.CTS=1 that is, it can receive data (and remote source can transmit some)"/>
      <bitenum value="0" id="0" token="CTS_LAST_VALUE_0_r" description="Local sink signals TAG.CTS=0 that is, it cannot receive any data (and remote source shall not transmit any)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="29" end="29" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="DT_LPCM" width="1" begin="28" end="28" resetval="0" description="Unsigned-to-OSAM encoding enable for Data Type (DT) = LPCM audio (0x1)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DT_LPCM_0" description="DT!=0x1: encoding disabled"/>
      <bitenum value="1" id="1" token="DT_LPCM_1" description="DT=0x1: encoding enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="8" begin="27" end="20" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="AF" width="4" begin="19" end="16" resetval="0x0" description="Auxillairy Format (AF) used in segment word size calculation. Non-zero values not supported in extended asynchronous TPs." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="AF_15" description="User-defined 8-bit AUX (2 AUX slot per segment)"/>
      <bitenum value="0" id="0" token="AF_0" description="No AUX information (0 AUX slots per segment)"/>
      <bitenum value="1" id="1" token="AF_1" description="ZCUV for tunneling IEC60958 (1 AUX slot per segment)"/>
      <bitenum value="11" id="11" token="AF_11" description="User-defined 4-bit AUX (1 AUX slot per segment)"/>
    </bitfield>
    <bitfield id="CL" width="1" begin="15" end="15" resetval="0" description="Channel Link (CL) enable: Pairing up of current channel with previous one (that is, channel index below) Tied-0, read-only field for channel index 0, since there is no 'previous' channel in that case. TP and segment interval (encoded in SD) must be equal between the linked channels." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CL_0" description="Current channel independent from previous one."/>
      <bitenum value="1" id="1" token="CL_1" description="Current channel paired up with previous one."/>
    </bitfield>
    <bitfield id="DL" width="5" begin="14" end="10" resetval="0x00" description="Segment Data Length (DL), in 4-bit slots (except when 0). AUX + DATA length shall fit in a segment word, that is, 1 to 32 bits. In extended async TPs, sets segment word size (0 and odd values illegal) instead." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="DL_6" description="6 slots (24 bits)"/>
      <bitenum value="1" id="1" token="DL_1" description="1 slot (4 bits)"/>
      <bitenum value="7" id="7" token="DL_7" description="7 slots (28 bits), requiring at most 1 AUX slot to fit in max-size 32-bit segment word"/>
      <bitenum value="0" id="0" token="DL_0" description="Length not indicated: Segment slots that are not TAG or AUX are DATA (that is, no unused slot)"/>
      <bitenum value="2" id="2" token="DL_2" description="2 slots (8 bits)"/>
      <bitenum value="8" id="8" token="DL_8" description="8 slots (32 bits), requiring zero AUX slot, to fit in a max-size 32-bit segment word"/>
      <bitenum value="4" id="4" token="DL_4" description="4 slots (16 bits)"/>
      <bitenum value="5" id="5" token="DL_5" description="5 slots (20 bits)"/>
      <bitenum value="3" id="3" token="DL_3" description="3 slots (12 bits)"/>
    </bitfield>
    <bitfield id="SL" width="5" begin="9" end="5" resetval="0x00" description="total Segment Length (SL), in 4-bit slots. SL &amp;amp;gt;= TAG length + AUX length + DATA length" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SL_0" description="Reseved value"/>
    </bitfield>
    <bitfield id="TP_QUALIFIER" width="1" begin="4" end="4" resetval="0" description="Qualifier for plain/extended half-duplex asynchronous TPs (owner ID). Unused and don't care for other TPs." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TP_QUALIFIER_0" description="1/2 duplex TPs: Local device is primary channel owner, uses T1 token"/>
      <bitenum value="1" id="1" token="TP_QUALIFIER_1" description="1/2 duplex TPs: Local device is secondary channel owner, uses T2 token"/>
    </bitfield>
    <bitfield id="TP" width="4" begin="3" end="0" resetval="0x0" description="Transport Protocol (TP) Determines also the TAG length (from 0 to 2 slots)." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="TP_6" description="Extended asynchronous-half-duplex (unicast, 2-slot TAG)"/>
      <bitenum value="1" id="1" token="TP_1" description="Pushed (multicast, 1-slot TAG)"/>
      <bitenum value="7" id="7" token="TP_7" description="Extended asynchronous-simplex (unicast, 2-slot TAG)"/>
      <bitenum value="0" id="0" token="TP_0" description="Isochronous (multicast, no TAG)"/>
      <bitenum value="2" id="2" token="TP_2" description="Pulled (unicast, 1-slot TAG)"/>
      <bitenum value="4" id="4" token="TP_4" description="Asynchronous-simplex (unicast, 1-slot TAG)"/>
      <bitenum value="5" id="5" token="TP_5" description="Asynchronous-half-duplex (unicast, 1-slot TAG)"/>
      <bitenum value="15" id="15" token="TP_15" description="User-defined protocol 2 NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="3" id="3" token="TP_3" description="Locked (multicast, no TAG) NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="14" id="14" token="TP_14" description="User-defined protocol 1 NOT SUPPORTED, RESERVED VALUE"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_CONFIG1_j_3" acronym="SLIMBUS_DCT_CONFIG1_j_3" offset="0x274" width="32" description="TX data agent configuration, applied at the next reconfiguration boundary">
    <bitfield id="ENABLE" width="1" begin="31" end="31" resetval="0" description="Data agent enabling control. Auto-cleared upon frame or superframe sync loss." range="" rwaccess="RW">
      <bitenum value="1" id="1" token="ENABLE_1_r" description="Data agent is enabled"/>
      <bitenum value="0" id="0" token="ENABLE_0_r" description="Data agent is disabled"/>
    </bitfield>
    <bitfield id="CTS_LAST_VALUE" width="1" begin="30" end="30" resetval="0" description="Last received value of the CTS TAG bit. Only updated for asynchronous TP, when primary owner (that is, transmitter) of the channel." range="" rwaccess="R">
      <bitenum value="1" id="1" token="CTS_LAST_VALUE_1_r" description="Local sink signals TAG.CTS=1 that is, it can receive data (and remote source can transmit some)"/>
      <bitenum value="0" id="0" token="CTS_LAST_VALUE_0_r" description="Local sink signals TAG.CTS=0 that is, it cannot receive any data (and remote source shall not transmit any)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="29" end="29" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="DT_LPCM" width="1" begin="28" end="28" resetval="0" description="Unsigned-to-OSAM encoding enable for Data Type (DT) = LPCM audio (0x1)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DT_LPCM_0" description="DT!=0x1: encoding disabled"/>
      <bitenum value="1" id="1" token="DT_LPCM_1" description="DT=0x1: encoding enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="8" begin="27" end="20" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="AF" width="4" begin="19" end="16" resetval="0x0" description="Auxillairy Format (AF) used in segment word size calculation. Non-zero values not supported in extended asynchronous TPs." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="AF_15" description="User-defined 8-bit AUX (2 AUX slot per segment)"/>
      <bitenum value="0" id="0" token="AF_0" description="No AUX information (0 AUX slots per segment)"/>
      <bitenum value="1" id="1" token="AF_1" description="ZCUV for tunneling IEC60958 (1 AUX slot per segment)"/>
      <bitenum value="11" id="11" token="AF_11" description="User-defined 4-bit AUX (1 AUX slot per segment)"/>
    </bitfield>
    <bitfield id="CL" width="1" begin="15" end="15" resetval="0" description="Channel Link (CL) enable: Pairing up of current channel with previous one (that is, channel index below) Tied-0, read-only field for channel index 0, since there is no 'previous' channel in that case. TP and segment interval (encoded in SD) must be equal between the linked channels." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CL_0" description="Current channel independent from previous one."/>
      <bitenum value="1" id="1" token="CL_1" description="Current channel paired up with previous one."/>
    </bitfield>
    <bitfield id="DL" width="5" begin="14" end="10" resetval="0x00" description="Segment Data Length (DL), in 4-bit slots (except when 0). AUX + DATA length shall fit in a segment word, that is, 1 to 32 bits. In extended async TPs, sets segment word size (0 and odd values illegal) instead." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="DL_6" description="6 slots (24 bits)"/>
      <bitenum value="1" id="1" token="DL_1" description="1 slot (4 bits)"/>
      <bitenum value="7" id="7" token="DL_7" description="7 slots (28 bits), requiring at most 1 AUX slot to fit in max-size 32-bit segment word"/>
      <bitenum value="0" id="0" token="DL_0" description="Length not indicated: Segment slots that are not TAG or AUX are DATA (that is, no unused slot)"/>
      <bitenum value="2" id="2" token="DL_2" description="2 slots (8 bits)"/>
      <bitenum value="8" id="8" token="DL_8" description="8 slots (32 bits), requiring zero AUX slot, to fit in a max-size 32-bit segment word"/>
      <bitenum value="4" id="4" token="DL_4" description="4 slots (16 bits)"/>
      <bitenum value="5" id="5" token="DL_5" description="5 slots (20 bits)"/>
      <bitenum value="3" id="3" token="DL_3" description="3 slots (12 bits)"/>
    </bitfield>
    <bitfield id="SL" width="5" begin="9" end="5" resetval="0x00" description="total Segment Length (SL), in 4-bit slots. SL &amp;amp;gt;= TAG length + AUX length + DATA length" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SL_0" description="Reseved value"/>
    </bitfield>
    <bitfield id="TP_QUALIFIER" width="1" begin="4" end="4" resetval="0" description="Qualifier for plain/extended half-duplex asynchronous TPs (owner ID). Unused and don't care for other TPs." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TP_QUALIFIER_0" description="1/2 duplex TPs: Local device is primary channel owner, uses T1 token"/>
      <bitenum value="1" id="1" token="TP_QUALIFIER_1" description="1/2 duplex TPs: Local device is secondary channel owner, uses T2 token"/>
    </bitfield>
    <bitfield id="TP" width="4" begin="3" end="0" resetval="0x0" description="Transport Protocol (TP) Determines also the TAG length (from 0 to 2 slots)." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="TP_6" description="Extended asynchronous-half-duplex (unicast, 2-slot TAG)"/>
      <bitenum value="1" id="1" token="TP_1" description="Pushed (multicast, 1-slot TAG)"/>
      <bitenum value="7" id="7" token="TP_7" description="Extended asynchronous-simplex (unicast, 2-slot TAG)"/>
      <bitenum value="0" id="0" token="TP_0" description="Isochronous (multicast, no TAG)"/>
      <bitenum value="2" id="2" token="TP_2" description="Pulled (unicast, 1-slot TAG)"/>
      <bitenum value="4" id="4" token="TP_4" description="Asynchronous-simplex (unicast, 1-slot TAG)"/>
      <bitenum value="5" id="5" token="TP_5" description="Asynchronous-half-duplex (unicast, 1-slot TAG)"/>
      <bitenum value="15" id="15" token="TP_15" description="User-defined protocol 2 NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="3" id="3" token="TP_3" description="Locked (multicast, no TAG) NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="14" id="14" token="TP_14" description="User-defined protocol 1 NOT SUPPORTED, RESERVED VALUE"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCT_CONFIG2_j_0" acronym="SLIMBUS_DCT_CONFIG2_j_0" offset="0x218" width="32" description="TX data agent configuration (continued), applied at the next reconfiguration boundary">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="SD" width="12" begin="11" end="0" resetval="0x000" description="Segment Distribution (see)" range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCT_CONFIG2_j_1" acronym="SLIMBUS_DCT_CONFIG2_j_1" offset="0x238" width="32" description="TX data agent configuration (continued), applied at the next reconfiguration boundary">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="SD" width="12" begin="11" end="0" resetval="0x000" description="Segment Distribution (see)" range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCT_CONFIG2_j_2" acronym="SLIMBUS_DCT_CONFIG2_j_2" offset="0x258" width="32" description="TX data agent configuration (continued), applied at the next reconfiguration boundary">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="SD" width="12" begin="11" end="0" resetval="0x000" description="Segment Distribution (see)" range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCT_CONFIG2_j_3" acronym="SLIMBUS_DCT_CONFIG2_j_3" offset="0x278" width="32" description="TX data agent configuration (continued), applied at the next reconfiguration boundary">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="SD" width="12" begin="11" end="0" resetval="0x000" description="Segment Distribution (see)" range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCT_DATA_j_0" acronym="SLIMBUS_DCT_DATA_j_0" offset="0x21C" width="32" description="TX data agent DATA FIFO input. Reads have no effect on FIFO.">
    <bitfield id="DATA" width="32" begin="31" end="0" resetval="0x0000 0000" description="Data segment word, single-word or packed, LSB or MSB-aligned." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCT_DATA_j_1" acronym="SLIMBUS_DCT_DATA_j_1" offset="0x23C" width="32" description="TX data agent DATA FIFO input. Reads have no effect on FIFO.">
    <bitfield id="DATA" width="32" begin="31" end="0" resetval="0x0000 0000" description="Data segment word, single-word or packed, LSB or MSB-aligned." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCT_DATA_j_2" acronym="SLIMBUS_DCT_DATA_j_2" offset="0x25C" width="32" description="TX data agent DATA FIFO input. Reads have no effect on FIFO.">
    <bitfield id="DATA" width="32" begin="31" end="0" resetval="0x0000 0000" description="Data segment word, single-word or packed, LSB or MSB-aligned." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCT_DATA_j_3" acronym="SLIMBUS_DCT_DATA_j_3" offset="0x27C" width="32" description="TX data agent DATA FIFO input. Reads have no effect on FIFO.">
    <bitfield id="DATA" width="32" begin="31" end="0" resetval="0x0000 0000" description="Data segment word, single-word or packed, LSB or MSB-aligned." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCR_INFO_j_0" acronym="SLIMBUS_DCR_INFO_j_0" offset="0x280" width="32" description="RX data agent status. Write 1 to a bit to clear it.">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="HILEVEL" width="1" begin="3" end="3" resetval="0" description="Read level of RX data agent FIFO has gone above DMA threshold (that is, reads required to empty FIFO)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="HILEVEL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="HILEVEL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="HILEVEL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="HILEVEL_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="UNDERFLOW" width="1" begin="2" end="2" resetval="0" description="Underflow in RX data agent FIFO" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="UNDERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="UNDERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="OVERFLOW" width="1" begin="1" end="1" resetval="0" description="Overflow in RX data agent FIFO Note: never asserted in pulled or async TPs, by construction." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="OVERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="OVERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DATA_TX_COL" width="1" begin="0" end="0" resetval="0" description="TX collision in RX data agent. Core information element (IE)." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DATA_TX_COL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DATA_TX_COL_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_INFO_j_1" acronym="SLIMBUS_DCR_INFO_j_1" offset="0x2A0" width="32" description="RX data agent status. Write 1 to a bit to clear it.">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="HILEVEL" width="1" begin="3" end="3" resetval="0" description="Read level of RX data agent FIFO has gone above DMA threshold (that is, reads required to empty FIFO)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="HILEVEL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="HILEVEL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="HILEVEL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="HILEVEL_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="UNDERFLOW" width="1" begin="2" end="2" resetval="0" description="Underflow in RX data agent FIFO" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="UNDERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="UNDERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="OVERFLOW" width="1" begin="1" end="1" resetval="0" description="Overflow in RX data agent FIFO Note: never asserted in pulled or async TPs, by construction." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="OVERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="OVERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DATA_TX_COL" width="1" begin="0" end="0" resetval="0" description="TX collision in RX data agent. Core information element (IE)." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DATA_TX_COL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DATA_TX_COL_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_INFO_j_2" acronym="SLIMBUS_DCR_INFO_j_2" offset="0x2C0" width="32" description="RX data agent status. Write 1 to a bit to clear it.">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="HILEVEL" width="1" begin="3" end="3" resetval="0" description="Read level of RX data agent FIFO has gone above DMA threshold (that is, reads required to empty FIFO)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="HILEVEL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="HILEVEL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="HILEVEL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="HILEVEL_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="UNDERFLOW" width="1" begin="2" end="2" resetval="0" description="Underflow in RX data agent FIFO" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="UNDERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="UNDERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="OVERFLOW" width="1" begin="1" end="1" resetval="0" description="Overflow in RX data agent FIFO Note: never asserted in pulled or async TPs, by construction." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="OVERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="OVERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DATA_TX_COL" width="1" begin="0" end="0" resetval="0" description="TX collision in RX data agent. Core information element (IE)." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DATA_TX_COL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DATA_TX_COL_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_INFO_j_3" acronym="SLIMBUS_DCR_INFO_j_3" offset="0x2E0" width="32" description="RX data agent status. Write 1 to a bit to clear it.">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="HILEVEL" width="1" begin="3" end="3" resetval="0" description="Read level of RX data agent FIFO has gone above DMA threshold (that is, reads required to empty FIFO)" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="HILEVEL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="HILEVEL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="HILEVEL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="HILEVEL_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="UNDERFLOW" width="1" begin="2" end="2" resetval="0" description="Underflow in RX data agent FIFO" range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="UNDERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="UNDERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="UNDERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="OVERFLOW" width="1" begin="1" end="1" resetval="0" description="Overflow in RX data agent FIFO Note: never asserted in pulled or async TPs, by construction." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="OVERFLOW_0_w" description="No action"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="OVERFLOW_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="OVERFLOW_0_r" description="No event pending"/>
    </bitfield>
    <bitfield id="DATA_TX_COL" width="1" begin="0" end="0" resetval="0" description="TX collision in RX data agent. Core information element (IE)." range="" rwaccess="RW W1toClr">
      <bitenum value="0" id="0" token="DATA_TX_COL_0_w" description="No action"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_w" description="Clear pending event, if any"/>
      <bitenum value="1" id="1" token="DATA_TX_COL_1_r" description="IRQ event pending"/>
      <bitenum value="0" id="0" token="DATA_TX_COL_0_r" description="No event pending"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_SETUP1_j_0" acronym="SLIMBUS_DCR_FIFO_SETUP1_j_0" offset="0x284" width="32" description="RX data agent FIFO setup. To be kept static during channel operation.">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="BASE_ADDR" width="8" begin="12" end="5" resetval="0x00" description="RX data agent FIFO base address within shared RX RAM. (physical address of the 32-bit wide RAM array)" range="" rwaccess="RW"/>
    <bitfield id="DMA_REQ_SIZE" width="4" begin="4" end="1" resetval="0x0" description="DMA request size minus 1, in read accesses. In counting (packet) mode, last request may be smaller. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="DMA_REQ_SIZE_15" description="16 accesses per DMA request"/>
      <bitenum value="0" id="0" token="DMA_REQ_SIZE_0" description="1 access per DMA request"/>
    </bitfield>
    <bitfield id="FIFO_CLEAR" width="1" begin="0" end="0" resetval="0" description="Returns FIFO to initial empty state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_w" description="No effect"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_w" description="Clear FIFO"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_r" description="Ongoing Clear. Completion requires the SLIMbus clock."/>
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_r" description="No event, last clear completed"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_SETUP1_j_1" acronym="SLIMBUS_DCR_FIFO_SETUP1_j_1" offset="0x2A4" width="32" description="RX data agent FIFO setup. To be kept static during channel operation.">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="BASE_ADDR" width="8" begin="12" end="5" resetval="0x00" description="RX data agent FIFO base address within shared RX RAM. (physical address of the 32-bit wide RAM array)" range="" rwaccess="RW"/>
    <bitfield id="DMA_REQ_SIZE" width="4" begin="4" end="1" resetval="0x0" description="DMA request size minus 1, in read accesses. In counting (packet) mode, last request may be smaller. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="DMA_REQ_SIZE_15" description="16 accesses per DMA request"/>
      <bitenum value="0" id="0" token="DMA_REQ_SIZE_0" description="1 access per DMA request"/>
    </bitfield>
    <bitfield id="FIFO_CLEAR" width="1" begin="0" end="0" resetval="0" description="Returns FIFO to initial empty state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_w" description="No effect"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_w" description="Clear FIFO"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_r" description="Ongoing Clear. Completion requires the SLIMbus clock."/>
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_r" description="No event, last clear completed"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_SETUP1_j_2" acronym="SLIMBUS_DCR_FIFO_SETUP1_j_2" offset="0x2C4" width="32" description="RX data agent FIFO setup. To be kept static during channel operation.">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="BASE_ADDR" width="8" begin="12" end="5" resetval="0x00" description="RX data agent FIFO base address within shared RX RAM. (physical address of the 32-bit wide RAM array)" range="" rwaccess="RW"/>
    <bitfield id="DMA_REQ_SIZE" width="4" begin="4" end="1" resetval="0x0" description="DMA request size minus 1, in read accesses. In counting (packet) mode, last request may be smaller. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="DMA_REQ_SIZE_15" description="16 accesses per DMA request"/>
      <bitenum value="0" id="0" token="DMA_REQ_SIZE_0" description="1 access per DMA request"/>
    </bitfield>
    <bitfield id="FIFO_CLEAR" width="1" begin="0" end="0" resetval="0" description="Returns FIFO to initial empty state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_w" description="No effect"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_w" description="Clear FIFO"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_r" description="Ongoing Clear. Completion requires the SLIMbus clock."/>
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_r" description="No event, last clear completed"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_SETUP1_j_3" acronym="SLIMBUS_DCR_FIFO_SETUP1_j_3" offset="0x2E4" width="32" description="RX data agent FIFO setup. To be kept static during channel operation.">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="BASE_ADDR" width="8" begin="12" end="5" resetval="0x00" description="RX data agent FIFO base address within shared RX RAM. (physical address of the 32-bit wide RAM array)" range="" rwaccess="RW"/>
    <bitfield id="DMA_REQ_SIZE" width="4" begin="4" end="1" resetval="0x0" description="DMA request size minus 1, in read accesses. In counting (packet) mode, last request may be smaller. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="DMA_REQ_SIZE_15" description="16 accesses per DMA request"/>
      <bitenum value="0" id="0" token="DMA_REQ_SIZE_0" description="1 access per DMA request"/>
    </bitfield>
    <bitfield id="FIFO_CLEAR" width="1" begin="0" end="0" resetval="0" description="Returns FIFO to initial empty state." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_w" description="No effect"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_w" description="Clear FIFO"/>
      <bitenum value="1" id="1" token="FIFO_CLEAR_1_r" description="Ongoing Clear. Completion requires the SLIMbus clock."/>
      <bitenum value="0" id="0" token="FIFO_CLEAR_0_r" description="No event, last clear completed"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_SETUP2_j_0" acronym="SLIMBUS_DCR_FIFO_SETUP2_j_0" offset="0x288" width="32" description="RX data agent FIFO setup, continued. To be kept static during channel operation.">
    <bitfield id="PACKING" width="1" begin="31" end="31" resetval="0" description="Packing enable control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PACKING_0" description="Packing disabled: one segment word per read access. Byte enable is don't care."/>
      <bitenum value="1" id="1" token="PACKING_1" description="Packing enabled: one or several segment words per read access, depending on segment word size and byte enable. Only works in LSB-aligned mode. Behaviour in LSB-aligned mode is undefined."/>
    </bitfield>
    <bitfield id="MSB_ALIGNED" width="1" begin="30" end="30" resetval="0" description="PLACEHOLDER, NO EFFECT: DATA ALWAYS LSB-aligned LSB/MSB-alignment of FIFO output (read) RX data." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MSB_ALIGNED_0" description="Output data is LSB-aligned"/>
      <bitenum value="1" id="1" token="MSB_ALIGNED_1" description="Output data is MSB-aligned"/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="29" end="24" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="DMA_THRESHOLD" width="8" begin="23" end="16" resetval="0x00" description="SW-side RX data agent FIFO threshold. DMA read requests get (re-)asserted when RD_LEVEL is above threshold. Range: 0 to SIZE field value (included)." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="DMA_THRESHOLD_255" description="DMA reads requested whenever FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="DMA_THRESHOLD_0" description="DMA reads requested whenever FIFO is not empty"/>
    </bitfield>
    <bitfield id="SB_THRESHOLD" width="8" begin="15" end="8" resetval="0x00" description="SLIMbus-side RX data agent FIFO threshold, used for SLIMbus reception." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SB_THRESHOLD_255" description="Threshold condition = FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="SB_THRESHOLD_0" description="Threshold condition = FIFO is not empty"/>
    </bitfield>
    <bitfield id="SIZE" width="8" begin="7" end="0" resetval="0x00" description="Capacity of FIFO in segment words, minus one." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SIZE_255" description="Maximum FIFO size"/>
      <bitenum value="0" id="0" token="SIZE_0" description="FIFO is 1-word deep (not recommended)"/>
      <bitenum value="3" id="3" token="SIZE_3" description="FIFO is 4-word deep. Recommended minimum setting (SLIMbus protocol)."/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_SETUP2_j_1" acronym="SLIMBUS_DCR_FIFO_SETUP2_j_1" offset="0x2A8" width="32" description="RX data agent FIFO setup, continued. To be kept static during channel operation.">
    <bitfield id="PACKING" width="1" begin="31" end="31" resetval="0" description="Packing enable control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PACKING_0" description="Packing disabled: one segment word per read access. Byte enable is don't care."/>
      <bitenum value="1" id="1" token="PACKING_1" description="Packing enabled: one or several segment words per read access, depending on segment word size and byte enable. Only works in LSB-aligned mode. Behaviour in LSB-aligned mode is undefined."/>
    </bitfield>
    <bitfield id="MSB_ALIGNED" width="1" begin="30" end="30" resetval="0" description="PLACEHOLDER, NO EFFECT: DATA ALWAYS LSB-aligned LSB/MSB-alignment of FIFO output (read) RX data." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MSB_ALIGNED_0" description="Output data is LSB-aligned"/>
      <bitenum value="1" id="1" token="MSB_ALIGNED_1" description="Output data is MSB-aligned"/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="29" end="24" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="DMA_THRESHOLD" width="8" begin="23" end="16" resetval="0x00" description="SW-side RX data agent FIFO threshold. DMA read requests get (re-)asserted when RD_LEVEL is above threshold. Range: 0 to SIZE field value (included)." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="DMA_THRESHOLD_255" description="DMA reads requested whenever FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="DMA_THRESHOLD_0" description="DMA reads requested whenever FIFO is not empty"/>
    </bitfield>
    <bitfield id="SB_THRESHOLD" width="8" begin="15" end="8" resetval="0x00" description="SLIMbus-side RX data agent FIFO threshold, used for SLIMbus reception." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SB_THRESHOLD_255" description="Threshold condition = FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="SB_THRESHOLD_0" description="Threshold condition = FIFO is not empty"/>
    </bitfield>
    <bitfield id="SIZE" width="8" begin="7" end="0" resetval="0x00" description="Capacity of FIFO in segment words, minus one." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SIZE_255" description="Maximum FIFO size"/>
      <bitenum value="0" id="0" token="SIZE_0" description="FIFO is 1-word deep (not recommended)"/>
      <bitenum value="3" id="3" token="SIZE_3" description="FIFO is 4-word deep. Recommended minimum setting (SLIMbus protocol)."/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_SETUP2_j_2" acronym="SLIMBUS_DCR_FIFO_SETUP2_j_2" offset="0x2C8" width="32" description="RX data agent FIFO setup, continued. To be kept static during channel operation.">
    <bitfield id="PACKING" width="1" begin="31" end="31" resetval="0" description="Packing enable control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PACKING_0" description="Packing disabled: one segment word per read access. Byte enable is don't care."/>
      <bitenum value="1" id="1" token="PACKING_1" description="Packing enabled: one or several segment words per read access, depending on segment word size and byte enable. Only works in LSB-aligned mode. Behaviour in LSB-aligned mode is undefined."/>
    </bitfield>
    <bitfield id="MSB_ALIGNED" width="1" begin="30" end="30" resetval="0" description="PLACEHOLDER, NO EFFECT: DATA ALWAYS LSB-aligned LSB/MSB-alignment of FIFO output (read) RX data." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MSB_ALIGNED_0" description="Output data is LSB-aligned"/>
      <bitenum value="1" id="1" token="MSB_ALIGNED_1" description="Output data is MSB-aligned"/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="29" end="24" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="DMA_THRESHOLD" width="8" begin="23" end="16" resetval="0x00" description="SW-side RX data agent FIFO threshold. DMA read requests get (re-)asserted when RD_LEVEL is above threshold. Range: 0 to SIZE field value (included)." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="DMA_THRESHOLD_255" description="DMA reads requested whenever FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="DMA_THRESHOLD_0" description="DMA reads requested whenever FIFO is not empty"/>
    </bitfield>
    <bitfield id="SB_THRESHOLD" width="8" begin="15" end="8" resetval="0x00" description="SLIMbus-side RX data agent FIFO threshold, used for SLIMbus reception." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SB_THRESHOLD_255" description="Threshold condition = FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="SB_THRESHOLD_0" description="Threshold condition = FIFO is not empty"/>
    </bitfield>
    <bitfield id="SIZE" width="8" begin="7" end="0" resetval="0x00" description="Capacity of FIFO in segment words, minus one." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SIZE_255" description="Maximum FIFO size"/>
      <bitenum value="0" id="0" token="SIZE_0" description="FIFO is 1-word deep (not recommended)"/>
      <bitenum value="3" id="3" token="SIZE_3" description="FIFO is 4-word deep. Recommended minimum setting (SLIMbus protocol)."/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_SETUP2_j_3" acronym="SLIMBUS_DCR_FIFO_SETUP2_j_3" offset="0x2E8" width="32" description="RX data agent FIFO setup, continued. To be kept static during channel operation.">
    <bitfield id="PACKING" width="1" begin="31" end="31" resetval="0" description="Packing enable control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PACKING_0" description="Packing disabled: one segment word per read access. Byte enable is don't care."/>
      <bitenum value="1" id="1" token="PACKING_1" description="Packing enabled: one or several segment words per read access, depending on segment word size and byte enable. Only works in LSB-aligned mode. Behaviour in LSB-aligned mode is undefined."/>
    </bitfield>
    <bitfield id="MSB_ALIGNED" width="1" begin="30" end="30" resetval="0" description="PLACEHOLDER, NO EFFECT: DATA ALWAYS LSB-aligned LSB/MSB-alignment of FIFO output (read) RX data." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MSB_ALIGNED_0" description="Output data is LSB-aligned"/>
      <bitenum value="1" id="1" token="MSB_ALIGNED_1" description="Output data is MSB-aligned"/>
    </bitfield>
    <bitfield id="RESERVED" width="6" begin="29" end="24" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="DMA_THRESHOLD" width="8" begin="23" end="16" resetval="0x00" description="SW-side RX data agent FIFO threshold. DMA read requests get (re-)asserted when RD_LEVEL is above threshold. Range: 0 to SIZE field value (included)." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="DMA_THRESHOLD_255" description="DMA reads requested whenever FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="DMA_THRESHOLD_0" description="DMA reads requested whenever FIFO is not empty"/>
    </bitfield>
    <bitfield id="SB_THRESHOLD" width="8" begin="15" end="8" resetval="0x00" description="SLIMbus-side RX data agent FIFO threshold, used for SLIMbus reception." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SB_THRESHOLD_255" description="Threshold condition = FIFO is full (assuming maximum FIFO size)"/>
      <bitenum value="0" id="0" token="SB_THRESHOLD_0" description="Threshold condition = FIFO is not empty"/>
    </bitfield>
    <bitfield id="SIZE" width="8" begin="7" end="0" resetval="0x00" description="Capacity of FIFO in segment words, minus one." range="" rwaccess="RW">
      <bitenum value="255" id="255" token="SIZE_255" description="Maximum FIFO size"/>
      <bitenum value="0" id="0" token="SIZE_0" description="FIFO is 1-word deep (not recommended)"/>
      <bitenum value="3" id="3" token="SIZE_3" description="FIFO is 4-word deep. Recommended minimum setting (SLIMbus protocol)."/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_STATUS_j_0" acronym="SLIMBUS_DCR_FIFO_STATUS_j_0" offset="0x28C" width="32" description="RX data agent FIFO status, for software (non-DMA) FIFO management.">
    <bitfield id="COUNT_EN" width="1" begin="31" end="31" resetval="0" description="Down-counter mode control. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="COUNT_EN_0_w" description="Disable down-counter mode. Should typically be used only when ACC_CNT = 0. If ACC_CNT &amp;gt; 0, DMA request gets deasserted immediately."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_w" description="Enable down-counter mode. ACC_CNT is typically set to the desired value in the same write access."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_r" description="Down-counter mode is enabled: DMA request can only be active when ACC_CNT &amp;gt; 0"/>
      <bitenum value="0" id="0" token="COUNT_EN_0_r" description="Down-counter mode is disabled: DMA request follows FIFO level, and is active during no-transmission periods."/>
    </bitfield>
    <bitfield id="ACC_CNT" width="15" begin="30" end="16" resetval="0x0000" description="'Packet mode' down-counter of segment words, decremented on DCR_DATA read accesses. In that mode, DMA request shall reassert when ACC_CNT = RD_LEVEL (that is, whole packet received)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACC_CNT_0_w" description="Deasserts current DMA request by forcing the count to zero (not typical operation)"/>
      <bitenum value="127" id="127" token="ACC_CNT_127_w" description="Set largest packet size (in accesses) to transfer before DMA request deassertion. Any lower value is also valid to enter."/>
      <bitenum value="127" id="127" token="ACC_CNT_127_r" description="Maximum number of accesses still to be transferred before DMA deassertion. Unless interrupted, counter shall go through all values down to zero."/>
      <bitenum value="0" id="0" token="ACC_CNT_0_r" description="No access left to transfer, DMA request currently inactive."/>
    </bitfield>
    <bitfield id="IMPRECISE_EN" width="1" begin="15" end="15" resetval="0" description="Precise vs. Imprecise DMA requesting mode control. (A DMA request is a single assertion-deassertion cycle.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IMPRECISE_EN_0" description="DMA request contains a defined number of accesses"/>
      <bitenum value="1" id="1" token="IMPRECISE_EN_1" description="DMA request is not expected to trigger a fixed number of accesses"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="14" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RD_LEVEL" width="9" begin="10" end="2" resetval="0x000" description="Number of segment words stored in FIFO, that can be read out." range="" rwaccess="R">
      <bitenum value="256" id="256" token="RD_LEVEL_256_r" description="FIFO is full of readable words (assuming maximum size)"/>
      <bitenum value="0" id="0" token="RD_LEVEL_0_r" description="FIFO contains no readable word"/>
    </bitfield>
    <bitfield id="HILEVEL" width="1" begin="1" end="1" resetval="0" description="Indicator of read level (RD_LEVEL: number of readable segment words) with respect to (read) threshold (DMA_THRESHOLD). Activates DMA read requests when high." range="" rwaccess="R">
      <bitenum value="1" id="1" token="HILEVEL_1_r" description="RD_LEVEL &amp;gt; DMA_THRESHOLD"/>
      <bitenum value="0" id="0" token="HILEVEL_0_r" description="RD_LEVEL &amp;lt;= DMA_THRESHOLD"/>
    </bitfield>
    <bitfield id="EMPTY" width="1" begin="0" end="0" resetval="1" description="FIFO empty indicator" range="" rwaccess="R">
      <bitenum value="1" id="1" token="EMPTY_1_r" description="FIFO contains no readable word (RD_LEVEL = 0)"/>
      <bitenum value="0" id="0" token="EMPTY_0_r" description="FIFO contains at least one readable word (RD_LEVEL &amp;gt; 0)"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_STATUS_j_1" acronym="SLIMBUS_DCR_FIFO_STATUS_j_1" offset="0x2AC" width="32" description="RX data agent FIFO status, for software (non-DMA) FIFO management.">
    <bitfield id="COUNT_EN" width="1" begin="31" end="31" resetval="0" description="Down-counter mode control. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="COUNT_EN_0_w" description="Disable down-counter mode. Should typically be used only when ACC_CNT = 0. If ACC_CNT &amp;gt; 0, DMA request gets deasserted immediately."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_w" description="Enable down-counter mode. ACC_CNT is typically set to the desired value in the same write access."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_r" description="Down-counter mode is enabled: DMA request can only be active when ACC_CNT &amp;gt; 0"/>
      <bitenum value="0" id="0" token="COUNT_EN_0_r" description="Down-counter mode is disabled: DMA request follows FIFO level, and is active during no-transmission periods."/>
    </bitfield>
    <bitfield id="ACC_CNT" width="15" begin="30" end="16" resetval="0x0000" description="'Packet mode' down-counter of segment words, decremented on DCR_DATA read accesses. In that mode, DMA request shall reassert when ACC_CNT = RD_LEVEL (that is, whole packet received)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACC_CNT_0_w" description="Deasserts current DMA request by forcing the count to zero (not typical operation)"/>
      <bitenum value="127" id="127" token="ACC_CNT_127_w" description="Set largest packet size (in accesses) to transfer before DMA request deassertion. Any lower value is also valid to enter."/>
      <bitenum value="127" id="127" token="ACC_CNT_127_r" description="Maximum number of accesses still to be transferred before DMA deassertion. Unless interrupted, counter shall go through all values down to zero."/>
      <bitenum value="0" id="0" token="ACC_CNT_0_r" description="No access left to transfer, DMA request currently inactive."/>
    </bitfield>
    <bitfield id="IMPRECISE_EN" width="1" begin="15" end="15" resetval="0" description="Precise vs. Imprecise DMA requesting mode control. (A DMA request is a single assertion-deassertion cycle.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IMPRECISE_EN_0" description="DMA request contains a defined number of accesses"/>
      <bitenum value="1" id="1" token="IMPRECISE_EN_1" description="DMA request is not expected to trigger a fixed number of accesses"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="14" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RD_LEVEL" width="9" begin="10" end="2" resetval="0x000" description="Number of segment words stored in FIFO, that can be read out." range="" rwaccess="R">
      <bitenum value="256" id="256" token="RD_LEVEL_256_r" description="FIFO is full of readable words (assuming maximum size)"/>
      <bitenum value="0" id="0" token="RD_LEVEL_0_r" description="FIFO contains no readable word"/>
    </bitfield>
    <bitfield id="HILEVEL" width="1" begin="1" end="1" resetval="0" description="Indicator of read level (RD_LEVEL: number of readable segment words) with respect to (read) threshold (DMA_THRESHOLD). Activates DMA read requests when high." range="" rwaccess="R">
      <bitenum value="1" id="1" token="HILEVEL_1_r" description="RD_LEVEL &amp;gt; DMA_THRESHOLD"/>
      <bitenum value="0" id="0" token="HILEVEL_0_r" description="RD_LEVEL &amp;lt;= DMA_THRESHOLD"/>
    </bitfield>
    <bitfield id="EMPTY" width="1" begin="0" end="0" resetval="1" description="FIFO empty indicator" range="" rwaccess="R">
      <bitenum value="1" id="1" token="EMPTY_1_r" description="FIFO contains no readable word (RD_LEVEL = 0)"/>
      <bitenum value="0" id="0" token="EMPTY_0_r" description="FIFO contains at least one readable word (RD_LEVEL &amp;gt; 0)"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_STATUS_j_2" acronym="SLIMBUS_DCR_FIFO_STATUS_j_2" offset="0x2CC" width="32" description="RX data agent FIFO status, for software (non-DMA) FIFO management.">
    <bitfield id="COUNT_EN" width="1" begin="31" end="31" resetval="0" description="Down-counter mode control. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="COUNT_EN_0_w" description="Disable down-counter mode. Should typically be used only when ACC_CNT = 0. If ACC_CNT &amp;gt; 0, DMA request gets deasserted immediately."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_w" description="Enable down-counter mode. ACC_CNT is typically set to the desired value in the same write access."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_r" description="Down-counter mode is enabled: DMA request can only be active when ACC_CNT &amp;gt; 0"/>
      <bitenum value="0" id="0" token="COUNT_EN_0_r" description="Down-counter mode is disabled: DMA request follows FIFO level, and is active during no-transmission periods."/>
    </bitfield>
    <bitfield id="ACC_CNT" width="15" begin="30" end="16" resetval="0x0000" description="'Packet mode' down-counter of segment words, decremented on DCR_DATA read accesses. In that mode, DMA request shall reassert when ACC_CNT = RD_LEVEL (that is, whole packet received)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACC_CNT_0_w" description="Deasserts current DMA request by forcing the count to zero (not typical operation)"/>
      <bitenum value="127" id="127" token="ACC_CNT_127_w" description="Set largest packet size (in accesses) to transfer before DMA request deassertion. Any lower value is also valid to enter."/>
      <bitenum value="127" id="127" token="ACC_CNT_127_r" description="Maximum number of accesses still to be transferred before DMA deassertion. Unless interrupted, counter shall go through all values down to zero."/>
      <bitenum value="0" id="0" token="ACC_CNT_0_r" description="No access left to transfer, DMA request currently inactive."/>
    </bitfield>
    <bitfield id="IMPRECISE_EN" width="1" begin="15" end="15" resetval="0" description="Precise vs. Imprecise DMA requesting mode control. (A DMA request is a single assertion-deassertion cycle.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IMPRECISE_EN_0" description="DMA request contains a defined number of accesses"/>
      <bitenum value="1" id="1" token="IMPRECISE_EN_1" description="DMA request is not expected to trigger a fixed number of accesses"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="14" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RD_LEVEL" width="9" begin="10" end="2" resetval="0x000" description="Number of segment words stored in FIFO, that can be read out." range="" rwaccess="R">
      <bitenum value="256" id="256" token="RD_LEVEL_256_r" description="FIFO is full of readable words (assuming maximum size)"/>
      <bitenum value="0" id="0" token="RD_LEVEL_0_r" description="FIFO contains no readable word"/>
    </bitfield>
    <bitfield id="HILEVEL" width="1" begin="1" end="1" resetval="0" description="Indicator of read level (RD_LEVEL: number of readable segment words) with respect to (read) threshold (DMA_THRESHOLD). Activates DMA read requests when high." range="" rwaccess="R">
      <bitenum value="1" id="1" token="HILEVEL_1_r" description="RD_LEVEL &amp;gt; DMA_THRESHOLD"/>
      <bitenum value="0" id="0" token="HILEVEL_0_r" description="RD_LEVEL &amp;lt;= DMA_THRESHOLD"/>
    </bitfield>
    <bitfield id="EMPTY" width="1" begin="0" end="0" resetval="1" description="FIFO empty indicator" range="" rwaccess="R">
      <bitenum value="1" id="1" token="EMPTY_1_r" description="FIFO contains no readable word (RD_LEVEL = 0)"/>
      <bitenum value="0" id="0" token="EMPTY_0_r" description="FIFO contains at least one readable word (RD_LEVEL &amp;gt; 0)"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_FIFO_STATUS_j_3" acronym="SLIMBUS_DCR_FIFO_STATUS_j_3" offset="0x2EC" width="32" description="RX data agent FIFO status, for software (non-DMA) FIFO management.">
    <bitfield id="COUNT_EN" width="1" begin="31" end="31" resetval="0" description="Down-counter mode control. Only applicable in precise DMA mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="COUNT_EN_0_w" description="Disable down-counter mode. Should typically be used only when ACC_CNT = 0. If ACC_CNT &amp;gt; 0, DMA request gets deasserted immediately."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_w" description="Enable down-counter mode. ACC_CNT is typically set to the desired value in the same write access."/>
      <bitenum value="1" id="1" token="COUNT_EN_1_r" description="Down-counter mode is enabled: DMA request can only be active when ACC_CNT &amp;gt; 0"/>
      <bitenum value="0" id="0" token="COUNT_EN_0_r" description="Down-counter mode is disabled: DMA request follows FIFO level, and is active during no-transmission periods."/>
    </bitfield>
    <bitfield id="ACC_CNT" width="15" begin="30" end="16" resetval="0x0000" description="'Packet mode' down-counter of segment words, decremented on DCR_DATA read accesses. In that mode, DMA request shall reassert when ACC_CNT = RD_LEVEL (that is, whole packet received)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACC_CNT_0_w" description="Deasserts current DMA request by forcing the count to zero (not typical operation)"/>
      <bitenum value="127" id="127" token="ACC_CNT_127_w" description="Set largest packet size (in accesses) to transfer before DMA request deassertion. Any lower value is also valid to enter."/>
      <bitenum value="127" id="127" token="ACC_CNT_127_r" description="Maximum number of accesses still to be transferred before DMA deassertion. Unless interrupted, counter shall go through all values down to zero."/>
      <bitenum value="0" id="0" token="ACC_CNT_0_r" description="No access left to transfer, DMA request currently inactive."/>
    </bitfield>
    <bitfield id="IMPRECISE_EN" width="1" begin="15" end="15" resetval="0" description="Precise vs. Imprecise DMA requesting mode control. (A DMA request is a single assertion-deassertion cycle.)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IMPRECISE_EN_0" description="DMA request contains a defined number of accesses"/>
      <bitenum value="1" id="1" token="IMPRECISE_EN_1" description="DMA request is not expected to trigger a fixed number of accesses"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="14" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RD_LEVEL" width="9" begin="10" end="2" resetval="0x000" description="Number of segment words stored in FIFO, that can be read out." range="" rwaccess="R">
      <bitenum value="256" id="256" token="RD_LEVEL_256_r" description="FIFO is full of readable words (assuming maximum size)"/>
      <bitenum value="0" id="0" token="RD_LEVEL_0_r" description="FIFO contains no readable word"/>
    </bitfield>
    <bitfield id="HILEVEL" width="1" begin="1" end="1" resetval="0" description="Indicator of read level (RD_LEVEL: number of readable segment words) with respect to (read) threshold (DMA_THRESHOLD). Activates DMA read requests when high." range="" rwaccess="R">
      <bitenum value="1" id="1" token="HILEVEL_1_r" description="RD_LEVEL &amp;gt; DMA_THRESHOLD"/>
      <bitenum value="0" id="0" token="HILEVEL_0_r" description="RD_LEVEL &amp;lt;= DMA_THRESHOLD"/>
    </bitfield>
    <bitfield id="EMPTY" width="1" begin="0" end="0" resetval="1" description="FIFO empty indicator" range="" rwaccess="R">
      <bitenum value="1" id="1" token="EMPTY_1_r" description="FIFO contains no readable word (RD_LEVEL = 0)"/>
      <bitenum value="0" id="0" token="EMPTY_0_r" description="FIFO contains at least one readable word (RD_LEVEL &amp;gt; 0)"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_MAP_j_0" acronym="SLIMBUS_DCR_MAP_j_0" offset="0x290" width="32" description="Associates a device and port to the RX data agent. Write to field FL_CONTROL[8] VALIDATE_DCMAP to validate changes.">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="PN" width="6" begin="13" end="8" resetval="0x00" description="Port Number (PN), identifies the data channel's port for the device. Shall be unique within a device. Note that a half-duplex (bidirectional) port has 2 data agents with the same PN, 1 TX + 1 Rx." range="" rwaccess="RW"/>
    <bitfield id="DI" width="8" begin="7" end="0" resetval="0x00" description="Index (DI) of the device this data agent belongs to. Devices are hard-indexed from 0 upwards." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCR_MAP_j_1" acronym="SLIMBUS_DCR_MAP_j_1" offset="0x2B0" width="32" description="Associates a device and port to the RX data agent. Write to field FL_CONTROL[8] VALIDATE_DCMAP to validate changes.">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="PN" width="6" begin="13" end="8" resetval="0x00" description="Port Number (PN), identifies the data channel's port for the device. Shall be unique within a device. Note that a half-duplex (bidirectional) port has 2 data agents with the same PN, 1 TX + 1 Rx." range="" rwaccess="RW"/>
    <bitfield id="DI" width="8" begin="7" end="0" resetval="0x00" description="Index (DI) of the device this data agent belongs to. Devices are hard-indexed from 0 upwards." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCR_MAP_j_2" acronym="SLIMBUS_DCR_MAP_j_2" offset="0x2D0" width="32" description="Associates a device and port to the RX data agent. Write to field FL_CONTROL[8] VALIDATE_DCMAP to validate changes.">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="PN" width="6" begin="13" end="8" resetval="0x00" description="Port Number (PN), identifies the data channel's port for the device. Shall be unique within a device. Note that a half-duplex (bidirectional) port has 2 data agents with the same PN, 1 TX + 1 Rx." range="" rwaccess="RW"/>
    <bitfield id="DI" width="8" begin="7" end="0" resetval="0x00" description="Index (DI) of the device this data agent belongs to. Devices are hard-indexed from 0 upwards." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCR_MAP_j_3" acronym="SLIMBUS_DCR_MAP_j_3" offset="0x2F0" width="32" description="Associates a device and port to the RX data agent. Write to field FL_CONTROL[8] VALIDATE_DCMAP to validate changes.">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="PN" width="6" begin="13" end="8" resetval="0x00" description="Port Number (PN), identifies the data channel's port for the device. Shall be unique within a device. Note that a half-duplex (bidirectional) port has 2 data agents with the same PN, 1 TX + 1 Rx." range="" rwaccess="RW"/>
    <bitfield id="DI" width="8" begin="7" end="0" resetval="0x00" description="Index (DI) of the device this data agent belongs to. Devices are hard-indexed from 0 upwards." range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCR_CONFIG1_j_0" acronym="SLIMBUS_DCR_CONFIG1_j_0" offset="0x294" width="32" description="RX data agent configuration, applied at the next reconfiguration boundary">
    <bitfield id="ENABLE" width="1" begin="31" end="31" resetval="0" description="Data agent enabling control. Auto-cleared upon frame or superframe sync loss." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENABLE_0" description="Data agent is disabled"/>
      <bitenum value="1" id="1" token="ENABLE_1" description="Data agent is enabled"/>
    </bitfield>
    <bitfield id="CTS_FORCE_VALUE" width="1" begin="30" end="30" resetval="0" description="Value to force the CTS TAG bit value when in asynchronous TP and secondary channel owner (that is, receiver) and CTS is forced (CTS_force_en=1) Don't care in all other cases. Warning: forcing CTS=1 can result in a FIFO overflow." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CTS_FORCE_VALUE_0" description="Local sink signals TAG.CTS=0 that is, it cannot receive any data (and remote source shall not transmit any)"/>
      <bitenum value="1" id="1" token="CTS_FORCE_VALUE_1" description="Local sink signals TAG.CTS=1 that is, it can receive data (and remote source can transmit some)"/>
    </bitfield>
    <bitfield id="CTS_FORCE_EN" width="1" begin="29" end="29" resetval="0" description="Forces the CTS TAG bit value when in an asynchronous TP and secondary owner (that is, receiver) of the channel. Don't care in other cases." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CTS_FORCE_EN_0" description="CTS bit generated according to RX FIFO level"/>
      <bitenum value="1" id="1" token="CTS_FORCE_EN_1" description="CTS bit forced to CTS_force_value"/>
    </bitfield>
    <bitfield id="DT_LPCM" width="1" begin="28" end="28" resetval="0" description="OSAM-to-unsigned decoding enable for Data Type (DT) = LPCM audio (0x1)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DT_LPCM_0" description="DT!=0x1: decoding disabled"/>
      <bitenum value="1" id="1" token="DT_LPCM_1" description="DT=0x1: decoding enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="8" begin="27" end="20" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="AF" width="4" begin="19" end="16" resetval="0x0" description="Auxillairy Format (AF) used in segment word size calculation. Non-zero values not supported in extended asynchronous TPs." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="AF_15" description="User-defined 8-bit AUX (2 AUX slot per segment)"/>
      <bitenum value="0" id="0" token="AF_0" description="No AUX information (0 AUX slots per segment)"/>
      <bitenum value="1" id="1" token="AF_1" description="ZCUV for tunneling IEC60958 (1 AUX slot per segment)"/>
      <bitenum value="11" id="11" token="AF_11" description="User-defined 4-bit AUX (1 AUX slot per segment)"/>
    </bitfield>
    <bitfield id="CL" width="1" begin="15" end="15" resetval="0" description="Channel Link (CL) enable: Pairing up of current channel with previous one (that is, channel index below) Channel index 0 should have CL=0, since there is no 'previous' channel in that case. TP and segment interval (encoded in SD) must be equal between the linked channels." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CL_0" description="Current channel independent from previous one."/>
      <bitenum value="1" id="1" token="CL_1" description="Current channel paired up with previous one."/>
    </bitfield>
    <bitfield id="DL" width="5" begin="14" end="10" resetval="0x00" description="Segment Data Length (DL), in 4-bit slots (except when 0). AUX + DATA length shall fit in a segment word, that is, 1 to 32 bits. In extended async TPs, sets segment word size (0 and odd values illegal) instead." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="DL_6" description="6 slots (24 bits)"/>
      <bitenum value="1" id="1" token="DL_1" description="1 slot (4 bits)"/>
      <bitenum value="7" id="7" token="DL_7" description="7 slots (28 bits), requiring at most 1 AUX slot to fit in max-size 32-bit segment word"/>
      <bitenum value="0" id="0" token="DL_0" description="Length not indicated: Segment slots that are not TAG or AUX are DATA (that is, no unused slot)"/>
      <bitenum value="2" id="2" token="DL_2" description="2 slots (8 bits)"/>
      <bitenum value="8" id="8" token="DL_8" description="8 slots (32 bits), requiring zero AUX slot, to fit in a max-size 32-bit segment word"/>
      <bitenum value="4" id="4" token="DL_4" description="4 slots (16 bits)"/>
      <bitenum value="5" id="5" token="DL_5" description="5 slots (20 bits)"/>
      <bitenum value="3" id="3" token="DL_3" description="3 slots (12 bits)"/>
    </bitfield>
    <bitfield id="SL" width="5" begin="9" end="5" resetval="0x00" description="total Segment Length (SL), in 4-bit slots. SL &amp;amp;gt;= TAG length + AUX length + DATA length" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SL_0" description="Reseved value"/>
    </bitfield>
    <bitfield id="TP_QUALIFIER" width="1" begin="4" end="4" resetval="0" description="Qualifier for plain/extended half-duplex asynchronous TPs (owner ID). Unused and don't care for other TPs" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TP_QUALIFIER_0" description="1/2 duplex TPs: Local device is primary channel owner, uses T1 token"/>
      <bitenum value="1" id="1" token="TP_QUALIFIER_1" description="1/2 duplex TPs: Local device is secondary channel owner, uses T2 token"/>
    </bitfield>
    <bitfield id="TP" width="4" begin="3" end="0" resetval="0x0" description="Transport Protocol (TP) Determines also the TAG length (from 0 to 2 slots)." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="TP_6" description="Extended asynchronous-half-duplex (unicast, 2-slot TAG)"/>
      <bitenum value="1" id="1" token="TP_1" description="Pushed (multicast, 1-slot TAG)"/>
      <bitenum value="7" id="7" token="TP_7" description="Extended asynchronous-simplex (unicast, 2-slot TAG)"/>
      <bitenum value="0" id="0" token="TP_0" description="Isochronous (multicast, no TAG)"/>
      <bitenum value="2" id="2" token="TP_2" description="Pulled (unicast, 1-slot TAG)"/>
      <bitenum value="4" id="4" token="TP_4" description="Asynchronous-simplex (unicast, 1-slot TAG)"/>
      <bitenum value="5" id="5" token="TP_5" description="Asynchronous-half-duplex (unicast, 1-slot TAG)"/>
      <bitenum value="15" id="15" token="TP_15" description="User-defined protocol 2 NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="3" id="3" token="TP_3" description="Locked (multicast, no TAG) NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="14" id="14" token="TP_14" description="User-defined protocol 1 NOT SUPPORTED, RESERVED VALUE"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_CONFIG1_j_1" acronym="SLIMBUS_DCR_CONFIG1_j_1" offset="0x2B4" width="32" description="RX data agent configuration, applied at the next reconfiguration boundary">
    <bitfield id="ENABLE" width="1" begin="31" end="31" resetval="0" description="Data agent enabling control. Auto-cleared upon frame or superframe sync loss." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENABLE_0" description="Data agent is disabled"/>
      <bitenum value="1" id="1" token="ENABLE_1" description="Data agent is enabled"/>
    </bitfield>
    <bitfield id="CTS_FORCE_VALUE" width="1" begin="30" end="30" resetval="0" description="Value to force the CTS TAG bit value when in asynchronous TP and secondary channel owner (that is, receiver) and CTS is forced (CTS_force_en=1) Don't care in all other cases. Warning: forcing CTS=1 can result in a FIFO overflow." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CTS_FORCE_VALUE_0" description="Local sink signals TAG.CTS=0 that is, it cannot receive any data (and remote source shall not transmit any)"/>
      <bitenum value="1" id="1" token="CTS_FORCE_VALUE_1" description="Local sink signals TAG.CTS=1 that is, it can receive data (and remote source can transmit some)"/>
    </bitfield>
    <bitfield id="CTS_FORCE_EN" width="1" begin="29" end="29" resetval="0" description="Forces the CTS TAG bit value when in an asynchronous TP and secondary owner (that is, receiver) of the channel. Don't care in other cases." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CTS_FORCE_EN_0" description="CTS bit generated according to RX FIFO level"/>
      <bitenum value="1" id="1" token="CTS_FORCE_EN_1" description="CTS bit forced to CTS_force_value"/>
    </bitfield>
    <bitfield id="DT_LPCM" width="1" begin="28" end="28" resetval="0" description="OSAM-to-unsigned decoding enable for Data Type (DT) = LPCM audio (0x1)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DT_LPCM_0" description="DT!=0x1: decoding disabled"/>
      <bitenum value="1" id="1" token="DT_LPCM_1" description="DT=0x1: decoding enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="8" begin="27" end="20" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="AF" width="4" begin="19" end="16" resetval="0x0" description="Auxillairy Format (AF) used in segment word size calculation. Non-zero values not supported in extended asynchronous TPs." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="AF_15" description="User-defined 8-bit AUX (2 AUX slot per segment)"/>
      <bitenum value="0" id="0" token="AF_0" description="No AUX information (0 AUX slots per segment)"/>
      <bitenum value="1" id="1" token="AF_1" description="ZCUV for tunneling IEC60958 (1 AUX slot per segment)"/>
      <bitenum value="11" id="11" token="AF_11" description="User-defined 4-bit AUX (1 AUX slot per segment)"/>
    </bitfield>
    <bitfield id="CL" width="1" begin="15" end="15" resetval="0" description="Channel Link (CL) enable: Pairing up of current channel with previous one (that is, channel index below) Channel index 0 should have CL=0, since there is no 'previous' channel in that case. TP and segment interval (encoded in SD) must be equal between the linked channels." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CL_0" description="Current channel independent from previous one."/>
      <bitenum value="1" id="1" token="CL_1" description="Current channel paired up with previous one."/>
    </bitfield>
    <bitfield id="DL" width="5" begin="14" end="10" resetval="0x00" description="Segment Data Length (DL), in 4-bit slots (except when 0). AUX + DATA length shall fit in a segment word, that is, 1 to 32 bits. In extended async TPs, sets segment word size (0 and odd values illegal) instead." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="DL_6" description="6 slots (24 bits)"/>
      <bitenum value="1" id="1" token="DL_1" description="1 slot (4 bits)"/>
      <bitenum value="7" id="7" token="DL_7" description="7 slots (28 bits), requiring at most 1 AUX slot to fit in max-size 32-bit segment word"/>
      <bitenum value="0" id="0" token="DL_0" description="Length not indicated: Segment slots that are not TAG or AUX are DATA (that is, no unused slot)"/>
      <bitenum value="2" id="2" token="DL_2" description="2 slots (8 bits)"/>
      <bitenum value="8" id="8" token="DL_8" description="8 slots (32 bits), requiring zero AUX slot, to fit in a max-size 32-bit segment word"/>
      <bitenum value="4" id="4" token="DL_4" description="4 slots (16 bits)"/>
      <bitenum value="5" id="5" token="DL_5" description="5 slots (20 bits)"/>
      <bitenum value="3" id="3" token="DL_3" description="3 slots (12 bits)"/>
    </bitfield>
    <bitfield id="SL" width="5" begin="9" end="5" resetval="0x00" description="total Segment Length (SL), in 4-bit slots. SL &amp;amp;gt;= TAG length + AUX length + DATA length" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SL_0" description="Reseved value"/>
    </bitfield>
    <bitfield id="TP_QUALIFIER" width="1" begin="4" end="4" resetval="0" description="Qualifier for plain/extended half-duplex asynchronous TPs (owner ID). Unused and don't care for other TPs" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TP_QUALIFIER_0" description="1/2 duplex TPs: Local device is primary channel owner, uses T1 token"/>
      <bitenum value="1" id="1" token="TP_QUALIFIER_1" description="1/2 duplex TPs: Local device is secondary channel owner, uses T2 token"/>
    </bitfield>
    <bitfield id="TP" width="4" begin="3" end="0" resetval="0x0" description="Transport Protocol (TP) Determines also the TAG length (from 0 to 2 slots)." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="TP_6" description="Extended asynchronous-half-duplex (unicast, 2-slot TAG)"/>
      <bitenum value="1" id="1" token="TP_1" description="Pushed (multicast, 1-slot TAG)"/>
      <bitenum value="7" id="7" token="TP_7" description="Extended asynchronous-simplex (unicast, 2-slot TAG)"/>
      <bitenum value="0" id="0" token="TP_0" description="Isochronous (multicast, no TAG)"/>
      <bitenum value="2" id="2" token="TP_2" description="Pulled (unicast, 1-slot TAG)"/>
      <bitenum value="4" id="4" token="TP_4" description="Asynchronous-simplex (unicast, 1-slot TAG)"/>
      <bitenum value="5" id="5" token="TP_5" description="Asynchronous-half-duplex (unicast, 1-slot TAG)"/>
      <bitenum value="15" id="15" token="TP_15" description="User-defined protocol 2 NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="3" id="3" token="TP_3" description="Locked (multicast, no TAG) NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="14" id="14" token="TP_14" description="User-defined protocol 1 NOT SUPPORTED, RESERVED VALUE"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_CONFIG1_j_2" acronym="SLIMBUS_DCR_CONFIG1_j_2" offset="0x2D4" width="32" description="RX data agent configuration, applied at the next reconfiguration boundary">
    <bitfield id="ENABLE" width="1" begin="31" end="31" resetval="0" description="Data agent enabling control. Auto-cleared upon frame or superframe sync loss." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENABLE_0" description="Data agent is disabled"/>
      <bitenum value="1" id="1" token="ENABLE_1" description="Data agent is enabled"/>
    </bitfield>
    <bitfield id="CTS_FORCE_VALUE" width="1" begin="30" end="30" resetval="0" description="Value to force the CTS TAG bit value when in asynchronous TP and secondary channel owner (that is, receiver) and CTS is forced (CTS_force_en=1) Don't care in all other cases. Warning: forcing CTS=1 can result in a FIFO overflow." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CTS_FORCE_VALUE_0" description="Local sink signals TAG.CTS=0 that is, it cannot receive any data (and remote source shall not transmit any)"/>
      <bitenum value="1" id="1" token="CTS_FORCE_VALUE_1" description="Local sink signals TAG.CTS=1 that is, it can receive data (and remote source can transmit some)"/>
    </bitfield>
    <bitfield id="CTS_FORCE_EN" width="1" begin="29" end="29" resetval="0" description="Forces the CTS TAG bit value when in an asynchronous TP and secondary owner (that is, receiver) of the channel. Don't care in other cases." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CTS_FORCE_EN_0" description="CTS bit generated according to RX FIFO level"/>
      <bitenum value="1" id="1" token="CTS_FORCE_EN_1" description="CTS bit forced to CTS_force_value"/>
    </bitfield>
    <bitfield id="DT_LPCM" width="1" begin="28" end="28" resetval="0" description="OSAM-to-unsigned decoding enable for Data Type (DT) = LPCM audio (0x1)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DT_LPCM_0" description="DT!=0x1: decoding disabled"/>
      <bitenum value="1" id="1" token="DT_LPCM_1" description="DT=0x1: decoding enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="8" begin="27" end="20" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="AF" width="4" begin="19" end="16" resetval="0x0" description="Auxillairy Format (AF) used in segment word size calculation. Non-zero values not supported in extended asynchronous TPs." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="AF_15" description="User-defined 8-bit AUX (2 AUX slot per segment)"/>
      <bitenum value="0" id="0" token="AF_0" description="No AUX information (0 AUX slots per segment)"/>
      <bitenum value="1" id="1" token="AF_1" description="ZCUV for tunneling IEC60958 (1 AUX slot per segment)"/>
      <bitenum value="11" id="11" token="AF_11" description="User-defined 4-bit AUX (1 AUX slot per segment)"/>
    </bitfield>
    <bitfield id="CL" width="1" begin="15" end="15" resetval="0" description="Channel Link (CL) enable: Pairing up of current channel with previous one (that is, channel index below) Channel index 0 should have CL=0, since there is no 'previous' channel in that case. TP and segment interval (encoded in SD) must be equal between the linked channels." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CL_0" description="Current channel independent from previous one."/>
      <bitenum value="1" id="1" token="CL_1" description="Current channel paired up with previous one."/>
    </bitfield>
    <bitfield id="DL" width="5" begin="14" end="10" resetval="0x00" description="Segment Data Length (DL), in 4-bit slots (except when 0). AUX + DATA length shall fit in a segment word, that is, 1 to 32 bits. In extended async TPs, sets segment word size (0 and odd values illegal) instead." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="DL_6" description="6 slots (24 bits)"/>
      <bitenum value="1" id="1" token="DL_1" description="1 slot (4 bits)"/>
      <bitenum value="7" id="7" token="DL_7" description="7 slots (28 bits), requiring at most 1 AUX slot to fit in max-size 32-bit segment word"/>
      <bitenum value="0" id="0" token="DL_0" description="Length not indicated: Segment slots that are not TAG or AUX are DATA (that is, no unused slot)"/>
      <bitenum value="2" id="2" token="DL_2" description="2 slots (8 bits)"/>
      <bitenum value="8" id="8" token="DL_8" description="8 slots (32 bits), requiring zero AUX slot, to fit in a max-size 32-bit segment word"/>
      <bitenum value="4" id="4" token="DL_4" description="4 slots (16 bits)"/>
      <bitenum value="5" id="5" token="DL_5" description="5 slots (20 bits)"/>
      <bitenum value="3" id="3" token="DL_3" description="3 slots (12 bits)"/>
    </bitfield>
    <bitfield id="SL" width="5" begin="9" end="5" resetval="0x00" description="total Segment Length (SL), in 4-bit slots. SL &amp;amp;gt;= TAG length + AUX length + DATA length" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SL_0" description="Reseved value"/>
    </bitfield>
    <bitfield id="TP_QUALIFIER" width="1" begin="4" end="4" resetval="0" description="Qualifier for plain/extended half-duplex asynchronous TPs (owner ID). Unused and don't care for other TPs" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TP_QUALIFIER_0" description="1/2 duplex TPs: Local device is primary channel owner, uses T1 token"/>
      <bitenum value="1" id="1" token="TP_QUALIFIER_1" description="1/2 duplex TPs: Local device is secondary channel owner, uses T2 token"/>
    </bitfield>
    <bitfield id="TP" width="4" begin="3" end="0" resetval="0x0" description="Transport Protocol (TP) Determines also the TAG length (from 0 to 2 slots)." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="TP_6" description="Extended asynchronous-half-duplex (unicast, 2-slot TAG)"/>
      <bitenum value="1" id="1" token="TP_1" description="Pushed (multicast, 1-slot TAG)"/>
      <bitenum value="7" id="7" token="TP_7" description="Extended asynchronous-simplex (unicast, 2-slot TAG)"/>
      <bitenum value="0" id="0" token="TP_0" description="Isochronous (multicast, no TAG)"/>
      <bitenum value="2" id="2" token="TP_2" description="Pulled (unicast, 1-slot TAG)"/>
      <bitenum value="4" id="4" token="TP_4" description="Asynchronous-simplex (unicast, 1-slot TAG)"/>
      <bitenum value="5" id="5" token="TP_5" description="Asynchronous-half-duplex (unicast, 1-slot TAG)"/>
      <bitenum value="15" id="15" token="TP_15" description="User-defined protocol 2 NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="3" id="3" token="TP_3" description="Locked (multicast, no TAG) NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="14" id="14" token="TP_14" description="User-defined protocol 1 NOT SUPPORTED, RESERVED VALUE"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_CONFIG1_j_3" acronym="SLIMBUS_DCR_CONFIG1_j_3" offset="0x2F4" width="32" description="RX data agent configuration, applied at the next reconfiguration boundary">
    <bitfield id="ENABLE" width="1" begin="31" end="31" resetval="0" description="Data agent enabling control. Auto-cleared upon frame or superframe sync loss." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENABLE_0" description="Data agent is disabled"/>
      <bitenum value="1" id="1" token="ENABLE_1" description="Data agent is enabled"/>
    </bitfield>
    <bitfield id="CTS_FORCE_VALUE" width="1" begin="30" end="30" resetval="0" description="Value to force the CTS TAG bit value when in asynchronous TP and secondary channel owner (that is, receiver) and CTS is forced (CTS_force_en=1) Don't care in all other cases. Warning: forcing CTS=1 can result in a FIFO overflow." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CTS_FORCE_VALUE_0" description="Local sink signals TAG.CTS=0 that is, it cannot receive any data (and remote source shall not transmit any)"/>
      <bitenum value="1" id="1" token="CTS_FORCE_VALUE_1" description="Local sink signals TAG.CTS=1 that is, it can receive data (and remote source can transmit some)"/>
    </bitfield>
    <bitfield id="CTS_FORCE_EN" width="1" begin="29" end="29" resetval="0" description="Forces the CTS TAG bit value when in an asynchronous TP and secondary owner (that is, receiver) of the channel. Don't care in other cases." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CTS_FORCE_EN_0" description="CTS bit generated according to RX FIFO level"/>
      <bitenum value="1" id="1" token="CTS_FORCE_EN_1" description="CTS bit forced to CTS_force_value"/>
    </bitfield>
    <bitfield id="DT_LPCM" width="1" begin="28" end="28" resetval="0" description="OSAM-to-unsigned decoding enable for Data Type (DT) = LPCM audio (0x1)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DT_LPCM_0" description="DT!=0x1: decoding disabled"/>
      <bitenum value="1" id="1" token="DT_LPCM_1" description="DT=0x1: decoding enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="8" begin="27" end="20" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="AF" width="4" begin="19" end="16" resetval="0x0" description="Auxillairy Format (AF) used in segment word size calculation. Non-zero values not supported in extended asynchronous TPs." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="AF_15" description="User-defined 8-bit AUX (2 AUX slot per segment)"/>
      <bitenum value="0" id="0" token="AF_0" description="No AUX information (0 AUX slots per segment)"/>
      <bitenum value="1" id="1" token="AF_1" description="ZCUV for tunneling IEC60958 (1 AUX slot per segment)"/>
      <bitenum value="11" id="11" token="AF_11" description="User-defined 4-bit AUX (1 AUX slot per segment)"/>
    </bitfield>
    <bitfield id="CL" width="1" begin="15" end="15" resetval="0" description="Channel Link (CL) enable: Pairing up of current channel with previous one (that is, channel index below) Channel index 0 should have CL=0, since there is no 'previous' channel in that case. TP and segment interval (encoded in SD) must be equal between the linked channels." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CL_0" description="Current channel independent from previous one."/>
      <bitenum value="1" id="1" token="CL_1" description="Current channel paired up with previous one."/>
    </bitfield>
    <bitfield id="DL" width="5" begin="14" end="10" resetval="0x00" description="Segment Data Length (DL), in 4-bit slots (except when 0). AUX + DATA length shall fit in a segment word, that is, 1 to 32 bits. In extended async TPs, sets segment word size (0 and odd values illegal) instead." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="DL_6" description="6 slots (24 bits)"/>
      <bitenum value="1" id="1" token="DL_1" description="1 slot (4 bits)"/>
      <bitenum value="7" id="7" token="DL_7" description="7 slots (28 bits), requiring at most 1 AUX slot to fit in max-size 32-bit segment word"/>
      <bitenum value="0" id="0" token="DL_0" description="Length not indicated: Segment slots that are not TAG or AUX are DATA (that is, no unused slot)"/>
      <bitenum value="2" id="2" token="DL_2" description="2 slots (8 bits)"/>
      <bitenum value="8" id="8" token="DL_8" description="8 slots (32 bits), requiring zero AUX slot, to fit in a max-size 32-bit segment word"/>
      <bitenum value="4" id="4" token="DL_4" description="4 slots (16 bits)"/>
      <bitenum value="5" id="5" token="DL_5" description="5 slots (20 bits)"/>
      <bitenum value="3" id="3" token="DL_3" description="3 slots (12 bits)"/>
    </bitfield>
    <bitfield id="SL" width="5" begin="9" end="5" resetval="0x00" description="total Segment Length (SL), in 4-bit slots. SL &amp;amp;gt;= TAG length + AUX length + DATA length" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SL_0" description="Reseved value"/>
    </bitfield>
    <bitfield id="TP_QUALIFIER" width="1" begin="4" end="4" resetval="0" description="Qualifier for plain/extended half-duplex asynchronous TPs (owner ID). Unused and don't care for other TPs" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="TP_QUALIFIER_0" description="1/2 duplex TPs: Local device is primary channel owner, uses T1 token"/>
      <bitenum value="1" id="1" token="TP_QUALIFIER_1" description="1/2 duplex TPs: Local device is secondary channel owner, uses T2 token"/>
    </bitfield>
    <bitfield id="TP" width="4" begin="3" end="0" resetval="0x0" description="Transport Protocol (TP) Determines also the TAG length (from 0 to 2 slots)." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="TP_6" description="Extended asynchronous-half-duplex (unicast, 2-slot TAG)"/>
      <bitenum value="1" id="1" token="TP_1" description="Pushed (multicast, 1-slot TAG)"/>
      <bitenum value="7" id="7" token="TP_7" description="Extended asynchronous-simplex (unicast, 2-slot TAG)"/>
      <bitenum value="0" id="0" token="TP_0" description="Isochronous (multicast, no TAG)"/>
      <bitenum value="2" id="2" token="TP_2" description="Pulled (unicast, 1-slot TAG)"/>
      <bitenum value="4" id="4" token="TP_4" description="Asynchronous-simplex (unicast, 1-slot TAG)"/>
      <bitenum value="5" id="5" token="TP_5" description="Asynchronous-half-duplex (unicast, 1-slot TAG)"/>
      <bitenum value="15" id="15" token="TP_15" description="User-defined protocol 2 NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="3" id="3" token="TP_3" description="Locked (multicast, no TAG) NOT SUPPORTED, RESERVED VALUE"/>
      <bitenum value="14" id="14" token="TP_14" description="User-defined protocol 1 NOT SUPPORTED, RESERVED VALUE"/>
    </bitfield>
  </register>
  <register id="SLIMBUS_DCR_CONFIG2_j_0" acronym="SLIMBUS_DCR_CONFIG2_j_0" offset="0x298" width="32" description="RX data agent configuration (continued), applied at the next reconfiguration boundary">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="SD" width="12" begin="11" end="0" resetval="0x000" description="Segment Distribution" range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCR_CONFIG2_j_1" acronym="SLIMBUS_DCR_CONFIG2_j_1" offset="0x2B8" width="32" description="RX data agent configuration (continued), applied at the next reconfiguration boundary">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="SD" width="12" begin="11" end="0" resetval="0x000" description="Segment Distribution" range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCR_CONFIG2_j_2" acronym="SLIMBUS_DCR_CONFIG2_j_2" offset="0x2D8" width="32" description="RX data agent configuration (continued), applied at the next reconfiguration boundary">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="SD" width="12" begin="11" end="0" resetval="0x000" description="Segment Distribution" range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCR_CONFIG2_j_3" acronym="SLIMBUS_DCR_CONFIG2_j_3" offset="0x2F8" width="32" description="RX data agent configuration (continued), applied at the next reconfiguration boundary">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="SD" width="12" begin="11" end="0" resetval="0x000" description="Segment Distribution" range="" rwaccess="RW"/>
  </register>
  <register id="SLIMBUS_DCR_DATA_j_0" acronym="SLIMBUS_DCR_DATA_j_0" offset="0x29C" width="32" description="RX data agent DATA FIFO output. Writes have no effect on FIFO.">
    <bitfield id="DATA" width="32" begin="31" end="0" resetval="0x0000 0000" description="Data segment word, single-word or packed, LSB or MSB-aligned." range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DCR_DATA_j_1" acronym="SLIMBUS_DCR_DATA_j_1" offset="0x2BC" width="32" description="RX data agent DATA FIFO output. Writes have no effect on FIFO.">
    <bitfield id="DATA" width="32" begin="31" end="0" resetval="0x0000 0000" description="Data segment word, single-word or packed, LSB or MSB-aligned." range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DCR_DATA_j_2" acronym="SLIMBUS_DCR_DATA_j_2" offset="0x2DC" width="32" description="RX data agent DATA FIFO output. Writes have no effect on FIFO.">
    <bitfield id="DATA" width="32" begin="31" end="0" resetval="0x0000 0000" description="Data segment word, single-word or packed, LSB or MSB-aligned." range="" rwaccess="R"/>
  </register>
  <register id="SLIMBUS_DCR_DATA_j_3" acronym="SLIMBUS_DCR_DATA_j_3" offset="0x2FC" width="32" description="RX data agent DATA FIFO output. Writes have no effect on FIFO.">
    <bitfield id="DATA" width="32" begin="31" end="0" resetval="0x0000 0000" description="Data segment word, single-word or packed, LSB or MSB-aligned." range="" rwaccess="R"/>
  </register>
</module>
