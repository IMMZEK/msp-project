<module name="GPU_WRAPPER" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="REVISION" acronym="REVISION" offset="0x0" width="32" description="Revision register">
    <bitfield id="REVISIONID" width="32" begin="31" end="0" resetval="See" description="Revision value" range="" rwaccess="R"/>
  </register>
  <register id="HWINFO" acronym="HWINFO" offset="0x4" width="32" description="Hardware implementation information">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="MEM_BUS_WIDTH" width="1" begin="2" end="2" resetval="1" description="Memory bus width Read 0x0: 64 bits Read 0x1: 128 bits" range="" rwaccess="R"/>
    <bitfield id="SYS_BUS_WIDTH" width="2" begin="1" end="0" resetval="0x1" description="System bus width Read 0x0: 32 bits Read 0x1: 64 bits Read 0x2: 128 bits Read 0x3: Reserved" range="" rwaccess="R"/>
  </register>
  <register id="SYSCONFIG" acronym="SYSCONFIG" offset="0x10" width="32" description="System configuration register">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="STANDBY_MODE" width="2" begin="5" end="4" resetval="0x2" description="Clock standby mode: 0x0: Force-standby 0x1: No-standby 0x2: Smart-standby 0x3: Reserved" range="" rwaccess="RW"/>
    <bitfield id="IDLE_MODE" width="2" begin="3" end="2" resetval="0x2" description="Clock idle mode: 0x0: Force-standby 0x1: No-standby 0x2: Smart-standby 0x3: Reserved" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="1" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="IRQSTATUS_RAW_0" acronym="IRQSTATUS_RAW_0" offset="0x24" width="32" description="Raw IRQ 0 status">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="INIT_MINTERRUPT_RAW" width="1" begin="0" end="0" resetval="0" description="Interrupt 0 raw event: Write 0x0: No action Write 0x1: Set event (used for debug) Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
  </register>
  <register id="IRQSTATUS_RAW_1" acronym="IRQSTATUS_RAW_1" offset="0x28" width="32" description="Raw IRQ 1 status. Slave port interrupt.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="TARGET_SINTERRUPT_RAW" width="1" begin="0" end="0" resetval="0" description="Interrupt 1 raw event: Write 0x0: No action Write 0x1: Set event (used for debug) Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
  </register>
  <register id="IRQSTATUS_RAW_2" acronym="IRQSTATUS_RAW_2" offset="0x2C" width="32" description="Raw IRQ 2 status. Core interrupt.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="THALIA_IRQ_RAW" width="1" begin="0" end="0" resetval="0" description="Interrupt 0 raw event: Write 0x0: No action Write 0x1: Set event (used for debug) Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
  </register>
  <register id="IRQSTATUS_0" acronym="IRQSTATUS_0" offset="0x30" width="32" description="Interrupt 0 status event. Master port interrupt.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="INIT_MINTERRUPT_STATUS" width="1" begin="0" end="0" resetval="0" description="Interrupt 0 raw event: Write 0x0: No action Write 0x1: Clear event Read 0x0: No event pending Read 0x1: Event pending and interrupt enabled" range="" rwaccess="RW"/>
  </register>
  <register id="IRQSTATUS_1" acronym="IRQSTATUS_1" offset="0x34" width="32" description="Interrupt 1 - slave port status event">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="TARGET_SINTERRUPT_STATUS" width="1" begin="0" end="0" resetval="0" description="Interrupt 0 raw event: Write 0x0: No action Write 0x1: Clear event Read 0x0: No event pending Read 0x1: Event pending and interrupt enabled" range="" rwaccess="RW"/>
  </register>
  <register id="IRQSTATUS_2" acronym="IRQSTATUS_2" offset="0x38" width="32" description="Interrupt 2 - Core status event">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="THALIA_IRQ_STATUS" width="1" begin="0" end="0" resetval="0" description="Interrupt 0 raw event: Write 0x0: No action Write 0x1: Clear event Read 0x0: No event pending Read 0x1: Event pending and interrupt enabled" range="" rwaccess="RW"/>
  </register>
  <register id="IRQENABLE_SET_0" acronym="IRQENABLE_SET_0" offset="0x3C" width="32" description="Enable Interrupt 0 - Master port.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="INIT_MINTERRUPT_ENABLE" width="1" begin="0" end="0" resetval="0" description="To enable interrupt: Write 0x0: No action Write 0x1: Enable interrupt Read 0x0: Interrupt is disabled Read 0x1: Interrupt is enabled" range="" rwaccess="RW"/>
  </register>
  <register id="IRQENABLE_SET_1" acronym="IRQENABLE_SET_1" offset="0x40" width="32" description="Enable Interrupt 1. Core interrupt.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="TARGET_SINTERRUPT_ENABLE" width="1" begin="0" end="0" resetval="0" description="To enable interrupt: Write 0x0: No action Write 0x1: Enable interrupt Read 0x0: Interrupt is disabled Read 0x1: Interrupt is enabled" range="" rwaccess="RW"/>
  </register>
  <register id="IRQENABLE_SET_2" acronym="IRQENABLE_SET_2" offset="0x44" width="32" description="Enable Interrupt 2. Core interrupt.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="THALIA_IRQ_ENABLE" width="1" begin="0" end="0" resetval="0" description="To enable interrupt: Write 0x0: No action Write 0x1: Enable interrupt Read 0x0: Interrupt is disabled Read 0x1: Interrupt is enabled" range="" rwaccess="RW"/>
  </register>
  <register id="IRQENABLE_CLR_0" acronym="IRQENABLE_CLR_0" offset="0x48" width="32" description="Disable Interrupt 0 - Master port.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="INIT_MINTERRUPT_DISABLE" width="1" begin="0" end="0" resetval="0" description="To disable interrupt: Write 0x0: No action Write 0x1: Disable interrupt Read 0x0: Interrupt is disabled Read 0x1: Interrupt is enabled" range="" rwaccess="RW"/>
  </register>
  <register id="IRQENABLE_CLR_1" acronym="IRQENABLE_CLR_1" offset="0x4C" width="32" description="Disable Interrupt 2 - Core interrupt.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="TARGET_SINTERRUPT_DISABLE" width="1" begin="0" end="0" resetval="0" description="To disable interrupt: Write 0x0: No action Write 0x1: Disable interrupt Read 0x0: Interrupt is disabled Read 0x1: Interrupt is enabled" range="" rwaccess="RW"/>
  </register>
  <register id="IRQENABLE_CLR_2" acronym="IRQENABLE_CLR_2" offset="0x50" width="32" description="Disable Interrupt 2 - Core interrupt.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="THALIA_IRQ_DISABLE" width="1" begin="0" end="0" resetval="0" description="To disable interrupt: Write 0x0: No action Write 0x1: Disable interrupt Read 0x0: Interrupt is disabled Read 0x1: Interrupt is enabled" range="" rwaccess="RW"/>
  </register>
  <register id="PAGE_CONFIG" acronym="PAGE_CONFIG" offset="0x100" width="32" description="Configure memory pages.">
    <bitfield id="THALIA_INT_BYPASS" width="1" begin="31" end="31" resetval="0" description="Bypass OCP IPG interrupt logic 0x0: Do not bypass 0x1 Bypass core interrupt to I/O pin; that is, disregard the interrupt enable setting in the IPG register." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="26" begin="30" end="5" resetval="0x000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="OCP_PAGE_SIZE" width="2" begin="4" end="3" resetval="0x2" description="Defines the page size on OCP memory interface: 0x0: 4 KiB 0x1: 2 KiB 0x2: 1 KiB 0x3: 512B" range="" rwaccess="RW"/>
    <bitfield id="MEM_PAGE_CHECK_EN" width="1" begin="2" end="2" resetval="1" description="To enable page boundary checking: 0x0: Disabled 0x1: Enabled" range="" rwaccess="RW"/>
    <bitfield id="MEM_PAGE_SIZE" width="2" begin="1" end="0" resetval="0x0" description="Defines the page size on internal memory interface: 0x0: 4 KiB 0x1: 2 KiB 0x2: 1 KiB 0x3: 512B" range="" rwaccess="RW"/>
  </register>
  <register id="INTERRUPT_EVENT" acronym="INTERRUPT_EVENT" offset="0x104" width="32" description="Interrupt events">
    <bitfield id="RESERVED" width="13" begin="31" end="19" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="TARGET_INVALID_OCP_CMD" width="1" begin="18" end="18" resetval="0" description="Invalid command from OCP: Write 0x0: Clear the event Write 0x1: Set the event and interrupt if enabled (debug only) Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="TARGET_CMD_FIFO_FULL" width="1" begin="17" end="17" resetval="0" description="Command FIFO full: Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="TARGET_RESP_FIFO_FULL" width="1" begin="16" end="16" resetval="0" description="Response FIFO full: Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="INT_MEM_REQ_FIFO_OVERRUN_1" width="1" begin="13" end="13" resetval="0" description="Memory request FIFO overrun: Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="INIT_READ_TAG_FIFO_OVERRUN_1" width="1" begin="12" end="12" resetval="0" description="Read tag FIFO overrun: Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="INIT_PAGE_CROSS_ERROR_1" width="1" begin="11" end="11" resetval="0" description="Memory page had been crossed during a burst: Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="INIT_RESP_ERROR_1" width="1" begin="10" end="10" resetval="0" description="Receiving error response: Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="INIT_RESP_UNUSED_TAG_1" width="1" begin="9" end="9" resetval="0" description="Receiving response on an unused OCP TAG: Write 0x0: Clear the event Write 0x1: Set the event and interrupt if enabled (debug only) Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="INIT_RESP_UNEXPECTED_1" width="1" begin="8" end="8" resetval="0" description="Receiving response when not expected: Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="INIT_MEM_REQ_FIFO_OVERRUN_0" width="1" begin="5" end="5" resetval="0" description="Memory request FIFO overrun; Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="INIT_READ_TAG_FIFO_OVERRUN_0" width="1" begin="4" end="4" resetval="0" description="Read tag FIFO overrun: Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="INIT_PAGE_CROSS_ERROR_0" width="1" begin="3" end="3" resetval="0" description="Memory page had been crossed during a burst. Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="INIT_RESP_ERROR_0" width="1" begin="2" end="2" resetval="0" description="Receiving error response: Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="INIT_RESP_UNUSED_TAG_0" width="1" begin="1" end="1" resetval="0" description="Receiving response on an unused OCP TAG: Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
    <bitfield id="INIT_RESP_UNEXPECTED_0" width="1" begin="0" end="0" resetval="0" description="Receiving response when not expected: Write 0x0: Clear the event. Write 0x1: Set the event and interrupt if enabled (debug only). Read 0x0: No event pending Read 0x1: Event pending" range="" rwaccess="RW"/>
  </register>
  <register id="DEBUG_CONFIG" acronym="DEBUG_CONFIG" offset="0x108" width="32" description="Configuration of debug modes">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="SELECT_INT_IDLE" width="1" begin="5" end="5" resetval="0" description="To select which idle the disconnect protocol should act on: 0x0: Whole SGX idle 0x1: OCP initiator idle" range="" rwaccess="RW"/>
    <bitfield id="FORCE_PASS_DATA" width="1" begin="4" end="4" resetval="0" description="Forces the initiator to pass data independent of disconnect protocol: 0x0: Do not force, normal operation 0x1: Never fence request to OCP" range="" rwaccess="RW"/>
    <bitfield id="FORCE_INIT_IDLE" width="2" begin="3" end="2" resetval="0x0" description="Forces initiator idle: 0x0, 0x3: Do not force, normal operation 0x1: Always idle 0x2: Never idle" range="" rwaccess="RW"/>
    <bitfield id="FORCE_TARGET_IDLE" width="2" begin="1" end="0" resetval="0x0" description="Forces target idle: 0x0, 0x3: Do not force, normal operation 0x1: Always idle 0x2: Never idle" range="" rwaccess="RW"/>
  </register>
  <register id="DEBUG_STATUS_0" acronym="DEBUG_STATUS_0" offset="0x10C" width="32" description="Port0 debug status register">
    <bitfield id="CMD_DEBUG_STATE" width="1" begin="31" end="31" resetval="0" description="Target command state-machine: 0x0: IDLE 0x1: Accept command" range="" rwaccess="R"/>
    <bitfield id="CMD_RESP_DEBUG_STATE" width="1" begin="30" end="30" resetval="0" description="Target response state-machine: 0x0: Send accept 0x1: Wait accept" range="" rwaccess="R"/>
    <bitfield id="TARGET_IDLE" width="1" begin="29" end="29" resetval="0" description="Target idle" range="" rwaccess="R"/>
    <bitfield id="RESP_FIFO_FULL" width="1" begin="28" end="28" resetval="0" description="Target response FIFO full" range="" rwaccess="R"/>
    <bitfield id="CMD_FIFO_FULL" width="1" begin="27" end="27" resetval="0" description="Target command FIFO full" range="" rwaccess="R"/>
    <bitfield id="RESP_ERROR" width="1" begin="26" end="26" resetval="0" description="Respond to OCP with error, which could be caused by either address misalignment or invalid byte enable." range="" rwaccess="R"/>
    <bitfield id="WHICH_TARGET_REGISTER" width="5" begin="25" end="21" resetval="0x00" description="Indicates which OCP target registers to read" range="" rwaccess="R"/>
    <bitfield id="TARGET_CMD_OUT" width="3" begin="20" end="18" resetval="0x0" description="Command received from OCP: 0x0: CMD_WRSYS 0x1: CMD_RDSYS 0x2: CMD_WR_ERROR 0x3: CMD_RD_ERROR 0x4: CMD_CHK_WRADDR_PAGE (not used) 0x5: CMD_CHK_RDADDR_PAGE (not used) 0x6: CMD_TARGET_REG_WRITE 0x7: CMD_TARGET_REG_READ" range="" rwaccess="R"/>
    <bitfield id="INIT_MSTANDBY" width="1" begin="17" end="17" resetval="0" description="Status of init_MStandby signal" range="" rwaccess="R"/>
    <bitfield id="INIT_MWAIT" width="1" begin="16" end="16" resetval="0" description="Status of init_MWait signal" range="" rwaccess="R"/>
    <bitfield id="INIT_MDISCREQ" width="1" begin="15" end="15" resetval="0" description="Request to disconnect from OCP interface" range="" rwaccess="R"/>
    <bitfield id="INIT_MDISCACK" width="2" begin="14" end="13" resetval="0x0" description="Disconnect status of the OCP interface: 0x0: FUNCT 0x1: TRANS 0x2: Reserved 0x3: IDLE" range="" rwaccess="R"/>
    <bitfield id="INIT_SCONNECT_2" width="1" begin="12" end="12" resetval="0" description="Defines whether to wait in M_WAIT state for MConnect FSM: 0x0: Skip M_WAIT state 0x1: Wait in M_WAIT state" range="" rwaccess="R"/>
    <bitfield id="INIT_SCONNECT_1" width="1" begin="11" end="11" resetval="0" description="Defines the busy-ness state of the slave: 0x0: Slave is drained 0x1: Slave is loaded" range="" rwaccess="R"/>
    <bitfield id="INIT_SCONNECT_0" width="1" begin="10" end="10" resetval="0" description="Disconnect from slave: 0x0: Disconnect request from slave 0x1: Connect request from slave" range="" rwaccess="R"/>
    <bitfield id="INIT_MCONNECT" width="2" begin="9" end="8" resetval="0x0" description="Initiator MConnect state: 0x0: M_OFF 0x1: M_WAIT 0x2: M_DISC 0x3: M_CON" range="" rwaccess="R"/>
    <bitfield id="TARGET_SIDLEACK" width="2" begin="7" end="6" resetval="0x0" description="Acknowledge the SIdleAck state-machine: 0x0: FUNCT 0x1: SLEEP TRANS 0x2: Reserved 0x3: IDLE" range="" rwaccess="R"/>
    <bitfield id="TARGET_SDISCACK" width="2" begin="5" end="4" resetval="0x0" description="Acknowledge the SDiscAck state-machine: 0x0: FUNCT 0x1: TRANS 0x2: Reserved 0x3: IDLE" range="" rwaccess="R"/>
    <bitfield id="TARGET_SIDLEREQ" width="1" begin="3" end="3" resetval="0" description="Request the target to go idle: 0 Do not go idle, or go active 1 Go idle" range="" rwaccess="R"/>
    <bitfield id="TARGET_SCONNECT" width="1" begin="2" end="2" resetval="0" description="Target SConnect bit 0 state: 0x0: Disconnect interface 0x1: Connect OCP interface" range="" rwaccess="R"/>
    <bitfield id="TARGET_MCONNECT" width="2" begin="1" end="0" resetval="0x0" description="Target MConnect state: 0x0: M_OFF 0x1: M_WAIT 0x2: M_DISC 0x3: M_CON" range="" rwaccess="R"/>
  </register>
  <register id="DEBUG_STATUS_1" acronym="DEBUG_STATUS_1" offset="0x110" width="32" description="Port1 debug status register">
    <bitfield id="CMD_DEBUG_STATE" width="1" begin="31" end="31" resetval="0" description="Target command state-machine: 0x0: IDLE 0x1: Accept command" range="" rwaccess="R"/>
    <bitfield id="CMD_RESP_DEBUG_STATE" width="1" begin="30" end="30" resetval="0" description="Target response state-machine: 0x0: Send accept 0x1: Wait accept" range="" rwaccess="R"/>
    <bitfield id="TARGET_IDLE" width="1" begin="29" end="29" resetval="0" description="Target idle" range="" rwaccess="R"/>
    <bitfield id="RESP_FIFO_FULL" width="1" begin="28" end="28" resetval="0" description="Target response FIFO full" range="" rwaccess="R"/>
    <bitfield id="CMD_FIFO_FULL" width="1" begin="27" end="27" resetval="0" description="Target command FIFO full" range="" rwaccess="R"/>
    <bitfield id="RESP_ERROR" width="1" begin="26" end="26" resetval="0" description="Respond to OCP with error, which could be caused by either address misalignment or invalid byte enable." range="" rwaccess="R"/>
    <bitfield id="WHICH_TARGET_REGISTER" width="5" begin="25" end="21" resetval="0x00" description="Indicates which OCP target registers to read" range="" rwaccess="R"/>
    <bitfield id="TARGET_CMD_OUT" width="3" begin="20" end="18" resetval="0x0" description="Command received from OCP: 0x0: CMD_WRSYS 0x1: CMD_RDSYS 0x2: CMD_WR_ERROR 0x3: CMD_RD_ERROR 0x4: CMD_CHK_WRADDR_PAGE (not used) 0x5: CMD_CHK_RDADDR_PAGE (not used) 0x6: CMD_TARGET_REG_WRITE 0x7: CMD_TARGET_REG_READ" range="" rwaccess="R"/>
    <bitfield id="INIT_MSTANDBY" width="1" begin="17" end="17" resetval="0" description="Status of init_MStandby signal" range="" rwaccess="R"/>
    <bitfield id="INIT_MWAIT" width="1" begin="16" end="16" resetval="0" description="Status of init_MWait signal" range="" rwaccess="R"/>
    <bitfield id="INIT_MDISCREQ" width="1" begin="15" end="15" resetval="0" description="Request to disconnect from OCP interface" range="" rwaccess="R"/>
    <bitfield id="INIT_MDISCACK" width="2" begin="14" end="13" resetval="0x0" description="Disconnect status of the OCP interface: 0x0: FUNCT 0x1: SLEEP TRANS 0x2: Reserved 0x3: IDLE" range="" rwaccess="R"/>
    <bitfield id="INIT_SCONNECT_2" width="1" begin="12" end="12" resetval="0" description="Defines whether to wait in M_WAIT state for MConnect FSM: 0x0: Skip M_WAIT state. 0x1: Wait in M_WAIT state." range="" rwaccess="R"/>
    <bitfield id="INIT_SCONNECT_1" width="1" begin="11" end="11" resetval="0" description="Defines the busy-ness state of the slave: 0x0: Slave is drained. 0x1: Slave is loaded." range="" rwaccess="R"/>
    <bitfield id="INIT_SCONNECT_0" width="1" begin="10" end="10" resetval="0" description="Disconnect from slave: 0x0: Disconnect request from slave 0x1: Connect request from slave" range="" rwaccess="R"/>
    <bitfield id="INIT_MCONNECT" width="2" begin="9" end="8" resetval="0x0" description="Initiator MConnect state: 0x0: M_OFF 0x1: M_WAIT 0x2: M_DISC 0x3: M_CON" range="" rwaccess="R"/>
    <bitfield id="TARGET_SIDLEACK" width="2" begin="7" end="6" resetval="0x0" description="Acknowledge the SIdleAck state-machine: 0x0: FUNCT 0x1: SLEEP TRANS 0x2: Reserved 0x3: IDLE" range="" rwaccess="R"/>
    <bitfield id="TARGET_SDISCACK" width="2" begin="5" end="4" resetval="0x0" description="Acknowledge the SDiscAck state-machine: 0x0: FUNCT 0x1: TRANS 0x2: Reserved 0x3: IDLE" range="" rwaccess="R"/>
    <bitfield id="TARGET_SIDLEREQ" width="1" begin="3" end="3" resetval="0" description="Request the target to go idle: 0x0: Do not go idle, or go active 0x1: Go idle" range="" rwaccess="R"/>
    <bitfield id="TARGET_SCONNECT" width="1" begin="2" end="2" resetval="0" description="Target SConnect bit 0 state: 0x0: Disconnect interface 0x1: Connect OCP interface" range="" rwaccess="R"/>
    <bitfield id="TARGET_MCONNECT" width="2" begin="1" end="0" resetval="0x0" description="Target MConnect state: 0x0: M_OFF 0x1: M_WAIT 0x2: M_DISC 0x3: M_CON" range="" rwaccess="R"/>
  </register>
</module>
