<?xml version="1.0" encoding="UTF-8"?>
<module id="SEQ" HW_revision="1" XML_version="1" description="DaVinci - Sequencer Control Registers">
	<register id="PID" acronym="PID" offset="0" width="32" description="Sequencer control register">
		<bitfield id="_RESV" width="8" begin="31" end="24" resetval="-" description="Reserved" range="-" rwaccess="">
         
      </bitfield>
		<bitfield id="TID" width="8" begin="23" end="16" resetval="10" description="\hPeripheral ID\n0x0A - Sequencer Module" range="-" rwaccess="R">
         
      </bitfield>
		<bitfield id="CID" width="8" begin="15" end="8" resetval="0" description="\hClass ID \nStandard ALU" range="-" rwaccess="R">
         
      </bitfield>
		<bitfield id="PREV" width="8" begin="7" end="0" resetval="1" description="\hPeripheral Revision Number" range="-" rwaccess="R">
         
      </bitfield>
	</register>
	<register id="CTRL" acronym="CTRL" offset="4" width="32" description="Sequencer control register">
		<bitfield id="_RESV" width="30" begin="31" end="2" resetval="-" description="Reserved" range="-" rwaccess="">
         
      </bitfield>
		<bitfield id="ABORT" width="1" begin="1" end="1" resetval="0" description="\hSequencer abort control:\nNote: Abort is equivalent to stop command in assembly" range="-" rwaccess="RW">
			<bitenum id="RUNNING" value="0" token="RUNNING" description="running"/>
			<bitenum id="ABORT" value="1" token="ABORT" description="abort"/>
		</bitfield>
		<bitfield id="RUN" width="1" begin="0" end="0" resetval="0" description="\hSequencer run control:" range="-" rwaccess="RW">
			<bitenum id="IDLE" value="0" token="IDLE" description="idle"/>
			<bitenum id="START" value="1" token="START" description="start"/>
		</bitfield>
	</register>
	<register id="BOOT" acronym="BOOT" offset="8" width="32" description="Sequencer boot address register">
		<bitfield id="_RESV" width="21" begin="31" end="11" resetval="-" description="Reserved" range="-" rwaccess="">
         
      </bitfield>
		<bitfield id="ADDR" width="11" begin="10" end="0" resetval="0" description="\hSequencer Boot address\nSequencer will start executing by fetching the first instruction from this address" range="-" rwaccess="RW">
         
      </bitfield>
	</register>
	<register id="AREG" acronym="AREG" offset="12" width="32" description="A register of Sequencer (debug)">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="-" description="Reserved" range="-" rwaccess="">
         
      </bitfield>
		<bitfield id="AREG" width="16" begin="15" end="0" resetval="0" description="\hSequencer A register contents\nNote: Should only be read if sequencer is halted using Sync or Stop command" range="-" rwaccess="R">
         
      </bitfield>
	</register>
	<register id="BREG" acronym="BREG" offset="16" width="32" description="B register of Sequencer (debug)">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="-" description="Reserved" range="-" rwaccess="">
         
      </bitfield>
		<bitfield id="BREG" width="16" begin="15" end="0" resetval="0" description="\hSequencer B register contents\nNote: Should only be read if sequencer is halted using Sync or Stop command" range="-" rwaccess="R">
         
      </bitfield>
	</register>
	<register id="CREG" acronym="CREG" offset="20" width="32" description="C register of Sequencer (debug)">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="-" description="Reserved" range="-" rwaccess="">
         
      </bitfield>
		<bitfield id="CREG" width="16" begin="15" end="0" resetval="0" description="\hSequencer C register contents\nNote: Should only be read if sequencer is halted using Sync or Stop command" range="-" rwaccess="R">
         
      </bitfield>
	</register>
	<register id="PREG" acronym="PREG" offset="24" width="32" description="P1 register of Sequencer (debug)">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="-" description="Reserved" range="-" rwaccess="">
         
      </bitfield>
		<bitfield id="P1REG" width="16" begin="15" end="0" resetval="0" description="\hSequencer P1 register contents\nNote: Should only be read if sequencer is halted using Sync or Stop command" range="-" rwaccess="R">
         
      </bitfield>
	</register>
	<register id="P2REG" acronym="P2REG" offset="28" width="32" description="P2 register of Sequencer (debug)">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="-" description="Reserved" range="-" rwaccess="">
         
      </bitfield>
		<bitfield id="P2REG" width="16" begin="15" end="0" resetval="0" description="\hSequencer P2 register contents\nNote: Should only be read if sequencer is halted using Sync or Stop command" range="-" rwaccess="R">
         
      </bitfield>
	</register>
	<register id="PCREG" acronym="PCREG" offset="32" width="32" description="PC register of Sequencer (debug)">
		<bitfield id="_RESV" width="16" begin="31" end="16" resetval="-" description="Reserved" range="-" rwaccess="">
         
      </bitfield>
		<bitfield id="PCREG" width="16" begin="15" end="0" resetval="0" description="\hSequencer PC register contents\nNote: Should only be read if sequencer is halted using Sync or Stop command" range="-" rwaccess="R">
         
      </bitfield>
	</register>
	<register id="STATUS" acronym="STATUS" offset="36" width="32" description="Status register of Sequencer (debug)">
		<bitfield id="_RESV" width="28" begin="31" end="4" resetval="-" description="Reserved" range="-" rwaccess="">
         
      </bitfield>
		<bitfield id="V" width="1" begin="3" end="3" resetval="0" description="Overflow Status Bit" range="-" rwaccess="R">
			<bitenum id="NOOVERFLOW" value="0" token="NOOVERFLOW" description="Arithmetic instruction casued no overflow"/>
			<bitenum id="OVERFLOW" value="1" token="OVERFLOW" description="Arithmetic instruction casued an overflow"/>
		</bitfield>
		<bitfield id="N" width="1" begin="2" end="2" resetval="0" description="Negative Status Bit" range="-" rwaccess="R">
			<bitenum id="NON_NEGATIVE" value="0" token="NON_NEGATIVE" description="Data value last loaded into a register had MSB '0'"/>
			<bitenum id="NEGATIVE" value="1" token="NEGATIVE" description="Data value last loaded into a register had MSB '1'"/>
		</bitfield>
		<bitfield id="Z" width="1" begin="1" end="1" resetval="0" description="Zero Status Bit" range="-" rwaccess="R">
			<bitenum id="NONZERO" value="0" token="NONZERO" description="Data value last loaded into a register was non-zero"/>
			<bitenum id="ZERO" value="1" token="ZERO" description="Data value last loaded into a register was zero"/>
		</bitfield>
		<bitfield id="C" width="1" begin="0" end="0" resetval="0" description="Arithmetic Carry Status Bit" range="-" rwaccess="R">
			<bitenum id="NOCARRY" value="0" token="NOCARRY" description="Arithmetic instruction casued no carry"/>
			<bitenum id="CARRY" value="1" token="CARRY" description="Arithmetic instruction casued a carry"/>
		</bitfield>
	</register>
</module>
