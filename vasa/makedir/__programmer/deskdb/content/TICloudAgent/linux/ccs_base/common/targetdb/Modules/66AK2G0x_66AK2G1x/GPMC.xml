<module name="GPMC" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="GPMC_REVISION" acronym="GPMC_REVISION" offset="0x0" width="32" description="">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="0x60" description="TI internal data. Identifies revision of peripheral." range="" rwaccess="R"/>
  </register>
  <register id="GPMC_SYSCONFIG" acronym="GPMC_SYSCONFIG" offset="0x10" width="32" description="">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="IDLEMODE" width="2" begin="4" end="3" resetval="0x0" description="0h: Force-idle. An idle request is acknowledged unconditionally. 1h (R/W) = No-idle. An idle request is never acknowledged. 2h (R/W) = Smart-idle. Acknowledgment to an idle request is given based on the internal activity of the module. 3h (R/W) = Reserved. Do not use." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="2" end="2" resetval="0x0" description="Write 0 for future compatibility Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0x0" description="Software reset. 0h (R/W) = Normal mode 1h (R/W) = The module is reset." range="" rwaccess="RW"/>
    <bitfield id="AUTOIDLE" width="1" begin="0" end="0" resetval="0x0" description="Internal interface clock-gating strategy 0h (R/W) = Interface clock is free-running. 1h (R/W) = Automatic Interface clock gating strategy is applied, based on the interconnect activity." range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_SYSSTATUS" acronym="GPMC_SYSSTATUS" offset="0x14" width="32" description="">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Read returns 0." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0x0" description="Read returns 0 (reserved for interconnect-socket status information)." range="" rwaccess="R"/>
    <bitfield id="RESETDONE" width="1" begin="0" end="0" resetval="0x-" description="Internal reset monitoring 0h (R) = Internal module reset is ongoing. 1h (R) = Reset is complete." range="" rwaccess="R"/>
  </register>
  <register id="GPMC_IRQSTATUS" acronym="GPMC_IRQSTATUS" offset="0x18" width="32" description="">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="WAIT1EDGEDETECTIONSTATUS" width="1" begin="9" end="9" resetval="0x0" description="Status of the Wait1 Edge Detection interrupt Write: 0h = WAIT1EDGEDETECTIONSTATUS bit is unchanged. 1h = WAIT1EDGEDETECTIONSTATUS bit is reset. Read: 0h = A transition on WAIT1 input pin has not been detected. 1h = A transition on WAIT1 input pin has been detected." range="" rwaccess="RW"/>
    <bitfield id="WAIT0EDGEDETECTIONSTATUS" width="1" begin="8" end="8" resetval="0x0" description="Status of the Wait0 Edge Detection interrupt Write: 0h = WAIT0EDGEDETECTIONSTATUS bit is unchanged. 1h = WAIT0EDGEDETECTIONSTATUS bit is reset. Read: 0h = A transition on WAIT0 input pin has not been detected. 1h = A transition on WAIT0 input pin has been detected." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="7" end="2" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="TERMINALCOUNTSTATUS" width="1" begin="1" end="1" resetval="0x0" description="Status of the TerminalCountEvent interrupt Write: 0h = TERMINALCOUNTSTATUS bit is unchanged. 1h = TERMINALCOUNTSTATUS bit is reset. Read: 0h = Indicates that CountValue is greater than 0. 1h = Indicates that CountValue is equal to 0." range="" rwaccess="RW"/>
    <bitfield id="FIFOEVENTSTATUS" width="1" begin="0" end="0" resetval="0x0" description="Status of the FIFOEvent interrupt Write: 0h = FIFOEVENTSTATUS bit is unchanged. 1h = FIFOEVENTSTATUS bit is reset. Read: 0h = Indicates that less than 1h = Indicates that at least" range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_IRQENABLE" acronym="GPMC_IRQENABLE" offset="0x1C" width="32" description="">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="WAIT1EDGEDETECTIONENABLE" width="1" begin="9" end="9" resetval="0x0" description="Enables the Wait1 Edge Detection interrupt 0h (R/W) = Wait1EdgeDetection interrupt is masked. 1h (R/W) = Wait1EdgeDetection event generates an interrupt if occurs." range="" rwaccess="RW"/>
    <bitfield id="WAIT0EDGEDETECTIONENABLE" width="1" begin="8" end="8" resetval="0x0" description="Enables the Wait0 Edge Detection interrupt 0h (R/W) = Wait0EdgeDetection interrupt is masked. 1h (R/W) = Wait0EdgeDetection event generates an interrupt if occurs." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="7" end="2" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="TERMINALCOUNTEVENTENABLE" width="1" begin="1" end="1" resetval="0x0" description="Enables TerminalCountEvent interrupt issuing in prefetch or write-posting mode 0h (R/W) = TerminalCountEvent interrupt is masked. 1h (R/W) = TerminalCountEvent interrupt is not masked." range="" rwaccess="RW"/>
    <bitfield id="FIFOEVENTENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enables the FIFOEvent interrupt 0h (R/W) = FIFOEvent interrupt is masked. 1h (R/W) = FIFOEvent interrupt is not masked." range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_TIMEOUT_CONTROL" acronym="GPMC_TIMEOUT_CONTROL" offset="0x40" width="32" description="">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="TIMEOUTSTARTVALUE" width="9" begin="12" end="4" resetval="0x1FF" description="Start value of the time-out counter" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="3" end="1" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="TIMEOUTENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enable bit of the TimeOut feature 0h (R/W) = TimeOut feature is disabled. 1h (R/W) = TimeOut feature is enabled." range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_ERR_ADDRESS" acronym="GPMC_ERR_ADDRESS" offset="0x44" width="32" description="">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="ILLEGALADD" width="31" begin="30" end="0" resetval="0x0" description="Address of illegal access" range="" rwaccess="R"/>
  </register>
  <register id="GPMC_ERR_TYPE" acronym="GPMC_ERR_TYPE" offset="0x48" width="32" description="">
    <bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="ILLEGALMCMD" width="3" begin="10" end="8" resetval="0x0" description="System command of the transaction that caused the error" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="ERRORNOTSUPPADD" width="1" begin="4" end="4" resetval="0x0" description="Not supported address error 0h (R) = No error occurs. 1h (R) = The error is due to a nonsupported address." range="" rwaccess="R"/>
    <bitfield id="ERRORNOTSUPPMCMD" width="1" begin="3" end="3" resetval="0x0" description="Not supported command error 0h (R) = No error occurs. 1h (R) = The error is due to a nonsupported command" range="" rwaccess="R"/>
    <bitfield id="ERRORTIMEOUT" width="1" begin="2" end="2" resetval="0x0" description="Time-out error 0h (R) = No error occurs. 1h (R) = The error is due to a timeout." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="1" end="1" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="ERRORVALID" width="1" begin="0" end="0" resetval="0x0" description="Error validity status - Must be explicitly cleared with a write 1 transaction 0h (R/W) = All error fields no longer valid 1h (R/W) = Error detected and logged in the other error fields" range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_CONFIG" acronym="GPMC_CONFIG" offset="0x50" width="32" description="">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="WAIT1PINPOLARITY" width="1" begin="9" end="9" resetval="0x1" description="Selects the polarity of input pin WAIT1 0h (R/W) = WAIT1 active low 1h (R/W) = WAIT1 active high" range="" rwaccess="RW"/>
    <bitfield id="WAIT0PINPOLARITY" width="1" begin="8" end="8" resetval="0x0" description="Selects the polarity of input pin WAIT0 0h (R/W) = WAIT0 active low 1h (R/W) = WAIT0 active high" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="WRITEPROTECT" width="1" begin="4" end="4" resetval="0x0" description="Controls the WP output pin level 0h (R/W) = nWP output pin is low 1h (R/W) = nWP output pin is high" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="3" end="1" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="NANDFORCEPOSTEDWRITE" width="1" begin="0" end="0" resetval="0x0" description="Enables the Force Posted Write feature to NAND Cmd/Add/Data location 0h (R/W) = Disables Force Posted Write 1h (R/W) = Enables Force Posted Write" range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_STATUS" acronym="GPMC_STATUS" offset="0x54" width="32" description="">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="WAIT1STATUS" width="1" begin="9" end="9" resetval="0x-" description="Is a copy of input pin WAIT1. (Reset value is WAIT1 input pin sampled at device reset.) 0h (R) = WAIT1 asserted (inactive state) 1h (R) = WAIT1 deasserted" range="" rwaccess="R"/>
    <bitfield id="WAIT0STATUS" width="1" begin="8" end="8" resetval="0x-" description="Is a copy of input pin WAIT0. (Reset value is WAIT0 input pin sampled at device reset.) 0h (R) = WAIT0 asserted (inactive state) 1h (R) = WAIT0 deasserted" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0x0" description="Write 0s for future compatibility. Reads returns 0" range="" rwaccess="RW"/>
    <bitfield id="EMPTYWRITEBUFFERSTATUS" width="1" begin="0" end="0" resetval="0x1" description="Stores the empty status of the write buffer 0h (R) = Write buffer is not empty. 1h (R) = Write buffer is empty." range="" rwaccess="R"/>
  </register>
  <register id="GPMC_PREFETCH_CONFIG1" acronym="GPMC_PREFETCH_CONFIG1" offset="0x1E0" width="32" description="">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="CYCLEOPTIMIZATION" width="3" begin="30" end="28" resetval="0x0" description="Define the number of GPMC_FCLK cycles to be subtracted from RDCYCLETIME, WRCYCLETIME, RDACCESSTIME, CSRDOFFTIME, CSWROFFTIME, ADVRDOFFTIME, ADVWROFFTIME, OEOFFTIME, WEOFFTIME" range="" rwaccess="RW"/>
    <bitfield id="ENABLEOPTIMIZEDACCESS" width="1" begin="27" end="27" resetval="0x0" description="Enables access cycle optimization 0h (R/W) = Access cycle optimization is disabled. 1h (R/W) = Access cycle optimization is enabled." range="" rwaccess="RW"/>
    <bitfield id="ENGINECSSELECTOR" width="3" begin="26" end="24" resetval="0x0" description="Selects the chip-select where Prefetch Postwrite engine is active" range="" rwaccess="RW"/>
    <bitfield id="PFPWENROUNDROBIN" width="1" begin="23" end="23" resetval="0x0" description="Enables the PFPW RoundRobin arbitration 0h (R/W) = Prefetch Postwrite engine round robin arbitration is disabled. 1h (R/W) = Prefetch Postwrite engine round robin arbitration is enabled." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="22" end="20" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="PFPWWEIGHTEDPRIO" width="4" begin="19" end="16" resetval="0x0" description="When an arbitration occurs between a DMA and a PFPW engine access, the DMA is always serviced. If the PFPWEnRoundRobin is enabled," range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="15" end="15" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="FIFOTHRESHOLD" width="7" begin="14" end="8" resetval="0x40" description="Selects the maximum number of bytes read from the FIFO or written to the FIFO by the host on a DMA or interrupt request" range="" rwaccess="RW"/>
    <bitfield id="ENABLEENGINE" width="1" begin="7" end="7" resetval="0x0" description="Enables the Prefetch Postwite engine 0h (R/W) = Prefetch Postwrite engine is disabled. 1h (R/W) = Prefetch Postwrite engine is enabled." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="WAITPINSELECTOR" width="2" begin="5" end="4" resetval="0x0" description="Select which wait pin edge detector should start the engine in synchronized mode 0h (R/W) = Selects Wait0 EdgeDetection 1h (R/W) = Selects Wait1 EdgeDetection2h, 3h: Reserved" range="" rwaccess="RW"/>
    <bitfield id="SYNCHROMODE" width="1" begin="3" end="3" resetval="0x0" description="Selects when the engine starts the access to chip-select 0h (R/W) = Engine starts the access to chip-select as soon as STARTENGINE is set 1h (R/W) = Engine starts the access to chip-select as soon as STARTENGINE is set AND wait to nonwait edge detection on the selected wait pin" range="" rwaccess="RW"/>
    <bitfield id="DMAMODE" width="1" begin="2" end="2" resetval="0x0" description="Selects interrupt synchronization or DMA request synchronization 0h (R/W) = Interrupt synchronization is enabled. Only interrupt line is activated on FIFO threshold crossing. 1h (R/W) = DMA request synchronization is enabled. A DMA request protocol is used." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="1" end="1" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="ACCESSMODE" width="1" begin="0" end="0" resetval="0x0" description="Selects prefetch read or write-posting accesses 0h (R/W) = Prefetch read mode 1h (R/W) = Write-posting mode" range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_PREFETCH_CONFIG2" acronym="GPMC_PREFETCH_CONFIG2" offset="0x1E4" width="32" description="">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="TRANSFERCOUNT" width="14" begin="13" end="0" resetval="0x0" description="Selects the number of bytes to be read or written by the engine to the selected chip-select" range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_PREFETCH_CONTROL" acronym="GPMC_PREFETCH_CONTROL" offset="0x1EC" width="32" description="">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="STARTENGINE" width="1" begin="0" end="0" resetval="0x0" description="Resets the FIFO pointer and starts the engine Write: 0h = Stops the engine. 1h = Resets the FIFO pointer to 0h in prefetch mode and 40h in postwrite mode and starts the engine. Read: 0h = Engine is stopped. 1h = Engine is running." range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_PREFETCH_STATUS" acronym="GPMC_PREFETCH_STATUS" offset="0x1F0" width="32" description="">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="Write 0s for future compatibility. Read returns 0." range="" rwaccess="RW"/>
    <bitfield id="FIFOPOINTER" width="7" begin="30" end="24" resetval="0x0" description="Number of available bytes to be read or number of free empty byte places to be written" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="7" begin="23" end="17" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="FIFOTHRESHOLDSTATUS" width="1" begin="16" end="16" resetval="0x0" description="Set when FIFOPointer exceeds FIFOThreshold value 0h (R) = FIFOPointer smaller or equal to FIFOThreshold. Writing to this bit has no effect. 1h (R) = FIFOPointer greater than FIFOThreshold. Writing to this bit has no effect." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="COUNTVALUE" width="14" begin="13" end="0" resetval="0x0" description="Number of remaining bytes to be read or to be written by the engine according to the TransferCount value" range="" rwaccess="R"/>
  </register>
  <register id="GPMC_ECC_CONFIG" acronym="GPMC_ECC_CONFIG" offset="0x1F4" width="32" description="">
    <bitfield id="RESERVED" width="15" begin="31" end="17" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="ECCALGORITHM" width="1" begin="16" end="16" resetval="0x0" description="ECC algorithm used 0h (R/W) = Hamming code 1h (R/W) = BCH code" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="ECCBCHTSEL" width="2" begin="13" end="12" resetval="0x1" description="Error correction capability used for BCH 0h (R/W) = Up to 4 bits error correction (t = 4) 1h (R/W) = Up to 8 bits error correction (t = 8) 2h (R/W) = Up to 16 bits error correction (t = 16) 3h (R/W) = Reserved" range="" rwaccess="RW"/>
    <bitfield id="ECCWRAPMODE" width="4" begin="11" end="8" resetval="0x0" description="Spare area organization definition for the BCH algorithm. See the BCH syndrome/parity calculator module functional specification for more details" range="" rwaccess="RW"/>
    <bitfield id="ECC16B" width="1" begin="7" end="7" resetval="0x0" description="Selects an ECC calculated on 16 columns 0h (R/W) = ECC calculated on 8 columns 1h (R/W) = ECC calculated on 16 columns" range="" rwaccess="RW"/>
    <bitfield id="ECCTOPSECTOR" width="3" begin="6" end="4" resetval="0x3" description="Number of sectors to process with the BCH algorithm 1h: 2 sectors" range="" rwaccess="RW"/>
    <bitfield id="ECCCS" width="3" begin="3" end="1" resetval="0x0" description="Selects the CS where ECC is computed 0h (R/W) = CS0 1h (R/W) = CS1 2h (R/W) = CS2 3h (R/W) = CS3 Other: Reserved" range="" rwaccess="RW"/>
    <bitfield id="ECCENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enables the ECC feature 0h (R/W) = ECC disabled 1h (R/W) = ECC enabled" range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_ECC_CONTROL" acronym="GPMC_ECC_CONTROL" offset="0x1F8" width="32" description="">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="ECCCLEAR" width="1" begin="8" end="8" resetval="0x0" description="Clear all ECC result registers" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="ECCPOINTER" width="4" begin="3" end="0" resetval="0x0" description="Selects ECC result register (Reads to this field give the dynamic position of the ECC pointer - Writes to this field select the ECC result register where the first ECC computation will be stored.); Writing other values disables the ECC engine (ECCENABLE bit of 0h (R/W) = Writing 0h disables the ECC engine (ECCENABLE bit of 1h (R/W) = ECC result register 1 selected 2h (R/W) = ECC result register 2 selected 3h (R/W) = ECC result register 3 selected 4h (R/W) = ECC result register 4 selected 5h (R/W) = ECC result register 5 selected 6h (R/W) = ECC result register 6 selected 7h (R/W) = ECC result register 7 selected 8h (R/W) = ECC result register 8 selected 9h (R/W) = ECC result register 9 selected" range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_ECC_SIZE_CONFIG" acronym="GPMC_ECC_SIZE_CONFIG" offset="0x1FC" width="32" description="">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0x3" description="Write 0s for future compatibility. Read returns 3." range="" rwaccess="RW"/>
    <bitfield id="ECCSIZE1" width="8" begin="29" end="22" resetval="0xFF" description="Defines Hamming code ECC size 1 in bytes" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x3" description="Write 0s for future compatibility. Read returns 3." range="" rwaccess="RW"/>
    <bitfield id="ECCSIZE0" width="8" begin="19" end="12" resetval="0xFF" description="Defines Hamming code ECC size 0 in bytes" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="11" end="9" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="RW"/>
    <bitfield id="ECC9RESULTSIZE" width="1" begin="8" end="8" resetval="0x0" description="Selects ECC size for ECC 9 result register 0h (R/W) = ECCSIZE0 selected 1h (R/W) = ECCSIZE1 selected" range="" rwaccess="RW"/>
    <bitfield id="ECC8RESULTSIZE" width="1" begin="7" end="7" resetval="0x0" description="Selects ECC size for ECC 8 result register 0h (R/W) = ECCSIZE0 selected 1h (R/W) = ECCSIZE1 selected" range="" rwaccess="RW"/>
    <bitfield id="ECC7RESULTSIZE" width="1" begin="6" end="6" resetval="0x0" description="Selects ECC size for ECC 7 result register 0h (R/W) = ECCSIZE0 selected 1h (R/W) = ECCSIZE1 selected" range="" rwaccess="RW"/>
    <bitfield id="ECC6RESULTSIZE" width="1" begin="5" end="5" resetval="0x0" description="Selects ECC size for ECC 6 result register 0h (R/W) = ECCSIZE0 selected 1h (R/W) = ECCSIZE1 selected" range="" rwaccess="RW"/>
    <bitfield id="ECC5RESULTSIZE" width="1" begin="4" end="4" resetval="0x0" description="Selects ECC size for ECC 5 result register 0h (R/W) = ECCSIZE0 selected 1h (R/W) = ECCSIZE1 selected" range="" rwaccess="RW"/>
    <bitfield id="ECC4RESULTSIZE" width="1" begin="3" end="3" resetval="0x0" description="Selects ECC size for ECC 4 result register 0h (R/W) = ECCSIZE0 selected 1h (R/W) = ECCSIZE1 selected" range="" rwaccess="RW"/>
    <bitfield id="ECC3RESULTSIZE" width="1" begin="2" end="2" resetval="0x0" description="Selects ECC size for ECC 3 result register 0h (R/W) = ECCSIZE0 selected 1h (R/W) = ECCSIZE1 selected" range="" rwaccess="RW"/>
    <bitfield id="ECC2RESULTSIZE" width="1" begin="1" end="1" resetval="0x0" description="Selects ECC size for ECC 2 result register 0h (R/W) = ECCSIZE0 selected 1h (R/W) = ECCSIZE1 selected" range="" rwaccess="RW"/>
    <bitfield id="ECC1RESULTSIZE" width="1" begin="0" end="0" resetval="0x0" description="Selects ECC size for ECC 1 result register 0h (R/W) = ECCSIZE0 selected 1h (R/W) = ECCSIZE1 selected" range="" rwaccess="RW"/>
  </register>
  <register id="GPMC_BCH_SWDATA" acronym="GPMC_BCH_SWDATA" offset="0x2D0" width="32" description="">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Write 0s for future compatibility. Read returns 0s." range="" rwaccess="R"/>
    <bitfield id="BCH_DATA" width="16" begin="15" end="0" resetval="0x0" description="Data to be included in the BCH calculation" range="" rwaccess="RW"/>
  </register>
</module>
