<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="DSS_CBUFF" id="DSS_CBUFF">
  
  
  <register acronym="CONFIG_REG_0" description="Basic Config register" id="CONFIG_REG_0" offset="0x0" width="32">
    
  <bitfield begin="31" description="TI Internal feature.  1 : This selects the debug bus mode transmission on LVDS" end="28" id="dbussel" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="CBUFF controller SW Reset 1 => RESET the CBUFF Controller 0 => RELEASE RESET for CBUFF Controller" end="27" id="cswcrst" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature. LVDS logic SW Reset. Debug feature.  1 => RESET the FSM 0 => RELEASE RESET" end="26" id="cswlrst" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="SW Trigger generation : Write 1 to this bit to generate a Frame Start SW Trigger" end="25" id="CFG_FRAME_START_TRIG" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="24" description="SW Trigger generation : Write 1 to this bit to generate a Chirp Available SW Trigger" end="24" id="CFG_CHIRP_AVAIL_TRIG" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="23" description="TI Internal Feature. Only required for 900 Mbps 4 lane trasnmission CSI2 only Programming :  0xA : Burst Enable. Set this only for transmission at 900 Mbps Others : Burst disable. " end="20" id="CFG_VBUSP_BURST_EN" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="TC2 Mode selection. TI Internal feature.  0 : Normal 1 : When in TC2 mode, setting this bit will enable debug bus to sent via LVDS" end="19" id="dbusen" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="TI Internal Feature. Debug only. CSI2 only Programming :  CFG_CSI2_FIFO_WORDS_PROCESSING_EN  0 : Use the fifo_free_words directly from CSI2 by vbusp_mstr to decide how many more words to send. 1 : Process the fifo_free_words and use it by vbusp_mstr to decide how many more words to send." end="18" id="ccfwpen" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="CSI2 only Programming :  0 : No Vsync packet is sent at Frame boundary 1 : A VSYNC Start packet on Virtual Channel 3 is generated at beginning of Frame  2 : A VSYNC End packet on Virtual Channel 3 is generated at end of Frame  3 : A VSYNC Start packet on Virtual Channel 3 is generated at beginning of Frame and  a VSYNC End packet on Virtual Channel 3 is generated at end of Frame " end="16" id="cvc3en" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="15" description="CSI2 only Programming :  0 : No Vsync packet is sent at Frame boundary 1 : A VSYNC Start packet on Virtual Channel 2 is generated at beginning of Frame  2 : A VSYNC End packet on Virtual Channel 2 is generated at end of Frame  3 : A VSYNC Start packet on Virtual Channel 2 is generated at beginning of Frame and  a VSYNC End packet on Virtual Channel 2 is generated at end of Frame " end="14" id="cvc2en" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="13" description="CSI2 only Programming :  0 : No Vsync packet is sent at Frame boundary 1 : A VSYNC Start packet on Virtual Channel 1 is generated at beginning of Frame  2 : A VSYNC End packet on Virtual Channel 1 is generated at end of Frame  3 : A VSYNC Start packet on Virtual Channel 1 is generated at beginning of Frame and  a VSYNC End packet on Virtual Channel 1 is generated at end of Frame " end="12" id="cvc1en" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="11" description="CSI2 only Programming :  0 : No Vsync packet is sent at Frame boundary 1 : A VSYNC Start packet on Virtual Channel 0 is generated at beginning of Frame  2 : A VSYNC End packet on Virtual Channel 0 is generated at end of Frame  3 : A VSYNC Start packet on Virtual Channel 0 is generated at beginning of Frame and  a VSYNC End packet on Virtual Channel 0 is generated at end of Frame " end="10" id="cvc0en" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="9" description="TI Internal Feature. Debug only. CSI2 only Programming :  CFG_RDTHRESHOLD_SEL . This is a Debug feature. Not requred in Programming model 0 : The read threshold is selected based on the Write Side parsing engine 1 : The read threshold is selected based on the Read Side parsing engine." end="9" id="crdthsel" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="TI Internal Feature. Debug only. CSI2 only Programming :  CFG_CSI2_FIFO_WORDS_LOAD_SW_EN. This is a Debug feature. Not requred in Programming model When CFG_CSI2_FIFO_WORDS_PROCESSING_EN==1 and CFG_CSI2_FIFO_WORDS_LOAD_SW_EN==1, then a fixed fifo_free_words from CSI2 is not used. Program the CFG_FIFO_FREE_THRESHOLD0 to 0x4" end="8" id="ccfwlen" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="" end="4" id="NU1" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="3" description="Select Chirp Available Trigger Source 0 : Chirp Available trigger will be generated by HW 1 : Chirp Available trigger will be generated by SW" end="3" id="CFG_SW_TRIG_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Select Frame Start Trigger Source 0 : Frame trigger will be generated by HW 1 : Frame trigger will be generated by SW" end="2" id="cftrigen" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="0 : Disable ECC on the CBUF FIFO 1 : Enable ECC on the CBUF FIFO" end="1" id="CFG_ECC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Send data over CSI-2 1 : Send data over LVDS" end="0" id="CFG_1LVDS_0CSI" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_SPHDR_ADDRESS" description="Short Packet Header Address" id="CFG_SPHDR_ADDRESS" offset="0x4" width="32">
    
  <bitfield begin="31" description="CSI2 Programming :  Configure the CSI_PROTOCOL_ENGINE__CSI_VC_SHORT_PACKET_HEADER Address in the CSI Protocol Engine LVDS Programming : Configure with the static value :  0x55555555" end="0" id="CFG_SPHDR_ADDRESS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_CMD_HSVAL" description="HSYNC Value" id="CFG_CMD_HSVAL" offset="0x8" width="32">
    
  <bitfield begin="31" description="CSI2 Programming :  Configure the HSync Start Short Packet Value LVDS Programming : If LVDS CRC is enabled  : Configure with the static value :  0x55555555 If LVDS CRC is disbaled  : Configure with the static value :  0xAAAAAAAA" end="0" id="CFG_CMD_HSVAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_CMD_HEVAL" description="HEND Value" id="CFG_CMD_HEVAL" offset="0xC" width="32">
    
  <bitfield begin="31" description="CSI2 Programming :  Configure the HSync End Short Packet Value LVDS Programming : If LVDS CRC is enabled  : Configure with the static value :  0x33333333 If LVDS CRC is disbaled  : Configure with the static value :  0xAAAAAAAA" end="0" id="CFG_CMD_HEVAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_CMD_VSVAL" description="VSYNC Value" id="CFG_CMD_VSVAL" offset="0x10" width="32">
    
  <bitfield begin="31" description="CSI2 Programming :  Configure the VSync Start Short Packet Value LVDS Programming : Configure with the static value :  0xAAAAAAAA" end="0" id="CFG_CMD_VSVAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_CMD_VEVAL" description="VEND Value" id="CFG_CMD_VEVAL" offset="0x14" width="32">
    
  <bitfield begin="31" description="CSI2 Programming :  Configure the VSync End Short Packet Value LVDS Programming : Configure with the static value :  0xAAAAAAAA" end="0" id="CFG_CMD_VEVAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_LPHDR_ADDRESS" description="Long Packet Address" id="CFG_LPHDR_ADDRESS" offset="0x18" width="32">
    
  <bitfield begin="31" description="CSI2 Programming :  Configure the CSI_PROTOCOL_ENGINE__CSI_VC_LONG_PACKET_HEADER Address in the CSI Protocol Engine LVDS Programming : Configure with the static value :  0x55555555" end="0" id="CFG_LPHDR_ADDRESS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_CHIRPS_PER_FRAME" description="Number of Chirps per Frame" id="CFG_CHIRPS_PER_FRAME" offset="0x20" width="32">
    
  <bitfield begin="31" description="Configure the number of Chirps in a Frame" end="0" id="CFG_CHIRPS_PER_FRAME" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_FIFO_FREE_THRESHOLD" description="CSI2 FIFO threshold for transferring data from CBUFF to CSI2" id="CFG_FIFO_FREE_THRESHOLD" offset="0x24" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Configure the threshold used to fill the FIFO3 in the CSI Protocol engine. CBUFF will send data to the Protocol Engine only if there is a larger number of Free slots that that configured in this register. By default, only 1  FIFO will be used so register programming is not Required in Programming model" end="24" id="CFG_FIFO_FREE_THRESHOLD3" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="TI Internal Feature CSI2 only Programming :  Configure the threshold used to fill the FIFO2 in the CSI Protocol engine. CBUFF will send data to the Protocol Engine only if there is a larger number of Free slots that that configured in this register. By default, only 1  FIFO will be used so register programming is not Required in Programming model" end="16" id="CFG_FIFO_FREE_THRESHOLD2" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="TI Internal Feature CSI2 only Programming :  Configure the threshold used to fill the FIFO1 in the CSI Protocol engine. CBUFF will send data to the Protocol Engine only if there is a larger number of Free slots that that configured in this register. By default, only 1  FIFO will be used so register programming is not Required in Programming model" end="8" id="CFG_FIFO_FREE_THRESHOLD1" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="CSI2 only Programming :  Configure the threshold used to fill the FIFO0 in the CSI Protocol engine. CBUFF will send data to the Protocol Engine only if there is a larger number of Free slots that that configured in this register" end="0" id="CFG_FIFO_FREE_THRESHOLD0" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CFG_LPPYLD_ADDRESS" description="Long payload Address" id="CFG_LPPYLD_ADDRESS" offset="0x28" width="32">
    
  <bitfield begin="31" description="CSI2 only Programming :  Configure the CSI_PROTOCOL_ENGINE__CSI_VC_LONG_PACKET_PAYLOAD Address in the CSI Protocol Engine" end="0" id="CFG_LPPYLD_ADDRESS" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DELAY_CONFIG" description="Delay Config Registers" id="CFG_DELAY_CONFIG" offset="0x2C" width="32">
    
  <bitfield begin="31" description="" end="24" id="NU" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="23" description="TI Internal Feature CSI2 only Programming :  Configure an additional delay after sending a Long packet Payload. This is a Debug feature. Not requred in Programming model" end="16" id="CFG_DATA_WR_DELAY" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="TI Internal Feature CSI2 only Programming :  Configure an additional delay after sending a Long packet Header. This is a Debug feature. Not requred in Programming model" end="8" id="CFG_LPHDR_DELAY" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="7" description="TI Internal Feature CSI2 only Programming :  Configure an additional delay after sending a Short packet. This is a Debug feature. Not requred in Programming model" end="0" id="CFG_SPHDR_DELAY" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL0" description="Payload Description : Linked list entry 0" id="CFG_DATA_LL0" offset="0x30" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL0_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL0_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL0_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL0_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL0_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL0_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL0_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL0_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL0_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL0_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL0_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL0_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL0_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL0_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL0_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL0_LPHDR_VAL" description="Payload Description : Linked list entry 0" id="CFG_DATA_LL0_LPHDR_VAL" offset="0x34" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL0_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL0_THRESHOLD" id="CFG_DATA_LL0_THRESHOLD" offset="0x38" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll0dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL0_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL0_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL1" id="CFG_DATA_LL1" offset="0x3C" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL1_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL1_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL1_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL1_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL1_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL1_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL1_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL1_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL1_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL1_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL1_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL1_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL1_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL1_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL1_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL1_LPHDR_VAL" id="CFG_DATA_LL1_LPHDR_VAL" offset="0x40" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL1_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL1_THRESHOLD" id="CFG_DATA_LL1_THRESHOLD" offset="0x44" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll1dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL1_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL1_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL2" id="CFG_DATA_LL2" offset="0x48" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL2_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL2_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL2_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL2_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL2_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL2_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL2_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL2_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL2_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL2_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL2_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL2_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL2_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL2_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL2_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL2_LPHDR_VAL" id="CFG_DATA_LL2_LPHDR_VAL" offset="0x4C" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL2_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL2_THRESHOLD" id="CFG_DATA_LL2_THRESHOLD" offset="0x50" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll2dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL2_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL2_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL3" id="CFG_DATA_LL3" offset="0x54" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL3_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL3_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL3_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL3_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL3_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL3_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL3_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL3_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL3_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL3_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL3_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL3_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL3_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL3_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL3_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL3_LPHDR_VAL" id="CFG_DATA_LL3_LPHDR_VAL" offset="0x58" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL3_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL3_THRESHOLD" id="CFG_DATA_LL3_THRESHOLD" offset="0x5C" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll3dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL3_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL3_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL4" id="CFG_DATA_LL4" offset="0x60" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL4_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL4_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL4_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL4_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL4_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL4_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL4_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL4_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL4_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL4_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL4_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL4_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL4_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL4_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL4_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL4_LPHDR_VAL" id="CFG_DATA_LL4_LPHDR_VAL" offset="0x64" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL4_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL4_THRESHOLD" id="CFG_DATA_LL4_THRESHOLD" offset="0x68" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll4dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL4_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL4_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL5" id="CFG_DATA_LL5" offset="0x6C" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL5_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL5_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL5_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL5_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL5_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL5_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL5_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL5_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL5_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL5_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL5_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL5_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL5_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL5_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL5_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL5_LPHDR_VAL" id="CFG_DATA_LL5_LPHDR_VAL" offset="0x70" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL5_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL5_THRESHOLD" id="CFG_DATA_LL5_THRESHOLD" offset="0x74" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll5dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL5_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL5_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL6" id="CFG_DATA_LL6" offset="0x78" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL6_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL6_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL6_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL6_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL6_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL6_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL6_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL6_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL6_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL6_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL6_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL6_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL6_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL6_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL6_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL6_LPHDR_VAL" id="CFG_DATA_LL6_LPHDR_VAL" offset="0x7C" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL6_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL6_THRESHOLD" id="CFG_DATA_LL6_THRESHOLD" offset="0x80" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll6dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL6_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL6_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL7" id="CFG_DATA_LL7" offset="0x84" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL7_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL7_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL7_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL7_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL7_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL7_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL7_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL7_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL7_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL7_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL7_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL7_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL7_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL7_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL7_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL7_LPHDR_VAL" id="CFG_DATA_LL7_LPHDR_VAL" offset="0x88" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL7_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL7_THRESHOLD" id="CFG_DATA_LL7_THRESHOLD" offset="0x8C" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll7dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL7_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL7_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL8" id="CFG_DATA_LL8" offset="0x90" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL8_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL8_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL8_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL8_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL8_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL8_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL8_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL8_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL8_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL8_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL8_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL8_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL8_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL8_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL8_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL8_LPHDR_VAL" id="CFG_DATA_LL8_LPHDR_VAL" offset="0x94" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL8_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL8_THRESHOLD" id="CFG_DATA_LL8_THRESHOLD" offset="0x98" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll8dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL8_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL8_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL9" id="CFG_DATA_LL9" offset="0x9C" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL9_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL9_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL9_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL9_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL9_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL9_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL9_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL9_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL9_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL9_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL9_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL9_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL9_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL9_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL9_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL9_LPHDR_VAL" id="CFG_DATA_LL9_LPHDR_VAL" offset="0xA0" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL9_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL9_THRESHOLD" id="CFG_DATA_LL9_THRESHOLD" offset="0xA4" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll9dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL9_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL9_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL10" id="CFG_DATA_LL10" offset="0xA8" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL10_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL10_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL10_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL10_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL10_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL10_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL10_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL10_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL10_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL10_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL10_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL10_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL10_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL10_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL10_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL10_LPHDR_VAL" id="CFG_DATA_LL10_LPHDR_VAL" offset="0xAC" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL10_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL10_THRESHOLD" id="CFG_DATA_LL10_THRESHOLD" offset="0xB0" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll10dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL10_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL10_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL11" id="CFG_DATA_LL11" offset="0xB4" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL11_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL11_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL11_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL11_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL11_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL11_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL11_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL11_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL11_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL11_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL11_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL11_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL11_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL11_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL11_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL11_LPHDR_VAL" id="CFG_DATA_LL11_LPHDR_VAL" offset="0xB8" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL11_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL11_THRESHOLD" id="CFG_DATA_LL11_THRESHOLD" offset="0xBC" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll11dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL11_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL11_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL12" id="CFG_DATA_LL12" offset="0xC0" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL12_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL12_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL12_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL12_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL12_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL12_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL12_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL12_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL12_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL12_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL12_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL12_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL12_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL12_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL12_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL12_LPHDR_VAL" id="CFG_DATA_LL12_LPHDR_VAL" offset="0xC4" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL12_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL12_THRESHOLD" id="CFG_DATA_LL12_THRESHOLD" offset="0xC8" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll12dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL12_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL12_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL13" id="CFG_DATA_LL13" offset="0xCC" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL13_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL13_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL13_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL13_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL13_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL13_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL13_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL13_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL13_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL13_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL13_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL13_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL13_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL13_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL13_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL13_LPHDR_VAL" id="CFG_DATA_LL13_LPHDR_VAL" offset="0xD0" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL13_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL13_THRESHOLD" id="CFG_DATA_LL13_THRESHOLD" offset="0xD4" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll13dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL13_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL13_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL14" id="CFG_DATA_LL14" offset="0xD8" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL14_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL14_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL14_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL14_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL14_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL14_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL14_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL14_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL14_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL14_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL14_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL14_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL14_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL14_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL14_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL14_LPHDR_VAL" id="CFG_DATA_LL14_LPHDR_VAL" offset="0xDC" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL14_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL14_THRESHOLD" id="CFG_DATA_LL14_THRESHOLD" offset="0xE0" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll14dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL14_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL14_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL15" id="CFG_DATA_LL15" offset="0xE4" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL15_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL15_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL15_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL15_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL15_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL15_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL15_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL15_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL15_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL15_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL15_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL15_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL15_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL15_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL15_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL15_LPHDR_VAL" id="CFG_DATA_LL15_LPHDR_VAL" offset="0xE8" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL15_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL15_THRESHOLD" id="CFG_DATA_LL15_THRESHOLD" offset="0xEC" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll15dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL15_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL15_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL16" id="CFG_DATA_LL16" offset="0xF0" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL16_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL16_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL16_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL16_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL16_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL16_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL16_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL16_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL16_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL16_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL16_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL16_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL16_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL16_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL16_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL16_LPHDR_VAL" id="CFG_DATA_LL16_LPHDR_VAL" offset="0xF4" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL16_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL16_THRESHOLD" id="CFG_DATA_LL16_THRESHOLD" offset="0xF8" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll16dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL16_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL16_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL17" id="CFG_DATA_LL17" offset="0xFC" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL17_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL17_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL17_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL17_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL17_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL17_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL17_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL17_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL17_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL17_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL17_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL17_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL17_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL17_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL17_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL17_LPHDR_VAL" id="CFG_DATA_LL17_LPHDR_VAL" offset="0x100" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL17_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL17_THRESHOLD" id="CFG_DATA_LL17_THRESHOLD" offset="0x104" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll17dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL17_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL17_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL18" id="CFG_DATA_LL18" offset="0x108" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL18_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL18_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL18_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL18_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL18_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL18_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL18_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL18_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL18_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL18_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL18_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL18_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL18_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL18_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL18_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL18_LPHDR_VAL" id="CFG_DATA_LL18_LPHDR_VAL" offset="0x10C" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL18_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL18_THRESHOLD" id="CFG_DATA_LL18_THRESHOLD" offset="0x110" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll18dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL18_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL18_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL19" id="CFG_DATA_LL19" offset="0x114" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL19_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL19_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL19_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL19_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL19_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL19_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL19_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL19_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL19_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL19_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL19_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL19_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL19_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL19_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL19_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL19_LPHDR_VAL" id="CFG_DATA_LL19_LPHDR_VAL" offset="0x118" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL19_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL19_THRESHOLD" id="CFG_DATA_LL19_THRESHOLD" offset="0x11C" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll19dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL19_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL19_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL20" id="CFG_DATA_LL20" offset="0x120" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL20_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL20_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL20_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL20_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL20_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL20_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL20_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL20_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL20_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL20_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL20_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL20_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL20_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL20_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL20_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL20_LPHDR_VAL" id="CFG_DATA_LL20_LPHDR_VAL" offset="0x124" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL20_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL20_THRESHOLD" id="CFG_DATA_LL20_THRESHOLD" offset="0x128" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll20dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL20_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL20_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL21" id="CFG_DATA_LL21" offset="0x12C" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL21_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL21_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL21_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL21_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL21_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL21_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL21_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL21_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL21_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL21_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL21_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL21_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL21_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL21_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL21_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL21_LPHDR_VAL" id="CFG_DATA_LL21_LPHDR_VAL" offset="0x130" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL21_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL21_THRESHOLD" id="CFG_DATA_LL21_THRESHOLD" offset="0x134" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll21dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL21_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL21_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL22" id="CFG_DATA_LL22" offset="0x138" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL22_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL22_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL22_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL22_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL22_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL22_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL22_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL22_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL22_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL22_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL22_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL22_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL22_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL22_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL22_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL22_LPHDR_VAL" id="CFG_DATA_LL22_LPHDR_VAL" offset="0x13C" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL22_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL22_THRESHOLD" id="CFG_DATA_LL22_THRESHOLD" offset="0x140" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll22dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL22_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL22_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL23" id="CFG_DATA_LL23" offset="0x144" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL23_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL23_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL23_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL23_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL23_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL23_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL23_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL23_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL23_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL23_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL23_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL23_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL23_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL23_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL23_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL23_LPHDR_VAL" id="CFG_DATA_LL23_LPHDR_VAL" offset="0x148" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL23_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL23_THRESHOLD" id="CFG_DATA_LL23_THRESHOLD" offset="0x14C" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll23dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL23_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL23_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL24" id="CFG_DATA_LL24" offset="0x150" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL24_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL24_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL24_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL24_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL24_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL24_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL24_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL24_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL24_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL24_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL24_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL24_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL24_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL24_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL24_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL24_LPHDR_VAL" id="CFG_DATA_LL24_LPHDR_VAL" offset="0x154" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL24_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL24_THRESHOLD" id="CFG_DATA_LL24_THRESHOLD" offset="0x158" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll24dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL24_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL24_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL25" id="CFG_DATA_LL25" offset="0x15C" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL25_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL25_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL25_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL25_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL25_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL25_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL25_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL25_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL25_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL25_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL25_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL25_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL25_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL25_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL25_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL25_LPHDR_VAL" id="CFG_DATA_LL25_LPHDR_VAL" offset="0x160" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL25_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL25_THRESHOLD" id="CFG_DATA_LL25_THRESHOLD" offset="0x164" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll25dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL25_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL25_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL26" id="CFG_DATA_LL26" offset="0x168" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL26_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL26_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL26_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL26_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL26_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL26_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL26_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL26_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL26_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL26_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL26_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL26_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL26_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL26_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL26_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL26_LPHDR_VAL" id="CFG_DATA_LL26_LPHDR_VAL" offset="0x16C" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL26_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL26_THRESHOLD" id="CFG_DATA_LL26_THRESHOLD" offset="0x170" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll26dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL26_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL26_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL27" id="CFG_DATA_LL27" offset="0x174" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL27_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL27_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL27_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL27_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL27_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL27_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL27_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL27_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL27_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL27_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL27_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL27_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL27_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL27_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL27_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL27_LPHDR_VAL" id="CFG_DATA_LL27_LPHDR_VAL" offset="0x178" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL27_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL27_THRESHOLD" id="CFG_DATA_LL27_THRESHOLD" offset="0x17C" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll27dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL27_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL27_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL28" id="CFG_DATA_LL28" offset="0x180" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL28_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL28_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL28_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL28_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL28_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL28_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL28_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL28_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL28_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL28_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL28_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL28_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL28_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL28_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL28_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL28_LPHDR_VAL" id="CFG_DATA_LL28_LPHDR_VAL" offset="0x184" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL28_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL28_THRESHOLD" id="CFG_DATA_LL28_THRESHOLD" offset="0x188" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll28dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL28_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL28_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL29" id="CFG_DATA_LL29" offset="0x18C" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL29_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL29_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL29_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL29_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL29_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL29_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL29_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL29_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL29_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL29_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL29_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL29_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL29_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL29_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL29_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL29_LPHDR_VAL" id="CFG_DATA_LL29_LPHDR_VAL" offset="0x190" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL29_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL29_THRESHOLD" id="CFG_DATA_LL29_THRESHOLD" offset="0x194" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll29dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL29_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL29_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL30" id="CFG_DATA_LL30" offset="0x198" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL30_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL30_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL30_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL30_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL30_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL30_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL30_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL30_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL30_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL30_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL30_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL30_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL30_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL30_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL30_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL30_LPHDR_VAL" id="CFG_DATA_LL30_LPHDR_VAL" offset="0x19C" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL30_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL30_THRESHOLD" id="CFG_DATA_LL30_THRESHOLD" offset="0x1A0" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll30dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL30_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL30_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL31" id="CFG_DATA_LL31" offset="0x1A4" width="32">
    
  <bitfield begin="31" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="31" id="LL31_DATA_WR_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="30" id="LL31_LONG_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="TI Internal Feature CSI2 only Programming :  Use the Packet Delay configured in CFG_DELAY_CONFIG. This is a Debug feature. Not requred in Programming model" end="29" id="LL31_SHORT_PKT_DELAY_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="0 : CRC is disbaled 1 : This linklist corresponds to ADC Buffer data. Enable the CRC check from ADC Buffer to CBUFF" end="28" id="LL31_CRC_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="CSI2 Programming :  1 : Entry is start of a new CSI-2 packet. Send the LP Payload Header before sending data corresponind to this Linklist 0 : Link list is not the start of a Long packet but part of previous packet and hence directly send data LVDS Programming : 1 : Entry is start of a new LVDS Frame 0 : Entry is not the start of the new LVDS Frame " end="27" id="LL31_LPHDR_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="TI Internal Feature Reserved for furture debug enhancement 1 : Wait for packet sent signal ack from CSI2 to move forward 0 : Do not wait for packet sent" end="26" id="LL31_WAITFOR_PKTSENT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="TI Internal Feature.  Reserved for future use to select which of the 12-bits or 14-bits to be picked up from 16-bit CBUFF unit" end="23" id="LL31_BITPOS_SEL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Configure the Size of the data in terms of the numer of samples (not in terms of number of bytes). Sample refers to a 16 bit CBUFF Unit" end="9" id="LL31_SIZE" rwaccess="RW" width="14"></bitfield>
    
  <bitfield begin="8" description="0 : The incoming data sources for this Linklist is aligned to 128-bit  1 : The incoming data sources for this Linklist is aligned to 96-bit " end="8" id="LL31_FMT_IN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="LVDS only : 0 : Choose CFG_LVDS_MAPPING_LANEx_FMT_0_y 1 : Choose CFG_LVDS_MAPPING_LANEx_FMT_1_y" end="7" id="LL31_FMT_MAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Specify the LVDS/CSI2 output format.  00 - 16bit 01 - 14-bit 10 - 12-bit" end="5" id="LL31_FMT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="4" description="CSI-2 :  Configure the Virtual Channel Number for the Long Packet over which this data is sent" end="3" id="LL31_VCNUM" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="CSI-2 : 0 : Do not send an Hsync Start packet before sending this data 1 : Send an Hsync Start Packet before sending this data LVDS : 0 : Entry is not the first data of LVDS Frame 1 : Entry is the first data in the LVDS Frame " end="2" id="LL31_HS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="CSI-2 : 0 : Do not send an Hsync End packet after sending this data 1 : Send an Hsync End Packet after sending this data LVDS : 0 : Entry is not the last data of LVDS Frame 1 : Entry is the last data in the LVDS Frame " end="1" id="LL31_HE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="0 : Linklist entry is invalid 1 : Linklist entry is valid" end="0" id="LL31_VALID" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL31_LPHDR_VAL" id="CFG_DATA_LL31_LPHDR_VAL" offset="0x1A8" width="32">
    
  <bitfield begin="31" description="CSI-2 Programming :  Configure the Long Packet Header to be sent to the Protocol Engine if the LPHDR_EN field is set for the linklist.  LVDS Programming : Configure with the static value :  0xBBBBBBBB" end="0" id="LL31_LPHDR_VAL" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_DATA_LL31_THRESHOLD" id="CFG_DATA_LL31_THRESHOLD" offset="0x1AC" width="32">
    
  <bitfield begin="31" description="" end="19" id="NU3" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="If the long Packet Header is enabled, CBUFF can generate a DMA request to trigger the DMA trasnfer for the new packet 0 : Send a Request on DMA HW Req output line 0 1 : Send a Request on DMA HW Req output line 1 2 : Send a Request on DMA HW Req output line 2 3 : Send a Request on DMA HW Req output line 3 4 : Send a Request on DMA HW Req output line 4 5 : Send a Request on DMA HW Req output line 5 6 : Send a Request on DMA HW Req output line 6 7 : Do not generate dma trigger" end="16" id="ll31dman" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="15" description="" end="15" id="NU2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Configure the CBUFF FIFO Write threshold over which CBUFF will stall the DMA write to the CBUFF.  Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="8" id="LL31_WR_THRESHOLD" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Configure the CBUFF Read threshold to be Reached before sending the data over CSI2/LVDS and start draining the CBUFF FIFO. Static configuration. This can be programmed to fixed value mentioned in the Programming Model" end="0" id="LL31_RD_THRESHOLD" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CFG_LVDS_MAPPING_LANE0_FMT_0" id="CFG_LVDS_MAPPING_LANE0_FMT_0" offset="0x1B0" width="32">
    
  <bitfield begin="31" description="Lane 0 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 0 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="28" id="CFG_LVDS_MAPPING_LANE0_FMT_0_H" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="Lane 0 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 0 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="24" id="CFG_LVDS_MAPPING_LANE0_FMT_0_G" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="23" description="Lane 0 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 0 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="20" id="CFG_LVDS_MAPPING_LANE0_FMT_0_F" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="Lane 0 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 0 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="16" id="CFG_LVDS_MAPPING_LANE0_FMT_0_E" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="15" description="Lane 0 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 0 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="12" id="CFG_LVDS_MAPPING_LANE0_FMT_0_D" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="Lane 0 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 0 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="8" id="CFG_LVDS_MAPPING_LANE0_FMT_0_C" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="7" description="Lane 0 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 0 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="4" id="CFG_LVDS_MAPPING_LANE0_FMT_0_B" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="Lane 0 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 0 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="0" id="CFG_LVDS_MAPPING_LANE0_FMT_0_A" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="CFG_LVDS_MAPPING_LANE1_FMT_0" id="CFG_LVDS_MAPPING_LANE1_FMT_0" offset="0x1B4" width="32">
    
  <bitfield begin="31" description="Lane 1 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 1 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="28" id="CFG_LVDS_MAPPING_LANE1_FMT_0_H" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="Lane 1 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 1 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="24" id="CFG_LVDS_MAPPING_LANE1_FMT_0_G" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="23" description="Lane 1 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 1 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="20" id="CFG_LVDS_MAPPING_LANE1_FMT_0_F" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="Lane 1 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 1 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="16" id="CFG_LVDS_MAPPING_LANE1_FMT_0_E" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="15" description="Lane 1 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 1 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="12" id="CFG_LVDS_MAPPING_LANE1_FMT_0_D" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="Lane 1 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 1 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="8" id="CFG_LVDS_MAPPING_LANE1_FMT_0_C" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="7" description="Lane 1 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 1 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="4" id="CFG_LVDS_MAPPING_LANE1_FMT_0_B" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="Lane 1 mapping if Format 0 is selected.  Bit [2:0] :  0-7 : Selects the CBUFF unit from the 8 CBUFF units to be sent on Lane 1 Bit 3  0 : Entry is not valid 1 :  Entry is valid Please refer to LVDS Mapping Format in Programming model for more details" end="0" id="CFG_LVDS_MAPPING_LANE1_FMT_0_A" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="CFG_LVDS_MAPPING_LANE2_FMT_0" id="CFG_LVDS_MAPPING_LANE2_FMT_0" offset="0x1B8" width="32">
    
  <bitfield begin="31" description="Please refer to LVDS Mapping Format section for confiuration details" end="28" id="CFG_LVDS_MAPPING_LANE2_FMT_0_H" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="Please refer to LVDS Mapping Format section for confiuration details" end="24" id="CFG_LVDS_MAPPING_LANE2_FMT_0_G" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="23" description="Please refer to LVDS Mapping Format section for confiuration details" end="20" id="CFG_LVDS_MAPPING_LANE2_FMT_0_F" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="Please refer to LVDS Mapping Format section for confiuration details" end="16" id="CFG_LVDS_MAPPING_LANE2_FMT_0_E" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="15" description="Please refer to LVDS Mapping Format section for confiuration details" end="12" id="CFG_LVDS_MAPPING_LANE2_FMT_0_D" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="Please refer to LVDS Mapping Format section for confiuration details" end="8" id="CFG_LVDS_MAPPING_LANE2_FMT_0_C" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="7" description="Please refer to LVDS Mapping Format section for confiuration details" end="4" id="CFG_LVDS_MAPPING_LANE2_FMT_0_B" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="Please refer to LVDS Mapping Format section for confiuration details" end="0" id="CFG_LVDS_MAPPING_LANE2_FMT_0_A" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="CFG_LVDS_MAPPING_LANE3_FMT_0" id="CFG_LVDS_MAPPING_LANE3_FMT_0" offset="0x1BC" width="32">
    
  <bitfield begin="31" description="Please refer to LVDS Mapping Format section for confiuration details" end="28" id="CFG_LVDS_MAPPING_LANE3_FMT_0_H" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="Please refer to LVDS Mapping Format section for confiuration details" end="24" id="CFG_LVDS_MAPPING_LANE3_FMT_0_G" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="23" description="Please refer to LVDS Mapping Format section for confiuration details" end="20" id="CFG_LVDS_MAPPING_LANE3_FMT_0_F" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="Please refer to LVDS Mapping Format section for confiuration details" end="16" id="CFG_LVDS_MAPPING_LANE3_FMT_0_E" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="15" description="Please refer to LVDS Mapping Format section for confiuration details" end="12" id="CFG_LVDS_MAPPING_LANE3_FMT_0_D" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="Please refer to LVDS Mapping Format section for confiuration details" end="8" id="CFG_LVDS_MAPPING_LANE3_FMT_0_C" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="7" description="Please refer to LVDS Mapping Format section for confiuration details" end="4" id="CFG_LVDS_MAPPING_LANE3_FMT_0_B" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="Please refer to LVDS Mapping Format section for confiuration details" end="0" id="CFG_LVDS_MAPPING_LANE3_FMT_0_A" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="CFG_LVDS_MAPPING_LANE0_FMT_1" id="CFG_LVDS_MAPPING_LANE0_FMT_1" offset="0x1C0" width="32">
    
  <bitfield begin="31" description="Please refer to LVDS Mapping Format section for confiuration details" end="28" id="CFG_LVDS_MAPPING_LANE0_FMT_1_H" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="Please refer to LVDS Mapping Format section for confiuration details" end="24" id="CFG_LVDS_MAPPING_LANE0_FMT_1_G" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="23" description="Please refer to LVDS Mapping Format section for confiuration details" end="20" id="CFG_LVDS_MAPPING_LANE0_FMT_1_F" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="Please refer to LVDS Mapping Format section for confiuration details" end="16" id="CFG_LVDS_MAPPING_LANE0_FMT_1_E" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="15" description="Please refer to LVDS Mapping Format section for confiuration details" end="12" id="CFG_LVDS_MAPPING_LANE0_FMT_1_D" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="Please refer to LVDS Mapping Format section for confiuration details" end="8" id="CFG_LVDS_MAPPING_LANE0_FMT_1_C" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="7" description="Please refer to LVDS Mapping Format section for confiuration details" end="4" id="CFG_LVDS_MAPPING_LANE0_FMT_1_B" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="Please refer to LVDS Mapping Format section for confiuration details" end="0" id="CFG_LVDS_MAPPING_LANE0_FMT_1_A" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="CFG_LVDS_MAPPING_LANE1_FMT_1" id="CFG_LVDS_MAPPING_LANE1_FMT_1" offset="0x1C4" width="32">
    
  <bitfield begin="31" description="Please refer to LVDS Mapping Format section for confiuration details" end="28" id="CFG_LVDS_MAPPING_LANE1_FMT_1_H" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="Please refer to LVDS Mapping Format section for confiuration details" end="24" id="CFG_LVDS_MAPPING_LANE1_FMT_1_G" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="23" description="Please refer to LVDS Mapping Format section for confiuration details" end="20" id="CFG_LVDS_MAPPING_LANE1_FMT_1_F" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="Please refer to LVDS Mapping Format section for confiuration details" end="16" id="CFG_LVDS_MAPPING_LANE1_FMT_1_E" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="15" description="Please refer to LVDS Mapping Format section for confiuration details" end="12" id="CFG_LVDS_MAPPING_LANE1_FMT_1_D" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="Please refer to LVDS Mapping Format section for confiuration details" end="8" id="CFG_LVDS_MAPPING_LANE1_FMT_1_C" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="7" description="Please refer to LVDS Mapping Format section for confiuration details" end="4" id="CFG_LVDS_MAPPING_LANE1_FMT_1_B" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="Please refer to LVDS Mapping Format section for confiuration details" end="0" id="CFG_LVDS_MAPPING_LANE1_FMT_1_A" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="CFG_LVDS_MAPPING_LANE2_FMT_1" id="CFG_LVDS_MAPPING_LANE2_FMT_1" offset="0x1C8" width="32">
    
  <bitfield begin="31" description="Please refer to LVDS Mapping Format section for confiuration details" end="28" id="CFG_LVDS_MAPPING_LANE2_FMT_1_H" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="Please refer to LVDS Mapping Format section for confiuration details" end="24" id="CFG_LVDS_MAPPING_LANE2_FMT_1_G" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="23" description="Please refer to LVDS Mapping Format section for confiuration details" end="20" id="CFG_LVDS_MAPPING_LANE2_FMT_1_F" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="Please refer to LVDS Mapping Format section for confiuration details" end="16" id="CFG_LVDS_MAPPING_LANE2_FMT_1_E" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="15" description="Please refer to LVDS Mapping Format section for confiuration details" end="12" id="CFG_LVDS_MAPPING_LANE2_FMT_1_D" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="Please refer to LVDS Mapping Format section for confiuration details" end="8" id="CFG_LVDS_MAPPING_LANE2_FMT_1_C" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="7" description="Please refer to LVDS Mapping Format section for confiuration details" end="4" id="CFG_LVDS_MAPPING_LANE2_FMT_1_B" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="Please refer to LVDS Mapping Format section for confiuration details" end="0" id="CFG_LVDS_MAPPING_LANE2_FMT_1_A" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="CFG_LVDS_MAPPING_LANE3_FMT_1" id="CFG_LVDS_MAPPING_LANE3_FMT_1" offset="0x1CC" width="32">
    
  <bitfield begin="31" description="Please refer to LVDS Mapping Format section for confiuration details" end="28" id="CFG_LVDS_MAPPING_LANE3_FMT_1_H" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="27" description="Please refer to LVDS Mapping Format section for confiuration details" end="24" id="CFG_LVDS_MAPPING_LANE3_FMT_1_G" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="23" description="Please refer to LVDS Mapping Format section for confiuration details" end="20" id="CFG_LVDS_MAPPING_LANE3_FMT_1_F" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="Please refer to LVDS Mapping Format section for confiuration details" end="16" id="CFG_LVDS_MAPPING_LANE3_FMT_1_E" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="15" description="Please refer to LVDS Mapping Format section for confiuration details" end="12" id="CFG_LVDS_MAPPING_LANE3_FMT_1_D" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="Please refer to LVDS Mapping Format section for confiuration details" end="8" id="CFG_LVDS_MAPPING_LANE3_FMT_1_C" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="7" description="Please refer to LVDS Mapping Format section for confiuration details" end="4" id="CFG_LVDS_MAPPING_LANE3_FMT_1_B" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="Please refer to LVDS Mapping Format section for confiuration details" end="0" id="CFG_LVDS_MAPPING_LANE3_FMT_1_A" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="CFG_LVDS_GEN_0" id="CFG_LVDS_GEN_0" offset="0x1D0" width="32">
    
  <bitfield begin="31" description="LVDS Clock config.   1 : Clock alignment enabled Others : Internal clock alignment not enabled This needs to be set to 0x1 for correct functionality" end="30" id="cpz" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="29" description="TI Internal  CFG_LASTPULSE_EN" end="29" id="cblpen" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="LVDS Frame CRC 0 : CRC is not sent at the end of LVDS Frame 1 : CRC is sent at the end of the LVDS Frame" end="28" id="cbcrcen" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="LVDS FIFO Initial Threshold. This is a Static configuration and sould be set to a fixed value as mention in the Programming model" end="24" id="cfdly" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="23" description="1 : Data is sent out on the LVDS lane MSB first 0 : Data  is sent out on the LVDS lane LSB first" end="23" id="cmsbf" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="0 : When a new chirp is starting, align first sample start to negedge of DDR clock. 1 : When a new chirp is starting, align first sample start to posedge of DDR clock (recommended)" end="22" id="cpossel" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="TI Internal feature.  CFG_LVDS_CLK_DIV" end="16" id="cckdiv" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="15" description=" TRM Description : 0 : DDR mode clock mux 1 : SDR mode clock mux  TI Restricted Description : CFG_LVDS_CLK_SEL1 0-> Use div-by-2 (Q2 path ) 1 -> Used for direct (Q1 path) " end="15" id="cclksel1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="TI Internal feature.  CFG_LVDS_CLK_SEL (between div-by-N and CLK_HSI_DIG) 1 -> CLK_HSI_DIG; 0 - through div-by-N (N is programmed in CFG_LVDS_CLK_DIV)" end="14" id="cclksel" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="TI Internal feature.  CFG_K_CHAR_SEL" end="12" id="ckchar" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="11" description="TRM Description : As per alignment  TI Restricted Description : 0 : Regular operation 1 : Continuous Streaming Mode Enabled  (Not supported internally also in AR16xx)" end="11" id="ccsmen" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Bit Clock Mode  0 : SDR clocking mode  1 : DDR clocking mode" end="10" id="CFG_BIT_CLK_MODE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="TI Internal feature. Reserved. " end="8" id="CFG_LINE_MODE" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="7" description="TI Internal feature.  CFG_PACK_FORMAT: While packing in 12/14 bit whether to use CSI like packing or general packing." end="7" id="cpkfmt" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="TI Internal feature.  CFG_ALL_CHL_READY_DELAY_SEL This bit is added to take of the fast to slow transition in the ADC Buffer. 0 => If the LVDS clock frequency (SDR) is >= 200MHz 1 => If the LVDS clock frequency (SDR) is &lt; 200MHz" end="6" id="cacdsel" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="TI Internal feature.  0 : Regular operation 1: TC2MODE Enable (Not supported internally also in AR16xx)" end="5" id="ctc2en" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="TI Internal Feature. Reserved. For Furture enhancement. Not supported in this version 0 : No encoding 1:  8B10B encoding" end="4" id="CFG_8B10B_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="LVDS only programming : 0 : LVDS Lane 3 is disbaled 1 : LVDS Lane 3 is enabled" end="3" id="CFG_LVDS_LANE3_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="LVDS only programming : 0 : LVDS Lane 2 is disbaled 1 : LVDS Lane 2 is enabled" end="2" id="CFG_LVDS_LANE2_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="LVDS only programming : 0 : LVDS Lane 1 is disbaled 1 : LVDS Lane 1 is enabled" end="1" id="CFG_LVDS_LANE1_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="LVDS only programming : 0 : LVDS Lane 0 is disbaled 1 : LVDS Lane 0 is enabled" end="0" id="CFG_LVDS_LANE0_EN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_LVDS_GEN_1" id="CFG_LVDS_GEN_1" offset="0x1D4" width="32">
    
  <bitfield begin="31" description="RESERVED" end="19" id="NU2" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="TI Internal Feature. 0 : Bit clk is free running 1 : Bit clk is valid only during the valid frame." end="18" id="cgbcen" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="TI Internal Feature. 0 : During IDLE, Frame clock will be 0. Start of the valid sample is indicated by the rise edge 1 : During IDLE. Frame clock will be 1. Start of the valid sample is indicated by the fall edge. " end="17" id="cfcpol" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="TI Internal feature. Extend the Single Ended Frame Valid  When the frame_valid is used as a single ended signal, then make this 1.  0 : Regular Operation. Frame Valid will exactly match with the valid data. 1 : The frame_valid would start early by about 10 lvds_clk (internal) and would extend beyond by 10 lvds_clk (internal) after the end of the frame " end="16" id="clfven" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="TI Internal feature. This is used when Test Pattern Generation Enabled is enabled. 0 :Incremental pattern - For Lane 3" end="14" id="ctpsel3" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="13" description="TI Internal feature. This is used when Test Pattern Generation Enabled is enabled. 0 :Incremental pattern - For Lane 2" end="12" id="ctpsel2" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="11" description="TI Internal feature. This is used when Test Pattern Generation Enabled is enabled. 0 :Incremental pattern - For Lane 1" end="10" id="ctpsel1" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="9" description="TI Internal feature. This is used when Test Pattern Generation Enabled is enabled. 0 :Incremental pattern - For Lane 0" end="8" id="ctpsel0" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="7" description="RESERVED" end="7" id="NU1" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="TI Internal feature. Configure the skew delay in terms on number of cycles " end="4" id="ctiddly" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="3" description="" end="3" id="NU3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="LVDS Only Programming:  0 : Regular Operation 1 : Enable 3Ch-3Lane mode in LVDS. Refer to Programming model for more details" end="2" id="c3c3l" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="TI Internal feature. Configure the clock inversion during SDR mode. 0 : No inversion 1 : Inversion" end="1" id="csdrinv" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="TI Internal feature. 0 : Regular Operation 1 : LVDS Testpattern Enable" end="0" id="ctpen" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CFG_LVDS_GEN_2" id="CFG_LVDS_GEN_2" offset="0x1D8" width="32">
    
  <bitfield begin="31" description="CFG_LVDS_GEN_2[0]: Configure LSB/MSB first for CRC. This feature is supported only when the field CFG_LVDS_GEN_0[28] is set to 1 0 -> The calculated value of 32-bit Ethernet polynomial CRC is swapped and sent out, clear this bit if data is set to LSB first (CFG_LVDS_GEN_0[23]=0) but CRC should be MSB first or vice-versa 1 -> The calculated value of 32-bit Ethernet polynomial CRC is sent out without swapping, set this bit if both data and CRC should have same format (LSB/MSB first)  CFG_LVDS_GEN_2[1]: Configure value of frame clock during inter frame period 0 -> Frame clock is held low 1 -> Frame clock is held high  CFG_LVDS_GEN_2[2]: Configure frame clock period. This feature is supported only when the field CFG_LVDS_GEN_0[28] is set to 1 0 -> 32-bit CRC is transmitted as single packet with frame clock set to 16h16l (16 high 16 low) configuration 1 -> 32-bit CRC is transmitted as two packets with frame clock set to 8h8l (8 high 8 low) configuration for each packet  CFG_LVDS_GEN_2[3]: Configure bit clock during inter frame period 0 -> Bit clock toggles during inter frame period 1 -> Bit clock does not toggle during inter frame period, the value of bit clock is held low This feature is supported  when DDR clock is selected (CFG_LVDS_GEN_0[10]=1) and  first data sample is driven on posedge of DDR clock (CFG_LVDS_GEN_0[22]=1)   CFG_LVDS_GEN_2[4]: Configure CRC inversion. This feature is supported only when the field CFG_LVDS_GEN_0[28] is set to 1 0 -> The calculated value of 32-bit Ethernet polynomial CRC is inverted and sent out 1 -> The calculated value of 32-bit Ethernet polynomial CRC is sent out without inversion  CFG_LVDS_GEN_2[5]: Enable/disable the calibration mode, in this mode frame clock will follow data lane[0] 0 -> Calibration mode is disabled 1 -> Calibration mode is enabled " end="0" id="CFG_LVDS_GEN_2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_MASK_REG0" id="CFG_MASK_REG0" offset="0x1DC" width="32">
    
  <bitfield begin="31" description="Mask Register field corresponding to STAT_CBUFF_REG0. Refer STAT_CBUFF_REG0 for bitwise mapping. 0 : Event is unmasked and will cause an interrupt on occuruence 1 : Event is masked. No interrupt will be generated on occurrence" end="0" id="CFG_MASK_REG0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_MASK_REG1" id="CFG_MASK_REG1" offset="0x1E0" width="32">
    
  <bitfield begin="31" description="Mask Register field corresponding to STAT_CBUFF_REG1. Refer STAT_CBUFF_REG1 for bitwise mapping. 0 : Event is unmasked and will cause an interrupt on occuruence 1 : Event is masked. No interrupt will be generated on occurrence" end="0" id="CFG_MASK_REG1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_MASK_REG2" id="CFG_MASK_REG2" offset="0x1E4" width="32">
    
  <bitfield begin="31" description="Mask Register field corresponding to STAT_LVDS_REG0. Refer STAT_LVDS_REG0 for bitwise mapping. 0 : Event is unmasked and will cause an interrupt on occuruence 1 : Event is masked. No interrupt will be generated on occurrence" end="0" id="CFG_MASK_REG2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CFG_MASK_REG3" id="CFG_MASK_REG3" offset="0x1E8" width="32">
    
  <bitfield begin="31" description="RESERVED" end="0" id="CFG_MASK_REG3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="STAT_CBUFF_REG0" id="STAT_CBUFF_REG0" offset="0x1EC" width="32">
    
  <bitfield begin="31" description="Reseved for future enhancement" end="13" id="STAT_CBUFF_REG0_OTHERS" rwaccess="R" width="19"></bitfield>
    
  <bitfield begin="12" description="Indicates that CBUFF has completed sending out data for the current Frame" end="12" id="S_FRAME_DONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="11" description="Indicates that CBUFF has completed sending out data for the current Chirp " end="11" id="S_CHIRP_DONE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="TI Internal Feature. Debug only. Current Linked list index. " end="6" id="S_LL_INDEX" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="5" description="TI Internal Feature Indicates that the CSI-2 Packet Received is sent to the CBUFF from the Protocol Engine after Long Data Packet" end="5" id="S_CSI_PKT_LP_RCVD_STATE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="TI Internal Feature Indicates that the CSI-2 Packet Received is sent to the CBUFF from the Protocol Engine after Hsync End Packet" end="4" id="S_CSI_PKT_HE_RCVD_STATE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="TI Internal Feature Indicates that the CSI-2 Packet Received is sent to the CBUFF from the Protocol Engine after Hsync Start Packet" end="3" id="S_CSI_PKT_HS_RCVD_STATE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="TI Internal Feature Indicates that the CSI-2 Packet Received is sent to the CBUFF from the Protocol Engine after Vsync End Packet" end="2" id="S_CSI_PKT_VE_RCVD_STATE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="TI Internal Feature Indicates that the CSI-2 Packet Received is sent to the CBUFF from the Protocol Engine after Vsync Start Packet" end="1" id="S_CSI_PKT_VS_RCVD_STATE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="TI Internal Feature Indicates that the CSI-2 Packet Received is sent to the CBUFF from the Protocol Engine" end="0" id="S_CSI_PKT_RCVD" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="STAT_CBUFF_REG1" id="STAT_CBUFF_REG1" offset="0x1F0" width="32">
    
  <bitfield begin="31" description="" end="21" id="S1_UNUSED3" rwaccess="R" width="11"></bitfield>
    
  <bitfield begin="20" description="TI Internal Feature. Debug only. cbuff-fifo_ready - Keep this masked. Not relevant." end="20" id="S_CBFIFO_READY_IN_FSM" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="19" description="TI Internal Feature. Debug only. cbuff-fifo_empty - Keep this masked. Not relevant." end="19" id="S_CBFIFO_EMPTY_IN_FSM" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="TI Internal Feature. Debug only. If the packetReceived arrives at a wrong time. It should NOT be coming while in IDLE state (as no packet was sent before) and in HIBER state (where the next LL group is being evaluated)." end="18" id="S_PKTRCV_ERR" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="17" description="Indicates the FrameStart arrived before CBUFF has completed sending out data for all the Chirps programmed " end="17" id="S_FRAME_ERR" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="16" description="Indicates tha the chirpAvailable from ADCBuffer arrived before CBUFF has completed sending out the previous Chirp data. " end="16" id="S_CHIRP_ERR" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="15" description="RESERVED" end="12" id="S1_UNUSED2" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="11" description="TI Internal Feature. Debug only. CBUFF_FIFO Empty Status – Keep this masked, since full and empty will be normal conditions." end="11" id="S_CBFIFO_EMPTY" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="TI Internal Feature. Debug only. CBUFF_FIFO Full Status – Keep this masked, since full and empty will be normal conditions." end="10" id="S_CBFIFO_FULL" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="9" description="TI Internal Feature. Debug only. CBUFF_FIFO_PUSH_ERROR" end="9" id="S_CBPUSH_ERR" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="TI Internal Feature. Debug only. CBUFF_FIFO_POP_ERROR" end="8" id="S_CBPOP_ERR" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="RESERVED" end="3" id="S1_UNUSED1" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="2" description="TI Internal Feature. Debug only. LCL_FIFO_PUSH_ERROR" end="2" id="S_LCLPUSH_ERR" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="TI Internal Feature. Debug only. LCL_FIFO_POP_ERROR" end="1" id="S_LCLPOP_ERR" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="TI Internal Feature. Debug only. LCL_FIFO_FSM_ERROR" end="0" id="S_LCLFSM_ERR" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="STAT_CBUFF_REG2" id="STAT_CBUFF_REG2" offset="0x1F4" width="32">
    
  <bitfield begin="31" description="RESERVED. This does not have coresponding clear or mask" end="0" id="STAT_CBUFF_REG2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="STAT_CBUFF_REG3" id="STAT_CBUFF_REG3" offset="0x1F8" width="32">
    
  <bitfield begin="31" description="RESERVED. This does not have coresponding clear or mask" end="0" id="STAT_CBUFF_REG3" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="STAT_LVDS_REG0" id="STAT_LVDS_REG0" offset="0x1FC" width="32">
    
  <bitfield begin="31" description="TI Internal Feature. Debug only. Clr is CLR_LVDS_REG0 and MASK is CFG_MASK_REG2 FSM_STAT_CODE: [3:0] is for Ch0, [7:4] is for Ch1, [11:8] is for Ch2, [15:12] is for ch3 ASYNC_FIFO_STATUS: [19:16] is for Ch0, [23:20] is for Ch1, [27:24] is for Ch2, [32:28] is for ch3 FSM_STATE_CODE : Using this the states can be decoded. ASYNC_FIFO_STATUS: 0 - POP_ERROR; 1 - PUSH_ERROR; 2- POP_EMPTY; 3 - PUSH_FULL. Set the mask for POP_EMPTY and PUSH_FULL. These are normal conditions and will keep happening and need not generate any interrupt" end="0" id="STAT_LVDS_REG0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="STAT_LVDS_REG1" id="STAT_LVDS_REG1" offset="0x200" width="32">
    
  <bitfield begin="31" description="RESERVED" end="0" id="STAT_LVDS_REG1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="STAT_LVDS_REG2" id="STAT_LVDS_REG2" offset="0x204" width="32">
    
  <bitfield begin="31" description="RESERVED" end="0" id="STAT_LVDS_REG2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="STAT_LVDS_REG3" id="STAT_LVDS_REG3" offset="0x208" width="32">
    
  <bitfield begin="31" description="RESERVED" end="0" id="STAT_LVDS_REG3" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="CLR_CBUFF_REG0" id="CLR_CBUFF_REG0" offset="0x20C" width="32">
    
  <bitfield begin="31" description="TI Internal Feature.Clear Register field corresponding to STAT_CBUFF_REG0. Write 0x1 to Clear the field" end="13" id="CLR_CBUFF_REG0_OTHERS" rwaccess="" width="19"></bitfield>
    
  <bitfield begin="12" description="Clear Register field corresponding to STAT_CBUFF_REG0. Write 0x1 to Clear the field" end="12" id="C_FRAME_DONE" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="11" description="Clear Register field corresponding to STAT_CBUFF_REG0. Write 0x1 to Clear the field" end="11" id="C_CHIRP_DONE" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="10" description="TI Internal Feature.Clear Register field corresponding to STAT_CBUFF_REG0. Write 0x1 to Clear the field" end="6" id="C_LL_INDEX" rwaccess="" width="5"></bitfield>
    
  <bitfield begin="5" description="TI Internal Feature.Clear Register field corresponding to STAT_CBUFF_REG0. Write 0x1 to Clear the field" end="5" id="C_CSI_PKT_LP_RCVD_STATE" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="4" description="TI Internal Feature.Clear Register field corresponding to STAT_CBUFF_REG0. Write 0x1 to Clear the field" end="4" id="C_CSI_PKT_HE_RCVD_STATE" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="3" description="TI Internal Feature.Clear Register field corresponding to STAT_CBUFF_REG0. Write 0x1 to Clear the field" end="3" id="C_CSI_PKT_HS_RCVD_STATE" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="2" description="TI Internal Feature.Clear Register field corresponding to STAT_CBUFF_REG0. Write 0x1 to Clear the field" end="2" id="C_CSI_PKT_VE_RCVD_STATE" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="1" description="TI Internal Feature.Clear Register field corresponding to STAT_CBUFF_REG0. Write 0x1 to Clear the field" end="1" id="C_CSI_PKT_VS_RCVD_STATE" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="0" description="TI Internal Feature. Clear Register field corresponding to STAT_CBUFF_REG0. Write 0x1 to Clear the field" end="0" id="C_CSI_PKT_RCVD" rwaccess="" width="1"></bitfield>
  </register>
  
  
  <register acronym="CLR_CBUFF_REG1" id="CLR_CBUFF_REG1" offset="0x210" width="32">
    
  <bitfield begin="31" description="TI Internal Feature.Clear Register field corresponding to STAT_CBUFF_REG1. Write 0x1 to Clear the field" end="0" id="CLR_CBUFF_REG1" rwaccess="" width="32"></bitfield>
  </register>
  
  
  <register acronym="CLR_LVDS_REG0" id="CLR_LVDS_REG0" offset="0x214" width="32">
    
  <bitfield begin="31" description="TI Internal Feature.Clear Register field corresponding to STAT_LVDS_REG0. Write 0x1 to Clear the field" end="0" id="CLR_LVDS_REG0" rwaccess="" width="32"></bitfield>
  </register>
  
  
  <register acronym="CLR_LVDS_REG1" id="CLR_LVDS_REG1" offset="0x218" width="32">
    
  <bitfield begin="31" description="RESERVED" end="0" id="CLR_LVDS_REG1" rwaccess="" width="32"></bitfield>
  </register>
  
  
  <register acronym="STAT_CBUFF_ECC_REG" id="STAT_CBUFF_ECC_REG" offset="0x21C" width="32">
    
  <bitfield begin="31" description="" end="10" id="NU2" rwaccess="R" width="22"></bitfield>
    
  <bitfield begin="9" description="0 : No Double bit error 1 : Indicates a double bit error has occurred" end="9" id="seccdbe" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="0 : No Single bit error 1 : Indicates a single bit error has occurred" end="8" id="seccsbe" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="" end="6" id="NU1" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="6-bit address where the ECC error occurred. It is valid when either seccsbe or seccdbe is set. If none of them is set, then the addr does not mean anything." end="0" id="seccadd" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="MASK_CBUFF_ECC_REG" id="MASK_CBUFF_ECC_REG" offset="0x220" width="32">
    
  <bitfield begin="31" description="" end="10" id="NU2" rwaccess="R" width="22"></bitfield>
    
  <bitfield begin="9" description="0 : Double bit error indications are unmasked 1 : Double bit error indications are Masked" end="9" id="meccdbe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="0 : Single bit error indications are unmasked 1 : Single bit error indications are Masked" end="8" id="meccsbe" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="" end="0" id="NU1" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CLR_CBUFF_ECC_REG" id="CLR_CBUFF_ECC_REG" offset="0x224" width="32">
    
  <bitfield begin="31" description="" end="10" id="NU2" rwaccess="R" width="22"></bitfield>
    
  <bitfield begin="9" description="Clear Register field corresponding to STAT_CBUFF_ECC. Write 0x1 to Clear the field" end="9" id="ceccdbe" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="8" description="Clear Register field corresponding to STAT_CBUFF_ECC. Write 0x1 to Clear the field" end="8" id="ceccsbe" rwaccess="" width="1"></bitfield>
    
  <bitfield begin="7" description="" end="1" id="NU1" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="0" description="Clear Register field corresponding to STAT_CBUFF_ECC. Write 0x1 to Clear the field" end="0" id="ceccadd" rwaccess="" width="1"></bitfield>
  </register>
  
  
  <register acronym="STAT_SAFETY" id="STAT_SAFETY" offset="0x228" width="32">
    
  <bitfield begin="31" description="RESERVED" end="9" id="SAF_UNUSED1" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="Safety Error. Indicates tha the chirpAvailable from ADCBuffer arrived before CBUFF has completed sending out the previous Chirp data. " end="8" id="SAF_CHIRP_ERR" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="TRM Desccription : Indicates a CRC error between ADCBuffer and CBUFF. 0 : No Error Non Zero  : Error  TI Restricted Description :  0 - CRC for col-0 - [15:0], 1 - CRC for col-1 [31:16]; 2 - CRC for col-2 [47:32]; 3 - CRC for col-3 [63:48] 4 - CRC for col-4 - [79:64]; 5 - CRC for col-5 [95:80];  6 - CRC for col-6 [111 :96 ; 7 - for col-7 [127:112]" end="0" id="SAF_CRC" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MASK_SAFETY" id="MASK_SAFETY" offset="0x22C" width="32">
    
  <bitfield begin="31" description="Mask Register field corresponding to STAT_SAFETY. Refer STAT_SAFETY for bitwise mapping. 0 : Event is unmasked and will cause an interrupt on occuruence 1 : Event is masked. No interrupt will be generated on occurrence" end="0" id="MASK_SAFETY" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="CLR_SAFETY" id="CLR_SAFETY" offset="0x230" width="32">
    
  <bitfield begin="31" description="Clear Register field corresponding to STAT_SAFETY. Write 0x1 to Clear the field" end="0" id="CLR_SAFETY" rwaccess="" width="32"></bitfield>
  </register>
</module>
