

<module description="" id="DSS_RCM">
  
  
  <register acronym="PID" description=" PID register " id="PID" offset="0x0" width="32">
    
  <bitfield begin="31" description="" end="16" id="" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="" end="11" id="" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="" end="8" id="" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="" end="6" id="" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="HW_REG0" description="" id="HW_REG0" offset="0x4" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG1" description="" id="HW_REG1" offset="0x8" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PREVIOUS_NAME" description="" id="PREVIOUS_NAME" offset="0xC" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG3" description="" id="HW_REG3" offset="0x10" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_CLK_SRC_SEL" description="" id="DSS_HWA_CLK_SRC_SEL" offset="0x90" width="32">
    
  <bitfield begin="2" description="Select line for selecting source clock for DSS HWA.   Data should be loaded as multibit.  Write 3'b000 :  TOPRCM_CR5_CLK  Write 3'b111 : TOPRCM_SYS_CLK" end="0" id="clksrcsel" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_CLK_GATE" description="" id="DSS_HWA_CLK_GATE" offset="0xBC" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  DSS HWA  Data should be loaded as multibit.   Write 3'b000 : Clock is ungated   Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_CBUFF_CLK_GATE" description="" id="DSS_CBUFF_CLK_GATE" offset="0xD0" width="32">
    
  <bitfield begin="2" description="Clock gating config for  DSS CBUFF Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_CLK_STATUS" description="" id="DSS_HWA_CLK_STATUS" offset="0xD8" width="32">
    
  <bitfield begin="1" description="Status shows the source clock slected for DSS HWA Clock" end="0" id="clkinuse" rwaccess="R" width="2"></bitfield>
  </register>
  
  
  <register acronym="DSS_MCRC_RST_CTRL" description="" id="DSS_MCRC_RST_CTRL" offset="0x10C" width="32">
    
  <bitfield begin="2" description="This feature is for debug purpose only. Software needs to ensure the state of Device/IP before configuring. Writing 3'b11 will assert reset for DSS MCRC" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA0_PD_CTRL" description="" id="DSS_L3_BANKA0_PD_CTRL" offset="0x118" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA1_PD_CTRL" description="" id="DSS_L3_BANKA1_PD_CTRL" offset="0x11C" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array  Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB0_PD_CTRL" description="" id="DSS_L3_BANKB0_PD_CTRL" offset="0x128" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB1_PD_CTRL" description="" id="DSS_L3_BANKB1_PD_CTRL" offset="0x12C" width="32">
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_PD_CTRL" description="" id="DSS_HWA_PD_CTRL" offset="0x158" width="32">
    
  <bitfield begin="18" description="SW Control for &lt;IP>_PD_CTRL Power up CRTL1" end="16" id="pgoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="14" description="SW Control for &lt;IP>_PD_CTRL Power up CRTL0" end="12" id="ponin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="8" id="agoodin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="SW Control for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="4" id="aonin" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="SW Control for &lt;IP>_PD_CTRL Isolation" end="0" id="iso" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA0_PD_STATUS" description="" id="DSS_L3_BANKA0_PD_STATUS" offset="0x160" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKA1_PD_STATUS" description="" id="DSS_L3_BANKA1_PD_STATUS" offset="0x164" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB0_PD_STATUS" description="" id="DSS_L3_BANKB0_PD_STATUS" offset="0x170" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_BANKB1_PD_STATUS" description="" id="DSS_L3_BANKB1_PD_STATUS" offset="0x174" width="32">
    
  <bitfield begin="3" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="3" id="agoodin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for sticky control &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="2" id="aonin" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_PD_STATUS" description="" id="DSS_HWA_PD_STATUS" offset="0x1A0" width="32">
    
  <bitfield begin="3" description="Status for &lt;IP>_PD_CTRL Power up CRTL1" end="3" id="pgoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status for &lt;IP>_PD_CTRL Power up CRTL0" end="2" id="ponout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL1" end="1" id="agoodout" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status for &lt;IP>_PD_CTRL Memory Array Power up CRTL0" end="0" id="aonout" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3_PD_CTRL_STICKYBIT" description="" id="DSS_L3_PD_CTRL_STICKYBIT" offset="0x1B0" width="32">
    
  <bitfield begin="2" description="Sticky bit for DSS L3 PD CTRL.  Write 3'b111 to lock the configuration of DSS_L3_BANK*_PD_CTRL.  Once this field is writen, there is no impact of changing the value of aonin and agoodin fields in DSS_L3_BANK*_PD_CTRL registers" end="0" id="set" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_RST_CTRL" description="" id="DSS_HWA_RST_CTRL" offset="0x1C8" width="32">
    
  <bitfield begin="2" description="This register is for Debug Purposes only. Reset control for DSS HWA Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_HWA_RST_CTRL" description="" id="DSS_HWA_RST_CTRL" offset="0x1CC" width="32">
    
  <bitfield begin="2" description="This register is for Debug Purposes only. Reset control for DSS TPCCA Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_EDMA_RST_CTRL" description="" id="DSS_EDMA_RST_CTRL" offset="0x1D8" width="32">
    
  <bitfield begin="6" description="This register is for Debug Purposes only. Reset control for DSS TPTCA1 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="4" id="assert_tc1" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="This register is for Debug Purposes only. Reset control for DSS TPTCA0 Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert_tc0" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_CSI_CLK_GATE" description="" id="DSS_CSI_CLK_GATE" offset="0x1E4" width="32">
    
  <bitfield begin="2" description="Clock gating config for  DSS CSI2-TX Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_IP_CLK_CFG" description="" id="DSS_IP_CLK_CFG" offset="0x1E8" width="32">
    
  <bitfield begin="31" description="IP clock gating configuration bits. Data should be loaded as multibit.  Writing 3'b111 will gate the IP and disable the slave  2:0 - MCRC" end="0" id="gate" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW0" description="" id="HW_SPARE_RW0" offset="0xFD0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW1" description="" id="HW_SPARE_RW1" offset="0xFD4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW2" description="" id="HW_SPARE_RW2" offset="0xFD8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW3" description="" id="HW_SPARE_RW3" offset="0xFDC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO0" description="" id="HW_SPARE_RO0" offset="0xFE0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO1" description="" id="HW_SPARE_RO1" offset="0xFE4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO2" description="" id="HW_SPARE_RO2" offset="0xFE8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO3" description="" id="HW_SPARE_RO3" offset="0xFEC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro3" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_WPH" description="" id="HW_SPARE_WPH" offset="0xFF0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_wph" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_REC" description="" id="HW_SPARE_REC" offset="0xFF4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="31" id="hw_spare_rec31" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved for HW R&amp;D" end="30" id="hw_spare_rec30" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Reserved for HW R&amp;D" end="29" id="hw_spare_rec29" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Reserved for HW R&amp;D" end="28" id="hw_spare_rec28" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="Reserved for HW R&amp;D" end="27" id="hw_spare_rec27" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="Reserved for HW R&amp;D" end="26" id="hw_spare_rec26" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Reserved for HW R&amp;D" end="25" id="hw_spare_rec25" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Reserved for HW R&amp;D" end="24" id="hw_spare_rec24" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved for HW R&amp;D" end="23" id="hw_spare_rec23" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Reserved for HW R&amp;D" end="22" id="hw_spare_rec22" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Reserved for HW R&amp;D" end="21" id="hw_spare_rec21" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Reserved for HW R&amp;D" end="20" id="hw_spare_rec20" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Reserved for HW R&amp;D" end="19" id="hw_spare_rec19" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Reserved for HW R&amp;D" end="18" id="hw_spare_rec18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Reserved for HW R&amp;D" end="17" id="hw_spare_rec17" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Reserved for HW R&amp;D" end="16" id="hw_spare_rec16" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved for HW R&amp;D" end="15" id="hw_spare_rec15" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Reserved for HW R&amp;D" end="14" id="hw_spare_rec14" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Reserved for HW R&amp;D" end="13" id="hw_spare_rec13" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Reserved for HW R&amp;D" end="12" id="hw_spare_rec12" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Reserved for HW R&amp;D" end="11" id="hw_spare_rec11" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Reserved for HW R&amp;D" end="10" id="hw_spare_rec10" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Reserved for HW R&amp;D" end="9" id="hw_spare_rec9" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Reserved for HW R&amp;D" end="8" id="hw_spare_rec8" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved for HW R&amp;D" end="7" id="hw_spare_rec7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Reserved for HW R&amp;D" end="6" id="hw_spare_rec6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Reserved for HW R&amp;D" end="5" id="hw_spare_rec5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Reserved for HW R&amp;D" end="4" id="hw_spare_rec4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Reserved for HW R&amp;D" end="3" id="hw_spare_rec3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Reserved for HW R&amp;D" end="2" id="hw_spare_rec2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved for HW R&amp;D" end="1" id="hw_spare_rec1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rec0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK0" description="  - KICK0 component " id="LOCK0_KICK0" offset="0x1008" width="32">
    
  <bitfield begin="31" description=" - KICK0 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK1" description="  - KICK1 component " id="LOCK0_KICK1" offset="0x100C" width="32">
    
  <bitfield begin="31" description=" - KICK1 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="intr_raw_status" description=" Interrupt Raw Status/Set Register " id="intr_raw_status" offset="0x1010" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enabled_status_clear" description=" Interrupt Enabled Status/Clear register " id="intr_enabled_status_clear" offset="0x1014" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable" description=" Interrupt Enable register " id="intr_enable" offset="0x1018" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable_clear" description=" Interrupt Enable Clear register " id="intr_enable_clear" offset="0x101C" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="eoi" description=" EOI register " id="eoi" offset="0x1020" width="32">
    
  <bitfield begin="7" description="EOI vector value. Write this with interrupt distribution value in the chip." end="0" id="" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_address" description=" Fault Address register " id="fault_address" offset="0x1024" width="32">
    
  <bitfield begin="31" description="Fault Address." end="0" id="" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="fault_type_status" description=" Fault Type Status register " id="fault_type_status" offset="0x1028" width="32">
    
  <bitfield begin="6" description="Non-secure access." end="6" id="" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="fault_attr_status" description=" Fault Attribute Status register " id="fault_attr_status" offset="0x102C" width="32">
    
  <bitfield begin="31" description="XID." end="20" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Route ID." end="8" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="7" description="Privilege ID." end="0" id="" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_clear" description=" Fault Clear register " id="fault_clear" offset="0x1030" width="32">
    
  <bitfield begin="0" description="Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect." end="0" id="" rwaccess="W" width="1"></bitfield>
  </register>
</module>
