<module name="PRUSS1_PRU0_DEBUG" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="PRUSS_DBG_GPREG0" acronym="PRUSS_DBG_GPREG0" offset="0x0" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 0. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG0" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG1" acronym="PRUSS_DBG_GPREG1" offset="0x4" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 1. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG1" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG2" acronym="PRUSS_DBG_GPREG2" offset="0x8" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 2. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG2" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG3" acronym="PRUSS_DBG_GPREG3" offset="0xC" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 3. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG3" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG4" acronym="PRUSS_DBG_GPREG4" offset="0x10" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 4. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG4" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG5" acronym="PRUSS_DBG_GPREG5" offset="0x14" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 5. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG5" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG6" acronym="PRUSS_DBG_GPREG6" offset="0x18" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 6. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG6" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG7" acronym="PRUSS_DBG_GPREG7" offset="0x1C" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 7. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG7" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG8" acronym="PRUSS_DBG_GPREG8" offset="0x20" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 8. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG8" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG9" acronym="PRUSS_DBG_GPREG9" offset="0x24" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 9. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG9" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG10" acronym="PRUSS_DBG_GPREG10" offset="0x28" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 10. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG10" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG11" acronym="PRUSS_DBG_GPREG11" offset="0x2C" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 11. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG11" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG12" acronym="PRUSS_DBG_GPREG12" offset="0x30" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 12. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG12" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG13" acronym="PRUSS_DBG_GPREG13" offset="0x34" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 13. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG13" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG14" acronym="PRUSS_DBG_GPREG14" offset="0x38" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 14. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG14" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG15" acronym="PRUSS_DBG_GPREG15" offset="0x3C" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 15. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG15" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG16" acronym="PRUSS_DBG_GPREG16" offset="0x40" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 16. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG16" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG17" acronym="PRUSS_DBG_GPREG17" offset="0x44" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 17. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG17" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG18" acronym="PRUSS_DBG_GPREG18" offset="0x48" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 18. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG18" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG19" acronym="PRUSS_DBG_GPREG19" offset="0x4C" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 19. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG19" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG20" acronym="PRUSS_DBG_GPREG20" offset="0x50" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 20. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG20" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG21" acronym="PRUSS_DBG_GPREG21" offset="0x54" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 21. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG21" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG22" acronym="PRUSS_DBG_GPREG22" offset="0x58" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 22. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG22" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG23" acronym="PRUSS_DBG_GPREG23" offset="0x5C" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 23. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG23" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG24" acronym="PRUSS_DBG_GPREG24" offset="0x60" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 24. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG24" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG25" acronym="PRUSS_DBG_GPREG25" offset="0x64" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 25. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG25" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG26" acronym="PRUSS_DBG_GPREG26" offset="0x68" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 26. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG26" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG27" acronym="PRUSS_DBG_GPREG27" offset="0x6C" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 27. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG27" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG28" acronym="PRUSS_DBG_GPREG28" offset="0x70" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 28. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG28" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG29" acronym="PRUSS_DBG_GPREG29" offset="0x74" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 29. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG29" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG30" acronym="PRUSS_DBG_GPREG30" offset="0x78" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 30. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG30" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_GPREG31" acronym="PRUSS_DBG_GPREG31" offset="0x7C" width="32" description="DEBUG PRU GENERAL PURPOSE REGISTER 31. This register allows an external agent to debug the PRU while it is disabled. Reading or writing to these registers will have the same effect as a read or write to these registers from an internal instruction in the PRU. For R30, this includes generation of the pulse outputs whenever the register is written.">
    <bitfield id="GP_REG31" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal GP Register n: Reading / writing this field directly inspects/modifies the corresponding internal register in the PRU internal regfile" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_DBG_CT_REG0" acronym="PRUSS_DBG_CT_REG0" offset="0x80" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 0. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG0" width="32" begin="31" end="0" resetval="0x02 0000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG1" acronym="PRUSS_DBG_CT_REG1" offset="0x84" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 1. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG1" width="32" begin="31" end="0" resetval="0x4804 0000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG2" acronym="PRUSS_DBG_CT_REG2" offset="0x88" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 2. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG2" width="32" begin="31" end="0" resetval="0x4802 A000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG3" acronym="PRUSS_DBG_CT_REG3" offset="0x8C" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 3. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG3" width="32" begin="31" end="0" resetval="0x03 0000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG4" acronym="PRUSS_DBG_CT_REG4" offset="0x90" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 4. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG4" width="32" begin="31" end="0" resetval="0x02 6000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG5" acronym="PRUSS_DBG_CT_REG5" offset="0x94" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 5. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG5" width="32" begin="31" end="0" resetval="0x4806 0000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG6" acronym="PRUSS_DBG_CT_REG6" offset="0x98" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 6. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG6" width="32" begin="31" end="0" resetval="0x4803 0000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG7" acronym="PRUSS_DBG_CT_REG7" offset="0x9C" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 7. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG7" width="32" begin="31" end="0" resetval="0x02 8000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG8" acronym="PRUSS_DBG_CT_REG8" offset="0xA0" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 8. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG8" width="32" begin="31" end="0" resetval="0x4600 0000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG9" acronym="PRUSS_DBG_CT_REG9" offset="0xA4" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 9. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG9" width="32" begin="31" end="0" resetval="0x4A10 0000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG10" acronym="PRUSS_DBG_CT_REG10" offset="0xA8" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 10. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG10" width="32" begin="31" end="0" resetval="0x4831 8000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG11" acronym="PRUSS_DBG_CT_REG11" offset="0xAC" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 11. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG11" width="32" begin="31" end="0" resetval="0x4802 2000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG12" acronym="PRUSS_DBG_CT_REG12" offset="0xB0" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 12. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG12" width="32" begin="31" end="0" resetval="0x4802 4000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG13" acronym="PRUSS_DBG_CT_REG13" offset="0xB4" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 13. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG13" width="32" begin="31" end="0" resetval="0x4831 0000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG14" acronym="PRUSS_DBG_CT_REG14" offset="0xB8" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 14. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG14" width="32" begin="31" end="0" resetval="0x481C C000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG15" acronym="PRUSS_DBG_CT_REG15" offset="0xBC" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 15. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG15" width="32" begin="31" end="0" resetval="0x481D 0000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG16" acronym="PRUSS_DBG_CT_REG16" offset="0xC0" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 16. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG16" width="32" begin="31" end="0" resetval="0x481A 0000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG17" acronym="PRUSS_DBG_CT_REG17" offset="0xC4" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 17. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG17" width="32" begin="31" end="0" resetval="0x4819 C000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG18" acronym="PRUSS_DBG_CT_REG18" offset="0xC8" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 18. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG18" width="32" begin="31" end="0" resetval="0x4830 0000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG19" acronym="PRUSS_DBG_CT_REG19" offset="0xCC" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 19. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG19" width="32" begin="31" end="0" resetval="0x4830 2000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG20" acronym="PRUSS_DBG_CT_REG20" offset="0xD0" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 20. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG20" width="32" begin="31" end="0" resetval="0x4830 4000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG21" acronym="PRUSS_DBG_CT_REG21" offset="0xD4" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 21. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG21" width="32" begin="31" end="0" resetval="0x03 2400" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG22" acronym="PRUSS_DBG_CT_REG22" offset="0xD8" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 22. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG22" width="32" begin="31" end="0" resetval="0x480C 8000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG23" acronym="PRUSS_DBG_CT_REG23" offset="0xDC" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 23. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG23" width="32" begin="31" end="0" resetval="0x480C A000" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG24" acronym="PRUSS_DBG_CT_REG24" offset="0xE0" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 24. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG24" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table.This entry is partially programmable through the c24_blk_index in the PRU Control register.The reset value for this Constant Table Entry is 0x00000n00, n=c24_blk_index[3:0]." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG25" acronym="PRUSS_DBG_CT_REG25" offset="0xE4" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 25. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG25" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table.This entry is partially programmable through the c25_blk_index in the PRU Control register.The reset value for this Constant Table Entry is 0x00002n00, n=c25_blk_index[3:0]." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG26" acronym="PRUSS_DBG_CT_REG26" offset="0xE8" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 26. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG26" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table.This entry is partially programmable through the c26_blk_index in the PRU Control register.The reset value for this Constant Table Entry is 0x0002En00, n=c26_blk_index[3:0]." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG27" acronym="PRUSS_DBG_CT_REG27" offset="0xEC" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 27. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG27" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table.This entry is partially programmable through the c27_blk_index in the PRU Control register.The reset value for this Constant Table Entry is 0x00032n00, n=c27_blk_index[3:0]." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG28" acronym="PRUSS_DBG_CT_REG28" offset="0xF0" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 28. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG28" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table.This entry is partially programmable through the c28_pointer in the PRU Control register.The reset value for this Constant Table Entry is 0x00nnnn00, nnnn=c28_pointer[15:0]." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG29" acronym="PRUSS_DBG_CT_REG29" offset="0xF4" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 29. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG29" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table.This entry is partially programmable through the c29_pointer in the PRU Control register.The reset value for this Constant Table Entry is 0x49nnnn00, nnnn=c29_pointer[15:0]." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG30" acronym="PRUSS_DBG_CT_REG30" offset="0xF8" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 30. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG30" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table.This entry is partially programmable through the c30_pointer in the PRU Control register.The reset value for this Constant Table Entry is 0x40nnnn00, nnnn=c30_pointer[15:0]." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_DBG_CT_REG31" acronym="PRUSS_DBG_CT_REG31" offset="0xFC" width="32" description="DEBUG PRU CONSTANTS TABLE ENTRY 31. This register allows an external agent to debug the PRU while it is disabled. Since some of the constants table entries may actually depend on system inputs / and or the internal state of the PRU, these registers are provided to allow an external agent to easily determine the state of the constants table.">
    <bitfield id="CT_REG31" width="32" begin="31" end="0" resetval="0x0" description="PRU Internal Constants Table Entry n: Reading this field directly inspects the corresponding entry in the PRU internal constants table.This entry is partially programmable through the c31_pointer in the PRU Control register.The reset value for this Constant Table Entry is 0x80nnnn00, nnnn=c31_pointer[15:0]." range="" rwaccess="R"/>
  </register>
</module>
