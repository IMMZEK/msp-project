<module name="MCU_NAVSS0_PROXY0_TARGET0_DATA" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="PROXY_CTL_j" acronym="PROXY_CTL_j" offset="0x0" width="32" description="The Proxy Control for the proxy. NOTE: This register must be written only via 32-bit accesses. 64-bit writes are not supported and may result in data loss. Offset = 0h + (j * 1000h); where j = 0h to 3Fh">
    <bitfield id="RESERVED" width="5" begin="31" end="27" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ELSIZE" width="3" begin="26" end="24" resetval="0x0" description="Queue element size. This field is encoded as follows: 0 = 4 bytes 1 = 8 bytes 2 = 16 bytes 3 = 32 bytes 4 = 64 bytes 5 = 128 bytes 6 = 256 bytes 7 = 512 bytes" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="23" end="18" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MODE" width="2" begin="17" end="16" resetval="0x0" description="Proxy Queue Mode that determines how to access the queue. 0h = access the head of the queue 1h = access the tail of the queue 2h = peek access the head of the queue 3h = peek access the tail of the queue. NOT SUPPORTED" range="" rwaccess="RW"/>
    <bitfield id="QUEUE" width="16" begin="15" end="0" resetval="0x0" description="Proxy Queue" range="" rwaccess="RW"/>
  </register>
  <register id="PROXY_STATUS_j" acronym="PROXY_STATUS_j" offset="0x4" width="32" description="The Proxy Status for the proxy. NOTE: This register must be written only via 32-bit accesses. 64-bit writes are not supported and may result in data loss. Offset = 4h + (j * 1000h); where j = 0h to 3Fh">
    <bitfield id="ERROR" width="1" begin="31" end="31" resetval="0x0" description="Proxy Error status" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="31" begin="30" end="0" resetval="0xX" description="" range="" rwaccess="RW"/>
  </register>
  <register id="PROXY_DATA_j_y" acronym="PROXY_DATA_j_y" offset="0x200" width="32" description="The Proxy Data for the proxy, target and channel Offset = 200h + (j * 1000h) + (y * 4h); where j = 0h to 3Fh, y = 0h to 7Fh">
    <bitfield id="VAL" width="32" begin="31" end="0" resetval="0x0" description="Proxy Data" range="" rwaccess="RW"/>
  </register>
</module>
