<module name="A53SS0_CORE0_PMU" acronym="" XML_version="1.0" HW_revision="n/a" description="">
	<register id="APBADDR_PMU_CPU0_PMEVCNTR0_EL0" acronym="APBADDR_PMU_CPU0_PMEVCNTR0_EL0" offset="0x0" width="32" description="Performance Monitors Event Count Register 0">
		<bitfield id="PMEVCNTR0_EL0" width="32" begin="31" end="0" resetval="0x0" description="Event counter n. Value of event counter n, where n is the number of this register and is a number from 0 to 30." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMEVCNTR1_EL0" acronym="APBADDR_PMU_CPU0_PMEVCNTR1_EL0" offset="0x8" width="32" description="Performance Monitors Event Count Register 1">
		<bitfield id="PMEVCNTR1_EL0" width="32" begin="31" end="0" resetval="0x0" description="Event counter n. Value of event counter n, where n is the number of this register and is a number from 0 to 30." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMEVCNTR2_EL0" acronym="APBADDR_PMU_CPU0_PMEVCNTR2_EL0" offset="0x10" width="32" description="Performance Monitors Event Count Register 2">
		<bitfield id="PMEVCNTR2_EL0" width="32" begin="31" end="0" resetval="0x0" description="Event counter n. Value of event counter n, where n is the number of this register and is a number from 0 to 30." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMEVCNTR3_EL0" acronym="APBADDR_PMU_CPU0_PMEVCNTR3_EL0" offset="0x18" width="32" description="Performance Monitors Event Count Register 3">
		<bitfield id="PMEVCNTR3_EL0" width="32" begin="31" end="0" resetval="0x0" description="Event counter n. Value of event counter n, where n is the number of this register and is a number from 0 to 30." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMEVCNTR4_EL0" acronym="APBADDR_PMU_CPU0_PMEVCNTR4_EL0" offset="0x20" width="32" description="Performance Monitors Event Count Register 4">
		<bitfield id="PMEVCNTR4_EL0" width="32" begin="31" end="0" resetval="0x0" description="Event counter n. Value of event counter n, where n is the number of this register and is a number from 0 to 30." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMEVCNTR5_EL0" acronym="APBADDR_PMU_CPU0_PMEVCNTR5_EL0" offset="0x28" width="32" description="Performance Monitors Event Count Register 5">
		<bitfield id="PMEVCNTR5_EL0" width="32" begin="31" end="0" resetval="0x0" description="Event counter n. Value of event counter n, where n is the number of this register and is a number from 0 to 30." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCCNTR_EL0_31_0" acronym="APBADDR_PMU_CPU0_PMCCNTR_EL0_31_0" offset="0xF8" width="32" description="Performance Monitors Cycle Counter (low word)">
		<bitfield id="CCNT" width="32" begin="31" end="0" resetval="0x0" description="Cycle count. Depending on the values of PMCR_EL0.{LC,D}, the cycle count increments in one of the following ways:Every processor clock cycle.Every 64th processor clock cycle.The cycle count can be reset to zero by writing 1 to PMCR_EL0.C." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCCNTR_EL0_63_32" acronym="APBADDR_PMU_CPU0_PMCCNTR_EL0_63_32" offset="0xFC" width="32" description="Performance Monitors Cycle Counter (high word)">
		<bitfield id="CCNT" width="32" begin="31" end="0" resetval="0x0" description="Cycle count. Depending on the values of PMCR_EL0.{LC,D}, the cycle count increments in one of the following ways:Every processor clock cycle.Every 64th processor clock cycle.The cycle count can be reset to zero by writing 1 to PMCR_EL0.C." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMEVTYPER0_EL0" acronym="APBADDR_PMU_CPU0_PMEVTYPER0_EL0" offset="0x400" width="32" description="Performance Monitors Event Type Register 0">
		<bitfield id="P" width="1" begin="31" end="31" resetval="0x0" description="EL1 modes filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit. The possible values of this bit are:       0              Count events in EL1.                          1              Do not count events in EL1.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="U" width="1" begin="30" end="30" resetval="0x0" description="EL0 filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit. The possible values of this bit are:       0              Count events in EL0.                          1              Do not count events in EL0.                   " range="30" rwaccess="R/W"/> 
		<bitfield id="NSK" width="1" begin="29" end="29" resetval="0x0" description="Non-secure kernel modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted." range="29" rwaccess="R/W"/> 
		<bitfield id="NSU" width="1" begin="28" end="28" resetval="0x0" description="Non-secure user modes filtering bit. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted." range="28" rwaccess="R/W"/> 
		<bitfield id="NSH" width="1" begin="27" end="27" resetval="0x0" description="Non-secure Hyp modes filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.       0              Do not count events in EL2.                          1              Count events in EL2.                   " range="27" rwaccess="R/W"/> 
		<bitfield id="M" width="1" begin="26" end="26" resetval="0x0" description="Secure EL3 filtering bit. Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted." range="26" rwaccess="R/W"/> 
		<bitfield id="RES0_PMEVTYPER0_EL0_25_10" width="16" begin="25" end="10" resetval="0x0" description="Reserved, RES0." range="25 - 10" rwaccess="R/W"/> 
		<bitfield id="EVTCOUNT" width="10" begin="9" end="0" resetval="0x0" description="Event to count. The event number of the event that is counted by event counter PMEVCNTR&#60;n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written." range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMEVTYPER1_EL0" acronym="APBADDR_PMU_CPU0_PMEVTYPER1_EL0" offset="0x404" width="32" description="Performance Monitors Event Type Register 1">
		<bitfield id="P" width="1" begin="31" end="31" resetval="0x0" description="EL1 modes filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit. The possible values of this bit are:       0              Count events in EL1.                          1              Do not count events in EL1.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="U" width="1" begin="30" end="30" resetval="0x0" description="EL0 filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit. The possible values of this bit are:       0              Count events in EL0.                          1              Do not count events in EL0.                   " range="30" rwaccess="R/W"/> 
		<bitfield id="NSK" width="1" begin="29" end="29" resetval="0x0" description="Non-secure kernel modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted." range="29" rwaccess="R/W"/> 
		<bitfield id="NSU" width="1" begin="28" end="28" resetval="0x0" description="Non-secure user modes filtering bit. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted." range="28" rwaccess="R/W"/> 
		<bitfield id="NSH" width="1" begin="27" end="27" resetval="0x0" description="Non-secure Hyp modes filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.       0              Do not count events in EL2.                          1              Count events in EL2.                   " range="27" rwaccess="R/W"/> 
		<bitfield id="M" width="1" begin="26" end="26" resetval="0x0" description="Secure EL3 filtering bit. Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted." range="26" rwaccess="R/W"/> 
		<bitfield id="RES0_PMEVTYPER1_EL0_25_10" width="16" begin="25" end="10" resetval="0x0" description="Reserved, RES0." range="25 - 10" rwaccess="R/W"/> 
		<bitfield id="EVTCOUNT" width="10" begin="9" end="0" resetval="0x0" description="Event to count. The event number of the event that is counted by event counter PMEVCNTR&#60;n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written." range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMEVTYPER2_EL0" acronym="APBADDR_PMU_CPU0_PMEVTYPER2_EL0" offset="0x408" width="32" description="Performance Monitors Event Type Register 2">
		<bitfield id="P" width="1" begin="31" end="31" resetval="0x0" description="EL1 modes filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit. The possible values of this bit are:       0              Count events in EL1.                          1              Do not count events in EL1.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="U" width="1" begin="30" end="30" resetval="0x0" description="EL0 filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit. The possible values of this bit are:       0              Count events in EL0.                          1              Do not count events in EL0.                   " range="30" rwaccess="R/W"/> 
		<bitfield id="NSK" width="1" begin="29" end="29" resetval="0x0" description="Non-secure kernel modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted." range="29" rwaccess="R/W"/> 
		<bitfield id="NSU" width="1" begin="28" end="28" resetval="0x0" description="Non-secure user modes filtering bit. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted." range="28" rwaccess="R/W"/> 
		<bitfield id="NSH" width="1" begin="27" end="27" resetval="0x0" description="Non-secure Hyp modes filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.       0              Do not count events in EL2.                          1              Count events in EL2.                   " range="27" rwaccess="R/W"/> 
		<bitfield id="M" width="1" begin="26" end="26" resetval="0x0" description="Secure EL3 filtering bit. Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted." range="26" rwaccess="R/W"/> 
		<bitfield id="RES0_PMEVTYPER2_EL0_25_10" width="16" begin="25" end="10" resetval="0x0" description="Reserved, RES0." range="25 - 10" rwaccess="R/W"/> 
		<bitfield id="EVTCOUNT" width="10" begin="9" end="0" resetval="0x0" description="Event to count. The event number of the event that is counted by event counter PMEVCNTR&#60;n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written." range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMEVTYPER3_EL0" acronym="APBADDR_PMU_CPU0_PMEVTYPER3_EL0" offset="0x40C" width="32" description="Performance Monitors Event Type Register 3">
		<bitfield id="P" width="1" begin="31" end="31" resetval="0x0" description="EL1 modes filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit. The possible values of this bit are:       0              Count events in EL1.                          1              Do not count events in EL1.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="U" width="1" begin="30" end="30" resetval="0x0" description="EL0 filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit. The possible values of this bit are:       0              Count events in EL0.                          1              Do not count events in EL0.                   " range="30" rwaccess="R/W"/> 
		<bitfield id="NSK" width="1" begin="29" end="29" resetval="0x0" description="Non-secure kernel modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted." range="29" rwaccess="R/W"/> 
		<bitfield id="NSU" width="1" begin="28" end="28" resetval="0x0" description="Non-secure user modes filtering bit. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted." range="28" rwaccess="R/W"/> 
		<bitfield id="NSH" width="1" begin="27" end="27" resetval="0x0" description="Non-secure Hyp modes filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.       0              Do not count events in EL2.                          1              Count events in EL2.                   " range="27" rwaccess="R/W"/> 
		<bitfield id="M" width="1" begin="26" end="26" resetval="0x0" description="Secure EL3 filtering bit. Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted." range="26" rwaccess="R/W"/> 
		<bitfield id="RES0_PMEVTYPER3_EL0_25_10" width="16" begin="25" end="10" resetval="0x0" description="Reserved, RES0." range="25 - 10" rwaccess="R/W"/> 
		<bitfield id="EVTCOUNT" width="10" begin="9" end="0" resetval="0x0" description="Event to count. The event number of the event that is counted by event counter PMEVCNTR&#60;n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written." range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMEVTYPER4_EL0" acronym="APBADDR_PMU_CPU0_PMEVTYPER4_EL0" offset="0x410" width="32" description="Performance Monitors Event Type Register 4">
		<bitfield id="P" width="1" begin="31" end="31" resetval="0x0" description="EL1 modes filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit. The possible values of this bit are:       0              Count events in EL1.                          1              Do not count events in EL1.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="U" width="1" begin="30" end="30" resetval="0x0" description="EL0 filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit. The possible values of this bit are:       0              Count events in EL0.                          1              Do not count events in EL0.                   " range="30" rwaccess="R/W"/> 
		<bitfield id="NSK" width="1" begin="29" end="29" resetval="0x0" description="Non-secure kernel modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted." range="29" rwaccess="R/W"/> 
		<bitfield id="NSU" width="1" begin="28" end="28" resetval="0x0" description="Non-secure user modes filtering bit. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted." range="28" rwaccess="R/W"/> 
		<bitfield id="NSH" width="1" begin="27" end="27" resetval="0x0" description="Non-secure Hyp modes filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.       0              Do not count events in EL2.                          1              Count events in EL2.                   " range="27" rwaccess="R/W"/> 
		<bitfield id="M" width="1" begin="26" end="26" resetval="0x0" description="Secure EL3 filtering bit. Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted." range="26" rwaccess="R/W"/> 
		<bitfield id="RES0_PMEVTYPER4_EL0_25_10" width="16" begin="25" end="10" resetval="0x0" description="Reserved, RES0." range="25 - 10" rwaccess="R/W"/> 
		<bitfield id="EVTCOUNT" width="10" begin="9" end="0" resetval="0x0" description="Event to count. The event number of the event that is counted by event counter PMEVCNTR&#60;n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written." range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMEVTYPER5_EL0" acronym="APBADDR_PMU_CPU0_PMEVTYPER5_EL0" offset="0x414" width="32" description="Performance Monitors Event Type Register 5">
		<bitfield id="P" width="1" begin="31" end="31" resetval="0x0" description="EL1 modes filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit. The possible values of this bit are:       0              Count events in EL1.                          1              Do not count events in EL1.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="U" width="1" begin="30" end="30" resetval="0x0" description="EL0 filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit. The possible values of this bit are:       0              Count events in EL0.                          1              Do not count events in EL0.                   " range="30" rwaccess="R/W"/> 
		<bitfield id="NSK" width="1" begin="29" end="29" resetval="0x0" description="Non-secure kernel modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Non-secure EL1 are counted.Otherwise, events in Non-secure EL1 are not counted." range="29" rwaccess="R/W"/> 
		<bitfield id="NSU" width="1" begin="28" end="28" resetval="0x0" description="Non-secure user modes filtering bit. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, events in Non-secure EL0 are counted.Otherwise, events in Non-secure EL0 are not counted." range="28" rwaccess="R/W"/> 
		<bitfield id="NSH" width="1" begin="27" end="27" resetval="0x0" description="Non-secure Hyp modes filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.       0              Do not count events in EL2.                          1              Count events in EL2.                   " range="27" rwaccess="R/W"/> 
		<bitfield id="M" width="1" begin="26" end="26" resetval="0x0" description="Secure EL3 filtering bit. Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, events in Secure EL3 are counted.Otherwise, events in Secure EL3 are not counted." range="26" rwaccess="R/W"/> 
		<bitfield id="RES0_PMEVTYPER5_EL0_25_10" width="16" begin="25" end="10" resetval="0x0" description="Reserved, RES0." range="25 - 10" rwaccess="R/W"/> 
		<bitfield id="EVTCOUNT" width="10" begin="9" end="0" resetval="0x0" description="Event to count. The event number of the event that is counted by event counter PMEVCNTR&#60;n>_EL0.Software must program this field with an event defined by the processor or a common event defined by the architecture.If evtCount is programmed to an event that is reserved or not implemented, the behavior depends on the event type.For common architectural and microarchitectural events:No events are counted.The value read back on evtCount is the value written.For IMPLEMENTATION DEFINED events:It is UNPREDICTABLE what event, if any, is counted. UNPREDICTABLE in this case means the event must not expose privileged information.The value read back on evtCount is an UNKNOWN value with the same effect.ARM recommends that the behavior across a family of implementations is defined such that if a given implementation does not include an event from a set of common IMPLEMENTATION DEFINED events, then no event is counted and the value read back on evtCount is the value written." range="9 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCCFILTR_EL0" acronym="APBADDR_PMU_CPU0_PMCCFILTR_EL0" offset="0x47C" width="32" description="Performance Monitors Cycle Counter Filter Register">
		<bitfield id="P" width="1" begin="31" end="31" resetval="0x0" description="EL1 modes filtering bit. Controls counting in EL1. If EL3 is implemented, then counting in Non-secure EL1 is further controlled by the NSK bit. The possible values of this bit are:       0              Count cycles in EL1.                          1              Do not count cycles in EL1.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="U" width="1" begin="30" end="30" resetval="0x0" description="EL0 filtering bit. Controls counting in EL0. If EL3 is implemented, then counting in Non-secure EL0 is further controlled by the NSU bit. The possible values of this bit are:       0              Count cycles in EL0.                          1              Do not count cycles in EL0.                   " range="30" rwaccess="R/W"/> 
		<bitfield id="NSK" width="1" begin="29" end="29" resetval="0x0" description="Non-secure kernel modes filtering bit. Controls counting in Non-secure EL1. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, cycles in Non-secure EL1 are counted.Otherwise, cycles in Non-secure EL1 are not counted." range="29" rwaccess="R/W"/> 
		<bitfield id="NSU" width="1" begin="28" end="28" resetval="0x0" description="Non-secure user modes filtering bit. Controls counting in Non-secure EL0. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of U, cycles in Non-secure EL0 are counted.Otherwise, cycles in Non-secure EL0 are not counted." range="28" rwaccess="R/W"/> 
		<bitfield id="NSH" width="1" begin="27" end="27" resetval="0x0" description="Non-secure Hyp modes filtering bit. Controls counting in Non-secure EL2. If EL2 is not implemented, this bit is RES0.       0              Do not count cycles in EL2.                          1              Count cycles in EL2.                   " range="27" rwaccess="R/W"/> 
		<bitfield id="M" width="1" begin="26" end="26" resetval="0x0" description="Secure EL3 filtering bit. Most applications can ignore this bit and set the value to zero. If EL3 is not implemented, this bit is RES0.If the value of this bit is equal to the value of P, cycles in Secure EL3 are counted.Otherwise, cycles in Secure EL3 are not counted." range="26" rwaccess="R/W"/> 
		<bitfield id="RES0_PMCCFILTR_EL0_25_0" width="26" begin="25" end="0" resetval="0x0" description="Reserved, RES0." range="25 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCNTENSET_EL0" acronym="APBADDR_PMU_CPU0_PMCNTENSET_EL0" offset="0xC00" width="32" description="Performance Monitors Count Enable Set Register">
		<bitfield id="C" width="1" begin="31" end="31" resetval="0x0" description="PMCCNTR_EL0 enable bit. Enables the cycle counter register. Possible values are:       0              When read, means the cycle counter is disabled. When written, has no effect.                          1              When read, means the cycle counter is enabled. When written, enables the cycle counter.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="P_X" width="31" begin="30" end="0" resetval="0x0" description="Event counter enable bit for PMEVCNTR&#60;x>.N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values of each bit are:       0              When read, means that PMEVCNTR&#60;x> is disabled. When written, has no effect.                          1              When read, means that PMEVCNTR&#60;x> event counter is enabled. When written, enables PMEVCNTR&#60;x>.                   " range="30 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCNTENCLR_EL0" acronym="APBADDR_PMU_CPU0_PMCNTENCLR_EL0" offset="0xC20" width="32" description="Performance Monitors Count Enable Clear Register">
		<bitfield id="C" width="1" begin="31" end="31" resetval="0x0" description="PMCCNTR_EL0 disable bit. Disables the cycle counter register. Possible values are:       0              When read, means the cycle counter is disabled. When written, has no effect.                          1              When read, means the cycle counter is enabled. When written, disables the cycle counter.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="P_X" width="31" begin="30" end="0" resetval="0x0" description="Event counter disable bit for PMEVCNTR&#60;x>.N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values of each bit are:       0              When read, means that PMEVCNTR&#60;x> is disabled. When written, has no effect.                          1              When read, means that PMEVCNTR&#60;x> is enabled. When written, disables PMEVCNTR&#60;x>.                   " range="30 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMINTENSET_EL1" acronym="APBADDR_PMU_CPU0_PMINTENSET_EL1" offset="0xC40" width="32" description="Performance Monitors Interrupt Enable Set Register">
		<bitfield id="C" width="1" begin="31" end="31" resetval="0x0" description="PMCCNTR_EL0 overflow interrupt request enable bit. Possible values are:       0              When read, means the cycle counter overflow interrupt request is disabled. When written, has no effect.                          1              When read, means the cycle counter overflow interrupt request is enabled. When written, enables the cycle count overflow interrupt request.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="P_X" width="31" begin="30" end="0" resetval="0x0" description="Event counter overflow interrupt request enable bit for PMEVCNTR&#60;x>_EL0.N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values are:       0              When read, means that the PMEVCNTR&#60;x>_EL0 event counter interrupt request is disabled. When written, has no effect.                          1              When read, means that the PMEVCNTR&#60;x>_EL0 event counter interrupt request is enabled. When written, enables the PMEVCNTR&#60;x>_EL0 interrupt request.                   " range="30 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMINTENCLR_EL1" acronym="APBADDR_PMU_CPU0_PMINTENCLR_EL1" offset="0xC60" width="32" description="Performance Monitors Interrupt Enable Clear Register">
		<bitfield id="C" width="1" begin="31" end="31" resetval="0x0" description="PMCCNTR_EL0 overflow interrupt request disable bit. Possible values are:       0              When read, means the cycle counter overflow interrupt request is disabled. When written, has no effect.                          1              When read, means the cycle counter overflow interrupt request is enabled. When written, disables the cycle count overflow interrupt request.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="P_X" width="31" begin="30" end="0" resetval="0x0" description="Event counter overflow interrupt request disable bit for PMEVCNTR&#60;x>_EL0.N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values are:       0              When read, means that the PMEVCNTR&#60;x>_EL0 event counter interrupt request is disabled. When written, has no effect.                          1              When read, means that the PMEVCNTR&#60;x>_EL0 event counter interrupt request is enabled. When written, disables the PMEVCNTR&#60;x>_EL0 interrupt request.                   " range="30 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMOVSCLR_EL0" acronym="APBADDR_PMU_CPU0_PMOVSCLR_EL0" offset="0xC80" width="32" description="Performance Monitors Overflow Flag Status Clear Register">
		<bitfield id="C" width="1" begin="31" end="31" resetval="0x0" description="PMCCNTR_EL0 overflow bit. Possible values are:       0              When read, means the cycle counter has not overflowed. When written, has no effect.                          1              When read, means the cycle counter has overflowed. When written, clears the overflow bit to 0.                   PMCR_EL0.LC is used to control from which bit of PMCCNTR_EL0 [bit 31 or bit 63] an overflow is detected." range="31" rwaccess="R/W"/> 
		<bitfield id="P_X" width="31" begin="30" end="0" resetval="0x0" description="Event counter overflow clear bit for PMEVCNTR&#60;x>.N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values of each bit are:       0              When read, means that PMEVCNTR&#60;x> has not overflowed. When written, has no effect.                          1              When read, means that PMEVCNTR&#60;x> has overflowed. When written, clears the PMEVCNTR&#60;x> overflow bit to 0.                   " range="30 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMSWINC_EL0" acronym="APBADDR_PMU_CPU0_PMSWINC_EL0" offset="0xCA0" width="32" description="Performance Monitors Software Increment Register">
		<bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="Reserved RES0" range="31 - 6" rwaccess="R/W"/> 
		<bitfield id="P_X" width="6" begin="5" end="0" resetval="0x0" description="Event counter software increment bit for PMEVCNTR&#60;x>" range="5 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMOVSSET_EL0" acronym="APBADDR_PMU_CPU0_PMOVSSET_EL0" offset="0xCC0" width="32" description="Performance Monitors Overflow Flag Status Set Register">
		<bitfield id="C" width="1" begin="31" end="31" resetval="0x0" description="PMCCNTR_EL0 overflow bit. Possible values are:       0              When read, means the cycle counter has not overflowed. When written, has no effect.                          1              When read, means the cycle counter has overflowed. When written, sets the overflow bit to 1.                   " range="31" rwaccess="R/W"/> 
		<bitfield id="P_X" width="31" begin="30" end="0" resetval="0x0" description="Event counter overflow set bit for PMEVCNTR&#60;x>.N is the value in PMCR_EL0.N. Bits [30:N] are RAZ/WI.Possible values are:       0              When read, means that PMEVCNTR&#60;x> has not overflowed. When written, has no effect.                          1              When read, means that PMEVCNTR&#60;x> has overflowed. When written, sets the PMEVCNTR&#60;x> overflow bit to 1.                   " range="30 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCFGR" acronym="APBADDR_PMU_CPU0_PMCFGR" offset="0xE00" width="32" description="Performance Monitors Configuration Register">
		<bitfield id="RES0_PMCFGR_31_20" width="12" begin="31" end="20" resetval="0x0" description="Reserved, RES0." range="31 - 20" rwaccess="R/W"/> 
		<bitfield id="UEN" width="1" begin="19" end="19" resetval="0x0" description="User-mode Enable Register supported. PMUSERENR_EL0 is not visible in the external debug interface, so this bit is RES0." range="19" rwaccess="R/W"/> 
		<bitfield id="WT" width="1" begin="18" end="18" resetval="0x0" description="This feature is not supported, so this bit is RES0." range="18" rwaccess="R/W"/> 
		<bitfield id="NA" width="1" begin="17" end="17" resetval="0x0" description="This feature is not supported, so this bit is RES0." range="17" rwaccess="R/W"/> 
		<bitfield id="EX" width="1" begin="16" end="16" resetval="0x1" description="Export supported. Value is IMPLEMENTATION DEFINED.       0              PMCR_EL0.X is RES0.                          1              PMCR_EL0.X is read/write.                   " range="16" rwaccess="R/W"/> 
		<bitfield id="CCD" width="1" begin="15" end="15" resetval="0x1" description="Cycle counter has prescale. This is RES1 if AArch32 is supported at any EL, and RES0 otherwise.       0              PMCR_EL0.D is RES0.                          1              PMCR_EL0.D is read/write.                   " range="15" rwaccess="R/W"/> 
		<bitfield id="CC" width="1" begin="14" end="14" resetval="0x1" description="Dedicated cycle counter [counter 31] supported. This bit is RES1." range="14" rwaccess="R/W"/> 
		<bitfield id="SIZE" width="6" begin="13" end="8" resetval="0x63" description="Size of counters. This field determines the spacing of counters in the memory-map.In v8-A the counters are at doubleword-aligned addresses, and the largest counter is 64-bits, so this field is 0b111111." range="13 - 8" rwaccess="R/W"/> 
		<bitfield id="N" width="8" begin="7" end="0" resetval="0x6" description="Number of counters implemented in addition to the cycle counter, PMCCNTR_EL0. The maximum number of event counters is 31, so bits[7:5] are always RES0.       00000000              Only PMCCNTR_EL0 implemented.                          00000001              PMCCNTR_EL0 plus one event counter implemented.                   and so on up to 0b00011111, which indicates PMCCNTR_EL0 and 31 event counters implemented." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCR_EL0" acronym="APBADDR_PMU_CPU0_PMCR_EL0" offset="0xE04" width="32" description="Performance Monitors Control Register">
		<bitfield id="RES0_PMCR_EL0_31_11" width="21" begin="31" end="11" resetval="0x0" description="Reserved, RAZ/WI." range="31 - 11" rwaccess="R/W"/> 
		<bitfield id="RES0_PMCR_EL0_10_7" width="4" begin="10" end="7" resetval="0x0" description="Reserved, RES0." range="10 - 7" rwaccess="R/W"/> 
		<bitfield id="LC" width="1" begin="6" end="6" resetval="0x0" description="Long cycle counter enable. Determines which PMCCNTR_EL0 bit generates an overflow recorded by PMOVSR[31].       0              Cycle counter overflow on increment that changes PMCCNTR_EL0[31] from 1 to 0.                          1              Cycle counter overflow on increment that changes PMCCNTR_EL0[63] from 1 to 0.                   ARM deprecates use of PMCR_EL0.LC = 0." range="6" rwaccess="R/W"/> 
		<bitfield id="DP" width="1" begin="5" end="5" resetval="0x0" description="Disable cycle counter when event counting is prohibited. The possible values of this bit are:       0              PMCCNTR_EL0, if enabled, counts when event counting is prohibited.                          1              PMCCNTR_EL0 does not count when event counting is prohibited.                   Event counting is prohibited when ProfilingProhibited[IsSecure[],PSTATE.EL] == TRUE.This bit is RW." range="5" rwaccess="R/W"/> 
		<bitfield id="X" width="1" begin="4" end="4" resetval="0x0" description="Enable export of events in an IMPLEMENTATION DEFINED event stream. The possible values of this bit are:       0              Do not export events.                          1              Export events where not prohibited.                   This bit is used to permit events to be exported to another debug device, such as an OPTIONAL trace extension, over an event bus. If the implementation does not include such an event bus, this bit is RAZ/WI.This bit does not affect the generation of Performance Monitors overflow interrupt requests or signaling to a cross-trigger interface [CTI] that can be implemented as signals exported from the processor.If the implementation does not include an exported event stream, this bit is RAZ/WI. Otherwise this bit is RW." range="4" rwaccess="R/W"/> 
		<bitfield id="D" width="1" begin="3" end="3" resetval="0x0" description="Clock divider. The possible values of this bit are:       0              When enabled, PMCCNTR_EL0 counts every clock cycle.                          1              When enabled, PMCCNTR_EL0 counts once every 64 clock cycles.                   This bit is RW.If PMCR_EL0.LC == 1, this bit is ignored and the cycle counter counts every clock cycle.ARM deprecates use of PMCR.D = 1." range="3" rwaccess="R/W"/> 
		<bitfield id="C" width="1" begin="2" end="2" resetval="0x0" description="Cycle counter reset. This bit is WO. The effects of writing to this bit are:       0              No action.                          1              Reset PMCCNTR_EL0 to zero.                   This bit is always RAZ.Resetting PMCCNTR_EL0 does not clear the PMCCNTR_EL0 overflow bit to 0." range="2" rwaccess="R/W"/> 
		<bitfield id="P" width="1" begin="1" end="1" resetval="0x0" description="Event counter reset. This bit is WO. The effects of writing to this bit are:       0              No action.                          1              Reset all event counters, not including PMCCNTR_EL0, to zero.                   This bit is always RAZ.Resetting the event counters does not clear any overflow bits to 0." range="1" rwaccess="R/W"/> 
		<bitfield id="E" width="1" begin="0" end="0" resetval="0x0" description="Enable. The possible values of this bit are:       0              All counters, including PMCCNTR_EL0, are disabled.                          1              All counters are enabled by PMCNTENSET_EL0.                   This bit is RW." range="0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCEID0_EL0" acronym="APBADDR_PMU_CPU0_PMCEID0_EL0" offset="0xE20" width="32" description="Performance Monitors Common Event Identification Register 0">
		<bitfield id="CE_31_0" width="32" begin="31" end="0" resetval="0x1744814079" description="Common architectural and microarchitectural feature events that can be counted by the PMU event counters.For each bit described in the following table, the event is implemented if the bit is set to 1, or not implemented if the bit is set to 0.BitEvent numberEvent mnemonic310x01FL1D_CACHE_ALLOCATE300x01ECHAIN290x01DBUS_CYCLES280x01CTTBR_WRITE_RETIRED270x01BINST_SPEC260x01AMEMORY_ERROR250x019BUS_ACCESS240x018L2D_CACHE_WB230x017L2D_CACHE_REFILL220x016L2D_CACHE210x015L1D_CACHE_WB200x014L1I_CACHE190x013MEM_ACCESS180x012BR_PRED170x011CPU_CYCLES160x010BR_MIS_PRED150x00FUNALIGNED_LDST_RETIRED140x00EBR_RETURN_RETIRED130x00DBR_IMMED_RETIRED120x00CPC_WRITE_RETIRED110x00BCID_WRITE_RETIRED100x00AEXC_RETURN90x009EXC_TAKEN80x008INST_RETIRED70x007ST_RETIRED60x006LD_RETIRED50x005L1D_TLB_REFILL40x004L1D_CACHE30x003L1D_CACHE_REFILL20x002L1I_TLB_REFILL10x001L1I_CACHE_REFILL00x000SW_INCR" range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCEID1_EL0" acronym="APBADDR_PMU_CPU0_PMCEID1_EL0" offset="0xE24" width="32" description="Performance Monitors Common Event Identification Register 1">
		<bitfield id="RES0_PMCEID1_EL0_31_1" width="31" begin="31" end="1" resetval="0x0" description="Reserved, RES0." range="31 - 1" rwaccess="R/W"/> 
		<bitfield id="CE_32" width="1" begin="0" end="0" resetval="0x0" description="Common architectural and microarchitectural feature events that can be counted by the PMU event counters.For the bit described in the following table, the event is implemented if the bit is set to 1, or not implemented if the bit is set to 0.BitEvent numberEvent mnemonic00x020L2D_CACHE_ALLOCATE" range="0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMITCTRL" acronym="APBADDR_PMU_CPU0_PMITCTRL" offset="0xF00" width="32" description="Performance Monitors Integration mode Control Register">
		<bitfield id="RES0_PMITCTRL_31_1" width="31" begin="31" end="1" resetval="0x0" description="Reserved, RES0." range="31 - 1" rwaccess="R/W"/> 
		<bitfield id="IME" width="1" begin="0" end="0" resetval="0x0" description="Integration mode enable. When IME == 1, the device reverts to an integration mode to enable integration testing or topology detection. The integration mode behavior is IMPLEMENTATION DEFINED.       0              Normal operation.                          1              Integration mode enabled.                   " range="0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMDEVAFF0" acronym="APBADDR_PMU_CPU0_PMDEVAFF0" offset="0xFA8" width="32" description="Performance Monitors Device Affinity Register 0">
		<bitfield id="PMDEVAFF0" width="32" begin="31" end="0" resetval="0x2147483648" description="MPIDR_EL1 low half. Read-only copy of the low half of MPIDR_EL1, as seen from the highest implemented exception level." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMDEVAFF1" acronym="APBADDR_PMU_CPU0_PMDEVAFF1" offset="0xFAC" width="32" description="Performance Monitors Device Affinity Register 1">
		<bitfield id="PMDEVAFF1" width="32" begin="31" end="0" resetval="0x0" description="MPIDR_EL1 high half. Read-only copy of the high half of MPIDR_EL1, as seen from the highest implemented exception level." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMLAR" acronym="APBADDR_PMU_CPU0_PMLAR" offset="0xFB0" width="32" description="Performance Monitors Lock Access Register">
		<bitfield id="KEY" width="32" begin="31" end="0" resetval="0x0" description="Lock Access control. Writing the key value 0xC5ACCE55 to this field unlocks the lock, enabling write accesses to this component's registers through a memory-mapped interface.Writing any other value to this register locks the lock, disabling write accesses to this component's registers through a memory mapped interface." range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMLSR" acronym="APBADDR_PMU_CPU0_PMLSR" offset="0xFB4" width="32" description="Performance Monitors Lock Status Register">
		<bitfield id="RES0_PMLSR_31_3" width="29" begin="31" end="3" resetval="0x0" description="Reserved, RES0." range="31 - 3" rwaccess="R/W"/> 
		<bitfield id="NTT" width="1" begin="2" end="2" resetval="0x0" description="Not thirty-two bit access required. RAZ." range="2" rwaccess="R/W"/> 
		<bitfield id="SLK" width="1" begin="1" end="1" resetval="0x1" description="Software lock status for this component. For an access to LSR that is not a memory-mapped access, or when the software lock is not implemented, this field is RES0.For memory-mapped accesses when the software lock is implemented, possible values of this field are:       0              Lock clear. Writes are permitted to this component's registers.                          1              Lock set. Writes to this component's registers are ignored, and reads have no side effects.                   " range="1" rwaccess="R/W"/> 
		<bitfield id="SLI" width="1" begin="0" end="0" resetval="0x1" description="Software lock implemented. For an access to LSR that is not a memory-mapped access, this field is RAZ. For memory-mapped accesses, the value of this field is IMPLEMENTATION DEFINED. Permitted values are:       0              Software lock not implemented or not memory-mapped access.                          1              Software lock implemented and memory-mapped access.                   " range="0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMAUTHSTATUS" acronym="APBADDR_PMU_CPU0_PMAUTHSTATUS" offset="0xFB8" width="32" description="Performance Monitors Authentication Status Register">
		<bitfield id="RES0_PMAUTHSTATUS_31_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved, RES0." range="31 - 8" rwaccess="R/W"/> 
		<bitfield id="SNID" width="2" begin="7" end="6" resetval="0x2" description="Holds the same value as DBGAUTHSTATUS_EL1.SNID." range="7 - 6" rwaccess="R/W"/> 
		<bitfield id="RES0_PMAUTHSTATUS_5_4" width="2" begin="5" end="4" resetval="0x0" description="Reserved, RES0." range="5 - 4" rwaccess="R/W"/> 
		<bitfield id="NSNID" width="2" begin="3" end="2" resetval="0x2" description="Holds the same value as DBGAUTHSTATUS_EL1.NSNID." range="3 - 2" rwaccess="R/W"/> 
		<bitfield id="RES0_PMAUTHSTATUS_1_0" width="2" begin="1" end="0" resetval="0x0" description="Reserved, RES0." range="1 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMDEVARCH" acronym="APBADDR_PMU_CPU0_PMDEVARCH" offset="0xFBC" width="32" description="Performance Monitors Device Architecture Register">
		<bitfield id="ARCHITECT" width="11" begin="31" end="21" resetval="0x571" description="Defines the architecture of the component. For Performance Monitors, this is ARM Limited.Bits [31:28] are the JEP 106 continuation code, 0x4.Bits [27:21] are the JEP 106 ID code, 0x3B." range="31 - 21" rwaccess="R/W"/> 
		<bitfield id="PRESENT" width="1" begin="20" end="20" resetval="0x1" description="When set to 1, indicates that the DEVARCH is present.This field is 1 in v8-A." range="20" rwaccess="R/W"/> 
		<bitfield id="REVISION" width="4" begin="19" end="16" resetval="0x0" description="Defines the architecture revision. For architectures defined by ARM this is the minor revision.For Performance Monitors, the revision defined by v8-A is 0x0.All other values are reserved." range="19 - 16" rwaccess="R/W"/> 
		<bitfield id="ARCHID" width="16" begin="15" end="0" resetval="0x10774" description="Defines this part to be a v8-A debug component. For architectures defined by ARM this is further subdivided.For Performance Monitors:Bits [15:12] are the architecture version, 0x2.Bits [11:0] are the architecture part number, 0xA16.This corresponds to Performance Monitors architecture version PMUv3." range="15 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMDEVTYPE" acronym="APBADDR_PMU_CPU0_PMDEVTYPE" offset="0xFCC" width="32" description="Performance Monitors Device Type Register">
		<bitfield id="RES0_PMDEVTYPE_31_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved, RES0." range="31 - 8" rwaccess="R/W"/> 
		<bitfield id="SUB" width="4" begin="7" end="4" resetval="0x1" description="Subtype. Must read as 0x1 to indicate this is a processor component." range="7 - 4" rwaccess="R/W"/> 
		<bitfield id="MAJOR" width="4" begin="3" end="0" resetval="0x6" description="Major type. Must read as 0x6 to indicate this is a performance monitor component." range="3 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMPIDR4" acronym="APBADDR_PMU_CPU0_PMPIDR4" offset="0xFD0" width="32" description="Performance Monitors Peripheral Identification Register 4">
		<bitfield id="RES0_PMPIDR4_31_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved, RES0." range="31 - 8" rwaccess="R/W"/> 
		<bitfield id="SIZE" width="4" begin="7" end="4" resetval="0x0" description="Size of the component. RAZ. Log2 of the number of 4KB pages from the start of the component to the end of the component ID registers." range="7 - 4" rwaccess="R/W"/> 
		<bitfield id="DES_2" width="4" begin="3" end="0" resetval="0x4" description="Designer, JEP106 continuation code, least significant nibble. For ARM Limited, this field is 0b0100." range="3 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMPIDR5" acronym="APBADDR_PMU_CPU0_PMPIDR5" offset="0xFD4" width="32" description="Performance Monitors Peripheral Identification Register 5">
		<bitfield id="RESERVED" width="32" begin="31" end="0" resetval="0x0" description="Reserved RES0" range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMPIDR6" acronym="APBADDR_PMU_CPU0_PMPIDR6" offset="0xFD8" width="32" description="Performance Monitors Peripheral Identification Register 6">
		<bitfield id="RESERVED" width="32" begin="31" end="0" resetval="0x0" description="Reserved RES0" range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMPIDR7" acronym="APBADDR_PMU_CPU0_PMPIDR7" offset="0xFDC" width="32" description="Performance Monitors Peripheral Identification Register 7">
		<bitfield id="RESERVED" width="32" begin="31" end="0" resetval="0x0" description="Reserved RES0" range="31 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMPIDR0" acronym="APBADDR_PMU_CPU0_PMPIDR0" offset="0xFE0" width="32" description="Performance Monitors Peripheral Identification Register 0">
		<bitfield id="RES0_PMPIDR0_31_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved, RES0." range="31 - 8" rwaccess="R/W"/> 
		<bitfield id="PART_0" width="8" begin="7" end="0" resetval="0x211" description="Part number, least significant byte." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMPIDR1" acronym="APBADDR_PMU_CPU0_PMPIDR1" offset="0xFE4" width="32" description="Performance Monitors Peripheral Identification Register 1">
		<bitfield id="RES0_PMPIDR1_31_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved, RES0." range="31 - 8" rwaccess="R/W"/> 
		<bitfield id="DES_0" width="4" begin="7" end="4" resetval="0x11" description="Designer, least significant nibble of JEP106 ID code. For ARM Limited, this field is 0b1011." range="7 - 4" rwaccess="R/W"/> 
		<bitfield id="PART_1" width="4" begin="3" end="0" resetval="0x9" description="Part number, most significant nibble." range="3 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMPIDR2" acronym="APBADDR_PMU_CPU0_PMPIDR2" offset="0xFE8" width="32" description="Performance Monitors Peripheral Identification Register 2">
		<bitfield id="RES0_PMPIDR2_31_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved, RES0." range="31 - 8" rwaccess="R/W"/> 
		<bitfield id="REVISION" width="4" begin="7" end="4" resetval="0x4" description="Part major revision. Parts can also use this field to extend Part number to 16-bits." range="7 - 4" rwaccess="R/W"/> 
		<bitfield id="JEDEC" width="1" begin="3" end="3" resetval="0x1" description="RAO. Indicates a JEP106 identity code is used." range="3" rwaccess="R/W"/> 
		<bitfield id="DES_1" width="3" begin="2" end="0" resetval="0x3" description="Designer, most significant bits of JEP106 ID code. For ARM Limited, this field is 0b011." range="2 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMPIDR3" acronym="APBADDR_PMU_CPU0_PMPIDR3" offset="0xFEC" width="32" description="Performance Monitors Peripheral Identification Register 3">
		<bitfield id="RES0_PMPIDR3_31_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved, RES0." range="31 - 8" rwaccess="R/W"/> 
		<bitfield id="REVAND" width="4" begin="7" end="4" resetval="0x0" description="Part minor revision. Parts using PMPIDR2.REVISION as an extension to the Part number must use this field as a major revision number." range="7 - 4" rwaccess="R/W"/> 
		<bitfield id="CMOD" width="4" begin="3" end="0" resetval="0x0" description="Customer modified. Indicates someone other than the Designer has modified the component." range="3 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCIDR0" acronym="APBADDR_PMU_CPU0_PMCIDR0" offset="0xFF0" width="32" description="Performance Monitors Component Identification Register 0">
		<bitfield id="RES0_PMCIDR0_31_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved, RES0." range="31 - 8" rwaccess="R/W"/> 
		<bitfield id="PRMBL_0" width="8" begin="7" end="0" resetval="0x13" description="Preamble. Must read as 0x0D." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCIDR1" acronym="APBADDR_PMU_CPU0_PMCIDR1" offset="0xFF4" width="32" description="Performance Monitors Component Identification Register 1">
		<bitfield id="RES0_PMCIDR1_31_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved, RES0." range="31 - 8" rwaccess="R/W"/> 
		<bitfield id="CLASS" width="4" begin="7" end="4" resetval="0x9" description="Component class. Reads as 0x9, debug component." range="7 - 4" rwaccess="R/W"/> 
		<bitfield id="PRMBL_1" width="4" begin="3" end="0" resetval="0x0" description="Preamble. RAZ." range="3 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCIDR2" acronym="APBADDR_PMU_CPU0_PMCIDR2" offset="0xFF8" width="32" description="Performance Monitors Component Identification Register 2">
		<bitfield id="RES0_PMCIDR2_31_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved, RES0." range="31 - 8" rwaccess="R/W"/> 
		<bitfield id="PRMBL_2" width="8" begin="7" end="0" resetval="0x5" description="Preamble. Must read as 0x05." range="7 - 0" rwaccess="R/W"/>
	</register>
	<register id="APBADDR_PMU_CPU0_PMCIDR3" acronym="APBADDR_PMU_CPU0_PMCIDR3" offset="0xFFC" width="32" description="Performance Monitors Component Identification Register 3">
		<bitfield id="RES0_PMCIDR3_31_8" width="24" begin="31" end="8" resetval="0x0" description="Reserved, RES0." range="31 - 8" rwaccess="R/W"/> 
		<bitfield id="PRMBL_3" width="8" begin="7" end="0" resetval="0x177" description="Preamble. Must read as 0xB1." range="7 - 0" rwaccess="R/W"/>
	</register>
</module>