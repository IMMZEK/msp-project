<module name="MCU_ADC0" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="ADC_CONFIG_j" acronym="ADC_CONFIG_j" offset="0x0" width="32" description="The user should write the appropriate value to this register that is required to configure the various functions of each step. Offset = 64h + (j * 8h); where j = 0h to Fh">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RANGECHECK" width="1" begin="27" end="27" resetval="0x0" description="0h = Disable ADC_RANGE check 1h = compare ADC data with ADC_RANGE" range="" rwaccess="RW"/>
    <bitfield id="FIFOSEL" width="1" begin="26" end="26" resetval="0x0" description="Sampled data will be stored in FIFO. 0h = FIFO0 1h = FIFO1" range="" rwaccess="RW"/>
    <bitfield id="DIFF_CNTRL" width="1" begin="25" end="25" resetval="0x0" description="DifferentialADC_CONTROL. 0h = Single ended input, SEL_INM_SWM must be 8h 1h = Differential input" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="24" end="23" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="SEL_INP_SWC" width="4" begin="22" end="19" resetval="0x0" description="Select source for positive ADC input (INP). 0h = Input (channel) 0 1h = Input (channel) 1 2h = Input (channel) 2 3h = Input (channel) 3 4h = Input (channel) 4 5h = Input (channel) 5 6h = Input (channel) 6 7h = Input (channel) 7 8h = REFN" range="" rwaccess="RW"/>
    <bitfield id="SEL_INM_SWM" width="4" begin="18" end="15" resetval="0x8" description="Select source for negative ADC input (INM). 0h = Input (channel) 0 1h = Input (channel) 1 2h = Input (channel) 2 3h = Input (channel) 3 4h = Input (channel) 4 5h = Input (channel) 5 6h = Input (channel) 6 7h = Input (channel) 7 8h = REFN" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="10" begin="14" end="5" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="AVERAGING" width="3" begin="4" end="2" resetval="0x0" description="Number of samplings to average. 0h = no average 1h = 2 samples average 2h = 4 samples average 3h = 8 samples average 4h = 16 samples average" range="" rwaccess="RW"/>
    <bitfield id="MODE" width="2" begin="1" end="0" resetval="0x0" description="0h = SW enabled, one-shot 1h = SW enabled, continuous 2h = HW synchronized, one-shot 3h = HW synchronized, continuous" range="" rwaccess="RW"/>
  </register>
  <register id="ADC_DELAY_j" acronym="ADC_DELAY_j" offset="0x0" width="32" description="Controls number of SMPL_CLK periods to sample and delay. Offset = 68h + (j &#215; 8h); where j = 0h to Fh">
    <bitfield id="SAMPLEDELAY" width="8" begin="31" end="24" resetval="0x0" description="This register will control the number of SMPL_CLK cycles to sample the input signal (hold SOC high). Any value programmed here will be added to the minimum time of 2 SMPL_CLK cycles." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="23" end="18" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="OPENDELAY" width="18" begin="17" end="0" resetval="0x0" description="Program the number of SMPL_CLK cycles to wait after applying the step configuration registers and before sending the start of ADC conversion." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_REVISION" acronym="ADC_REVISION" offset="0x0" width="32" description="IP Revision Identifier (X.Y.R) Used by software to track features, bugs, and compatibility.">
    <bitfield id="MODID" width="16" begin="31" end="16" resetval="0x45" description="Module ID field" range="" rwaccess="R"/>
    <bitfield id="REVRTL" width="5" begin="15" end="11" resetval="0x5" description="RTLADC_REVISION. Will vary depending on release." range="" rwaccess="R"/>
    <bitfield id="REVMAJ" width="3" begin="10" end="8" resetval="0x1" description="Major" range="" rwaccess="R"/>
    <bitfield id="CUSTOM" width="2" begin="7" end="6" resetval="0x0" description="Custom" range="" rwaccess="R"/>
    <bitfield id="REVMIN" width="6" begin="5" end="0" resetval="0x0" description="Minor" range="" rwaccess="R"/>
  </register>
  <register id="ADC_EOI" acronym="ADC_EOI" offset="0x20" width="32" description="The End of Interrupt () Register allows the CPU to acknowledge completion of an interrupt by writing to the for interrupt sources. An eoi_write signal will be generated and another interrupt will be triggered if interrupt sources remain. This register will be reset one cycle after it has been written to. The EOI register is used to re-trigger the pulse interrupt signal to ensure that any nested interrupt events are serviced. The software interrupt handler must write to the EOI register at the end of the current interrupt processing routine, so that new events can re-trigger the pulse interrupt signal again. For level interrupt signals the EOI register is not functional and must not be used.">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="LINENUMEOI" width="1" begin="0" end="0" resetval="0x0" description="Software End Of Interrupt (EOI) control." range="" rwaccess="W"/>
  </register>
  <register id="ADC_STATUS_RAW" acronym="ADC_STATUS_RAW" offset="0x24" width="32" description="The register allows the MCU_ADC0/1 interrupt sources to be manually set when writing a 1 to a specific bit. Write 0: No action Write 1: Set event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="OUTOFRANGE" width="1" begin="8" end="8" resetval="0x0" description="Status raw for out of range interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO1UNFL" width="1" begin="7" end="7" resetval="0x0" description="Status raw for FIFO1 under-flow interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO1OVFL" width="1" begin="6" end="6" resetval="0x0" description="Status raw for FIFO1 over-flow interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO1THRS" width="1" begin="5" end="5" resetval="0x0" description="Status raw for FIFO1 threshold interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO0UNFL" width="1" begin="4" end="4" resetval="0x0" description="Status raw for FIFO0 under-flow interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO0OVFL" width="1" begin="3" end="3" resetval="0x0" description="Status raw for FIFO0 over-flow interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO0THRS" width="1" begin="2" end="2" resetval="0x0" description="Status raw for FIFO0 threshold interrupt." range="" rwaccess="RW"/>
    <bitfield id="ENDOFEQUENCE" width="1" begin="1" end="1" resetval="0x0" description="Status raw for end of sequence interrupt." range="" rwaccess="RW"/>
    <bitfield id="AFE_EOC_MISSING" width="1" begin="0" end="0" resetval="0x0" description="Status raw for missing AFE EOC interrupt." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_STATUS" acronym="ADC_STATUS" offset="0x28" width="32" description="The register allows the MCU_ADC0/1 interrupt sources to be manually cleared when writing a 1 to a specific bit. Write 0: No action Write 1: Clear event Read 0: No event pending Read 1: Event pending">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="OUTOFRANGE" width="1" begin="8" end="8" resetval="0x0" description="Enabled status for out of range interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO1UNFL" width="1" begin="7" end="7" resetval="0x0" description="Enabled status for FIFO1 under-flow interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO1OVFL" width="1" begin="6" end="6" resetval="0x0" description="Enabled status for FIFO1 over-flow interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO1THRS" width="1" begin="5" end="5" resetval="0x0" description="Enabled status for FIFO1 threshold interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO0UNFL" width="1" begin="4" end="4" resetval="0x0" description="Enabled status for FIFO0 under-flow interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO0OVFL" width="1" begin="3" end="3" resetval="0x0" description="Enabled status for FIFO0 over-flow interrupt." range="" rwaccess="RW"/>
    <bitfield id="FIFO0THRS" width="1" begin="2" end="2" resetval="0x0" description="Enabled status for FIFO0 threshold interrupt." range="" rwaccess="RW"/>
    <bitfield id="ENDOFEQUENCE" width="1" begin="1" end="1" resetval="0x0" description="Enabled status for end of sequence interrupt." range="" rwaccess="RW"/>
    <bitfield id="AFE_EOC_MISSING" width="1" begin="0" end="0" resetval="0x0" description="Enable status for missing AFE EOC interrupt." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_ENABLE_SET" acronym="ADC_ENABLE_SET" offset="0x2C" width="32" description="The register allows the MCU_ADC0/1 interrupt sources to be manually enabled when writing a 1 to a specific bit. Write 0: No action Write 1: Enable event Read 0: Event is disabled Read 1: Event is enabled">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="OUTOFRANGE" width="1" begin="8" end="8" resetval="0x0" description="Out of range interrupt enable." range="" rwaccess="RW"/>
    <bitfield id="FIFO1UNFL" width="1" begin="7" end="7" resetval="0x0" description="FIFO1 under-flow interrupt enable." range="" rwaccess="RW"/>
    <bitfield id="FIFO1OVFL" width="1" begin="6" end="6" resetval="0x0" description="FIFO1 over-flow interrupt enable." range="" rwaccess="RW"/>
    <bitfield id="FIFO1THRS" width="1" begin="5" end="5" resetval="0x0" description="FIFO1 threshold interrupt enable." range="" rwaccess="RW"/>
    <bitfield id="FIFO0UNFL" width="1" begin="4" end="4" resetval="0x0" description="FIFO0 under-flow interrupt enable." range="" rwaccess="RW"/>
    <bitfield id="FIFO0OVFL" width="1" begin="3" end="3" resetval="0x0" description="FIFO0 over-flow interrupt enable." range="" rwaccess="RW"/>
    <bitfield id="FIFO0THRS" width="1" begin="2" end="2" resetval="0x0" description="FIFO0 threshold interrupt enable." range="" rwaccess="RW"/>
    <bitfield id="ENDOFEQUENCE" width="1" begin="1" end="1" resetval="0x0" description="End of sequence interrupt enable." range="" rwaccess="RW"/>
    <bitfield id="AFE_EOC_MISSING" width="1" begin="0" end="0" resetval="0x0" description="Missing AFE EOC interrupt enable." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_ENABLE_CLR" acronym="ADC_ENABLE_CLR" offset="0x30" width="32" description="The register allows the MCU_ADC0/1 interrupt sources to be manually disabled when writing a 1 to a specific bit. Write 0: No action Write 1: Disable event Read 0: Event is disabled Read 1: Event is enabled">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="OUTOFRANGE" width="1" begin="8" end="8" resetval="0x0" description="Out of range interrupt disable." range="" rwaccess="RW"/>
    <bitfield id="FIFO1UNFL" width="1" begin="7" end="7" resetval="0x0" description="FIFO1 under-flow interrupt disable." range="" rwaccess="RW"/>
    <bitfield id="FIFO1OVFL" width="1" begin="6" end="6" resetval="0x0" description="FIFO1 over-flow interrupt disable." range="" rwaccess="RW"/>
    <bitfield id="FIFO1THRS" width="1" begin="5" end="5" resetval="0x0" description="FIFO1 threshold interrupt disable." range="" rwaccess="RW"/>
    <bitfield id="FIFO0UNFL" width="1" begin="4" end="4" resetval="0x0" description="FIFO0 under-flow interrupt disable." range="" rwaccess="RW"/>
    <bitfield id="FIFO0OVFL" width="1" begin="3" end="3" resetval="0x0" description="FIFO0 over-flow interrupt disable." range="" rwaccess="RW"/>
    <bitfield id="FIFO0THRS" width="1" begin="2" end="2" resetval="0x0" description="FIFO0 threshold interrupt disable." range="" rwaccess="RW"/>
    <bitfield id="ENDOFEQUENCE" width="1" begin="1" end="1" resetval="0x0" description="End of sequence interrupt disable." range="" rwaccess="RW"/>
    <bitfield id="AFE_EOC_MISSING" width="1" begin="0" end="0" resetval="0x0" description="Missing AFE EOC interrupt disable." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_DMAENABLE_SET" acronym="ADC_DMAENABLE_SET" offset="0x38" width="32" description="The register allows the enabling of DMA requests.">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="29" begin="30" end="2" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ENABLE1" width="1" begin="1" end="1" resetval="0x0" description="Enable DMA event to FIFO1" range="" rwaccess="RW"/>
    <bitfield id="ENABLE0" width="1" begin="0" end="0" resetval="0x0" description="Enable DMA event to FIFO0" range="" rwaccess="RW"/>
  </register>
  <register id="ADC_DMAENABLE_CLR" acronym="ADC_DMAENABLE_CLR" offset="0x3C" width="32" description="The register allows the disabling of DMA requests.">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="29" begin="30" end="2" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ENABLE1" width="1" begin="1" end="1" resetval="0x0" description="Clears the enable of the DMA event to FIFO1. Disable DMA event to FIFO1 Write 0h = No action Write 1h = Disable DMA event Read 0h = DMA event disabled Read 1h = DMA event enabled" range="" rwaccess="RW"/>
    <bitfield id="ENABLE0" width="1" begin="0" end="0" resetval="0x0" description="Clears the enable of the DMA event to FIFO0. Disable DMA event to FIFO0 Write 0h = No action Write 1h = Disable DMA event Read 0h = DMA event disabled Read 1h = DMA event enabled" range="" rwaccess="RW"/>
  </register>
  <register id="ADC_CONTROL" acronym="ADC_CONTROL" offset="0x40" width="32" description="Controls various parameters of the cotroller state.">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="HI_MID_SEL" width="1" begin="11" end="11" resetval="0x0" description="Reference select for functionalsafety debug mode. 0h = VMID 1h = REFP" range="" rwaccess="RW"/>
    <bitfield id="HI_MID_EN" width="1" begin="10" end="10" resetval="0x0" description="Functionalsafety debug mode. 0h = disabled 1h = enabled" range="" rwaccess="RW"/>
    <bitfield id="HW_PREEMPT" width="1" begin="9" end="9" resetval="0x0" description="0h = SW steps are not preempted by HW events 1h = SW steps are preempted by HW events" range="" rwaccess="RW"/>
    <bitfield id="HW_MAP" width="1" begin="8" end="8" resetval="0x0" description="0h = HW events are disabled 1h = HW events are enabled" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="PD" width="1" begin="4" end="4" resetval="0x1" description="ADC Power Down control. 0h = AFE is powered up 1h = AFE is powered down (default) At default, AFE is powered down; Software must write 0 to turn on the power and wait 4 us before starting a conversion" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="3" end="2" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="STEP_ID_EN" width="1" begin="1" end="1" resetval="0x0" description="Writing 1 to this bit will store the Step ID number with the captured ADC data in the FIFO. 0h = Write zeros 1h = Store the input (channel) ID tag" range="" rwaccess="RW"/>
    <bitfield id="MODULE_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="ADC module enable bit. After programming all the configuration and step enable registers, write a 1 to this bit to start conversion. Writing a 0 will disable the module after the current conversion. Before turning on again, the ADC_SEQUENCER_STAT register show read back STEP_IDLE = 10h and FSM_BUSY = 0h. Enabling the controller will be held off until MEM_INIT_DONE = 1h." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_SEQUENCER_STAT" acronym="ADC_SEQUENCER_STAT" offset="0x44" width="32" description="SW can read this register to find out the currently scheduled step id being converted on the ADC port. If you want to turn the controller off and then back on, the step_id bit should be checked and compared to IDLE before enabling the ADC module again. Also, before enabling the controller again, the user should wait for the FSM bit 5 to read idl.">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="MEM_INIT_DONE" width="1" begin="6" end="6" resetval="0x0" description="ADC_STATUS of RAM initialization for ECC. 1h = RAM initialization to 0 after reset is done." range="" rwaccess="R"/>
    <bitfield id="FSM_BUSY" width="1" begin="5" end="5" resetval="0x1" description="ADC_STATUS of FSM. 0h = Idle 1h = Conversion in progress" range="" rwaccess="R"/>
    <bitfield id="STEP_IDLE" width="5" begin="4" end="0" resetval="0x0" description="10h = Idle 0h - Fh = Corresponds to Step 1 - Step 16" range="" rwaccess="R"/>
  </register>
  <register id="ADC_RANGE" acronym="ADC_RANGE" offset="0x48" width="32" description="This feature requires the check interrupt bit to be enabled first. The user can decide which input (channel) is compared by programming the RangeCheck bit of the Registers. It is up to software to sort through FIFO data to determine which input (channel) data was out of .">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="HIRANGE" width="12" begin="27" end="16" resetval="0x0" description="Sampled ADC data is compared to this value. If the sampled data is &amp;amp;gt; HIRANGE, then interrupt is generated." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="LOWRANGE" width="12" begin="11" end="0" resetval="0x0" description="Sampled ADC data is compared to this value. If the sampled data is &amp;amp;lt; LOWRANGE, then interrupt is generated." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_MISC" acronym="ADC_MISC" offset="0x50" width="32" description="Spare inputs of the AFE are driven by this register, spare outputs from the AFE are read.">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="AFE_SPARE_OUT" width="4" begin="11" end="8" resetval="0x0" description="Connected to AFE Spare Output pins, reserved in normal operation." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="AFE_SPARE_IN" width="4" begin="3" end="0" resetval="0x0" description="Connected to AFE Spare Input pins, reserved in normal operation." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_STEPENABLE" acronym="ADC_STEPENABLE" offset="0x54" width="32" description="Contains the enable bit for each step in the sequencer. When all steps are disabled, the FSM will stay in IDLE state.">
    <bitfield id="RESERVED" width="15" begin="31" end="17" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="STEP16" width="1" begin="16" end="16" resetval="0x0" description="Enable step 16" range="" rwaccess="RW"/>
    <bitfield id="STEP15" width="1" begin="15" end="15" resetval="0x0" description="Enable step 15" range="" rwaccess="RW"/>
    <bitfield id="STEP14" width="1" begin="14" end="14" resetval="0x0" description="Enable step 14" range="" rwaccess="RW"/>
    <bitfield id="STEP13" width="1" begin="13" end="13" resetval="0x0" description="Enable step 13" range="" rwaccess="RW"/>
    <bitfield id="STEP12" width="1" begin="12" end="12" resetval="0x0" description="Enable step 12" range="" rwaccess="RW"/>
    <bitfield id="STEP11" width="1" begin="11" end="11" resetval="0x0" description="Enable step 11" range="" rwaccess="RW"/>
    <bitfield id="STEP10" width="1" begin="10" end="10" resetval="0x0" description="Enable step 10" range="" rwaccess="RW"/>
    <bitfield id="STEP9" width="1" begin="9" end="9" resetval="0x0" description="Enable step 9" range="" rwaccess="RW"/>
    <bitfield id="STEP8" width="1" begin="8" end="8" resetval="0x0" description="Enable step 8" range="" rwaccess="RW"/>
    <bitfield id="STEP7" width="1" begin="7" end="7" resetval="0x0" description="Enable step 7" range="" rwaccess="RW"/>
    <bitfield id="STEP6" width="1" begin="6" end="6" resetval="0x0" description="Enable step 6" range="" rwaccess="RW"/>
    <bitfield id="STEP5" width="1" begin="5" end="5" resetval="0x0" description="Enable step 5" range="" rwaccess="RW"/>
    <bitfield id="STEP4" width="1" begin="4" end="4" resetval="0x0" description="Enable step 4" range="" rwaccess="RW"/>
    <bitfield id="STEP3" width="1" begin="3" end="3" resetval="0x0" description="Enable step 3" range="" rwaccess="RW"/>
    <bitfield id="STEP2" width="1" begin="2" end="2" resetval="0x0" description="Enable step 2" range="" rwaccess="RW"/>
    <bitfield id="STEP1" width="1" begin="1" end="1" resetval="0x0" description="Enable step 1" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="ADC_FIFO0WC" acronym="ADC_FIFO0WC" offset="0xE4" width="32" description="FIFO word count">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="NUMWDS" width="9" begin="8" end="0" resetval="0x0" description="Number of words currently in the FIFO0." range="" rwaccess="R"/>
  </register>
  <register id="ADC_FIFO0THRESHOLD" acronym="ADC_FIFO0THRESHOLD" offset="0xE8" width="32" description="FIFO threshold">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="THRESHOLD" width="8" begin="7" end="0" resetval="0x0" description="Program the desired FIFO0 data sample level minus 1 to reach before generating interrupt to CPU." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_FIFO0DMAREQ" acronym="ADC_FIFO0DMAREQ" offset="0xEC" width="32" description="DMA request.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DMAREQLEVEL" width="8" begin="7" end="0" resetval="0x0" description="Number of words in FIFO0 before generating a DMA request." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_FIFO1WC" acronym="ADC_FIFO1WC" offset="0xF0" width="32" description="FIFO word count">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="NUMWDS" width="9" begin="8" end="0" resetval="0x0" description="Number of words currently in the FIFO1." range="" rwaccess="R"/>
  </register>
  <register id="ADC_FIFO1THRESHOLD" acronym="ADC_FIFO1THRESHOLD" offset="0xF4" width="32" description="FIFO threshold">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="THRESHOLD" width="8" begin="7" end="0" resetval="0x0" description="Program the desired FIFO1 data sample level minus 1 to reach before generating interrupt to CPU." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_FIFO1DMAREQ" acronym="ADC_FIFO1DMAREQ" offset="0xF8" width="32" description="DMA request.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DMAREQLEVEL" width="8" begin="7" end="0" resetval="0x0" description="Number of words in FIFO1 before generating a DMA request." range="" rwaccess="RW"/>
  </register>
  <register id="ADC_FIFO0DATA" acronym="ADC_FIFO0DATA" offset="0x100" width="32" description="A read from this register will auto increment the FIFO read pointer. If you read when FIFO is empty, it will trigger an underflow interrupt.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ADCCHANLID" width="4" begin="19" end="16" resetval="0x0" description="Optional ID tag of input (channel) that captured the data. If tag option is disabled, these bits will be 0." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ADCDATA" width="12" begin="11" end="0" resetval="0x0" description="Sampled ADC converted data value stored in FIFO0." range="" rwaccess="R"/>
  </register>
  <register id="ADC_FIFO1DATA" acronym="ADC_FIFO1DATA" offset="0x200" width="32" description="A read from this register will auto increment the FIFO read pointer. If you read when FIFO is empty, it will trigger an underflow interrupt.">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ADCCHANLID" width="4" begin="19" end="16" resetval="0x0" description="Optional ID tag of input (channel) that captured the data. If tag option is disabled, these bits will be 0." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ADCDATA" width="12" begin="11" end="0" resetval="0x0" description="Sampled ADC converted data value stored in FIFO1." range="" rwaccess="R"/>
  </register>
</module>
