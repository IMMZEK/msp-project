<?xml version="1.0" encoding="UTF-8"?>
<module id="FLASH" HW_revision="" XML_version="1.0" description="This is the MMR space for the flash wrapper. The flash wrapper is targeting
multiple microcontroller platforms. The flash wrapper is a module
that manages complex flash read, program and erase memory operations. 
The system is also given direct access to read flash memory contents directly for
each instantiated flash bank through FBAP ports." xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="setup_parser.xsd">
   <register acronym="IMASK" width="32" description="Interrupt Mask Register:
The IMASK register holds the current interrupt mask settings. Masked interrupts
are read in the MIS register. PSD compliant register." id="IMASK" offset="0x28">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RW" description="Reserved" id="RESERVED_31_1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Interrupt mask for DONE:
0: Interrupt is disabled in MIS register
1: Interrupt is enabled in MIS register" id="DONE" resetval="0x0">
         <bitenum id="ENABLED" value="1" token="Interrupt will request an interrupt service routine and corresponding bit in IPSTANDARD.MIS will be set" description="Interrupt will request an interrupt service routine and corresponding bit in IPSTANDARD.MIS will be set"/>
         <bitenum id="DISABLED" value="0" token="Interrupt is masked out" description="Interrupt is masked out"/>
      </bitfield>
   </register>
   <register acronym="RIS" width="32" description="Raw Interrupt Status Register:
The RIS register reflects all pending interrupts, regardless of masking. 
The RIS register allows the user to implement a poll scheme. A flag set in this
register can be cleared by writing a 1 to the ICLR register bit even if the 
corresponding IMASK bit is not enabled. A flag can be set by software by writing
a 1 to the ISET register. Reading the IIDX register will also clear the
corresponding bit in RIS. PSD compliant register." id="RIS" offset="0x30">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Reserved" id="RESERVED_31_1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Flash wrapper operation completed.
This interrupt bit is set by firmware or the corresponding bit in the ISET register.
It is cleared by the corresponding bit in in the ICLR register or reading the IIDX register when this interrupt is the highest priority." id="DONE" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occurred" description="Interrupt occurred"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
   </register>
   <register acronym="MIS" width="32" description="Masked Interrupt Status Register:
The MIS register is a bit-wise AND of the contents of the IMASK and RIS 
registers. This is kept mainly for ARM compatibility, and has limited use since
 the highest priority interrupt index is returned through the IIDX register.
 PSD 
compliant register." id="MIS" offset="0x38">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Reserved" id="RESERVED_31_1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Flash wrapper operation completed.
This masked interrupt bit reflects the bitwise AND of the corresponding RIS and IMASK bits." id="DONE" resetval="0x0">
         <bitenum id="SET" value="1" token="Masked interrupt occurred" description="Masked interrupt occurred"/>
         <bitenum id="CLR" value="0" token="Masked interrupt did not occur" description="Masked interrupt did not occur"/>
      </bitfield>
   </register>
   <register acronym="ISET" width="32" description="Interrupt Set Register:
The ISET register allows software to write a 1 to set corresponding interrupt. 

Safety:
This meets a safety requirement to allow software diagnostics to trigger 
interrupts.
PSD compliant register." id="ISET" offset="0x40">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="WO" description="Reserved" id="RESERVED_31_1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="0: No effect
1: Set the DONE interrupt in the RIS register" id="DONE" resetval="0x0">
         <bitenum id="SET" value="1" token="Set IPSTANDARD.RIS bit" description="Set IPSTANDARD.RIS bit"/>
         <bitenum id="NO_EFFECT" value="0" token="Writing a 0 has no effect" description="Writing a 0 has no effect"/>
      </bitfield>
   </register>
   <register acronym="ICLR" width="32" description="Interrupt Clear Register. 
The ICLR register allows allows software to write a 1 to clear corresponding 
interrupt.
PSD compliant register." id="ICLR" offset="0x48">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="WO" description="Reserved" id="RESERVED_31_1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="0: No effect
1: Clear the DONE interrupt in the RIS register" id="DONE" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear IPSTANDARD.RIS bit" description="Clear IPSTANDARD.RIS bit"/>
         <bitenum id="NO_EFFECT" value="0" token="Writing a 0 has no effect" description="Writing a 0 has no effect"/>
      </bitfield>
   </register>
   <register acronym="DESC" width="32" description="Hardware Version Description Register:
This register identifies the flash wrapper hardware version and feature set used. " id="DESC" offset="0xfc">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Module ID" id="MODULEID" resetval="0xb40">
         <bitenum id="MAXIMUM" value="65535" token="Highest possible value" description="Highest possible value"/>
         <bitenum id="MINIMUM" value="0" token="Smallest value" description="Smallest value"/>
      </bitfield>
      <bitfield range="" begin="15" width="4" end="12" rwaccess="RO" description="Feature set" id="FEATUREVER" resetval="0x4">
         <bitenum id="MAXIMUM" value="15" token="Maximum Value" description="Maximum Value"/>
         <bitenum id="MINIMUM" value="0" token="Minimum Value" description="Minimum Value"/>
      </bitfield>
      <bitfield range="" begin="11" width="4" end="8" rwaccess="RO" description="Instance number" id="INSTNUM" resetval="0x0">
         <bitenum id="MAXIMUM" value="15" token="Highest possible value" description="Highest possible value"/>
         <bitenum id="MINIMUM" value="0" token="Smallest value" description="Smallest value"/>
      </bitfield>
      <bitfield range="" begin="7" width="4" end="4" rwaccess="RO" description="Major Revision" id="MAJREV" resetval="0x1">
         <bitenum id="MAXIMUM" value="15" token="Highest possible value" description="Highest possible value"/>
         <bitenum id="MINIMUM" value="0" token="Smallest value" description="Smallest value"/>
      </bitfield>
      <bitfield range="" begin="3" width="4" end="0" rwaccess="RO" description="Minor Revision" id="MINREV" resetval="0x0">
         <bitenum id="MAXIMUM" value="15" token="Highest possible value" description="Highest possible value"/>
         <bitenum id="MINIMUM" value="0" token="Smallest value" description="Smallest value"/>
      </bitfield>
   </register>
   <register acronym="CMDEXEC" width="32" description="Command Execute Register:
Initiates execution of the command specified in the CMDTYPE register.
This register is blocked for writes after being written to 1 and prior to 
STATCMD.DONE being set by the flash wrapper hardware.
flash wrapper hardware clears this register after the processing of the command 
has completed.
" id="CMDEXEC" offset="0x100">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RW" description="Reserved" id="RESERVED_31_1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Command Execute value
Initiates execution of the command specified in the CMDTYPE register." id="VAL" resetval="0x0">
         <bitenum id="EXECUTE" value="1" token="Command will execute or is executing in flash wrapper" description="Command will execute or is executing in flash wrapper"/>
         <bitenum id="NOEXECUTE" value="0" token="Command will not execute or is not executing in flash wrapper" description="Command will not execute or is not executing in flash wrapper"/>
      </bitfield>
   </register>
   <register acronym="CMDTYPE" width="32" description="Command Type Register
This register specifies the type of command to be executed by the flash wrapper
hardware.
This register is blocked for writes after CMDEXEC is written to a 1 and 
prior to STATCMD.DONE being set by the hardware to indicate that 
command execution has completed." id="CMDTYPE" offset="0x104">
      <bitfield range="" begin="31" width="25" end="7" rwaccess="RW" description="Reserved" id="RESERVED_31_7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="3" end="4" rwaccess="RW" description="Command size " id="SIZE" resetval="0x0">
         <bitenum id="BANK" value="5" token="Operate on an entire flash bank" description="Operate on an entire flash bank"/>
         <bitenum id="SECTOR" value="4" token="Operate on a flash sector" description="Operate on a flash sector"/>
         <bitenum id="EIGHTWORD" value="3" token="Operate on 8 flash words" description="Operate on 8 flash words"/>
         <bitenum id="FOURWORD" value="2" token="Operate on 4 flash words" description="Operate on 4 flash words"/>
         <bitenum id="TWOWORD" value="1" token="Operate on 2 flash words" description="Operate on 2 flash words"/>
         <bitenum id="ONEWORD" value="0" token="Operate on 1 flash word" description="Operate on 1 flash word"/>
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="Reserved" id="RESERVED_3" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="2" width="3" end="0" rwaccess="RW" description="Command type" id="COMMAND" resetval="0x0">
         <bitenum id="BLANKVERIFY" value="6" token="Blank Verify - Check whether a flash word is in the erased state.
This command may only be used with CMDTYPE.SIZE = ONEWORD" description="Blank Verify - Check whether a flash word is in the erased state.
This command may only be used with CMDTYPE.SIZE = ONEWORD"/>
         <bitenum id="CLEARSTATUS" value="5" token="Clear Status - Clear status bits in FW_SMSTAT only." description="Clear Status - Clear status bits in FW_SMSTAT only."/>
         <bitenum id="MODECHANGE" value="4" token="Mode Change - Perform a mode change only, no other operation." description="Mode Change - Perform a mode change only, no other operation."/>
         <bitenum id="ERASE" value="2" token="Erase" description="Erase"/>
         <bitenum id="PROGRAM" value="1" token="Program" description="Program"/>
         <bitenum id="NOOP" value="0" token="No Operation" description="No Operation"/>
      </bitfield>
   </register>
   <register acronym="CMDCTL" width="32" description="Command Control Register
This register configures specific capabilities of the state machine for related to
the execution of a command.
This register is blocked for writes after CMDEXEC is written to a 1 and 
prior to STATCMD.DONE being set by the hardware to indicate that 
command execution has completed.
" id="CMDCTL" offset="0x108">
      <bitfield range="" begin="31" width="10" end="22" rwaccess="RW" description="Reserved" id="RESERVED_31_22" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="21" width="1" end="21" rwaccess="RW" description="Enable invalid data verify.  
This checks for 0-$gt;1 transitions in the memory when
a program operation is initiated.  If such a transition is found, the program will
fail with an error without executing the program." id="DATAVEREN" resetval="0x0">
         <bitenum id="ENABLE" value="1" token="Enable" description="Enable"/>
         <bitenum id="DISABLE" value="0" token="Disable" description="Disable"/>
      </bitfield>
      <bitfield range="" begin="20" width="1" end="20" rwaccess="RW" description="Disable Stair-Step Erase.  If set, the default VHV trim voltage setting will be used
for all erase pulses.
By default, this bit is reset, meaning that the VHV voltage will be stepped during
successive erase pulses.  The step count, step voltage, begin and end voltages
are all hard-wired." id="SSERASEDIS" resetval="0x0">
         <bitenum id="DISABLE" value="1" token="Disable" description="Disable"/>
         <bitenum id="ENABLE" value="0" token="Enable" description="Enable"/>
      </bitfield>
      <bitfield range="" begin="19" width="3" end="17" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED17" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="16" width="1" end="16" rwaccess="RW" description="Override hardware address translation of address in CMDADDR from a 
system address to a bank address and bank ID.  Use data written to 
CMDADDR directly as the bank address.  Use the value written to 
CMDCTL.BANKSEL directly as the bank ID.  Use the value written to
CMDCTL.REGIONSEL directly as the region ID.
" id="ADDRXLATEOVR" resetval="0x0">
         <bitenum id="OVERRIDE" value="1" token="Override" description="Override"/>
         <bitenum id="NOOVERRIDE" value="0" token="Do not override" description="Do not override"/>
      </bitfield>
      <bitfield range="" begin="15" width="2" end="14" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED14" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="13" width="1" end="13" rwaccess="RW" description="Reserved" id="RESERVED_13" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="4" end="9" rwaccess="RW" description="Bank Region
A specific region ID can be written to this field to indicate to which region an 
operation is to be applied if CMDCTL.ADDRXLATEOVR is set." id="REGIONSEL" resetval="0x0">
         <bitenum id="ENGR" value="8" token="Engr Region" description="Engr Region"/>
         <bitenum id="TRIM" value="4" token="Trim Region" description="Trim Region"/>
         <bitenum id="NONMAIN" value="2" token="Non-Main Region" description="Non-Main Region"/>
         <bitenum id="MAIN" value="1" token="Main Region" description="Main Region"/>
      </bitfield>
      <bitfield range="" begin="8" width="3" end="6" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED6" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="5" width="2" end="4" rwaccess="RW" description="Bank Select
A specific Bank ID can be written to this field to indicate to which bank an 
operation is to be applied if CMDCTL.ADDRXLATEOVR is set." id="BANKSEL" resetval="0x0">
         <bitenum id="BANK4" value="16" token="Bank 4" description="Bank 4"/>
         <bitenum id="BANK3" value="8" token="Bank 3" description="Bank 3"/>
         <bitenum id="BANK2" value="4" token="Bank 2" description="Bank 2"/>
         <bitenum id="BANK1" value="2" token="Bank 1" description="Bank 1"/>
         <bitenum id="BANK0" value="1" token="Bank 0" description="Bank 0"/>
      </bitfield>
      <bitfield range="" begin="3" width="4" end="0" rwaccess="RW" description="Mode
This field is only used for the Mode Change command type.  Otherwise, bank
and pump modes are set automaticlly through the NW hardware." id="MODESEL" resetval="0x0">
         <bitenum id="ERASEBNK" value="15" token="Erase Bank" description="Erase Bank"/>
         <bitenum id="PGMMW" value="14" token="Program Multiple Word" description="Program Multiple Word"/>
         <bitenum id="ERASESECT" value="12" token="Erase Sector" description="Erase Sector"/>
         <bitenum id="ERASEVER" value="11" token="Erase Verify Mode" description="Erase Verify Mode"/>
         <bitenum id="PGMSW" value="10" token="Program Single Word" description="Program Single Word"/>
         <bitenum id="PGMVER" value="9" token="Program Verify Mode" description="Program Verify Mode"/>
         <bitenum id="RDMARG1B" value="7" token="Read Margin 1B Mode" description="Read Margin 1B Mode"/>
         <bitenum id="RDMARG0B" value="6" token="Read Margin 0B Mode" description="Read Margin 0B Mode"/>
         <bitenum id="RDMARG1" value="4" token="Read Margin 1 Mode" description="Read Margin 1 Mode"/>
         <bitenum id="RDMARG0" value="2" token="Read Margin 0 Mode" description="Read Margin 0 Mode"/>
         <bitenum id="READ" value="0" token="Read Mode" description="Read Mode"/>
      </bitfield>
   </register>
   <register acronym="CMDADDR" width="32" description="Command Address Register:
This register forms the target address of a command.  The use cases are as
follows:
1)	For single-word program, this address indicates the flash bank word to be
	programmed.
2)	For multi-word program, this address indicates the first flash bank address
	for the program.  The address will be incremented for further words.
3)	For sector erase, this address indicates the sector to be erased.
4)	For bank erase, the address indicates the bank to be erased.
Note the address written to this register will be submitted for translation to the
flash wrapper address translation interface, and the translated address
will be used to access the bank.  However, if the
CMDCTL.ADDRXLATEOVR bit is set, then the address written to this register will
be used directly as the bank address.
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to STATCMD.DONE being set by the flash wrapper
hardware.

" id="CMDADDR" offset="0x120">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="Address value" id="VAL" resetval="0x0">
         <bitenum id="MAXIMUM" value="4294967295" token="Maximum value of VAL" description="Maximum value of VAL"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value of VAL" description="Minimum value of VAL"/>
      </bitfield>
   </register>
   <register acronym="CMDBYTEN" width="32" description="Command Program Byte Enable Register:
This register forms a per-byte enable for programming data.  For data bytes to
be programmed, a 1 must be written to the corresponding bit in this register.
Normally, all bits are written to 1, allowing program of full flash words.
However, leaving some bits 0 allows programming of 8-bit, 16-bit, 32-bit
or 64-bit portions of a flash word.
During verify, data bytes read from the flash will not be checked if the
corresponding CMDBYTEN bit is 0.
ECC data bytes are protected by the 1-2 MSB bits in this register, depending on
the presence of ECC and the flash word data width.
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to STATCMD.DONE being set by the flash wrapper
hardware.
This register is written to all 0 after the completion of all flash wrapper commands.
" id="CMDBYTEN" offset="0x124">
      <bitfield range="" begin="31" width="14" end="18" rwaccess="RW" description="Reserved" id="RESERVED_31_18" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="2" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RW" description="Command Byte Enable value.
A 1-bit per flash word byte value is placed in this register.
" id="VAL" resetval="0x0">
         <bitenum id="MAXIMUM" value="262143" token="Maximum value of VAL" description="Maximum value of VAL"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value of VAL" description="Minimum value of VAL"/>
      </bitfield>
   </register>
   <register acronym="CMDDATA0" width="32" description="Command Data Register 0
This register forms the data for a command.  
For DATAWIDTH == 128:	This register represents bits 31:0 of flash word data register 0.
For DATAWIDTH == 64:		This register represents bits 31:0 of flash word data register 0.
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to STATCMD.DONE being set by the flash wrapper
hardware.
This register is used to aggregate masking for bits that do not
require additional program pulses during program operations, and will be
written to all 1 after the completion of all flash wrapper commands.

Use cases for the CMDDATA* registers are as follows:
1)	Program - These registers contain the data to be programmed.
2)	Erase - These registers are not used." id="CMDDATA0" offset="0x130">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="A 32-bit data value is placed in this field.
" id="VAL" resetval="0xffffffff">
         <bitenum id="MAXIMUM" value="4294967295" token="Maximum value of VAL" description="Maximum value of VAL"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value of VAL" description="Minimum value of VAL"/>
      </bitfield>
   </register>
   <register acronym="CMDDATA1" width="32" description="Command Data Register 1
This register forms the data for a command.  
For DATAWIDTH == 128:	This register represents bits 63:32 of flash word data register 0.
For DATAWIDTH == 64:		This register represents bits 63:32 of flash word data register 0.
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to CMDSTAT.DONE being set by the flash wrapper
hardware.
This register is used to aggregate masking for bits that do not
require additional program pulses during program operations, and will be
written to all 1 after the completion of all flash wrapper commands.

Use cases for the CMDDATA* registers are as follows:
1)	Program - These registers contain the data to be programmed.
2)	Erase - These registers are not used." id="CMDDATA1" offset="0x134">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="A 32-bit data value is placed in this field.

" id="VAL" resetval="0xffffffff">
         <bitenum id="MAXIMUM" value="4294967295" token="Maximum value of VAL" description="Maximum value of VAL"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value of VAL" description="Minimum value of VAL"/>
      </bitfield>
   </register>
   <register acronym="CMDDATA2" width="32" description="Command Data Register 2
This register forms the data for a command.  
For DATAWIDTH == 128:	This register represents bits 95:64 of flash word data register 0.
For DATAWIDTH == 64:		This register represents bits 31:0 of flash word data register 1.
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to STATCMD.DONE being set by the flash wrapper
hardware.
This register is used to aggregate masking for bits that do not
require additional program pulses during program operations, and will be
written to all 1 after the completion of all flash wrapper commands.

Use cases for the CMDDATA* registers are as follows:
1)	Program - These registers contain the data to be programmed.
2)	Erase - These registers are not used." id="CMDDATA2" offset="0x138">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="A 32-bit data value is placed in this field.

" id="VAL" resetval="0xffffffff">
         <bitenum id="MAXIMUM" value="4294967295" token="Maximum value of VAL" description="Maximum value of VAL"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value of VAL" description="Minimum value of VAL"/>
      </bitfield>
   </register>
   <register acronym="CMDDATA3" width="32" description="Command Data Register 3
This register forms the data for a command.  
For DATAWIDTH == 128:	This register represents bits 127:96 of flash word data register 0.
For DATAWIDTH == 64:		This register represents bits 63:32 of flash word data register 1.
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to STATCMD.DONE being set by the flash wrapper
hardware.
This register is used to aggregate masking for bits that do not
require additional program pulses during program operations, and will be
written to all 1 after the completion of all flash wrapper commands.

Use cases for the CMDDATA* registers are as follows:
1)	Program - These registers contain the data to be programmed.
2)	Erase - These registers are not used." id="CMDDATA3" offset="0x13c">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="A 32-bit data value is placed in this field.
" id="VAL" resetval="0xffffffff">
         <bitenum id="MAXIMUM" value="4294967295" token="Maximum value of VAL" description="Maximum value of VAL"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value of VAL" description="Minimum value of VAL"/>
      </bitfield>
   </register>
   <register acronym="CMDWEPROTA" width="32" description="Command WriteErase Protect A Register
This register allows the first 32 sectors of the main region to be protected from
program or erase, with 1 bit protecting each sector.  If the main region size is smaller than 32
sectors, then this register provides protection for the whole region.
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to STATCMD.DONE being set by the flash wrapper
hardware.
In addition, this register is used to aggregate masking for sectors that do not
require additional erase pulses during bank erase operations, and will be
written to all 1 after the completion of all flash wrapper commands." id="CMDWEPROTA" offset="0x1d0">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="Each bit protects 1 sector.

bit [0]:	When 1, sector 0 of the flash memory will be protected from program
		and erase.
bit [1]:	When 1, sector 1 of the flash memory will be protected from program
		and erase.
	:
	:
bit [31]:	When 1, sector 31 of the flash memory will be protected from program
		and erase.
" id="VAL" resetval="0xffffffff">
         <bitenum id="MAXIMUM" value="4294967295" token="Maximum value of VAL" description="Maximum value of VAL"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value of VAL" description="Minimum value of VAL"/>
      </bitfield>
   </register>
   <register acronym="CMDWEPROTB" width="32" description="Command WriteErase Protect B Register
This register allows main region sectors to be protected from program and
erase.  Each bit corresponds to a group of 8 sectors. 
There are 3 cases for how these protect bits are applied:
1. Single-bank system:  
    In the case where only a single flash bank is present,
    the first 32 sectors are protected via the CMDWEPROTA register.  Thus, the
    protection give by the bits in CMDWEPROTB begin with sector 32.
2. Multi-bank system, Bank 0:	
    When multiple flash banks are present, the first
    32 sectors of bank 0 are protected via the CMDWEPROTA register.  Thus, only
    bits 4 and above of CMDWEPROTB would be applicable to bank 0.  The protection of
    bit 4 and above would begin at sector 32.  Bits 3:0
    of WEPROTB are ignored for bank 0.
3. Multi-bank system, Banks 1-N:
    For banks other than bank 0 in a multi-bank system, CMDWEPROTA has
    no effect, so the bits in CMDWEPROTB will protect these banks starting
    from sector 0.
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to STATCMD.DONE being set by the flash wrapper
hardware.
In addition, this register is used to aggregate masking for sectors that do not
require additional erase pulses during bank erase operations, and will be
written to all 1 after the completion of all flash wrapper commands.
" id="CMDWEPROTB" offset="0x1d4">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="Each bit protects a group of 8 sectors.  When a bit is 1, the associated 8 sectors
in the flash will be protected from program and erase.  A maximum of 256
sectors can be protected with this register." id="VAL" resetval="0xffffffff">
         <bitenum id="MAXIMUM" value="4294967295" token="Maximum value of VAL" description="Maximum value of VAL"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value of VAL" description="Minimum value of VAL"/>
      </bitfield>
   </register>
   <register acronym="CMDWEPROTNM" width="32" description="Command WriteErase Protect Non-Main
 Register
This register allows non-main region region sectors to be protected
from program and erase.  Each bit corresponds to 1 sector. 
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to STATCMD.DONE being set by the flash wrapper
hardware.
In addition, this register is used to aggregate masking for sectors that do not
require additional erase pulses during bank erase operations, and will be
written to all 1 after the completion of all flash wrapper commands." id="CMDWEPROTNM" offset="0x210">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="2" end="0" rwaccess="RW" description="Each bit protects 1 sector.

bit [0]:	When 1, sector 0 of the non-main region will be protected from program
		and erase.
bit [1]:	When 1, sector 1 of the non-main region will be protected from program
		and erase.
	:
	:
bit [31]:	When 1, sector 31 of the non-main will be protected from program
		and erase.
" id="VAL" resetval="0x3">
         <bitenum id="MAXIMUM" value="4294967295" token="Maximum value of VAL" description="Maximum value of VAL"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value of VAL" description="Minimum value of VAL"/>
      </bitfield>
   </register>
   <register acronym="CMDWEPROTTR" width="32" description="Command WriteErase Protect Trim
 Register
This register allows trim region sectors to be protected
from program and erase.  Each bit corresponds to 1 sector. 
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to STATCMD.DONE being set by the flash wrapper
hardware.
In addition, this register is used to aggregate masking for sectors that do not
require additional erase pulses during bank erase operations, and will be
written to all 1 after the completion of all flash wrapper commands.
" id="CMDWEPROTTR" offset="0x214">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Each bit protects 1 sector.

bit [0]:	When 1, sector 0 of the engr region will be protected from program
		and erase.
bit [1]:	When 1, sector 1 of the engr region will be protected from program
		and erase.
	:
	:
bit [31]:	When 1, sector 31 of the engr region will be protected from program
		and erase.
" id="VAL" resetval="0x1">
         <bitenum id="MAXIMUM" value="4294967295" token="Maximum value of VAL" description="Maximum value of VAL"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value of VAL" description="Minimum value of VAL"/>
      </bitfield>
   </register>
   <register acronym="CMDWEPROTEN" width="32" description="Command WriteErase Protect Engr
 Register
This register allows engr region sectors to be protected
from program and erase.  Each bit corresponds to 1 sector. 
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to STATCMD.DONE being set by the flash wrapper
hardware.
In addition, this register is used to aggregate masking for sectors that do not
require additional erase pulses during bank erase operations, and will be
written to all 1 after the completion of all flash wrapper commands.
" id="CMDWEPROTEN" offset="0x218">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Each bit protects 1 sector.

bit [0]:	When 1, sector 0 of the engr region will be protected from program
		and erase.
bit [1]:	When 1, sector 1 of the engr region will be protected from program
		and erase.
	:
	:
bit [31]:	When 1, sector 31 of the engr region will be protected from program
		and erase.
" id="VAL" resetval="0x1">
         <bitenum id="MAXIMUM" value="4294967295" token="Maximum value of VAL" description="Maximum value of VAL"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value of VAL" description="Minimum value of VAL"/>
      </bitfield>
   </register>
   <register acronym="CFGCMD" width="32" description="Command Configuration Register
This register configures specific capabilities of the state machine for related to
the execution of a command.
This register is blocked for writes after CMDEXEC is written to a 1 and 
prior to STATCMD.DONE being set by the hardware to indicate that 
command execution has completed.
" id="CFGCMD" offset="0x3b0">
      <bitfield range="" begin="31" width="25" end="7" rwaccess="RW" description="Reserved" id="RESERVED_31_7" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="6" width="3" end="4" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED4" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="3" width="4" end="0" rwaccess="RW" description="Wait State setting for verify reads" id="WAITSTATE" resetval="0x2">
         <bitenum id="MAXIMUM" value="15" token="Maximum value" description="Maximum value"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value" description="Minimum value"/>
      </bitfield>
   </register>
   <register acronym="CFGPCNT" width="32" description="Pulse Counter Configuration Register
This register allows further configuration of maximum pulse counts for 
program and erase operations.
This register is blocked for writes after a 1 is written to the CMDEXEC
register and prior to STATCMD.DONE being set by the flash wrapper
hardware." id="CFGPCNT" offset="0x3b4">
      <bitfield range="" begin="31" width="12" end="20" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED20" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="19" width="3" end="17" rwaccess="RW" description="Reserved" id="RESERVED_17_19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="16" width="1" end="16" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED16" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="15" width="4" end="12" rwaccess="RW" description="Reserved" id="RESERVED_15_12" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="11" width="8" end="4" rwaccess="RW" description="Override maximum pulse counter with this value.  
If MAXPCNTOVR = 0, then this field is ignored.
If MAXPCNTOVR = 1 and MAXERSPCNTOVR = 0, then this value will be used 
to override the max pulse count for both program and erase.  Full max value
will be {4&#39;h0, MAXPCNTVAL} .
If MAXPCNTOVR = 1 and MAXERSPCNTOVR = 1, then this value will be used
to override the max pulse count for program only.  Full max value will be
{4&#39;h0, MAXPCNTVAL}." id="MAXPCNTVAL" resetval="0x0">
         <bitenum id="MAXIMUM" value="255" token="Maximum value" description="Maximum value"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value" description="Minimum value"/>
      </bitfield>
      <bitfield range="" begin="3" width="3" end="1" rwaccess="RW" description="Reserved" id="RESERVED_3_1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Override hard-wired maximum pulse count.  If MAXERSPCNTOVR
is not set, then setting this value alone will override the max pulse count for
both program and erase.  If MAXERSPCNTOVR is set, then this bit will only
control the max pulse count setting for program.
By default, this bit is 0, and a hard-wired max pulse count is used.
" id="MAXPCNTOVR" resetval="0x0">
         <bitenum id="OVERRIDE" value="1" token="Use value from MAXPCNTVAL field as maximum puse count" description="Use value from MAXPCNTVAL field as maximum puse count"/>
         <bitenum id="DEFAULT" value="0" token="Use hard-wired (default) value for maximum pulse count" description="Use hard-wired (default) value for maximum pulse count"/>
      </bitfield>
   </register>
   <register acronym="STATCMD" width="32" description="Command Status Register
This register contains status regarding completion and errors of command
execution." id="STATCMD" offset="0x3d0">
      <bitfield range="" begin="31" width="19" end="13" rwaccess="RO" description="Reserved" id="RESERVED_31_13" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="1" end="12" rwaccess="RO" description="Command failed due to error other than write/erase protect violation or verify
error.  This is an extra bit in case a new failure mechanism is added which
requires a status bit." id="FAILMISC" resetval="0x0">
         <bitenum id="STATFAIL" value="1" token="Fail" description="Fail"/>
         <bitenum id="STATNOFAIL" value="0" token="No Fail" description="No Fail"/>
      </bitfield>
      <bitfield range="" begin="11" width="3" end="9" rwaccess="RO" description="Reserved" id="RESERVED_11_9" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="RO" description="Program command failed because an attempt was made to program a stored
0 value to a 1." id="FAILINVDATA" resetval="0x0">
         <bitenum id="STATFAIL" value="1" token="Fail" description="Fail"/>
         <bitenum id="STATNOFAIL" value="0" token="No Fail" description="No Fail"/>
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RO" description="Command failed because a bank has been set to a mode other than READ.
Program and Erase commands cannot be initiated unless all banks are in READ
mode." id="FAILMODE" resetval="0x0">
         <bitenum id="STATFAIL" value="1" token="Fail" description="Fail"/>
         <bitenum id="STATNOFAIL" value="0" token="No Fail" description="No Fail"/>
      </bitfield>
      <bitfield range="" begin="6" width="1" end="6" rwaccess="RO" description="Command failed due to the use of an illegal address" id="FAILILLADDR" resetval="0x0">
         <bitenum id="STATFAIL" value="1" token="Fail" description="Fail"/>
         <bitenum id="STATNOFAIL" value="0" token="No Fail" description="No Fail"/>
      </bitfield>
      <bitfield range="" begin="5" width="1" end="5" rwaccess="RO" description="Command failed due to verify error" id="FAILVERIFY" resetval="0x0">
         <bitenum id="STATFAIL" value="1" token="Fail" description="Fail"/>
         <bitenum id="STATNOFAIL" value="0" token="No Fail" description="No Fail"/>
      </bitfield>
      <bitfield range="" begin="4" width="1" end="4" rwaccess="RO" description="Command failed due to Write/Erase Protect Sector Violation" id="FAILWEPROT" resetval="0x0">
         <bitenum id="STATFAIL" value="1" token="Fail" description="Fail"/>
         <bitenum id="STATNOFAIL" value="0" token="No Fail" description="No Fail"/>
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="RO" description="Reserved" id="RESERVED_3" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="Command In Progress
" id="CMDINPROGRESS" resetval="0x0">
         <bitenum id="STATINPROGRESS" value="1" token="In Progress" description="In Progress"/>
         <bitenum id="STATCOMPLETE" value="0" token="Complete" description="Complete"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Command Pass - valid when CMD_DONE field is 1" id="CMDPASS" resetval="0x0">
         <bitenum id="STATPASS" value="1" token="Pass" description="Pass"/>
         <bitenum id="STATFAIL" value="0" token="Fail" description="Fail"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Command Done
" id="CMDDONE" resetval="0x0">
         <bitenum id="STATDONE" value="1" token="Done" description="Done"/>
         <bitenum id="STATNOTDONE" value="0" token="Not Done" description="Not Done"/>
      </bitfield>
   </register>
   <register acronym="STATADDR" width="32" description="Current Address Counter Value
Read only register giving read access to the state machine current address.
A bank id, region id and address are stored in this register and are incremented as
necessary during execution of a command.


" id="STATADDR" offset="0x3d4">
      <bitfield range="" begin="31" width="6" end="26" rwaccess="RO" description="Reserved" id="RESERVED_31_26" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="25" width="5" end="21" rwaccess="RO" description="Current Bank ID
A bank indicator is stored in this register which represents the current bank on
which the state  machine is operating.  There is 1 bit per bank." id="BANKID" resetval="0x0">
         <bitenum id="BANK4" value="16" token="Bank 4" description="Bank 4"/>
         <bitenum id="BANK3" value="8" token="Bank 3" description="Bank 3"/>
         <bitenum id="BANK2" value="4" token="Bank 2" description="Bank 2"/>
         <bitenum id="BANK1" value="2" token="Bank 1" description="Bank 1"/>
         <bitenum id="BANK0" value="1" token="Bank 0" description="Bank 0"/>
      </bitfield>
      <bitfield range="" begin="20" width="5" end="16" rwaccess="RO" description="Current Region ID
A region indicator is stored in this register which represents the current flash 
region on which the state  machine is operating." id="REGIONID" resetval="0x1">
         <bitenum id="ENGR" value="8" token="Engr Region" description="Engr Region"/>
         <bitenum id="TRIM" value="4" token="Trim Region" description="Trim Region"/>
         <bitenum id="NONMAIN" value="2" token="Non-Main Region" description="Non-Main Region"/>
         <bitenum id="MAIN" value="1" token="Main Region" description="Main Region"/>
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RO" description="Current Bank Address
A bank offset address is stored in this register." id="BANKADDR" resetval="0x0">
         <bitenum id="MAXIMUM" value="65535" token="Maximum value" description="Maximum value"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value" description="Minimum value"/>
      </bitfield>
   </register>
   <register acronym="STATPCNT" width="32" description="Current Pulse Count Register:
Read only register giving read access to the state machine current pulse count
value for program/erase operations.


" id="STATPCNT" offset="0x3d8">
      <bitfield range="" begin="31" width="20" end="12" rwaccess="RO" description="Reserved" id="RESERVED_31_12" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="11" width="12" end="0" rwaccess="RO" description="Current Pulse Counter Value" id="PULSECNT" resetval="0x0">
         <bitenum id="MAXIMUM" value="4095" token="Maximum value" description="Maximum value"/>
         <bitenum id="MINIMUM" value="0" token="Minimum value" description="Minimum value"/>
      </bitfield>
   </register>
   <register acronym="STATMODE" width="32" description="Mode Status Register
Indicates one or more banks which not in READ mode, and it indicates the mode
which the bank(s) are in.


" id="STATMODE" offset="0x3dc">
      <bitfield range="" begin="31" width="14" end="18" rwaccess="RO" description="Reserved" id="RESERVED_31_18" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="17" width="1" end="17" rwaccess="RO" description="Bank 1T Ready.
Bank(s) are ready for 1T access.  This is accomplished when the bank and pump
have been trimmed.
" id="BANK1TRDY" resetval="0x0">
         <bitenum id="TRUE" value="1" token="Ready" description="Ready"/>
         <bitenum id="FALSE" value="0" token="Not ready" description="Not ready"/>
      </bitfield>
      <bitfield range="" begin="16" width="1" end="16" rwaccess="RO" description="Bank 2T Ready.
Bank(s) are ready for 2T access.  This is accomplished when the pump has
fully driven power rails to the bank(s).
" id="BANK2TRDY" resetval="0x0">
         <bitenum id="TRUE" value="1" token="Ready" description="Ready"/>
         <bitenum id="FALSE" value="0" token="Not ready" description="Not ready"/>
      </bitfield>
      <bitfield range="" begin="15" width="4" end="12" rwaccess="RO" description="Reserved" id="RESERVED_15_12" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="11" width="4" end="8" rwaccess="RO" description="Indicates mode of bank(s) that are not in READ mode" id="BANKMODE" resetval="0x0">
         <bitenum id="ERASEBNK" value="15" token="Erase Bank" description="Erase Bank"/>
         <bitenum id="PGMMW" value="14" token="Program Multiple Word" description="Program Multiple Word"/>
         <bitenum id="ERASESECT" value="12" token="Erase Sector" description="Erase Sector"/>
         <bitenum id="ERASEVER" value="11" token="Erase Verify Mode" description="Erase Verify Mode"/>
         <bitenum id="PGMSW" value="10" token="Program Single Word" description="Program Single Word"/>
         <bitenum id="PGMVER" value="9" token="Program Verify Mode" description="Program Verify Mode"/>
         <bitenum id="RDMARG1B" value="7" token="Read Margin 1B Mode" description="Read Margin 1B Mode"/>
         <bitenum id="RDMARG0B" value="6" token="Read Margin 0B Mode" description="Read Margin 0B Mode"/>
         <bitenum id="RDMARG1" value="4" token="Read Margin 1 Mode" description="Read Margin 1 Mode"/>
         <bitenum id="RDMARG0" value="2" token="Read Margin 0 Mode" description="Read Margin 0 Mode"/>
         <bitenum id="READ" value="0" token="Read Mode" description="Read Mode"/>
      </bitfield>
      <bitfield range="" begin="7" width="3" end="5" rwaccess="RO" description="Reserved" id="RESERVED_7_5" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="4" width="3" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="2" end="0" rwaccess="RO" description="Bank not in read mode.
Indicates which banks are not in READ mode.  There is 1 bit per bank." id="BANKNOTINRD" resetval="0x0">
         <bitenum id="BANK4" value="16" token="Bank 4" description="Bank 4"/>
         <bitenum id="BANK3" value="8" token="Bank 3" description="Bank 3"/>
         <bitenum id="BANK2" value="4" token="Bank 2" description="Bank 2"/>
         <bitenum id="BANK1" value="2" token="Bank 1" description="Bank 1"/>
         <bitenum id="BANK0" value="1" token="Bank 0" description="Bank 0"/>
      </bitfield>
   </register>
   <register acronym="GBLINFO0" width="32" description="Global Info 0 Register
Read only register detailing information about sector size and number of banks
present.

" id="GBLINFO0" offset="0x3f0">
      <bitfield range="" begin="31" width="13" end="19" rwaccess="RO" description="Reserved" id="RESERVED_31_19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="3" end="16" rwaccess="RO" description="Number of banks instantiated
Minimum:	1
Maximum:	5" id="NUMBANKS" resetval="0x2">
         <bitenum id="MAXIMUM" value="5" token="Maximum value" description="Maximum value"/>
         <bitenum id="MINIMUM" value="1" token="Minimum value" description="Minimum value"/>
      </bitfield>
      <bitfield range="" begin="15" width="16" end="0" rwaccess="RO" description="Sector size in bytes" id="SECTORSIZE" resetval="0x800">
         <bitenum id="TWOKB" value="2048" token="Sector size is TWOKB" description="Sector size is TWOKB"/>
         <bitenum id="ONEKB" value="1024" token="Sector size is ONEKB" description="Sector size is ONEKB"/>
      </bitfield>
   </register>
   <register acronym="GBLINFO1" width="32" description="Global Info 1 Register
Read only register detailing information about data, ecc and redundant data
widths in bits.

" id="GBLINFO1" offset="0x3f4">
      <bitfield range="" begin="31" width="13" end="19" rwaccess="RO" description="Reserved" id="RESERVED_31_19" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="18" width="3" end="16" rwaccess="RO" description="Redundant data width in bits" id="REDWIDTH" resetval="0x4">
         <bitenum id="W4BIT" value="4" token="Redundant data width is 4 bits" description="Redundant data width is 4 bits"/>
         <bitenum id="W2BIT" value="2" token="Redundant data width is 2 bits" description="Redundant data width is 2 bits"/>
         <bitenum id="W0BIT" value="0" token="Redundant data width is 0.  Redundancy/Repair not present." description="Redundant data width is 0.  Redundancy/Repair not present."/>
      </bitfield>
      <bitfield range="" begin="15" width="3" end="13" rwaccess="RO" description="Reserved" id="RESERVED_15_13" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="12" width="5" end="8" rwaccess="RO" description="ECC data width in bits" id="ECCWIDTH" resetval="0x0">
         <bitenum id="W16BIT" value="16" token="ECC data width is 16 bits" description="ECC data width is 16 bits"/>
         <bitenum id="W8BIT" value="8" token="ECC data width is 8 bits" description="ECC data width is 8 bits"/>
         <bitenum id="W0BIT" value="0" token="ECC data width is 0.  ECC not used." description="ECC data width is 0.  ECC not used."/>
      </bitfield>
      <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Data width in bits" id="DATAWIDTH" resetval="0x80">
         <bitenum id="W128BIT" value="128" token="Data width is 128 bits" description="Data width is 128 bits"/>
         <bitenum id="W64BIT" value="64" token="Data width is 64 bits" description="Data width is 64 bits"/>
      </bitfield>
   </register>
   <register acronym="GBLINFO2" width="32" description="Global Info 2 Register
Read only register detailing information about the number of data registers
present.

" id="GBLINFO2" offset="0x3f8">
      <bitfield range="" begin="31" width="28" end="4" rwaccess="RO" description="Reserved" id="RESERVED_31_4" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="3" width="4" end="0" rwaccess="RO" description="Number of data registers present." id="DATAREGISTERS" resetval="0x1">
         <bitenum id="MAXIMUM" value="8" token="Maximum value of DATAREGISTERS" description="Maximum value of DATAREGISTERS"/>
         <bitenum id="MINIMUM" value="1" token="Minimum value of DATAREGISTERS" description="Minimum value of DATAREGISTERS"/>
      </bitfield>
   </register>
   <register acronym="BANK0INFO0" width="32" description="Bank Info 0 Register for bank 0.
Read only register detailing information about Main region size in the bank.

" id="BANK0INFO0" offset="0x400">
      <bitfield range="" begin="31" width="20" end="12" rwaccess="RO" description="Reserved" id="RESERVED_31_12" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="11" width="12" end="0" rwaccess="RO" description="Main region size in sectors
Minimum:	0x8 (8)
Maximum:	0x200 (512)" id="MAINSIZE" resetval="0x100">
         <bitenum id="MAXSECTORS" value="512" token="Maximum value of MAINSIZE" description="Maximum value of MAINSIZE"/>
         <bitenum id="MINSECTORS" value="8" token="Minimum value of MAINSIZE" description="Minimum value of MAINSIZE"/>
      </bitfield>
   </register>
   <register acronym="BANK0INFO1" width="32" description="Bank Info1 Register for bank 0.
Read only register detailing information about Non-Main, Trim, and Engr
region sizes in the bank.

" id="BANK0INFO1" offset="0x404">
      <bitfield range="" begin="31" width="8" end="24" rwaccess="RO" description="Reserved" id="RESERVED_31_24" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="23" width="8" end="16" rwaccess="RO" description="Engr region size in sectors
Minimum:	0x0 (0)
Maximum:	0x10 (16)" id="ENGRSIZE" resetval="0x1">
         <bitenum id="MAXSECTORS" value="32" token="Maximum value of ENGRSIZE" description="Maximum value of ENGRSIZE"/>
         <bitenum id="MINSECTORS" value="0" token="Minimum value of ENGRSIZE" description="Minimum value of ENGRSIZE"/>
      </bitfield>
      <bitfield range="" begin="15" width="8" end="8" rwaccess="RO" description="Trim region size in sectors
Minimum:	0x0 (0)
Maximum:	0x10 (16)" id="TRIMSIZE" resetval="0x1">
         <bitenum id="MAXSECTORS" value="32" token="Maximum value of TRIMSIZE" description="Maximum value of TRIMSIZE"/>
         <bitenum id="MINSECTORS" value="0" token="Minimum value of TRIMSIZE" description="Minimum value of TRIMSIZE"/>
      </bitfield>
      <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Non-main region size in sectors
Minimum:	0x0 (0)
Maximum:	0x10 (16)" id="NONMAINSIZE" resetval="0x2">
         <bitenum id="MAXSECTORS" value="32" token="Maximum value of NONMAINSIZE" description="Maximum value of NONMAINSIZE"/>
         <bitenum id="MINSECTORS" value="0" token="Minimum value of NONMAINSIZE" description="Minimum value of NONMAINSIZE"/>
      </bitfield>
   </register>
   <register acronym="BANK1INFO0" width="32" description="Bank Info 0 Register for bank 1.
Read only register detailing information about Main region size in the bank.

" id="BANK1INFO0" offset="0x410">
      <bitfield range="" begin="31" width="20" end="12" rwaccess="RO" description="Reserved" id="RESERVED_31_12" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="11" width="12" end="0" rwaccess="RO" description="Main region size in sectors
Minimum:	0x8 (8)
Maximum:	0x200 (512)" id="MAINSIZE" resetval="0x100">
         <bitenum id="MAXSECTORS" value="512" token="Maximum value of MAINSIZE" description="Maximum value of MAINSIZE"/>
         <bitenum id="MINSECTORS" value="8" token="Minimum value of MAINSIZE" description="Minimum value of MAINSIZE"/>
      </bitfield>
   </register>
   <register acronym="BANK1INFO1" width="32" description="Bank Info1 Register for bank 1.
Read only register detailing information about Non-Main, Trim, and Engr
region sizes in the bank.

" id="BANK1INFO1" offset="0x414">
      <bitfield range="" begin="31" width="8" end="24" rwaccess="RO" description="Reserved" id="RESERVED_31_24" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="23" width="8" end="16" rwaccess="RO" description="Engr region size in sectors
Minimum:	0x0 (0)
Maximum:	0x10 (16)" id="ENGRSIZE" resetval="0x1">
         <bitenum id="MAXSECTORS" value="32" token="Maximum value of ENGRSIZE" description="Maximum value of ENGRSIZE"/>
         <bitenum id="MINSECTORS" value="0" token="Minimum value of ENGRSIZE" description="Minimum value of ENGRSIZE"/>
      </bitfield>
      <bitfield range="" begin="15" width="8" end="8" rwaccess="RO" description="Trim region size in sectors
" id="TRIMSIZE" resetval="0x1">
         <bitenum id="MAXSECTORS" value="32" token="Maximum value of TRIMSIZE" description="Maximum value of TRIMSIZE"/>
         <bitenum id="MINSECTORS" value="0" token="Minimum value of TRIMSIZE" description="Minimum value of TRIMSIZE"/>
      </bitfield>
      <bitfield range="" begin="7" width="8" end="0" rwaccess="RO" description="Non-main region size in sectors
" id="NONMAINSIZE" resetval="0x2">
         <bitenum id="MAXSECTORS" value="32" token="Maximum value of NONMAINSIZE" description="Maximum value of NONMAINSIZE"/>
         <bitenum id="MINSECTORS" value="0" token="Minimum value of NONMAINSIZE" description="Minimum value of NONMAINSIZE"/>
      </bitfield>
   </register>
</module>
