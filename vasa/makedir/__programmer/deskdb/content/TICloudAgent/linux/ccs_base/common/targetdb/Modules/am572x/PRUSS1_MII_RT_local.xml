<module name="PRUSS1_MII_RT" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="PRUSS_MII_RT_RXCFG0" acronym="PRUSS_MII_RT_RXCFG0" offset="0x0" page="2" width="32" description="MII RXCFG 0 REGISTER This register contains the PRU0 RXCFG configuration variables () for the RX path. is attached to PRU0. controls which RX port is attached to PRU0.">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="9" end="9" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RX_AUTO_FWD_PRE" width="1" begin="6" end="6" resetval="0x0" description="Enables auto-forward of received preamble. When enabled, this will forward the preamble nibbles including the SFD to the TX L1 FIFO that is attached to the PRU. First data byte seen by PRU R31 and/or RX L2 is destination address (DA). Note: Odd number of preamble nibbles is supported in this mode. For example, 0x55D Note that new RX should only occur after the current TX completes 0x0: Disable 0x1:Enable, it must disable RX_CUT_PREAMBLE and TX_AUTO_PREAMBLE." range="" rwaccess="RW"/>
    <bitfield id="RX_BYTE_SWAP" width="1" begin="5" end="5" resetval="0x0" description="Defines the order of Byte0/1 placement for RX R31 and RX L2. Note: that if TX_AUTO_SEQUENCE enabled, this bit cannot get enable since TX_BYTE_SWAP on swaps the PRU output. This bit must be selected/updated when the port is disabled or there is no traffic. 0x0: R31 [15:8]/RXL2 [15:8] = Byte1{Nibble3,Nibble2} R31[ 7:0]/RXL2 [7:0] = Byte0{Nibble1,Nibble0} 0x1: R31 [15:8]/RXL2 [15:8] = Byte0{Nibble1,Nibble0} R31[ 7:0]/RXL2 [7:0] = Byte1{Nibble3,Nibble2} Nibble0 is the first nibble received. Must be selected /updated when the port is disabled or no traffic It only effects R31 and RX L2 order" range="" rwaccess="RW"/>
    <bitfield id="RX_L2_EN" width="1" begin="4" end="4" resetval="0x0" description="Enables RX L2 buffer. 0x0: Disable (RX L2 can function as generic scratch pad) 0x1: Enable" range="" rwaccess="RW"/>
    <bitfield id="RX_MUX_SEL" width="1" begin="3" end="3" resetval="0x0" description="Selects receive data source. Typically, the setting for this will not be identical for the two MII receive configuration registers. 0x0: MII RX Data from Port 0 (default for PRUSS_MII_RT_RXCFG0) 0x1: MII RX Data from Port 1 (default for PRUSS_MII_RT_RXCFG1)" range="" rwaccess="RW"/>
    <bitfield id="RX_CUT_PREAMBLE" width="1" begin="2" end="2" resetval="0x0" description="Removes received preamble. 0x0: All data from Ethernet PHY are passed on to PRU register. This assumes Ethernet PHY which does not shorten the preamble. 0x1: MII interface suppresses preamble and sync frame delimiter. First data byte seen by PRU register is DA" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RX_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enables the receive traffic currently selected by RX_MUX_SELECT. 0x0 Disable 0x1 Enable" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_MII_RT_RXCFG1" acronym="PRUSS_MII_RT_RXCFG1" offset="0x4" page="2" width="32" description="This register contains the PRU1 RXCFG configuration variables () for the RX path. is attached to PRU1. controls which RX port is attached to PRU1">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="9" end="9" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RX_AUTO_FWD_PRE" width="1" begin="6" end="6" resetval="0x0" description="Enables auto-forward of received preamble. When enabled, this will forward the preamble nibbles including the SFD to the TX L1 FIFO that is attached to the PRU. First data byte seen by PRU R31 and/or RX L2 is destination address (DA). Note: Odd number of preamble nibbles is supported in this mode. For example, 0x55D Note that new RX should only occur after the current TX completes 0x0: Disable 0x1: Enable, it must disable RX_CUT_PREAMBLE and TX_AUTO_PREAMBLE" range="" rwaccess="R"/>
    <bitfield id="RX_BYTE_SWAP" width="1" begin="5" end="5" resetval="0x0" description="Defines the order of Byte0/1 placement for RX R31 and RX L2. Note: If TX_AUTO_SEQUENCE is enabled, this bit cannot get enabled since TX_BYTE_SWAP on swaps the PRU output. This bit must be selected/updated when the port is disabled or there is no traffic. 0x0: R31 [15:8]/RXL2 [15:8] = Byte1{Nibble3,Nibble2} R31[ 7:0]/RXL2 [7:0] = Byte0{Nibble1,Nibble0} 0x1: R31 [15:8]/RXL2 [15:8] = Byte0{Nibble1,Nibble0} R31[ 7:0]/RXL2 [7:0] = Byte1{Nibble3,Nibble2} Nibble0 is the first nibble received." range="" rwaccess="RW"/>
    <bitfield id="RX_L2_EN" width="1" begin="4" end="4" resetval="0x0" description="Enables RX L2 buffer. 0x0: Disable (RX L2 can function as generic scratch pad) 0x1: Enable" range="" rwaccess="RW"/>
    <bitfield id="RX_MUX_SEL" width="1" begin="3" end="3" resetval="0x1" description="Selects receive data source. Typically, the setting for this will not be identical for the two MII receive configuration registers. 0x0: MII RX Data from Port 0 (default for PRUSS_MII_RT_RXCFG0) 0x1: MII RX Data from Port 1 (default for PRUSS_MII_RT_RXCFG1)" range="" rwaccess="RW"/>
    <bitfield id="RX_CUT_PREAMBLE" width="1" begin="2" end="2" resetval="0x0" description="Removes received preamble. 0x0: All data from Ethernet PHY are passed on to PRU register. This assumes Ethernet PHY which does not shorten the preamble. 0x1: MII interface suppresses preamble and sync frame delimiter. First data byte seen by PRU register is destination address." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RX_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enables the receive traffic currently selected by RX_MUX_SELECT. 0x0: Disable 0x1: Enable" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_MII_RT_TXCFG0" acronym="PRUSS_MII_RT_TXCFG0" offset="0x10" page="2" width="32" description="This register contains the configuration variables for the transmit path on the MII interface port 0. is attached to Port TX0. controls which PRU is selected for TX0">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="TX_CLK_DELAY" width="3" begin="30" end="28" resetval="0x0" description="In order to guarantee the MII_RT IO timing values published in the device data manual, the PRUSS_GICLK clock must be configured for 200MHz and TX_CLK_DELAY must be set to 6h." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="27" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TX_START_DELAY" width="10" begin="25" end="16" resetval="0x40" description="Defines the minimum time interval (delay) between receiving the RXDV for the current frame and the start of the transmit interface sending data to the MII interface. Delay value is in units of MII_RT clock cycles, which uses the PRUSS_GICLK (default is 200MHz, or 5ns). Default TX_START_DELAY value is 320ns, which is optimized for minimum latency at 16 bit processing. Counter is started with RX_DV signal going active. Transmit interface stops sending data when no more data is written into transmit interface by PRU along with TX_EOF marker bit set. If the TX FIFO has data when the delay expires, then TX will start sending data. But if the TX FIFO is empty, it will not start until the TX FIFO is not empty. It is possible to overflow the TX FIFO with the max delay setting when auto-forwarding is enabled since the time delay is larger than the amount of data it needs to store. As long as TX L1 FIFO overflows, software will need to issue a TX_RESET to reset the TX FIFO. The total delay is 64-byte times (size of TX FIFO), but delays for synchronization need to be allowed. Do to this fact, the maximum delay should be 80ns less when auto forwarding is enabled. Therefore, 0x3F0 is the maximum in this configuration." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TX_AUTO_SEQUENCE" width="1" begin="9" end="9" resetval="0x0" description="Enables transmit auto-sequence. Note the transmit data source is determined by TX_MUX_SEL setting. 0x0: Disable 0x1: Enable, transmit state machine based on events on receiver path that is connected to the respective transmitter. Also, the masking logic is disabled and only the MII data is used." range="" rwaccess="RW"/>
    <bitfield id="TX_MUX_SEL" width="1" begin="8" end="8" resetval="0x1" description="Selects transmit data source. The default/reset setting for TX Port 0 is 1. This setting permits MII TX Port 0 to receive data from PRU1 and the MII TX Port 1 which is connected to PRU0 by default. 0x0: Data from PRU0 (default for PRUSS_MII_RT_TXCFG1) 0x1: Data from PRU1 (default for PRUSS_MII_RT_TXCFG0)" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TX_BYTE_SWAP" width="1" begin="3" end="3" resetval="0x0" description="Defines the order of Byte0/1 placement for TX R30. This bit must be selected/updated when the port is disabled or there is no traffic." range="" rwaccess="RW"/>
    <bitfield id="TX_EN_MODE" width="1" begin="2" end="2" resetval="0x0" description="Enables transmit self clear on TX_EOF event.Note that iep.cmp[3] must be set before transmission will start for TX0, and iep_cmp[4] for TX1. This is a new dependency, in addition to TX L1 FIFO not empty and TX_START_DELAY expiration, to start transmission. 0x0: Disable 0x1: Enable, TX_ENABLE will be clear for a TX_EOF event by itself." range="" rwaccess="RW"/>
    <bitfield id="TX_AUTO_PREAMBLE" width="1" begin="1" end="1" resetval="0x0" description="Transmit data auto-preamble. 0x0: PRU will provide full preamble 0x1: TX FIFO will insert pre-amble automatically Note: the TX FIFO does not get preloaded with the preamble until the first write occurs. This can cause the latency to be larger the min latency." range="" rwaccess="RW"/>
    <bitfield id="TX_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enables transmit traffic on TX PORT. If TX_EN_MODE is set, then TX_ENABLE will self clear during a TX_EOF event. Note Software can use this to pre-fill the TX FIFO and then start the TX frame during non-ECS operations. 0x0: TX PORT is disabled/stopped immediately 0x1: TX PORT is enabled and the frame will start once the IPG counter expired and TX Start Delay counter has expired" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_MII_RT_TXCFG1" acronym="PRUSS_MII_RT_TXCFG1" offset="0x14" page="2" width="32" description="MII TXCFG 1 REGISTER This register contains the configuration variables for the transmit path on the MII interface port 1. is attached to Port TX1. controls which PRU is selected for TX1">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="TX_CLK_DELAY" width="3" begin="30" end="28" resetval="0x0" description="In order to guarantee the MII_RT IO timing values published in the device data manual, the PRUSS_GICLK clock must be configured for 200MHz and TX_CLK_DELAY must be set to 6h." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="27" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TX_START_DELAY" width="10" begin="25" end="16" resetval="0x40" description="Defines the minimum time interval (delay) between receiving the RXDV for the current frame and the start of the transmit interface sending data to the MII interface. Delay value is in units of MII_RT clock cycles, which uses the PRUSS_GICLK (default is 200MHz, or 5ns). Default TX_START_DELAY value is 320ns, which is optimized for minimum latency at 16 bit processing. Counter is started with RX_DV signal going active. Transmit interface stops sending data when no more data is written into transmit interface by PRU along with TX_EOF marker bit set. If the TX FIFO has data when the delay expires, then TX will start sending data. But if the TX FIFO is empty, it will not start until the TX FIFO is not empty. It is possible to overflow the TX FIFO with the max delay setting when auto-forwarding is enabled since the time delay is larger than the amount of data it needs to store. As long as TX L1 FIFO overflows, software will need to issue a TX_RESET to reset the TX FIFO. The total delay is 64-byte times (size of TX FIFO), but delays for synchronization need to be allowed. Do to this fact, the maximum delay should be 80ns less when auto forwarding is enabled. Therefore, 0x3F0 is the maximum in this configuration." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TX_AUTO_SEQUENCE" width="1" begin="9" end="9" resetval="0x0" description="Enables transmit auto-sequence. Note the transmit data source is determined by TX_MUX_SEL setting. 0x0: Disable 0x1: Enable, transmit state machine based on events on receiver path that is connected to the respective transmitter.TX data from PRU1 is selected Also, the masking logic is disabled and only the MII data is used." range="" rwaccess="RW"/>
    <bitfield id="TX_MUX_SEL" width="1" begin="8" end="8" resetval="0x0" description="Selects transmit data source. The default/reset setting for TX Port 0 is 1. This setting permits MII TX Port 0 to receive data from PRU1 and the MII TX Port 1 which is connected to PRU0 by default. 0x0: Data from PRU0 (default for PRUSS_MII_RT_TXCFG1) 0x1: Data from PRU1 (default for PRUSS_MII_RT_TXCFG0)" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TX_BYTE_SWAP" width="1" begin="3" end="3" resetval="0x0" description="Defines the order of Byte0/1 placement for TX R30. This bit must be selected/updated when the port is disabled or there is no traffic." range="" rwaccess="RW"/>
    <bitfield id="TX_EN_MODE" width="1" begin="2" end="2" resetval="0x0" description="Enables transmit self clear on TX_EOF event.Note that iep.cmp[3] must be set before transmission will start for TX0, and iep_cmp[4] for TX1. This is a new dependency, in addition to TX L1 FIFO not empty and TX_START_DELAY expiration, to start transmission. 0x0: Disable 0x1: Enable, TX_ENABLE will be clear for a TX_EOF event by itself." range="" rwaccess="RW"/>
    <bitfield id="TX_AUTO_PREAMBLE" width="1" begin="1" end="1" resetval="0x0" description="Transmit data auto-preamble. 0x0: PRU will provide full preamble 0x1: TX FIFO will insert pre-amble automatically Note: the TX FIFO does not get preloaded with the preamble until the first write occurs. This can cause the latency to be larger the min latency." range="" rwaccess="RW"/>
    <bitfield id="TX_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enables transmit traffic on TX PORT. If TX_EN_MODE is set, then TX_ENABLE will self clear during a TX_EOF event. Note Software can use this to pre-fill the TX FIFO and then start the TX frame during non-ECS operations. 0x0: TX PORT is disabled/stopped immediately 0x1: TX PORT is enabled and the frame will start once the IPG counter expired and TX Start Delay counter has expired" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_MII_RT_TX_CRC0" acronym="PRUSS_MII_RT_TX_CRC0" offset="0x20" page="2" width="32" description="MII TXCRC 0 REGISTER It contains CRC32 which PRU0 reads">
    <bitfield id="TX_CRC" width="32" begin="31" end="0" resetval="0x0" description="FCS (CRC32) data can be read by PRU for diagnostics. It is only valid after 6 clocks after a TX_CRC_HIGH command is given." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_MII_RT_TX_CRC1" acronym="PRUSS_MII_RT_TX_CRC1" offset="0x24" page="2" width="32" description="MII TXCRC 1 REGISTER It contains CRC32 which PRU1 reads">
    <bitfield id="TX_CRC" width="32" begin="31" end="0" resetval="0x0" description="FCS (CRC32) data can be read by PRU for diagnostics. It is only valid after 6 clocks after a TX_CRC_HIGH command is given." range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_MII_RT_TX_IPG0" acronym="PRUSS_MII_RT_TX_IPG0" offset="0x30" page="2" width="32" description="MII TXIPG 0 REGISTER">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TX_IPG" width="10" begin="9" end="0" resetval="0x28" description="Defines the minimum of transmit Inter Packet Gap (IPG) which is the number of PRUSS_GICLK cycles between the de-assertion of TX_EN and the assertion of TX_EN. The start of the TX will get delayed when the incoming packet IPG is less than defined minimum value. In general, software should program in increments of 8, 40ns to insure the extra delays takes effect." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_MII_RT_TX_IPG1" acronym="PRUSS_MII_RT_TX_IPG1" offset="0x34" page="2" width="32" description="MII TXIPG 1 REGISTER">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TX_IPG" width="10" begin="9" end="0" resetval="0x28" description="Defines the minimum of transmit Inter Packet Gap (IPG) which is the number of PRUSS_GICLK cycles between the de-assertion of TX_EN and the assertion of TX_EN. The start of the TX will get delayed when the incoming packet IPG is less than defined minimum value. In general, software should program in increments of 8, 40ns to insure the extra delays takes effect." range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_MII_RT_PRS0" acronym="PRUSS_MII_RT_PRS0" offset="0x38" page="2" width="32" description="MII PORT STATUS 0 REGISTER">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="MII_CRS" width="1" begin="1" end="1" resetval="0x0" description="Read the current state of pr1_mii0_crs" range="" rwaccess="R"/>
    <bitfield id="MII_COL" width="1" begin="0" end="0" resetval="0x0" description="Read the current state of pr1_mii0_col" range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_MII_RT_PRS1" acronym="PRUSS_MII_RT_PRS1" offset="0x3C" page="2" width="32" description="MII PORT STATUS 1 REGISTER">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="MII_CRS" width="1" begin="1" end="1" resetval="0x0" description="Read the current state of pr1_mii1_crs" range="" rwaccess="R"/>
    <bitfield id="MII_COL" width="1" begin="0" end="0" resetval="0x0" description="Read the current state of pr1_mii1_col" range="" rwaccess="R"/>
  </register>
  <register id="PRUSS_MII_RT_RX_FRMS0" acronym="PRUSS_MII_RT_RX_FRMS0" offset="0x40" page="2" width="32" description="MII RXFRMS 0 REGISTER">
    <bitfield id="RX_MAX_FRM" width="16" begin="31" end="16" resetval="0x5F1" description="Defines the maximum received frame count. If the total byte count of received frame is more than defined value, RX_MAX_FRM_ERR will get set. 0x0 = 1 byte after SFD and including CRC N= N+1 bytes after SFD and including CRC Note if the incoming frame is truncated at the marker, RX_CRC and RX_NIBBLE_ODD will not get asserted." range="" rwaccess="RW"/>
    <bitfield id="RX_MIN_FRM" width="16" begin="15" end="0" resetval="0x3F" description="Defines the minimum received frame count. If the total byte count of received frame is less than defined value, RX_MIN_FRM_ERR will get set. 0x0 = 1 byte after SFD and including CRC N=N+1 bytes after SFD and including CRC" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_MII_RT_RX_FRMS1" acronym="PRUSS_MII_RT_RX_FRMS1" offset="0x44" page="2" width="32" description="MII RXFRMS 1 REGISTER">
    <bitfield id="RX_MAX_FRM" width="16" begin="31" end="16" resetval="0x5F1" description="Defines the maximum received frame count. If the total byte count of the received frame is more than defined value, RX_MAX_FRM_ERR will get set. 0x0 = 1 byte after SFD and including CRC N= N+1 bytes after SFD and including CRC Note if the incoming frame is truncated at the marker, RX_CRC and RX_NIBBLE_ODD will not get asserted." range="" rwaccess="RW"/>
    <bitfield id="RX_MIN_FRM" width="16" begin="15" end="0" resetval="0x3F" description="Defines the minimum received frame count. If the total byte count of received frame is less than defined value, RX_MIN_FRM_ERR will get set. 0x0 = 1 byte after SFD and including CRC N=N+1 bytes after SFD and including CRC" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_MII_RT_RX_PCNT0" acronym="PRUSS_MII_RT_RX_PCNT0" offset="0x48" page="2" width="32" description="MII RXPCNT 0 REGISTER">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="RX_MAX_PCNT" width="4" begin="7" end="4" resetval="0xE" description="Defines the maximum number of nibbles until the start of frame delimiter (SFD) event occurred (i.e. matches 0xD5). RX_MAX_PRE_COUNT_ERR will be set if the preamble counts more than the value of RX_MAX_PCNT. If the SFD does not occur within 16 nibbles, the error will assert and the incoming frame will be truncated. 0x0: Disabled 0x1: Reserved 0x2: 4th nibble needs to have built 0xD5 0xe: 16th nibble needs to have built 0xD5 Note the 16th nibble is transmitted. Note for firmware enabling preamble error detection, it is recommended to keep RX_MAX_PCNT disabled (0x0). Otherwise, hardware can truncate a valid frame with too long of a preamble." range="" rwaccess="RW"/>
    <bitfield id="RX_MIN_PCNT" width="4" begin="3" end="0" resetval="0x1" description="Defines the minimum number of nibbles until the start of frame delimiter (SFD) event occurred, which is matched the value 0xD5. RX_MIN_PRE_COUNT_ERR will be set if the preamble counts less than the value of RX_MIN_PCNT. 0x0 Disabled 0x1 1 0x5 before 0xD5 0x2 2 0x5 before 0xD5 N min of N 0x5 before 0xD5 Note it does not need to be &#8220;0x5&#8221;" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_MII_RT_RX_PCNT1" acronym="PRUSS_MII_RT_RX_PCNT1" offset="0x4C" page="2" width="32" description="MII RXPCNT 1 REGISTER">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="RX_MAX_PCNT" width="4" begin="7" end="4" resetval="0xE" description="Defines the maximum number of nibbles until the start of frame delimiter (SFD) event occurred (i.e. matches 0xD5). RX_MAX_PRE_COUNT_ERR will be set if the preamble counts more than the value of RX_MAX_PCNT. If the SFD does not occur within 16 nibbles, the error will assert and the incoming frame will be truncated. 0x0: Disabled 0x1: Reserved 0x2: 4th nibble needs to have built 0xD5 0xe: 16th nibble needs to have built 0xD5 Note the 16th nibble is transmitted Note for firmware enabling preamble error detection, it is recommended to keep RX_MAX_PCNT disabled (0x0). Otherwise, hardware can truncate a valid frame with too long of a preamble." range="" rwaccess="RW"/>
    <bitfield id="RX_MIN_PCNT" width="4" begin="3" end="0" resetval="0x1" description="Defines the minimum number of nibbles until the start of frame delimiter (SFD) event occurred, which is matched the value 0xD5. RX_MIN_PRE_COUNT_ERR will be set if the preamble counts less than the value of RX_MIN_PCNT. 0x0 Disabled 0x1: 1 0x5 before 0xD5 0x2: 2 0x5 before 0xD5 N: N 0x5 before 0xD5 Note it does not need to be &#8220;0x5&#8221;" range="" rwaccess="RW"/>
  </register>
  <register id="PRUSS_MII_RT_RX_ERR0" acronym="PRUSS_MII_RT_RX_ERR0" offset="0x50" page="2" width="32" description="MII RXERR 0 REGISTER">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="RX_MAX_FRM_ERR" width="1" begin="3" end="3" resetval="0x0" description="Error status of received frame is more than the value of RX_MAX_FRM. 0x0: No error occurred 0x1: Error occurred Write 1 to Clear" range="" rwaccess="RWr1Clr"/>
    <bitfield id="RX_MIN_FRM_ERR" width="1" begin="2" end="2" resetval="0x0" description="Error status of received frame is less than the value of RX_MIN_FRM_CNT. 0x0: No error occurred 0x1: Error occurred Write 1 to Clear" range="" rwaccess="RWr1Clr"/>
    <bitfield id="RX_MAX_PCNT_ERR" width="1" begin="1" end="1" resetval="0x0" description="Error status of received preamble nibble is more than the value of RX_MAX_PCNT. 0x0: No error occurred 0x1: Error occurred Write 1 to Clear" range="" rwaccess="RWr1Clr"/>
    <bitfield id="RX_MIN_PCNT_ERR" width="1" begin="0" end="0" resetval="0x0" description="Error status of received preamble nibble is less than the value of RX_MIN_PCNT. 0x0: No error occurred 0x1: Error occurred Write 1 to Clear" range="" rwaccess="RWr1Clr"/>
  </register>
  <register id="PRUSS_MII_RT_RX_ERR1" acronym="PRUSS_MII_RT_RX_ERR1" offset="0x54" page="2" width="32" description="MII RXERR 1 REGISTER">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="RX_MAX_FRM_ERR" width="1" begin="3" end="3" resetval="0x0" description="Error status of received frame is more than the value of RX_MAX_FRM_CNT. 0x0: No error occurred 0x1: Error occurred Write 1 to Clear" range="" rwaccess="RW"/>
    <bitfield id="RX_MIN_FRM_ERR" width="1" begin="2" end="2" resetval="0x0" description="Error status of received frame is less than the value of RX_MIN_FRM. 0x0: No error occurred 0x1: Error occurred Write 1 to Clear" range="" rwaccess="RW"/>
    <bitfield id="RX_MAX_PCNT_ERR" width="1" begin="1" end="1" resetval="0x0" description="Error status of received preamble nibble is more than the value of RX_MAX_PCNT. 0x0: No error occurred 0x1: Error occurred Write 1 to Clear" range="" rwaccess="RW"/>
    <bitfield id="RX_MIN_PCNT_ERR" width="1" begin="0" end="0" resetval="0x0" description="Error status of received preamble nibble is less than the value of RX_MIN_PCNT. 0x0: No error occurred 0x1: Error occurred Write 1 to Clear" range="" rwaccess="RW"/>
  </register>
</module>
