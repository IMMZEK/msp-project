<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="MSS_MCAN_ECC" id="MSS_MCAN_ECC">
  
  
  <register acronym="REV" description="Aggregator Revision Register" id="REV" offset="0x0" width="32">
    
  <bitfield begin="31" description="Scheme" end="30" id="SCHEME" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="29" description="bu" end="28" id="BU" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="27" description="Module ID" end="16" id="MODULE_ID" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="15" description="RTL version" end="11" id="REVRTL" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="Major version" end="8" id="REVMAJ" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="Custom version" end="6" id="CUSTOM" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="Minor version" end="0" id="REVMIN" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="VECTOR" description="ECC Vector Register" id="VECTOR" offset="0x8" width="32">
    
  <bitfield begin="31" description="Reserved" end="25" id="NU1" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="24" description="Status to indicate if read on serial VBUS is complete, write of any value will clear this bit. Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field." end="24" id="RD_SVBUS_DONE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Read address" end="16" id="RD_SVBUS_ADDR" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="Write 1 to trigger a read on the serial VBUS. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field." end="15" id="RD_SVBUS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Reserved" end="11" id="NU0" rwaccess="R" width="4"></bitfield>
    
  <bitfield begin="10" description="Value written to select the corresponding ECC RAM for control or status" end="0" id="ECC_VEC" rwaccess="RW" width="11"></bitfield>
  </register>
  
  
  <register acronym="STAT" description="Misc Status" id="STAT" offset="0xC" width="32">
    
  <bitfield begin="31" description="Reserved" end="11" id="NU2" rwaccess="R" width="21"></bitfield>
    
  <bitfield begin="10" description="Indicates the number of RAMS serviced by the ECC aggregator" end="0" id="NUM_RAMS" rwaccess="R" width="11"></bitfield>
  </register>
  
  
  <register acronym="CTRL" description="CTRL" id="CTRL" offset="0x14" width="32">
    
  <bitfield begin="31" description="TI Internal : Reserved" end="9" id="NU3" rwaccess="R" width="23"></bitfield>
    
  <bitfield begin="8" description="TI Internal : Check timeout" end="8" id="CHECK TIMEOUT" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="7" description="TI Internal : Check Parity" end="7" id="CHECK PARITY" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="6" description="TI Internal : Force Error only once" end="6" id="ERROR_ONCE" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="5" description="TI Internal : Force Error on any RAM read" end="5" id="FORCE_N_ROW" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="4" description="TI Internal : Force Double Bit Error" end="4" id="FORCE_DED" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="3" description="TI Internal : Force Single Bit Error" end="3" id="FORCE_SEC" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="2" description="TI Internal : Enable rmw" end="2" id="EN_RMW" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="1" description="TI Internal : Enable ECC check" end="1" id="ECC_CHK" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="0" description="TI Internal : Enable ECC" end="0" id="ECC_EN" rwaccess="W" width="1"></bitfield>
  </register>
  
  
  <register acronym="ERR_CTRL1" description="ERR_CTRL1" id="ERR_CTRL1" offset="0x18" width="32">
    
  <bitfield begin="31" description="TI Internal : Row address where single or double-bit error needs to be applied. This is ignored if force_n_row is set" end="0" id="ECC_ROW" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ERR_CTRL2" description="ERR_CTRL2" id="ERR_CTRL2" offset="0x1C" width="32">
    
  <bitfield begin="31" description="TI Internal : Data bit that needs to be flipped if double bit error needs to be forced" end="16" id="ECC_BIT2" rwaccess="RW" width="16"></bitfield>
    
  <bitfield begin="15" description="TI Internal : Data bit that needs to be flipped when force_sec is set" end="0" id="ECC_BIT1" rwaccess="RW" width="16"></bitfield>
  </register>
  
  
  <register acronym="ERR_STAT1" description="ERR_STAT1" id="ERR_STAT1" offset="0x20" width="32">
    
  <bitfield begin="31" description="TI Internal : Data bit that corresponds to the single-bit error" end="16" id="ECC_BIT1_STS" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="TI Internal : Clear Ctrl Reg Error Status. Write 1 to clear. This bit is self clearing." end="15" id="CLR_ECC_CTRL_REG" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="14" description="TI Internal : Clear Parity Error Status. Write 1 to clear. This bit is self clearing." end="13" id="CLR_ECC_PAR" rwaccess="W" width="2"></bitfield>
    
  <bitfield begin="12" description="TI Internal : Clear Other Error Status. Write 1 to clear. This bit is self clearing." end="12" id="CLR_ECC_OTHER" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="11" description="TI Internal : Clear Double Bit Error Status. Write 1 to clear. This bit is self clearing." end="10" id="CLR_ECC_DED" rwaccess="W" width="2"></bitfield>
    
  <bitfield begin="9" description="TI Internal : Clear Single Bit Error Status. Write 1 to clear. This bit is self clearing." end="8" id="CLR_ECC_SEC" rwaccess="W" width="2"></bitfield>
    
  <bitfield begin="7" description="TI Internal : Force ctrl reg pending interrupt. Write 1 to set. This bit is self clearing." end="7" id="ECC_CTRL_REG" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="6" description="TI Internal : Force ECC parity pending interrupt. Write 1 to set. This bit is self clearing." end="5" id="ECC_PAR" rwaccess="W" width="2"></bitfield>
    
  <bitfield begin="4" description="TI Internal : Force ECC other pending interrupt. Write 1 to set. This bit is self clearing." end="4" id="ECC_OTHER" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="3" description="TI Internal : Force ECC DED pending interrupt. Write 1 to set. This bit is self clearing." end="2" id="ECC_DED" rwaccess="W" width="2"></bitfield>
    
  <bitfield begin="1" description="TI Internal : Force ECC SEC pending interrupt. Write 1 to set. This bit is self clearing." end="0" id="ECC_SEC" rwaccess="W" width="2"></bitfield>
  </register>
  
  
  <register acronym="ERR_STAT2" description="ERR_STAT2" id="ERR_STAT2" offset="0x24" width="32">
    
  <bitfield begin="31" description="TI Internal : Row address where the single or double-bit error has occurred" end="0" id="ECC_ROW" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="ERR_STAT3" description="ERR_STAT3" id="ERR_STAT3" offset="0x28" width="32">
    
  <bitfield begin="31" description="TI Internal : Reserved" end="10" id="NU6" rwaccess="R" width="22"></bitfield>
    
  <bitfield begin="9" description="TI Internal : Clear timeout pending" end="9" id="CLR_TIMEOUT_PEND" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="8" description="TI Internal : Reserved" end="2" id="NU5" rwaccess="R" width="7"></bitfield>
    
  <bitfield begin="1" description="TI Internal : Timeout pending" end="1" id="TIMEOUT_PEND" rwaccess="W" width="1"></bitfield>
    
  <bitfield begin="0" description="TI Internal : Reserved" end="0" id="NU4" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="SEC_EOI_REG" description="EOI Register" id="SEC_EOI_REG" offset="0x3C" width="32">
    
  <bitfield begin="31" description="Reserved" end="1" id="NU7" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description="EOI Register. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field. This bit is self clearing, reading this bit will return 0." end="0" id="SEC_EOI_WR" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="SEC_STATUS_REG0" description="Interrupt Status Register 0" id="SEC_STATUS_REG0" offset="0x40" width="32">
    
  <bitfield begin="31" description="Reserved" end="2" id="NU8" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Interrupt Pending Status for ctrl_edc_vbuss_pend." end="1" id="CTRL_EDC_VBUSS_PEND" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Interrupt Pending Status for msgmem_pend." end="0" id="SEC_PEND" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="SEC_ENABLE_SET_REG0" description="Interrupt Enable Set Register 0" id="SEC_ENABLE_SET_REG0" offset="0x80" width="32">
    
  <bitfield begin="31" description="Reserved" end="2" id="NU9" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Interrupt Enable Set Register for ctrl_edc_vbuss_pend. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field." end="1" id="CTRL_EDC_VBUSS_ENABLE_SET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Interrupt Enable Set Register for msgmem_pend.  Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field." end="0" id="SEC_EN_SET" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="SEC_ENABLE_CLR_REG0" description="Interrupt Enable Clear Register 0" id="SEC_ENABLE_CLR_REG0" offset="0xC0" width="32">
    
  <bitfield begin="31" description="Reserved" end="2" id="NU10" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Interrupt Enable Clear Register for ctrl_edc_vbuss_pend. Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field.  Reading this bit will return 0." end="1" id="CTRL_EDC_VBUSS_ENABLE_CLR" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Interrupt Enable Clear Register for msgmem_pend.  Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field. Reading this bit will return 0." end="0" id="SEC_EN_CLR" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DED_EOI_REG" description="EOI Register" id="DED_EOI_REG" offset="0x13C" width="32">
    
  <bitfield begin="31" description="Reserved" end="1" id="NU11" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description="EOI Register. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field. This bit is self clearing, reading this bit will return 0." end="0" id="DED_EOI_WR" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DED_STATUS_REG0" description="Interrupt Status Register 0" id="DED_STATUS_REG0" offset="0x140" width="32">
    
  <bitfield begin="31" description="Reserved" end="2" id="NU12" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Interrupt Pending Status for ctrl_edc_vbuss_pend." end="1" id="CTRL_EDC_VBUSS_PEND" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Interrupt Pending Status for msgmem_pend." end="0" id="DED_PEND" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DED_ENABLE_SET_REG0" description="Interrupt Enable Set Register 0" id="DED_ENABLE_SET_REG0" offset="0x180" width="32">
    
  <bitfield begin="31" description="Reserved" end="2" id="NU13" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Interrupt Enable Set Register for ctrl_edc_vbuss_pend. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field." end="1" id="CTRL_EDC_VBUSS_ENABLE_SET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Interrupt Enable Set Register for msgmem_pend.  Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field." end="0" id="DED_EN_SET" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DED_ENABLE_CLR_REG0" description="Interrupt Enable Clear Register 0" id="DED_ENABLE_CLR_REG0" offset="0x1C0" width="32">
    
  <bitfield begin="31" description="Reserved" end="2" id="NU14" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Interrupt Enable Clear Register for ctrl_edc_vbuss_pend. Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field.  Reading this bit will return 0." end="1" id="CTRL_EDC_VBUSS_ENABLE_CLR" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Interrupt Enable Clear Register for msgmem_pend.  Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field. Reading this bit will return 0." end="0" id="DED_EN_CLR" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="AGGR_ENABLE_SET" description="AGGR interrupt enable set Register" id="AGGR_ENABLE_SET" offset="0x200" width="32">
    
  <bitfield begin="31" description="Reserved" end="2" id="NU15" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Interrupt Enable Set Register for svbus timeout errors. Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field." end="1" id="TIMEOUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Interrupt Enable Set Register for parity errors.  Writing 1 to any bit will set the corresponding bit. Reads do not alter the value of the field." end="0" id="PARITY" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="AGGR_ENABLE_CLR" description="AGGR interrupt enable clear Register" id="AGGR_ENABLE_CLR" offset="0x204" width="32">
    
  <bitfield begin="31" description="Reserved" end="2" id="NU16" rwaccess="R" width="30"></bitfield>
    
  <bitfield begin="1" description="Interrupt Enable Clear for svbus timeout errors. Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field.  Reading this bit will return 0." end="1" id="TIMEOUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Interrupt Enable Clear for parity errors.  Writing 1 to any bit will clear the corresponding bits. Reads do not alter the value of the field.  Reading this bit will return 0." end="0" id="PARITY" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="AGGR_STATUS_SET" description="AGGR interrupt status set Register" id="AGGR_STATUS_SET" offset="0x208" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="NU17" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Interrupt status set for svbus timeout errors. A write to increment field. Writing a value to this field increment the field value by the value written. Reads do not alter the value of the field." end="2" id="TIMEOUT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="1" description="Interrupt status set for parity errors. A write to increment field. Writing a value to this field increment the field value by the value written. Reads do not alter the value of the field." end="0" id="PARITY" rwaccess="RW" width="2"></bitfield>
  </register>
  
  
  <register acronym="AGGR_STATUS_CLR" description="AGGR interrupt status clear Register" id="AGGR_STATUS_CLR" offset="0x20C" width="32">
    
  <bitfield begin="31" description="Reserved" end="4" id="NU18" rwaccess="R" width="28"></bitfield>
    
  <bitfield begin="3" description="Interrupt status clear for svbus timeout errors. A write to decrement field. Writing a value to this field decrements the field value by the value written. Reads do not alter the value of the field." end="2" id="TIMEOUT" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="1" description="Interrupt status clear for parity errors. A write to decrement field. Writing a value to this field decrements the field value by the value written. Reads do not alter the value of the field." end="0" id="PARITY" rwaccess="RW" width="2"></bitfield>
  </register>
</module>
