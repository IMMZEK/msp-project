

<module description="" id="DSS_CM4_CTRL">
  
  
  <register acronym="PID" description=" PID register " id="PID" offset="0x0" width="32">
    
  <bitfield begin="31" description="" end="16" id="" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="" end="11" id="" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="" end="8" id="" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="" end="6" id="" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="HW_REG0" description="" id="HW_REG0" offset="0x4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hwreg0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG1" description="" id="HW_REG1" offset="0x8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hwreg1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PREVIOUS_NAME" description="" id="PREVIOUS_NAME" offset="0xC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hwreg2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG3" description="" id="HW_REG3" offset="0x10" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hwreg3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_B0_MEMINIT_START" description="" id="HWA_CM4_B0_MEMINIT_START" offset="0x14" width="32">
    
  <bitfield begin="0" description="Start Memory intialization of  Param memory. Write 0x1 to start memory initilization." end="0" id="hwa_cm4_b0_meminit_start" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_B0_MEMINIT_STATUS" description="" id="HWA_CM4_B0_MEMINIT_STATUS" offset="0x18" width="32">
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of  Param memory is in progress." end="0" id="hwa_cm4_b0_meminit_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_B0_MEMINIT_DONE" description="" id="HWA_CM4_B0_MEMINIT_DONE" offset="0x1C" width="32">
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of  Param memory is complte. Write 0x1 to clear status. Refer  Memory initialization sequnce in EDMA section for more details" end="0" id="hwa_cm4_b0_meminit_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_B1_MEMINIT_START" description="" id="HWA_CM4_B1_MEMINIT_START" offset="0x20" width="32">
    
  <bitfield begin="0" description="Start Memory intialization of  Param memory. Write 0x1 to start memory initilization." end="0" id="hwa_cm4_b1_meminit_start" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_B1_MEMINIT_STATUS" description="" id="HWA_CM4_B1_MEMINIT_STATUS" offset="0x24" width="32">
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of  Param memory is in progress." end="0" id="hwa_cm4_b1_meminit_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_B1_MEMINIT_DONE" description="" id="HWA_CM4_B1_MEMINIT_DONE" offset="0x28" width="32">
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of  Param memory is complte. Write 0x1 to clear status. Refer  Memory initialization sequnce in EDMA section for more details" end="0" id="hwa_cm4_b1_meminit_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_B2_MEMINIT_START" description="" id="HWA_CM4_B2_MEMINIT_START" offset="0x2C" width="32">
    
  <bitfield begin="0" description="Start Memory intialization of  Param memory. Write 0x1 to start memory initilization." end="0" id="hwa_cm4_b2_meminit_start" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_B2_MEMINIT_STATUS" description="" id="HWA_CM4_B2_MEMINIT_STATUS" offset="0x30" width="32">
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of  Param memory is in progress." end="0" id="hwa_cm4_b2_meminit_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_B2_MEMINIT_DONE" description="" id="HWA_CM4_B2_MEMINIT_DONE" offset="0x34" width="32">
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of  Param memory is complte. Write 0x1 to clear status. Refer  Memory initialization sequnce in EDMA section for more details" end="0" id="hwa_cm4_b2_meminit_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_MBOX_MEMINIT_START" description="" id="HWA_CM4_MBOX_MEMINIT_START" offset="0x38" width="32">
    
  <bitfield begin="0" description="Start Memory intialization of  Param memory. Write 0x1 to start memory initilization." end="0" id="hwa_cm4_mbox_meminit_start" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_MBOX_MEMINIT_STATUS" description="" id="HWA_CM4_MBOX_MEMINIT_STATUS" offset="0x3C" width="32">
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of  Param memory is in progress." end="0" id="hwa_cm4_mbox_meminit_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_MBOX_MEMINIT_DONE" description="" id="HWA_CM4_MBOX_MEMINIT_DONE" offset="0x40" width="32">
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of  Param memory is complte. Write 0x1 to clear status. Refer  Memory initialization sequnce in EDMA section for more details" end="0" id="hwa_cm4_mbox_meminit_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_MBOX_WRITE_DONE" description="" id="HWA_CM4_MBOX_WRITE_DONE" offset="0x44" width="32">
    
  <bitfield begin="28" description="This register should be written once finishing writing into the mailbox memory of processor 7" end="28" id="proc_7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="This register should be written once finishing writing into the mailbox memory of processor 6" end="24" id="proc_6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="This register should be written once finishing writing into the mailbox memory of processor 5" end="20" id="proc_5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="This register should be written once finishing writing into the mailbox memory of processor 4" end="16" id="proc_4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="This register should be written once finishing writing into the mailbox memory of processor 3" end="12" id="proc_3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="This register should be written once finishing writing into the mailbox memory of processor 2" end="8" id="proc_2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="This register should be written once finishing writing into the mailbox memory of processor 1" end="4" id="proc_1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="This register should be written once finishing writing into the mailbox memory of processor 0" end="0" id="proc_0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_MBOX_READ_REQ" description="" id="HWA_CM4_MBOX_READ_REQ" offset="0x48" width="32">
    
  <bitfield begin="28" description="This is request from  processor 7 to HSM. Requesting it to read from mailbox." end="28" id="proc_7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="This is request from  processor 6 to HSM. Requesting it to read from mailbox." end="24" id="proc_6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="This is request from  processor 5 to HSM. Requesting it to read from mailbox." end="20" id="proc_5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="This is request from  processor 4 to HSM. Requesting it to read from mailbox." end="16" id="proc_4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="This is request from  processor 3 to HSM. Requesting it to read from mailbox." end="12" id="proc_3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="This is request from  processor 2 to HSM. Requesting it to read from mailbox." end="8" id="proc_2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="This is request from  processor 1 to HSM. Requesting it to read from mailbox." end="4" id="proc_1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="This is request from  processor 0 to HSM. Requesting it to read from mailbox." end="0" id="proc_0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_MBOX_READ_DONE" description="" id="HWA_CM4_MBOX_READ_DONE" offset="0x4C" width="32">
    
  <bitfield begin="28" description="This register should be written once finishing reading from hsm's mailbox written by proc 7" end="28" id="proc_7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="This register should be written once finishing reading from hsm's mailbox written by proc 6" end="24" id="proc_6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="This register should be written once finishing reading from hsm's mailbox written by proc 5" end="20" id="proc_5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="This register should be written once finishing reading from hsm's mailbox written by proc 4" end="16" id="proc_4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="This register should be written once finishing reading from hsm's mailbox written by proc 3" end="12" id="proc_3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="This register should be written once finishing reading from hsm's mailbox written by proc 2" end="8" id="proc_2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="This register should be written once finishing reading from hsm's mailbox written by proc 1" end="4" id="proc_1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="This register should be written once finishing reading from hsm's mailbox written by proc 0" end="0" id="proc_0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_IRQ_REQ" description="" id="HWA_CM4_IRQ_REQ" offset="0x50" width="32">
    
  <bitfield begin="1" description="Software configration for INT Request" end="0" id="select" rwaccess="RW" width="2"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_POR_RST_CTRL" description="" id="HWA_CM4_POR_RST_CTRL" offset="0x54" width="32">
    
  <bitfield begin="2" description="Por reset control for CM4" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_SYS_RST_CTRL" description="" id="HWA_CM4_SYS_RST_CTRL" offset="0x58" width="32">
    
  <bitfield begin="2" description="Reset control for CM4" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_CFG" description="" id="HWA_CM4_CFG" offset="0x5C" width="32">
    
  <bitfield begin="14" description="In development mode by default cm4 will be held in reset. Writing 3'b000 will remove it from reset." end="12" id="cm4_sys_reset_hold" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="8" description="CM4 Clock Gate. 0 : Un-gate the clock, 1 : Clock gated." end="8" id="cm4_clk_gate" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="WIC mode Request from PMU" end="2" id="wicenreq" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Hold core in sleep mode. '0' : When in sleep mode, enable continue to hold the core in sleep; '1' : This feature is disabled" end="1" id="sleep_hold_reqn" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Force HCLK to run , overrides GATEHCLK" end="0" id="force_hclk_active" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_RST_CAUSE_CLR" description="" id="HWA_CM4_RST_CAUSE_CLR" offset="0x60" width="32">
    
  <bitfield begin="2" description="Writing '111' will clear the HWA_CM4_RST_STATUS_REG" end="0" id="clear" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_RST_CAUSE" description="" id="HWA_CM4_RST_CAUSE" offset="0x64" width="32">
    
  <bitfield begin="7" description="Reset Cause Register. Value of 1'b1 indicates reset from different sources. [0 ] : POR_RSTN, [1 ] : SYS_RSTN (Warm reset), [2 ] : STC Reset, [3 ] : Register HWA_CM4_POR_RST_CTRL, [4 ] : Register HWA_CM4_SYS_RST_CTRL, [5 ] : Reset trigger from GSM, [7:6] : Reserved" end="0" id="status" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_FSM_RST_CTRL" description="" id="HWA_CM4_FSM_RST_CTRL" offset="0x68" width="32">
    
  <bitfield begin="30" description="writing '111' will triggger the reset fsm for CM4" end="28" id="rst_fsm_trig" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="26" description="writing '111' will check for WFI before asserting reset to CM4" end="24" id="rst_wficheck" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="23" description="This field the decides number of cycles reset to CM4 should be asserted" end="16" id="rst_assertdly_common" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="This field the decides number cycles for which the reset should be held before asserting reset for CM4. This register should be programmed only for debug, otherwise the value should be 8'h00." end="8" id="rst2assertdly" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_WFI_OVERRIDE" description="" id="HWA_CM4_WFI_OVERRIDE" offset="0x6C" width="32">
    
  <bitfield begin="2" description="writing '111' will override the wfi signal from CM4" end="0" id="wfi_override" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_PERIPH_ERRAGG_MASK" description="" id="HWA_CM4_PERIPH_ERRAGG_MASK" offset="0x70" width="32">
    
  <bitfield begin="11" description="Writing '1' will mask the respective peripheral error line" end="11" id="rcss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Writing '1' will mask the respective peripheral error line" end="10" id="rcss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Writing '1' will mask the respective peripheral error line" end="9" id="rcss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Writing '1' will mask the respective peripheral error line" end="8" id="rcss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Writing '1' will mask the respective peripheral error line" end="7" id="dss_hwa_cfg_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Writing '1' will mask the respective peripheral error line" end="6" id="dss_hwa_cfg_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Writing '1' will mask the respective peripheral error line" end="5" id="dss_cm4_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Writing '1' will mask the respective peripheral error line" end="4" id="dss_cm4_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Writing '1' will mask the respective peripheral error line" end="3" id="dss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Writing '1' will mask the respective peripheral error line" end="2" id="dss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Writing '1' will mask the respective peripheral error line" end="1" id="dss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Writing '1' will mask the respective peripheral error line" end="0" id="dss_rcm_rd" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_PERIPH_ERRAGG_STATUS" description="" id="HWA_CM4_PERIPH_ERRAGG_STATUS" offset="0x74" width="32">
    
  <bitfield begin="11" description="Indicates the post mask status of the respective peripheral error line" end="11" id="rcss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Indicates the post mask status of the respective peripheral error line" end="10" id="rcss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Indicates the post mask status of the respective peripheral error line" end="9" id="rcss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Indicates the post mask status of the respective peripheral error line" end="8" id="rcss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Indicates the post mask status of the respective peripheral error line" end="7" id="dss_hwa_cfg_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Indicates the post mask status of the respective peripheral error line" end="6" id="dss_hwa_cfg_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Indicates the post mask status of the respective peripheral error line" end="5" id="dss_cm4_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Indicates the post mask status of the respective peripheral error line" end="4" id="dss_cm4_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Indicates the post mask status of the respective peripheral error line" end="3" id="dss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Indicates the post mask status of the respective peripheral error line" end="2" id="dss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Indicates the post mask status of the respective peripheral error line" end="1" id="dss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Indicates the post mask status of the respective peripheral error line" end="0" id="dss_rcm_rd" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_PERIPH_ERRAGG_STATUS_RAW" description="" id="HWA_CM4_PERIPH_ERRAGG_STATUS_RAW" offset="0x78" width="32">
    
  <bitfield begin="11" description="Indicates the pre mask status of the respective peripheral error line" end="11" id="rcss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Indicates the pre mask status of the respective peripheral error line" end="10" id="rcss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Indicates the pre mask status of the respective peripheral error line" end="9" id="rcss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Indicates the pre mask status of the respective peripheral error line" end="8" id="rcss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Indicates the pre mask status of the respective peripheral error line" end="7" id="dss_hwa_cfg_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Indicates the pre mask status of the respective peripheral error line" end="6" id="dss_hwa_cfg_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Indicates the pre mask status of the respective peripheral error line" end="5" id="dss_cm4_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Indicates the pre mask status of the respective peripheral error line" end="4" id="dss_cm4_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Indicates the pre mask status of the respective peripheral error line" end="3" id="dss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Indicates the pre mask status of the respective peripheral error line" end="2" id="dss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Indicates the pre mask status of the respective peripheral error line" end="1" id="dss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Indicates the pre mask status of the respective peripheral error line" end="0" id="dss_rcm_rd" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_AHB_ERRAGG_MASK" description="" id="HWA_CM4_AHB_ERRAGG_MASK" offset="0x7C" width="32">
    
  <bitfield begin="2" description="Writing '1' will mask the respective peripheral error line" end="2" id="sbus_write" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Writing '1' will mask the respective peripheral error line" end="1" id="dbus_write" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Writing '1' will mask the respective peripheral error line" end="0" id="ibus_write" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_AHB_ERRAGG_STATUS" description="" id="HWA_CM4_AHB_ERRAGG_STATUS" offset="0x80" width="32">
    
  <bitfield begin="2" description="Indicates the post mask status of the respective peripheral error line" end="2" id="sbus_write" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Indicates the post mask status of the respective peripheral error line" end="1" id="dbus_write" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Indicates the post mask status of the respective peripheral error line" end="0" id="ibus_write" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_AHB_ERRAGG_STATUS_RAW" description="" id="HWA_CM4_AHB_ERRAGG_STATUS_RAW" offset="0x84" width="32">
    
  <bitfield begin="2" description="Indicates the pre mask status of the respective peripheral error line" end="2" id="sbus_write" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Indicates the pre mask status of the respective peripheral error line" end="1" id="dbus_write" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Indicates the pre mask status of the respective peripheral error line" end="0" id="ibus_write" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_ECC_ERRAGG_MASK" description="" id="HWA_CM4_ECC_ERRAGG_MASK" offset="0x88" width="32">
    
  <bitfield begin="3" description="Writing '1' will mask the respective peripheral error line" end="3" id="mbox_ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Writing '1' will mask the respective peripheral error line" end="2" id="bank2_ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Writing '1' will mask the respective peripheral error line" end="1" id="bank1_ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Writing '1' will mask the respective peripheral error line" end="0" id="bank0_ded" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_ECC_ERRAGG_STATUS" description="" id="HWA_CM4_ECC_ERRAGG_STATUS" offset="0x8C" width="32">
    
  <bitfield begin="3" description="Indicates the post mask status of the respective peripheral error line" end="3" id="mbox_ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Indicates the post mask status of the respective peripheral error line" end="2" id="bank2_ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Indicates the post mask status of the respective peripheral error line" end="1" id="bank1_ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Indicates the post mask status of the respective peripheral error line" end="0" id="bank0_ded" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HWA_CM4_ECC_ERRAGG_STATUS_RAW" description="" id="HWA_CM4_ECC_ERRAGG_STATUS_RAW" offset="0x90" width="32">
    
  <bitfield begin="3" description="Indicates the pre mask status of the respective peripheral error line" end="3" id="mbox_ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Indicates the pre mask status of the respective peripheral error line" end="2" id="bank2_ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Indicates the pre mask status of the respective peripheral error line" end="1" id="bank1_ded" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Indicates the pre mask status of the respective peripheral error line" end="0" id="bank0_ded" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW0" description="" id="HW_SPARE_RW0" offset="0xFD0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW1" description="" id="HW_SPARE_RW1" offset="0xFD4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW2" description="" id="HW_SPARE_RW2" offset="0xFD8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW3" description="" id="HW_SPARE_RW3" offset="0xFDC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO0" description="" id="HW_SPARE_RO0" offset="0xFE0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO1" description="" id="HW_SPARE_RO1" offset="0xFE4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO2" description="" id="HW_SPARE_RO2" offset="0xFE8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO3" description="" id="HW_SPARE_RO3" offset="0xFEC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro3" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_WPH" description="" id="HW_SPARE_WPH" offset="0xFF0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_wph" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_REC" description="" id="HW_SPARE_REC" offset="0xFF4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="31" id="hw_spare_rec31" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved for HW R&amp;D" end="30" id="hw_spare_rec30" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Reserved for HW R&amp;D" end="29" id="hw_spare_rec29" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Reserved for HW R&amp;D" end="28" id="hw_spare_rec28" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="Reserved for HW R&amp;D" end="27" id="hw_spare_rec27" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="Reserved for HW R&amp;D" end="26" id="hw_spare_rec26" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Reserved for HW R&amp;D" end="25" id="hw_spare_rec25" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Reserved for HW R&amp;D" end="24" id="hw_spare_rec24" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved for HW R&amp;D" end="23" id="hw_spare_rec23" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Reserved for HW R&amp;D" end="22" id="hw_spare_rec22" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Reserved for HW R&amp;D" end="21" id="hw_spare_rec21" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Reserved for HW R&amp;D" end="20" id="hw_spare_rec20" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Reserved for HW R&amp;D" end="19" id="hw_spare_rec19" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Reserved for HW R&amp;D" end="18" id="hw_spare_rec18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Reserved for HW R&amp;D" end="17" id="hw_spare_rec17" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Reserved for HW R&amp;D" end="16" id="hw_spare_rec16" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved for HW R&amp;D" end="15" id="hw_spare_rec15" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Reserved for HW R&amp;D" end="14" id="hw_spare_rec14" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Reserved for HW R&amp;D" end="13" id="hw_spare_rec13" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Reserved for HW R&amp;D" end="12" id="hw_spare_rec12" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Reserved for HW R&amp;D" end="11" id="hw_spare_rec11" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Reserved for HW R&amp;D" end="10" id="hw_spare_rec10" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Reserved for HW R&amp;D" end="9" id="hw_spare_rec9" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Reserved for HW R&amp;D" end="8" id="hw_spare_rec8" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved for HW R&amp;D" end="7" id="hw_spare_rec7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Reserved for HW R&amp;D" end="6" id="hw_spare_rec6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Reserved for HW R&amp;D" end="5" id="hw_spare_rec5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Reserved for HW R&amp;D" end="4" id="hw_spare_rec4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Reserved for HW R&amp;D" end="3" id="hw_spare_rec3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Reserved for HW R&amp;D" end="2" id="hw_spare_rec2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved for HW R&amp;D" end="1" id="hw_spare_rec1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rec0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK0" description="  - KICK0 component " id="LOCK0_KICK0" offset="0x1008" width="32">
    
  <bitfield begin="31" description=" - KICK0 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK1" description="  - KICK1 component " id="LOCK0_KICK1" offset="0x100C" width="32">
    
  <bitfield begin="31" description=" - KICK1 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="intr_raw_status" description=" Interrupt Raw Status/Set Register " id="intr_raw_status" offset="0x1010" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enabled_status_clear" description=" Interrupt Enabled Status/Clear register " id="intr_enabled_status_clear" offset="0x1014" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable" description=" Interrupt Enable register " id="intr_enable" offset="0x1018" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable_clear" description=" Interrupt Enable Clear register " id="intr_enable_clear" offset="0x101C" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="eoi" description=" EOI register " id="eoi" offset="0x1020" width="32">
    
  <bitfield begin="7" description="EOI vector value. Write this with interrupt distribution value in the chip." end="0" id="" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_address" description=" Fault Address register " id="fault_address" offset="0x1024" width="32">
    
  <bitfield begin="31" description="Fault Address." end="0" id="" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="fault_type_status" description=" Fault Type Status register " id="fault_type_status" offset="0x1028" width="32">
    
  <bitfield begin="6" description="Non-secure access." end="6" id="" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="fault_attr_status" description=" Fault Attribute Status register " id="fault_attr_status" offset="0x102C" width="32">
    
  <bitfield begin="31" description="XID." end="20" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Route ID." end="8" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="7" description="Privilege ID." end="0" id="" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_clear" description=" Fault Clear register " id="fault_clear" offset="0x1030" width="32">
    
  <bitfield begin="0" description="Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect." end="0" id="" rwaccess="W" width="1"></bitfield>
  </register>
</module>
