<module name="ISS_IPIPEIF" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="IPIPEIF_ENABLE" acronym="IPIPEIF_ENABLE" offset="0x0" width="32" description="IPIPEIF Enable.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="SYNCOFF" width="1" begin="1" end="1" resetval="0" description="VD output mask This register masks the VD output to the IPIPE module. This can be useful when one wants to read data from SDRAM which are stored in a double buffer. If the VD is not masked each time we start the module an new VD will be generated to the IPIPEIF module. Let's consider two buffers A and B of N lines each. *This bit field is latched by VD." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SYNCOFF_0" description="VD output mask is disabled."/>
      <bitenum value="1" id="1" token="SYNCOFF_1" description="VD output mask is enabled."/>
    </bitfield>
    <bitfield id="ENABLE" width="1" begin="0" end="0" resetval="0" description="IPIPE I/F Enable This register is used to start the operation of SDRAM buffer memory read and generates SYNC signals. This register is available when INPSRC1 or INPSCR2 = 1, 2 or 3." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENABLE_0" description="disable"/>
      <bitenum value="1" id="1" token="ENABLE_1" description="enable"/>
    </bitfield>
  </register>
  <register id="IPIPEIF_CFG1" acronym="IPIPEIF_CFG1" offset="0x4" width="32" description="IPIPEIF Configuration #1">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="INPSRC1" width="2" begin="15" end="14" resetval="0x0" description="Selects the source for the mux (VPORT / ISIF / SDRAM) as well as the data format type." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="INPSRC1_0" description="VPORT_RAW"/>
      <bitenum value="1" id="1" token="INPSRC1_1" description="SDRAM_RAW"/>
      <bitenum value="3" id="3" token="INPSRC1_3" description="SDRAM_YUV"/>
      <bitenum value="2" id="2" token="INPSRC1_2" description="ISIF_DARKFM Input ports to DFS submodule are ISIF and SDRAM."/>
    </bitfield>
    <bitfield id="DATASFT" width="3" begin="13" end="11" resetval="0x0" description="SDRAM read data shift This register is available when INPSRC1 or INPSRC2 = 1 or 2, that is, when data are read from SDRAM." range="" rwaccess="RW">
      <bitenum value="6" id="6" token="DATASFT_6" description="Output data[11:0] = (read data[15:4] &amp;gt;&amp;gt; 4) &amp;amp; 0x0FFF"/>
      <bitenum value="1" id="1" token="DATASFT_1" description="Output data[11:0] = (read data[11:0] &amp;lt;&amp;lt; 1) &amp;amp; 0x0FFF"/>
      <bitenum value="7" id="7" token="DATASFT_7" description="Output data[11:0] = (read data[15:4] &amp;gt;&amp;gt; 4) &amp;amp; 0x0FFF"/>
      <bitenum value="0" id="0" token="DATASFT_0" description="Output data[11:0] = (read data[11:0]) &amp;amp; 0x0FFF"/>
      <bitenum value="2" id="2" token="DATASFT_2" description="Output data[11:0] = (read data[11:0] &amp;lt;&amp;lt; 2) &amp;amp; 0x0FFF"/>
      <bitenum value="4" id="4" token="DATASFT_4" description="Output data[11:0] = (read data[11:0] &amp;lt;&amp;lt; 4) &amp;amp; 0x0FFF"/>
      <bitenum value="5" id="5" token="DATASFT_5" description="Output data[11:0] = (read data[15:4] &amp;gt;&amp;gt; 4) &amp;amp; 0x0FFF"/>
      <bitenum value="3" id="3" token="DATASFT_3" description="Output data[11:0] = (read data[11:0] &amp;lt;&amp;lt; 3) &amp;amp; 0x0FFF"/>
    </bitfield>
    <bitfield id="CLKSEL" width="1" begin="10" end="10" resetval="0" description="IPIPEIF and IPIPE module pixel clock selection. This register must be set to 1 when INPSRC1 or INPSRC2 = 1 or 3, that is, data are solely read from SDRAM (VPORT inactive)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLKSEL_0" description="Selects the pixel clock from the VPORT."/>
      <bitenum value="1" id="1" token="CLKSEL_1" description="Selects the pixel clock from the fractional clock divider. The fractional clock divider value is setup with the register."/>
    </bitfield>
    <bitfield id="UNPACK" width="2" begin="9" end="8" resetval="0x0" description="8-Bit, 12-bit Packed Mode When sensor raw data are stored in 8-bit packed mode or 12-bit packed mode, this register should code 1 or 3. This register is effective when INPSRC = 1 or 2." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="UNPACK_0" description="16 bits / pixel"/>
      <bitenum value="1" id="1" token="UNPACK_1" description="8 bits / pixel"/>
      <bitenum value="3" id="3" token="UNPACK_3" description="12 bits / pixel"/>
      <bitenum value="2" id="2" token="UNPACK_2" description="8 bits / pixel + inverse A law (8 bits to 10 bits)"/>
    </bitfield>
    <bitfield id="AVGFILT" width="1" begin="7" end="7" resetval="0" description="Averaging Filter It applies (1,2,1) filter for the RGB/YCbCr data. *This bit field is latched by VD." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AVGFILT_0" description="disable"/>
      <bitenum value="1" id="1" token="AVGFILT_1" description="enable"/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="6" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="INPSRC2" width="2" begin="3" end="2" resetval="0x0" description="Selects the source for the mux (ISIF / SDRAM) as well as the data format type." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="INPSRC2_0" description="ISIF"/>
      <bitenum value="1" id="1" token="INPSRC2_1" description="SDRAM_RAW"/>
      <bitenum value="3" id="3" token="INPSRC2_3" description="SDRAM_YUV"/>
      <bitenum value="2" id="2" token="INPSRC2_2" description="ISIF_DARKFM Input ports to DFS submodule are VPORT and SDRAM."/>
    </bitfield>
    <bitfield id="DECIM" width="1" begin="1" end="1" resetval="0" description="Pixel Decimation The decimation rate defined by RSZ register. *This bit field is latched by VD." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DECIM_0" description="No decimation"/>
      <bitenum value="1" id="1" token="DECIM_1" description="Decimation"/>
    </bitfield>
    <bitfield id="ONESHOT" width="1" begin="0" end="0" resetval="0" description="One Shot Mode This register is available when INPSRC = 1 or 3." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ONESHOT_0" description="Continuous mode"/>
      <bitenum value="1" id="1" token="ONESHOT_1" description="One shot mode"/>
    </bitfield>
  </register>
  <register id="IPIPEIF_PPLN" acronym="IPIPEIF_PPLN" offset="0x8" width="32" description="IPIPEIF Interval of HD / Start pixel in HD">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PPLN" width="13" begin="12" end="0" resetval="0x0000" description="Case-1: Interval of Horizontal Sync (HD) Specifies the interval of horizontal sync. This register is available when INPSRC = 1 or 3. Case-2: Start Pixel in Horizontal Sync (HD) Specifies the start pixel in horizontal sync. This register is available when INPSRC = 2 *This bit field is latched by VD." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_LPFR" acronym="IPIPEIF_LPFR" offset="0xC" width="32" description="IPIPEIF Interval of VD / Start line in VD">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="LPFR" width="13" begin="12" end="0" resetval="0x0000" description="Case-1: Interval of Vertical Sync (VD) Specifies the interval of vertical sync. This register is available when INPSRC = 1 or 3. Case-2: Start Pixel in Vertical Sync (VD) Specifies the start line in vertical sync. This register is available when INPSRC = 2 *This bit field is latched by VD." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_HNUM" acronym="IPIPEIF_HNUM" offset="0x10" width="32" description="IPIPEIF Number of valid pixels per line">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="HNUM" width="13" begin="12" end="0" resetval="0x0000" description="The Number of Valid Pixels in a Line Specifies the number of valid pixels in a horizontal line. This register is available when INPSRC = 1, 2 or 3 *This bit field is latched by VD." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_VNUM" acronym="IPIPEIF_VNUM" offset="0x14" width="32" description="IPIPEIF Number of valid lines per frame">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="VNUM" width="13" begin="12" end="0" resetval="0x0000" description="The Number of Valid Line in a Vertical Specifies the number of valid line in a vertical. This register is available when INPSRC = 1, 2 or 3 *This bit field is latched by VD." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_ADDRU" acronym="IPIPEIF_ADDRU" offset="0x18" width="32" description="IPIPEIF Memory Address (Upper)">
    <bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="ADDRU" width="11" begin="10" end="0" resetval="0x000" description="Memory Address - Upper Memory address upper 11-bits are specified in units of 32-bytes This register is available when INPSRC = 1, 2 or 3. *This bit field is latched by VD." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_ADDRL" acronym="IPIPEIF_ADDRL" offset="0x1C" width="32" description="IPIPEIF Memory Address (Lower)">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="ADDRL" width="16" begin="15" end="0" resetval="0x0000" description="Memory Address - Lower Memory address lower 16-bits are specified in units of 32-bytes. This register is available when INPSRC = 1, 2 or 3. *This bit field is latched by VD." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_ADOFS" acronym="IPIPEIF_ADOFS" offset="0x20" width="32" description="IPIPEIF Address offset">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="ADOFS" width="12" begin="11" end="0" resetval="0x000" description="Specifies the SDRAM stride for each line in units of 32-bytes. This register is available when reading data from SDRAM: INPSRC1 or INPSRC2 = 1, 2 or 3. Assuming that the first line is at position ADDR, the second line is at address ADDR+ ADOFS, etc. *This bit field is latched by VD." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_RSZ" acronym="IPIPEIF_RSZ" offset="0x24" width="32" description="IPIPEIF Horizontal Resizing Parameter on IPIPE data path">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0000000" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ" width="7" begin="6" end="0" resetval="0x10" description="Horizontal Resizing Parameter for IPIPE data path Specifies the horizontal resizing parameter. The RSZ register can be configured within 16 to 112 range. This resizing ratio is determined by 16/RSZ (= 1/1 to 1/7) *This bit field is latched by VD." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_GAIN" acronym="IPIPEIF_GAIN" offset="0x28" width="32" description="IPIPEIF Gain Parameter">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="GAIN" width="10" begin="9" end="0" resetval="0x200" description="Gain Parameter Specifies the gain applied to RAW data before it is forwarded to the IPIPE module. The gain value is expressed using the U10Q9 fractional format. The range is from 0.00195 (1/512) to 1.99805(1023/512). By default the unity gain is applied, that is, IPIPEIF_GAIN.GAIN = 0x200. The gain is applied to RAW data only (IPIPEIF_CFG1.INPSRC2 != 3): the gain is not applied if the input data is YCbCr. *This bit field is latched by VD." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_DPCM" acronym="IPIPEIF_DPCM" offset="0x2C" width="32" description="IPIPEIF DPCM configuration This register applies only if .UNPACK = 1, that is, RAW8 data is read from SDRAM.">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0000 0000" description="" range="" rwaccess="R"/>
    <bitfield id="BITS" width="1" begin="2" end="2" resetval="0" description="DPCM bit mode for SDRAM data" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="BITS_0" description="8bit to 10bit DPCM decompression"/>
      <bitenum value="1" id="1" token="BITS_1" description="8bit to 12bit DPCM decompression"/>
    </bitfield>
    <bitfield id="PRED" width="1" begin="1" end="1" resetval="0" description="DPCM prediction mode for SDRAM data" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PRED_0" description="Simple predictor"/>
      <bitenum value="1" id="1" token="PRED_1" description="Advanced predictor"/>
    </bitfield>
    <bitfield id="ENA" width="1" begin="0" end="0" resetval="0" description="DPCM decompression enable for SDRAM data." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENA_0" description="DPCM off (no decompression)"/>
      <bitenum value="1" id="1" token="ENA_1" description="DPCM on"/>
    </bitfield>
  </register>
  <register id="IPIPEIF_CFG2" acronym="IPIPEIF_CFG2" offset="0x30" width="32" description="IPIPEIF Configuration #2">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="" range="" rwaccess="R"/>
    <bitfield id="YUV8P" width="1" begin="7" end="7" resetval="0" description="8-bit YUV data unpacking to 16 bits When IPIPEIF_CFG1.INPSRC2 = 0 and IPIPEIF_CFG2.YUV16 = 1, the 8-bit YUV data are transformed into 16-bit YUV data. The way the data are unpacked from 8 bits to 16 bits is controlled by the IPIPEIF_CFG2.YUV8P register. The upper 8 bits of the 16-bit output are set to 0." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="YUV8P_0" description="Y output on even pixels C output on odd pixels"/>
      <bitenum value="1" id="1" token="YUV8P_1" description="C output on even pixels Y output on odd pixels"/>
    </bitfield>
    <bitfield id="YUV8" width="1" begin="6" end="6" resetval="0" description="YUV 8bit mode When ISIF_CFG1.INPSRC2 = 0 and YUV16 = 1, setting this bit to 1 enables the conversion from 8-bit YUV input to 16-bit YUV. This register is used when the input data from the ISIF module is 8-bit YUV data." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="YUV8_0" description="YUV16"/>
      <bitenum value="1" id="1" token="YUV8_1" description="YUV8 to 16"/>
    </bitfield>
    <bitfield id="DFSDIR" width="1" begin="5" end="5" resetval="0" description="DFS direction Selects the direction of dark frame subtraction." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DFSDIR_0" description="VPORT IF(capture frame) - SDRAM (dark frame)"/>
      <bitenum value="1" id="1" token="DFSDIR_1" description="SDRAM (capture frame) - VPORT IF(dark frame)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="4" end="4" resetval="0" description="Read returns reset value" range="" rwaccess="RW"/>
    <bitfield id="YUV16" width="1" begin="3" end="3" resetval="0" description="Data type selection. The behavior of this bit field depends upon other register settings. The functionality is best explained with the following pseudo code: if ((CFG1.INPSRC2==0 &amp;amp;amp;&amp;amp;amp; CFG2.YUV16) || CFG1.INPSRC2==3) { data_out[15:0] = yuv[15:0] } else if (CFG1.INPSRC2==1 &amp;amp;amp;&amp;amp;amp; CFG2.YUV16 &amp;amp;amp;&amp;amp;amp; CFG1.UNPACK=1) { data_out[15:8] = gain_clip[7:0]; data_out[ 7:0] = 0; } else { data_out[15:12] = 0; data_out[11: 0] = gain_clip[11:0]; } where: o data_out[15:0] = 16-bit YUV or 12-bit RAW data to ipipe o yuv[15:0] = 16-bit YUV data from 'horizontal pixel decimator' block. o gain_clip[11:0] = 12-bit RAW data from 'gain' block." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="YUV16_0" description="12-bit RAW data"/>
      <bitenum value="1" id="1" token="YUV16_1" description="16-bit YUV data"/>
    </bitfield>
    <bitfield id="VDPOL" width="1" begin="2" end="2" resetval="0" description="VD Sync Polarity When input VD is active low SYNC pulse, this bit needs to be set to 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VDPOL_0" description="Positive"/>
      <bitenum value="1" id="1" token="VDPOL_1" description="Negative"/>
    </bitfield>
    <bitfield id="HDPOL" width="1" begin="1" end="1" resetval="0" description="HD Sync Polarity When input HD is active low SYNC pulse, this bit needs to be set to 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="HDPOL_0" description="Positive"/>
      <bitenum value="1" id="1" token="HDPOL_1" description="Negative"/>
    </bitfield>
    <bitfield id="INTSW" width="1" begin="0" end="0" resetval="0" description="IPIPEIF interrupt source selection. This register select the interrupt source." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="INTSW_0" description="Start position of VD from VPORT interface"/>
      <bitenum value="1" id="1" token="INTSW_1" description="Start position of VD from ISIF module"/>
    </bitfield>
  </register>
  <register id="IPIPEIF_INIRSZ" acronym="IPIPEIF_INIRSZ" offset="0x34" width="32" description="IPIPEIF resize initial position - IPIPE data path.">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="ALNSYNC" width="1" begin="13" end="13" resetval="0" description="Align the HSYNC, VSYNC to initial position defined by INIRSZ." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ALNSYNC_0" description="Disable"/>
      <bitenum value="1" id="1" token="ALNSYNC_1" description="Enable"/>
    </bitfield>
    <bitfield id="INIRSZ" width="13" begin="12" end="0" resetval="0x0000" description="Offset used to re-initialize the HD/VD position after resizer. From 0 to 8191 PCLK cycles. Skips INIRSZ pixels for every line." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_OCLIP" acronym="IPIPEIF_OCLIP" offset="0x38" width="32" description="IPIPEIF output clipping value">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="OCLIP" width="12" begin="11" end="0" resetval="0xFFF" description="Output clipping value after gain control on IPIPE data path. This value is in U12Q0 data format." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_DTUDF" acronym="IPIPEIF_DTUDF" offset="0x3C" width="32" description="IPIPEIF data underflow detection">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="15" begin="15" end="1" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="DTUDF" width="1" begin="0" end="0" resetval="0" description="Data under flow error status register. Reading 1 shows there is data under flow and at least one data is corrupted while reading from SDRAM. Writing 1 to this register clears (=0) the error (=1) status. Underflow errors are non recoverable at ISP level, need to do a soft reset at ISS level. The IPIPEIF_UDF interrupt is generated when an underflow happens. The interrupt avoids polling this register for errors." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_CLKDIV" acronym="IPIPEIF_CLKDIV" offset="0x40" width="32" description="IPIPEIF CLOCK DIVIDER">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="CLKDIV" width="16" begin="15" end="0" resetval="0x0001" description="IPIPEIF clock rate configuration IPIPE/IPIPEIF clock frequency = M/N x ISS_FCLK clock frequency. We have M = CLKDIV[15:8] + 1 and N = CLKDIV[7:0] + 1 This register is available when IPIPEIF_CFG1.CLKSEL = 1." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_DPC1" acronym="IPIPEIF_DPC1" offset="0x44" width="32" description="IPIPEIF defect pixel correction #1">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="ENA" width="1" begin="12" end="12" resetval="0" description="DPC enable. Applies DPC for video port data, ISIF input path." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENA_0" description="Disable"/>
      <bitenum value="1" id="1" token="ENA_1" description="Enable"/>
    </bitfield>
    <bitfield id="TH" width="12" begin="11" end="0" resetval="0x000" description="DPC threshold value" range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_DPC2" acronym="IPIPEIF_DPC2" offset="0x48" width="32" description="IPIPEIF defect pixel correction #2">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="ENA" width="1" begin="12" end="12" resetval="0" description="DPC enable. Applies DPC for SDRAM input path." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENA_0" description="Disable"/>
      <bitenum value="1" id="1" token="ENA_1" description="Enable"/>
    </bitfield>
    <bitfield id="TH" width="12" begin="11" end="0" resetval="0x000" description="DPC threshold value" range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_RSZ3A" acronym="IPIPEIF_RSZ3A" offset="0x54" width="32" description="IPIPEIF HORIZONTAL RESIZING PARAMETER FOR H3A">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0x00" description="" range="" rwaccess="R"/>
    <bitfield id="DECIM" width="1" begin="9" end="9" resetval="0" description="Pixel Decimation Enable The decimation rate defined by the RSZ bit field. *This bit field is latched by VD." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DECIM_0" description="No Decimation"/>
      <bitenum value="1" id="1" token="DECIM_1" description="Decimate"/>
    </bitfield>
    <bitfield id="AVGFILT" width="1" begin="8" end="8" resetval="0" description="Averaging Filter It applies a (1, 2, 1) filter for the RGB/YCbCr data. *This bit field is latched by VD." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AVGFILT_0" description="Disable"/>
      <bitenum value="1" id="1" token="AVGFILT_1" description="Enable"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ" width="7" begin="6" end="0" resetval="0x10" description="Horizontal Resizing Parameter for H3A data path Specifies the horizontal resizing parameter. The RSZ register can be configured within 16 to 112 range. This resizing ratio is determined by 16/RSZ (= 1/1 to 1/7) *This bit field is latched by VD." range="" rwaccess="RW"/>
  </register>
  <register id="IPIPEIF_INIRSZ3A" acronym="IPIPEIF_INIRSZ3A" offset="0x58" width="32" description="IPIPEIF resize initial position - H3A data path.">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0x00000" description="" range="" rwaccess="R"/>
    <bitfield id="ALNSYNC" width="1" begin="13" end="13" resetval="0" description="Align the HD, VD to initial position defined by the INIRSZ bit field. It means that HD and VD are effectively shifted by INIRSZ pixel clock cycles." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ALNSYNC_0" description="Disable"/>
      <bitenum value="1" id="1" token="ALNSYNC_1" description="Enable"/>
    </bitfield>
    <bitfield id="INIRSZ" width="13" begin="12" end="0" resetval="0x0000" description="Offset used to re-initialize the HD/VD position after resizer. From 0 to 8191 PCLK cycles. Skips INIRSZ pixels for every line." range="" rwaccess="RW"/>
  </register>
</module>
