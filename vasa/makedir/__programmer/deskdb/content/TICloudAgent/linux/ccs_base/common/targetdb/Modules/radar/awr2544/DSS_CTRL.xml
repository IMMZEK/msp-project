

<module description="" id="DSS_CTRL">
  
  
  <register acronym="PID" description=" PID register " id="PID" offset="0x0" width="32">
    
  <bitfield begin="31" description="" end="16" id="" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="" end="11" id="" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="" end="8" id="" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="" end="6" id="" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="HW_REG0" description="" id="HW_REG0" offset="0x4" width="32">
    
  <bitfield begin="31" description="Reserved for R&amp;D" end="0" id="hwreg0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG1" description="" id="HW_REG1" offset="0x8" width="32">
    
  <bitfield begin="31" description="Reserved for R&amp;D" end="0" id="hwreg1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PREVIOUS_NAME" description="" id="PREVIOUS_NAME" offset="0xC" width="32">
    
  <bitfield begin="31" description="Reserved for R&amp;D" end="0" id="hwreg2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG3" description="" id="HW_REG3" offset="0x10" width="32">
    
  <bitfield begin="31" description="Reserved for R&amp;D" end="0" id="hwreg3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSS_SW_INT" description="" id="DSS_SW_INT" offset="0x14" width="32">
    
  <bitfield begin="3" description="Write pulse bit field: DSS SW Interrupt Write 1 : Generate an interrupt on DSS_SW_INT0" end="0" id="dss_swint" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPCC_A_ERRAGG_MASK" description="" id="DSS_TPCC_A_ERRAGG_MASK" offset="0x18" width="32">
    
  <bitfield begin="26" description="Mask Interrupt from DSS_TPTC_A1 to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="26" id="tptc_a1_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Mask Interrupt from DSS_TPTC_A0 to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="25" id="tptc_a0_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="24" id="tpcc_a_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Mask Interrupt from DSS_TPTC_A1 to aggregated Interrupt DSS_TPTC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="18" id="tptc_a1_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Mask Interrupt from DSS_TPTC_A0 to aggregated Interrupt DSS_TPTC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="17" id="tptc_a0_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="16" id="tpcc_a_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="8" id="tpcc_a_parity_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Mask Interrupt from DSS_TPTC_A1 to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="3" id="tptc_a1_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Mask Interrupt from DSS_TPTC_A0 to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="2" id="tptc_a0_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="1" id="tpcc_a_mpint" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="0" id="tpcc_a_errint" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPCC_A_ERRAGG_STATUS" description="" id="DSS_TPCC_A_ERRAGG_STATUS" offset="0x1C" width="32">
    
  <bitfield begin="26" description="Status of Interrupt from DSS_TPTC_A1.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="26" id="tptc_a1_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Status of Interrupt from DSS_TPTC_A0.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="25" id="tptc_a0_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="24" id="tpcc_a_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Status of Interrupt from DSS_TPTC_A1.  Set only if Interupt is unmasked in DSS_TPTC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="18" id="tptc_a1_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Status of Interrupt from DSS_TPTC_A0.  Set only if Interupt is unmasked in DSS_TPTC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="17" id="tptc_a0_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="16" id="tpcc_a_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="8" id="tpcc_a_parity_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Status of Interrupt from DSS_TPTC_A1.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="3" id="tptc_a1_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Status of Interrupt from DSS_TPTC_A0.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="2" id="tptc_a0_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="1" id="tpcc_a_mpint" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="0" id="tpcc_a_errint" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPCC_A_ERRAGG_STATUS_RAW" description="" id="DSS_TPCC_A_ERRAGG_STATUS_RAW" offset="0x20" width="32">
    
  <bitfield begin="26" description="Raw Status of Interrupt from DSS_TPTC_A1.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="26" id="tptc_a1_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Raw Status of Interrupt from DSS_TPTC_A0.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="25" id="tptc_a0_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="24" id="tpcc_a_read_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Raw Status of Interrupt from DSS_TPTC_A1.  Set irrespective if the Interupt is masked or unmasked in DSS_TPTC_A_INTAGG_MASK" end="18" id="tptc_a1_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Raw Status of Interrupt from DSS_TPTC_A0.  Set irrespective if the Interupt is masked or unmasked in DSS_TPTC_A_INTAGG_MASK" end="17" id="tptc_a0_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="16" id="tpcc_a_write_access_error" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="8" id="tpcc_a_parity_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Raw Status of Interrupt from DSS_TPTC_A1.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="3" id="tptc_a1_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Raw Status of Interrupt from DSS_TPTC_A0.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="2" id="tptc_a0_err" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="1" id="tpcc_a_mpint" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="0" id="tpcc_a_errint" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPCC_A_INTAGG_MASK" description="" id="DSS_TPCC_A_INTAGG_MASK" offset="0x24" width="32">
    
  <bitfield begin="17" description="Mask Interrupt from DSS_TPTC_A1 to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="17" id="tptc_a1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Mask Interrupt from DSS_TPTC_A0 to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="16" id="tptc_a0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="8" id="tpcc_a_int7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="7" id="tpcc_a_int6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="6" id="tpcc_a_int5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="5" id="tpcc_a_int4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="4" id="tpcc_a_int3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="3" id="tpcc_a_int2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="2" id="tpcc_a_int1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="1" id="tpcc_a_int0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Mask Interrupt from DSS_TPCC_A to aggregated Interrupt DSS_TPCC_A_INTAGG 1 : Interrupt is Masked 0 : Interrupt is Unmasked" end="0" id="tpcc_a_intg" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPCC_A_INTAGG_STATUS" description="" id="DSS_TPCC_A_INTAGG_STATUS" offset="0x28" width="32">
    
  <bitfield begin="17" description="Status of Interrupt from DSS_TPTC_A1.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="17" id="tptc_a1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Status of Interrupt from DSS_TPTC_A0.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="16" id="tptc_a0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="8" id="tpcc_a_int7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="7" id="tpcc_a_int6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="6" id="tpcc_a_int5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="5" id="tpcc_a_int4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="4" id="tpcc_a_int3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="3" id="tpcc_a_int2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="2" id="tpcc_a_int1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="1" id="tpcc_a_int0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Status of Interrupt from DSS_TPCC_A.  Set only if Interupt is unmasked in DSS_TPCC_A_INTAGG_MASK Wrie 0x1 to clear this interrupt." end="0" id="tpcc_a_intg" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPCC_A_INTAGG_STATUS_RAW" description="" id="DSS_TPCC_A_INTAGG_STATUS_RAW" offset="0x2C" width="32">
    
  <bitfield begin="17" description="Raw Status of Interrupt from DSS_TPTC_A1.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="17" id="tptc_a1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Raw Status of Interrupt from DSS_TPTC_A0.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="16" id="tptc_a0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="8" id="tpcc_a_int7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="7" id="tpcc_a_int6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="6" id="tpcc_a_int5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="5" id="tpcc_a_int4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="4" id="tpcc_a_int3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="3" id="tpcc_a_int2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="2" id="tpcc_a_int1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="1" id="tpcc_a_int0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Raw Status of Interrupt from DSS_TPCC_A.  Set irrespective if the Interupt is masked or unmasked in DSS_TPCC_A_INTAGG_MASK" end="0" id="tpcc_a_intg" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPCC_MEMINIT_START" description="" id="DSS_TPCC_MEMINIT_START" offset="0x60" width="32">
    
  <bitfield begin="2" description="RESERVED: Dont Use" end="2" id="tpcc_c_meminit_start" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="RESERVED: Dont Use " end="1" id="tpcc_b_meminit_start" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Write pulse bit field: Start Memory intialization of TPCC A Param memory. Write 0x1 to start memory initilization. Write 0x0 after ensuring Memory intilization is in progress or has completed. Before starting new initilzation sequence ensure that there is no initilization sequence is in progress (ie TPCC_A_MEMINIT_STATUS should be 0x0) and clear any previouls complettion status(ie write 0x1 to clear  TPCC_A_MEMINIT_DONE)" end="0" id="tpcc_a_meminit_start" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPCC_MEMINIT_STATUS" description="" id="DSS_TPCC_MEMINIT_STATUS" offset="0x64" width="32">
    
  <bitfield begin="2" description="RESERVED: Dont Use" end="2" id="tpcc_c_meminit_status" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="RESERVED: Dont Use" end="1" id="tpcc_b_meminit_status" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of TPCC A Param memory is in progress." end="0" id="tpcc_a_meminit_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPCC_MEMINIT_DONE" description="" id="DSS_TPCC_MEMINIT_DONE" offset="0x68" width="32">
    
  <bitfield begin="2" description="RESERVED: Dont Use" end="2" id="tpcc_c_meminit_done" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="RESERVED: Dont Use" end="1" id="tpcc_b_meminit_done" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of TPCC A Param memory is complte. Write 0x1 to clear status. Refer TPCC Memory initialization sequnce in EDMA section for more details" end="0" id="tpcc_a_meminit_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3RAM_MEMINIT_START" description="" id="DSS_L3RAM_MEMINIT_START" offset="0x98" width="32">
    
  <bitfield begin="3" description="Start Memory intialization of TPCC A Param memory. Write 0x1 to start memory initilization. Write 0x0 after ensuring Memory intilization is in progress or has completed. Before starting new initilzation sequence ensure that there is no initilization sequence is in progress (ie L3RAM_MEMINIT_STATUS should be 0x0) and clear any previouls complettion status(ie write 0x1 to clear  L3RAM_MEMINIT_DONE)" end="3" id="l3ram3_meminit_start" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Write pulse bit field: Start Memory intialization of TPCC A Param memory. Write 0x1 to start memory initilization. Write 0x0 after ensuring Memory intilization is in progress or has completed. Before starting new initilzation sequence ensure that there is no initilization sequence is in progress (ie L3RAM_MEMINIT_STATUS should be 0x0) and clear any previouls complettion status(ie write 0x1 to clear  L3RAM_MEMINIT_DONE)" end="2" id="l3ram2_meminit_start" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Write pulse bit field: Start Memory intialization of TPCC A Param memory. Write 0x1 to start memory initilization. Write 0x0 after ensuring Memory intilization is in progress or has completed. Before starting new initilzation sequence ensure that there is no initilization sequence is in progress (ie L3RAM_MEMINIT_STATUS should be 0x0) and clear any previouls complettion status(ie write 0x1 to clear  L3RAM_MEMINIT_DONE)" end="1" id="l3ram1_meminit_start" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Write pulse bit field: Start Memory intialization of TPCC A Param memory. Write 0x1 to start memory initilization. Write 0x0 after ensuring Memory intilization is in progress or has completed. Before starting new initilzation sequence ensure that there is no initilization sequence is in progress (ie L3RAM_MEMINIT_STATUS should be 0x0) and clear any previouls complettion status(ie write 0x1 to clear  L3RAM_MEMINIT_DONE)" end="0" id="l3ram0_meminit_start" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3RAM_MEMINIT_STATUS" description="" id="DSS_L3RAM_MEMINIT_STATUS" offset="0x9C" width="32">
    
  <bitfield begin="3" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of TPCC A Param memory is in progress." end="3" id="l3ram3_meminit_status" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of TPCC A Param memory is in progress." end="2" id="l3ram2_meminit_status" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of TPCC A Param memory is in progress." end="1" id="l3ram1_meminit_status" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of TPCC A Param memory is in progress." end="0" id="l3ram0_meminit_status" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_L3RAM_MEMINIT_DONE" description="" id="DSS_L3RAM_MEMINIT_DONE" offset="0xA0" width="32">
    
  <bitfield begin="3" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of TPCC A Param memory is complte. Write 0x1 to clear status. Refer TPCC Memory initialization sequnce in EDMA section for more details" end="3" id="l3ram3_meminit_done" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of TPCC A Param memory is complte. Write 0x1 to clear status. Refer TPCC Memory initialization sequnce in EDMA section for more details" end="2" id="l3ram2_meminit_done" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of TPCC A Param memory is complte. Write 0x1 to clear status. Refer TPCC Memory initialization sequnce in EDMA section for more details" end="1" id="l3ram1_meminit_done" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Status field. Read value 0x1 indicates previously triggered Memory intialization of TPCC A Param memory is complte. Write 0x1 to clear status. Refer TPCC Memory initialization sequnce in EDMA section for more details" end="0" id="l3ram0_meminit_done" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPCC_A_PARITY_CTRL" description="" id="DSS_TPCC_A_PARITY_CTRL" offset="0xBC" width="32">
    
  <bitfield begin="2" description="Write pulse bit field: Write 0x1 to clear the Parit Error status for TPCC" end="2" id="parity_err_clr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Enable Parity Test for TPCC. Write 0x1 : Parity Test is enabled on PARAM memory" end="1" id="parity_testen" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Enable Parity for TPCC. Write 0x1 : Parity is enabled on PARAM memory" end="0" id="parity_en" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPCC_A_PARITY_STATUS" description="" id="DSS_TPCC_A_PARITY_STATUS" offset="0xC8" width="32">
    
  <bitfield begin="7" description="TPCC Error Address at which Parity Error occurred" end="0" id="parity_addr" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="TPTC_DBS_CONFIG" description="" id="TPTC_DBS_CONFIG" offset="0xD4" width="32">
    
  <bitfield begin="19" description="RESERVED: Dont Use" end="18" id="tptc_c5" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="17" description="RESERVED: Dont Use" end="16" id="tptc_c4" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="15" description="RESERVED: Dont Use" end="14" id="tptc_c3" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="13" description="RESERVED: Dont Use" end="12" id="tptc_c2" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="11" description="RESERVED: Dont Use" end="10" id="tptc_c1" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="9" description="RESERVED: Dont Use0" end="8" id="tptc_c0" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="7" description="RESERVED: Dont Use" end="6" id="tptc_b1" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="5" description="RESERVED: Dont Use" end="4" id="tptc_b0" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="3" description="Max Burst size tieoff value for TPTC A1" end="2" id="tptc_a1" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="1" description="Max Burst size tieoff value for TPTC A0" end="0" id="tptc_a0" rwaccess="RW" width="2"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_BOOTCFG" description="" id="DSS_DSP_BOOTCFG" offset="0xD8" width="32">
    
  <bitfield begin="25" description="DSP Boot Configuration : L1P Cache Mode" end="25" id="L1P_CACHE_MODE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="DSP Boot Configuration : L1D Cache Mode" end="24" id="L1D_CACHE_MODE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="DSP Boot Configuration : Reset Vector" end="0" id="ISTP_RST_VAL" rwaccess="RW" width="22"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_NMI_GATE" description="" id="DSS_DSP_NMI_GATE" offset="0xDC" width="32">
    
  <bitfield begin="2" description="Write 3b111 to gate the Non Maskable Interrupt to the DSP. This is not expected to be used" end="0" id="gate" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_PBIST_KEY_RESET" description="" id="DSS_PBIST_KEY_RESET" offset="0xE0" width="32">
    
  <bitfield begin="8" description="DSS L2 PBIST Selftest Key." end="8" id="dss_l2_pbist_st_key" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="DSS PBIST controller will be brought out of reset when value is 0xA" end="4" id="dss_pbist_st_reset" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="3" description="DSS PBIST Selftest Key. Valid value is 0x5" end="0" id="dss_pbist_st_key" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="DSS_PBIST_REG0" description="" id="DSS_PBIST_REG0" offset="0xE4" width="32">
    
  <bitfield begin="31" description="DSP PBIST registers" end="0" id="dss_pbist_reg0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSS_PBIST_REG1" description="" id="DSS_PBIST_REG1" offset="0xE8" width="32">
    
  <bitfield begin="31" description="DSP PBIST registers" end="0" id="dss_pbist_reg1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPTC_BOUNDARY_CFG0" description="" id="DSS_TPTC_BOUNDARY_CFG0" offset="0xEC" width="32">
    
  <bitfield begin="29" description="RESERVED: Dont Use" end="24" id="tptc_b1_size" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="21" description="RESERVED: Dont Use" end="16" id="tptc_b0_size" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="13" description="6 bit signal used for deciding the boundary crossing size for CID-RID-SID reordering of TPTC Example: writing 6d19 decidies boundary to be 2^19  i.e. 512 KB" end="8" id="tptc_a1_size" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="5" description="6 bit signal used for deciding the boundary crossing size for CID-RID-SID reordering of TPTC Example: writing 6d19 decidies boundary to be 2^19  i.e. 512 KB" end="0" id="tptc_a0_size" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPTC_BOUNDARY_CFG1" description="" id="DSS_TPTC_BOUNDARY_CFG1" offset="0xF0" width="32">
    
  <bitfield begin="29" description="RESERVED: Dont Use" end="24" id="tptc_c3_size" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="21" description="RESERVED: Dont Use" end="16" id="tptc_c2_size" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="13" description="RESERVED: Dont Use" end="8" id="tptc_c1_size" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="5" description="RESERVED: Dont Use" end="0" id="tptc_c0_size" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPTC_BOUNDARY_CFG2" description="" id="DSS_TPTC_BOUNDARY_CFG2" offset="0xF4" width="32">
    
  <bitfield begin="13" description="RESERVED: Dont Use" end="8" id="tptc_c5_size" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="5" description="RESERVED: Dont Use" end="0" id="tptc_c4_size" rwaccess="RW" width="6"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPTC_XID_REORDER_CFG0" description="" id="DSS_TPTC_XID_REORDER_CFG0" offset="0xF8" width="32">
    
  <bitfield begin="24" description="RESERVED: Dont Use" end="24" id="tptc_b1_disable" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="RESERVED: Dont Use" end="16" id="tptc_b0_disable" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Writing 1b1 will disable the CID-RID-SID reodering feature for the TPTC instance" end="8" id="tptc_a1_disable" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Writing 1b1 will disable the CID-RID-SID reodering feature for the TPTC instance" end="0" id="tptc_a0_disable" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPTC_XID_REORDER_CFG1" description="" id="DSS_TPTC_XID_REORDER_CFG1" offset="0xFC" width="32">
    
  <bitfield begin="24" description="RESERVED: Dont Use" end="24" id="tptc_c3_disable" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="RESERVED: Dont Use" end="16" id="tptc_c2_disable" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="RESERVED: Dont Use" end="8" id="tptc_c1_disable" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="RESERVED: Dont Use" end="0" id="tptc_c0_disable" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_TPTC_XID_REORDER_CFG2" description="" id="DSS_TPTC_XID_REORDER_CFG2" offset="0x100" width="32">
    
  <bitfield begin="8" description="RESERVED: Dont Use" end="8" id="tptc_c5_disable" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="RESERVED: Dont Use" end="0" id="tptc_c4_disable" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING0" description="" id="ESM_GATING0" offset="0x108" width="32">
    
  <bitfield begin="31" description="Bit3:0 : writing 000 will ungate the DSS ESM Group2 Error 0 Bit7:4 : writing 000 will ungate the DSS ESM Group2 Error 1        Bit31:28 : writing 000 will ungate the DSS ESM Group2 Error 7" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING1" description="" id="ESM_GATING1" offset="0x10C" width="32">
    
  <bitfield begin="31" description="Bit3:0 : writing 000 will ungate the DSS ESM Group2 Error 8 Bit7:4 : writing 000 will ungate the DSS ESM Group2 Error 9        Bit31:28 : writing 000 will ungate the DSS ESM Group2 Error 15" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING2" description="" id="ESM_GATING2" offset="0x110" width="32">
    
  <bitfield begin="31" description="Bit3:0 : writing 000 will ungate the DSS ESM Group2 Error 16 Bit7:4 : writing 000 will ungate the DSS ESM Group2 Error 17        Bit31:28 : writing 000 will ungate the DSS ESM Group2 Error 23" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ESM_GATING3" description="" id="ESM_GATING3" offset="0x114" width="32">
    
  <bitfield begin="31" description="Bit3:0 : writing 000 will ungate the DSS ESM Group2 Error 24 Bit7:4 : writing 000 will ungate the DSS ESM Group2 Error 25        Bit31:28 : writing 000 will ungate the DSS ESM Group2 Error 31" end="0" id="esm_gating" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DSS_PERIPH_ERRAGG_MASK0" description="" id="DSS_PERIPH_ERRAGG_MASK0" offset="0x560" width="32">
    
  <bitfield begin="11" description="Mask the Write error from RCSS_CTRL space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="11" id="rcss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Mask the Read error from RCSS_CTRL space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="10" id="rcss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Mask the Write error from RCSS_RCM space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="9" id="rcss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Mask the Read error from RCSS_RCM space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="8" id="rcss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Mask the Write error from DSS_HWA_CFG space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="7" id="dss_hwa_cfg_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Mask the Read error from DSS_HWA_CFG space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="6" id="dss_hwa_cfg_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Mask the Write error from DSS_CM4_CTRL space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="5" id="dss_cm4_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Mask the Read error from DSS_CM4_CTRL space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="4" id="dss_cm4_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Mask the Write error from DSS_CTRL space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="3" id="dss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Mask the Read error from DSS_CTRL space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="2" id="dss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Mask the Write error from DSS_RCM space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="1" id="dss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Mask the Read error from DSS_RCM space from generating an error DSS_PERIPH_ERRAGG to the Processor" end="0" id="dss_rcm_rd" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_PERIPH_ERRAGG_STATUS0" description="" id="DSS_PERIPH_ERRAGG_STATUS0" offset="0x564" width="32">
    
  <bitfield begin="11" description="Status of the Write error from RCSS_CTRL space. Read 1 : Read error occurred on access to the RCSS_CTRL space" end="11" id="rcss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Status of the Read error from RCSS_CTRL space. Read 1 : Read error occurred on access to the RCSS_CTRL space" end="10" id="rcss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Status of the Write error from RCSS_RCM space. Read 1 : Read error occurred on access to the RCSS_RCM space" end="9" id="rcss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Status of the Read error from RCSS_RCM space. Read 1 : Read error occurred on access to the RCSS_RCM space" end="8" id="rcss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Status of the Write error from DSS_HWA_CFG space. Read 1 : Read error occurred on access to the DSS_HWA_CFG space" end="7" id="dss_hwa_cfg_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Status of the Read error from DSS_HWA_CFG space. Read 1 : Read error occurred on access to the DSS_HWA_CFG space" end="6" id="dss_hwa_cfg_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Status of the Write error from DSS_CM4_CTRL space. Read 1 : Read error occurred on access to the DSS_CM4_CTRL space" end="5" id="dss_cm4_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Status of the Read error from DSS_CM4_CTRL space. Read 1 : Read error occurred on access to the DSS_CM4_CTRL space" end="4" id="dss_cm4_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Status of the Write error from DSS_CTRL space. Read 1 : Read error occurred on access to the DSS_CTRL space" end="3" id="dss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Status of the Read error from DSS_CTRL space. Read 1 : Read error occurred on access to the DSS_CTRL space" end="2" id="dss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Status of the Write error from DSS_RCM space. Read 1 : Read error occurred on access to the DSS_RCM space" end="1" id="dss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Status of the Read error from DSS_RCM space. Read 1 : Read error occurred on access to the DSS_RCM space" end="0" id="dss_rcm_rd" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_PERIPH_ERRAGG_STATUS_RAW0" description="" id="DSS_PERIPH_ERRAGG_STATUS_RAW0" offset="0x568" width="32">
    
  <bitfield begin="11" description="Raw Status of the Write error from RCSS_CTRL space irrespective of it being masked. Read 1 : Read error occurred on access to the RCSS_CTRL space" end="11" id="rcss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Raw Status of the Read error from RCSS_CTRL space irrespective of it being masked. Read 1 : Read error occurred on access to the RCSS_CTRL space" end="10" id="rcss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Raw Status of the Write error from RCSS_RCM space irrespective of it being masked. Read 1 : Read error occurred on access to the RCSS_RCM space" end="9" id="rcss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Raw Status of the Read error from RCSS_RCM space irrespective of it being masked. Read 1 : Read error occurred on access to the RCSS_RCM space" end="8" id="rcss_rcm_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Raw Status of the Write error from DSS_HWA_CFG space irrespective of it being masked. Read 1 : Read error occurred on access to the DSS_HWA_CFG space" end="7" id="dss_hwa_cfg_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Raw Status of the Read error from DSS_HWA_CFG space irrespective of it being masked. Read 1 : Read error occurred on access to the DSS_HWA_CFG space" end="6" id="dss_hwa_cfg_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Raw Status of the Write error from DSS_CM4_CTRL space irrespective of it being masked. Read 1 : Read error occurred on access to the DSS_CM4_CTRL space" end="5" id="dss_cm4_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Raw Status of the Read error from DSS_CM4_CTRL space irrespective of it being masked. Read 1 : Read error occurred on access to the DSS_CM4_CTRL space" end="4" id="dss_cm4_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Raw Status of the Write error from DSS_CTRL space irrespective of it being masked. Read 1 : Read error occurred on access to the DSS_CTRL space" end="3" id="dss_ctrl_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Raw Status of the Read error from DSS_CTRL space irrespective of it being masked. Read 1 : Read error occurred on access to the DSS_CTRL space" end="2" id="dss_ctrl_rd" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Raw Status of the Write error from DSS_RCM space irrespective of it being masked. Read 1 : Read error occurred on access to the DSS_RCM space" end="1" id="dss_rcm_wr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Raw Status of the Read error from DSS_RCM space irrespective of it being masked. Read 1 : Read error occurred on access to the DSS_RCM space" end="0" id="dss_rcm_rd" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DBG_ACK_CPU_CTRL" description="" id="DBG_ACK_CPU_CTRL" offset="0x584" width="32">
    
  <bitfield begin="0" description="Select the Processor Suspend that is used to Suspend the DSS Peripehrals 0: DSP 1:MSS CR5" end="0" id="sel" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DBG_ACK_CTL0" description="" id="DBG_ACK_CTL0" offset="0x588" width="32">
    
  <bitfield begin="22" description="RESERVED: Dont Use" end="20" id="DSS_WDT" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="18" description="RESERVED: Dont Use" end="16" id="DSS_SCIA" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="14" description="RESERVED: Dont Use" end="12" id="DSS_RTIB" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="ERESERVED: Dont Use" end="8" id="DSS_RTIA" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="RESERVED: Dont Use" end="4" id="DSS_DCCB" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="RESERVED: Dont Use" end="0" id="DSS_DCCA" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DBG_ACK_CTL1" description="" id="DBG_ACK_CTL1" offset="0x58C" width="32">
    
  <bitfield begin="30" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="28" id="DSS_HWA" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="26" description="Enable Suspend control for the peripheral.  0 :Peripheral not suspended along with processor 1: Peripehal Suspended along with procesor" end="24" id="DSS_MCRC" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_DSP_INT_SEL" description="" id="DSS_DSP_INT_SEL" offset="0x590" width="32">
    
  <bitfield begin="2" description="DSS DSP Interrupt selcet   0x0: CSI2 Interrupts are propagated to DSP   0x7 : ICSSM Interrupts are propagted to DSP" end="0" id="RCSS_CSI2_ICSSM" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_CBUFF_TRIGGER_SEL" description="" id="DSS_CBUFF_TRIGGER_SEL" offset="0x594" width="32">
    
  <bitfield begin="6" description="DSS CBUFF HW Trigger select from DSS DSP Interrupt Map. Reset value selects RSS_ADC_CAPTURE_COMPLETE as cbuff trigger" end="0" id="sel" rwaccess="RW" width="7"></bitfield>
  </register>
  
  
  <register acronym="CSI2_TX_PARSTATCFG" description="" id="CSI2_TX_PARSTATCFG" offset="0xCE8" width="32">
    
  <bitfield begin="10" description="Enable bit for the self test of the Parity logic in CSI2" end="10" id="sten" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Enable bit for the Parity computation in CSI2" end="9" id="enable" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Clear bit for the Parity error from CSI2" end="8" id="clr" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Parity address from CSI2" end="0" id="stat" rwaccess="R" width="7"></bitfield>
  </register>
  
  
  <register acronym="CSI2_TX_CFG1" description="" id="CSI2_TX_CFG1" offset="0xCEC" width="32">
    
  <bitfield begin="31" description="Connected to dsi_protocol port name csi_ciouseldoexternal" end="31" id="CIOUSELDOEXTERNAL" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="Connected to dsi_protocol port name csi_cioldopwrgood" end="30" id="CIOLDOPWRGOOD" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Connected to dsi_protocol port name csi_dispcupdatesync" end="29" id="DISPCUPDATESYNC" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Connected to dsi_protocol port name csi_te1line" end="28" id="TE1LINE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="Connected to dsi_protocol port name csi_te0line" end="27" id="TE0LINE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="Connected to dsi_protocol port name csi_bypassen" end="26" id="BYPASSEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Connected to dsi_protocol port name csi_hhv" end="25" id="HHV" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Connected to dsi_protocol port name csi_offmode" end="24" id="OFFMODE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Connected to dsi_protocol port name csi_pipd4" end="23" id="PIPD4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Connected to dsi_protocol port name csi_pipd3" end="22" id="PIPD3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Connected to dsi_protocol port name csi_pipd2" end="21" id="PIPD2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Connected to dsi_protocol port name csi_pipd1" end="20" id="PIPD1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Connected to dsi_protocol port name csi_pipd0" end="19" id="PIPD0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Connected to dsi_protocol port name csi_po_swakeup" end="18" id="SWAKEUP" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="17" description="Connected to dsi_protocol port name csi_po_sidleack" end="17" id="SIDLEACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="16" description="Connected to dsi_protocol port name csi_laneenable" end="12" id="LANEENABLE" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="11" description="Connected to dsi_protocol port name csi_numoflanes" end="10" id="NUMOFLANES" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="9" description="Connected to dsi_protocol port name csi_pi_midlereq" end="9" id="MIDLEREQ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Connected to dsi_protocol port name mem_vp_clk_en" end="8" id="VPCLKEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Connected to dsi_protocol port name mem_vp_pclk_en" end="7" id="VPPCLKEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Connected to dsi_protocol port name csi_pi_scpbusy" end="6" id="SCPBUSY" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Connected to dsi_protocol port name csi_pi_top_clkdiv_txbyteclkhs" end="5" id="TXBYTECLKHS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Connected to dsi_protocol port name csi_pi_top_clkdiv_dsi" end="3" id="TOPCLKDIVDSI" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="2" description="Connected to dsi_protocol port name csi_pi_top_clkdiv_l3scp" end="1" id="TOPCLKDIVL3SCP" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="0" description="Connected to dsi_protocol port name csi_pi_ocp_clken" end="0" id="OCPCLKEN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="CSI2_TX_CFG2" description="" id="CSI2_TX_CFG2" offset="0xCF0" width="32">
    
  <bitfield begin="31" description="Enable to Mux the re-mapped addresses for bypass access path to CSI. 000 -->Disable, 111-->Enable, Others are reserved." end="29" id="DSIADDRREMAPEN" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="28" description="Enable to Mux the Burst related signals onto the MSB address bits to the VBUS2OCP module. 000 -->Disable, 111-->Enable, Others are reserved." end="26" id="CSIBURSTEN" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="25" description="Enable for the burst mode support of VBUSP 2 OCP module. 000 -->Disable, 111-->Enable, Others are reserved." end="23" id="CSIB2BWREADYEN" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="22" description="Override value for CLKLANEADDR port of DSI PHY." end="20" id="PORCLKSELOVRVAL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="19" description="Override control for CLKLANEADDR port of DSI PHY." end="19" id="PORCLKSELOVRCTL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Override value for CLKINEN port of DSI PHY. Invert of this value is connected to DSI PHY" end="18" id="CLKINENOVRVAL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Override control for CLKINEN port of DSI PHY" end="17" id="CLKINENOVRCTL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Connected to DSI PHY csi_bypassackz" end="16" id="BYPASSACKZ" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="15" description="Connected to dsi_protocol port name csi_pllpwrcmdonall" end="15" id="PLLPWRCMDONALL" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Connected to dsi_protocol port name csi_pllpwrcmdondiv" end="14" id="PLLPWRCMDONDIV" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="13" description="Connected to dsi_protocol port name csi_pllpwrcmdonhsclk" end="13" id="PLLPWRCMDONHSCLK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="12" description="Connected to dsi_protocol port name csi_pllpwrcmdoff" end="12" id="PLLPWRCMDOFF" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Connected to DSI PHY csi_clkin4ddrgoodbar" end="4" id="CLKIN4DDRGOODBAR" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="3" description="Connected to dsi_protocol port name csi_pllpwrack" end="3" id="PLLPWRACK" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Connected to dsi_protocol port name csi_dsirecal" end="2" id="DSIRECAL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Connected to dsi_protocol port name csi_dsilock" end="1" id="DSILOCK" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Connected to dsi_protocol port name csi_scpinpllcrtl" end="0" id="SCPINPLLCRTL" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW0" description="" id="HW_SPARE_RW0" offset="0xFD0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW1" description="" id="HW_SPARE_RW1" offset="0xFD4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW2" description="" id="HW_SPARE_RW2" offset="0xFD8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW3" description="" id="HW_SPARE_RW3" offset="0xFDC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO0" description="" id="HW_SPARE_RO0" offset="0xFE0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO1" description="" id="HW_SPARE_RO1" offset="0xFE4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO2" description="" id="HW_SPARE_RO2" offset="0xFE8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO3" description="" id="HW_SPARE_RO3" offset="0xFEC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro3" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_REC" description="" id="HW_SPARE_REC" offset="0xFF4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="31" id="hw_spare_rec31" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved for HW R&amp;D" end="30" id="hw_spare_rec30" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Reserved for HW R&amp;D" end="29" id="hw_spare_rec29" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Reserved for HW R&amp;D" end="28" id="hw_spare_rec28" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="Reserved for HW R&amp;D" end="27" id="hw_spare_rec27" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="Reserved for HW R&amp;D" end="26" id="hw_spare_rec26" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Reserved for HW R&amp;D" end="25" id="hw_spare_rec25" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Reserved for HW R&amp;D" end="24" id="hw_spare_rec24" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved for HW R&amp;D" end="23" id="hw_spare_rec23" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Reserved for HW R&amp;D" end="22" id="hw_spare_rec22" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Reserved for HW R&amp;D" end="21" id="hw_spare_rec21" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Reserved for HW R&amp;D" end="20" id="hw_spare_rec20" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Reserved for HW R&amp;D" end="19" id="hw_spare_rec19" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Reserved for HW R&amp;D" end="18" id="hw_spare_rec18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Reserved for HW R&amp;D" end="17" id="hw_spare_rec17" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Reserved for HW R&amp;D" end="16" id="hw_spare_rec16" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved for HW R&amp;D" end="15" id="hw_spare_rec15" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Reserved for HW R&amp;D" end="14" id="hw_spare_rec14" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Reserved for HW R&amp;D" end="13" id="hw_spare_rec13" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Reserved for HW R&amp;D" end="12" id="hw_spare_rec12" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Reserved for HW R&amp;D" end="11" id="hw_spare_rec11" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Reserved for HW R&amp;D" end="10" id="hw_spare_rec10" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Reserved for HW R&amp;D" end="9" id="hw_spare_rec9" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Reserved for HW R&amp;D" end="8" id="hw_spare_rec8" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved for HW R&amp;D" end="7" id="hw_spare_rec7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Reserved for HW R&amp;D" end="6" id="hw_spare_rec6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Reserved for HW R&amp;D" end="5" id="hw_spare_rec5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Reserved for HW R&amp;D" end="4" id="hw_spare_rec4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Reserved for HW R&amp;D" end="3" id="hw_spare_rec3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Reserved for HW R&amp;D" end="2" id="hw_spare_rec2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved for HW R&amp;D" end="1" id="hw_spare_rec1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rec0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK0" description="  - KICK0 component " id="LOCK0_KICK0" offset="0x1008" width="32">
    
  <bitfield begin="31" description=" - KICK0 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK1" description="  - KICK1 component " id="LOCK0_KICK1" offset="0x100C" width="32">
    
  <bitfield begin="31" description=" - KICK1 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="intr_raw_status" description=" Interrupt Raw Status/Set Register " id="intr_raw_status" offset="0x1010" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enabled_status_clear" description=" Interrupt Enabled Status/Clear register " id="intr_enabled_status_clear" offset="0x1014" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable" description=" Interrupt Enable register " id="intr_enable" offset="0x1018" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable_clear" description=" Interrupt Enable Clear register " id="intr_enable_clear" offset="0x101C" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="eoi" description=" EOI register " id="eoi" offset="0x1020" width="32">
    
  <bitfield begin="7" description="EOI vector value. Write this with interrupt distribution value in the chip." end="0" id="" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_address" description=" Fault Address register " id="fault_address" offset="0x1024" width="32">
    
  <bitfield begin="31" description="Fault Address." end="0" id="" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="fault_type_status" description=" Fault Type Status register " id="fault_type_status" offset="0x1028" width="32">
    
  <bitfield begin="6" description="Non-secure access." end="6" id="" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="fault_attr_status" description=" Fault Attribute Status register " id="fault_attr_status" offset="0x102C" width="32">
    
  <bitfield begin="31" description="XID." end="20" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Route ID." end="8" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="7" description="Privilege ID." end="0" id="" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_clear" description=" Fault Clear register " id="fault_clear" offset="0x1030" width="32">
    
  <bitfield begin="0" description="Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect." end="0" id="" rwaccess="W" width="1"></bitfield>
  </register>
</module>
