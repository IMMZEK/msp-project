<?xml version="1.0" encoding="UTF-8"?>
<module id="RTC" HW_revision="" XML_version="1.0" description="ULL Real Time Clock module
RTC includes 2 channels. 
- Channel 0 is a compare channel
- Channel 1 is a capture channel
" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="setup_parser.xsd">
   <register acronym="DESC" width="32" description="Description Register. This register provides IP module ID, revision information, instance index and standard MMR registers offset." id="DESC" offset="0x0">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RW" description="Module identifier used to uniquely identify this IP." id="MODID" resetval="0x6442">
      </bitfield>
      <bitfield range="" begin="15" width="4" end="12" rwaccess="RW" description="Standard IP MMR block offset. Standard IP MMRs are the set of from aggregated IRQ registers till DTB.

0: Standard IP MMRs do not exist

0x1-0xF: Standard IP MMRs begin at offset of (64*STDIPOFF from the base IP address)" id="STDIPOFF" resetval="0x1">
      </bitfield>
      <bitfield range="" begin="11" width="4" end="8" rwaccess="RW" description="IP Instance ID number. If multiple instances of IP exist in the device, this field can identify the instance number (0-15)." id="INSTIDX" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="4" end="4" rwaccess="RW" description="Major revision of IP (0-15)." id="MAJREV" resetval="0x1">
      </bitfield>
      <bitfield range="" begin="3" width="4" end="0" rwaccess="RW" description="Minor revision of IP (0-15)." id="MINREV" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="CTL" width="32" description="RTC Control register. This register controls resetting the of RTC counter" id="CTL" offset="0x4">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="RTC counter reset. Writing 1 to this bit will reset the RTC counter, and cause it to resume counting from 0x0" id="RST" resetval="0x0">
         <bitenum id="CLR" value="1" token="Reset the timer." description="Reset the timer."/>
         <bitenum id="NOEFF" value="0" token="No effect" description="No effect"/>
      </bitfield>
   </register>
   <register acronym="ARMSET" width="32" description="RTC channel mode set register. Read to each bit field of this register provides the current channel mode.	
- Read of 1&#39;b0 indicates the channel is unarmed.
- Read of 1&#39;b1 indicates the channel is either in capture or compare mode.

A write to each bitfield of this register the following effect:
- Write of 1&#39;b0 has no effect on channel mode.
- Write of 1&#39;b1 has no effect on the compare channel. While write of 1&#39;b1 for capture channel will arm it in capture mode if it is disabled." id="ARMSET" offset="0x8">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Arming Channel 1 for capture operation." id="CH1" resetval="0x0">
         <bitenum id="SET" value="1" token="Enable the Channel 1 for capture operation" description="Enable the Channel 1 for capture operation"/>
         <bitenum id="NOEFF" value="0" token="No effect on the channel" description="No effect on the channel"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="No effect on arming the channel. Read will give the status of the Channel 0." id="CH0" resetval="0x0">
         <bitenum id="SET" value="1" token="No effect on the compare channel" description="No effect on the compare channel"/>
         <bitenum id="NOEFF" value="0" token="No effect on the channel" description="No effect on the channel"/>
      </bitfield>
   </register>
   <register acronym="ARMCLR" width="32" description="RTC channel mode clear register. Read to each bit field of this register provides the current channel mode.	
- Read of 1&#39;b0 indicates the channel is unarmed.
- Read of 1&#39;b1 indicates the channel is either in capture or compare mode.

A write to each bitfield of this register the following effect:
- Write of 1&#39;b0 has no effect on channel mode.
- Write of 1&#39;b1 for capture/compare channel will disarm it without triggering event unless a compare/capture event happens in the same cycle.

" id="ARMCLR" offset="0xc">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Disarming Channel 1" id="CH1" resetval="0x0">
         <bitenum id="CLR" value="1" token="Set channel in UNARMED state without triggering event unless a capture event happens in the same cycle" description="Set channel in UNARMED state without triggering event unless a capture event happens in the same cycle"/>
         <bitenum id="NOEFF" value="0" token="No effect on the channel" description="No effect on the channel"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Disarming Channel 0" id="CH0" resetval="0x0">
         <bitenum id="CLR" value="1" token="Set channel in UNARMED state without triggering event unless a compare event happens in the same cycle" description="Set channel in UNARMED state without triggering event unless a compare event happens in the same cycle"/>
         <bitenum id="NOEFF" value="0" token="No effect on the channel" description="No effect on the channel"/>
      </bitfield>
   </register>
   <register acronym="TIME250N" width="32" description="RTC Time value register. 32-bit unsigned integer representing [29:-2] time slice of the real time clock counter. The counter runs on LFCLK. This field has a resolution of 250ns, and range of about 17.8 minutes." id="TIME250N" offset="0x10">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RO" description="Unsigned integer representing [34:3]slice of real time counter.
" id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="TIME1U" width="32" description="RTC Time value register. 32-bit unsigned integer representing [31:0] time slice of the real time clock counter. The counter runs on LFCLK. This field has a resolution of 1us, and range of about 1.19 hours." id="TIME1U" offset="0x14">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RO" description="Unsigned integer representing [34:3]slice of real time counter.
" id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="TIME8U" width="32" description="RTC Time value register. 32-bit unsigned integer representing [34:3] time slice of the real time clock counter. The counter runs on LFCLK. This field has a resolution of 8us, and range of about 9.5 hours." id="TIME8U" offset="0x18">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RO" description="Unsigned integer representing [34:3]slice of real time counter.
" id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="TIME524M" width="32" description="RTC time value register. 32-bit unsigned integer representing [50:19] time slice of the real time clock counter. This field has a resolution of about 0.5s and a range of about 71.4 years." id="TIME524M" offset="0x1c">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RO" description="Unsigned integer representing. [50:19]slice of real time counter." id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="CH0CC250N" width="32" description="Channel 0 compare value with 250ns resolution. A read to this register returns the value {CH0CC8U[29:3], 5b’0}
A write to this register arms the channel in compare mode.  Event would occur at the same time +/ Tlfclk/2 on the RTC as if it was written to SYSTIM." id="CH0CC250N" offset="0x20">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="RTC Channel 0 compare value. This value is compared against TIME8U.VAL. A Channel 0 event is generated when TIME8U.VAL value reaches or exceeds this compare value." id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="CH0CC1U" width="32" description="Channel 0 compare value with 1us resolution. A read to this register returns the value {CH0CC8U[31:3], 3b’0}
A write to this register arms the channel in compare mode.  Event would occur at the same time +/ Tlfclk/2 on the RTC as if it was written to SYSTIM." id="CH0CC1U" offset="0x24">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="RTC Channel 0 compare value. This value is compared against TIME8U.VAL. A Channel 0 event is generated when TIME8U.VAL value reaches or exceeds this compare value." id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="CH0CC8U" width="32" description="Channel 0 compare value. A write to this register automatically enables the channel to trigger an event when RTC timer reaches the programmed value or if the programmed value is 1 sec in the past." id="CH0CC8U" offset="0x28">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="RTC Channel 0 compare value. This value is compared against TIME8U.VAL. A Channel 0 event is generated when TIME8U.VAL value reaches or exceeds this compare value." id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="CH1CC8U" width="32" description="Channel 1 capture value. This register captures the RTC time slice [34:3] on each selected edge of the capture event when the ARMSET.CH1 = 1." id="CH1CC8U" offset="0x38">
      <bitfield range="" begin="31" width="11" end="21" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED21" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="20" width="21" end="0" rwaccess="RO" description="TIME8U.VAL captured value at the last selected edge of capture event." id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="CH1CFG" width="32" description="Channel 1 configuration register. This register can be used to select the capture edge for generating the capture event." id="CH1CFG" offset="0x3c">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Edge detect configuration for capture source" id="EDGE" resetval="0x0">
         <bitenum id="FALL" value="1" token="Falling Edge." description="Falling Edge."/>
         <bitenum id="RISE" value="0" token="Rising Edge." description="Rising Edge."/>
      </bitfield>
   </register>
   <register acronym="IMASK" width="32" description="Interrupt Mask. If a bit is set, then corresponding interrupt is un-masked. Un-masking the interrupt causes the raw interrupt to be visible in IIDX, as well as MIS." id="IMASK" offset="0x44">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Channel 1 Event Interrupt Mask." id="EV1" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable Interrrupt Mask" description="Enable Interrrupt Mask"/>
         <bitenum id="DIS" value="0" token="Clear Interrupt Mask" description="Clear Interrupt Mask"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Channel 0 Event Interrupt Mask." id="EV0" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable Interrrupt Mask" description="Enable Interrrupt Mask"/>
         <bitenum id="DIS" value="0" token="Disable Interrupt Mask" description="Disable Interrupt Mask"/>
      </bitfield>
   </register>
   <register acronym="RIS" width="32" description="Interrupt mask. This register selects interrupt sources which are allowed to pass from RIS to MIS when the corresponding bit-fields are set to 1." id="RIS" offset="0x48">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Raw interrupt status for Channel 1 event.
This bit is set to 1 when a capture event is received on Channel 1. 
This bit will be cleared when the bit in ICLR.EV1 is set to 1 or when the captured time value is read from the CH1CC8U register." id="EV1" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Raw interrupt status for Channel 0 event.
This bit is set to 1 when a compare event occurs on Channel 0. 
This bit will be cleared. When the corresponding bit in ICLR.EV0 is set to 1. Or when a new compare value is written in CH0CC8U register" id="EV0" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
   </register>
   <register acronym="MIS" width="32" description="Masked interrupt status. This register is simply a bitwise AND of the contents of IMASK and RIS.*] registers. A flag set in this register can be cleared by writing 1 to the corresponding ICLR register bit." id="MIS" offset="0x4c">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Masked interrupt status for channel 1 event." id="EV1" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Masked interrupt status for channel 0 event." id="EV0" resetval="0x0">
         <bitenum id="SET" value="1" token="Interrupt occured" description="Interrupt occured"/>
         <bitenum id="CLR" value="0" token="Interrupt did not occur" description="Interrupt did not occur"/>
      </bitfield>
   </register>
   <register acronym="ISET" width="32" description="Interrupt set register. This register can used by software for diagnostics and safety checking purposes. Writing a 1 to a bit in this register will set the event and the corresponding RIS bit also gets set. If the corresponding IMASK bit is set, then the corresponding MIS register bit also gets set." id="ISET" offset="0x50">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="WO" description="Set Channel 1 event Interrupt." id="EV1" resetval="0x0">
         <bitenum id="SET" value="1" token="Set interrupt" description="Set interrupt"/>
         <bitenum id="NO_EFFECT" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="Set Channel 0 event Interrupt." id="EV0" resetval="0x0">
         <bitenum id="SET" value="1" token="Set interrupt" description="Set interrupt"/>
         <bitenum id="NO_EFFECT" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
   </register>
   <register acronym="ICLR" width="32" description="	Interrupt clear register. This register allows software to clear interrupts. Writing a 1 to a bit in this register will clear the event and the corresponding RIS bit also gets cleared. If the corresponding IMASK bit is set, then the corresponding MIS register bit also gets cleared." id="ICLR" offset="0x54">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="WO" description="Clears channel 1 event interrupt." id="EV1" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear Interrupt" description="Clear Interrupt"/>
         <bitenum id="NO_EFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="Clears channel 0 event interrupt." id="EV0" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear Interrupt." description="Clear Interrupt."/>
         <bitenum id="NO_EFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
   </register>
   <register acronym="IMSET" width="32" description="Interrupt mask set register. Writing a 1 to a bit in this register will set the corresponding IMASK bit." id="IMSET" offset="0x58">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="WO" description="Set channel 1 event interrupt mask." id="EV1" resetval="0x0">
         <bitenum id="SET" value="1" token="Set interrupt mask" description="Set interrupt mask"/>
         <bitenum id="NO_EFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="Set channel 0 event interrupt mask." id="EV0" resetval="0x0">
         <bitenum id="SET" value="1" token="Set interrupt mask" description="Set interrupt mask"/>
         <bitenum id="NO_EFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
   </register>
   <register acronym="IMCLR" width="32" description="Interrupt mask clear register. Writing a 1 to a bit in this register will clear the corresponding IMASK bit." id="IMCLR" offset="0x5c">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="WO" description="Clears Channel 1 event interrupt mask." id="EV1" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear Interrupt Mask" description="Clear Interrupt Mask"/>
         <bitenum id="NO_EFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="WO" description="Clears Channel 0 event interrupt mask." id="EV0" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear Interrupt Mask" description="Clear Interrupt Mask"/>
         <bitenum id="NO_EFF" value="0" token="Writing 0 has no effect" description="Writing 0 has no effect"/>
      </bitfield>
   </register>
   <register acronym="EMU" width="32" description="Emulation control register. This register controls the behavior of the IP related to core halted input." id="EMU" offset="0x60">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Halt control." id="HALT" resetval="0x0">
         <bitenum id="STOP" value="1" token="Freeze option. The IP freezes functionality when the core halted input is asserted, and resumes when it is deasserted. The freeze can either be immediate or after the IP has reached a boundary from where it can resume without corruption." description="Freeze option. The IP freezes functionality when the core halted input is asserted, and resumes when it is deasserted. The freeze can either be immediate or after the IP has reached a boundary from where it can resume without corruption."/>
         <bitenum id="RUN" value="0" token="Free run option. The IP ignores the state of the core halted input." description="Free run option. The IP ignores the state of the core halted input."/>
      </bitfield>
   </register>
   <register acronym="DTIME" width="32" description="A delta time mechanism is implemented for RTC that allows the TIME value to be adjusted under software control. This is used by boot code to perform the compensation for reset duration (accomplished by adding MMR write to FCFG.generalTrims copylist to avoid ROM changes)
TIME[50:-2] is adjusted by TIME += sxt(MANT[30:0], 53) * 2^(22*EXP). 
In other words:
(EXP==0): TIME is adjusted by MANT * 250 ns (range +/-134 s)
(EXP==1): TIME is adjusted by MANT * 1.049 s (range +/- 35.7 yr)
" id="DTIME" offset="0x68">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="WO" description="Exponent" id="EXP" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="30" width="31" end="0" rwaccess="WO" description="Mantissa" id="MANT" resetval="0x0">
      </bitfield>
   </register>
</module>
