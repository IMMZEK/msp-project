<?xml version="1.0" encoding="UTF-8"?>
<module id="VIMS" HW_revision="" XML_version="1.0" description="Versatile Instruction Memory System
Controls memory access to the Flash and encapsulates the following instruction memories:
- Boot ROM
- Caches
 
" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="setup_parser.xsd">
   <register acronym="DESC" width="32" description="
Description Register. This register provides IP module ID, revision information, instance index and standard MMR registers offset.
" id="DESC" offset="0x0">
      <bitfield range="" begin="31" width="16" end="16" rwaccess="RO" description="Module identification contains a unique peripheral identification number." id="MODID" resetval="0xd140">
      </bitfield>
      <bitfield range="" begin="15" width="4" end="12" rwaccess="RO" description="Standard IP MMR block offset. Standard IP MMRs are the set of from aggregated IRQ registers till DTB.
0: Standard IP MMRs do not exist
0x1-0xF: Standard IP MMRs begin at offset of (64*STDIPOFF from the base IP address)" id="STDIPOFF" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="11" width="4" end="8" rwaccess="RO" description="IP Instance ID number. If multiple instances of IP exist in the device, this field can identify the instance number (0-15)." id="INSTIDX" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="4" end="4" rwaccess="RO" description="Major revision of IP" id="MAJREV" resetval="0x1">
      </bitfield>
      <bitfield range="" begin="3" width="4" end="0" rwaccess="RO" description="Minor revision of IP" id="MINREV" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="DESCEX" width="32" description="
Extended Description Register.This register describes the configuration of VIMS.
" id="DESCEX" offset="0x4">
      <bitfield range="" begin="31" width="3" end="29" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED29" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="28" width="2" end="27" rwaccess="RO" description="Number of Flash banks" id="NBANK" resetval="0x2">
      </bitfield>
      <bitfield range="" begin="26" width="12" end="15" rwaccess="RO" description="FLASH size in Kilo Bytes. The total FLASH size is (FLSZ + 1) KB" id="FLSZ" resetval="0x3ff">
      </bitfield>
      <bitfield range="" begin="14" width="15" end="0" rwaccess="RO" description="ROM size in Kilo Bytes. The total ROM size is (ROMSZ + 1) KB" id="ROMSZ" resetval="0x1f">
      </bitfield>
   </register>
   <register acronym="FLWS1T" width="32" description="
Flash Wait State 1T. This register is used to specify the number of waitstates necessary for accessing the flash in 1T mode.
" id="FLWS1T" offset="0x8">
      <bitfield range="" begin="31" width="28" end="4" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED4" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="3" width="4" end="0" rwaccess="RW" description="Flash read wait states for 1T accesses" id="VAL" resetval="0xf">
         <bitenum id="WS15" value="15" token="Wait state value 15" description="Wait state value 15"/>
         <bitenum id="WS14" value="14" token="Wait state value 14" description="Wait state value 14"/>
         <bitenum id="WS13" value="13" token="Wait state value 13" description="Wait state value 13"/>
         <bitenum id="WS12" value="12" token="Wait state value 12" description="Wait state value 12"/>
         <bitenum id="WS11" value="11" token="Wait state value 11" description="Wait state value 11"/>
         <bitenum id="WS10" value="10" token="Wait state value 10" description="Wait state value 10"/>
         <bitenum id="WS9" value="9" token="Wait state value 9" description="Wait state value 9"/>
         <bitenum id="WS8" value="8" token="Wait state value 8" description="Wait state value 8"/>
         <bitenum id="WS7" value="7" token="Wait state value 7" description="Wait state value 7"/>
         <bitenum id="WS6" value="6" token="Wait state value 6" description="Wait state value 6"/>
         <bitenum id="WS5" value="5" token="Wait state value 5" description="Wait state value 5"/>
         <bitenum id="WS4" value="4" token="Wait state value 4" description="Wait state value 4"/>
         <bitenum id="WS3" value="3" token="Wait state value 3" description="Wait state value 3"/>
         <bitenum id="WS2" value="2" token="Wait state value 2" description="Wait state value 2"/>
         <bitenum id="WS1" value="1" token="Wait state value 1" description="Wait state value 1"/>
         <bitenum id="WS0" value="0" token="Wait state value 0" description="Wait state value 0"/>
      </bitfield>
   </register>
   <register acronym="FLWS2T" width="32" description="
Flash Wait State 1T. This register is used to specify the number of waitstates necessary for accessing the flash in 2T mode. This register is writable only when CFG.LOCK is 1
" id="FLWS2T" offset="0xc">
      <bitfield range="" begin="31" width="28" end="4" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED4" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="3" width="4" end="0" rwaccess="RW" description="Flash read wait states for 2T accesses" id="VAL" resetval="0xf">
         <bitenum id="WS15" value="15" token="Wait state value 15" description="Wait state value 15"/>
         <bitenum id="WS14" value="14" token="Wait state value 14" description="Wait state value 14"/>
         <bitenum id="WS13" value="13" token="Wait state value 13" description="Wait state value 13"/>
         <bitenum id="WS12" value="12" token="Wait state value 12" description="Wait state value 12"/>
         <bitenum id="WS11" value="11" token="Wait state value 11" description="Wait state value 11"/>
         <bitenum id="WS10" value="10" token="Wait state value 10" description="Wait state value 10"/>
         <bitenum id="WS9" value="9" token="Wait state value 9" description="Wait state value 9"/>
         <bitenum id="WS8" value="8" token="Wait state value 8" description="Wait state value 8"/>
         <bitenum id="WS7" value="7" token="Wait state value 7" description="Wait state value 7"/>
         <bitenum id="WS6" value="6" token="Wait state value 6" description="Wait state value 6"/>
         <bitenum id="WS5" value="5" token="Wait state value 5" description="Wait state value 5"/>
         <bitenum id="WS4" value="4" token="Wait state value 4" description="Wait state value 4"/>
         <bitenum id="WS3" value="3" token="Wait state value 3" description="Wait state value 3"/>
         <bitenum id="WS2" value="2" token="Wait state value 2" description="Wait state value 2"/>
         <bitenum id="WS1" value="1" token="Wait state value 1" description="Wait state value 1"/>
         <bitenum id="WS0" value="0" token="Wait state value 0" description="Wait state value 0"/>
      </bitfield>
   </register>
   <register acronym="PTRMC0" width="32" description="
FLASH Pump trim Bank 0. This register stores different PUMP trims. This register is writable only when CFG.LOCK is 1
" id="PTRMC0" offset="0x18">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="Flash charge pump trim value." id="VAL" resetval="0x131a0000">
      </bitfield>
   </register>
   <register acronym="B0TRMC1" width="32" description="
FLASH Bank 0 Trim [59:32]. This register stores different bank trims. This register is writable only when CFG.LOCK is 1
" id="B0TRMC1" offset="0x1c">
      <bitfield range="" begin="31" width="4" end="28" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED28" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="27" width="28" end="0" rwaccess="RW" description="Flash bank trim value." id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="B0TRMC0" width="32" description="
FLASH Bank 0 Trim [31:0]. This register stores different bank trims. This register is writable only when CFG.LOCK is 1
" id="B0TRMC0" offset="0x20">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="Flash bank trim value." id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="B1TRMC1" width="32" description="
FLASH Bank 1 Trim [59:32]. This register stores different bank trims. This register is writable only when CFG.LOCK is 1
" id="B1TRMC1" offset="0x24">
      <bitfield range="" begin="31" width="4" end="28" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED28" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="27" width="28" end="0" rwaccess="RW" description="Flash bank trim value." id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="B1TRMC0" width="32" description="
FLASH Bank 1 Trim [31:0]. This register stores different bank trims. This register is writable only when CFG.LOCK is 1
" id="B1TRMC0" offset="0x28">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="Flash bank trim value." id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="FLBLCK" width="32" description="
Flash Block. This register is used to block user read, write and erase operation to flash. This register is sticky 1 and writable only when CFG.LOCK is 1
" id="FLBLCK" offset="0x100">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Flash Access" id="ACCESS" resetval="0x0">
         <bitenum id="BLOCK" value="1" token="Block" description="Block"/>
         <bitenum id="ALLOW" value="0" token="Allow" description="Allow"/>
      </bitfield>
   </register>
   <register acronym="CFG" width="32" description="
Configuration Register. This register is used for VIMS configuration. This register is writable only when CFG.LOCK is 1
" id="CFG" offset="0x3fc">
      <bitfield range="" begin="31" width="21" end="11" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED11" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="10" width="3" end="8" rwaccess="RW" description="HSM Size. Number of 32KB blocks allocated to HSM" id="HSMSZ" resetval="0x3">
         <bitenum id="SIZE_224" value="7" token="224KB" description="224KB"/>
         <bitenum id="SIZE_192" value="6" token="192KB" description="192KB"/>
         <bitenum id="SIZE_160" value="5" token="160KB" description="160KB"/>
         <bitenum id="SIZE_128" value="4" token="128KB" description="128KB"/>
         <bitenum id="SIZE_96" value="3" token="96KB" description="96KB"/>
         <bitenum id="SIZE_64" value="2" token="64KB" description="64KB"/>
         <bitenum id="SIZE_32" value="1" token="32KB" description="32KB"/>
         <bitenum id="SIZE_0" value="0" token="No space allocated to HSM" description="No space allocated to HSM"/>
      </bitfield>
      <bitfield range="" begin="7" width="3" end="5" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED5" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="Split Mode. The logical address space is split into two equal regions" id="SPLMODE" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable" description="Enable"/>
         <bitenum id="DIS" value="0" token="Disable" description="Disable"/>
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="ROM Read Protection Disable" id="RDPRROM" resetval="0x1">
         <bitenum id="DIS" value="1" token="Disable" description="Disable"/>
         <bitenum id="EN" value="0" token="Enable" description="Enable"/>
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="This bit is used to enable flash test mode." id="ATTEST" resetval="0x0">
         <bitenum id="EN" value="1" token="Enable" description="Enable"/>
         <bitenum id="DIS" value="0" token="Disable" description="Disable"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="TRIM Valid. This bit indicates if flash charge pump and bank trim values are as applicable." id="TRMVLID" resetval="0x0">
         <bitenum id="VLID" value="1" token="Valid" description="Valid"/>
         <bitenum id="INVLID" value="0" token="Invalid" description="Invalid"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Lock. Lock VIMS configuration. This bit is sticky &#39;0&#39; and when 0 write protects following registers 
FLWS1T
FLWS2T
PTRMC0
B0TRMC1
B0TRMC0
B1TRMC1
B1TRMC0
FLBLCK
CFG" id="LOCK" resetval="0x1">
         <bitenum id="DIS" value="1" token="Configuration registers are open for writing" description="Configuration registers are open for writing"/>
         <bitenum id="EN" value="0" token="Configuration registers are locked for writing" description="Configuration registers are locked for writing"/>
      </bitfield>
   </register>
   <register acronym="RDPRMN" width="32" description="
Read Protect Main. First 16KB of flash main region can be protected with granularity of 2KB. This register is sticky 0
" id="RDPRMN" offset="0x400">
      <bitfield range="" begin="31" width="28" end="4" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED4" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="3" width="4" end="0" rwaccess="RW" description="Protection configuration value. 
 Undefined values will read protect whole protectable region" id="VAL" resetval="0xf">
         <bitenum id="PROT_0KB" value="15" token="Protection is Disabled" description="Protection is Disabled"/>
         <bitenum id="PROT_2KB" value="14" token="Protect First 2KB" description="Protect First 2KB"/>
         <bitenum id="PROT_4KB" value="13" token="Protect First 4KB" description="Protect First 4KB"/>
         <bitenum id="PROT_6KB" value="12" token="Protect First 6KB" description="Protect First 6KB"/>
         <bitenum id="PROT_8KB" value="11" token="Protect First 8KB" description="Protect First 8KB"/>
         <bitenum id="PROT_10KB" value="10" token="Protect First 10KB" description="Protect First 10KB"/>
         <bitenum id="PROT_12KB" value="9" token="Protect First 12KB" description="Protect First 12KB"/>
         <bitenum id="PROT_14KB" value="8" token="Protect First 14KB" description="Protect First 14KB"/>
         <bitenum id="PROT_16KB" value="7" token="Protect First 16KB" description="Protect First 16KB"/>
      </bitfield>
   </register>
   <register acronym="RDPRNMN" width="32" description="
Read Protect Non-Main regions.
" id="RDPRNMN" offset="0x404">
      <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED8" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RW" description="VLOG read protection configuration. This field is sticky 0" id="VLOG" resetval="0x1">
      </bitfield>
      <bitfield range="" begin="6" width="1" end="6" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED6" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="5" width="6" end="0" rwaccess="RW" description="CCFG read protection configuration. Last 512 bytes of CCFG can be protected with granularity of 16Bytes. This field is sticky 0" id="CCFG" resetval="0x3f">
      </bitfield>
   </register>
   <register acronym="RDPRTRM" width="32" description="
Read Protect Trim
" id="RDPRTRM" offset="0x408">
      <bitfield range="" begin="31" width="24" end="8" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED8" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RW" description="SCFG read protection configuration. This field is sticky 0" id="SCFG" resetval="0x1">
      </bitfield>
      <bitfield range="" begin="6" width="1" end="6" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED6" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="5" width="6" end="0" rwaccess="RW" description="FCFG read protection configuration. Last 512 bytes of CCFG can be protected with granularity of 16Bytes. This register is sticky 0" id="FCFG" resetval="0x3f">
      </bitfield>
   </register>
   <register acronym="RDPREGR" width="32" description="
Read Protect ENGR. This register is sticky 0
" id="RDPREGR" offset="0x40c">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="ENGR read protection configuration." id="ENGR" resetval="0x1">
      </bitfield>
   </register>
   <register acronym="WEPRA" width="32" description="
Write Erase Protect Main A. This register allows the first 32 sectors of the logical bank 0 main region to be protected from program or erase, with 1 bit protecting each sector (sector 0 to sector 31). This register is sticky 0
" id="WEPRA" offset="0x410">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="Flash write/erase protection configuration value." id="VAL" resetval="0xffffffff">
      </bitfield>
   </register>
   <register acronym="WEPRB0" width="32" description="
Write Erase Protect Main Bank 0. This register allows physical bank 0 main region sectors to be protected from program and erase.  Each bit corresponds to a group of 8 sectors. First 4-bit are reserved if physical Bank 0 is logical bank 0 CTL.SWAP = 0. This register is sticky 0
" id="WEPRB0" offset="0x414">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="Flash write/erase protection configuration value." id="VAL" resetval="0xffffffff">
      </bitfield>
   </register>
   <register acronym="WEPRB1" width="32" description="
Write Erase Protect Main Bank 1. This register allows physical bank 1 main region sectors to be protected from program and  erase. Each bit corresponds to a group of 8 sectors. First 4-bit are reserved if physical Bank 1 is logical bank 0 CTL.SWAP = 1. This register is sticky 0
" id="WEPRB1" offset="0x418">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RW" description="Flash write/erase protection configuration value." id="VAL" resetval="0xffffffff">
      </bitfield>
   </register>
   <register acronym="WEPRAUX" width="32" description="
Write Erase Protect Auxillary. Flash Write/Erase protection for Non-Main, TRIM and ENGR Regions. This register is sticky 0
" id="WEPRAUX" offset="0x41c">
      <bitfield range="" begin="31" width="27" end="5" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED5" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="Write/Erase Protection for VLOG" id="VLOG" resetval="0x1">
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="RW" description="Write/Erase Protection for SCFG" id="SCFG" resetval="0x1">
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RW" description="Write/Erase Protection for ENGR" id="ENGR" resetval="0x1">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RW" description="Write/Erase Protection for FCFG" id="FCFG" resetval="0x1">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Write/Erase Protection for CCFG" id="CCFG" resetval="0x1">
      </bitfield>
   </register>
   <register acronym="FLBSTA" width="32" description="
Flash Status. This register is used to indicate status of flash.
" id="FLBSTA" offset="0x420">
      <bitfield range="" begin="31" width="26" end="6" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED6" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="5" width="1" end="5" rwaccess="RO" description="Bank 1 Busy. This bit indicates if flash Bank 1 is busy." id="B1BSY" resetval="0x0">
         <bitenum id="BUSY" value="1" token="Busy" description="Busy"/>
         <bitenum id="IDLE" value="0" token="Idle" description="Idle"/>
      </bitfield>
      <bitfield range="" begin="4" width="1" end="4" rwaccess="RO" description="Bank 0 Busy. This bit indicates if flash Bank 0 is busy." id="B0BSY" resetval="0x0">
         <bitenum id="BUSY" value="1" token="Busy" description="Busy"/>
         <bitenum id="IDLE" value="0" token="Idle" description="Idle"/>
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="RO" description="Parity Error. This bit indicates parity error on write/erase $amp; read protection MMRs. This bit is sticky when set to 1 by hardware." id="PARERR" resetval="0x0">
         <bitenum id="ERR" value="1" token="Error" description="Error"/>
         <bitenum id="NOERR" value="0" token="No Error" description="No Error"/>
      </bitfield>
      <bitfield range="" begin="2" width="1" end="2" rwaccess="RO" description="This bit indicates if flash is busy." id="BUSY" resetval="0x0">
         <bitenum id="BUSY" value="1" token="Busy" description="Busy"/>
         <bitenum id="IDLE" value="0" token="Idle" description="Idle"/>
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Flash 2T Ready. This bit indicates if flash is ready in 2T mode." id="FL2TRDY" resetval="0x0">
         <bitenum id="RDY" value="1" token="Ready" description="Ready"/>
         <bitenum id="NOTRDY" value="0" token="Not Ready" description="Not Ready"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Flash 1T Ready. This bit indicates if flash is ready in 1T mode." id="FL1TRDY" resetval="0x0">
         <bitenum id="RDY" value="1" token="Ready" description="Ready"/>
         <bitenum id="NOTRDY" value="0" token="Not Ready" description="Not Ready"/>
      </bitfield>
   </register>
   <register acronym="CCHCTL" width="32" description="
Cache Control Register. This register is used for cache control on code bus Interface. This register can only be written when CCHSTA.BUSY is 0
" id="CCHCTL" offset="0x424">
      <bitfield range="" begin="31" width="15" end="17" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED17" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="16" width="1" end="16" rwaccess="WO" description="Cache Flush for HSM Cache. This bit is used to flush the cache on HSM bus Interface. This bit is self clearing" id="HCHFLUSH" resetval="0x0">
         <bitenum id="TRG" value="1" token="Trigger Flush" description="Trigger Flush"/>
      </bitfield>
      <bitfield range="" begin="15" width="7" end="9" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED9" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="8" width="1" end="8" rwaccess="WO" description="Cache Hit/Miss Count Clear. Writing 0 to this bit has no affect" id="CNTCLR" resetval="0x0">
         <bitenum id="CLR" value="1" token="Clear Hit/Miss Counter" description="Clear Hit/Miss Counter"/>
      </bitfield>
      <bitfield range="" begin="7" width="1" end="7" rwaccess="RW" description="Cache Hit/Miss Count Enable." id="CNTEN" resetval="0x1">
         <bitenum id="EN" value="1" token="Enable" description="Enable"/>
         <bitenum id="DIS" value="0" token="Disable" description="Disable"/>
      </bitfield>
      <bitfield range="" begin="6" width="1" end="6" rwaccess="RW" description="Replacement policy for Cache." id="RPOLICY" resetval="0x0">
         <bitenum id="SEQ" value="1" token="Sequencial Replacement Policy" description="Sequencial Replacement Policy"/>
         <bitenum id="RND" value="0" token="Random Replacement Policy" description="Random Replacement Policy"/>
      </bitfield>
      <bitfield range="" begin="5" width="1" end="5" rwaccess="WO" description="Line Buffer Flush. This bit is used to flush the Line buffer on system bus Interface. This bit is self clearing. Writing 0 to this bit has no affect" id="LINFLUSH" resetval="0x0">
         <bitenum id="TRG" value="1" token="Trigger Flush" description="Trigger Flush"/>
      </bitfield>
      <bitfield range="" begin="4" width="1" end="4" rwaccess="RW" description="Line Buffer Enable. This bit is used to enable the Line buffer on system bus Interface. Disabling the Line buffer will flush it" id="LINEN" resetval="0x1">
         <bitenum id="EN" value="1" token="Enable" description="Enable"/>
         <bitenum id="DIS" value="0" token="Disable" description="Disable"/>
      </bitfield>
      <bitfield range="" begin="3" width="1" end="3" rwaccess="WO" description="Cache Flush. This bit is used to flush the cache on code bus Interface. This bit is self clearing. Writing 0 to this bit has no affect" id="CCHFLUSH" resetval="0x0">
         <bitenum id="TRG" value="1" token="Trigger Flush" description="Trigger Flush"/>
      </bitfield>
      <bitfield range="" begin="2" width="2" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Cache Enable. This bit is used to enable the cache. Disabling the cache will flush it" id="CCHEN" resetval="0x1">
         <bitenum id="EN" value="1" token="Enable" description="Enable"/>
         <bitenum id="DIS" value="0" token="Disable" description="Disable"/>
      </bitfield>
   </register>
   <register acronym="CCHSTA" width="32" description="
Cache Status. This register gives cache status
" id="CCHSTA" offset="0x428">
      <bitfield range="" begin="31" width="30" end="2" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED2" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="1" width="1" end="1" rwaccess="RO" description="Busy. This bit indicate Cache is changing state" id="BUSY" resetval="0x1">
         <bitenum id="BUSY" value="1" token="Busy" description="Busy"/>
         <bitenum id="NBUSY" value="0" token="Not Busy" description="Not Busy"/>
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RO" description="Enabled. This bit indicate whether cache is enabled or disabled" id="EN" resetval="0x1">
         <bitenum id="EN" value="1" token="Enabled" description="Enabled"/>
         <bitenum id="DIS" value="0" token="Disabled" description="Disabled"/>
      </bitfield>
   </register>
   <register acronym="CNTHIT" width="32" description="
Cache Hit Counter
" id="CNTHIT" offset="0x430">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RO" description="Hit Counter Value. This counter is cleared by writing CCHCTL.CNTCLR" id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="CNTMISS" width="32" description="
Cache Miss Counter
" id="CNTMISS" offset="0x434">
      <bitfield range="" begin="31" width="32" end="0" rwaccess="RO" description="Miss Counter Value. This counter is cleared by writing CCHCTL.CNTCLR" id="VAL" resetval="0x0">
      </bitfield>
   </register>
   <register acronym="CTL" width="32" description="
Control Register.
" id="CTL" offset="0x4fc">
      <bitfield range="" begin="31" width="1" end="31" rwaccess="RW" description="Swap Lock. If set, CTL.SWAP bit is blocked for writing. This bit is sticky 1" id="SWAPLOCK" resetval="0x0">
         <bitenum id="LOCK" value="1" token="Locked" description="Locked"/>
         <bitenum id="UNLOCK" value="0" token="Unlocked" description="Unlocked"/>
      </bitfield>
      <bitfield range="" begin="30" width="30" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Swaps the logical to physical bank mapping. This bit has no effect if CTL.SPLMODE is 0 and is writable ony when CTL.SWAPLOCK is 0" id="SWAP" resetval="0x0">
         <bitenum id="SWAPED" value="1" token="Bank is swapped" description="Bank is swapped"/>
         <bitenum id="NOSWAP" value="0" token="Bank is not swapped" description="Bank is not swapped"/>
      </bitfield>
   </register>
   <register acronym="DTB" width="32" description="
Digital test bus control register. This register can be used to bring out IP internal signals to the pads for observation. 16 signals can be observed per select value.
" id="DTB" offset="0x800">
      <bitfield range="" begin="31" width="28" end="4" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED4" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="3" width="4" end="0" rwaccess="RW" description="Digital test bus selection mux control.
Non-zero select values output a 16 bit selected group of signals per value." id="SEL" resetval="0x0">
         <bitenum id="DIS" value="0" token="DTB output from peripheral is 0x0" description="DTB output from peripheral is 0x0"/>
      </bitfield>
   </register>
</module>
