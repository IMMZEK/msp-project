<?xml version="1.0" encoding="UTF-8"?>
<module id="TMR" HW_revision="" XML_version="1" description="Timer">
   <register id="EMUMGT_CLKSPD" acronym="EMUMGT_CLKSPD" offset="0x0004" width="32" description="Emulation Management/ Clock Speed Register">
      <bitfield id="_RESV" width="12" begin="31" end="20" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
      <bitfield id="CLKDIV" width="4" begin="19" end="16" resetval="0" description="Defines the internal clock frequency divider ratio for the timer" range="" rwaccess="R">
         
         <bitenum id="DIV0" value="11" token="DIV0" description="Internal clock source for timer is CPU_CLK(bypass)" />
         <bitenum id="DIV1" value="27" token="DIV1" description="Internal clock source for timer is CPU_CLK/1" />
         <bitenum id="DIV2" value="267" token="DIV2" description="Internal clock source for timer is CPU_CLK/2" />
         <bitenum id="DIV4" value="4107" token="DIV4" description="Internal clock source for timer is CPU_CLK/4" />
         <bitenum id="DIV8" value="65547" token="DIV8" description="Internal clock source for timer is CPU_CLK/8" />
      </bitfield>
      <bitfield id="_RESV" width="14" begin="15" end="2" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
      <bitfield id="SOFT" width="1" begin="1" end="1" resetval="0" description="Determines emulation mode functionality of the timer When the FREE bit is cleared, the SOFT bit selects the timer mode 0: The timer stops immediately 1: The timer stops when the counter increments and reaches the value in the timer period register" range="" rwaccess="RW">
         
         
         
         
      </bitfield>
      <bitfield id="FREE" width="1" begin="0" end="0" resetval="0" description="Determines emulation mode functionality of the timer When the FREE bit is cleared, the SOFT bit selects the timer mode 0: The Soft bit selects the timer mode 1: The timer runs free regardless of the soft bit" range="" rwaccess="RW">
         
         
         
         
      </bitfield>
   </register>
   <register id="TIMLO" acronym="TIMLO" offset="0x0010" width="32" description="Timer Counter Low Register ">
      <bitfield id="TIMLO" width="32" begin="31" end="0" resetval="0" description=" In the GP timer mode and watchdog mode, the 64-bit up counter is formed with TIMLO and TIMHI, and increments when it is enabled to count. This register is set to 0h at reset.  In the &quot;dual 32-bit timer&quot;  chained mode, it acts as a 32-bit timer counter and increments by 1 at every pre-scalar output clock cycle( i.e TIMHI). When the timer counter matches the timer period, a maskable interrupt  TINTLO, a timer EDMA event TEVTLO, and an output signal are generated.   In the dual 32-bit timer unchained mode, it can be used as an independent 32-bit timer.When the timer counter matches the timer period, a maskable interrupt  TINTLO, a timer EDMA event TEVTLO, and an output signal are generated. " range="" rwaccess="RW">
         
         
         
         
         
         
      </bitfield>
   </register>
   <register id="TIMHI" acronym="TIMHI" offset="0x0014" width="32" description="Timer Counter High Register ">
      <bitfield id="TIMHI" width="32" begin="31" end="0" resetval="0" description="In the GP timer mode and watchdog mode, the 64-bit up counter is formed with TIMLO and TIMHI, and increments when it is enabled to count. This register is set to 0h at reset  In the dual 32-bit timer chained mode, it acts as a 32-bit pre-scalar to  TIMLO. When the timer is enabled, the prescale counter starts incrementing by 1 at every timer input clock cycle. One cycle after the prescale counter matches the prescale period, a clock signal is generated and the prescale counter register is reset to 0  In the dual 32-bit unchained mode, it can be used as an independent 32-bit timer and a 4-bit pre-scalar (it is formed by the timer divide down ratio bits and the pre-scalar counter bits) must be clocked by internal clock.One cycle after the prescale counter matches the prescale period, a clock signal is generated for the 32-bit timer   When the timer counter matches the timer period, a maskable interrupt  TINTHI, a timer EDMA event TEVTHI are generated. " range="" rwaccess="RW">
         
         
         
         
         
         
      </bitfield>
   </register>
   <register id="PRDLO" acronym="PRDLO" offset="0x0018" width="32" description="Timer Period Low Register ">
      <bitfield id="PRDLO" width="32" begin="31" end="0" resetval="0" description="In a 64-bit general-purpose timer mode and watchdog mode, this is used in conjunction with the PRDHI register bits to form a 64-bit period register and  to define the number of timer input clock cycles to count.  In a 32-bit dual timer chained mode, it can be used as a 32-bit period register to define the number of timer input clock cycles to count.  In the 32-bit dual timer unchained mode, it can be used as 32-bit period register to define the number of timer input clock cycles to count." range="" rwaccess="RW">
         
         
         
         
      </bitfield>
   </register>
   <register id="PRDHI" acronym="PRDHI" offset="0x001C" width="32" description="Timer Period High Register ">
      <bitfield id="PRDHI" width="32" begin="31" end="0" resetval="0" description="In a 64-bit general-purpose timer mode and watchdog mode, this is used in conjunction with the PRDLO register bits to form a 64-bit period register and  to define the number of timer input clock cycles to count.  In a 32-bit dual timer chained mode, it can be used as a 32-bit pre-scalar period register. TIMLO is clocked by this pre-scalar output clock.  In the 32-bit dual timer unchained mode, it can be used as 32-bit period register to define the number of timer input clock cycles to count." range="" rwaccess="RW">
         
         
         
         
      </bitfield>
   </register>
   <register id="TCR" acronym="TCR" offset="0x0020" width="32" description="Timer Control Register">
      <bitfield id="_RESV" width="6" begin="31" end="26" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
      <bitfield id="TIEN_HI" width="1" begin="25" end="25" resetval="0" description="TIEN determines if the timer clock is gated by the timer input  Applicable only when CLKSRC = 0 0: Timer clock is not gated by the timer input  1: Timer clock is gated by a high state of the timer input TINP synchronized with Internal clock. Timer starts counting when TINP transitions from low to high. Timer stops counting when TINP transitions from high to low Note that the TCRHI is applicable only when the timer is configured in unchained dual 32-bit timer mode (TGCR[3:2]=[01])" range="" rwaccess="RW">
         
         
         
         
         
      </bitfield>
      <bitfield id="CLKSRC_HI" width="1" begin="24" end="24" resetval="0" description="CLKSRC determines the selected clock source for the timer 0: Internal clock 1: Timer Input pin Note that the TCRHI is applicable only when the timer is configured in unchained dual 32-bit timer mode (TGCR[3:2]=[01])" range="" rwaccess="RW">
         
         
         
         
      </bitfield>
      <bitfield id="ENAMODE_HI" width="2" begin="23" end="22" resetval="0" description="Enabling mode determines the enabling modes of the timer 00: The timer is disabled (not counting) and maintains current value 01: The timer is enabled one time. The timer stops after the counter reaches the period 10: The timer is enabled continuously, TIMx increments until the timer counter matches the period, resets the timer counter to zero on the cycle after matching and continues 11: Reserved. Note that the TCRHI is applicable only when the timer is configured in unchained dual 32-bit timer mode (TGCR[3:2]=[01])" range="" rwaccess="RW">
         
         
         
         
         
         
      </bitfield>
      <bitfield id="PWID_HI" width="2" begin="21" end="20" resetval="0" description="Pulse width Only used in pulse mode (C/P_=0) by the timer controls the timer output 00: TSTATx goes inactive one timer clock cycle after the timer counter reaches the period 01: TSTATx goes inactive two timer clock cycles after the timer counter reaches the period 10: TSTATx goes inactive three timer clock cycles after the timer counter reaches the period 11: TSTATx goes inactive four timer clock cycles after the timer counter reaches the period Note that the TCRHI is applicable only when the timer is configured in unchained dual 32-bit timer mode (TGCR[3:2]=[01])" range="" rwaccess="RW">
         
         
         
         
         
         
         
      </bitfield>
      <bitfield id="CP_HI" width="1" begin="19" end="19" resetval="0" description="Clock/Pulse mode for timer output Not applicable in WD mode (TIMMODE[1:0] = 10) 0: Pulse mode. TSTATx is active one timer clock after the timer counter reaches the timer period. PWID[1:0] determines when it goes inactive 1: Clock mode. TIN/TOUT is a 50% duty cycle signal, it toggles high-&gt;low or low-&gt;high when timer counter reaches zero Note that the TCRHI is applicable only when the timer is configured in unchained dual 32-bit timer mode (TGCR[3:2]=[01])" range="" rwaccess="RW">
         
         
         
         
         
      </bitfield>
      <bitfield id="INVINP_HI" width="1" begin="18" end="18" resetval="0" description="Timer input inverter control Only affects operation if CLKSRC = 1 0: Uninverted timer input drives timer 1: Inverted timer input drives timer Note that the TCRHI is applicable only when the timer is configured in unchained dual 32-bit timer mode (TGCR[3:2]=[01]) " range="" rwaccess="RW">
         
         
         
         
         
      </bitfield>
      <bitfield id="INVOUTP_HI" width="1" begin="17" end="17" resetval="0" description="Timer output inverter control 0: Uninverted timer output 1: Inverted timer output  Note that the TCRHI is applicable only when the timer is configured in unchained dual 32-bit timer mode (TGCR[3:2]=[01])" range="" rwaccess="RW">
         
         
         
         
      </bitfield>
      <bitfield id="TSTAT_HI" width="1" begin="16" end="16" resetval="0" description="Timer status Value of timer output. TSTATx drives the timer output pin when the pin is used as a timer pin (instead of a GPIO) and maybe inverted  by setting INVOUTP = 1 Note that the TCRHI is applicable only when the timer is configured in unchained dual 32-bit timer mode (TGCR[3:2]=[01])" range="" rwaccess="R">
         
         
         
      </bitfield>
      <bitfield id="_RESV" width="6" begin="15" end="10" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
      <bitfield id="TIEN_LO" width="1" begin="9" end="9" resetval="0" description="TIEN determines if the timer clock is gated by the timer input  Applicable only when CLKSRC = 0 0: Timer clock is not gated by the timer input  1: Timer clock is gated by a high state of the timer input TINP synchronized with Internal clock. Timer starts counting when TINP transitions from low to high. Timer stops counting when TINP transitions from high to low" range="" rwaccess="RW">
         
         
         
         
      </bitfield>
      <bitfield id="CLKSRC_LO" width="1" begin="8" end="8" resetval="0" description="CLKSRC determines the selected clock source for the timer 0: Internal clock 1: Timer Input pin" range="" rwaccess="RW">
         
         
         
      </bitfield>
      <bitfield id="ENAMODE_LO" width="2" begin="7" end="6" resetval="0" description="Enabling mode determines the enabling modes of the timer 00: The timer is disabled (not counting) and maintains current value 01: The timer is enabled one time. The timer stops after the counter reaches the period 10: The timer is enabled continuously, TIMx increments until the timer counter matches the period, resets the timer counter to zero on the cycle after matching and continues 11: Reserved." range="" rwaccess="RW">
         
         
         
         
         
      </bitfield>
      <bitfield id="PWID_LO" width="2" begin="5" end="4" resetval="0" description="Pulse width Only used in pulse mode (C/P_=0) by the timer controls the timer output 00: TSTATx goes inactive one timer clock cycle after the timer counter reaches the period 01: TSTATx goes inactive two timer clock cycles after the timer counter reaches the period 10: TSTATx goes inactive three timer clock cycles after the timer counter reaches the period 11: TSTATx goes inactive four timer clock cycles after the timer counter reaches the period" range="" rwaccess="RW">
         
         
         
         
         
         
      </bitfield>
      <bitfield id="CP_LO" width="1" begin="3" end="3" resetval="0" description="Clock/Pulse mode for timer output Not applicable in WD mode (TIMMODE[1:0] = 10) 0: Pulse mode. TSTATx is active one timer clock after the timer counter reaches the timer period. PWID[1:0] determines when it goes inactive 1: Clock mode. TIN/TOUT is a 50% duty cycle signal, it toggles high-&gt;low or low-&gt;high when timer counter reaches zero" range="" rwaccess="RW">
         
         
         
         
      </bitfield>
      <bitfield id="INVINP_LO" width="1" begin="2" end="2" resetval="0" description="Timer input inverter control Only affects operation if CLKSRC = 1 0: Uninverted timer input drives timer 1: Inverted timer input drives timer " range="" rwaccess="RW">
         
         
         
         
      </bitfield>
      <bitfield id="INVOUTP_LO" width="1" begin="1" end="1" resetval="0" description="Timer output inverter control 0: Uninverted timer output 1: Inverted timer output " range="" rwaccess="RW">
         
         
         
      </bitfield>
      <bitfield id="TSTAT_LO" width="1" begin="0" end="0" resetval="0" description="Timer status Value of timer output. TSTATx drives the timer output pin when the pin is used as a timer pin (instead of a GPIO) and maybe inverted  by setting INVOUTP = 1" range="" rwaccess="R">
         
         
      </bitfield>
   </register>
   <register id="TGCR" acronym="TGCR" offset="0x0024" width="32" description="Timer Global Control Register">
      <bitfield id="_RESV" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
      <bitfield id="TDDRHI" width="4" begin="15" end="12" resetval="0" description="Timer linear divide-down ratio specifies the timer divide-down ratio for the timer TIMHI When the timer enabled, the TDDRHI increments every timer clock. The TIMHI counter  increments on the cycle after the TDDRHI matches the PSCHI. The TDDRHI resets to zero and continues. When the TIMHI matches the PRDHI, the TIMHI stops if it enabled one time or TIMHI reset to zero on the cycle after matching the PRDHI and TIMHI continues if the timer enabled continuously" range="" rwaccess="RW">
         
         
      </bitfield>
      <bitfield id="PSCHI" width="4" begin="11" end="8" resetval="0" description="TIMHI pre-scalar counter specifies the count for TIMHI" range="" rwaccess="RW">
         
      </bitfield>
      <bitfield id="_RESV" width="4" begin="7" end="4" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
      <bitfield id="TIMMODE" width="2" begin="3" end="2" resetval="0" description="TIMMODE determines timer mode 00: The timer is in 64-bit GP timer mode 01: The timer is in dual 32-bit timer, unchained mode 10: The timer is in 64-bit Watchdog timer mode 11: The timer is in dual 32-bit timer, chained mode" range="" rwaccess="RW">
         
         
         
         
         
      </bitfield>
      <bitfield id="TIMHIRS" width="1" begin="1" end="1" resetval="0" description="TIMHI reset 0: Timer TIMHI is in reset 1: Timer TIMHI is not in reset. TIMHI can be used as a 32-bit timer.Note that in order for the timer functions properly in 64-bit timer mode both TIMHIRS_ and TIMLORS_ must be set to '1'. Changing this bit does not affect the timer if the timer is in the watchdog active state." range="" rwaccess="RW">
         
         
         
      </bitfield>
      <bitfield id="TIMLORS" width="1" begin="0" end="0" resetval="0" description="TIMLO reset 0: Timer TIMLO is in reset, TOUT(P) is tri-stated 1: Timer TIMLO is not in reset. TIMLO can be used as a 32-bit timer.Note that in order for the timer functions properly in 64-bit timer mode both TIMHIRS_ and TIMLORS_ must be set to '1'. Changing this bit does not affect the timer if the timer is in the watchdog active state" range="" rwaccess="RW">
         
         
         
      </bitfield>
   </register>
   <register id="WDTCR" acronym="WDTCR" offset="0x0028" width="32" description="Watchdog Timer Control Register">
      <bitfield id="WDKEY" width="16" begin="31" end="16" resetval="0" description="16-bit watchdog reset key Only the sequence of an A5C6h followed by a DA7Eh services the watchdog. Not applicable in regular timer mode" range="" rwaccess="RW">
         
         
         <bitenum id="CMD1" value="42438" token="CMD1" description="Watchdog key " />
         <bitenum id="CMD2" value="55934" token="CMD2" description="Watchdog key " />
      </bitfield>
      <bitfield id="WDFLAG" width="1" begin="15" end="15" resetval="0" description="Watchdog flag bit This bit can be cleared by enabling the watchdog timer, by device reset and by being written with '1'. It is set by a watchdog time-out 0: No watchdog timeout occurred 1: Watchdog timeout occurred" range="" rwaccess="RW">
         
         
         
         
      </bitfield>
      <bitfield id="WDEN" width="1" begin="14" end="14" resetval="0" description="Watchdog timer enable bit 0: Watchdog disable, watchdog output pin is disconnected from the watchdog timeout event. The timer is in regular timer mode 1: Watchdog enable. TIN/TOUT pin is an output and connected to the watchdog timeout event, can be disabled by watchdog timeout or reset" range="" rwaccess="RW">
         
         
         
         <bitenum id="DISABLE" value="176" token="DISABLE" description="Disables watchdog timer " />
         <bitenum id="ENABLE" value="177" token="ENABLE" description="Enables watchdog timer " />
      </bitfield>
      <bitfield id="WDIKEY" width="2" begin="13" end="12" resetval="0" description="2-bit watchdog IDLE enable key Only the sequence of a 01b followed by a 10b enable the watchdog to go in IDLE mode. Not applicable in regular timer mode A write of 00b to the WDIKEY will disallow the watchdog timer goes into the IDLE mode" range="" rwaccess="RW">
         
         
         
      </bitfield>
      <bitfield id="_RESV" width="12" begin="11" end="0" resetval="0" description="Reserved" range="" rwaccess="N">
         
      </bitfield>
   </register>
</module>
