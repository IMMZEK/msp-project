<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<module description="" id="RCSS_RCM">
  
  
  <register acronym="PID" description=" PID register " id="PID" offset="0x0" width="32">
    
  <bitfield begin="31" description="" end="16" id="" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="" end="11" id="" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="" end="8" id="" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="" end="6" id="" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="HW_REG0" description="" id="HW_REG0" offset="0x4" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG1" description="" id="HW_REG1" offset="0x8" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PREVIOUS_NAME" description="" id="PREVIOUS_NAME" offset="0xC" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG3" description="" id="HW_REG3" offset="0x10" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="RCSS_I2CA_CLK_SRC_SEL" description="" id="RCSS_I2CA_CLK_SRC_SEL" offset="0x14" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS_I2CA. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_I2CB_CLK_SRC_SEL" description="" id="RCSS_I2CB_CLK_SRC_SEL" offset="0x18" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS I2CB. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SCIA_CLK_SRC_SEL" description="" id="RCSS_SCIA_CLK_SRC_SEL" offset="0x1C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS SCIA. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SPIA_CLK_SRC_SEL" description="" id="RCSS_SPIA_CLK_SRC_SEL" offset="0x20" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS_SPIA. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SPIB_CLK_SRC_SEL" description="" id="RCSS_SPIB_CLK_SRC_SEL" offset="0x24" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS SPIB. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_ATL_CLK_SRC_SEL" description="" id="RCSS_ATL_CLK_SRC_SEL" offset="0x28" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS ATL CLK Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_REF0_CLK_SRC_SEL" description="" id="RCSS_MCASPA_REF0_CLK_SRC_SEL" offset="0x2C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS MCASPA REF0 CLK Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_REF1_CLK_SRC_SEL" description="" id="RCSS_MCASPA_REF1_CLK_SRC_SEL" offset="0x30" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS MCASPA REF1 CLK. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_AUX_CLK_SRC_SEL" description="" id="RCSS_MCASPA_AUX_CLK_SRC_SEL" offset="0x34" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS MCASPA AUX CLK Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_REF0_CLK_SRC_SEL" description="" id="RCSS_MCASPB_REF0_CLK_SRC_SEL" offset="0x38" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS MCASPB REF0 CLK Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_REF1_CLK_SRC_SEL" description="" id="RCSS_MCASPB_REF1_CLK_SRC_SEL" offset="0x3C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS MCASPB REF1 CLK. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_AUX_CLK_SRC_SEL" description="" id="RCSS_MCASPB_AUX_CLK_SRC_SEL" offset="0x40" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS MCASPB AUX CLK Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_REF0_CLK_SRC_SEL" description="" id="RCSS_MCASPC_REF0_CLK_SRC_SEL" offset="0x44" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS MCASPC REF0 CLK Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_REF1_CLK_SRC_SEL" description="" id="RCSS_MCASPC_REF1_CLK_SRC_SEL" offset="0x48" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS MCASPC REF1 CLK. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_AUX_CLK_SRC_SEL" description="" id="RCSS_MCASPC_AUX_CLK_SRC_SEL" offset="0x4C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for RCSS MCASPC AUX CLK Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to TPR12 clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_I2CA_CLK_DIV_VAL" description="" id="RCSS_I2CA_CLK_DIV_VAL" offset="0x50" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS I2CA selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_I2CB_CLK_DIV_VAL" description="" id="RCSS_I2CB_CLK_DIV_VAL" offset="0x54" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS I2CB selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SCIA_CLK_DIV_VAL" description="" id="RCSS_SCIA_CLK_DIV_VAL" offset="0x58" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS SCIA selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SPIA_CLK_DIV_VAL" description="" id="RCSS_SPIA_CLK_DIV_VAL" offset="0x5C" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS SPIA selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SPIB_CLK_DIV_VAL" description="" id="RCSS_SPIB_CLK_DIV_VAL" offset="0x60" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS SPIB selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_ATL_CLK_DIV_VAL" description="" id="RCSS_ATL_CLK_DIV_VAL" offset="0x64" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS ATL CLK selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_REF0_CLK_DIV_VAL" description="" id="RCSS_MCASPA_REF0_CLK_DIV_VAL" offset="0x68" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS MCASPA REF0 CLK selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_REF1_CLK_DIV_VAL" description="" id="RCSS_MCASPA_REF1_CLK_DIV_VAL" offset="0x6C" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS  MCASPA REF1 CLK selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_AUX_CLK_DIV_VAL" description="" id="RCSS_MCASPA_AUX_CLK_DIV_VAL" offset="0x70" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS  MCASPA AUX CLK selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_REF0_CLK_DIV_VAL" description="" id="RCSS_MCASPB_REF0_CLK_DIV_VAL" offset="0x74" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS MCASPB REF0 CLK selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_REF1_CLK_DIV_VAL" description="" id="RCSS_MCASPB_REF1_CLK_DIV_VAL" offset="0x78" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS  MCASPB REF1 CLK selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_AUX_CLK_DIV_VAL" description="" id="RCSS_MCASPB_AUX_CLK_DIV_VAL" offset="0x7C" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS  MCASPB AUX CLK selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_REF0_CLK_DIV_VAL" description="" id="RCSS_MCASPC_REF0_CLK_DIV_VAL" offset="0x80" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS MCASPC REF0 CLK selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_REF1_CLK_DIV_VAL" description="" id="RCSS_MCASPC_REF1_CLK_DIV_VAL" offset="0x84" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS  MCASPC REF1 CLK selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_AUX_CLK_DIV_VAL" description="" id="RCSS_MCASPC_AUX_CLK_DIV_VAL" offset="0x88" width="32">
    
  <bitfield begin="11" description="Divider value for RCSS  MCASPC AUX CLK selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="RCSS_I2CA_CLK_GATE" description="" id="RCSS_I2CA_CLK_GATE" offset="0x8C" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS I2CA Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_I2CB_CLK_GATE" description="" id="RCSS_I2CB_CLK_GATE" offset="0x90" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS I2CB Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SCIA_CLK_GATE" description="" id="RCSS_SCIA_CLK_GATE" offset="0x94" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS SCIA Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SPIA_CLK_GATE" description="" id="RCSS_SPIA_CLK_GATE" offset="0x98" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS SPIA Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SPIB_CLK_GATE" description="" id="RCSS_SPIB_CLK_GATE" offset="0x9C" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS SPIB Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_ATL_CLK_GATE" description="" id="RCSS_ATL_CLK_GATE" offset="0xA0" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS ATL CLK Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_REF0_CLK_GATE" description="" id="RCSS_MCASPA_REF0_CLK_GATE" offset="0xA4" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS MCASPA REF0 CLK Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_REF1_CLK_GATE" description="" id="RCSS_MCASPA_REF1_CLK_GATE" offset="0xA8" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS MCASPA REF1 CLK Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_AUX_CLK_GATE" description="" id="RCSS_MCASPA_AUX_CLK_GATE" offset="0xAC" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS MCASPA AUX CLK Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_REF0_CLK_GATE" description="" id="RCSS_MCASPB_REF0_CLK_GATE" offset="0xB0" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS MCASPB REF0 CLK Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_REF1_CLK_GATE" description="" id="RCSS_MCASPB_REF1_CLK_GATE" offset="0xB4" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS MCASPB REF1 CLK Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_AUX_CLK_GATE" description="" id="RCSS_MCASPB_AUX_CLK_GATE" offset="0xB8" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS MCASPB AUX CLK Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_REF0_CLK_GATE" description="" id="RCSS_MCASPC_REF0_CLK_GATE" offset="0xBC" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS MCASPC REF0 CLK Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_REF1_CLK_GATE" description="" id="RCSS_MCASPC_REF1_CLK_GATE" offset="0xC0" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS MCASPC REF1 CLK Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_AUX_CLK_GATE" description="" id="RCSS_MCASPC_AUX_CLK_GATE" offset="0xC4" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS MCASPC AUX CLK Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_ECAP_SYS_CLK_GATE" description="" id="RCSS_ECAP_SYS_CLK_GATE" offset="0xC8" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS ECAP Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_CSI2A_SYS_CLK_GATE" description="" id="RCSS_CSI2A_SYS_CLK_GATE" offset="0xCC" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS CSI2A Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_CSI2B_SYS_CLK_GATE" description="" id="RCSS_CSI2B_SYS_CLK_GATE" offset="0xD0" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  RCSS CSI2B Data should be loaded as multibit.   Write 3'b000 : Clock is ungated  Write 3'b111 : Clock is gated" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_I2CA_CLK_STATUS" description="" id="RCSS_I2CA_CLK_STATUS" offset="0xD4" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS I2CA Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS I2CA Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_I2CB_CLK_STATUS" description="" id="RCSS_I2CB_CLK_STATUS" offset="0xD8" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS I2CB Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS I2CB Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SCIA_CLK_STATUS" description="" id="RCSS_SCIA_CLK_STATUS" offset="0xDC" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS SCIA Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS SCIA Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SPIA_CLK_STATUS" description="" id="RCSS_SPIA_CLK_STATUS" offset="0xE0" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS SPIA Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS SPIA Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SPIB_CLK_STATUS" description="" id="RCSS_SPIB_CLK_STATUS" offset="0xE4" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS SPIB Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS SPIB Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_ATL_CLK_STATUS" description="" id="RCSS_ATL_CLK_STATUS" offset="0xE8" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS ATL_CLK Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS ATL_CLK Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_REF0_CLK_STATUS" description="" id="RCSS_MCASPA_REF0_CLK_STATUS" offset="0xEC" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS MCASPA_REF0_CLK Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS MCASPA_REF0_CLK Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_REF1_CLK_STATUS" description="" id="RCSS_MCASPA_REF1_CLK_STATUS" offset="0xF0" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS MCASPA_REF1_CLK Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS MCASPA_REF1_CLK Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_AUX_CLK_STATUS" description="" id="RCSS_MCASPA_AUX_CLK_STATUS" offset="0xF4" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS MCASPA_AUX_CLK Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS MCASPA_AUX_CLK Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_REF0_CLK_STATUS" description="" id="RCSS_MCASPB_REF0_CLK_STATUS" offset="0xF8" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS MCASPB_REF0_CLK Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS MCASPB_REF0_CLK Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_REF1_CLK_STATUS" description="" id="RCSS_MCASPB_REF1_CLK_STATUS" offset="0xFC" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS MCASPB_REF1_CLK Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS MCASPB_REF1_CLK Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_AUX_CLK_STATUS" description="" id="RCSS_MCASPB_AUX_CLK_STATUS" offset="0x100" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS MCASPB_AUX_CLK Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS MCASPB_AUX_CLK Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_REF0_CLK_STATUS" description="" id="RCSS_MCASPC_REF0_CLK_STATUS" offset="0x104" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS MCASPC_REF0_CLK Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS MCASPC_REF0_CLK Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_REF1_CLK_STATUS" description="" id="RCSS_MCASPC_REF1_CLK_STATUS" offset="0x108" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS MCASPC_REF1_CLK Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS MCASPC_REF1_CLK Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_AUX_CLK_STATUS" description="" id="RCSS_MCASPC_AUX_CLK_STATUS" offset="0x10C" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for RCSS MCASPC_AUX_CLK Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for RCSS MCASPC_AUX_CLK Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="RCSS_ECAP_RST_CTRL" description="" id="RCSS_ECAP_RST_CTRL" offset="0x110" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS ECAP Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_CSI2A_RST_CTRL" description="" id="RCSS_CSI2A_RST_CTRL" offset="0x114" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS CSI2A Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_CSI2B_RST_CTRL" description="" id="RCSS_CSI2B_RST_CTRL" offset="0x118" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS CSI2B Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_I2CA_RST_CTRL" description="" id="RCSS_I2CA_RST_CTRL" offset="0x11C" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS I2CA Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_I2CB_RST_CTRL" description="" id="RCSS_I2CB_RST_CTRL" offset="0x120" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS I2CB Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SCIA_RST_CTRL" description="" id="RCSS_SCIA_RST_CTRL" offset="0x124" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS SCIA Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SPIA_RST_CTRL" description="" id="RCSS_SPIA_RST_CTRL" offset="0x128" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS SPIA Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_SPIB_RST_CTRL" description="" id="RCSS_SPIB_RST_CTRL" offset="0x12C" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS SPIB Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPA_RST_CTRL" description="" id="RCSS_MCASPA_RST_CTRL" offset="0x130" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS MCASPA Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPB_RST_CTRL" description="" id="RCSS_MCASPB_RST_CTRL" offset="0x134" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS MCASPB Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_MCASPC_RST_CTRL" description="" id="RCSS_MCASPC_RST_CTRL" offset="0x138" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS MCASPC Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_GIO_RST_CTRL" description="" id="RCSS_GIO_RST_CTRL" offset="0x13C" width="32">
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS GIO Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RCSS_EDMA_RST_CTRL" description="" id="RCSS_EDMA_RST_CTRL" offset="0x140" width="32">
    
  <bitfield begin="14" description="writing '111'  will reset MSS_TPTCA0" end="12" id="tptca1_assert" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="writing '111'  will reset MSS_TPCCA" end="8" id="tptca0_assert" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS EDMA Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="4" id="tpcca_assert" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="This feature is for debug pupose only. software need to ensure the correct state of Device/IP before configuring this reset control for RCSS EDMA Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW. There could be another reset source which could reset the module. Refer to RCM spec for more details Write 3'b111 : Reset is asserted by SW" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW0" description="" id="HW_SPARE_RW0" offset="0xFD0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW1" description="" id="HW_SPARE_RW1" offset="0xFD4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW2" description="" id="HW_SPARE_RW2" offset="0xFD8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW3" description="" id="HW_SPARE_RW3" offset="0xFDC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO0" description="" id="HW_SPARE_RO0" offset="0xFE0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO1" description="" id="HW_SPARE_RO1" offset="0xFE4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO2" description="" id="HW_SPARE_RO2" offset="0xFE8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO3" description="" id="HW_SPARE_RO3" offset="0xFEC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro3" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_WPH" description="" id="HW_SPARE_WPH" offset="0xFF0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_wph" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_REC" description="" id="HW_SPARE_REC" offset="0xFF4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="31" id="hw_spare_rec31" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved for HW R&amp;D" end="30" id="hw_spare_rec30" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Reserved for HW R&amp;D" end="29" id="hw_spare_rec29" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Reserved for HW R&amp;D" end="28" id="hw_spare_rec28" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="Reserved for HW R&amp;D" end="27" id="hw_spare_rec27" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="Reserved for HW R&amp;D" end="26" id="hw_spare_rec26" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Reserved for HW R&amp;D" end="25" id="hw_spare_rec25" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Reserved for HW R&amp;D" end="24" id="hw_spare_rec24" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved for HW R&amp;D" end="23" id="hw_spare_rec23" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Reserved for HW R&amp;D" end="22" id="hw_spare_rec22" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Reserved for HW R&amp;D" end="21" id="hw_spare_rec21" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Reserved for HW R&amp;D" end="20" id="hw_spare_rec20" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Reserved for HW R&amp;D" end="19" id="hw_spare_rec19" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Reserved for HW R&amp;D" end="18" id="hw_spare_rec18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Reserved for HW R&amp;D" end="17" id="hw_spare_rec17" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Reserved for HW R&amp;D" end="16" id="hw_spare_rec16" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved for HW R&amp;D" end="15" id="hw_spare_rec15" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Reserved for HW R&amp;D" end="14" id="hw_spare_rec14" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Reserved for HW R&amp;D" end="13" id="hw_spare_rec13" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Reserved for HW R&amp;D" end="12" id="hw_spare_rec12" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Reserved for HW R&amp;D" end="11" id="hw_spare_rec11" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Reserved for HW R&amp;D" end="10" id="hw_spare_rec10" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Reserved for HW R&amp;D" end="9" id="hw_spare_rec9" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Reserved for HW R&amp;D" end="8" id="hw_spare_rec8" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved for HW R&amp;D" end="7" id="hw_spare_rec7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Reserved for HW R&amp;D" end="6" id="hw_spare_rec6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Reserved for HW R&amp;D" end="5" id="hw_spare_rec5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Reserved for HW R&amp;D" end="4" id="hw_spare_rec4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Reserved for HW R&amp;D" end="3" id="hw_spare_rec3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Reserved for HW R&amp;D" end="2" id="hw_spare_rec2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved for HW R&amp;D" end="1" id="hw_spare_rec1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rec0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK0" description="  - KICK0 component " id="LOCK0_KICK0" offset="0x1008" width="32">
    
  <bitfield begin="31" description=" - KICK0 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK1" description="  - KICK1 component " id="LOCK0_KICK1" offset="0x100C" width="32">
    
  <bitfield begin="31" description=" - KICK1 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="intr_raw_status" description=" Interrupt Raw Status/Set Register " id="intr_raw_status" offset="0x1010" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enabled_status_clear" description=" Interrupt Enabled Status/Clear register " id="intr_enabled_status_clear" offset="0x1014" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable" description=" Interrupt Enable register " id="intr_enable" offset="0x1018" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable_clear" description=" Interrupt Enable Clear register " id="intr_enable_clear" offset="0x101C" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="eoi" description=" EOI register " id="eoi" offset="0x1020" width="32">
    
  <bitfield begin="7" description="EOI vector value. Write this with interrupt distribution value in the chip." end="0" id="" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_address" description=" Fault Address register " id="fault_address" offset="0x1024" width="32">
    
  <bitfield begin="31" description="Fault Address." end="0" id="" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="fault_type_status" description=" Fault Type Status register " id="fault_type_status" offset="0x1028" width="32">
    
  <bitfield begin="6" description="Non-secure access." end="6" id="" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="fault_attr_status" description=" Fault Attribute Status register " id="fault_attr_status" offset="0x102C" width="32">
    
  <bitfield begin="31" description="XID." end="20" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Route ID." end="8" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="7" description="Privilege ID." end="0" id="" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_clear" description=" Fault Clear register " id="fault_clear" offset="0x1030" width="32">
    
  <bitfield begin="0" description="Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect." end="0" id="" rwaccess="W" width="1"></bitfield>
  </register>
</module>
