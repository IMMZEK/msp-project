<module name="McASP_DSP" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="MCASP_PID" acronym="MCASP_PID" offset="0x0" width="32" description="Peripheral identification register">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="TI internal data" description="IP revision" range="" rwaccess="R"/>
  </register>
  <register id="MCASP_SYSCONFIG" acronym="MCASP_SYSCONFIG" offset="0x4" width="32" description="Power idle module configuration register.">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="IDLE_MODE" width="2" begin="1" end="0" resetval="0x2" description="0x0: Force-idle mode 0x1: No-idle mode 0x2: Smart-idle mode - default state 0x3: Reserved" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_PFUNC" acronym="MCASP_PFUNC" offset="0x10" width="32" description="Specifies the function of the pins as either a McASP pin or a GPIO pin">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="AFSX" width="1" begin="28" end="28" resetval="0" description="Determines if abe_mcasp_afsx pin functions as McASP or GPIO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AFSX_0" description="Pin functions as McASP pin"/>
      <bitenum value="1" id="1" token="AFSX_1" description="Pin functions as GIO pin"/>
    </bitfield>
    <bitfield id="AHCLKX" width="1" begin="27" end="27" resetval="0" description="Determines if abe_mcasp_ahclkx pin functions as McASP or GPIO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AHCLKX_0" description="Pin functions as McASP pin"/>
      <bitenum value="1" id="1" token="AHCLKX_1" description="Pin functions as GIO pin"/>
    </bitfield>
    <bitfield id="ACLKX" width="1" begin="26" end="26" resetval="0" description="Determines if abe_mcasp_aclkx pin functions as McASP or GPIO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACLKX_0" description="Pin functions as McASP pin"/>
      <bitenum value="1" id="1" token="ACLKX_1" description="Pin functions as GIO pin"/>
    </bitfield>
    <bitfield id="AMUTE" width="1" begin="25" end="25" resetval="0" description="Determines if abe_mcasp_amute pin functions as McASP or GPIO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AMUTE_0" description="Pin functions as McASP pin"/>
      <bitenum value="1" id="1" token="AMUTE_1" description="Pin functions as GIO pin"/>
    </bitfield>
    <bitfield id="RESERVED" width="24" begin="24" end="1" resetval="0x000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="AXR0" width="1" begin="0" end="0" resetval="0" description="Determines if abe_mcasp_axr pin functions as McASP or GPIO." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AXR0_0" description="Pin functions as McASP pin"/>
      <bitenum value="1" id="1" token="AXR0_1" description="Pin functions as GIO pin"/>
    </bitfield>
  </register>
  <register id="MCASP_PDIR" acronym="MCASP_PDIR" offset="0x14" width="32" description="Pin direction register - specifies the direction of the McASP pins as either an input or an output pin. For the module to operate properly, configure them as outputs.">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="AFSX" width="1" begin="28" end="28" resetval="0" description="Determines if abe_mcasp_afsx pin functions as an input or output." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AFSX_0" description="Input"/>
      <bitenum value="1" id="1" token="AFSX_1" description="Output"/>
    </bitfield>
    <bitfield id="AHCLKX" width="1" begin="27" end="27" resetval="0" description="Determines if abe_mcasp_ahclkx pin functions as an input or output." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AHCLKX_0" description="Input"/>
      <bitenum value="1" id="1" token="AHCLKX_1" description="Output"/>
    </bitfield>
    <bitfield id="ACLKX" width="1" begin="26" end="26" resetval="0" description="Determines if abe_mcasp_aclkx pin functions as an input or output." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACLKX_0" description="Input"/>
      <bitenum value="1" id="1" token="ACLKX_1" description="Output"/>
    </bitfield>
    <bitfield id="AMUTE" width="1" begin="25" end="25" resetval="0" description="Determines if abe_mcasp_amute pin functions as an input or output." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AMUTE_0" description="Input"/>
      <bitenum value="1" id="1" token="AMUTE_1" description="Output"/>
    </bitfield>
    <bitfield id="RESERVED" width="24" begin="24" end="1" resetval="0x000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="AXR0" width="1" begin="0" end="0" resetval="0" description="Determines if abe_mcasp_axr pin functions as an input or output." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AXR0_0" description="Input"/>
      <bitenum value="1" id="1" token="AXR0_1" description="Output"/>
    </bitfield>
  </register>
  <register id="MCASP_PDOUT" acronym="MCASP_PDOUT" offset="0x18" width="32" description="Pin data output register - holds a value for data out at all times, and may be read back at all times. The value held by is not affected by writing to and . However, the data value in is driven out onto the McASP pin only if the corresponding bit in is set to 1 (GPIO function) and the corresponding bit in is set to 1 (output).">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="AFSX" width="1" begin="28" end="28" resetval="0" description="Determines drive on AFSX output pin when the correspondingMCASP_PFUNC[28] and MCASP_PDIR[28] bits are set to 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AFSX_0" description="The pin drives low."/>
      <bitenum value="1" id="1" token="AFSX_1" description="The pin drives high."/>
    </bitfield>
    <bitfield id="AHCLKX" width="1" begin="27" end="27" resetval="0" description="Determines drive on AHCLKX output pin when the correspondingMCASP_PFUNC[27] and MCASP_PDIR[27] bits are set to 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AHCLKX_0" description="The pin drives low."/>
      <bitenum value="1" id="1" token="AHCLKX_1" description="The pin drives high."/>
    </bitfield>
    <bitfield id="ACLKX" width="1" begin="26" end="26" resetval="0" description="Determines drive on ACLKX output pin when the correspondingMCASP_PFUNC[26] and MCASP_PDIR[26] bits are set to 1" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACLKX_0" description="The pin drives low."/>
      <bitenum value="1" id="1" token="ACLKX_1" description="The pin drives high."/>
    </bitfield>
    <bitfield id="AMUTE" width="1" begin="25" end="25" resetval="0" description="Determines drive on AMUTE output pin when the correspondingMCASP_PFUNC[25] and MCASP_PDIR[25] bits are set to 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AMUTE_0" description="The pin drives low."/>
      <bitenum value="1" id="1" token="AMUTE_1" description="The pin drives high."/>
    </bitfield>
    <bitfield id="RESERVED" width="24" begin="24" end="1" resetval="0x000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="AXR0" width="1" begin="0" end="0" resetval="0" description="Determines drive on abe_mcasp_axr output pin when the correspondingMCASP_PFUNC[0] and MCASP_PDIR[0] bits are set to 1." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AXR0_0" description="The pin drives low."/>
      <bitenum value="1" id="1" token="AXR0_1" description="The pin drives high."/>
    </bitfield>
  </register>
  <register id="MCASP_PDIN" acronym="MCASP_PDIN" offset="0x1C" width="32" description="Pin data input register - holds the state of all the McASP pins. allows reading the actual value of the pin, regardless of the state of and .">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="AFSX" width="1" begin="28" end="28" resetval="0" description="Logic level on abe_mcasp_afsx pin." range="" rwaccess="R">
      <bitenum value="0" id="0" token="AFSX_0" description="Pin is logic low."/>
      <bitenum value="1" id="1" token="AFSX_1" description="Pin is logic high."/>
    </bitfield>
    <bitfield id="AHCLKX" width="1" begin="27" end="27" resetval="0" description="Logic level on abe_mcasp_ahclkx pin." range="" rwaccess="R">
      <bitenum value="0" id="0" token="AHCLKX_0" description="Pin is logic low."/>
      <bitenum value="1" id="1" token="AHCLKX_1" description="Pin is logic high."/>
    </bitfield>
    <bitfield id="ACLKX" width="1" begin="26" end="26" resetval="0" description="Logic level on abe_mcasp_aclkx pin." range="" rwaccess="R">
      <bitenum value="0" id="0" token="ACLKX_0" description="Pin is logic low."/>
      <bitenum value="1" id="1" token="ACLKX_1" description="Pin is logic high."/>
    </bitfield>
    <bitfield id="AMUTE" width="1" begin="25" end="25" resetval="0" description="Logic level on abe_mcasp_amute pin." range="" rwaccess="R">
      <bitenum value="0" id="0" token="AMUTE_0" description="Pin is logic low."/>
      <bitenum value="1" id="1" token="AMUTE_1" description="Pin is logic high."/>
    </bitfield>
    <bitfield id="RESERVED" width="24" begin="24" end="1" resetval="0x000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="AXR0" width="1" begin="0" end="0" resetval="0" description="Logic level on abe_mcasp_axr pin." range="" rwaccess="R">
      <bitenum value="0" id="0" token="AXR0_0" description="Pin is logic low."/>
      <bitenum value="1" id="1" token="AXR0_1" description="Pin is logic high."/>
    </bitfield>
  </register>
  <register id="MCASP_PDSET" acronym="MCASP_PDSET" offset="0x1C" width="32" description="The pin data set register is an alias of the pin data output register () for writes only. Writing a 1 to the bit sets the corresponding bit in and, if = 1 (GPIO function) and = 1 (output), drives a logic high on the pin.">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0" description="Reserved" range="" rwaccess="W"/>
    <bitfield id="AFSX" width="1" begin="28" end="28" resetval="0" description="Allows the corresponding AFSX bit inMCASP_PDOUT to be set to a logic high without affecting other I/O pins controlled by the same port." range="" rwaccess="W">
      <bitenum value="0" id="0" token="AFSX_0" description="No effect"/>
      <bitenum value="1" id="1" token="AFSX_1" description="[28] bit is set to 1."/>
    </bitfield>
    <bitfield id="AHCLKX" width="1" begin="27" end="27" resetval="0" description="Allows the corresponding AHCLKX bit inMCASP_PDOUT to be set to a logic high without affecting other I/O pins controlled by the same port." range="" rwaccess="W">
      <bitenum value="0" id="0" token="AHCLKX_0" description="No effect"/>
      <bitenum value="1" id="1" token="AHCLKX_1" description="[27] bit is set to 1."/>
    </bitfield>
    <bitfield id="ACLKX" width="1" begin="26" end="26" resetval="0" description="Allows the corresponding ACLKX bit inMCASP_PDOUT to be set to a logic high without affecting other I/O pins controlled by the same port." range="" rwaccess="W">
      <bitenum value="0" id="0" token="ACLKX_0" description="No effect"/>
      <bitenum value="1" id="1" token="ACLKX_1" description="[26] bit is set to 1."/>
    </bitfield>
    <bitfield id="AMUTE" width="1" begin="25" end="25" resetval="0" description="Allows the corresponding AMUTE bit inMCASP_PDOUT to be set to a logic high without affecting other I/O pins controlled by the same port." range="" rwaccess="W">
      <bitenum value="0" id="0" token="AMUTE_0" description="No effect"/>
      <bitenum value="1" id="1" token="AMUTE_1" description="[25] bit is set to 1."/>
    </bitfield>
    <bitfield id="RESERVED" width="24" begin="24" end="1" resetval="0x000" description="Reserved" range="" rwaccess="W"/>
    <bitfield id="AXR0" width="1" begin="0" end="0" resetval="0" description="Allows the AXR0 bit inMCASP_PDOUT to be set to a logic high without affecting other I/O pins controlled by the same port." range="" rwaccess="W">
      <bitenum value="0" id="0" token="AXR0_0" description="No effect"/>
      <bitenum value="1" id="1" token="AXR0_1" description="[0] bit is set to 1."/>
    </bitfield>
  </register>
  <register id="MCASP_PDCLR" acronym="MCASP_PDCLR" offset="0x20" width="32" description="The pin data clear register is an alias of the pin data output register () for writes only. Writing a 1 to the bit clears the corresponding bit in and, if = 1 (GPIO function) and = 1 (output), drives a logic low on the pin.">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="AFSX" width="1" begin="28" end="28" resetval="0" description="Allows the corresponding AFSX bit inMCASP_PDOUT to be cleared to a logic low without affecting other I/O pins controlled by the same port." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AFSX_0" description="No effect"/>
      <bitenum value="1" id="1" token="AFSX_1" description="[28] bit is cleared to 0."/>
    </bitfield>
    <bitfield id="AHCLKX" width="1" begin="27" end="27" resetval="0" description="Allows the corresponding AHCLKX bit inMCASP_PDOUT to be cleared to a logic low without affecting other I/O pins controlled by the same port." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AHCLKX_0" description="No effect"/>
      <bitenum value="1" id="1" token="AHCLKX_1" description="[27] bit is cleared to 0."/>
    </bitfield>
    <bitfield id="ACLKX" width="1" begin="26" end="26" resetval="0" description="Allows the corresponding ACLKX bit inMCASP_PDOUT to be cleared to a logic low without affecting other I/O pins controlled by the same port." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ACLKX_0" description="No effect"/>
      <bitenum value="1" id="1" token="ACLKX_1" description="[26] bit is cleared to 0."/>
    </bitfield>
    <bitfield id="AMUTE" width="1" begin="25" end="25" resetval="0" description="Allows the corresponding AMUTE bit inMCASP_PDOUT to be cleared to a logic low without affecting other I/O pins controlled by the same port." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AMUTE_0" description="No effect"/>
      <bitenum value="1" id="1" token="AMUTE_1" description="[25] bit is cleared to 0."/>
    </bitfield>
    <bitfield id="RESERVED" width="24" begin="24" end="1" resetval="0x000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="AXR0" width="1" begin="0" end="0" resetval="0" description="Allows the AXR0 bit inMCASP_PDOUT to be cleared to a logic low without affecting other I/O pins controlled by the same port." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="AXR0_0" description="No effect"/>
      <bitenum value="1" id="1" token="AXR0_1" description="[0] bit is cleared to 0."/>
    </bitfield>
  </register>
  <register id="MCASP_GBLCTL" acronym="MCASP_GBLCTL" offset="0x44" width="32" description="Global transmit control register - provides initialization of the transmit section. The bit fields in are synchronized and latched by the abe_mcasp_aclkx clock. Before programming , ensure that the serial clocks are running. If the corresponding external serial clock, abe_mcasp_clkx, is not yet running, select the internal serial clock source in AHCLKXCTL and ACLKXCTL before programming . Also, after programming any bits in , do not proceed until reading back from and verifying that the bits in are latched.">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XFRST" width="1" begin="12" end="12" resetval="0" description="Transmit frame-sync generator reset enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XFRST_0" description="The transmit frame-sync generator is reset."/>
      <bitenum value="1" id="1" token="XFRST_1" description="The transmit frame-sync generator is active. When released from reset, the transmit frame-sync generator begins counting serial clocks and generating frame sync as programmed."/>
    </bitfield>
    <bitfield id="XSMRST" width="1" begin="11" end="11" resetval="0" description="Transmit state-machine reset enable bitabe_mcasp_axr pin state: If[0] = 0 and [0] = 1, the serializer drives the abe_mcasp_axr pin to the state specified for inactive time slot ." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XSMRST_0" description="The transmit state-machine is held in reset."/>
      <bitenum value="1" id="1" token="XSMRST_1" description="The transmit state-machine is released from reset. When released from reset, the transmit state-machine immediately transfers data from XBUF[n] to XRSR[n]. The transmit state-machine sets the underrun flag (XUNDRN) in MCASP_TXSTAT, if XBUF[n] have not been preloaded with data before reset is released. The transmit state-machine also immediately begins detecting frame sync and is ready to transmit. Transmission of TDM time slot begins at slot 0 after reset is released."/>
    </bitfield>
    <bitfield id="XSRCLR" width="1" begin="10" end="10" resetval="0" description="Transmit serializer clear enable bit. By clearing and then setting this bit, the transmit buffer is flushed to an empty state (XDATA = 1). If XSMRST = 1, XSRCLR = 1, XDATA = 1, and XBUF is not loaded with new data before the start of the next active time slot, an underrun occurs." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XSRCLR_0" description="The transmit serializer is cleared."/>
      <bitenum value="1" id="1" token="XSRCLR_1" description="The transmit serializer is active. When the transmit serializer is first taken out of reset (XSRCLR changes from 0 to 1), the transmit data ready bit (XDATA) in MCASP_TXSTAT is set to indicate XBUF is ready to be written."/>
    </bitfield>
    <bitfield id="XHCLKRST" width="1" begin="9" end="9" resetval="0" description="Transmit high-frequency clock divider reset enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XHCLKRST_0" description="The transmitter high-frequency clock divider is held in reset."/>
      <bitenum value="1" id="1" token="XHCLKRST_1" description="The transmitter high-frequency clock divider is running."/>
    </bitfield>
    <bitfield id="XCLKRST" width="1" begin="8" end="8" resetval="0" description="Transmit clock divider reset enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XCLKRST_0" description="The transmit clock divider is held in reset. When the clock divider is in reset, it passes through a divide-by-1 of its input."/>
      <bitenum value="1" id="1" token="XCLKRST_1" description="The transmit clock divider is running."/>
    </bitfield>
    <bitfield id="RESERVED" width="8" begin="7" end="0" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_AMUTE" acronym="MCASP_AMUTE" offset="0x48" width="32" description="Mute control register - Controls the McASP mute output pin (abe_mcasp_amute)">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x00000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XDMAERR" width="1" begin="12" end="12" resetval="0" description="Drives AMUTE active enable bit on transmit DMA error (XDMAERR)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XDMAERR_0" description="Drive is disabled. Detection of transmit DMA error is ignored by abe_mcasp_amute."/>
      <bitenum value="1" id="1" token="XDMAERR_1" description="Drive is enabled (active). Upon detection of transmit DMA error, abe_mcasp_amute is active and is driven according to MUTEN bits."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="11" end="11" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XCKFAIL" width="1" begin="10" end="10" resetval="0" description="XMT bad clock. Drives AMUTE active enable bit on transmit clock failure (XCKFAIL)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XCKFAIL_0" description="Drive is disabled. Detection of transmit clock failure is ignored by abe_mcasp_amute."/>
      <bitenum value="1" id="1" token="XCKFAIL_1" description="Drive is enabled (active). Upon detection of transmit clock failure, abe_mcasp_amute is active and is driven according to MUTEN bits."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="9" end="9" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XSYNCERR" width="1" begin="8" end="8" resetval="0" description="XMT unexpected FS. Drives AMUTE active enable bit on unexpected transmit frame-sync error (XSYNCERR)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XSYNCERR_0" description="Drive is disabled. Detection of unexpected transmit frame-sync error is ignored by abe_mcasp_amute."/>
      <bitenum value="1" id="1" token="XSYNCERR_1" description="Drive is enabled (active). Upon detection of unexpected transmit frame-sync error, abe_mcasp_amute is active and is driven according to MUTEN bit."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XUNDRN" width="1" begin="6" end="6" resetval="0" description="XMT underrun occurs. Drives AMUTE active enable bit on ransmit underrun error (XUNDRN)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XUNDRN_0" description="Drive is disabled. Detection of transmit underrun error is ignored by abe_mcasp_amute."/>
      <bitenum value="1" id="1" token="XUNDRN_1" description="Drive is enabled (active). Upon detection of transmit underrun error, abe_mcasp_amute is active and is driven according to MUTEN bit."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="5" end="5" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="INSTAT" width="1" begin="4" end="4" resetval="0" description="Status of mute in pin, determines drive on abe_mcasp_axr pin when theMCASP_PFUNC[0] and MCASP_PDIR[0] bits are set to 1." range="" rwaccess="R">
      <bitenum value="0" id="0" token="INSTAT_0_r" description="Inactive"/>
      <bitenum value="1" id="1" token="INSTAT_1_r" description="Active. Audio mute in error is detected."/>
    </bitfield>
    <bitfield id="INEN" width="1" begin="3" end="3" resetval="0" description="Drive abe_mcasp_amute active when abe_mcasp_amutein error is active." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="INEN_0" description="Drive is disabled. abe_mcasp_amutein is ignored by abe_mcasp_amute."/>
      <bitenum value="1" id="1" token="INEN_1" description="Drive is enabled (active). INSTAT = 1 drives abe_mcasp_amute active."/>
    </bitfield>
    <bitfield id="INPOL" width="1" begin="2" end="2" resetval="0" description="Audio mute in (abe_mcasp_amutein) polarity select bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="INPOL_0" description="Polarity is active high. A high on abe_mcasp_amutein sets INSTAT to 1."/>
      <bitenum value="1" id="1" token="INPOL_1" description="Polarity is active low. A low on abe_mcasp_amutein sets INSTAT to 1."/>
    </bitfield>
    <bitfield id="MUTEN" width="2" begin="1" end="0" resetval="0x0" description="abe_mcasp_amute pin enable bit field (unless overridden by GPIO registers)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MUTEN_0" description="Disabled, pin goes to 3-state condition."/>
      <bitenum value="1" id="1" token="MUTEN_1" description="Pin is driven high if error is detected."/>
      <bitenum value="2" id="2" token="MUTEN_2" description="Pin is driven low if error is detected."/>
    </bitfield>
  </register>
  <register id="MCASP_TXDITCTL" acronym="MCASP_TXDITCTL" offset="0x50" width="32" description="Transmit DIT mode control register, controls DIT operations of the McASP">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0000000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="VB" width="1" begin="3" end="3" resetval="0" description="Valid bit for odd time slots (DIT right subframe)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VB_0" description="V bit is 0 during odd DIT subframes."/>
      <bitenum value="1" id="1" token="VB_1" description="V bit is 1 during odd DIT subframes."/>
    </bitfield>
    <bitfield id="VA" width="1" begin="2" end="2" resetval="0" description="Valid bit for even time slots (DIT left subframe)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="VA_0" description="V bit is 0 during even DIT subframes."/>
      <bitenum value="1" id="1" token="VA_1" description="V bit is 1 during even DIT subframes."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="DITEN" width="1" begin="0" end="0" resetval="0" description="DIT mode enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DITEN_0" description="DIT mode is disabled."/>
      <bitenum value="1" id="1" token="DITEN_1" description="DIT mode is enabled. Transmitter operates in DIT encoded mode."/>
    </bitfield>
  </register>
  <register id="MCASP_TXMASK" acronym="MCASP_TXMASK" offset="0xA4" width="32" description="Transmit format unit bit mask register - Determines which bits of the transmitted data are masked off before being shifted out the McASP">
    <bitfield id="XMASK_31_to_0" width="32" begin="31" end="0" resetval="0" description="Transmit data mask enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XMASK_31_to_0_0" description="The corresponding bit of transmit data is masked out and then transmitted out the McASP in place of the original bit."/>
      <bitenum value="1" id="1" token="XMASK_31_to_0_1" description="The corresponding bit of transmit data is transmitted out the McASP."/>
    </bitfield>
  </register>
  <register id="MCASP_TXFMT" acronym="MCASP_TXFMT" offset="0xA8" width="32" description="Transmit bitstream format register - configures the transmit data format">
    <bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0x0000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XDATDLY" width="2" begin="17" end="16" resetval="0x0" description="Transmit sync bit delay" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XDATDLY_0" description="0 bit delay - The first transmit data bit, abe_mcasp_axr, occurs in the same abe_mcasp_aclkx cycle as the transmit frame sync (abe_mcasp_afsx)."/>
      <bitenum value="1" id="1" token="XDATDLY_1" description="Reserved"/>
      <bitenum value="2" id="2" token="XDATDLY_2" description="Reserved"/>
    </bitfield>
    <bitfield id="XRVRS" width="1" begin="15" end="15" resetval="0x0" description="Transmit serial bitstream order 0x0: Bitstream is LSB first. No bit reversal is performed in transmit format unit. 0x1: Reserved" range="" rwaccess="RW"/>
    <bitfield id="XPAD" width="2" begin="14" end="13" resetval="0x00" description="Pad value for extra bits in slot not belonging to word defined by XMASK. This field only applies to bits when XMASK[n] = 0. 0x0: Pad extra bits with 0. 0x1 to 0x3: Reserved" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="12" end="8" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XSSZ" width="4" begin="7" end="4" resetval="0x0" description="Transmit slot size0x0 to 0xE: Reserved ." range="" rwaccess="RW">
      <bitenum value="15" id="15" token="XSSZ_15" description="Slot size is 32 bits."/>
    </bitfield>
    <bitfield id="XBUSEL" width="1" begin="3" end="3" resetval="0" description="Selects whether writes to the serializer buffer XBUF originate from the peripheral configuration port or the DMA port." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XBUSEL_0" description="Writes to XBUF originate from the data port. Writes to XBUF from the peripheral configuration port are ignored with no effect on the McASP."/>
      <bitenum value="1" id="1" token="XBUSEL_1" description="Writes to XBUF originate from the peripheral configuration port. Writes to XBUF from the data port are ignored with no effect on the McASP."/>
    </bitfield>
    <bitfield id="XROT" width="3" begin="2" end="0" resetval="0x0" description="Right-rotation value for transmit rotate right format unit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XROT_0" description="Rotate right by 0 (no rotation)."/>
      <bitenum value="1" id="1" token="XROT_1" description="Rotate right by 4 bit positions."/>
      <bitenum value="2" id="2" token="XROT_2" description="Rotate right by 8 bit positions."/>
      <bitenum value="3" id="3" token="XROT_3" description="Rotate right by 12 bit positions."/>
      <bitenum value="4" id="4" token="XROT_4" description="Rotate right by 16 bit positions."/>
      <bitenum value="5" id="5" token="XROT_5" description="Rotate right by 20 bit positions."/>
      <bitenum value="6" id="6" token="XROT_6" description="Rotate right by 24 bit positions."/>
      <bitenum value="7" id="7" token="XROT_7" description="Rotate right by 28 bit positions."/>
    </bitfield>
  </register>
  <register id="MCASP_TXFMCTL" acronym="MCASP_TXFMCTL" offset="0xAC" width="32" description="Transmit frame-sync control register - configures the transmit frame sync (abe_mcasp_afsx).">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XMOD" width="9" begin="15" end="7" resetval="0x000" description="Transmit frame-sync mode select bits 0x180: 384-slot DIT mode All other: Reserved" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="6" end="5" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="FXWID" width="1" begin="4" end="4" resetval="0" description="The transmit frame-sync width select bit indicates the width of the transmit frame sync (abe_mcasp_afsx) during its active period." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FXWID_0" description="Single bit"/>
      <bitenum value="1" id="1" token="FXWID_1" description="Reserved"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="3" end="2" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="FSXM" width="1" begin="1" end="1" resetval="0" description="Transmit frame-sync generation select bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FSXM_0" description="Reserved"/>
      <bitenum value="1" id="1" token="FSXM_1" description="Internally-generated transmit frame sync"/>
    </bitfield>
    <bitfield id="FSXP" width="1" begin="0" end="0" resetval="0" description="Transmit frame-sync polarity select bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FSXP_0" description="Rising Edge - A rising edge on transmit frame sync (abe_mcasp_afsx) indicates the beginning of a frame."/>
      <bitenum value="1" id="1" token="FSXP_1" description="Reserved"/>
    </bitfield>
  </register>
  <register id="MCASP_ACLKXCTL" acronym="MCASP_ACLKXCTL" offset="0xB0" width="32" description="Transmit clock control register - Configures the transmit bit clock (abe_mcasp_aclkx) and the transmit clock generator.">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x00" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="ASYNC" width="1" begin="6" end="6" resetval="1" description="Transmit operation asynchronous enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ASYNC_0" description="Reserved"/>
      <bitenum value="1" id="1" token="ASYNC_1" description="Asynchronous"/>
    </bitfield>
    <bitfield id="CLKXM" width="1" begin="5" end="5" resetval="1" description="Transmit bit clock source bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLKXM_0" description="Reserved"/>
      <bitenum value="1" id="1" token="CLKXM_1" description="Internal (output of divider)"/>
    </bitfield>
    <bitfield id="CLKXDIV" width="5" begin="4" end="0" resetval="0x00" description="Transmit bit clock divide ratio bits, determine the divide-down ratio from AHCLKX to ACLKX. 0x0: Divide-by-1 0x1: Divide-by-2 0x2 to 0x1F: Divide-by-3 to divide-by-32" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_AHCLKXCTL" acronym="MCASP_AHCLKXCTL" offset="0xB4" width="32" description="High-frequency transmit clock control register - Configures the transmit high-frequency master clock (abe_mcasp_ahclkx) and the transmit clock generator.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="HCLKXM" width="1" begin="15" end="15" resetval="1" description="Transmit high-frequency clock source bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="HCLKXM_0" description="Reserved"/>
      <bitenum value="1" id="1" token="HCLKXM_1" description="Internal transmit high-frequency clock source from output of programmable high clock divider"/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="14" end="12" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="HCLKXDIV" width="12" begin="11" end="0" resetval="0x000" description="Transmit high-frequency clock divide ratio bits determine the divide-down ratio from AUXCLK to abe_mcasp_ahclkx. 0x0: Divide-by-1 0x1: Divide-by-2 0x2 to 0xFFF: Divide-by-3 to divide-by-4096" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_TXTDM" acronym="MCASP_TXTDM" offset="0xB8" width="32" description="Transmit TDM slot 0-31 register - TDM time slot counter range is to 384 slots (to support SPDIF blocks of 384 subframes).">
    <bitfield id="XTDMS_31_to_0" width="32" begin="31" end="0" resetval="0" description="Transmitter mode during TDM time slot n" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XTDMS_31_to_0_0" description="Reserved"/>
      <bitenum value="1" id="1" token="XTDMS_31_to_0_1" description="The transmit TDM time slot n is active. The transmit serializer shifts out data during this slot according to the serializer control register (MCASP_SRCTL)."/>
    </bitfield>
  </register>
  <register id="MCASP_EVTCTLX" acronym="MCASP_EVTCTLX" offset="0xBC" width="32" description="Transmitter Interrupt control register - controls generation of the McASP transmit interrupt (XINT). When the register bit(s) is set to 1, the occurrence of the enabled McASP condition(s) generates XINT.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XSTAFRM" width="1" begin="7" end="7" resetval="0" description="Transmit start of frame interrupt enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XSTAFRM_0" description="Interrupt is disabled. A transmit-start-of-frame interrupt does not generate a McASP transmit interrupt (XINT)."/>
      <bitenum value="1" id="1" token="XSTAFRM_1" description="Interrupt is enabled. A transmit-start-of-frame interrupt generates a McASP transmit interrupt (XINT)."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XDATA" width="1" begin="5" end="5" resetval="0" description="Transmit data-ready interrupt enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XDATA_0" description="Interrupt is disabled. A transmit data-ready interrupt does not generate a McASP transmit interrupt (XINT)."/>
      <bitenum value="1" id="1" token="XDATA_1" description="Interrupt is enabled. A transmit data-ready interrupt generates a McASP transmit interrupt (XINT)."/>
    </bitfield>
    <bitfield id="XLAST" width="1" begin="4" end="4" resetval="0" description="Transmit last slot interrupt enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XLAST_0" description="Interrupt is disabled. A transmit-last-slot interrupt does not generate a McASP transmit interrupt (XINT)."/>
      <bitenum value="1" id="1" token="XLAST_1" description="Interrupt is enabled. A transmit-last-slot interrupt generates a McASP transmit interrupt (XINT)."/>
    </bitfield>
    <bitfield id="XDMAERR" width="1" begin="3" end="3" resetval="0" description="Transmit DMA error interrupt enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XDMAERR_0" description="Interrupt is disabled. A transmit DMA error interrupt does not generate a McASP transmit interrupt (XINT)."/>
      <bitenum value="1" id="1" token="XDMAERR_1" description="Interrupt is enabled. A transmit DMA error interrupt generates a McASP transmit interrupt (XINT)."/>
    </bitfield>
    <bitfield id="XCKFAIL" width="1" begin="2" end="2" resetval="0" description="Transmit clock failure interrupt enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XCKFAIL_0" description="Interrupt is disabled. A transmit clock failure interrupt does not generate a McASP transmit interrupt (XINT)."/>
      <bitenum value="1" id="1" token="XCKFAIL_1" description="Interrupt is enabled. A transmit clock failure interrupt generates a McASP transmit interrupt (XINT)."/>
    </bitfield>
    <bitfield id="XSYNCERR" width="1" begin="1" end="1" resetval="0" description="Unexpected transmit frame-sync interrupt enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XSYNCERR_0" description="Interrupt is disabled. An unexpected transmit frame-sync interrupt does not generate a McASP transmit interrupt (XINT)."/>
      <bitenum value="1" id="1" token="XSYNCERR_1" description="Interrupt is enabled. An unexpected transmit frame-sync interrupt generates a McASP transmit interrupt (XINT)."/>
    </bitfield>
    <bitfield id="XUNDRN" width="1" begin="0" end="0" resetval="0" description="Transmitter underrun interrupt enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XUNDRN_0" description="Interrupt is disabled. A transmitter underrun interrupt does not generate a McASP transmit interrupt (XINT)."/>
      <bitenum value="1" id="1" token="XUNDRN_1" description="Interrupt is enabled. A transmitter underrun interrupt generates a McASP transmit interrupt (XINT)."/>
    </bitfield>
  </register>
  <register id="MCASP_TXSTAT" acronym="MCASP_TXSTAT" offset="0xC0" width="32" description="Transmitter status register - If the McASP logic attempts to set an interrupt flag in the same cycle that the CPU writes to the flag to clear it, the McASP logic has priority and the flag remains set. This also causes the generation of a new interrupt request.">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0x000000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XERR" width="1" begin="8" end="8" resetval="0" description="XERR bit always returns a logic-OR of: XUNDRN | XSYNCERR | XCKFAIL | XDMAERR. Allows a single bit to be checked to determine if a transmitter error interrupt has occurred." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XERR_0" description="No errors have occurred."/>
      <bitenum value="1" id="1" token="XERR_1" description="An error has occurred."/>
    </bitfield>
    <bitfield id="XDMAERR" width="1" begin="7" end="7" resetval="0" description="Transmit DMA error flag. XDMAERR is set when the CPU or DMA writes more words to the data port of the McASPin a given time slot than it should. Causes a transmit interrupt (XINT) if this bit and XDMAERR inMCASP_EVTCTLX are set. This bit is cleared by writing a 1 to it. Writing a 0 has no effect." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XDMAERR_0" description="Transmit DMA error did not occur."/>
      <bitenum value="1" id="1" token="XDMAERR_1" description="Transmit DMA error occurred."/>
    </bitfield>
    <bitfield id="XSTAFRM" width="1" begin="6" end="6" resetval="0" description="Transmit start of frame flag. Causes a transmit interrupt (XINT) if this bit and XSTAFRM inMCASP_EVTCTLX are set. This bit is cleared by writing a 1 to it. Writing a 0 has no effect." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XSTAFRM_0" description="No new transmit frame sync (AFSX) is detected."/>
      <bitenum value="1" id="1" token="XSTAFRM_1" description="A new transmit frame sync (AFSX) is detected."/>
    </bitfield>
    <bitfield id="XDATA" width="1" begin="5" end="5" resetval="0" description="Transmit data ready flag. Causes a transmit interrupt (XINT) if this bit and XDATA inMCASP_EVTCTLX are set. This bit is cleared by writing a 1 to iit. Writing a 0 has no effect" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XDATA_0" description="XBUF is written and is full"/>
      <bitenum value="1" id="1" token="XDATA_1" description="Data is copied from XBUF to XRSR. XBUF is empty and ready to be written. XDATA is also set when the transmit serializers are taken out of reset. When XDATA is set, it always causes a DMA event (AXEVT)."/>
    </bitfield>
    <bitfield id="XLAST" width="1" begin="4" end="4" resetval="0" description="Transmit last slot flag. XLAST, along with XDATA, are set if the current slot is the last slot in a frame. Causes a transmit interrupt (XINT) if this bit and XLAST inMCASP_EVTCTLX are set. This bit is cleared by writing a 1 to iit. Writing a 0 has no effect." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XLAST_0" description="Current slot is not the last slot in a frame."/>
      <bitenum value="1" id="1" token="XLAST_1" description="Current slot is the last slot in a frame. XDATA is also set."/>
    </bitfield>
    <bitfield id="XTDMSLOT" width="1" begin="3" end="3" resetval="0" description="Returns the LSB of XSLOT. Allows a single read of XSTAT to determine whether the current TDM time slot is even or odd." range="" rwaccess="R">
      <bitenum value="0" id="0" token="XTDMSLOT_0_r" description="Current TDM time slot is odd."/>
      <bitenum value="1" id="1" token="XTDMSLOT_1_r" description="Current TDM time slot is even."/>
    </bitfield>
    <bitfield id="XCKFAIL" width="1" begin="2" end="2" resetval="0" description="Transmit clock failure flag. XCKFAIL is set when the transmit clock failure detection circuit reports an error. Causes a transmit interrupt (XINT) if this bit and XCKFAIL inMCASP_EVTCTLX are set. This bit is cleared by writing a 1 to iit. Writing a 0 has no effect." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XCKFAIL_0" description="Transmit clock failure did not occur."/>
      <bitenum value="1" id="1" token="XCKFAIL_1" description="Transmit clock failure occurred"/>
    </bitfield>
    <bitfield id="XSYNCERR" width="1" begin="1" end="1" resetval="0" description="Unexpected transmit frame-sync flag. XSYNCERR is set when a new transmit frame sync (AFSX) occurs before it is expected. Causes a transmit interrupt (XINT) if this bit and XSYNCERR inMCASP_EVTCTLX are set. This bit is cleared by writing a 1 to iit. Writing a 0 has no effect." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XSYNCERR_0" description="Unexpected transmit frame sync did not occur"/>
      <bitenum value="1" id="1" token="XSYNCERR_1" description="Unexpected transmit frame sync occurred."/>
    </bitfield>
    <bitfield id="XUNDRN" width="1" begin="0" end="0" resetval="0" description="Transmitter underrun flag. XUNDRN is set when the transmit serializer is instructed to transfer data from XBUF to XRSR, but XBUF has not yet been serviced with new data since the last transfer. Causes a transmit interrupt (XINT) if this bit and XUNDRN inMCASP_EVTCTLX are set. This bit is cleared by writing a 1 to iit. Writing a 0 has no effect." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XUNDRN_0" description="Transmitter underrun did not occur"/>
      <bitenum value="1" id="1" token="XUNDRN_1" description="Transmitter underrun occurred."/>
    </bitfield>
  </register>
  <register id="MCASP_TXTDMSLOT" acronym="MCASP_TXTDMSLOT" offset="0xC4" width="32" description="Current transmit TDM time slot register">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XSLOTCNT" width="10" begin="9" end="0" resetval="0x000" description="Current transmit time slot count. the value of this register is 0b0101111111 (0x17f) during reset and 0 after reset." range="" rwaccess="R"/>
  </register>
  <register id="MCASP_TXCLKCHK" acronym="MCASP_TXCLKCHK" offset="0xC8" width="32" description="Transmit clock check control register - configures the transmit clock failure detection circuit.">
    <bitfield id="XCNT" width="8" begin="31" end="24" resetval="0x00" description="Transmit clock count value (from previous measurement). The clock circuit continually counts the number of system clocks for every 32 transmit high-frequency master clock (abe_mcasp_ahclkx) signals, and stores the count in XCNT until the next measurement is taken" range="" rwaccess="R"/>
    <bitfield id="XMAX" width="8" begin="23" end="16" resetval="0x00" description="0x0 to 0xFF: Transmit clock maximum boundary. This 8-bit unsigned value sets the maximum allowed boundary for the clock check counter after 32 transmit high-frequency master clock (abe_mcasp_ahclkx) signals have been received. If the current counter value is greater than XMAX after counting 32 AHCLKX signals, XCKFAIL in XSTAT is set. The comparison is performed using unsigned arithmetic." range="" rwaccess="RW"/>
    <bitfield id="XMIN" width="8" begin="15" end="8" resetval="0x00" description="0x0 to 0xFF: Transmit clock minimum boundary. This 8-bit unsigned value sets the minimum allowed boundary for the clock check counter after 32 transmit high-frequency master clock (abe_mcasp_ahclkx) signals have been received. If XCNT is less than XMIN after counting 32 AHCLKX signals, XCKFAIL in XSTAT is set. The comparison is performed using unsigned arithmetic." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XPS" width="4" begin="3" end="0" resetval="0x0" description="Transmit clock check prescaler value 0x0: McASP system clock divided by 1 0x1: McASP system clock divided by 2 0x2: McASP system clock divided by 4 0x3: McASP system clock divided by 8 0x4: McASP system clock divided by 16 0x5: McASP system clock divided by 32 0x6: McASP system clock divided by 64 0x7: McASP system clock divided by 128 0x8: McASP system clock divided by 256 0x9 to 0xF: Reserved" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_TXEVTCTL" acronym="MCASP_TXEVTCTL" offset="0xCC" width="32" description="Transmitter DMA event control register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0x0000 0000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XDATDMA" width="1" begin="0" end="0" resetval="0" description="Transmit data DMA request enable bit. When writing to this field, always write the default value of 0." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XDATDMA_0" description="The transmit data DMA request is enabled."/>
      <bitenum value="1" id="1" token="XDATDMA_1" description="The transmit data DMA request is disabled."/>
    </bitfield>
  </register>
  <register id="MCASP_DITCSRAi_0" acronym="MCASP_DITCSRAi_0" offset="0x100" width="32" description="DIT left channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITCSRAi_1" acronym="MCASP_DITCSRAi_1" offset="0x104" width="32" description="DIT left channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITCSRAi_2" acronym="MCASP_DITCSRAi_2" offset="0x108" width="32" description="DIT left channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITCSRAi_3" acronym="MCASP_DITCSRAi_3" offset="0x10C" width="32" description="DIT left channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITCSRAi_4" acronym="MCASP_DITCSRAi_4" offset="0x110" width="32" description="DIT left channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITCSRAi_5" acronym="MCASP_DITCSRAi_5" offset="0x114" width="32" description="DIT left channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITCSRBi_0" acronym="MCASP_DITCSRBi_0" offset="0x118" width="32" description="DIT right channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITCSRBi_1" acronym="MCASP_DITCSRBi_1" offset="0x11C" width="32" description="DIT right channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITCSRBi_2" acronym="MCASP_DITCSRBi_2" offset="0x120" width="32" description="DIT right channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITCSRBi_3" acronym="MCASP_DITCSRBi_3" offset="0x124" width="32" description="DIT right channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITCSRBi_4" acronym="MCASP_DITCSRBi_4" offset="0x128" width="32" description="DIT right channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITCSRBi_5" acronym="MCASP_DITCSRBi_5" offset="0x12C" width="32" description="DIT right channel status register - All six 32-bit registers (I = 0 to 5) can store 192 bits of channel status data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register file before a different set of data needs to be sent.">
    <bitfield id="DITCSRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) channel status" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRAi_0" acronym="MCASP_DITUDRAi_0" offset="0x130" width="32" description="DIT left channel user data register - provides the user data of each left channel (even TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRAi_1" acronym="MCASP_DITUDRAi_1" offset="0x134" width="32" description="DIT left channel user data register - provides the user data of each left channel (even TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRAi_2" acronym="MCASP_DITUDRAi_2" offset="0x138" width="32" description="DIT left channel user data register - provides the user data of each left channel (even TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRAi_3" acronym="MCASP_DITUDRAi_3" offset="0x13C" width="32" description="DIT left channel user data register - provides the user data of each left channel (even TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRAi_4" acronym="MCASP_DITUDRAi_4" offset="0x140" width="32" description="DIT left channel user data register - provides the user data of each left channel (even TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRAi_5" acronym="MCASP_DITUDRAi_5" offset="0x144" width="32" description="DIT left channel user data register - provides the user data of each left channel (even TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRAi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Left (even TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRBi_0" acronym="MCASP_DITUDRBi_0" offset="0x148" width="32" description="DIT right user data register - provides the user data of each right channel (odd TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRBi_1" acronym="MCASP_DITUDRBi_1" offset="0x14C" width="32" description="DIT right user data register - provides the user data of each right channel (odd TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRBi_2" acronym="MCASP_DITUDRBi_2" offset="0x150" width="32" description="DIT right user data register - provides the user data of each right channel (odd TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRBi_3" acronym="MCASP_DITUDRBi_3" offset="0x154" width="32" description="DIT right user data register - provides the user data of each right channel (odd TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRBi_4" acronym="MCASP_DITUDRBi_4" offset="0x158" width="32" description="DIT right user data register - provides the user data of each right channel (odd TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_DITUDRBi_5" acronym="MCASP_DITUDRBi_5" offset="0x15C" width="32" description="DIT right user data register - provides the user data of each right channel (odd TDM time slot). All six 32-bit registers (I = 0 to 5) can store 192 bits of user data for a complete block of transmission. The DIT reuses the same data for the next block. Make sure to update the register before a different set of data needs to be sent.">
    <bitfield id="DITUDRBi" width="32" begin="31" end="0" resetval="0x0000 0000" description="Right (odd TDM slot ) user data" range="" rwaccess="RW"/>
  </register>
  <register id="MCASP_XRSRCTL0" acronym="MCASP_XRSRCTL0" offset="0x180" width="32" description="Serializer control register">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0000000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="XRDY" width="1" begin="4" end="4" resetval="0" description="Transmit buffer ready bit" range="" rwaccess="R">
      <bitenum value="0" id="0" token="XRDY_0_r" description="The transmit buffer () contains data."/>
      <bitenum value="1" id="1" token="XRDY_1_r" description="The transmit buffer () is empty and needs to be written before the start of the next time slot or a transmit underrun occurs."/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="3" end="2" resetval="0x0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="SRMOD" width="2" begin="1" end="0" resetval="0x0" description="Serializer mode bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SRMOD_0" description="The serializer is inactive"/>
      <bitenum value="1" id="1" token="SRMOD_1" description="The serializer is operating in transmit mode. 0x2: Reserved 0x3: Reserved"/>
    </bitfield>
  </register>
  <register id="MCASP_TXBUF0" acronym="MCASP_TXBUF0" offset="0x200" width="32" description="Transmit buffer - The transmit buffer for the serializer holds data from the transmit format unit.">
    <bitfield id="XBUF0" width="32" begin="31" end="0" resetval="0x0000 0000" description="Transmit buffer" range="" rwaccess="RW"/>
  </register>
</module>
