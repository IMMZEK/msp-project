<module name="SPINLOCK" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="SPINLOCK_REVISION" acronym="SPINLOCK_REVISION" offset="0x0" width="32" description="This is the standard TI peripheral ID register that exists at address 0 in the peripheral space">
    <bitfield id="SCHEME" width="2" begin="31" end="30" resetval="0x1" description="Used to distinguish which ID numbering scheme is used." range="" rwaccess="R"/>
    <bitfield id="BU" width="2" begin="29" end="28" resetval="0x2" description="BU identifier" range="" rwaccess="R"/>
    <bitfield id="FUNC" width="12" begin="27" end="16" resetval="0x6FA" description="Module family." range="" rwaccess="R"/>
    <bitfield id="R_RTL" width="5" begin="15" end="11" resetval="0xA" description="RTL version." range="" rwaccess="R"/>
    <bitfield id="X_MAJOR" width="3" begin="10" end="8" resetval="0x1" description="Major revision." range="" rwaccess="R"/>
    <bitfield id="CUSTOM" width="2" begin="7" end="6" resetval="0x0" description="Special version number" range="" rwaccess="R"/>
    <bitfield id="Y_MINOR" width="6" begin="5" end="0" resetval="0x0" description="Minor revision." range="" rwaccess="R"/>
  </register>
  <register id="SPINLOCK_SYSCONFIG" acronym="SPINLOCK_SYSCONFIG" offset="0x10" width="32" description="Provides the SOFTRESET register for backwards compatibility with OMAP Spinlock">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0x0" description="Module Software Reset The bit is automatically reset by the hardware. During reads, it always returns 0 It has the same effect as the hardware reset Writing a 0 has no effect. Writing a 1 will start a soft reset sequence and free all of the locks" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0xX" description="" range="" rwaccess="RW"/>
  </register>
  <register id="SPINLOCK_SYSTATUS" acronym="SPINLOCK_SYSTATUS" offset="0x14" width="32" description="Provides information about the Spinlock module">
    <bitfield id="NUMLOCKS" width="8" begin="31" end="24" resetval="0x8" description="Module configuration parameter n, the total number of spinlocks divided by 32. e.g. For 256 spin locks, this will return the number 0x08" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="16" begin="23" end="8" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="IU7" width="1" begin="7" end="7" resetval="0x0" description="In-Use flag 7 covering lock registers 224 - 255. If no lock registers are implemented in this range, then this flag always reads as 0 Read 0 : All lock registers 224 - 255 are in the Not Taken state Read 1 : At least one of the lock registers 224 - 255 are in the Taken state" range="" rwaccess="R"/>
    <bitfield id="IU6" width="1" begin="6" end="6" resetval="0x0" description="In-Use flag 6 covering lock registers 192 - 223. If no lock registers are implemented in this range, then this flag always reads as 0 Read 0 : All lock registers 192 - 223 are in the Not Taken state Read 1 : At least one of the lock registers 192 - 223 are in the Taken state" range="" rwaccess="R"/>
    <bitfield id="IU5" width="1" begin="5" end="5" resetval="0x0" description="In-Use flag 5 covering lock registers 160 - 191. If no lock registers are implemented in this range, then this flag always reads as 0 Read 0 : All lock registers 160 - 191 are in the Not Taken state Read 1 : At least one of the lock registers 160 - 191 are in the Taken state" range="" rwaccess="R"/>
    <bitfield id="IU4" width="1" begin="4" end="4" resetval="0x0" description="In-Use flag 4 covering lock registers 128 - 159. If no lock registers are implemented in this range, then this flag always reads as 0 Read 0 : All lock registers 128 - 159 are in the Not Taken state Read 1 : At least one of the lock registers 128 - 159 are in the Taken state" range="" rwaccess="R"/>
    <bitfield id="IU3" width="1" begin="3" end="3" resetval="0x0" description="In-Use flag 3 covering lock registers 96 - 127. If no lock registers are implemented in this range, then this flag always reads as 0 Read 0 : All lock registers 96 - 127 are in the Not Taken state Read 1 : At least one of the lock registers 96 - 127 are in the Taken state" range="" rwaccess="R"/>
    <bitfield id="IU2" width="1" begin="2" end="2" resetval="0x0" description="In-Use flag 2 covering lock registers 64 - 95. If no lock registers are implemented in this range, then this flag always reads as 0 Read 0 : All lock registers 64 - 95 are in the Not Taken state Read 1 : At least one of the lock registers 64 - 95 are in the Taken state" range="" rwaccess="R"/>
    <bitfield id="IU1" width="1" begin="1" end="1" resetval="0x0" description="In-Use flag 1 covering lock registers 32 - 63. If no lock registers are implemented in this range, then this flag always reads as 0 Read 0 : All lock registers 32 - 63 are in the Not Taken state Read 1 : At least one of the lock registers 32 - 63 are in the Taken state" range="" rwaccess="R"/>
    <bitfield id="IU0" width="1" begin="0" end="0" resetval="0x0" description="In-Use flag 0 covering lock registers 0 - 31. If no lock registers are implemented in this range, then this flag always reads as 0 Read 0 : All lock registers 0 - 31 are in the Not Taken state Read 1 : At least one of the lock registers 0 - 31 are in the Taken state" range="" rwaccess="R"/>
  </register>
  <register id="SPINLOCK_LOCK_REG_y" acronym="SPINLOCK_LOCK_REG_y" offset="0x800" width="32" description="The LOCK_REG_y register is read and written to perform lock and unlock operations on lock 'y' Offset = 30E00800h + (y * 4h); where y = 0h to FFh">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="TAKEN" width="1" begin="0" end="0" resetval="0x0" description="Lock Status Read 0 : Lock was previously free. The reader now has been granted the lock. Read 1 : Lock was previously taken. The reader has not been granted the lock and must retry. Write 0 : Free the lock by setting TAKEN to zero. Write 1 : No effect" range="" rwaccess="RW"/>
  </register>
</module>
