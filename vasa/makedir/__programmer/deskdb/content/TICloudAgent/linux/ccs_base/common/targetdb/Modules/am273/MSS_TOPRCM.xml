

<module description="" id="MSS_TOPRCM">
  
  
  <register acronym="PID" description=" PID register " id="PID" offset="0x0" width="32">
    
  <bitfield begin="31" description="" end="16" id="" rwaccess="R" width="16"></bitfield>
    
  <bitfield begin="15" description="" end="11" id="" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="10" description="" end="8" id="" rwaccess="R" width="3"></bitfield>
    
  <bitfield begin="7" description="" end="6" id="" rwaccess="R" width="2"></bitfield>
    
  <bitfield begin="5" description="" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="HW_REG0" description="" id="HW_REG0" offset="0x4" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser. Reserved for HW RnD" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG1" description="" id="HW_REG1" offset="0x8" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser. Reserved for HW RnD" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="PREVIOUS_NAME" description="" id="PREVIOUS_NAME" offset="0xC" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser. Reserved for HW RnD" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_REG3" description="" id="HW_REG3" offset="0x10" width="32">
    
  <bitfield begin="31" description="HW Reserved regiser. Reserved for HW RnD" end="0" id="hwreg" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HSI_CLK_SRC_SEL" description="" id="HSI_CLK_SRC_SEL" offset="0x14" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for HSI. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to AM273x clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="CSIRX_CLK_SRC_SEL" description="" id="CSIRX_CLK_SRC_SEL" offset="0x18" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for CSI Rx  Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to AM273x clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MCUCLKOUT_CLK_SRC_SEL" description="" id="MCUCLKOUT_CLK_SRC_SEL" offset="0x1C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for MCU Clkout Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to AM273x clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="PMICCLKOUT_CLK_SRC_SEL" description="" id="PMICCLKOUT_CLK_SRC_SEL" offset="0x20" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for PMIC Clkout Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to AM273x clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="OBSCLKOUT_CLK_SRC_SEL" description="" id="OBSCLKOUT_CLK_SRC_SEL" offset="0x24" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for OBS Clkout Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to AM273x clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="TRCCLKOUT_CLK_SRC_SEL" description="" id="TRCCLKOUT_CLK_SRC_SEL" offset="0x28" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for TRC Clkout Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to AM273x clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSI_DIV_VAL" description="" id="HSI_DIV_VAL" offset="0x40" width="32">
    
  <bitfield begin="11" description="Divider value for HSI selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="CSIRX_DIV_VAL" description="" id="CSIRX_DIV_VAL" offset="0x44" width="32">
    
  <bitfield begin="11" description="Divider value for CSI Rx selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MCUCLKOUT_DIV_VAL" description="" id="MCUCLKOUT_DIV_VAL" offset="0x48" width="32">
    
  <bitfield begin="11" description="Divider value for MCU Clkout selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="PMICCLKOUT_DIV_VAL" description="" id="PMICCLKOUT_DIV_VAL" offset="0x4C" width="32">
    
  <bitfield begin="11" description="Divider value for PMIC Clkout selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="OBSCLKOUT_DIV_VAL" description="" id="OBSCLKOUT_DIV_VAL" offset="0x50" width="32">
    
  <bitfield begin="11" description="Divider value for OBS Clkout selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="TRCCLKOUT_DIV_VAL" description="" id="TRCCLKOUT_DIV_VAL" offset="0x54" width="32">
    
  <bitfield begin="11" description="Divider value for TRC Clkout selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="HSI_CLK_GATE" description="" id="HSI_CLK_GATE" offset="0x80" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  HSI. Data should be loaded as multibit.   Write 3'b000 : Clock is ungated (multibit 000) Write 3'b111 : Clock is gated (multibit 111)" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="CSIRX_CLK_GATE" description="" id="CSIRX_CLK_GATE" offset="0x84" width="32">
    
  <bitfield begin="2" description="Clock gatring config for CSI Rx. Data should be loaded as multibit.   Write 3'b000 : Clock is ungated (multibit 000) Write 3'b111 : Clock is gated (multibit 111)" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="MCUCLKOUT_CLK_GATE" description="" id="MCUCLKOUT_CLK_GATE" offset="0x88" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  MCU Clkout. Data should be loaded as multibit.   Write 3'b000 : Clock is ungated (multibit 000) Write 3'b111 : Clock is gated (multibit 111)" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="PMICCLKOUT_CLK_GATE" description="" id="PMICCLKOUT_CLK_GATE" offset="0x8C" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  PMIC Clkout Data should be loaded as multibit.   Write 3'b000 : Clock is ungated (multibit 000) Write 3'b111 : Clock is gated (multibit 111)" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="OBSCLKOUT_CLK_GATE" description="" id="OBSCLKOUT_CLK_GATE" offset="0x90" width="32">
    
  <bitfield begin="2" description="Clock gatring config for OBS Clkout Data should be loaded as multibit.   Write 3'b000 : Clock is ungated (multibit 000) Write 3'b111 : Clock is gated (multibit 111)" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="TRCCLKOUT_CLK_GATE" description="" id="TRCCLKOUT_CLK_GATE" offset="0x94" width="32">
    
  <bitfield begin="2" description="Clock gatring config for TRC Clkout Data should be loaded as multibit.   Write 3'b000 : Clock is ungated (multibit 000) Write 3'b111 : Clock is gated (multibit 111)" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="DSS_CLK_GATE" description="" id="DSS_CLK_GATE" offset="0x98" width="32">
    
  <bitfield begin="2" description="Clock gatring config for  DSP Subsystem System Clock Data should be loaded as multibit.   Write 3'b000 : Clock is ungated (multibit 000) Write 3'b111 : Clock is gated (multibit 111)" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="HSI_CLK_STATUS" description="" id="HSI_CLK_STATUS" offset="0xC0" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for CortexR5 Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for CortexR5 Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="CSIRX_CLK_STATUS" description="" id="CSIRX_CLK_STATUS" offset="0xC4" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for HSI Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for HSI Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MCUCLKOUT_CLK_STATUS" description="" id="MCUCLKOUT_CLK_STATUS" offset="0xC8" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for CSI Rx Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for CSI Rx Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="PMICCLKOUT_CLK_STATUS" description="" id="PMICCLKOUT_CLK_STATUS" offset="0xCC" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for MCU Clkout Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for MCU Clkout Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="OBSCLKOUT_CLK_STATUS" description="" id="OBSCLKOUT_CLK_STATUS" offset="0xD0" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for PMIC Clkout Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for PMIC Clkout Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="TRCCLKOUT_CLK_STATUS" description="" id="TRCCLKOUT_CLK_STATUS" offset="0xD4" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for PMIC Clkout Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for PMIC Clkout Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="WARM_RESET_CONFIG" description="" id="WARM_RESET_CONFIG" offset="0x100" width="32">
    
  <bitfield begin="18" description="Data should be loaded as multibit.   Write 3'b000 to disable MSS Watchdog control on Warm reset  Write 3'b111 enable MSS Watchdog to control Warm reset" end="16" id="wdog_rst_en" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="10" description="Data should be loaded as multibit.   Write 3'b000 to assert warm reset from SW Write 3'b111 to deassert warm reset from SW if this is the only source of warm reset" end="8" id="sw_rst" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Bypass the Warm reset from Pad Input Data should be loaded as multibit.   Write 3'b000 : Reset is not asserted by SW (multibit 000) Write 3'b111 : Reset is asserted by SW (multibit 111)" end="0" id="pad_bypass" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="SYS_RST_CAUSE" description="" id="SYS_RST_CAUSE" offset="0x104" width="32">
    
  <bitfield begin="4" description="System Reset Cause register 5'b01001 - POR reset 5'b01010 - Warm reset due to MSS_WDT 5'b01100 - Warm reset due to TOP_RMC:WARM_RESET_CONFIG 5'b01000 - External Pad reset 5'b11000 - Warm reset due to HSM_WDT" end="0" id="cause" rwaccess="R" width="5"></bitfield>
  </register>
  
  
  <register acronym="SYS_RST_CAUSE_CLR" description="" id="SYS_RST_CAUSE_CLR" offset="0x108" width="32">
    
  <bitfield begin="0" description="Write pulse bit field:  System Reset Cause register Clear" end="0" id="clear" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="DSS_RST_CTRL" description="" id="DSS_RST_CTRL" offset="0x10C" width="32">
    
  <bitfield begin="2" description="Reset control for DSP Subsystem Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW (multibit 000) Write 3'b111 : Reset is asserted by SW (multibit 111)" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="RS232_BITINTERVAL" description="" id="RS232_BITINTERVAL" offset="0x204" width="32">
    
  <bitfield begin="31" description="RS232 Bit Interval. 10 bit clock interval is selceted based on the value of MSS_CR5_CLK_SRC_SEL [9:0] used as RS232 Bit inteval when MSS_CR5_CLK_SRC_SEL = 0x0 [19:10]  used as RS232 Bit inteval when MSS_CR5_CLK_SRC_SEL = 0x1 [29:20]  used as RS232 Bit inteval when MSS_CR5_CLK_SRC_SEL = 0x2" end="0" id="bitinterval" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="LVDS_PAD_CTRL0" description="" id="LVDS_PAD_CTRL0" offset="0x208" width="32">
    
  <bitfield begin="31" description="LVDS Pad Control 0 Register. Below is the mapping for each bit. Refer the LVDS IO Spec for more details Bit 0 : Power Down  Control for  LVDS CLK Lane Bit 1: LOPWRA  Control for i LVDS CLK Lane Bit 2: LOPWRB Control for LVDS CLK Lane Bit 3 : LPSEL Control for LVDS CLK Lane Bit 4 : SUB_LVDS_EN Control for  LVDS CLK Lane Bit 5 : HIZ_DISABLE Control for  LVDS CLK Lane Bit 6 : EXT_RES_EN Control for  LVDS CLK Lane Bit 7 : Reserved Bit 8 : Power Down  Control for  LVDS DATA Lane 0 Bit 9: LOPWRA  Control for i LVDS DATA Lane 0 Bit 10: LOPWRB Control for LVDS DATA Lane 0 Bit 11: LPSEL Control for LVDS DATA Lane 0 Bit 12: SUB_LVDS_EN Control for  LVDS DATA Lane 0 Bit 13: HIZ_DISABLE Control for  LVDS DATA Lane 0 Bit 14: EXT_RES_EN Control for  LVDS DATA Lane 0 Bit 15: Reserved Bit 16 : Power Down  Control for  LVDS DATA Lane 1 Bit 17: LOPWRA  Control for i LVDS DATA Lane 1 Bit 18: LOPWRB Control for LVDS DATA Lane 1 Bit 18: LPSEL Control for LVDS DATA Lane 1 Bit 20: SUB_LVDS_EN Control for  LVDS DATA Lane 1 Bit 21: HIZ_DISABLE Control for  LVDS DATA Lane 1 Bit 22: EXT_RES_EN Control for  LVDS DATA Lane 1 Bit 23: Reserved Bit 24 : Power Down  Control for  LVDS DATA Lane 2 Bit 25: LOPWRA  Control for i LVDS DATA Lane 2 Bit 26: LOPWRB Control for LVDS DATA Lane 2 Bit 27: LPSEL Control for LVDS DATA Lane 2 Bit 28: SUB_LVDS_EN Control for  LVDS DATA Lane 2 Bit 29: HIZ_DISABLE Control for  LVDS DATA Lane 2 Bit 30: EXT_RES_EN Control for  LVDS DATA Lane 2 Bit 31: Reserved" end="0" id="ctrl" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="LVDS_PAD_CTRL1" description="" id="LVDS_PAD_CTRL1" offset="0x20C" width="32">
    
  <bitfield begin="31" description="LVDS Pad Control 1 Register. Below is the mapping for each bit. Refer the LVDS IO Spec for more details Bit 0 : Power Down  Control for  LVDS DATA Lane 0 Bit 1: LOPWRA  Control for i LVDS DATA Lane 0 Bit 2: LOPWRB Control for LVDS DATA Lane 0 Bit 3: LPSEL Control for LVDS DATA Lane 0 Bit 4: SUB_LVDS_EN Control for  LVDS DATA Lane 0 Bit 5: HIZ_DISABLE Control for  LVDS DATA Lane 0 Bit 6: EXT_RES_EN Control for  LVDS DATA Lane 0 Bit 7: Reserved Bit 8 : Power Down  Control for  LVDS FRME CLK Lane Bit 9 : LOPWRA  Control for i LVDS FRAME CLK Lane Bit 10: LOPWRB Control for LVDS FRAME CLK Lane Bit 11 : LPSEL Control for LVDS FRAME CLK Lane Bit 12 : SUB_LVDS_EN Control for  LVDS FRAME CLK Lane Bit 13 : HIZ_DISABLE Control for  LVDS FRAME CLK Lane Bit 14 : EXT_RES_EN Control for  LVDS FRAME CLK Lane Bit 15 -23: Reserved Bit 24 : Power Down Control for LVDS Bias cell  Bit 25 : eEfuse Set Control for LVDS Bias cell" end="0" id="ctlr" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DFT_DMLED_EXEC" description="" id="DFT_DMLED_EXEC" offset="0x210" width="32">
    
  <bitfield begin="31" description="SW mapping for DMLED Execution Bit 0 : HSM CM4 Execution  Bit 1 : HWA CM4 Execution  Bit 2 : MSS CR5 Execution" end="0" id="val" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="DFT_DMLED_STATUS" description="" id="DFT_DMLED_STATUS" offset="0x214" width="32">
    
  <bitfield begin="31" description="SW mapping for DMLED Status Bit 0 : HSM CM4 Status  Bit 1 : HWA CM4 Status  Bit 2 : MSS CR5 Status" end="0" id="val" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="LIMP_MODE_EN" description="" id="LIMP_MODE_EN" offset="0x218" width="32">
    
  <bitfield begin="10" description="Force the RCCLK on when limp mode is detected 3'b000: The RCCLK will not be forced on when limp mode is detected (multibit 000) 3'b111 : The RCCLK will be forced on when limp mode is detected  (multibit 111)" end="8" id="force_rcclk_en" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="6" description="Enable MSS_CCCA Error to generate Limp mode 3'b000: MSS_CCCA Error will not generate Limp mode (multibit 000) 3'b111 : MSS_CCCA Error will generate Limp mode (multibit 111)" end="4" id="ccca_en" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="Enable MSS_DCCA Error to generate Limp mode  3'b000: MSS_DCCA Error will not generate Limp mode (multibit 000) 3'b111 : MSS_DCCA Error will generate Limp mode (multibit 111)" end="0" id="dcca_en" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="PMICCLKOUT_DCDC_CTRL" description="" id="PMICCLKOUT_DCDC_CTRL" offset="0x21C" width="32">
    
  <bitfield begin="23" description="PMIC Clockout DCDC Maximum Frequency Threshold" end="16" id="max_freq_thr" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="15" description="PMIC Clockout DCDC Minimum Frequency Threshold" end="8" id="min_freq_thr" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="6" description="Reset control for PMIC DCDC Data should be loaded as multibit.   Write 3'b000: Reset is not asserted by SW (multibit 000) Write 3'b111 : Reset is asserted by SW (multibit 111)" end="4" id="reset_assert" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="2" description="PMIC Clockout DCDC Freq Acc Enable" end="2" id="freq_acc_mode" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="PMIC Clockout DCDC Clock Dither Enable" end="1" id="dither_en" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="PMIC Clockout DCDC Clock Enable" end="0" id="dcdc_clk_en" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PMICCLKOUT_DCDC_SLOPE" description="" id="PMICCLKOUT_DCDC_SLOPE" offset="0x220" width="32">
    
  <bitfield begin="26" description="PMIC Clockout DCDC Slope Config Value" end="0" id="slope_val" rwaccess="RW" width="27"></bitfield>
  </register>
  
  
  <register acronym="RCOSC32K_CTRL" description="" id="RCOSC32K_CTRL" offset="0x224" width="32">
    
  <bitfield begin="2" description="Stop 32KHz RCOSC.  Write 3'b111 to stop clock" end="0" id="stoposc" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_PWRCTRL" description="" id="PLL_CORE_PWRCTRL" offset="0x400" width="32">
    
  <bitfield begin="5" description="ON/OFF control of the weak power switch digital. For functional mode it should be 1" end="5" id="PONIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="ON/OFF control of the strong power switch digital. For functional mode it should be 1" end="4" id="PGOODIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Save/Restore control for Retention mode. For functional mode it should be 0" end="3" id="RET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Save/Restore control for Isolation of output pins For functional mode it should be 0" end="2" id="ISORET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Save/Restore control for Isolation of the Scanout pins. For functional mode it should be 0" end="1" id="ISOSCAN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Used to switch OFF the logic on VDDA. For functional mode it should be 0" end="0" id="OFFMODE" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_CLKCTRL" description="" id="PLL_CORE_CLKCTRL" offset="0x404" width="32">
    
  <bitfield begin="31" description="FailSafe enable to trigger re-calibration in case CycleSlip occurs between REFCLK and FBCLK." end="31" id="CYCLESLIPEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Controls Clock Spreading. SSC is not supported. Should be set to 0x0 to disable clock spreading." end="30" id="ENSSC" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Synchronously enables/disables CLKDCOLDO 0x0 : synchronously disables CLKDCOLDO 0x1 : synchronously enables CLKDCOLDO" end="29" id="CLKDCOLDOEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Trim value for the PLL" end="24" id="NWELLTRIM" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="23" description="Sets PLL to Idle mode 0x0 : When SYSRESET = 0 and TINITZ = 1 IDLE = 0 PLL will go to Active and Locked 0x1 : When SYSRESET = 0 and TINITZ = 1 IDLE = 1 PLL will go to Idle Bypass low powe" end="23" id="IDLE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="BYPASSACKZ is a special purpose input to the module. In general this input is expected to be tied to static low. For the output clocks of the module that do not have an internal bypass mux viz. CLKDCOLDO and CLKOUTLDO, a bypass mux could be implemented external to the module." end="22" id="BYPASSACKZ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Standby retention control 0x0 : prepares ADPLLLJ for relock when out of retention by removing the gating on all internal clocks. 0x1 : prepares ADPLLLJ for retention by gating all the internal clocks." end="21" id="STBYRET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="CLKOUT enable or disable 0x0 : synchronously disables CLKOUT 0x1 : synchronously enables CLKOUT" end="20" id="CLKOUTEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Synchronously enables/disables CLKOUTLDO  0x0 : synchronously disables CLKOUTLDO  0x1 : synchronously enables CLKOUTLDO" end="19" id="CLKOUTLDOEN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="Select CLKOUT source in bypass 0x0: When ADPLLLJ in bypass mode, CLKOUT = CLKINP/(N2+1) 0x1: When ADPLLLJ in bypass mode, CLKOUT = CLKINPULOW." end="18" id="ULOWCLKEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="0 Asynchronous power down for CLKDCOLDO o/p." end="17" id="CLKDCOLDOPWDNZ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="M2 divider power down mode 0x0: Asynchronous power down for M2 divider 0x1 : M2 divider is functional" end="16" id="M2PWDNZ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="When in Lossclk/Stbyret 0x0 : Limp mode 0x1 : Stopmode" end="14" id="STOPMODE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="DCO Clock (DCOCLK = CLKINP * [M/(N+1)]) frequency range selector. 0x0: Reserved 0x2: HS2 : DCOCLK range is from 500 MHz to 1000 MHz 0x3: Reserved 0x4: HS1: DCOCLK range is from 1000 MHz to 2000 MHz 0x5: Reserved" end="10" id="SELFREQDCO" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="8" description="Decides when FREQLOCK asserted 0x0: FREQLOCK asserted when DC frequency error less than 1% 0x1: FREQLOCK asserted when DC frequency error less than 2%" end="8" id="RELAXED_LOCK" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="SSC Type" end="1" id="SSCTYPE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="PLL core soft reset" end="0" id="TINTZ" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_TENABLE" description="" id="PLL_CORE_TENABLE" offset="0x408" width="32">
    
  <bitfield begin="0" description="M, N. SD and SELFREQDCO latch (active rise edge)" end="0" id="TENABLE" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_TENABLEDIV" description="" id="PLL_CORE_TENABLEDIV" offset="0x40C" width="32">
    
  <bitfield begin="0" description="M2 and N2 latch (active rise edge)" end="0" id="TENABLEDIV" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_M2NDIV" description="" id="PLL_CORE_M2NDIV" offset="0x410" width="32">
    
  <bitfield begin="22" description="Post-divider is REGM2" end="16" id="M2" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="Pre-divider is REGN+1" end="0" id="N" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_MN2DIV" description="" id="PLL_CORE_MN2DIV" offset="0x414" width="32">
    
  <bitfield begin="19" description="Bypass divider is REGN2+1" end="16" id="N2" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="Feedback Multiplier is REGM" end="0" id="M" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_FRACDIV" description="" id="PLL_CORE_FRACDIV" offset="0x418" width="32">
    
  <bitfield begin="31" description="Sigma-Delta Divider Should be set by s/w to provide optimum jitter performance. DPLL_SD_DIV = CEILING ([DPLL_MULT/(DPLL_DIV+1)] * CLKINP/ 250), where CLKINP is the input clock of the DPLL in MHz" end="24" id="REGSD" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="17" description="Fractional part of the M divider." end="0" id="FRACTIONALM" rwaccess="RW" width="18"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_BWCTRL" description="" id="PLL_CORE_BWCTRL" offset="0x41C" width="32">
    
  <bitfield begin="2" description="Change Loop Bandwidth" end="1" id="BWCONTROL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="0" description="Direction of Loop Bandwidth 0x0 : decrease BW 0x1 : increase BW" end="0" id="BW_INCR_DECRZ" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_FRACCTRL" description="" id="PLL_CORE_FRACCTRL" offset="0x420" width="32">
    
  <bitfield begin="31" description="Controls frequency spread 0x0 : enables both side frequency spread about the programmed frequency. 0x1 : enables low frequency spread only" end="31" id="DOWNSPREAD" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Exponent of the REFCLK divider to define the modulation frequency." end="28" id="ModFreqDividerExponent" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="27" description="Mantissa of the REFCLK divider to define the modulation frequency" end="21" id="ModFreqDividerMantissa" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="20" description="Integer part of Frequency Spread control" end="18" id="DeltaMStepInteger" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="17" description="The fraction part of Frequency Spread control" end="0" id="DeltaMStepFraction" rwaccess="RW" width="18"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_STATUS" description="" id="PLL_CORE_STATUS" offset="0x424" width="32">
    
  <bitfield begin="31" description="Status of the weak power-switch 0x0 : indicates the/OFF status of the weak power-switch in digital to SOC. 0x1 : ndicates the ON status of the weak power-switch in digital to SOC." end="31" id="PONOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="Status of the strong power-switch 0x0 : indicates the/OFF status of the strong power-switch in digital to SOC. 0x1 : ndicates the ON status of the strong power-switch in digital to SOC." end="30" id="PGOODOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="29" description="1 indicates ADPLLLJ internal LDO is power down. VDDLDOOUT will be un-defined in this condition" end="29" id="LDOPWDN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="28" description="Recalibration status flag. 1 ADPLLLJ requires recalibration" end="28" id="RECAL_BSTATUS3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="27" description="Recalibration status flag. 1 ADPLLLJ requires recalibration" end="27" id="RECAL_OPPIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="11" description="Status on PHASELOCK output pin" end="11" id="CLKDCOLDOACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="Status on PHASELOCK output pin" end="10" id="PHASELOCK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="9" description="Status on FREQLOCK output pin" end="9" id="FREQLOCK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Status of BYPASSACK output pin" end="8" id="BYPASSACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="Standby and retention status 0x0: indicates to SOC that all internal clocks in ADPLLLJ are active and it is starting the relock process. 0x1: indicates to SOC that all internal clocks in ADPLLLJ are gated and it is ready for retention." end="7" id="STBYRETACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Reference input loss" end="6" id="LOSSREF" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Indicates the enable/disable condition of CLKOUTEN 0x0 = CLKOUT gating completed 0x1 = CLKOUT enabling completed" end="5" id="CLKOUTENACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="ADPLL internal loop lock status" end="4" id="LOCK2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="Acknowledge for change to M2 divider. Toggles from 1-0 or 0-1 (depending on current value) once CLKOUT frequency change has completed." end="3" id="M2CHANGEACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Spread Spectrum status 0x0 : Spread-spectrum Clocking is disabled on output clocks 0x1 : Spread-spectrum Clocking is enabled on output clocks" end="2" id="SSCACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="1 indicates jitter. After PHASELOCK is asserted high, the HIGHJITTER flag is asserted high if phase error between REFCLK and FBCLK greater than 24%." end="1" id="HIGHJITTER" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Bypass status signal. 1 CLKOUT in bypass" end="0" id="BYPASS" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_HSDIVIDER" description="" id="PLL_CORE_HSDIVIDER" offset="0x428" width="32">
    
  <bitfield begin="17" description="LDO Power Down Ack" end="17" id="LDOPWDNACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="16" description="HSDIVIDER Bypass Ack" end="16" id="BYPASSACKZ" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Tenable Div" end="2" id="TENABLEDIV" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="LDO Power Down" end="1" id="LDOPWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="HSDIVIDER Bypass" end="0" id="BYPASS" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_HSDIVIDER_CLKOUT0" description="" id="PLL_CORE_HSDIVIDER_CLKOUT0" offset="0x42C" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M4 divider and hence CLKOUT0 output 0h (R/W) = CLKOUT0 divider active 1h (R/W) = CLKOUT0 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT0 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT0 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT0_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M4, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_HSDIVIDER_CLKOUT1" description="" id="PLL_CORE_HSDIVIDER_CLKOUT1" offset="0x430" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M5 divider and hence CLKOUT1 output 0h (R/W) = CLKOUT1 divider active 1h (R/W) = CLKOUT1 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT1 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT1 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT1_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M5, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_HSDIVIDER_CLKOUT2" description="" id="PLL_CORE_HSDIVIDER_CLKOUT2" offset="0x434" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M6 divider and hence CLKOUT2 output 0h (R/W) = CLKOUT2 divider active 1h (R/W) = CLKOUT2 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT2 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT2 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT2_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M6, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_HSDIVIDER_CLKOUT3" description="" id="PLL_CORE_HSDIVIDER_CLKOUT3" offset="0x438" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M7 divider and hence CLKOUT3 output 0h (R/W) = CLKOUT3 divider active 1h (R/W) = CLKOUT3 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT3 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT3 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT3_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M7, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5_CLK_SRC_SEL" description="" id="MSS_CR5_CLK_SRC_SEL" offset="0x43C" width="32">
    
  <bitfield begin="11" description="Select line for selecting source clock for MSS Coretex R5 and System bus Clock. Data should be loaded as multibit.   For example: if Clock source 0x5 should be selected then 0x555 should be configured to the register. Refer to AM273x clock spec for source clock reference" end="0" id="clksrcsel" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5_DIV_VAL" description="" id="MSS_CR5_DIV_VAL" offset="0x440" width="32">
    
  <bitfield begin="11" description="Divider value for Cortex R5 selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="SYS_CLK_DIV_VAL" description="" id="SYS_CLK_DIV_VAL" offset="0x444" width="32">
    
  <bitfield begin="11" description="Divider value for System Clock selected clock. Data should be loaded as multibit.   For example: if divider value of 0x5 should be selected then 0x555 should be configured to the register." end="0" id="clkdiv" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5_CLK_GATE" description="" id="MSS_CR5_CLK_GATE" offset="0x448" width="32">
    
  <bitfield begin="2" description="Only for debug- Functionality not guaranteed   Clock gating config for  MSS Coretex R5. Data should be loaded as multibit.   Write 3'b000 : Clock is ungated (multibit 000) Write 3'b111 : Clock is gated (multibit 111)" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="SYS_CLK_GATE" description="" id="SYS_CLK_GATE" offset="0x44C" width="32">
    
  <bitfield begin="2" description="Only for debug- Functionality not guaranteed   Clock gating config for  System Clock Data should be loaded as multibit.   Write 3'b000 : Clock is ungated (multibit 000) Write 3'b111 : Clock is gated (multibit 111)" end="0" id="gated" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="SYS_CLK_STATUS" description="" id="SYS_CLK_STATUS" offset="0x450" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for Sys Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="MSS_CR5_CLK_STATUS" description="" id="MSS_CR5_CLK_STATUS" offset="0x454" width="32">
    
  <bitfield begin="15" description="Status shows the current divider value choosen for CortexR5 Clock" end="8" id="currdivider" rwaccess="R" width="8"></bitfield>
    
  <bitfield begin="7" description="Status shows the source clock slected for CortexR5 Clock" end="0" id="clkinuse" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_RSTCTRL" description="" id="PLL_CORE_RSTCTRL" offset="0x458" width="32">
    
  <bitfield begin="2" description="SW Reset override for the PLL Write 3'b111 : Override is enabled and Reset is asserted" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="PLL_CORE_HSDIVIDER_RSTCTRL" description="" id="PLL_CORE_HSDIVIDER_RSTCTRL" offset="0x45C" width="32">
    
  <bitfield begin="2" description="SW Reset override for the HSDIVIDER Write 3'b111 : Override is enabled and Reset is asserted" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_PWRCTRL" description="" id="PLL_DSP_PWRCTRL" offset="0x800" width="32">
    
  <bitfield begin="5" description="ON/OFF control of the weak power switch digital. For functional mode it should be 1" end="5" id="PONIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="ON/OFF control of the strong power switch digital. For functional mode it should be 1" end="4" id="PGOODIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Save/Restore control for Retention mode. For functional mode it should be 0" end="3" id="RET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Save/Restore control for Isolation of output pins For functional mode it should be 0" end="2" id="ISORET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Save/Restore control for Isolation of the Scanout pins. For functional mode it should be 0" end="1" id="ISOSCAN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Used to switch OFF the logic on VDDA. For functional mode it should be 0" end="0" id="OFFMODE" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_CLKCTRL" description="" id="PLL_DSP_CLKCTRL" offset="0x804" width="32">
    
  <bitfield begin="31" description="FailSafe enable to trigger re-calibration in case CycleSlip occurs between REFCLK and FBCLK." end="31" id="CYCLESLIPEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Controls Clock Spreading. SSC is not supported. Should be set to 0x0 to disable clock spreading." end="30" id="ENSSC" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Synchronously enables/disables CLKDCOLDO 0x0 : synchronously disables CLKDCOLDO 0x1 : synchronously enables CLKDCOLDO" end="29" id="CLKDCOLDOEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Trim value for the PLL" end="24" id="NWELLTRIM" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="23" description="Sets PLL to Idle mode 0x0 : When SYSRESET = 0 and TINITZ = 1 IDLE = 0 PLL will go to Active and Locked 0x1 : When SYSRESET = 0 and TINITZ = 1 IDLE = 1 PLL will go to Idle Bypass low powe" end="23" id="IDLE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="BYPASSACKZ is a special purpose input to the module. In general this input is expected to be tied to static low. For the output clocks of the module that do not have an internal bypass mux viz. CLKDCOLDO and CLKOUTLDO, a bypass mux could be implemented external to the module." end="22" id="BYPASSACKZ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Standby retention control 0x0 : prepares ADPLLLJ for relock when out of retention by removing the gating on all internal clocks. 0x1 : prepares ADPLLLJ for retention by gating all the internal clocks." end="21" id="STBYRET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="CLKOUT enable or disable 0x0 : synchronously disables CLKOUT 0x1 : synchronously enables CLKOUT" end="20" id="CLKOUTEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Synchronously enables/disables CLKOUTLDO  0x0 : synchronously disables CLKOUTLDO  0x1 : synchronously enables CLKOUTLDO" end="19" id="CLKOUTLDOEN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="Select CLKOUT source in bypass 0x0: When ADPLLLJ in bypass mode, CLKOUT = CLKINP/(N2+1) 0x1: When ADPLLLJ in bypass mode, CLKOUT = CLKINPULOW." end="18" id="ULOWCLKEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="0 Asynchronous power down for CLKDCOLDO o/p." end="17" id="CLKDCOLDOPWDNZ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="M2 divider power down mode 0x0: Asynchronous power down for M2 divider 0x1 : M2 divider is functional" end="16" id="M2PWDNZ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="When in Lossclk/Stbyret 0x0 : Limp mode 0x1 : Stopmode" end="14" id="STOPMODE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="DCO Clock (DCOCLK = CLKINP * [M/(N+1)]) frequency range selector. 0x0: Reserved 0x2: HS2 : DCOCLK range is from 500 MHz to 1000 MHz 0x3: Reserved 0x4: HS1: DCOCLK range is from 1000 MHz to 2000 MHz 0x5: Reserved" end="10" id="SELFREQDCO" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="8" description="Decides when FREQLOCK asserted 0x0: FREQLOCK asserted when DC frequency error less than 1% 0x1: FREQLOCK asserted when DC frequency error less than 2%" end="8" id="RELAXED_LOCK" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="SSC Type" end="1" id="SSCTYPE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="PLL core soft reset" end="0" id="TINTZ" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_TENABLE" description="" id="PLL_DSP_TENABLE" offset="0x808" width="32">
    
  <bitfield begin="0" description="M, N. SD and SELFREQDCO latch (active rise edge)" end="0" id="TENABLE" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_TENABLEDIV" description="" id="PLL_DSP_TENABLEDIV" offset="0x80C" width="32">
    
  <bitfield begin="0" description="M2 and N2 latch (active rise edge)" end="0" id="TENABLEDIV" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_M2NDIV" description="" id="PLL_DSP_M2NDIV" offset="0x810" width="32">
    
  <bitfield begin="22" description="Post-divider is REGM2" end="16" id="M2" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="Pre-divider is REGN+1" end="0" id="N" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_MN2DIV" description="" id="PLL_DSP_MN2DIV" offset="0x814" width="32">
    
  <bitfield begin="19" description="Bypass divider is REGN2+1" end="16" id="N2" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="Feedback Multiplier is REGM" end="0" id="M" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_FRACDIV" description="" id="PLL_DSP_FRACDIV" offset="0x818" width="32">
    
  <bitfield begin="31" description="Sigma-Delta Divider Should be set by s/w to provide optimum jitter performance. DPLL_SD_DIV = CEILING ([DPLL_MULT/(DPLL_DIV+1)] * CLKINP/ 250), where CLKINP is the input clock of the DPLL in MHz" end="24" id="REGSD" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="17" description="Fractional part of the M divider." end="0" id="FRACTIONALM" rwaccess="RW" width="18"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_BWCTRL" description="" id="PLL_DSP_BWCTRL" offset="0x81C" width="32">
    
  <bitfield begin="2" description="Change Loop Bandwidth" end="1" id="BWCONTROL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="0" description="Direction of Loop Bandwidth 0x0 : decrease BW 0x1 : increase BW" end="0" id="BW_INCR_DECRZ" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_FRACCTRL" description="" id="PLL_DSP_FRACCTRL" offset="0x820" width="32">
    
  <bitfield begin="31" description="Controls frequency spread 0x0 : enables both side frequency spread about the programmed frequency. 0x1 : enables low frequency spread only" end="31" id="DOWNSPREAD" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Exponent of the REFCLK divider to define the modulation frequency." end="28" id="ModFreqDividerExponent" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="27" description="Mantissa of the REFCLK divider to define the modulation frequency" end="21" id="ModFreqDividerMantissa" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="20" description="Integer part of Frequency Spread control" end="18" id="DeltaMStepInteger" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="17" description="The fraction part of Frequency Spread control" end="0" id="DeltaMStepFraction" rwaccess="RW" width="18"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_STATUS" description="" id="PLL_DSP_STATUS" offset="0x824" width="32">
    
  <bitfield begin="31" description="Status of the weak power-switch 0x0 : indicates the/OFF status of the weak power-switch in digital to SOC. 0x1 : ndicates the ON status of the weak power-switch in digital to SOC." end="31" id="PONOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="Status of the strong power-switch 0x0 : indicates the/OFF status of the strong power-switch in digital to SOC. 0x1 : ndicates the ON status of the strong power-switch in digital to SOC." end="30" id="PGOODOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="29" description="1 indicates ADPLLLJ internal LDO is power down. VDDLDOOUT will be un-defined in this condition" end="29" id="LDOPWDN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="28" description="Recalibration status flag. 1 ADPLLLJ requires recalibration" end="28" id="RECAL_BSTATUS3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="27" description="Recalibration status flag. 1 ADPLLLJ requires recalibration" end="27" id="RECAL_OPPIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="11" description="Status on PHASELOCK output pin" end="11" id="CLKDCOLDOACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="Status on PHASELOCK output pin" end="10" id="PHASELOCK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="9" description="Status on FREQLOCK output pin" end="9" id="FREQLOCK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Status of BYPASSACK output pin" end="8" id="BYPASSACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="Standby and retention status 0x0: indicates to SOC that all internal clocks in ADPLLLJ are active and it is starting the relock process. 0x1: indicates to SOC that all internal clocks in ADPLLLJ are gated and it is ready for retention." end="7" id="STBYRETACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Reference input loss" end="6" id="LOSSREF" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Indicates the enable/disable condition of CLKOUTEN 0x0 = CLKOUT gating completed 0x1 = CLKOUT enabling completed" end="5" id="CLKOUTENACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="ADPLL internal loop lock status" end="4" id="LOCK2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="Acknowledge for change to M2 divider. Toggles from 1-0 or 0-1 (depending on current value) once CLKOUT frequency change has completed." end="3" id="M2CHANGEACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Spread Spectrum status 0x0 : Spread-spectrum Clocking is disabled on output clocks 0x1 : Spread-spectrum Clocking is enabled on output clocks" end="2" id="SSCACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="1 indicates jitter. After PHASELOCK is asserted high, the HIGHJITTER flag is asserted high if phase error between REFCLK and FBCLK greater than 24%." end="1" id="HIGHJITTER" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Bypass status signal. 1 CLKOUT in bypass" end="0" id="BYPASS" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_HSDIVIDER" description="" id="PLL_DSP_HSDIVIDER" offset="0x828" width="32">
    
  <bitfield begin="17" description="LDO Power Down Ack" end="17" id="LDOPWDNACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="16" description="HSDIVIDER Bypass Ack" end="16" id="BYPASSACKZ" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Tenable Div" end="2" id="TENABLEDIV" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="LDO Power Down" end="1" id="LDOPWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="HSDIVIDER Bypass" end="0" id="BYPASS" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_HSDIVIDER_CLKOUT0" description="" id="PLL_DSP_HSDIVIDER_CLKOUT0" offset="0x82C" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M4 divider and hence CLKOUT0 output 0h (R/W) = CLKOUT0 divider active 1h (R/W) = CLKOUT0 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT0 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT0 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT0_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M4, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_HSDIVIDER_CLKOUT1" description="" id="PLL_DSP_HSDIVIDER_CLKOUT1" offset="0x830" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M5 divider and hence CLKOUT1 output 0h (R/W) = CLKOUT1 divider active 1h (R/W) = CLKOUT1 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT1 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT1 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT1_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M5, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_HSDIVIDER_CLKOUT2" description="" id="PLL_DSP_HSDIVIDER_CLKOUT2" offset="0x834" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M6 divider and hence CLKOUT2 output 0h (R/W) = CLKOUT2 divider active 1h (R/W) = CLKOUT2 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT2 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT2 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT2_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M6, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_HSDIVIDER_CLKOUT3" description="" id="PLL_DSP_HSDIVIDER_CLKOUT3" offset="0x838" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M7 divider and hence CLKOUT3 output 0h (R/W) = CLKOUT3 divider active 1h (R/W) = CLKOUT3 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT3 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT3 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT3_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M7, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_PWRCTRL" description="" id="PLL_PER_PWRCTRL" offset="0x83C" width="32">
    
  <bitfield begin="5" description="ON/OFF control of the weak power switch digital. For functional mode it should be 1" end="5" id="PONIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="ON/OFF control of the strong power switch digital. For functional mode it should be 1" end="4" id="PGOODIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Save/Restore control for Retention mode. For functional mode it should be 0" end="3" id="RET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Save/Restore control for Isolation of output pins For functional mode it should be 0" end="2" id="ISORET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Save/Restore control for Isolation of the Scanout pins. For functional mode it should be 0" end="1" id="ISOSCAN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Used to switch OFF the logic on VDDA. For functional mode it should be 0" end="0" id="OFFMODE" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_CLKCTRL" description="" id="PLL_PER_CLKCTRL" offset="0x840" width="32">
    
  <bitfield begin="31" description="FailSafe enable to trigger re-calibration in case CycleSlip occurs between REFCLK and FBCLK." end="31" id="CYCLESLIPEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Controls Clock Spreading. SSC is not supported. Should be set to 0x0 to disable clock spreading." end="30" id="ENSSC" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Synchronously enables/disables CLKDCOLDO 0x0 : synchronously disables CLKDCOLDO 0x1 : synchronously enables CLKDCOLDO" end="29" id="CLKDCOLDOEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Trim value for the PLL" end="24" id="NWELLTRIM" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="23" description="Sets PLL to Idle mode 0x0 : When SYSRESET = 0 and TINITZ = 1 IDLE = 0 PLL will go to Active and Locked 0x1 : When SYSRESET = 0 and TINITZ = 1 IDLE = 1 PLL will go to Idle Bypass low powe" end="23" id="IDLE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="BYPASSACKZ is a special purpose input to the module. In general this input is expected to be tied to static low. For the output clocks of the module that do not have an internal bypass mux viz. CLKDCOLDO and CLKOUTLDO, a bypass mux could be implemented external to the module." end="22" id="BYPASSACKZ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Standby retention control 0x0 : prepares ADPLLLJ for relock when out of retention by removing the gating on all internal clocks. 0x1 : prepares ADPLLLJ for retention by gating all the internal clocks." end="21" id="STBYRET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="CLKOUT enable or disable 0x0 : synchronously disables CLKOUT 0x1 : synchronously enables CLKOUT" end="20" id="CLKOUTEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Synchronously enables/disables CLKOUTLDO  0x0 : synchronously disables CLKOUTLDO  0x1 : synchronously enables CLKOUTLDO" end="19" id="CLKOUTLDOEN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="18" description="Select CLKOUT source in bypass 0x0: When ADPLLLJ in bypass mode, CLKOUT = CLKINP/(N2+1) 0x1: When ADPLLLJ in bypass mode, CLKOUT = CLKINPULOW." end="18" id="ULOWCLKEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="0 Asynchronous power down for CLKDCOLDO o/p." end="17" id="CLKDCOLDOPWDNZ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="M2 divider power down mode 0x0: Asynchronous power down for M2 divider 0x1 : M2 divider is functional" end="16" id="M2PWDNZ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="When in Lossclk/Stbyret 0x0 : Limp mode 0x1 : Stopmode" end="14" id="STOPMODE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="DCO Clock (DCOCLK = CLKINP * [M/(N+1)]) frequency range selector. 0x0: Reserved 0x2: HS2 : DCOCLK range is from 500 MHz to 1000 MHz 0x3: Reserved 0x4: HS1: DCOCLK range is from 1000 MHz to 2000 MHz 0x5: Reserved" end="10" id="SELFREQDCO" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="8" description="Decides when FREQLOCK asserted 0x0: FREQLOCK asserted when DC frequency error less than 1% 0x1: FREQLOCK asserted when DC frequency error less than 2%" end="8" id="RELAXED_LOCK" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="SSC Type" end="1" id="SSCTYPE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="PLL core soft reset" end="0" id="TINTZ" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_TENABLE" description="" id="PLL_PER_TENABLE" offset="0x844" width="32">
    
  <bitfield begin="0" description="M, N. SD and SELFREQDCO latch (active rise edge)" end="0" id="TENABLE" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_TENABLEDIV" description="" id="PLL_PER_TENABLEDIV" offset="0x848" width="32">
    
  <bitfield begin="0" description="M2 and N2 latch (active rise edge)" end="0" id="TENABLEDIV" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_M2NDIV" description="" id="PLL_PER_M2NDIV" offset="0x84C" width="32">
    
  <bitfield begin="22" description="Post-divider is REGM2" end="16" id="M2" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="7" description="Pre-divider is REGN+1" end="0" id="N" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_MN2DIV" description="" id="PLL_PER_MN2DIV" offset="0x850" width="32">
    
  <bitfield begin="19" description="Bypass divider is REGN2+1" end="16" id="N2" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="11" description="Feedback Multiplier is REGM" end="0" id="M" rwaccess="RW" width="12"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_FRACDIV" description="" id="PLL_PER_FRACDIV" offset="0x854" width="32">
    
  <bitfield begin="31" description="Sigma-Delta Divider Should be set by s/w to provide optimum jitter performance. DPLL_SD_DIV = CEILING ([DPLL_MULT/(DPLL_DIV+1)] * CLKINP/ 250), where CLKINP is the input clock of the DPLL in MHz" end="24" id="REGSD" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="17" description="Fractional part of the M divider." end="0" id="FRACTIONALM" rwaccess="RW" width="18"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_BWCTRL" description="" id="PLL_PER_BWCTRL" offset="0x858" width="32">
    
  <bitfield begin="2" description="Change Loop Bandwidth" end="1" id="BWCONTROL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="0" description="Direction of Loop Bandwidth 0x0 : decrease BW 0x1 : increase BW" end="0" id="BW_INCR_DECRZ" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_FRACCTRL" description="" id="PLL_PER_FRACCTRL" offset="0x85C" width="32">
    
  <bitfield begin="31" description="Controls frequency spread 0x0 : enables both side frequency spread about the programmed frequency. 0x1 : enables low frequency spread only" end="31" id="DOWNSPREAD" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Exponent of the REFCLK divider to define the modulation frequency." end="28" id="ModFreqDividerExponent" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="27" description="Mantissa of the REFCLK divider to define the modulation frequency" end="21" id="ModFreqDividerMantissa" rwaccess="RW" width="7"></bitfield>
    
  <bitfield begin="20" description="Integer part of Frequency Spread control" end="18" id="DeltaMStepInteger" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="17" description="The fraction part of Frequency Spread control" end="0" id="DeltaMStepFraction" rwaccess="RW" width="18"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_STATUS" description="" id="PLL_PER_STATUS" offset="0x860" width="32">
    
  <bitfield begin="31" description="Status of the weak power-switch 0x0 : indicates the/OFF status of the weak power-switch in digital to SOC. 0x1 : ndicates the ON status of the weak power-switch in digital to SOC." end="31" id="PONOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="30" description="Status of the strong power-switch 0x0 : indicates the/OFF status of the strong power-switch in digital to SOC. 0x1 : ndicates the ON status of the strong power-switch in digital to SOC." end="30" id="PGOODOUT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="29" description="1 indicates ADPLLLJ internal LDO is power down. VDDLDOOUT will be un-defined in this condition" end="29" id="LDOPWDN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="28" description="Recalibration status flag. 1 ADPLLLJ requires recalibration" end="28" id="RECAL_BSTATUS3" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="27" description="Recalibration status flag. 1 ADPLLLJ requires recalibration" end="27" id="RECAL_OPPIN" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="11" description="Status on PHASELOCK output pin" end="11" id="CLKDCOLDOACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="Status on PHASELOCK output pin" end="10" id="PHASELOCK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="9" description="Status on FREQLOCK output pin" end="9" id="FREQLOCK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Status of BYPASSACK output pin" end="8" id="BYPASSACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="Standby and retention status 0x0: indicates to SOC that all internal clocks in ADPLLLJ are active and it is starting the relock process. 0x1: indicates to SOC that all internal clocks in ADPLLLJ are gated and it is ready for retention." end="7" id="STBYRETACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Reference input loss" end="6" id="LOSSREF" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Indicates the enable/disable condition of CLKOUTEN 0x0 = CLKOUT gating completed 0x1 = CLKOUT enabling completed" end="5" id="CLKOUTENACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="ADPLL internal loop lock status" end="4" id="LOCK2" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="Acknowledge for change to M2 divider. Toggles from 1-0 or 0-1 (depending on current value) once CLKOUT frequency change has completed." end="3" id="M2CHANGEACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Spread Spectrum status 0x0 : Spread-spectrum Clocking is disabled on output clocks 0x1 : Spread-spectrum Clocking is enabled on output clocks" end="2" id="SSCACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="1 indicates jitter. After PHASELOCK is asserted high, the HIGHJITTER flag is asserted high if phase error between REFCLK and FBCLK greater than 24%." end="1" id="HIGHJITTER" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Bypass status signal. 1 CLKOUT in bypass" end="0" id="BYPASS" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_HSDIVIDER" description="" id="PLL_PER_HSDIVIDER" offset="0x864" width="32">
    
  <bitfield begin="17" description="LDO Power Down Ack" end="17" id="LDOPWDNACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="16" description="HSDIVIDER Bypass Ack" end="16" id="BYPASSACKZ" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Tenable Div" end="2" id="TENABLEDIV" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="LDO Power Down" end="1" id="LDOPWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="HSDIVIDER Bypass" end="0" id="BYPASS" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_HSDIVIDER_CLKOUT0" description="" id="PLL_PER_HSDIVIDER_CLKOUT0" offset="0x868" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M4 divider and hence CLKOUT0 output 0h (R/W) = CLKOUT0 divider active 1h (R/W) = CLKOUT0 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT0 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT0 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT0_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M4, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_HSDIVIDER_CLKOUT1" description="" id="PLL_PER_HSDIVIDER_CLKOUT1" offset="0x86C" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M5 divider and hence CLKOUT1 output 0h (R/W) = CLKOUT1 divider active 1h (R/W) = CLKOUT1 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT1 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT1 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT1_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M5, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_HSDIVIDER_CLKOUT2" description="" id="PLL_PER_HSDIVIDER_CLKOUT2" offset="0x870" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M6 divider and hence CLKOUT2 output 0h (R/W) = CLKOUT2 divider active 1h (R/W) = CLKOUT2 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT2 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT2 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT2_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M6, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_HSDIVIDER_CLKOUT3" description="" id="PLL_PER_HSDIVIDER_CLKOUT3" offset="0x874" width="32">
    
  <bitfield begin="12" description="Power down for HSDIVIDER M7 divider and hence CLKOUT3 output 0h (R/W) = CLKOUT3 divider active 1h (R/W) = CLKOUT3 divider is powered down" end="12" id="PWDN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="HSDIVIDER CLKOUT3 status 0h (R) = The clock output is gated 1h (R) = The clock output is enabled" end="9" id="STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Control gating of HSDIVIDER CLKOUT3 0h (R/W) = Automatically gate this clock when there is no dependency for it 1h (R/W) = Force this clock to stay enabled even if there is no request" end="8" id="GATE_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Toggle on this status bit after changing HSDIVIDER_CLKOUT3_DIV indicates that the change in divider value has taken effect" end="5" id="DIVCHACK" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="DPLL post-divider factor, M7, for internal clock generation. Divide values from 1 to 31. 0h (R/W) = Reserved" end="0" id="DIV" rwaccess="RW" width="5"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_RSTCTRL" description="" id="PLL_DSP_RSTCTRL" offset="0x878" width="32">
    
  <bitfield begin="2" description="SW Reset override for the PLL Write 3'b111 : Override is enabled and Reset is asserted" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="PLL_DSP_HSDIVIDER_RSTCTRL" description="" id="PLL_DSP_HSDIVIDER_RSTCTRL" offset="0x87C" width="32">
    
  <bitfield begin="2" description="SW Reset override for the HSDIVIDER Write 3'b111 : Override is enabled and Reset is asserted" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_RSTCTRL" description="" id="PLL_PER_RSTCTRL" offset="0x880" width="32">
    
  <bitfield begin="2" description="SW Reset override for the PLL Write 3'b111 : Override is enabled and Reset is asserted" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="PLL_PER_HSDIVIDER_RSTCTRL" description="" id="PLL_PER_HSDIVIDER_RSTCTRL" offset="0x884" width="32">
    
  <bitfield begin="2" description="SW Reset override for the HSDIVIDER Write 3'b111 : Override is enabled and Reset is asserted" end="0" id="assert" rwaccess="RW" width="3"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_CLK_CTRL_REG1_XO_SLICER" description="" id="ANA_REG_CLK_CTRL_REG1_XO_SLICER" offset="0xC00" width="32">
    
  <bitfield begin="31" description="OSC_CLKOUT Enable Enables the Slicer clock to drive the OSC_CLKOUT output buffer.  It is recommended that this bit be activated as the last step after fields OSC_CLKOUT_DRV, OSC_CLKOUT_CLRZ_DIV, and OSC_CLKOUT_FREQ_SEL have been configured. 0 = Clock Disabled 1 = Clock Enabled 0x00 = Functional Reset" end="31" id="OSC_CLKOUT_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="OSC_CLKOUT Frequency Selection Selects the output frequency as a division of the XTAL (or externally driven CLKP) frequency. x0 = XTAL/2 10 = XTAL/1 11 = XTAL/4 0x00 = Functional Reset" end="29" id="OSC_CLKOUT_FREQ_SEL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="28" description="OSC_CLKOUT Divider ClearZ  This active low signal permits the output frequency dividers to be properly cleared before enabling. 0 = All dividers cleared 1 = Normal divider function enabled 0x1 = Functional Reset" end="28" id="OSC_CLKOUT_CLRZ_DIV" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="OSC_CLKOUT Drive This bit controls the drive strength of the OSC_CLKOUT buffer. 4'b0000 = No Test Output, Hi-Z Output Drive Ctrl = [4/9X][2/9X][2/9X][1/9X] 0xF = Functional Reset" end="24" id="OSC_CLKOUT_DRV" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="23" description="Reserved Reads return 0x0 and writes have no effect. 0x0 = Functional Reset" end="13" id="RESERVED0" rwaccess="RW" width="11"></bitfield>
    
  <bitfield begin="12" description="XTAL Detect Enable This bit connects a pullup and sense circuitry to CLKM to detect the presence or absence of a crystal. This operation will conflict with oscillator functionality, so this bit must be asserted only when the oscillator is disabled (CTRL_CLKTOP_REG1 bit 2 must be &quot;0&quot;).  After asserted, the internal XTAL_SENSE signal will reflect a &quot;1&quot; if a crystal is present (CLKM sees a high impedance) or &quot;0&quot; if CLKM is tied to ground. After the sense operation is detected, this bit must be cleared before the oscillator will function properly if enabled. 0 = Normal operation (pullup and sense circuitry are disconnected from CLKM, XTAL_SENSE outputs &quot;1&quot;) 1 = XTAL sense function enabled (pullup and sense circuitry connected to CLKM, output of XTAL_SENSE reads &quot;1&quot; if high impedance, &quot;0&quot; if CLKM is tied to ground) 0x0 = Functional Reset" end="12" id="XTAL_DETECT_XO_SLICER" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Slicer DC-Coupled Mode 0 = Normal operation (AC-couple CLKP to internal slicer) 1 = DC-couple CLKP to internal slicer to CLKP  0x0 = Functional Reset" end="11" id="SLICER_DCCPL_XO_SLICER" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Slicer High-power Mode This bit bypasses the input clock slicer current-starving/filtering circuitry to increase gain and reduce device phase-noise at the expense of power and reduced supply noise rejection.  This permits the use of a high-speed external test clock (660MHz max). 0 = Normal operation (current-limiting present) 1 = High-power/high-speed test mode 0x0 = Functional Reset" end="10" id="SLICER_HIPWR_XO_SLICER" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Bias Fast-charge Enable (Active Low) This bit bypasses the RC filtering on the XOSC/SLICER Bias to permit more rapid power-up.  0 = Bias fast-charge 1 = Normal operation (filtering present)  0x1 = Functional Reset" end="9" id="FASTCHARGEZ_BIAS_XO_SLICER" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Crystal Oscillator Output Drive  Binary-weighted oscillator drive control 0x0 = Functional Reset" end="4" id="XOSC_DRIVE_XO_SLICER" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="3" description="Crystal Oscillator and Slicer Bias RTrim  Binary-weighted bias control 0x0 = Functional Reset" end="0" id="RTRIM_BIAS_XO_SLICER" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_CLK_CTRL_REG1_CLKTOP" description="" id="ANA_REG_CLK_CTRL_REG1_CLKTOP" offset="0xC04" width="32">
    
  <bitfield begin="31" description="Reserved Reads return 0x0 and writes have no effect. 0x0 = Functional Reset" end="3" id="RESERVED0" rwaccess="RW" width="29"></bitfield>
    
  <bitfield begin="2" description="Enable Crystal Oscillator 0 = Disabled 1 = Enabled 0x1 = Functional Reset" end="2" id="ENABLE_XOSC" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Enable CLKP Input Slicer  0 = Disabled 1 = Enabled 0x1 = Functional Reset" end="1" id="ENABLE_SLICER_CLKP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Enable Bias for Crystal Oscillator and Slicer 0 = Disabled 1 = Enabled 0x1 = Functional Reset" end="0" id="ENABLE_BIAS_XO_SLICER" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_CLK_CTRL_REG2_CLKTOP" description="" id="ANA_REG_CLK_CTRL_REG2_CLKTOP" offset="0xC08" width="32">
    
  <bitfield begin="31" description="Disable for CLK_TOP DC BIST BUFFER                                                                                                                                                   0 =CLK TOP DC BIST BUFFER ENABLED 1 = CLK TOP DC BIST BUFFER DISABLED 0x0 = Functional Reset" end="31" id="CTRL_DC_BIST_BUFEN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved Reads return 0x0 and writes have no effect. 0x0 = Functional Reset" end="0" id="RESERVED0" rwaccess="RW" width="31"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_CLK_CTRL_REG1_LDO_CLKTOP" description="" id="ANA_REG_CLK_CTRL_REG1_LDO_CLKTOP" offset="0xC0C" width="32">
    
  <bitfield begin="31" description="Reserved Reads return 0x0 and writes have no effect. 0x0 = Functional Reset" end="8" id="RESERVED1" rwaccess="RW" width="24"></bitfield>
    
  <bitfield begin="7" description="DC BIST Disable for LDO 0 = Normal operation of DC BIST  1 = DC BIST Disabled 0x0 = Functional Reset" end="7" id="CLK_BIST_DISABLE_LDO" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Reserved Reads return 0x0 and writes have no effect. 0x0 = Functional Reset" end="1" id="RESERVED0" rwaccess="RW" width="6"></bitfield>
    
  <bitfield begin="0" description="Slicer LDO Enable                                                                                                                                                 0 = Slicer LDO Disabled  1 = Slicer LDO Enabled  0x1 = Functional Reset" end="0" id="EN_SLICER_LDO" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_CLK_CTRL_REG2_LDO_CLKTOP" description="" id="ANA_REG_CLK_CTRL_REG2_LDO_CLKTOP" offset="0xC10" width="32">
    
  <bitfield begin="31" description="Reserved Reads return 0x0 and writes have no effect. 0x0 = Functional Reset" end="24" id="RESERVED0" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="23" description="SLICER LDO BIST MUX CONTROL (ONE HOT) Analog MUX enables to BIST output port  0000 = HI-Z Output 0001 = VBG_0P9*10/9 =1.0 V 0010 = VDD18*0.5 = 0.9V 0100 = VLDO Output * 0.6 1000 = Floating WARNING: Enabling more than one bit may damage the device 0x4 = Functional Reset                                                                                                                                   " end="20" id="BISTMUX_CTRL" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="19" description="SLICER LDO TEST MUX CONTROL (ONE HOT) Analog MUX enables to test output port  0000 = HI-Z Output 0001 = 0.6 * VLDO_OUT 0010 = VDD18*0.5 = 0.9V 0100 = VSSA 1000 = LDO Test Current (12.5uA) WARNING: Enabling more than one bit may damage the device 0x0 = Functional Reset                                                                                                                                   " end="16" id="TESTMUX_CTRL" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="15" description="SLICER LDO TLOAD CONTROL updated description needed 0x0 = Functional Reset                                                                                                                                             " end="13" id="TLOAD_CTRL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="12" description="SLICER LDO PMOS PULL DOWN ENABLE                                                                                                                                                  0 = Slicer LDO PMOS Pull Down disabled 1 = Slicer LDO PMOS Pull Down enabled 0x0 = Functional Reset" end="12" id="ENABLE_PMOS_PULLDOWN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="SLICER LDO SHORT CKT PROTECTION IBIAS CONTROL                                                                                                                                               0 = Nominal short circuit bias with nominal short circuit current limit 1 = 2X Nominal short circuit bias with higher short circuit current limit 0x0 = Functional Reset" end="11" id="SCPRT_IBIAS_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="SLICER LDO BANDWIDTH CONTROL  need updated description 0x7 = Functional Reset                                                                                                                                  " end="8" id="LDO_BW_CTRL" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="7" description="SLICER LDO BYPASS ENABLE                                                                                                                                                  0 = Slicer LDO in normal mode 1 = Slicer LDO Bypassed with external voltage 0x0 = Functional Reset" end="7" id="EN_BYPASS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="SLICER LDO SHORT CKT PROTECTION ENABLE                                                                                                                                                  0 = Slicer LDO Short Ckt Protection Disabled  1 = Slicer LDO Short Ckt Protection Enabled  0x0= Functional Reset" end="6" id="EN_SHRT_CKT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="SLICER LDO TEST MODE ENABLE                                                                                                                                                  0 = Slicer LDO TEST MODE Disabled  1 = Slicer LDO TEST MODE Enabled  0x0 = Functional Reset" end="5" id="EN_TEST_MODE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="SLICER LDO LOW BW MODE DISABLE                                                                                                                                      1 = Slicer LDO Low BW mode Enabled  0 = Slicer LDO Low BW mode Disabled  0x1 = Functional Reset" end="4" id="ENZ_LOW_BW_CAP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="SLICER LDO VOUT  TRIM                                                                                                                                                  NEEDS updated description 0x0 = Functional Reset" end="0" id="LDO_VOUT_CTRL" rwaccess="RW" width="4"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_CLK_STATUS_REG" description="" id="ANA_REG_CLK_STATUS_REG" offset="0xC18" width="32">
    
  <bitfield begin="31" description="Reserved Reads return 0x0 and writes have no effect." end="1" id="RESERVED0" rwaccess="R" width="31"></bitfield>
    
  <bitfield begin="0" description="SLICER LDO SHORT CIRCUIT INDICATOR 0 = Normal operation 1 = LDO Output Short Circuit Detected" end="0" id="SLICER_LDO_SC_OUT" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_REFSYS_CTRL_REG_LOWV" description="" id="ANA_REG_REFSYS_CTRL_REG_LOWV" offset="0xC1C" width="32">
    
  <bitfield begin="31" description="Reserved 0x0 = Functional Reset" end="31" id="RESERVED2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Filter TRIM Control 0x0 = Functional Reset" end="27" id="FTRIM_3_0" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="26" description="&lt;7> Unused 0x0 = Functional Reset" end="26" id="RESERVED1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="&lt;6> Idiode Active Low Control --> Unused in TPR, Reserved for AWR &lt;0> - Enable &lt;1> - Disable 0x0= Functional Reset" end="25" id="IDIODE_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="&lt;5> REFSYS V2I By-Pass Enable 0x0 = Functional Reset" end="24" id="REFSYS_V2I_BYPASS_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="&lt;4> TX TOP IBIAS EN--> Unused in TPR, Reserved for AWR 0x1 = Functional Reset" end="23" id="TX_TOP_IBIAS_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="&lt;3> LO DIST BIAS EN --> Unused in TPR, Reserved for AWR 0x1 = Functional Reset" end="22" id="LODIST_IBIAS_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="&lt;2> CLK TOP IBIAS EN 0x1 = Functional Reset" end="21" id="CLKTOP_IBIAS_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="&lt;1> V2I Startup  0x0 = Functional Reset" end="20" id="V2I_STARTUP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="&lt;0> BGAP ISW STARTUP 0x0 = Functional Reset" end="19" id="BGAP_ISW" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Default Resistor Trim for NOM LOT 0x02 = Functional Reset" end="14" id="IREF_TRIM_4_0" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="13" description="Default Magnitude Trim for NOM LOT 0x00 = Functional Reset" end="9" id="MAG_TRIM_4_0" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="8" description="Default Slope Trim for NOM LOT 0x0D = Functional Reset" end="4" id="SLOPE_TRIM_4_0" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="3" description="REFSYS Pre Charge Control 0 = Disable Pre Charge Block 1 = Enable Pre Charge Block 0x0 = Functional Reset" end="3" id="REFSYS_PRE_CHARGE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="REFSYS Cap Switch Control 0 = Switch External Cap to reference output 1 = Disconnect External Cap to Reference output 0x0 = Functional Reset" end="2" id="REFSYS_CAP_SW_CTRLZ" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="REFSYS Enable Control 0 = Disable V2I REFSYS 1 = Enable V2I REFSYS 0x1 = Functional Reset" end="1" id="REFSYS_V2I_EN_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="REFSYS Enable Control 0 = Disable REFSYS 1 = Enable REFSYS 0x1 = Functional Reset" end="0" id="REFSYS_BGAP_EN_CTRL" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_REFSYS_TMUX_CTRL_LOWV" description="" id="ANA_REG_REFSYS_TMUX_CTRL_LOWV" offset="0xC20" width="32">
    
  <bitfield begin="31" description="REFSYS Test Mux Enable. Other bits in Bus are One-hot. This control enabled in sync with other one hot control bits in Reg 0 = TMUX Disabled 1 = TMUX Enabled 0x0 = Functional Reset" end="31" id="REFSYS_CTRL_8" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved Reads return 0x0 and writes have no effect. 0x0000 = Functional Reset" end="16" id="RESERVED1" rwaccess="RW" width="15"></bitfield>
    
  <bitfield begin="15" description="&lt;15> LO IBG BIASP 20uA (TMUX One-Hot) 0x0 = Functional Reset" end="15" id="LO_IBIASP_20u" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="&lt;14> TX IBG BIASP 20uA (TMUX One-Hot) 0x0 = Functional Reset" end="14" id="TX_IBIASP_20u" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="VPBIAS Control for IREF Gen Test Mode V2I By-Pass Feature 0x0 = Functional Reset" end="13" id="BYPASS_MIRR_VPBIAS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Sense Voltage from the BIST I2V cinversion of 20u and 6u bias current paths Sense voltage of 1V for BIST select&lt;6> Sense voltage of 0.3V for BIST select&lt;7> 0x0 = Functional Reset" end="12" id="I2V_SENSE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="&lt;11> VSSA REF (TMUX One-Hot) 0x0 = Functional Reset" end="11" id="VSSA_REF" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="&lt;10> IREFP 10uA (TMUX One-Hot) 0x0 = Functional Reset" end="10" id="IREFP_10UA" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="&lt;9> Idiode BIASP 100uA (TMUX One-Hot) 0x0 = Functional Reset" end="9" id="IDIODEP_100U" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Unused 0x0 = Functional Reset" end="8" id="RESERVED4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="&lt;7> IBG BIASP TS 6uA (TMUX One-Hot) 0x0 = Functional Reset" end="7" id="IBIASP_TS_6U" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="&lt;6> CLK IBG BIASP 20uA (TMUX One-Hot) 0x0 = Functional Reset" end="6" id="IBIASP_20U" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Unused 0x0 = Functional Reset" end="5" id="RESERVED3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="&lt;4> - VBE Weak (TMUX One-Hot) 0x0 = Functional Reset" end="4" id="VBE_WEAK" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Unused 0x0 = Functional Reset" end="3" id="RESERVED2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="&lt;2> - VBG 1.22V  (TMUX One-Hot) 0x0 = Functional Reset" end="2" id="VBG_1P22V" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="&lt;1> - VREF 0P9V (Cap Node) (TMUX One-Hot) 0x0 = Functional Reset" end="1" id="VREF_0P9V" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="&lt;0> - VREF 0P45 (TMUX One-Hot) 0x0 = Functional Reset" end="0" id="VREF_0P45V" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_REFSYS_SPARE_REG_LOWV" id="ANA_REG_REFSYS_SPARE_REG_LOWV" offset="0xC24" width="32">
    
  <bitfield begin="31" description="ANALOGTEST TMUX ESD CTRL in Pad-Frame (formerly RX_REFSYS_TMUX_SPARE_CTRL_LOWV&lt;31> in AWR/IWR devices, but RX does not exist in TPR) 0x0 = Functional Reset" end="31" id="ANALOGTEST_TMUX_ESD_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved Reads return 0x0 and writes have no effect. 0x000 = Functional Reset" end="22" id="REFSYS_SPARE_30_22" rwaccess="RW" width="9"></bitfield>
    
  <bitfield begin="21" description="If asserted, VDD_OV will automatically reset the device through hardware control. Otherwise, UV flag will propagate to the digital where the CPU will need to take action. 0x0 = Functional Reset" end="21" id="VDD_OV_RSET_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="If asserted, VDD_UV will automatically reset the device through hardware control. Otherwise, UV flag will propagate to the digital where the CPU will need to take action. 0x0 = Functional Reset" end="20" id="VDD_UV_RSET_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="If asserted, VDDA_OSC_UV will automatically reset the device through hardware control. Otherwise, UV flag will propagate to the digital where the CPU will need to take action. 0x0 = Functional Reset" end="19" id="VDDA_OSC_UV_RSET_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="If asserted, VIOIN_UV will automatically reset the device through hardware control. Otherwise, UV flag will propagate to the digital where the CPU will need to take action. 0x0 = Functional Reset" end="18" id="VIOIN_UV_RSET_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Final level of VDD 1.2V VMON OV Reference Selection See definition in REFSYS_SPARE_REG&lt;15:14> 0x0 = Functional Reset" end="16" id="VDD_OV_SR_SEL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="15" description="VDD 1.2V VMON OV Reference Selection Reference selection is dependent on REFSYS_SPARE_REG&lt;17:16> programming If REFSYS_SPARE_REG&lt;17:16> = 0x0 0x0 = 0.68V 0x1 = 0.67V 0x2 = 0.66V 0x3 = 0.65V If REFSYS_SPARE_REG&lt;17:16> = 0x1 0x0 = 0.65V 0x1 = 0.64V 0x2 = 0.63V 0x3 = 0.62V If REFSYS_SPARE_REG&lt;17:16> = 0x2 0x0 = 0.62V 0x1 = 0.61V 0x2 = 0.6V 0x3 = 0.59V If REFSYS_SPARE_REG&lt;17:16> = 0x3 0x0 = 0.59V 0x1 = 0.58V 0x2 = 0.57V 0x3 = 0.56V 0x0 = Functional Reset" end="14" id="VDD_OV_IR_DROP_COMP_SEL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="13" description="Reserved Reserved in case VIOIN OV VMON and self test is ever implemented 0x0 = Functional Reset" end="13" id="RESERVED1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Enable VIOIN Strict UV VMON Self Test If Self-test mode is enabled, VIOIN UV VMON reference is programmed as follows for REFSYS_SPARE_REG&lt;3:2>: 0x0 = 0.66V 0x1 = 0.64V 0x2 = 0.62V 0x3 = 0.6V 0x0 = Functional Reset" end="12" id="VDDS_3P3V_UV_SELF_TEST_SEL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Reserved Reserved in case VDDA_OSC OV VMON and self test is ever implemented 0x0 = Functional Reset" end="11" id="RESERVED0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Enable VDDA_OSC Strict UV VMON Self Test If Self-test mode is enabled, VDDA_OSC UV VMON reference is programmed as follows for REFSYS_SPARE_REG&lt;5:4>: 0x0 = 0.66V 0x1 = 0.64V 0x2 = 0.62V 0x3 = 0.6V 0x0 = Functional Reset" end="10" id="VDDA_OSC_UV_SELF_TEST_SEL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Enable 1.2V VDD Strict OV VMON Self Test If Self-test mode is enabled, VDD 1.2V VMON OV reference is programmed based on REFSYS_SPARE_REG&lt;1:0> as follows: If REFSYS_SPARE_REG&lt;7:6> = 0x0, REFSYS_SPARE_REG&lt;1:0>: 0x0 = 0.58V 0x1 = 0.57V 0x2 = 0.56V 0x3 = 0.55V If REFSYS_SPARE_REG&lt;7:6> = 0x1, REFSYS_SPARE_REG&lt;1:0>: 0x0 = 0.55V 0x1 = 0.54V 0x2 = 0.53V 0x3 = 0.52V If REFSYS_SPARE_REG&lt;7:6> = 0x2, REFSYS_SPARE_REG&lt;1:0>: 0x0 = 0.53V 0x1 = 0.52V 0x2 = 0.51V 0x3 = 0.5V If REFSYS_SPARE_REG&lt;7:6> = 0x3, REFSYS_SPARE_REG&lt;1:0>: 0x0 = 0.51V 0x1 = 0.5V 0x2 = 0.49V 0x3 = 0.48V 0x0 = Functional Reset" end="9" id="VDD_OV_SELF_TEST_SEL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Enable 1.2V VDD Strict UV VMON Self Test If Self-test mode is enabled, VDD 1.2V VMON UV reference is programmed based on REFSYS_SPARE_REG&lt;15:14>  as follows: If REFSYS_SPARE_REG&lt;17:16> = 0x0, REFSYS_SPARE_REG&lt;15:14>: 0x0 = 0.68V 0x1 = 0.67V 0x2 = 0.66V 0x3 = 0.65V If REFSYS_SPARE_REG&lt;17:16> = 0x1, REFSYS_SPARE_REG&lt;15:14>: 0x0 = 0.65V 0x1 = 0.64V 0x2 = 0.63V 0x3 = 0.62V If REFSYS_SPARE_REG&lt;17:16> = 0x2, REFSYS_SPARE_REG&lt;15:14>: 0x0 = 0.62V 0x1 = 0.61V 0x2 = 0.6V 0x3 = 0.59V If REFSYS_SPARE_REG&lt;17:16> = 0x3, REFSYS_SPARE_REG&lt;15:14>: 0x0 = 0.59V 0x1 = 0.58V 0x2 = 0.57V 0x3 = 0.56V 0x0 = Functional Reset" end="8" id="VDD_UV_SELF_TEST_SEL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Final level of VDD 1.2V VMON UV Reference Selection See definition in REFSYS_SPARE_REG&lt;1:0> 0x0 = Functional Reset" end="6" id="VDD_SR_SEL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="5" description="VDDA_OSC UV VMON Reference Selection 0x0 = 0.56V 0x1 = 0.54V 0x2 = 0.52V 0x3 = 0.5V 0x0 = Functional Reset" end="4" id="VDDA_OSC_IR_DROP_COMP_SEL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="3" description="VIOIN VMON UV Reference Selection 0x0 = 0.56V 0x1 = 0.54V 0x2 = 0.52V 0x3 = 0.5V 0x0 = Functional Reset" end="2" id="VDDS_3P3V_IR_DROP_COMP_SEL" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="1" description="VDD 1.2V VMON UV Reference Selection Reference selection is dependent on REFSYS_SPARE_REG&lt;7:6> programming If REFSYS_SPARE_REG&lt;7:6> = 0x0 0x0 = 0.58V 0x1 = 0.57V 0x2 = 0.56V 0x3 = 0.55V If REFSYS_SPARE_REG&lt;7:6> = 0x1 0x0 = 0.55V 0x1 = 0.54V 0x2 = 0.53V 0x3 = 0.52V If REFSYS_SPARE_REG&lt;7:6> = 0x2 0x0 = 0.53V 0x1 = 0.52V 0x2 = 0.51V 0x3 = 0.5V If REFSYS_SPARE_REG&lt;7:6> = 0x3 0x0 = 0.51V 0x1 = 0.5V 0x2 = 0.49V 0x3 = 0.48V 0x0 = Functional Reset" end="0" id="VDD_IR_DROP_COMP_SEL" rwaccess="RW" width="2"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_WU_CTRL_REG_LOWV" description="" id="ANA_REG_WU_CTRL_REG_LOWV" offset="0xC28" width="32">
    
  <bitfield begin="31" description="Reserved Reads return 0x0 and writes have no effect. 0x0 = Functional Reset" end="31" id="RESERVED0" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="WU Spare Control 0x3 = Functional Reset" end="29" id="WU_SPARE_IN_2" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="28" description="WU VDD OV VMON Enable Control 0 = VDD OV Detect Disabled 1 = VDD OV Detect Enabled 0x0 = Functional Reset" end="28" id="WU_VDD_OV_VMON_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="WU VDD UV VMON Enable Control 0 = VDD UV Detect Disabled 1 = VDD UV Detect Enabled 0x0 = Functional Reset" end="27" id="WU_VDD_UV_VMON_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="WU VDDA OSC UV VMON Enable Control 0 = VDDA OSC UV Detect Disabled 1 = VDDA OSC UV Detect Enabled 0x0 = Functional Reset" end="26" id="WU_VDDA_OSC_UV_VMON_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="WU VDDS 3.3V UV VMON Enable Control 0 = VDDS 3.3V UV Detect Disabled 1 = VDDS 3.3V UV Detect Enabled 0x0 = Functional Reset" end="25" id="WU_VDDS_3P3V_UV_VMON_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="WU Spare Control Change for 1642 ES2P0 Change Name : Newly added OR gates to provide options to bypass crude VDD DET (also refer to &lt;11>) Bit &lt;0> of this field when HIGH over rides the crude VDD_DET, this control is using firmware Bit&lt;0> of this field is WU_CTRL_REG&lt;23>  Change for 2243 ES1P0 Using Bit&lt;1>, is WU_CTRL_REG&lt;24> This bit is used to make the reset fix SW controllable. Manshul's email notes-- Since the default value of WU_SPARE_IN&lt;1> is ‘0’, we will have the fix active by default. To disable it, firmware can write this bit to ‘1’ before enabling VMON.  0x0 = Functional Reset" end="23" id="WU_SPARE_IN" rwaccess="RW" width="2"></bitfield>
    
  <bitfield begin="22" description="    WU VMON Detect Status Override Disable in Functional Test SOP 0 = VMON Det Status Override Disabled 1 = VMON Det Status Override Enabled 0x1 = Functional Reset    " end="22" id="WU_SUPP_DET_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="WU VRAM VMON Enable Control 0 = SRAM UV Detect Disabled 1 = SRAM UV Detect Enabled 0x1 = Functional Reset" end="21" id="WU_VRAM_VMON_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="WU VMON Enable Control 0 = VMON Control Disabled 1 = VMON Control Enabled 0x1 = Functional Reset" end="20" id="WU_SUPP_VMON_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Introduce additional delay for XTAL settling 0 = Default delay as per WU-SEQ 1 = Introduce additional delay as per WU-SEQ 0x0 = Functional Reset" end="19" id="WU_XTAL_DLY_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="WU Over Voltage Detect Control Changed for 1243 ES3P0 (Metal only change from 1642 ES2P0) Change Name : FW control of VDD OV DET EN 1 = OV Detect is disabled 0 = OV Detect is Enabled 0x1 = Functional Reset" end="18" id="WU_OV_DET_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="WU Under Voltage Detect Control 0 = UV Detect is disabled 1 = UV Detect is Enabled 0x1 = Functional Reset" end="17" id="WU_UV_DET_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="XTAL EN Override (WU-SEQ) Control 0 = XTAL Enable is driven by WU-SEQ detection 1 = Override XTAL Enable if disabled by default 0x0 = Functional Reset" end="16" id="XTAL_EN_OVERRIDE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="WU CLK Control 0 = CLK Monitor Function in Dig Sequencer is disabled 1 = REF CLK Monitor Function is Enabled 0x1 = Functional Reset" end="15" id="WU_CPU_CLK_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="WU Internal Clock (RCOSC) Frequency Select                                                                                                                                                Bit&lt;3> is used as override for VMON on Untrimmed devices. Bit &lt;3> is '1' if device REFSYS_TOP  is trimmed.  Changed on 1642 ES2P0 Change Name : Newly added mux for CLK MON EN options When Bit&lt;2> = 0, MASK_CPU_CLK_OUT_CTRL_LOWV == WU_CTRL_REG&lt;12>, essentially Bit&lt;1> of this field When Bit&lt;2> = 1, MASK_CPU_CLK_OUT_CTRL_LOWV == (original function) INTER_MASK_CPU_CLK_OUT_CTRL_LOWV Change Name : Newly added OR gates to provide options to bypass crude VDD DET (also refer to &lt;23>) Bit &lt;0> of this field when HIGH over rides the crude VDD_DET  0x0 = Functional Reset " end="11" id="INT_CLK_FREQ_SEL_3_0" rwaccess="RW" width="4"></bitfield>
    
  <bitfield begin="10" description="WU lnternal Clock (RCOSC) Trim 0x4B = Functional Reset (If not trimmed)                                                                                                                                     " end="3" id="INT_CLK_TRIM_7_0" rwaccess="RW" width="8"></bitfield>
    
  <bitfield begin="2" description="WU Internal Clock (RCOSC) SW_SEL                                                                                                                                                 0 = TBD 1 = TBD  0x1 = Functional Reset" end="2" id="INT_CLK_SW_SEL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="WU Internal Clock (RCOSC) STOP                                                                                                                                                0 = Internal CLK can be enabled 1 = Internal CLK is OFF 0x0 = Functional Reset" end="1" id="INT_CLK_STOP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="WU Internal Clock (RCOSC) ENABLE                                                                                                                                                  0 = Internal CLK Disabled  1 = Internal CLK Enabled  0x1 = Functional Reset" end="0" id="INT_CLK_EN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_WU_TMUX_CTRL_LOWV" id="ANA_REG_WU_TMUX_CTRL_LOWV" offset="0xC2C" width="32">
    
  <bitfield begin="31" description="WU TMUX Enable 0 = TMUX Disabled 1 = TMUX Enabled 0x0 = Functional Reset" end="31" id="WU_TMUX_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved Reads return 0x0 and writes have no effect. 0x000 = Functional Reset" end="21" id="RESERVED0" rwaccess="RW" width="10"></bitfield>
    
  <bitfield begin="20" description="VIOIN scaled supply for VIOIN Detect Scaling Factor: VIOIN*(52/90) 0x0 = Functional Reset" end="20" id="VDDSINT18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Scaled VDDA_OSC supply for crude supply detect Scaling Factor: VDDA_OSC*(22/39) 0x0 = Functional Reset" end="19" id="SCALED_VDDA_OSC" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Scaled VDD 1.2V used as reference for VDDA_OSC crude supply detect 0x0 = Functional Reset" end="18" id="VFB_0P85V" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Test Mux Control. One Hot Control VDDA_OSC UV VMON reference 0x0 = Functional Reset" end="17" id="VDDA_OSC_UV_VREF" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Test Mux Control. One Hot Control VDD UV VMON reference 0x0 = Functional Reset" end="16" id="VDD_SR_UV_VREF" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Test Mux Control. One Hot Control Connected to Crude Vt-based VDD OV VMON reference 0x0 = Functional Reset" end="15" id="VT_DIG_SIG_OV" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Test Mux Control. One Hot Control Connected to Crude Vt-based VDD UV VMON reference 0x0 = Functional Reset" end="14" id="VT_DIG_SIG_UV" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Test Mux Control. One Hot Control VT Detect Signal Level on VDDA18_PM in TPR VT Detect Signal Level on VDDA_LVDS_1P8V 0x0 = Functional Reset" end="13" id="VT_ANA_SIG" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Test Mux Control. One Hot Control Tied LO in TPR VIN_13RF2 0x0 = Functional Reset" end="12" id="VDDA14_2_INT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Test Mux Control. One Hot Control  Change in TPR VDDS_3P3V IO DET reference (1.8V mode)  Scaling Factor: 0.67 *  VDDA_LVDS_1P8V 0x0 = Functional Reset" end="11" id="SCALED_VDDA_LVDS_1P8V_1P2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Test Mux Control. One Hot Control Tied LO in TPR VIN_13RF1 0x0 = Functional Reset" end="10" id="VDDA14_INT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Test Mux Control. One Hot Control Reference voltage for VIOIN_UV VMON 0x0 = Functional Reset" end="9" id="VIOIN_UV_VREF" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Test Mux Control. One Hot Control Tied LO in TPR Scaling Factor: 0.55 * VIN_18BB 0x0 = Functional Reset" end="8" id="SCALED_VDDA18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Test Mux Control. One Hot Control VREF_0P9V 0x0 = Functional Reset" end="7" id="VREF_0P9V" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Test Mux Control. One Hot Control VDD OV VMON reference 0x0 = Functional Reset" end="6" id="VDD_SR_OV_VREF" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Test Mux Control. One Hot Control  Change in TPR VDDS_3P3V IO DET reference (3.3V mode)  Scaling Factor: 0.4 *  VDDA_LVDS_1P8V 0x0 = Functional Reset" end="5" id="SCALED_VDDA_LVDS_1P8V" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Test Mux Control. One Hot Control  Change for 1642 ES2P0 Change Name : VIOIN &amp; VIN_SRAM connection to GPADC Scaling Factor: 0.289 * VIOIN 0x0 = Functional Reset" end="4" id="SCALED_VIOIN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Test Mux Control. One Hot Control Scaling Factor: 0.5 * VDD 0x0 = Functional Reset" end="3" id="VFB_0P6V" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Test Mux Control. One Hot Control Tied LO in TPR Scaling Factor: 0.55 * VDDS18 0x0 = Functional Reset" end="2" id="SCALED_VDDS18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Test Mux Control. One Hot Control Scaling Factor: VIOIN/5.5 (3.3V mode), VIOIN/3 (1.8V mode) 0x0 = Functional Reset" end="1" id="SCALED_VIO3318" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Test Mux Control. One Hot Control    Scaling Factor: VDDA_OSC/3    0x0 = Functional Reset    " end="0" id="SCALED_VDDA_OSC_UV" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_TW_CTRL_REG_LOWV" description="" id="ANA_REG_TW_CTRL_REG_LOWV" offset="0xC30" width="32">
    
  <bitfield begin="31" description="Reserved 0x000 = Functional Reset" end="20" id="Reserved1" rwaccess="RW" width="12"></bitfield>
    
  <bitfield begin="19" description="RTRIM value to TW routed to BIST MUX IN REFSYS for I2V 0x02 = Functional Reset" end="15" id="RTRIM_TW_4_0" rwaccess="RW" width="5"></bitfield>
    
  <bitfield begin="14" description="TW ANA TMUX Buffer Enabled 0 = ANA TMUX Buffer Disabled 1 = ANA TMUX Buffer Enabled 0x0 = Functional Reset" end="14" id="ANA_TMUX_BUF_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="TW ANA TMUX Buffer Bypass 0 = ANA TMUX Buffer By-pass Disabled 1 = ANA TMUX Buffer By-pass Enabled 0x0 = Functional Reset" end="13" id="ANA_TMUX_BUF_BYPASS" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="TW VIN Control from External Source 0 = External VIN Control Disabled 1 = External VIN Control Enabled 0x0 = Functional Reset" end="12" id="VIN_EXT_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="TW VREF Control from External SOurce 0 = External VREF Control Disabled 1 = External VREF Control Enabled 0x0 = Functional Reset" end="11" id="VREF_EXT_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="TW Iforce Control from External Source 0 = IFORCE Control Disabled 1 = IFORCE Control Enabled 0x0 = Functional Reset" end="10" id="IFORCE_EXT_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="TW ADC TS SE Inp Buffer Enable 0 = Input Buffer disabled 1 = Input Buffer Enabled 0x0 = Functional Reset" end="9" id="TS_SE_INP_BUF_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="TW ADC TS DIFF Inp Buffer Enable 0 = Input Buffer disabled 1 = Input Buffer Enabled 0x1 = Functional Reset" end="8" id="TS_DIFF_INP_BUF_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="TW ADC Reference Select 0b001 = Reference from Top Refsys 0b010 = Reference from RX Refsys 0b100 = Reference from External Test Pin (CZ/ Trim) 0x001 = Functional Reset" end="5" id="ADC_REF_SEL_2_0" rwaccess="RW" width="3"></bitfield>
    
  <bitfield begin="4" description="TW ADC Reference Buffer Enable 0 = Input Buffer disabled 1 = Input Buffer Enabled (Default) 0x1 = Functional Reset" end="4" id="ADC_REF_BUF_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="TW ADC Input Buffer Enable 0 = Input Buffer disabled 1 = Input Buffer Enabled (Default) 0x1 = Functional Reset" end="3" id="ADC_INP_BUF_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="TW ADC Reset (Active High) 0 = ADC Out of Reset 1 = ADC In Reset 0x1 = Functional Reset" end="2" id="ADC_RESET" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="TW ADC Start Conversion 0x0 = Functional Reset" end="1" id="ADC_START_CONV" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="TW ADC Control 0 = ADC Disable 1 = ADC Enable 0x0 = Functional Reset" end="0" id="ADC_EN" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_TW_ANA_TMUX_CTRL_LOWV" description="" id="ANA_REG_TW_ANA_TMUX_CTRL_LOWV" offset="0xC34" width="32">
    
  <bitfield begin="31" description="TW ANA Test MUX Enabled 0 = ANA TMUX Control Disabled 1 = ANA TMUX Control Enabled 0x0 = Functional Reset" end="31" id="ANA_TEST_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="CLK TMUX ESD CTRL in Pad-Frame 0x0 = Functional Reset" end="30" id="CLK_TMUX_ESD_CTRL" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Reserved Reads return 0x0 and writes have no effect. 0x000 = Functional Reset" end="19" id="Reserved0" rwaccess="RW" width="11"></bitfield>
    
  <bitfield begin="18" description="Enable Output of ATESTV of VSLDO 0x0 = Functional Reset" end="18" id="ATESTV_VSLDO" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Enable Output of TMUX buffer 0x0 = Functional Reset" end="17" id="TMUX_BUF_OUT_EN" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="I2V Sense Voltage of External IREF Forced.  IREF is forced thru' ANAMUX Pin and enabling TW_CTRL_REG&lt;10> 0x0 = Functional Reset" end="16" id="I2V_SENSE" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="BIST Mux output pre ADC input Buffer  0x0 = Functional Reset" end="15" id="BIST_MUX_OUT_1P8V" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Ibias current from Top Refsys for measurement on Test Pin 0x0 = Functional Reset" end="14" id="ODP" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Single PNP Sense voltage for TSENSE selected 0x0 = Functional Reset" end="13" id="VBE_TS_WEAK" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Multi PNP Sense voltage for TSENSE selected 0x0 = Functional Reset" end="12" id="VBE_TS_STRONG" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Difference TSENSE signal delVbe scaled and buffered for chosen TSENSE element 0x0 = Functional Reset" end="11" id="DELVBE_BUFF_OUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="ADC reference buffer out to Test Pin 0x0 = Functional Reset" end="10" id="ADC_REF_BUF_OUT" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Buffered output of ADC inputs to GPADC 0x0 = Functional Reset" end="9" id="ADC_BUF_OUT_1P8V" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="DC BIST Buffered output of RX, TX, CLK, LO (shorted on to this net). DC BIST one hot control and DC BIST control has to be used to bring relevant signal here 0x0 = Functional Reset" end="8" id="DC_BIST_BUF_INP_1P8V" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Buffered value of Weak PNP 0x0 = Functional Reset" end="7" id="VBE_W_BUFF" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Buffered value of Strong PNP 0x0 = Functional Reset" end="6" id="VBE_S_BUFF" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="CLK ANA Test Pin Mapped 0x0 = Functional Reset" end="5" id="PM_ANA_INP_5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="RX ANA Test Mux Control 0x0 = Functional Reset" end="4" id="PM_ANA_INP_4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="LODIST ANA Test Mux Control 0x0 = Functional Reset" end="3" id="PM_ANA_INP_3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="TX PM ANA Test Mux Control 0x0 = Functional Reset" end="2" id="PM_ANA_INP_2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Mux Output of Refsys Test Mux. Refsys Test Mux has to be enabled and controlled to bring the internal signal of Refsys Analog - PMTOP 0x0 = Functional Reset" end="1" id="REFSYS_TEST_OUT_1P8V" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Mux Output of WU Test Mux. WU Test Mux has to be enabled and controlled to bring the internal signal of WU Analog 0x0 = Functional Reset" end="0" id="WU_ANA_TEST_OUT_1P8V" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_TW_SPARE_LOWV" description="" id="ANA_REG_TW_SPARE_LOWV" offset="0xC38" width="32">
    
  <bitfield begin="31" description="Reserved Reads return 0xFF00 and writes have no effect. 0xFFFF0000 = Functional Reset" end="0" id="Reserved0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_WU_MODE_REG_LOWV" description="" id="ANA_REG_WU_MODE_REG_LOWV" offset="0xC3C" width="32">
    
  <bitfield begin="31" description="Reserved Reads return 0x0 and writes have no effect. 0x0000000 = Functional Reset" end="7" id="Reserved0" rwaccess="R" width="25"></bitfield>
    
  <bitfield begin="6" description="SOP Mode Latched Output" end="2" id="SOP_MODE_LAT_4_0" rwaccess="R" width="5"></bitfield>
    
  <bitfield begin="1" description="Latched Output of Test Mode Detect SOP" end="1" id="TEST_MODE_DET_SYNC" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Latched Output of Functional Test Mode SOP" end="0" id="FUNC_TEST_DET_SYNC" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_WU_STATUS_REG_LOWV" id="ANA_REG_WU_STATUS_REG_LOWV" offset="0xC40" width="32">
    
  <bitfield begin="31" description="Reserved Reads return 0x0 and writes have no effect." end="19" id="Reserved0" rwaccess="R" width="13"></bitfield>
    
  <bitfield begin="18" description="New in TPR: Latched Value of 3.3V IO UV Detect 0 = UV Detect Not Triggered 1 = UV Detect has Triggered" end="18" id="VDDS_3P3V_UVDET_LAT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="17" description="Latched value of UV detect of LOMULT 1.8V supply (AWR devices) For TPR, Latched Value of UV Detect of VDDA_OSC  0 = UV Detect Not Triggered 1 = UV Detect has Triggered" end="17" id="VDDA_OSC_UVDET_LAT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="16" description="Supp Detect output of APLL VCO 1.8V 0 = Supply Not detected 1 = Supply Detected Tied LO in TPR (Unused VMON)" end="16" id="SUPP_OK_APLLVCO18" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="15" description="HVMODE Status from VMON 1 = 3.3V VIO 0 = 1.8V VIO" end="15" id="HVMODE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="14" description="Ref CLK status at Wake-up 0 = REF CLK is present 1 = REF CLK is absent and CPU CLK Switched to RCOSC" end="14" id="LIMP_MODE_STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="13" description="XTAL Detect status at Wake-up 0 = XTAL absent 1 = XTAL Present" end="13" id="XTAL_DET_STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="12" description="RCOSC status at Wake-up 0 = RCOSC CLK absent 1 = RCOSC CLK Present" end="12" id="RCOSC_CLK_STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="11" description="Ref CLK status at Wake-up 0 = REF CLK absent 1 = REF CLK Present" end="11" id="REF_CLK_STATUS" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="10" description="Supp Detect output of LVDS 1.8V 0 = Supply Not detected 1 = Supply Detected Tied LO in TPR (Unused VMON)" end="10" id="SUPP_OK_VDDD18" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="9" description="UV Detect Status of SRAM 0 = UV Not Detected 1 = UV Detected Tied LO in TPR (Unused VMON)" end="9" id="SUPP_OK_SRAM12" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="8" description="Supp Detect output of RF2 1.4V Pin 0 = Supply Not detected 1 = Supply Detected Tied LO in TPR (Unused VMON)" end="8" id="SUPP_OK_RF2_14" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="7" description="Updated for 1642 ES2P0 Change name : Mux for VIN_13 OK in LDO bypass mode This output bit is always tied low Tied LO in TPR and AWR/IWR devices" end="7" id="SUPP_OK_RF14" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="Updated for 1642 ES2P0 Change name : Mux for VIN_13 OK in LDO bypass mode When RF_LDO_BYPASS_EN = 1, this bit will be high when the supply is > 0.75 When RF_LDO_BYPASS_EN = 0, this bit will be high when the supply is > 1.05 Tied LO in TPR (Unused VMON)" end="6" id="SUPP_OK_RF10" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Supp Detect output of IO 3.3V 0 = Supply Not detected 1 = Supply Detected" end="5" id="SUPP_OK_IO33" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="Supp Detect output of IO 1.8V 0 = Supply Not detected 1 = Supply Detected" end="4" id="SUPP_OK_IO18" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="Supp Detect output of CLK 1.8V 0 = Supply Not detected 1 = Supply Detected For TPR, Crude detection of VDDA_OSC" end="3" id="SUPP_OK_CLK18" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Supp Detect output of Ana 1.8V Tied LO in TPR (unused VMON) 0 = Supply Not detected 1 = Supply Detected" end="2" id="SUPP_OK_ANA18" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Latched Value of UV Detect 0 = UV Detect Not Triggered 1 = UV Detect has Triggered" end="1" id="CORE_UVDET_LAT" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Latched Value of OV Detect 0 = OV Detect Not Triggered 1 = OV Detect has Triggered" end="0" id="CORE_OVDET_LAT" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="ANA_REG_WU_SPARE_OUT_LOWV" description="" id="ANA_REG_WU_SPARE_OUT_LOWV" offset="0xC44" width="32">
    
  <bitfield begin="31" description="Reserved Reads return 0x0 and writes have no effect." end="8" id="Reserved0" rwaccess="R" width="24"></bitfield>
    
  <bitfield begin="7" description="UV Detect of Core Supply-Unlatched" end="7" id="CORE_UVDET_LOWV" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="6" description="OV Detect of Core Supply-Unlatched" end="6" id="CORE_OVDET_LOWV" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Internal Oscillator Control" end="5" id="INT_OSC_CTRL" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="4" description="Supply Detect Override Bit" end="4" id="SUPPDET_OV_CTRL" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="3" description="Status of VIO supply. 3.3V or 1.8V" end="3" id="HVMODE" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="2" description="Status of 1.8V IO Bias Supply" end="2" id="VDDS18DET" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="1" description="Status of 1.3V RF Supply" end="1" id="VDDARF_DET" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="0" description="Status of 1.8V CLK Supply" end="0" id="VDDCLK18DET" rwaccess="R" width="1"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW0" description="" id="HW_SPARE_RW0" offset="0xFD0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw0" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW1" description="" id="HW_SPARE_RW1" offset="0xFD4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw1" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW2" description="" id="HW_SPARE_RW2" offset="0xFD8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw2" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RW3" description="" id="HW_SPARE_RW3" offset="0xFDC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rw3" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO0" description="" id="HW_SPARE_RO0" offset="0xFE0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro0" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO1" description="" id="HW_SPARE_RO1" offset="0xFE4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro1" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO2" description="" id="HW_SPARE_RO2" offset="0xFE8" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro2" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_RO3" description="" id="HW_SPARE_RO3" offset="0xFEC" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_ro3" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_WPH" description="" id="HW_SPARE_WPH" offset="0xFF0" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="0" id="hw_spare_wph" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="HW_SPARE_REC" description="" id="HW_SPARE_REC" offset="0xFF4" width="32">
    
  <bitfield begin="31" description="Reserved for HW R&amp;D" end="31" id="hw_spare_rec31" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="30" description="Reserved for HW R&amp;D" end="30" id="hw_spare_rec30" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="29" description="Reserved for HW R&amp;D" end="29" id="hw_spare_rec29" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="28" description="Reserved for HW R&amp;D" end="28" id="hw_spare_rec28" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="27" description="Reserved for HW R&amp;D" end="27" id="hw_spare_rec27" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="26" description="Reserved for HW R&amp;D" end="26" id="hw_spare_rec26" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="25" description="Reserved for HW R&amp;D" end="25" id="hw_spare_rec25" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="24" description="Reserved for HW R&amp;D" end="24" id="hw_spare_rec24" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="23" description="Reserved for HW R&amp;D" end="23" id="hw_spare_rec23" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="22" description="Reserved for HW R&amp;D" end="22" id="hw_spare_rec22" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="21" description="Reserved for HW R&amp;D" end="21" id="hw_spare_rec21" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="20" description="Reserved for HW R&amp;D" end="20" id="hw_spare_rec20" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="19" description="Reserved for HW R&amp;D" end="19" id="hw_spare_rec19" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="18" description="Reserved for HW R&amp;D" end="18" id="hw_spare_rec18" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="17" description="Reserved for HW R&amp;D" end="17" id="hw_spare_rec17" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="16" description="Reserved for HW R&amp;D" end="16" id="hw_spare_rec16" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="15" description="Reserved for HW R&amp;D" end="15" id="hw_spare_rec15" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="14" description="Reserved for HW R&amp;D" end="14" id="hw_spare_rec14" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="13" description="Reserved for HW R&amp;D" end="13" id="hw_spare_rec13" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="12" description="Reserved for HW R&amp;D" end="12" id="hw_spare_rec12" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="11" description="Reserved for HW R&amp;D" end="11" id="hw_spare_rec11" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="10" description="Reserved for HW R&amp;D" end="10" id="hw_spare_rec10" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="9" description="Reserved for HW R&amp;D" end="9" id="hw_spare_rec9" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="8" description="Reserved for HW R&amp;D" end="8" id="hw_spare_rec8" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="7" description="Reserved for HW R&amp;D" end="7" id="hw_spare_rec7" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="6" description="Reserved for HW R&amp;D" end="6" id="hw_spare_rec6" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="5" description="Reserved for HW R&amp;D" end="5" id="hw_spare_rec5" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="4" description="Reserved for HW R&amp;D" end="4" id="hw_spare_rec4" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="3" description="Reserved for HW R&amp;D" end="3" id="hw_spare_rec3" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Reserved for HW R&amp;D" end="2" id="hw_spare_rec2" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Reserved for HW R&amp;D" end="1" id="hw_spare_rec1" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Reserved for HW R&amp;D" end="0" id="hw_spare_rec0" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK0" description="  - KICK0 component " id="LOCK0_KICK0" offset="0x1008" width="32">
    
  <bitfield begin="31" description=" - KICK0 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="LOCK0_KICK1" description="  - KICK1 component " id="LOCK0_KICK1" offset="0x100C" width="32">
    
  <bitfield begin="31" description=" - KICK1 component" end="0" id="" rwaccess="RW" width="32"></bitfield>
  </register>
  
  
  <register acronym="intr_raw_status" description=" Interrupt Raw Status/Set Register " id="intr_raw_status" offset="0x1010" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Raw status is read. Write a 1 to set the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enabled_status_clear" description=" Interrupt Enabled Status/Clear register " id="intr_enabled_status_clear" offset="0x1014" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error. Enabled status is read. Write a 1 to clear the status. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable" description=" Interrupt Enable register " id="intr_enable" offset="0x1018" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable. Write a 1 to set the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="intr_enable_clear" description=" Interrupt Enable Clear register " id="intr_enable_clear" offset="0x101C" width="32">
    
  <bitfield begin="3" description="Proxy0 access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="3" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="2" description="Kick access violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="2" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="1" description="Addressing violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="1" id="" rwaccess="RW" width="1"></bitfield>
    
  <bitfield begin="0" description="Protection violation error enable clear. Write a 1 to clear the enable. Writing a 0 has no effect." end="0" id="" rwaccess="RW" width="1"></bitfield>
  </register>
  
  
  <register acronym="eoi" description=" EOI register " id="eoi" offset="0x1020" width="32">
    
  <bitfield begin="7" description="EOI vector value. Write this with interrupt distribution value in the chip." end="0" id="" rwaccess="RW" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_address" description=" Fault Address register " id="fault_address" offset="0x1024" width="32">
    
  <bitfield begin="31" description="Fault Address." end="0" id="" rwaccess="R" width="32"></bitfield>
  </register>
  
  
  <register acronym="fault_type_status" description=" Fault Type Status register " id="fault_type_status" offset="0x1028" width="32">
    
  <bitfield begin="6" description="Non-secure access." end="6" id="" rwaccess="R" width="1"></bitfield>
    
  <bitfield begin="5" description="Fault Type   10_0000 = Supervisor read  fault  - priv = 1 dir = 1 dtype != 1    01_0000 = Supervisor write fault  - priv = 1 dir = 0   00_1000 = Supervisor execute fault - priv = 1 dir = 1 dtype = 1   00_0100 = User read  fault - priv = 0 dir = 1 dtype = 1   00_0010 = User write fault - priv = 0 dir = 0   00_0001 = User execute fault - priv = 0 dir = 1 dtype = 1   00_0000 = No fault" end="0" id="" rwaccess="R" width="6"></bitfield>
  </register>
  
  
  <register acronym="fault_attr_status" description=" Fault Attribute Status register " id="fault_attr_status" offset="0x102C" width="32">
    
  <bitfield begin="31" description="XID." end="20" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="19" description="Route ID." end="8" id="" rwaccess="R" width="12"></bitfield>
    
  <bitfield begin="7" description="Privilege ID." end="0" id="" rwaccess="R" width="8"></bitfield>
  </register>
  
  
  <register acronym="fault_clear" description=" Fault Clear register " id="fault_clear" offset="0x1030" width="32">
    
  <bitfield begin="0" description="Fault clear. Writing a 1 clears the current fault. Writing a 0 has no effect." end="0" id="" rwaccess="W" width="1"></bitfield>
  </register>
</module>
