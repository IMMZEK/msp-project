<?xml version="1.0" encoding="UTF-8"?>
<module id="UART" HW_revision="" XML_version="1" description="Universal Asynchronous Receive Transmit">
     <register id="RBR" acronym="RBR" offset="0x0000" width="32" description="Receiver Buffer Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DATA" width="8" begin="7" end="0" resetval="0" description="Received data" range="" rwaccess="R"></bitfield>
</register>
     <register id="THR" acronym="THR" offset="0x0000" width="32" description="Transmitter Holding Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DATA" width="8" begin="7" end="0" resetval="0" description="Data to transmit" range="" rwaccess="W"></bitfield>
</register>
     <register id="IER" acronym="IER" offset="0x0004" width="32" description="Interrupt Enable Register">
<bitfield id="_RESV_1" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="_RESV_2" width="1" begin="3" end="3" resetval="0" description="Reserved, but must always be written as a zero" range="" rwaccess="N"></bitfield>
<bitfield id="ELSI" width="1" begin="2" end="2" resetval="0" description="Enable Receiver Line Status Interrupt " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="" />
</bitfield>
<bitfield id="ETBEI" width="1" begin="1" end="1" resetval="0" description="Enable Transmitter Holding Register Empty Interrupt" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="" />
</bitfield>
<bitfield id="ERBI" width="1" begin="0" end="0" resetval="0" description="Enable Receiver Data Available Interrupt and Character Timeout indication Interrupt" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="" />
</bitfield>
</register>
     <register id="IIR" acronym="IIR" offset="0x0008" width="32" description="Interrupt Identification Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FIFOEN" width="2" begin="7" end="6" resetval="0" description="FIFOs Enabled Always 00b in Non-FIFO mode Set to 11b when bit 0 of the FCR register is set" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_3" width="2" begin="5" end="4" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INTID" width="3" begin="3" end="1" resetval="0" description="Encodes the different types of interrupt" range="" rwaccess="R">
<bitenum id="MODSTAT" value="0" token="MODSTAT" description="Modem Status (Priority 4) Lowest" />
<bitenum id="THRE" value="1" token="THRE" description="THR Empty (Priority 3)" />
<bitenum id="RDA" value="2" token="RDA" description="Received Data Available (Priority 2)" />
<bitenum id="RLS" value="3" token="RLS" description="Receiver Line Status (Priority 1) Highest" />
<bitenum id="CTI" value="6" token="CTI" description="Character Timeout Indication (Priority 2)" />
</bitfield>
<bitfield id="IPEND" width="1" begin="0" end="0" resetval="1" description="Interrupt Pending This bit is used either in a hardwire prioritized (nirq) or polled interrupt system" range="" rwaccess="R">
<bitenum id="NONE" value="1" token="NONE" description=" No interrupts pending" />
</bitfield>
</register>
     <register id="FCR" acronym="FCR" offset="0x0008" width="32" description="FIFO Control Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="RXFIFTL" width="2" begin="7" end="6" resetval="0" description="Receiver FIFO Trigger Level (In bytes)" range="" rwaccess="W">
<bitenum id="CHAR1" value="0" token="CHAR1" description="1 byte" />
<bitenum id="CHAR4" value="1" token="CHAR4" description="4 byte" />
<bitenum id="CHAR8" value="2" token="CHAR8" description="8 byte" />
<bitenum id="CHAR14" value="3" token="CHAR14" description="14 byte" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="5" end="4" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DMAMODE1" width="1" begin="3" end="3" resetval="0" description="DMA MODE1 enable if FIFOs are enabled. Always write 1 to DMAMODE1. After a hardware reset, change DMAMODE1 from 0 to 1. DMAMOD1 = 1 is a requirement for proper communication between the UART and the EDMA controller" range="" rwaccess="W">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disable DMA" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Enables MODE1" />
</bitfield>
<bitfield id="TXCLR" width="1" begin="2" end="2" resetval="0" description="Setting this bit clears the transmitter FIFO and resets the transmitter FIFO counter. The shift register is not cleared. The 1 that is written to this bit position is self-clearing" range="" rwaccess="W">
<bitenum id="CLR" value="1" token="CLR" description="Clears Tx FIFO" />
</bitfield>
<bitfield id="RXCLR" width="1" begin="1" end="1" resetval="0" description="Setting this bit resets the receiver FIFO counter. The shift register is not cleared. The 1 that is written to this bit position is self-clearing" range="" rwaccess="W">
<bitenum id="CLR" value="1" token="CLR" description="Clears Rx FIFO" />
</bitfield>
<bitfield id="FIFOEN" width="1" begin="0" end="0" resetval="0" description="Setting this bit enables the transmitter and receiver FIFOs. This bit must be set when other FCR bits are written to or they are not programmed. Clearing this bit clears the FIFO counters" range="" rwaccess="W">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disable FIFOs" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Enable FIFOs" />
</bitfield>
</register>
     <register id="LCR" acronym="LCR" offset="0x000C" width="32" description="Line Control Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DLAB" width="1" begin="7" end="7" resetval="0" description="Divisor Latch Access Bit This bit must be set to access the divisor latches of the baud generator during a read or write operation This bit must be cleared to access the receiver buffer register, the transmitter holding register, or the interrupt enable register" range="" rwaccess="RW"></bitfield>
<bitfield id="BC" width="1" begin="6" end="6" resetval="0" description="Break Control Bit" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Break condition is disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Break condition is transmitted to the receiving UART" />
</bitfield>
<bitfield id="SP" width="1" begin="5" end="5" resetval="0" description="Stick Parity Bit When this bit is set and even parity is selected, the parity bit is transmitted and checked as cleared When this bit is set and odd parity is selected, the parity bit is transmitted and checked as set When this bit is cleared, stick parity is disabled" range="" rwaccess="RW"></bitfield>
<bitfield id="EPS" width="1" begin="4" end="4" resetval="0" description="Even Parity Select When this bit is set and parity is enabled, even parity is selected (an even number of logic 1s is transmitted or checked in the data and parity bits) When this bit is cleared and parity is enabled, odd parity is selected (an odd number of logic 1s is transmitted or checked)" range="" rwaccess="RW"></bitfield>
<bitfield id="PEN" width="1" begin="3" end="3" resetval="0" description="Parity Enable  0: no parity bit is transmitted or checked 1: a parity bit is generated in transmitted data and is checked in received data between the last data word bit and the first stop bit " range="" rwaccess="RW"></bitfield>
<bitfield id="STB" width="1" begin="2" end="2" resetval="0" description="Number of Stop Bits Generated This bit specifies either one, one and a half, or two stop bits in each transmitted character. This bit is combined with the word length bits (LCR[1] and LCR[0]) determine the number of stop bits. The receiver clocks only the first stop bit regardless of the number of stop bits selected --------------------------------------------------------------------------------------------  Bit 2     Word Length                Number of Stop Bits Generated --------------------------------------------------------------------------------------------  0         Any word length                          1  1          5 bits                                        1.5  1          6 bits                                        2  1          7 bits                                        2  1          8 bits                                        2" range="" rwaccess="RW"></bitfield>
<bitfield id="WLS" width="2" begin="1" end="0" resetval="0" description="Word Length Select Number of bits in each transmitted or received serial character" range="" rwaccess="RW">
<bitenum id="BITS5" value="0" token="BITS5" description="5 bits" />
<bitenum id="BITS6" value="1" token="BITS6" description="6 bits" />
<bitenum id="BITS7" value="2" token="BITS7" description="7 bits" />
<bitenum id="BITS8" value="3" token="BITS8" description="8 bits" />
</bitfield>
</register>
     <register id="MCR" acronym="MCR" offset="0x0010" width="32" description="Modem Control Register">
<bitfield id="_RESV_1" width="26" begin="31" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="AFE" width="1" begin="5" end="5" resetval="0" description="Autoflow control enable.  Autoflow control allows the RTS and CTS signals to provide handshaking between UARTs during data transfer. When AFE = 1, the RTS bit determines the autoflow control enabled.  ---------------------------------------------------------------------- Bit 5   Bit 1     Autoflow Control Configuration ----------------------------------------------------------------------  1        1           Auto-rts and auto-cts enabled  1        0           Auto-cts only enabled  0        X           Auto-rts and auto-cts disabled" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Autoflow control is disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Autoflow control is enabled" />
</bitfield>
<bitfield id="LOOP" width="1" begin="4" end="4" resetval="0" description="Loop back mode enable. LOOP is used for the diagnostic testing using the loop back feature" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disable loop back mode" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Enable loop back mode" />
</bitfield>
<bitfield id="_RESV_4" width="2" begin="3" end="2" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="RTS" width="1" begin="1" end="1" resetval="0" description="RTS control bit. When AFE = 1, the RTS bit determines the autoflow control enabled." range="" rwaccess="RW">
<bitenum id="HIGH" value="0" token="HIGH" description="The associated output is forced high" />
<bitenum id="DISABLE" value="0" token="DISABLE" description="Auto-rts is disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Auto-rts is enabled" />
<bitenum id="LOW" value="1" token="LOW" description="The associated output is forced low " />
</bitfield>
<bitfield id="_RESV_6" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
     <register id="LSR" acronym="LSR" offset="0x0014" width="32" description="Line Status Register">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="RXFIFOE" width="1" begin="7" end="7" resetval="0" description="Receiver FIFO error.  In non-FIFO mode: 0. There has been no error, or RXFIFOE was cleared because the CPU read the erroneous character from the receiver buffer register (RBR). 1. There is a parity error, framing error, or break indicator in the receiver buffer register (RBR).  In FIFO mode: 0. There has been no error, or RXFIFOE was cleared because the CPU read the erroneous character from the receiver FIFO and there are no more errors in the receiver FIFO. 1. At least one parity error, framing error, or break indicator in the receiver FIFO." range="" rwaccess="R"></bitfield>
<bitfield id="TEMT" width="1" begin="6" end="6" resetval="1" description="Transmitter empty (TEMT) indicator.  In non-FIFO mode: 0. Either the transmitter holding register (THR) or the transmitter shift register (TSR) contains a data character. 1. Both the transmitter holding register (THR) and the transmitter shift register (TSR) are empty.  In FIFO mode: 0. Either the transmitter FIFO or the transmitter shift register (TSR) contains a data character. 1. Both the transmitter FIFO and the transmitter shift register (TSR) are empty." range="" rwaccess="R"></bitfield>
<bitfield id="THRE" width="1" begin="5" end="5" resetval="1" description="Transmitter holding register empty (THRE) indicator.  If the THRE bit is set and the corresponding interrupt enable bit is set (ETBEI = 1 in IER), an interrupt request is generated.  In non-FIFO mode: 0. Transmitter holding register (THR) is not empty. THR has been loaded by the CPU. 1. Transmitter holding register (THR) is empty (ready to accept a new character). The content of THR has been transferred to the transmitter shift register (TSR).  In FIFO mode: 0. Transmitter FIFO is not empty. At least one character has been written to the transmitter FIFO. You can write to the transmitter FIFO if it is not full. 1. Transmitter FIFO is empty. The last character in the FIFO has been transferred to the transmitter shift register (TSR)." range="" rwaccess="R"></bitfield>
<bitfield id="BI" width="1" begin="4" end="4" resetval="0" description="Break indicator.  The BI bit is set whenever the receive data input (RX) was held low for longer than a full-word transmission time. A full-word transmission time is defined as the total time to transmit the START, data, PARITY, and STOP bits. If the BI bit is set and the corresponding interrupt enable bit is set (ELSI = 1 in IER), an interrupt request is generated.  In non-FIFO mode: 0. No break has been detected, or the BI bit was cleared because the CPU read the erroneous character from the receiver buffer register (RBR). 1. A break has been detected with the character in the receiver buffer register (RBR).  In FIFO mode: 0. No break has been detected, or the BI bit was cleared because the CPU read the erroneous character from the receiver FIFO and the next character to be read from the FIFO has no break indicator. 1. A break has been detected with the character at the top of the receiver FIFO." range="" rwaccess="R"></bitfield>
<bitfield id="FE" width="1" begin="3" end="3" resetval="0" description="Framing error (FE) indicator.  A framing error occurs when the received character does not have a valid STOP bit. In response to a framing error, the UART sets the FE bit and waits until the signal on the RX pin goes high. Once the RX signal goes high, the receiver is ready to detect a new START bit and receive new data. If the FE bit is set and the corresponding interrupt enable bit is set (ELSI = 1 in IER), an interrupt request is generated.  In non-FIFO mode: 0. No framing error has been detected, or the FE bit was cleared because the CPU read the erroneous data from the receiver buffer register (RBR). 1. A framing error has been detected with the character in the receiver buffer register (RBR).  In FIFO mode: 0. No framing error has been detected, or the FE bit was cleared because the CPU read the erroneous data from the receiver FIFO and the next character to be read from the FIFO has no framing error. 1. A framing error has been detected with the character at the top of the receiver FIFO." range="" rwaccess="R"></bitfield>
<bitfield id="PE" width="1" begin="2" end="2" resetval="0" description="Parity error (PE) indicator. A parity error occurs when the parity of the received character does not match the parity selected with the EPS bit in the line control register (LCR). If the PE bit is set and the corresponding interrupt enable bit is set (ELSI = 1 in IER), an interrupt request is generated.  In non-FIFO mode: 0. No parity error has been detected, or the PE bit was cleared because the CPU read the erroneous data from the receiver buffer register (RBR). 1. A parity error has been detected with the character in the receiver buffer register (RBR).   In FIFO mode: 0. No parity error has been detected, or the PE bit was cleared because the CPU read the erroneous data from the receiver FIFO and the next character to be read from the FIFO has no parity error. 1. A parity error has been detected with the character at the top of the receiver FIFO." range="" rwaccess="R"></bitfield>
<bitfield id="OE" width="1" begin="1" end="1" resetval="0" description="Overrun error (OE) indicator An overrun error in the non-FIFO mode is different from an overrun error in the FIFO mode. If the OE bit is set and the corresponding interrupt enable bit is set (ELSI = 1 in IER), an interrupt request is generated.  In non-FIFO mode: 0. No overrun error has been detected, or the OE bit was cleared because the CPU read the content of the line status register (LSR). 1. Overrun error has been detected. Before the character in the receiver buffer register (RBR) could be read, it was overwritten by the next character arriving in RBR.  In FIFO mode: 0. No overrun error has been detected, or the OE bit was cleared because the CPU read the content of the line status register (LSR). 1. Overrun error has been detected. If data continues to fill the FIFO beyond the trigger level, an overrun error occurs only after the FIFO is full and the next character has been completely received in the shift register. An overrun error is indicated to the CPU as soon as it happens. The new character overwrites the character in the shift register, but it is not transferred to the FIFO." range="" rwaccess="R"></bitfield>
<bitfield id="DR" width="1" begin="0" end="0" resetval="0" description="Data-ready (DR) indicator for the receiver. If the DR bit is set and the corresponding interrupt enable bit is set (ERBI = 1 in IER), an interrupt request is generated.  In non-FIFO mode: 0. Data is not ready, or the DR bit was cleared because the character was read from the receiver buffer register (RBR). 1. Data is ready. A complete incoming character has been received and transferred into the receiver buffer register (RBR).  In FIFO mode: 0. Data is not ready, or the DR bit was cleared because all of the characters in the receiver FIFO have been read. 1. Data is ready. There is at least one unread character in the receiver FIFO. If the FIFO is empty, the DR bit is set as soon as a complete incoming character has been received and transferred into the FIFO. The DR bit remains set until the FIFO is empty again." range="" rwaccess="R"></bitfield>
</register>
     <register id="DLL" acronym="DLL" offset="0x0020" width="32" description="Divisor Latch (LSB)">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DLL" width="8" begin="7" end="0" resetval="0" description="The 8 least-significant bits (LSBs) of the 16-bit divisor for generation of the baud clock in the baud rate generator" range="" rwaccess="RW"></bitfield>
</register>
     <register id="DLH" acronym="DLH" offset="0x0024" width="32" description="Divisor Latch (MSB)">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DLH" width="8" begin="7" end="0" resetval="0" description="The 8 most-significant bits (MSBs) of the 16-bit divisor for generation of the baud clock in the baud rate generator" range="" rwaccess="RW"></bitfield>
</register>
     <register id="PID1" acronym="PID1" offset="0x0028" width="32" description="Peripheral ID Register 1 (Class/Revision)">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CLS" width="8" begin="15" end="8" resetval="1" description="Class of Peripheral" range="" rwaccess="R"></bitfield>
<bitfield id="REV" width="8" begin="7" end="0" resetval="1" description="Revision level of the UART" range="" rwaccess="R"></bitfield>
</register>
     <register id="PID2" acronym="PID2" offset="0x002C" width="32" description="Peripheral ID Register 2 (Type)">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TYP" width="8" begin="7" end="0" resetval="4" description="Type of peripheral" range="" rwaccess="R"></bitfield>
</register>
     <register id="PWREMU_MGMT" acronym="PWREMU_MGMT" offset="0x0030" width="32" description="Power Management and Emulation Register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="_RESV_2" width="1" begin="15" end="15" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="UTRST" width="1" begin="14" end="14" resetval="0" description="UART transmitter reset.  Resets and enables the transmitter" range="" rwaccess="RW">
<bitenum id="RESET" value="0" token="RESET" description="Transmitter is disabled and in reset state" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Transmitter is enabled" />
</bitfield>
<bitfield id="URRST" width="1" begin="13" end="13" resetval="0" description="UART receiver reset.  Resets and enables the receiver" range="" rwaccess="RW">
<bitenum id="RESET" value="0" token="RESET" description="Receiver is disabled and in reset state" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Receiver is enabled" />
</bitfield>
<bitfield id="_RESV_5" width="12" begin="12" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FREE" width="1" begin="0" end="0" resetval="0" description="Free-running enable mode bit. This bit determines the emulation mode functionality of the UART. In suspended mode, the UART can handle register read/write requests, but does not generate any transmission/reception, interrupts or events." range="" rwaccess="RW">
<bitenum id="STOP" value="0" token="STOP" description="If a transmission is not in progress, the UART stops immediately. If a transmission is in progress, the UART stops after completion of the one word transmission" />
<bitenum id="RUN" value="1" token="RUN" description="Free-running mode is enabled; UART continues to run normally" />
</bitfield>
</register>
</module>
