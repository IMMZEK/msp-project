<module name="MCBSP1_DSP" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="MCBSPLP_DRR_REG" acronym="MCBSPLP_DRR_REG" offset="0x0" width="32" description="McBSPLP data receive register">
    <bitfield id="DRR" width="32" begin="31" end="0" resetval="0x0000 0000" description="Data receive register" range="" rwaccess="R"/>
  </register>
  <register id="MCBSPLP_DXR_REG" acronym="MCBSPLP_DXR_REG" offset="0x8" width="32" description="McBSPLP data transmit register">
    <bitfield id="DXR" width="32" begin="31" end="0" resetval="0x0000 0000" description="Data transmit register" range="" rwaccess="W"/>
  </register>
  <register id="MCBSPLP_SPCR2_REG" acronym="MCBSPLP_SPCR2_REG" offset="0x10" width="32" description="McBSPLP serial port control register 2">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="FREE" width="1" begin="9" end="9" resetval="0" description="Free Running Mode (When this bit is set, the module ignores the Msuspend input)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FREE_0" description="Free running mode is disabled"/>
      <bitenum value="1" id="1" token="FREE_1" description="Free running mode is enabled"/>
    </bitfield>
    <bitfield id="SOFT" width="1" begin="8" end="8" resetval="0" description="Soft Bit" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SOFT_0" description="SOFT mode is disabled: the module stops its activity immediately following MSuspend assertion"/>
      <bitenum value="1" id="1" token="SOFT_1" description="SOFT mode is enabled: the module freezes its state after completion of the current operation when MSuspend is asserted"/>
    </bitfield>
    <bitfield id="FRST" width="1" begin="7" end="7" resetval="0" description="Frame-Sync Generator Reset" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FRST_0" description="Frame-sync logic is reset. Frame-sync signal FSG is not generated by the sample-rate generator"/>
      <bitenum value="1" id="1" token="FRST_1" description="Frame-sync signal FSG is generated after (FPER+1) number of CLKG clocks; that is, all frame counters are loaded with their programmed values"/>
    </bitfield>
    <bitfield id="GRST" width="1" begin="6" end="6" resetval="0" description="Sample-Rate Generator Reset" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="GRST_0" description="SRG is reset"/>
      <bitenum value="1" id="1" token="GRST_1" description="SRG is pulled out of reset. CLKG is driven as per programmed value in SRG registers (SRGR[1,2])"/>
    </bitfield>
    <bitfield id="XINTM" width="2" begin="5" end="4" resetval="0x0" description="Transmit Interrupt Mode (legacy)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XINTM_0" description="XINT is driven by XRDY"/>
      <bitenum value="1" id="1" token="XINTM_1" description="XINT generated by end-of-frame"/>
      <bitenum value="2" id="2" token="XINTM_2" description="XINT generated by a new frame synchronization"/>
      <bitenum value="3" id="3" token="XINTM_3" description="XINT generated by XSYNCERR"/>
    </bitfield>
    <bitfield id="XSYNCERR" width="1" begin="3" end="3" resetval="0" description="Transmit Synchronization Error (writing 0 to this bit clear the legacy transmit interrupt if asserted due to XSYNCERR condition)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XSYNCERR_0" description="No synchronization error"/>
      <bitenum value="1" id="1" token="XSYNCERR_1" description="Synchronization error detected by McBSP"/>
    </bitfield>
    <bitfield id="XEMPTY" width="1" begin="2" end="2" resetval="0" description="Transmit Shift Register XSR Empty" range="" rwaccess="R">
      <bitenum value="0" id="0" token="XEMPTY_0_r" description="XSR is empty"/>
      <bitenum value="1" id="1" token="XEMPTY_1_r" description="XSR is not empty"/>
    </bitfield>
    <bitfield id="XRDY" width="1" begin="1" end="1" resetval="0" description="Transmitter ready" range="" rwaccess="R">
      <bitenum value="0" id="0" token="XRDY_0_r" description="Transmitter is not ready."/>
      <bitenum value="1" id="1" token="XRDY_1_r" description="Transmitter is ready for new data in DXR"/>
    </bitfield>
    <bitfield id="XRST" width="1" begin="0" end="0" resetval="0" description="Transmitter reset. This resets and enables the transmitter." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XRST_0" description="The serial port transmitter is disabled and in reset state."/>
      <bitenum value="1" id="1" token="XRST_1" description="The serial port transmitter is enabled."/>
    </bitfield>
  </register>
  <register id="MCBSPLP_SPCR1_REG" acronym="MCBSPLP_SPCR1_REG" offset="0x14" width="32" description="McBSPLP serial port control register 1">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ALB" width="1" begin="15" end="15" resetval="0" description="Analog Loopback Mode" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ALB_0" description="Analog loopback mode disabled"/>
      <bitenum value="1" id="1" token="ALB_1" description="Analog loopback mode enabled"/>
    </bitfield>
    <bitfield id="RJUST" width="2" begin="14" end="13" resetval="0x0" description="Receive Sign-Extension and Justification Mode" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RJUST_0" description="Right-justify and zero-fill MSBs in DRR"/>
      <bitenum value="1" id="1" token="RJUST_1" description="Right-justify and sign-extend MSBs in DRR"/>
      <bitenum value="2" id="2" token="RJUST_2" description="Left-justify and zero-fill LSBs in DRR"/>
      <bitenum value="3" id="3" token="RJUST_3" description="Reserved"/>
    </bitfield>
    <bitfield id="RESERVED" width="5" begin="12" end="8" resetval="0x00" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DXENA" width="1" begin="7" end="7" resetval="0" description="DX Enabler" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DXENA_0" description="DX enabler is off"/>
      <bitenum value="1" id="1" token="DXENA_1" description="DX enabler is on"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RINTM" width="2" begin="5" end="4" resetval="0x0" description="Receive Interrupt Mode (legacy)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RINTM_0" description="RINT driven by RRDY (that is, end of word) and end of frame in A-bis mode"/>
      <bitenum value="1" id="1" token="RINTM_1" description="RINT generated by end-of-block or end-of-frame in multichannel operation"/>
      <bitenum value="2" id="2" token="RINTM_2" description="RINT generated by a new frame synchronization"/>
      <bitenum value="3" id="3" token="RINTM_3" description="RINT generated by RSYNCERR"/>
    </bitfield>
    <bitfield id="RSYNCERR" width="1" begin="3" end="3" resetval="0" description="Receive Synchronization Error (writing 0 to this bit clear the legacy receive interrupt if asserted due to RSYNCERR condition)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RSYNCERR_0" description="No synchronization error"/>
      <bitenum value="1" id="1" token="RSYNCERR_1" description="Synchronization error detected by McBSP"/>
    </bitfield>
    <bitfield id="RFULL" width="1" begin="2" end="2" resetval="0" description="Receive Shift Register (RSR]) Full" range="" rwaccess="R">
      <bitenum value="0" id="0" token="RFULL_0_r" description="DRR is not read, RB is full and RSR is also full with new word"/>
      <bitenum value="1" id="1" token="RFULL_1_r" description="RB is not in overrun condition"/>
    </bitfield>
    <bitfield id="RRDY" width="1" begin="1" end="1" resetval="0" description="Receiver Ready" range="" rwaccess="R">
      <bitenum value="0" id="0" token="RRDY_0_r" description="Receiver is not ready"/>
      <bitenum value="1" id="1" token="RRDY_1_r" description="Receiver is ready with data to be read from DRR"/>
    </bitfield>
    <bitfield id="RRST" width="1" begin="0" end="0" resetval="0" description="Receiver reset. This resets and enables the receiver." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RRST_0" description="The serial port receiver is disabled and in reset state."/>
      <bitenum value="1" id="1" token="RRST_1" description="The serial port receiver is enabled."/>
    </bitfield>
  </register>
  <register id="MCBSPLP_RCR2_REG" acronym="MCBSPLP_RCR2_REG" offset="0x18" width="32" description="McBSPLP receive control register 2">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RPHASE" width="1" begin="15" end="15" resetval="0" description="Receive Phases" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RPHASE_0" description="Single-phase frame"/>
      <bitenum value="1" id="1" token="RPHASE_1" description="Dual-phase frame"/>
    </bitfield>
    <bitfield id="RFRLEN2" width="7" begin="14" end="8" resetval="0x00" description="Receive Frame Length 2 Single-phase frame selected: RFRLEN2=don't care Dual-phase frame selected: RFRLEN2=000 0000 - 1 word per second phase (other values are reserved)" range="" rwaccess="RW"/>
    <bitfield id="RWDLEN2" width="3" begin="7" end="5" resetval="0x0" description="Receive Word Length 2" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RWDLEN2_0" description="8 bits"/>
      <bitenum value="1" id="1" token="RWDLEN2_1" description="12 bits"/>
      <bitenum value="2" id="2" token="RWDLEN2_2" description="16 bits"/>
      <bitenum value="3" id="3" token="RWDLEN2_3" description="20 bits"/>
      <bitenum value="4" id="4" token="RWDLEN2_4" description="24 bits"/>
      <bitenum value="5" id="5" token="RWDLEN2_5" description="32 bits"/>
      <bitenum value="6" id="6" token="RWDLEN2_6" description="Reserved (do not use)"/>
      <bitenum value="7" id="7" token="RWDLEN2_7" description="Reserved (do not use)"/>
    </bitfield>
    <bitfield id="RREVERSE" width="2" begin="4" end="3" resetval="0x0" description="Receive reverse mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RREVERSE_0" description="Data transfer starts with MSB first."/>
      <bitenum value="1" id="1" token="RREVERSE_1" description="Data transfer starts with LSB first."/>
      <bitenum value="2" id="2" token="RREVERSE_2" description="Reserved (do not use)"/>
      <bitenum value="3" id="3" token="RREVERSE_3" description="Reserved (do not use)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="2" end="2" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RDATDLY" width="2" begin="1" end="0" resetval="0x0" description="Receive Data Delay" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RDATDLY_0" description="0-bit data delay"/>
      <bitenum value="1" id="1" token="RDATDLY_1" description="1-bit data delay"/>
      <bitenum value="2" id="2" token="RDATDLY_2" description="2-bit data delay"/>
      <bitenum value="3" id="3" token="RDATDLY_3" description="Reserved"/>
    </bitfield>
  </register>
  <register id="MCBSPLP_RCR1_REG" acronym="MCBSPLP_RCR1_REG" offset="0x1C" width="32" description="McBSPLP receive control register 1">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x00000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RFRLEN1" width="7" begin="14" end="8" resetval="0x00" description="Receive Frame Length 1 Single-phase frame selected: RFRLEN1=000 0000 - 1 word per frame RFRLEN1=000 0001 - 2 words per frame RFRLEN1=111 1111 - 128 words per frame Dual-phase frame selected: RFRLEN1=000 0000 - 1 word per phase (other values are reserved)" range="" rwaccess="RW"/>
    <bitfield id="RWDLEN1" width="3" begin="7" end="5" resetval="0x0" description="Receive Word Length 1" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RWDLEN1_0" description="8 bits"/>
      <bitenum value="1" id="1" token="RWDLEN1_1" description="12 bits"/>
      <bitenum value="2" id="2" token="RWDLEN1_2" description="16 bits"/>
      <bitenum value="3" id="3" token="RWDLEN1_3" description="20 bits"/>
      <bitenum value="4" id="4" token="RWDLEN1_4" description="24 bits"/>
      <bitenum value="5" id="5" token="RWDLEN1_5" description="32 bits"/>
      <bitenum value="6" id="6" token="RWDLEN1_6" description="Reserved (do not use)"/>
      <bitenum value="7" id="7" token="RWDLEN1_7" description="Reserved (do not use)"/>
    </bitfield>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="MCBSPLP_XCR2_REG" acronym="MCBSPLP_XCR2_REG" offset="0x20" width="32" description="McBSPLP transmit control register 2">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XPHASE" width="1" begin="15" end="15" resetval="0" description="Transmit Phases" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XPHASE_0" description="Single-phase frame"/>
      <bitenum value="1" id="1" token="XPHASE_1" description="Dual-phase frame"/>
    </bitfield>
    <bitfield id="XFRLEN2" width="7" begin="14" end="8" resetval="0x00" description="Transmit Frame Length 2 Single-phase frame selected: XFRLEN2=don't care Dual-phase frame selected: XFRLEN2=000 0000 - 1 word per second phase (other values are reserved)" range="" rwaccess="RW"/>
    <bitfield id="XWDLEN2" width="3" begin="7" end="5" resetval="0x0" description="Transmit Word Length 2" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XWDLEN2_0" description="8 bits"/>
      <bitenum value="1" id="1" token="XWDLEN2_1" description="12 bits"/>
      <bitenum value="2" id="2" token="XWDLEN2_2" description="16 bits"/>
      <bitenum value="3" id="3" token="XWDLEN2_3" description="20 bits"/>
      <bitenum value="4" id="4" token="XWDLEN2_4" description="24 bits"/>
      <bitenum value="5" id="5" token="XWDLEN2_5" description="32 bits"/>
      <bitenum value="6" id="6" token="XWDLEN2_6" description="Reserved (do not use)"/>
      <bitenum value="7" id="7" token="XWDLEN2_7" description="Reserved (do not use)"/>
    </bitfield>
    <bitfield id="XREVERSE" width="2" begin="4" end="3" resetval="0x0" description="Transmit reverse mode." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XREVERSE_0" description="Data transfer starts with MSB first."/>
      <bitenum value="1" id="1" token="XREVERSE_1" description="Data transfer starts with LSB first."/>
      <bitenum value="2" id="2" token="XREVERSE_2" description="Reserved (do not use)"/>
      <bitenum value="3" id="3" token="XREVERSE_3" description="Reserved (do not use)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="2" end="2" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XDATDLY" width="2" begin="1" end="0" resetval="0x0" description="Transmit Data Delay" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XDATDLY_0" description="0-bit data delay"/>
      <bitenum value="1" id="1" token="XDATDLY_1" description="1-bit data delay"/>
      <bitenum value="2" id="2" token="XDATDLY_2" description="2-bit data delay"/>
      <bitenum value="3" id="3" token="XDATDLY_3" description="Reserved"/>
    </bitfield>
  </register>
  <register id="MCBSPLP_XCR1_REG" acronym="MCBSPLP_XCR1_REG" offset="0x24" width="32" description="McBSPLP transmit control register 1">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x00000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XFRLEN1" width="7" begin="14" end="8" resetval="0x00" description="Transmit Frame Length 1 Single-phase frame selected: XFRLEN1=000 0000 - 1 word per frame XFRLEN1=000 0001 - 2 words per frame XFRLEN1=111 1111 - 128 words per frame Dual-phase frame selected: XFRLEN1=000 0000 - 1 word per phase (other values are reserved)" range="" rwaccess="RW"/>
    <bitfield id="XWDLEN1" width="3" begin="7" end="5" resetval="0x0" description="Transmit Word Length 1" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XWDLEN1_0" description="8 bits"/>
      <bitenum value="1" id="1" token="XWDLEN1_1" description="12 bits"/>
      <bitenum value="2" id="2" token="XWDLEN1_2" description="16 bits"/>
      <bitenum value="3" id="3" token="XWDLEN1_3" description="20 bits"/>
      <bitenum value="4" id="4" token="XWDLEN1_4" description="24 bits"/>
      <bitenum value="5" id="5" token="XWDLEN1_5" description="32 bits"/>
      <bitenum value="6" id="6" token="XWDLEN1_6" description="Reserved (do not use)"/>
      <bitenum value="7" id="7" token="XWDLEN1_7" description="Reserved (do not use)"/>
    </bitfield>
    <bitfield id="RESERVED" width="5" begin="4" end="0" resetval="0x00" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="MCBSPLP_SRGR2_REG" acronym="MCBSPLP_SRGR2_REG" offset="0x28" width="32" description="McBSPLP sample rate generator register 2">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="GSYNC" width="1" begin="15" end="15" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="GSYNC_0" description="The SRG clock (CLKG) is free running."/>
      <bitenum value="1" id="1" token="GSYNC_1" description="The SRG clock (CLKG) is running. But CLKG is resynchronized and frame-sync signal (FSG) is generated only after detecting the receive frame-sync signal (FSR). Also, frame period, FPER, is a don't care because the period is dictated by the external frame-sync pulse."/>
    </bitfield>
    <bitfield id="CLKSP" width="1" begin="14" end="14" resetval="0" description="CLKS Polarity Clock Edge Select Only used when the external clock CLKS drives the SRG clock (CLKSM=0)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLKSP_0" description="Rising edge of CLKG and FSG."/>
      <bitenum value="1" id="1" token="CLKSP_1" description="Falling edge of CLKG and FSG."/>
    </bitfield>
    <bitfield id="CLKSM" width="1" begin="13" end="13" resetval="1" description="McBSPLP Sample Rate Generator Clock Mode" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLKSM_0" description="SCLKME=0: SRG clock derived from the CLKS pin. SCLKME=1: SRG clock derived from the CLKRI pin."/>
      <bitenum value="1" id="1" token="CLKSM_1" description="SCLKME=0: SRG clock derived from the CPU clock. SCLKME=1: SRG clock derived from the CLKXI clock."/>
    </bitfield>
    <bitfield id="FSGM" width="1" begin="12" end="12" resetval="0" description="Sample Rate Generator Transmit Frame-Synchronization Mode Used when FSXM=1 in the PCR." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FSGM_0" description="Transmit frame-sync signal (FSX) is generated when transmit buffer is not empty When FSGM=0, FPER and FWID are used to determine the frame-sync period and width (external FSX is gated by the buffer empty condition)."/>
      <bitenum value="1" id="1" token="FSGM_1" description="Transmit frame-sync signal driven by the SRG frame-sync signal, FSG."/>
    </bitfield>
    <bitfield id="FPER" width="12" begin="11" end="0" resetval="0x000" description="Frame Period. This field plus 1 determines when the next frame-sync signal becomes active. Range: 1 to 4096 CLKG periods" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_SRGR1_REG" acronym="MCBSPLP_SRGR1_REG" offset="0x2C" width="32" description="McBSPLP sample rate generator register 1">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="FWID" width="8" begin="15" end="8" resetval="0x00" description="Frame Width. This field plus 1 determines the width of the frame-sync pulse, FSG, during its active period. Range: 1 to 256 CLKG periods." range="" rwaccess="RW"/>
    <bitfield id="CLKGDV" width="8" begin="7" end="0" resetval="0x01" description="Sample Rate Generator Clock Divider This value is used as the divide-down number to generate the required SRG clock frequency. Default value is 1." range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_MCR2_REG" acronym="MCBSPLP_MCR2_REG" offset="0x30" width="32" description="McBSPLP multi channel register 2">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XMCME" width="1" begin="9" end="9" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XMCME_0" description="2-partition mode: Only partitions A and B are used. You can control up to 32 channels in the transmit multichannel selection mode selected with the XMCM bits. If XMCM = 01b or 10b, assign 16 channels to partition A with the XPABLK bits. Assign 16 channels to partition B with the XPBBLK bits. If XMCM = 11b (for symmetric transmission and reception), assign 16 channels to receive partition A with the RPABLK bits. Assign 16 channels to receive partition B with the RPBBLK bits. You control the channels with the appropriate transmit channel enable registers: XCERA: Channels in partition A XCERB: Channels in partition B"/>
      <bitenum value="1" id="1" token="XMCME_1" description="8-partition mode: All partitions (A through H) are used. You can control up to 128 channels in the transmit multichannel selection mode selected with the XMCM bits. You control the channels with the appropriate transmit channel enable registers: XCERA: Channels 0 through 15 XCERB: Channels 16 through 31 XCERC: Channels 32 through 47 XCERD: Channels 48 through 63 XCERE: Channels 64 through 79 XCERF: Channels 80 through 95 XCERG: Channels 96 through 111 XCERH: Channels 112 through 127"/>
    </bitfield>
    <bitfield id="XPBBLK" width="2" begin="8" end="7" resetval="0x0" description="Transmit Partition B Block (legacy)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XPBBLK_0" description="Block 1. Channel 16 to channel 31"/>
      <bitenum value="1" id="1" token="XPBBLK_1" description="Block 3. Channel 48 to channel 63"/>
      <bitenum value="2" id="2" token="XPBBLK_2" description="Block 5. Channel 80 to channel 95"/>
      <bitenum value="3" id="3" token="XPBBLK_3" description="Block 7. Channel 112 to channel 127"/>
    </bitfield>
    <bitfield id="XPABLK" width="2" begin="6" end="5" resetval="0x0" description="Transmit Partition A Block (legacy)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XPABLK_0" description="Block 0. Channel 0 to channel 15"/>
      <bitenum value="1" id="1" token="XPABLK_1" description="Block 2. Channel 32 to channel 47"/>
      <bitenum value="2" id="2" token="XPABLK_2" description="Block 4. Channel 64 to channel 79"/>
      <bitenum value="3" id="3" token="XPABLK_3" description="Block 6. Channel 96 to channel 111"/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="4" end="2" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XMCM" width="2" begin="1" end="0" resetval="0x0" description="Transmit Multichannel Selection Enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XMCM_0" description="All channels enabled without masking (DX is always driven during transmission of data)."/>
      <bitenum value="1" id="1" token="XMCM_1" description="All channels disabled and therefore masked by default. Required channels are selected by enabling XP(A/B)BLK and XCER(A/B) appropriately. Also, these selected channels are not masked and therefore DX is always driven."/>
      <bitenum value="2" id="2" token="XMCM_2" description="All channels enabled, but masked. Selected channels enabled via XP(A/B)BLK and XCER(A/B) are unmasked."/>
      <bitenum value="3" id="3" token="XMCM_3" description="All channels disabled and therefore masked by default. Required channels are selected by enabling RP(A/B)BLK and RCER(A/B) appropriately. Selected channels can be unmasked by RP(A/B)BLK and XCER(A/B). This mode is used for symetric transmit and receive operation."/>
    </bitfield>
  </register>
  <register id="MCBSPLP_MCR1_REG" acronym="MCBSPLP_MCR1_REG" offset="0x34" width="32" description="McBSPLP multi channel register 1">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RMCME" width="1" begin="9" end="9" resetval="0" description="(legacy)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RMCME_0" description="2-partition mode. Only partitions A and B are used. You can control up to 32 channels in the receive multichannel selection mode (RMCM = 1). Assign 16 channels to partition A with the RPABLK bits. Assign 16 channels to partition B with the RPBBLK bits. You control the channels with the apropriate receive channel enable registers: RCERA: Channels in partition A RCERB: Channels in partition B"/>
      <bitenum value="1" id="1" token="RMCME_1" description="8-partition mode: All partitions (A through H) are used. You can control up to 128 channels in the receive multichannel selection mode. You control the channels with the appropriate receive channel enable registers: RCERA: Channels 0 through 15 RCERB: Channels 16 through 31 RCERC: Channels 32 through 47 RCERD: Channels 48 through 63 RCERE: Channels 64 through 79 RCERF: Channels 80 through 95 RCERG: Channels 96 through 111 RCERH: Channels 112 through 127"/>
    </bitfield>
    <bitfield id="RPBBLK" width="2" begin="8" end="7" resetval="0x0" description="Receive Partition B Block (legacy)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RPBBLK_0" description="Block 1. Channel 16 to channel 31"/>
      <bitenum value="1" id="1" token="RPBBLK_1" description="Block 3. Channel 48 to channel 63"/>
      <bitenum value="2" id="2" token="RPBBLK_2" description="Block 5. Channel 80 to channel 95"/>
      <bitenum value="3" id="3" token="RPBBLK_3" description="Block 7. Channel 112 to channel 127"/>
    </bitfield>
    <bitfield id="RPABLK" width="2" begin="6" end="5" resetval="0x0" description="Receive Partition A Block (legacy)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RPABLK_0" description="Block 0. Channel 0 to channel 15"/>
      <bitenum value="1" id="1" token="RPABLK_1" description="Block 2. Channel 32 to channel 47"/>
      <bitenum value="2" id="2" token="RPABLK_2" description="Block 4. Channel 64 to channel 79"/>
      <bitenum value="3" id="3" token="RPABLK_3" description="Block 6. Channel 96 to channel 111"/>
    </bitfield>
    <bitfield id="RESERVED" width="4" begin="4" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RMCM" width="1" begin="0" end="0" resetval="0" description="Receive Multichannel Selection Enable" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RMCM_0" description="All 128 channels"/>
      <bitenum value="1" id="1" token="RMCM_1" description="All channels disabled by default. Required channels are selected by enabling RP(A/B)BLK and RCER(A/B) appropriately"/>
    </bitfield>
  </register>
  <register id="MCBSPLP_RCERA_REG" acronym="MCBSPLP_RCERA_REG" offset="0x38" width="32" description="McBSPLP receive channel enable register partition A">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RCERA" width="16" begin="15" end="0" resetval="0x0000" description="Receive Channel Enable RCERA n=0 Disables reception of n-th channel in an even-numbered block in partition A RCERA n=1 Enables reception of n-th channel in an even-numbered block in partition A" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_RCERB_REG" acronym="MCBSPLP_RCERB_REG" offset="0x3C" width="32" description="McBSPLP receive channel enable register partition B">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RCERB" width="16" begin="15" end="0" resetval="0x0000" description="Receive Channel Enable RCERB n=0 Disables reception of n-th channel in a even-numbered block in partition B RCERB n=1 Enables reception of n-th channel in a even-numbered block in partition B" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_XCERA_REG" acronym="MCBSPLP_XCERA_REG" offset="0x40" width="32" description="McBSPLP transmit channel enable register partition A">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XCERA" width="16" begin="15" end="0" resetval="0x0000" description="Transmit Channel Enable XCERA n=0 Disables transmission of n-th channel in an event-numbered block in partition A XCERA n=1 Enables transmission of n-th channel in an event-numbered block in partition A" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_XCERB_REG" acronym="MCBSPLP_XCERB_REG" offset="0x44" width="32" description="McBSPLP transmit channel enable register partition B">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XCERB" width="16" begin="15" end="0" resetval="0x0000" description="Transmit Channel Enable XCERB n=0 Disables transmission of n-th channel in an even-numbered block in partition B XCERB n=1 Enables transmission of n-th channel in an even-numbered block in partition B" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_PCR_REG" acronym="MCBSPLP_PCR_REG" offset="0x48" width="32" description="McBSPLP pin control register">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x00000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="IDLE_EN" width="1" begin="14" end="14" resetval="0" description="Idle enable. This bit allows stopping all the clocks in the MCBSPLP. (legacy)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IDLE_EN_0" description="The McBSP is running"/>
      <bitenum value="1" id="1" token="IDLE_EN_1" description="The clocks in the McBSP are shut off when both IDLE_EN=1 and peripheral domain is in idle mode"/>
    </bitfield>
    <bitfield id="XIOEN" width="1" begin="13" end="13" resetval="0" description="Transmit General Purpose I/O Mode only when XRST=0 in SPCR[1,2] (legacy)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XIOEN_0" description="DX, FSX and CLKX are configured as serial port pins and do not function as general-purpose I/Os."/>
      <bitenum value="1" id="1" token="XIOEN_1" description="DX pin is a general purpose output. FSX and CLKX are general purpose I/Os. These serial port pins do not perform serial port operation."/>
    </bitfield>
    <bitfield id="RIOEN" width="1" begin="12" end="12" resetval="0" description="Receive General Purpose I/O Mode when RRST=0 in SPCR[1,2] (legacy)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RIOEN_0" description="DR, FSR, CLKR and CLKS are configured as serial port pins and do not function as general-purpose I/Os."/>
      <bitenum value="1" id="1" token="RIOEN_1" description="DR and CLKS pins are general purpose inputs; FSR and CLKR are general purpose I/Os. These serial port pins do not perform serial port operation. The CLKS pin is affected by a combination of RRST and RIOEN signals of the receiver."/>
    </bitfield>
    <bitfield id="FSXM" width="1" begin="11" end="11" resetval="0" description="Transmit Frame-Synchronization Mode" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FSXM_0" description="Frame-sync signal derived from an external source"/>
      <bitenum value="1" id="1" token="FSXM_1" description="Frame synchronization is determined by the SRG frame-sync mode bit FSGM in SRGR2."/>
    </bitfield>
    <bitfield id="FSRM" width="1" begin="10" end="10" resetval="0" description="Receive Frame-Synchronization Mode" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FSRM_0" description="Frame-sync pulses generated by an external device. FSR is an input pin."/>
      <bitenum value="1" id="1" token="FSRM_1" description="Frame synchronization generated internally by SRG. FSR is an output pin except when GSYNC=1 in SRGR."/>
    </bitfield>
    <bitfield id="CLKXM" width="1" begin="9" end="9" resetval="0" description="Transmitter Clock Mode" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLKXM_0" description="Transmitter clock is driven by an external clock with CLKX as an input pin."/>
      <bitenum value="1" id="1" token="CLKXM_1" description="CLKX is an output pin and is driven by the internal sample rate generator."/>
    </bitfield>
    <bitfield id="CLKRM" width="1" begin="8" end="8" resetval="0" description="Receiver Clock Mode" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLKRM_0" description="Case 1: Digital loopback mode not set (DLB=0) in SPCR1: Receive clock (CLKR) is an input driven by an externaal clock. Case 2: Digital loopback mode set (DLB=1) in SPCR1: Receive clock (not the CLKR pin) is driven by transmit clock (CLKX) which is based on the CLKXM bit in the PCR. CLKR pin is in high-impedance."/>
      <bitenum value="1" id="1" token="CLKRM_1" description="Case 1: Digital loopback mode not set (DLB=0) in SPCR1: CLKR is an output pin and is driven by the internal SRG. Case 2: Digital loopback mode set (DLB=1) in SPCR1: CLKR is an output pin and is driven by the transmit clock. The transmit clock is derived based on the CLKRM bit in the PCR."/>
    </bitfield>
    <bitfield id="SCLKME" width="1" begin="7" end="7" resetval="0" description="The frequency of CLKG is: CLKG frequency = (Input clock frequency) / (CLKGDV + 1) SCLKME is used in conjunction with the CLKSM bit to select the input clock:" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SCLKME_0" description="CLKSM = 0: Signal on CLKS pin CLKSM = 1: CPU clock"/>
      <bitenum value="1" id="1" token="SCLKME_1" description="CLKSM = 0: Signal on CLKR pin CLKSM = 1: Signal on CLKX pin"/>
    </bitfield>
    <bitfield id="CLKS_STAT" width="1" begin="6" end="6" resetval="0" description="CLKS pin status. Reflects value on CLKS pin when selected as a general purpose input. (legacy)" range="" rwaccess="R">
      <bitenum value="0" id="0" token="CLKS_STAT_0_r" description="The signal on the CLKS pin is low"/>
      <bitenum value="1" id="1" token="CLKS_STAT_1_r" description="The signal on the CLKS pin is high"/>
    </bitfield>
    <bitfield id="DX_STAT" width="1" begin="5" end="5" resetval="0" description="DX pin status. Reflects value driven on to DX pin when selected as a general purpose output. (legacy)" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DX_STAT_0" description="Drive the signal on the DX pin low"/>
      <bitenum value="1" id="1" token="DX_STAT_1" description="Drive the signal on the DX pin high"/>
    </bitfield>
    <bitfield id="DR_STAT" width="1" begin="4" end="4" resetval="0" description="DR pin status. Reflects value on DR pin when selected as a general purpose input. (legacy)" range="" rwaccess="R">
      <bitenum value="0" id="0" token="DR_STAT_0_r" description="The signal on DR pin is low"/>
      <bitenum value="1" id="1" token="DR_STAT_1_r" description="The signal on DR pin is high"/>
    </bitfield>
    <bitfield id="FSXP" width="1" begin="3" end="3" resetval="0" description="Transmit Frame-Synchronization Polarity" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FSXP_0" description="Frame-sync pulse FSX is active high"/>
      <bitenum value="1" id="1" token="FSXP_1" description="Frame-sync pulse FSX is active low"/>
    </bitfield>
    <bitfield id="FSRP" width="1" begin="2" end="2" resetval="0" description="Receive Frame-Synchronization Polarity" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="FSRP_0" description="Frame-sync pulse FSR is active high"/>
      <bitenum value="1" id="1" token="FSRP_1" description="Frame-sync pulse FSR is active low"/>
    </bitfield>
    <bitfield id="CLKXP" width="1" begin="1" end="1" resetval="0" description="Transmit Clock Polarity" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLKXP_0" description="Transmit data driven on rising edge of CLKX"/>
      <bitenum value="1" id="1" token="CLKXP_1" description="Transmit data driven on falling edge of CLKX"/>
    </bitfield>
    <bitfield id="CLKRP" width="1" begin="0" end="0" resetval="0" description="Receive Clock Polarity" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLKRP_0" description="Receive data sampled on falling edge of CLKR"/>
      <bitenum value="1" id="1" token="CLKRP_1" description="Receive data sampled on rising edge of CLKR"/>
    </bitfield>
  </register>
  <register id="MCBSPLP_RCERC_REG" acronym="MCBSPLP_RCERC_REG" offset="0x4C" width="32" description="McBSPLP receive channel enable register partition C">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RCERC" width="16" begin="15" end="0" resetval="0x0000" description="Receive Channel Enable RCERC n=0 Disables reception of n-th channel in an even-numbered block in partition C RCERC n=1 Enables reception of n-th channel in an even-numbered block in partition C" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_RCERD_REG" acronym="MCBSPLP_RCERD_REG" offset="0x50" width="32" description="McBSPLP receive channel enable register partition D">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RCERD" width="16" begin="15" end="0" resetval="0x0000" description="Receive Channel Enable RCERD n=0 Disables reception of n-th channel in an even-numbered block in partition D RCERD n=1 Enables reception of n-th channel in an even-numbered block in partition D" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_XCERC_REG" acronym="MCBSPLP_XCERC_REG" offset="0x54" width="32" description="McBSPLP transmit channel enable register partition C">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XCERC" width="16" begin="15" end="0" resetval="0x0000" description="Transmit Channel Enable XCERC n=0 Disables transmission of n-th channel in an event-numbered block in partition C XCERC n=1 Enables transmission of n-th channel in an event-numbered block in partition C" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_XCERD_REG" acronym="MCBSPLP_XCERD_REG" offset="0x58" width="32" description="McBSPLP transmit channel enable register partition D">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XCERD" width="16" begin="15" end="0" resetval="0x0000" description="Transmit Channel Enable XCERD n=0 Disables transmission of n-th channel in an even-numbered block in partition D XCERD n=1 Enables transmission of n-th channel in an even-numbered block in partition D" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_RCERE_REG" acronym="MCBSPLP_RCERE_REG" offset="0x5C" width="32" description="McBSPLP receive channel enable register partition E">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RCERE" width="16" begin="15" end="0" resetval="0x0000" description="Receive Channel Enable RCERE n=0 Disables reception of n-th channel in an even-numbered block in partition E RCERE n=1 Enables reception of n-th channel in an even-numbered block in partition E" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_RCERF_REG" acronym="MCBSPLP_RCERF_REG" offset="0x60" width="32" description="McBSPLP receive channel enable register partition F">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RCERF" width="16" begin="15" end="0" resetval="0x0000" description="Receive Channel Enable RCERF n=0 Disables reception of n-th channel in an even-numbered block in partition F RCERF n=1 Enables reception of n-th channel in an even-numbered block in partition F" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_XCERE_REG" acronym="MCBSPLP_XCERE_REG" offset="0x64" width="32" description="McBSPLP transmit channel enable register partition E">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XCERE" width="16" begin="15" end="0" resetval="0x0000" description="Transmit Channel Enable XCERE n=0 Disables transmission of n-th channel in an event-numbered block in partition E XCERE n=1 Enables transmission of n-th channel in an event-numbered block in partition E" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_XCERF_REG" acronym="MCBSPLP_XCERF_REG" offset="0x68" width="32" description="McBSPLP transmit channel enable register partition F">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XCERF" width="16" begin="15" end="0" resetval="0x0000" description="Transmit Channel Enable XCERF n=0 Disables transmission of n-th channel in an even-numbered block in partition F XCERF n=1 Enables transmission of n-th channel in an even-numbered block in partition F" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_RCERG_REG" acronym="MCBSPLP_RCERG_REG" offset="0x6C" width="32" description="McBSPLP receive channel enable register partition G">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RCERG" width="16" begin="15" end="0" resetval="0x0000" description="Receive Channel Enable RCERG n=0 Disables reception of n-th channel in an even-numbered block in partition G RCERG n=1 Enables reception of n-th channel in an even-numbered block in partition G" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_RCERH_REG" acronym="MCBSPLP_RCERH_REG" offset="0x70" width="32" description="McBSPLP receive channel enable register partition H">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RCERH" width="16" begin="15" end="0" resetval="0x0000" description="Receive Channel Enable RCERH n=0 Disables reception of n-th channel in an even-numbered block in partition H RCERH n=1 Enables reception of n-th channel in an even-numbered block in partition H" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_XCERG_REG" acronym="MCBSPLP_XCERG_REG" offset="0x74" width="32" description="McBSPLP transmit channel enable register partition G">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XCERG" width="16" begin="15" end="0" resetval="0x0000" description="Transmit Channel Enable XCERG n=0 Disables transmission of n-th channel in an event-numbered block in partition G XCERG n=1 Enables transmission of n-th channel in an event-numbered block in partition G" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_XCERH_REG" acronym="MCBSPLP_XCERH_REG" offset="0x78" width="32" description="McBSPLP transmit channel enable register partition H">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XCERH" width="16" begin="15" end="0" resetval="0x0000" description="Transmit Channel Enable XCERH n=0 Disables transmission of n-th channel in an even-numbered block in partition H XCERH n=1 Enables transmission of n-th channel in an even-numbered block in partition H" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_REV_REG" acronym="MCBSPLP_REV_REG" offset="0x7C" width="32" description="MCBSPLP Revision number register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="REV" width="8" begin="7" end="0" resetval="0x11" description="Revision number" range="" rwaccess="R"/>
  </register>
  <register id="MCBSPLP_RINTCLR_REG" acronym="MCBSPLP_RINTCLR_REG" offset="0x80" width="32" description="McBSPLP receive interrupt clear">
    <bitfield id="RINTCLR" width="32" begin="31" end="0" resetval="0x0000 0000" description="Read from this register will clear the IRQ generated by receive end-of-frame indication or MCBSPLP.FSR detection. Write to this register has no effect. (legacy)" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_XINTCLR_REG" acronym="MCBSPLP_XINTCLR_REG" offset="0x84" width="32" description="McBSPLP transmit interrupt clear (legacy)">
    <bitfield id="XINTCLR" width="32" begin="31" end="0" resetval="0x0000 0000" description="Read from this register will clear the IRQ generated by transmit end-of-frame indication or MCBSPLP.FSX detection. Write to this register has no effect." range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_ROVFLCLR_REG" acronym="MCBSPLP_ROVFLCLR_REG" offset="0x88" width="32" description="McBSPLP receive overflow interrupt clear">
    <bitfield id="ROVFLCLR" width="32" begin="31" end="0" resetval="0x0000 0000" description="Read from this register will clear the IRQ generated by the receive overflow condition. Write to this register has no effect." range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_SYSCONFIG_REG" acronym="MCBSPLP_SYSCONFIG_REG" offset="0x8C" width="32" description="McBSPLP System Configuration register">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0x000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CLOCKACTIVITY" width="2" begin="9" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="CLOCKACTIVITY_0" description="The MCBSPi_ICLK clock can be switched off. The PRCM functional clock can be switched off."/>
      <bitenum value="1" id="1" token="CLOCKACTIVITY_1" description="The MCBSPi_ICLK clock must be maintained during wakeup. The PRCM functional clock can be switched off."/>
      <bitenum value="2" id="2" token="CLOCKACTIVITY_2" description="The MCBSPi_ICLK clock can be switched off. The PRCM functional clock must be maintained during wakeup."/>
      <bitenum value="3" id="3" token="CLOCKACTIVITY_3" description="The MCBSPi_ICLK clock must be maintained during wakeup. The PRCM functional clock must be maintained during wakeup"/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="SIDLEMODE" width="2" begin="4" end="3" resetval="0x0" description="Slave interface power management, req/ack control:" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SIDLEMODE_0" description="Force-idle. An idle request is acknowledged unconditionally."/>
      <bitenum value="1" id="1" token="SIDLEMODE_1" description="No-idle. An idle request is never acknowledged."/>
      <bitenum value="2" id="2" token="SIDLEMODE_2" description="Smart-idle. Acknowledgement to an idle request is given based on the internal activity of the module"/>
      <bitenum value="3" id="3" token="SIDLEMODE_3" description="Reserved"/>
    </bitfield>
    <bitfield id="ENAWAKEUP" width="1" begin="2" end="2" resetval="0" description="WakeUp feature control:" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ENAWAKEUP_0" description="WakeUp is disabled"/>
      <bitenum value="1" id="1" token="ENAWAKEUP_1" description="WakeUp capability is enabled"/>
    </bitfield>
    <bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0" description="McBSPLP global software reset" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="SOFTRESET_0" description="NO soft reset"/>
      <bitenum value="1" id="1" token="SOFTRESET_1" description="Soft reset triggered"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0" description="Reserved" range="" rwaccess="R"/>
  </register>
  <register id="MCBSPLP_THRSH2_REG" acronym="MCBSPLP_THRSH2_REG" offset="0x90" width="32" description="McBSPLP transmit buffer threshold (DMA or IRQ trigger)">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XTHRESHOLD" width="7" begin="6" end="0" resetval="0x00" description="Transmit buffer threshold value. The DMA request (if enabled) of interrupt assertion (if enabled) will be triggered if the number of free locations inside transmit buffer are above or equal to the XTHRESHOLD value + 1. Also, this value (XTHRESHOLD value + 1) indicates the number of words transferred during a transmit data DMA request, if transmit DMA is enabled" range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_THRSH1_REG" acronym="MCBSPLP_THRSH1_REG" offset="0x94" width="32" description="McBSPLP receive buffer threshold (DMA or IRQ trigger)">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0x0000000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RTHRESHOLD" width="7" begin="6" end="0" resetval="0x00" description="Receive buffer threshold value. The DMA request (if enabled) of interrupt assertion (if enabled) will be triggered if the number of occupied locations inside receive buffer are above or equal to the RTHRESHOLD value + 1. Also, this value (RTHRESHOLD value + 1) indicates the number of words transferred during a receive data DMA request, if receive DMA is enabled." range="" rwaccess="RW"/>
  </register>
  <register id="MCBSPLP_IRQSTATUS_REG" acronym="MCBSPLP_IRQSTATUS_REG" offset="0xA0" width="32" description="McBSPLP Interrupt Status register (interconnect compliant IRQ line)">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x00000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XEMPTYEOF" width="1" begin="14" end="14" resetval="0" description="Transmit Buffer Empty at end of frame (XEMPTYEOF is set to 1 when a complete frame was transmitted and the transmit buffer is empty)." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XEMPTYEOF_0" description="XEMPTYEOF is NOT set to when a complete frame was transmitted and the transmit buffer is empty"/>
      <bitenum value="1" id="1" token="XEMPTYEOF_1" description="XEMPTYEOF is set to 1 when a complete frame was transmitted and the transmit buffer is empty. Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="13" end="13" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XOVFLSTAT" width="1" begin="12" end="12" resetval="0" description="Transmit Buffer Overflow (XOVFLSTAT bit is set to 1 when transmit buffer overflow; the data which is written while overflow condition is discarded). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XOVFLSTAT_0" description="Transmit buffer NOT overflow"/>
      <bitenum value="1" id="1" token="XOVFLSTAT_1" description="Transmit buffer overflow; Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="XUNDFLSTAT" width="1" begin="11" end="11" resetval="0" description="Transmit Buffer Underflow (XUNDFLSTAT bit is set to 1 when the transmit data buffer is empty new data is required to be transmitted). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XUNDFLSTAT_0" description="the transmit data buffer is NOT empty new data is required to be transmitted."/>
      <bitenum value="1" id="1" token="XUNDFLSTAT_1" description="the transmit data buffer is empty new data is required to be transmitted. Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="XRDY" width="1" begin="10" end="10" resetval="0" description="Transmit Buffer Threshold Reached (XRDY bit is set to 1 when the transmit buffer free locations are equal or above the THRSH2_REG value). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XRDY_0" description="Transmit buffer occupied locations are below the THRSH2_REG value)."/>
      <bitenum value="1" id="1" token="XRDY_1" description="Transmit buffer occupied locations are equal or above the THRSH2_REG value). Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="XEOF" width="1" begin="9" end="9" resetval="0" description="Transmit End Of Frame (XEOF is set to 1 when a complete frame was transmitted). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XEOF_0" description="complete frame was NOT transmitted"/>
      <bitenum value="1" id="1" token="XEOF_1" description="complete frame was transmitted; Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="XFSX" width="1" begin="8" end="8" resetval="0" description="Transmit Frame Synchronization (XFSX bit is set to 1 when a new transmit frame synchronization is asserted). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XFSX_0" description="new transmit frame synchronization is NOT asserted"/>
      <bitenum value="1" id="1" token="XFSX_1" description="new transmit frame synchronization is asserted; Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="XSYNCERR" width="1" begin="7" end="7" resetval="0" description="Transmit Frame Synchronization Error (XSYNCERR is set to 1 when a transmit frame-sync error is detected). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XSYNCERR_0" description="Transmit frame-sync error is NOT detected"/>
      <bitenum value="1" id="1" token="XSYNCERR_1" description="Transmit frame-sync error is detected. Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ROVFLSTAT" width="1" begin="5" end="5" resetval="0" description="Receive Buffer Overflow (ROVFLSTAT bit is set to 1 when receive buffer overflow; the data which is written while overflow condition is discarded). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ROVFLSTAT_0" description="receive buffer NOT overflow"/>
      <bitenum value="1" id="1" token="ROVFLSTAT_1" description="receive buffer overflow; Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="RUNDFLSTAT" width="1" begin="4" end="4" resetval="0" description="Receive Buffer Underflow (RUNDFLSTAT bit is set to 1 when read operation is performed to the receive data register while receive buffer is empty; data read while underflow condition is undefined). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RUNDFLSTAT_0" description="read operation is performed to the receive data register while receive buffer is NOT empty"/>
      <bitenum value="1" id="1" token="RUNDFLSTAT_1" description="read operation is performed to the receive data register while receive buffer is empty; Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="RRDY" width="1" begin="3" end="3" resetval="0" description="Receive Buffer Threshold Reached (RRDY bit is set to 1 when the receive buffer occupied locations are equal or above the THRSH1_REG value). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RRDY_0" description="receive buffer occupied locations are below the THRSH1_REG value)."/>
      <bitenum value="1" id="1" token="RRDY_1" description="receive buffer occupied locations are equal or above the THRSH1_REG value). Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="REOF" width="1" begin="2" end="2" resetval="0" description="Receive End Of Frame (REOF is set to 1 when a complete frame was received). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="REOF_0" description="complete frame was NOT received"/>
      <bitenum value="1" id="1" token="REOF_1" description="complete frame was received; Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="RFSR" width="1" begin="1" end="1" resetval="0" description="Receive Frame Synchronization (RFSR bit is set to 1 when a new receive frame synchronization is asserted). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RFSR_0" description="new receive frame synchronization is NOT asserted"/>
      <bitenum value="1" id="1" token="RFSR_1" description="new receive frame synchronization is asserted; Writing 1 to this bit clears the bit."/>
    </bitfield>
    <bitfield id="RSYNCERR" width="1" begin="0" end="0" resetval="0" description="Receive Frame Synchronization Error (RSYNCERR is set to 1 when a receive frame-sync error is detected). Writing 1 to this bit clears the bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RSYNCERR_0" description="Receive frame-synchronization error is NOT detected"/>
      <bitenum value="1" id="1" token="RSYNCERR_1" description="Receive frame-synchronization error is detected. Writing 1 to this bit clears the bit."/>
    </bitfield>
  </register>
  <register id="MCBSPLP_IRQENABLE_REG" acronym="MCBSPLP_IRQENABLE_REG" offset="0xA4" width="32" description="McBSPLP Interrupt Enable register (interconnect compliant IRQ line)">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x00000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XEMPTYEOFEN" width="1" begin="14" end="14" resetval="0" description="Transmit buffer empty at end of frame enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XEMPTYEOFEN_0" description="Transmit Buffer Empty at End Of Frame NOT enabled"/>
      <bitenum value="1" id="1" token="XEMPTYEOFEN_1" description="Transmit Buffer Empty at End Of Frame enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="13" end="13" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XOVFLEN" width="1" begin="12" end="12" resetval="0" description="Transmit Buffer Overflow enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XOVFLEN_0" description="Transmit Buffer Overflow NOT enabled"/>
      <bitenum value="1" id="1" token="XOVFLEN_1" description="Transmit Buffer Overflow enabled"/>
    </bitfield>
    <bitfield id="XUNDFLEN" width="1" begin="11" end="11" resetval="0" description="Transmit Buffer Underflow enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XUNDFLEN_0" description="Transmit Buffer Underflow NOT enabled"/>
      <bitenum value="1" id="1" token="XUNDFLEN_1" description="Transmit Buffer Underflow enabled"/>
    </bitfield>
    <bitfield id="XRDYEN" width="1" begin="10" end="10" resetval="0" description="Transmit Buffer Threshold Reached enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XRDYEN_0" description="Transmit Buffer Threshold Reached NOT enabled"/>
      <bitenum value="1" id="1" token="XRDYEN_1" description="Transmit Buffer Threshold Reached enabled"/>
    </bitfield>
    <bitfield id="XEOFEN" width="1" begin="9" end="9" resetval="0" description="Transmit End Of Frame enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XEOFEN_0" description="Transmit End Of Frame NOT enabled"/>
      <bitenum value="1" id="1" token="XEOFEN_1" description="Transmit End Of Frame enabled"/>
    </bitfield>
    <bitfield id="XFSXEN" width="1" begin="8" end="8" resetval="0" description="Transmit Frame Synchronization enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XFSXEN_0" description="Transmit Frame Synchronization NOT enabled"/>
      <bitenum value="1" id="1" token="XFSXEN_1" description="Transmit Frame Synchronization enabled"/>
    </bitfield>
    <bitfield id="XSYNCERREN" width="1" begin="7" end="7" resetval="0" description="Transmit Frame Synchronization Error enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XSYNCERREN_0" description="Transmit Frame Synchronization Error NOT enabled"/>
      <bitenum value="1" id="1" token="XSYNCERREN_1" description="Transmit Frame Synchronization Error enabled"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="6" end="6" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="ROVFLEN" width="1" begin="5" end="5" resetval="0" description="Receive Buffer Overflow enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="ROVFLEN_0" description="Receive Buffer Overflow NOT enabled"/>
      <bitenum value="1" id="1" token="ROVFLEN_1" description="Receive Buffer Overflow enabled"/>
    </bitfield>
    <bitfield id="RUNDFLEN" width="1" begin="4" end="4" resetval="0" description="Receive Buffer Underflow enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RUNDFLEN_0" description="Receive Buffer Underflow NOT enabled"/>
      <bitenum value="1" id="1" token="RUNDFLEN_1" description="Receive Buffer Underflow enabled"/>
    </bitfield>
    <bitfield id="RRDYEN" width="1" begin="3" end="3" resetval="0" description="Receive Buffer Threshold enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RRDYEN_0" description="Receive Buffer Threshold NOT enabled"/>
      <bitenum value="1" id="1" token="RRDYEN_1" description="Receive Buffer Threshold enabled"/>
    </bitfield>
    <bitfield id="REOFEN" width="1" begin="2" end="2" resetval="0" description="Receive End Of Frame enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="REOFEN_0" description="Receive End Of Frame NOT enabled"/>
      <bitenum value="1" id="1" token="REOFEN_1" description="Receive End Of Frame enabled"/>
    </bitfield>
    <bitfield id="RFSREN" width="1" begin="1" end="1" resetval="0" description="Receive Frame Synchronization enable bit. RW" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RFSREN_0" description="Receive Frame Synchronization NOT enabled"/>
      <bitenum value="1" id="1" token="RFSREN_1" description="Receive Frame Synchronization enabled"/>
    </bitfield>
    <bitfield id="RSYNCERREN" width="1" begin="0" end="0" resetval="0" description="Receive Frame Synchronization Error enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RSYNCERREN_0" description="Receive Frame Synchronization Error NOT enabled"/>
      <bitenum value="1" id="1" token="RSYNCERREN_1" description="Receive Frame Synchronization Error enabled"/>
    </bitfield>
  </register>
  <register id="MCBSPLP_WAKEUPEN_REG" acronym="MCBSPLP_WAKEUPEN_REG" offset="0xA8" width="32" description="McBSPLP Wakeup Enable register">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0x00000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XEMPTYEOFEN" width="1" begin="14" end="14" resetval="0" description="Transmit Buffer Empty at End Of Frame enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XEMPTYEOFEN_0" description="Transmit Buffer Empty at End Of Frame WK enable is NOT active"/>
      <bitenum value="1" id="1" token="XEMPTYEOFEN_1" description="Transmit Buffer Empty at End Of Frame WK enable is active"/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="13" end="11" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XRDYEN" width="1" begin="10" end="10" resetval="0" description="Transmit Buffer Threshold Reached WK enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XRDYEN_0" description="Transmit Buffer Threshold WK enable is NOT active"/>
      <bitenum value="1" id="1" token="XRDYEN_1" description="Transmit Buffer Threshold WK enable is active"/>
    </bitfield>
    <bitfield id="XEOFEN" width="1" begin="9" end="9" resetval="0" description="Transmit End Of Frame WK enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XEOFEN_0" description="Transmit End Of Frame WK enable is NOT active"/>
      <bitenum value="1" id="1" token="XEOFEN_1" description="Transmit End Of Frame WK enable is active"/>
    </bitfield>
    <bitfield id="XFSXEN" width="1" begin="8" end="8" resetval="0" description="Transmit Frame Synchronization WK enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XFSXEN_0" description="Transmit Frame Synchronization WK enable is NOT active"/>
      <bitenum value="1" id="1" token="XFSXEN_1" description="Transmit Frame Synchronization WK enable is active"/>
    </bitfield>
    <bitfield id="XSYNCERREN" width="1" begin="7" end="7" resetval="0" description="Transmit Frame Synchronization Error WK enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XSYNCERREN_0" description="Transmit Frame Synchronization Error WK enable is NOT active"/>
      <bitenum value="1" id="1" token="XSYNCERREN_1" description="Transmit Frame Synchronization Error WK enable is active"/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="6" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RRDYEN" width="1" begin="3" end="3" resetval="0" description="Receive Buffer Threshold wakeup enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RRDYEN_0" description="Receive Buffer Threshold WK enable is NOT active"/>
      <bitenum value="1" id="1" token="RRDYEN_1" description="Receive Buffer Threshold WK enable is active"/>
    </bitfield>
    <bitfield id="REOFEN" width="1" begin="2" end="2" resetval="0" description="Receive End Of Frame WK enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="REOFEN_0" description="Receive End Of Frame WK enable is NOT active"/>
      <bitenum value="1" id="1" token="REOFEN_1" description="Receive End Of Frame WK enable is active"/>
    </bitfield>
    <bitfield id="RFSREN" width="1" begin="1" end="1" resetval="0" description="Receive Frame Synchronization WK enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RFSREN_0" description="Receive Frame Synchronization WK enable is NOT active"/>
      <bitenum value="1" id="1" token="RFSREN_1" description="Receive Frame Synchronization WK enable is active"/>
    </bitfield>
    <bitfield id="RSYNCERREN" width="1" begin="0" end="0" resetval="0" description="Receive Frame Synchronization Error WK enable bit." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RSYNCERREN_0" description="Receive Frame Synchronization Error WK enable is NOT active"/>
      <bitenum value="1" id="1" token="RSYNCERREN_1" description="Receive Frame Synchronization Error WK enable is active"/>
    </bitfield>
  </register>
  <register id="MCBSPLP_XCCR_REG" acronym="MCBSPLP_XCCR_REG" offset="0xAC" width="32" description="McBSPLP transmit configuration control register">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="EXTCLKGATE" width="1" begin="15" end="15" resetval="0" description="External clock gating enable (CLKX and FSX master only). When this bit is set and the transmit clock and FSX are set as output, the CLKX is enabled when FSX is active plus 3 clock cycles after (clock is provided for FWID + 4 clock cycles, assuming that the FSX width, active, is FWID + 1 clock cycles); outside this window the external transmit clock is gated. The receive use the same gated transmit clock and transmit frame synchronization signals regardless of the CLKRM/FSRM settings. When using this mode the frame synchronization signal must be active during reception of the entire frame (FWID must be programmed accordingly) to ensure the proper receive process, which requires at least 3 cycles after the frame complete to transfer the data into the receive buffer." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="EXTCLKGATE_0" description="External clock gating disabled."/>
      <bitenum value="1" id="1" token="EXTCLKGATE_1" description="External clock gating enable."/>
    </bitfield>
    <bitfield id="PPCONNECT" width="1" begin="14" end="14" resetval="0" description="Pair to pair connection. When set the DXENO pin is always set to 0 regardless of the frame boundary, setting the tree state buffer as output" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="PPCONNECT_0" description="Pair to pair connection. When set the DXENO pin is always set to 0 regardless of the frame boundary, setting the tree state buffer as output"/>
      <bitenum value="1" id="1" token="PPCONNECT_1" description="Pair to pair connection. When set the DXENO pin is always set to 0 regardless of the frame boundary, setting the tree state buffer as output"/>
    </bitfield>
    <bitfield id="DXENDLY" width="2" begin="13" end="12" resetval="0x1" description="When DXENA bit in SPCR1 is set to 1 this field selects the added delay as follow:" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DXENDLY_0" description="80 ps"/>
      <bitenum value="1" id="1" token="DXENDLY_1" description="160 ps (default)"/>
      <bitenum value="2" id="2" token="DXENDLY_2" description="240 ps"/>
      <bitenum value="3" id="3" token="DXENDLY_3" description="320 ps"/>
    </bitfield>
    <bitfield id="XFULL_CYCLE" width="1" begin="11" end="11" resetval="0" description="Transmit full-cycle mode select." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XFULL_CYCLE_0" description="McBSPLP operates in transmit half-cycle mode (transmit frame synchronization is sampled by the opposite edge of the clock used to drive transmit data)."/>
      <bitenum value="1" id="1" token="XFULL_CYCLE_1" description="McBSPLP operates in transmit full-cycle mode (transmit frame synchronization is sampled by the same edge of the clock used to drive transmit data)."/>
    </bitfield>
    <bitfield id="RESERVED" width="5" begin="10" end="6" resetval="0x00" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DLB" width="1" begin="5" end="5" resetval="0" description="Digital Loop-Back" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="DLB_0" description="No DLB"/>
      <bitenum value="1" id="1" token="DLB_1" description="DLB"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="4" end="4" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XDMAEN" width="1" begin="3" end="3" resetval="1" description="Transmit DMA Enable bit. When set to 0 this bit will gate the external transmit DMA request, without resetting the DMA state machine. It is recommended to change this bit value only during transmit reset." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XDMAEN_0" description="When set to 0 this bit will gate the external transmit DMA request,"/>
      <bitenum value="1" id="1" token="XDMAEN_1" description="When set to 1 this bit will NOT gate the external transmit DMA request,"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="2" end="1" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XDISABLE" width="1" begin="0" end="0" resetval="0" description="Transmit Disable bit. When this bit is set the transmit process will stop at the next frame boundary." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="XDISABLE_0" description="The transmit process will NOT stop at the next frame boundary."/>
      <bitenum value="1" id="1" token="XDISABLE_1" description="The transmit process will stop at the next frame boundary."/>
    </bitfield>
  </register>
  <register id="MCBSPLP_RCCR_REG" acronym="MCBSPLP_RCCR_REG" offset="0xB0" width="32" description="McBSPLP receive configuration control register">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x00000" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RFULL_CYCLE" width="1" begin="11" end="11" resetval="1" description="Receive full-cycle mode select." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RFULL_CYCLE_0" description="McBSPLP operates in receive half-cycle mode (receive frame synchronization is sampled by the opposite edge of the clock used to sample receive data)."/>
      <bitenum value="1" id="1" token="RFULL_CYCLE_1" description="McBSPLP operates in receive full-cycle mode (receive frame synchronization is sampled by the same edge of the clock used to sample receive data)."/>
    </bitfield>
    <bitfield id="RESERVED" width="7" begin="10" end="4" resetval="0x00" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RDMAEN" width="1" begin="3" end="3" resetval="1" description="Receive DMA Enable bit. When set to 0 this bit will gate the external transmit DMA request, without resetting the DMA state machine. It is recommended to change this bit value only during receive reset." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RDMAEN_0" description="When set to 0 this bit will gate the external transmit DMA request"/>
      <bitenum value="1" id="1" token="RDMAEN_1" description="When set to 1 this bit will NOT gate the external transmit DMA request"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="2" end="1" resetval="0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RDISABLE" width="1" begin="0" end="0" resetval="0" description="Receive Disable bit. When this bit is set the receive process will stop at the next frame boundary." range="" rwaccess="RW">
      <bitenum value="0" id="0" token="RDISABLE_0" description="the receive process will NOT stop at the next frame boundary."/>
      <bitenum value="1" id="1" token="RDISABLE_1" description="When this bit is set the receive process will stop at the next frame boundary."/>
    </bitfield>
  </register>
  <register id="MCBSPLP_XBUFFSTAT_REG" acronym="MCBSPLP_XBUFFSTAT_REG" offset="0xB4" width="32" description="McBSPLP transmit buffer status">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="XBUFFSTAT" width="8" begin="7" end="0" resetval="0x80" description="Transmit Buffer Status (indicates the number of free locations inside transmit buffer). The XBUFFSTAT value reflects the buffer status on the interface clock domain and it can be smaller than the number of free locations which are seen by the transmit state machine." range="" rwaccess="R"/>
  </register>
  <register id="MCBSPLP_RBUFFSTAT_REG" acronym="MCBSPLP_RBUFFSTAT_REG" offset="0xB8" width="32" description="McBSPLP receive buffer status">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RBUFFSTAT" width="8" begin="7" end="0" resetval="0x00" description="Receive Buffer Status (indicates the number of occupied locations inside receive buffer). The RBUFFSTAT value reflects the buffer status on the interface clock domain and it can be smaller than the real number of the occupied locations which are seen by the receive state machine." range="" rwaccess="R"/>
  </register>
</module>
