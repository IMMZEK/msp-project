import * as sinon from 'sinon';
import { CommonParams } from './util';
import { Mode, ValidationType } from '../lib/appConfig';
import { Metadata } from '../test/integration-tests/database-utils';
export declare function createMockCommonParams({ metadata, triggerEventSpy }: {
    metadata?: Metadata;
    triggerEventSpy?: sinon.SinonSpy;
}): Promise<CommonParams>;
export declare function getLocalServerConfig(): {
    mode: Mode;
    validationType: ValidationType;
    refreshDB: "true" | "false";
    allowRefreshFromWeb: "true" | "false";
    useConsole: "true" | "false";
    dcontrol: any;
    serverMode: "http" | "both" | "https";
    allowExit: boolean;
    preset: string;
    myHttpPort?: string | undefined;
    contentPath: string;
    dbPath: string;
    seoPath: string;
    dbTablePrefix: string;
    logsDir: string;
    contentPackagesConfig: string;
    packageAuxDataFile: string;
    remoteBundleZips: string;
    localBundleZips: string;
    sysconfigTestServerURL: string;
    myRole: string;
    mailingList: string;
    handoffServer: boolean;
    downloadServer: boolean;
    testingServer: boolean;
    webComponentsServer: string;
    ccsCloudUrl: string;
    seaportHostIP: string;
    seaportPort: string;
    deleteContent?: boolean | undefined;
    deleteDb?: boolean | undefined;
    dbResourcePrefix: string;
    relocatePackages?: boolean | undefined;
    remoteserverHost?: string | undefined;
    ccs_port?: string | undefined;
    packageGroupsConfigFile?: string | undefined;
    serveContentFromFs?: boolean | undefined;
    enableMetricsMiddleware?: boolean | undefined;
    rex3Config?: string | undefined;
    http_proxy?: string | undefined;
    isTheia?: boolean | undefined;
    handoffChecklistsFolder: string;
    buHandoffTestingServer: boolean;
};
