import { FilterData, PackageData, PackageGroupData } from '../../frontend/apis/filter-types';
import { NodesHarness, ServerDataInput, TableItemHarness } from '../server-harness/initialize-server-harness-data';
import { Nodes, Compiler, Kernel } from '../../shared/routes/response-data';
import { InstalledPackage } from '../../cloudagent/response-data';
interface CompilerFilterData {
    publicId: Compiler;
    name: string;
}
interface KernelFilterData {
    publicId: Kernel;
    name: string;
}
export declare const device1: FilterData.Data;
export declare const device2: FilterData.Data;
export declare const devtool1: FilterData.Data;
export declare const devtool2: FilterData.Data;
export declare const resource1: FilterData.Data;
export declare const kernel1: KernelFilterData;
export declare const kernel2: KernelFilterData;
export declare const compiler1: CompilerFilterData;
export declare const compiler2: CompilerFilterData;
export declare const rootNode = "1";
export declare const packageNode2: NodesHarness.PackageFolderNodeData;
export declare const packageNode3: NodesHarness.PackageFolderNodeData;
export declare const packageNode4: NodesHarness.PackageFolderNodeData;
export declare const packageNode51: NodesHarness.PackageFolderNodeData;
export declare const packageNode52: NodesHarness.PackageFolderNodeData;
export declare const packageNode53: NodesHarness.PackageFolderNodeData;
export declare const packageNode54: NodesHarness.PackageFolderNodeData;
export declare const packageNode55: NodesHarness.PackageFolderNodeData;
export declare const packageNode56: NodesHarness.PackageFolderNodeData;
export declare const packageNode57: NodesHarness.PackageFolderNodeData;
export declare const packageNode58: NodesHarness.PackageFolderNodeData;
export declare const packageNode61: NodesHarness.PackageFolderNodeData;
export declare const packageNode62: NodesHarness.PackageFolderNodeData;
export declare const packageNode71: NodesHarness.PackageFolderNodeData;
export declare const packageNode72: NodesHarness.PackageFolderNodeData;
export declare const package2: PackageData;
export declare const package3: PackageData;
export declare const package4: PackageData;
export declare const package51: PackageData;
export declare const package52: PackageData;
export declare const package53: PackageData;
export declare const package54: PackageData;
export declare const package55: PackageData;
export declare const package56: PackageData;
export declare const package57: PackageData;
export declare const package58: PackageData;
export declare const package61: PackageData;
export declare const package62: PackageData;
export declare const package71: {
    packageType: Nodes.PackageType;
    name: string;
    packageVersion: string;
    packageGroupPublicUids: string[];
    packagePublicId: string;
    packagePublicUid: string;
    dependencies: import("../../shared/routes/response-data").PackageDependency[];
    modules: import("../../shared/routes/response-data").PackageDependency[];
    moduleGroups: import("../../shared/routes/response-data").PackageDependency[];
    moduleGroup?: import("../../lib/dbBuilder/dbTypes").ModuleGroup | undefined;
    downloadUrl: import("../../lib/dbBuilder/dbTypes").PlatformAttribute;
    installCommand: import("../../lib/dbBuilder/dbTypes").PlatformAttribute | null;
    installSize?: import("../../lib/dbBuilder/dbTypes").NumericPlatformAttribute | null | undefined;
    isInstallable: boolean;
    moduleOf?: import("../../lib/dbBuilder/dbTypes").ModuleOf | undefined;
    licenses?: string[] | undefined;
    hideNodeDirPanel?: boolean | undefined;
    aliases: string[];
    subType?: import("../../lib/dbBuilder/dbTypes").PackageSubType | undefined;
    featureType?: import("../../lib/dbBuilder/dbTypes").FeatureType | undefined;
    ccsVersion?: string | undefined;
    ccsInstallLocation?: string | undefined;
};
export declare const package72: {
    packageType: Nodes.PackageType;
    name: string;
    packageVersion: string;
    packageGroupPublicUids: string[];
    packagePublicId: string;
    packagePublicUid: string;
    dependencies: import("../../shared/routes/response-data").PackageDependency[];
    modules: import("../../shared/routes/response-data").PackageDependency[];
    moduleGroups: import("../../shared/routes/response-data").PackageDependency[];
    moduleGroup?: import("../../lib/dbBuilder/dbTypes").ModuleGroup | undefined;
    downloadUrl: import("../../lib/dbBuilder/dbTypes").PlatformAttribute;
    installCommand: import("../../lib/dbBuilder/dbTypes").PlatformAttribute | null;
    installSize?: import("../../lib/dbBuilder/dbTypes").NumericPlatformAttribute | null | undefined;
    isInstallable: boolean;
    moduleOf?: import("../../lib/dbBuilder/dbTypes").ModuleOf | undefined;
    licenses?: string[] | undefined;
    hideNodeDirPanel?: boolean | undefined;
    aliases: string[];
    subType?: import("../../lib/dbBuilder/dbTypes").PackageSubType | undefined;
    featureType?: import("../../lib/dbBuilder/dbTypes").FeatureType | undefined;
    ccsVersion?: string | undefined;
    ccsInstallLocation?: string | undefined;
};
export declare const packageGroup2: PackageGroupData;
export declare const packageGroup3: PackageGroupData;
export declare const packageGroup4: PackageGroupData;
export declare const packageGroup51: PackageGroupData;
export declare const packageGroup52: PackageGroupData;
export declare const packageGroup53: PackageGroupData;
export declare const packageGroup54: PackageGroupData;
export declare const packageGroup55: PackageGroupData;
export declare const packageGroup56: PackageGroupData;
export declare const packageGroup57: PackageGroupData;
export declare const packageGroup58: PackageGroupData;
export declare const packageGroup61: PackageGroupData;
export declare const packageGroup62: PackageGroupData;
export declare const folderNode2: NodesHarness.FolderNodeData;
export declare const folderNode3: NodesHarness.FolderNodeData;
export declare const folderNode4: NodesHarness.FolderNodeData;
export declare const folderNode5: NodesHarness.FolderNodeData;
export declare const folderNode6: NodesHarness.FolderNodeData;
export declare const variant2: TableItemHarness.Variant;
export declare const variant3: TableItemHarness.Variant;
export declare const variant4: TableItemHarness.Variant;
export declare const tableItem1: TableItemHarness.TableItemData;
export declare const tableItem2: TableItemHarness.TableItemData;
export declare const tableItem3: TableItemHarness.TableItemData;
export declare const tableItem4: TableItemHarness.TableItemData;
export declare const tableItem5: TableItemHarness.TableItemData;
export declare const emptyFilterData: ServerDataInput.FilterData;
export declare function getPackageData(packageNode: NodesHarness.PackageFolderNodeData, { packageVersion, packagePublicId }: {
    packageVersion: string;
    packagePublicId: string;
}): PackageData;
export declare function getPackageGroupData(packageNode: NodesHarness.PackageFolderNodeData, { packageGroupVersion, packageGroupPublicId }: {
    packageGroupVersion: string;
    packageGroupPublicId: string;
}): PackageGroupData;
export declare function createInstalledPackageData(pkg: PackageData, localPackagePath: string): InstalledPackage;
export {};
